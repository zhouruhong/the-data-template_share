// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  asmConsts: [],
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) return 0; }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;








//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;


var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}



// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===

Runtime.asmConsts = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 55888;
  /* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__sub_I_parser_cpp() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });
  

/* memory initializer */ allocate([67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,0,0,0,0,0,49,49,83,116,97,116,105,99,69,114,114,111,114,0,0,0,112,163,0,0,32,0,0,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,100,101,99,105,109,97,108,32,112,111,105,110,116,58,32,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,39,69,39,58,32,0,0,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,101,120,112,111,110,101,110,116,32,115,105,103,110,58,32,0,85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,0,0,0,0,0,84,114,117,110,99,97,116,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,0,0,0,77,97,108,102,111,114,109,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,99,104,97,114,97,99,116,101,114,44,32,0,0,0,0,115,104,111,117,108,100,32,98,101,32,104,101,120,58,32,39,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,32,111,117,116,32,111,102,32,97,115,99,105,105,32,114,97,110,103,101,46,0,0,0,84,114,117,110,99,97,116,101,100,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,0,0,0,85,110,107,110,111,119,110,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,58,32,39,0,0,0,0,77,117,108,116,105,45,108,105,110,101,32,99,111,109,109,101,110,116,32,104,97,115,32,110,111,32,116,101,114,109,105,110,97,116,105,110,103,32,42,47,46,0,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,108,101,120,32,116,104,101,32,99,104,97,114,97,99,116,101,114,32,0,0,0,0,99,111,100,101,32,0,0,0,64,0,0,0,0,0,0,0,112,3,0,0,1,0,0,0,2,0,0,0,56,0,0,0,248,255,255,255,112,3,0,0,3,0,0,0,4,0,0,0,192,255,255,255,192,255,255,255,112,3,0,0,5,0,0,0,6,0,0,0,0,0,0,0,60,2,0,0,164,2,0,0,228,2,0,0,248,2,0,0,12,3,0,0,32,3,0,0,204,2,0,0,184,2,0,0,100,2,0,0,80,2,0,0,64,0,0,0,0,0,0,0,128,180,0,0,7,0,0,0,8,0,0,0,56,0,0,0,248,255,255,255,128,180,0,0,9,0,0,0,10,0,0,0,192,255,255,255,192,255,255,255,128,180,0,0,11,0,0,0,12,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,96,179,0,0,13,0,0,0,14,0,0,0,192,255,255,255,192,255,255,255,96,179,0,0,15,0,0,0,16,0,0,0,56,0,0,0,0,0,0,0,240,179,0,0,17,0,0,0,18,0,0,0,200,255,255,255,200,255,255,255,240,179,0,0,19,0,0,0,20,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,152,163,0,0,40,3,0,0,128,180,0,0,0,0,0,0,0,0,0,0,8,4,0,0,21,0,0,0,22,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,152,163,0,0,192,3,0,0,232,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,0,0,0,0,0,0,0,115,122,0,0,0,0,0,0,102,117,110,99,0,0,0,0,112,111,119,0,0,0,0,0,120,0,0,0,0,0,0,0,110,0,0,0,0,0,0,0,102,108,111,111,114,0,0,0,99,101,105,108,0,0,0,0,115,113,114,116,0,0,0,0,115,105,110,0,0,0,0,0,99,111,115,0,0,0,0,0,116,97,110,0,0,0,0,0,97,115,105,110,0,0,0,0,97,99,111,115,0,0,0,0,97,116,97,110,0,0,0,0,116,121,112,101,0,0,0,0,102,105,108,116,101,114,0,0,97,114,114,0,0,0,0,0,111,98,106,101,99,116,72,97,115,0,0,0,0,0,0,0,111,98,106,0,0,0,0,0,102,0,0,0,0,0,0,0,108,101,110,103,116,104,0,0,111,98,106,101,99,116,70,105,101,108,100,115,0,0,0,0,99,111,100,101,112,111,105,110,116,0,0,0,0,0,0,0,115,116,114,0,0,0,0,0,99,104,97,114,0,0,0,0,108,111,103,0,0,0,0,0,101,120,112,0,0,0,0,0,109,97,110,116,105,115,115,97,0,0,0,0,0,0,0,0,101,120,112,111,110,101,110,116,0,0,0,0,0,0,0,0,109,111,100,117,108,111,0,0,97,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,102,111,114,99,101,0,0,0,101,120,116,86,97,114,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,58,32,0,115,116,100,46,106,115,111,110,110,101,116,0,0,0,0,0,47,42,10,67,111,112,121,114,105,103,104,116,32,50,48,49,53,32,71,111,111,103,108,101,32,73,110,99,46,32,65,108,108,32,114,105,103,104,116,115,32,114,101,115,101,114,118,101,100,46,10,10,76,105,99,101,110,115,101,100,32,117,110,100,101,114,32,116,104,101,32,65,112,97,99,104,101,32,76,105,99,101,110,115,101,44,32,86,101,114,115,105,111,110,32,50,46,48,32,40,116,104,101,32,34,76,105,99,101,110,115,101,34,41,59,10,121,111,117,32,109,97,121,32,110,111,116,32,117,115,101,32,116,104,105,115,32,102,105,108,101,32,101,120,99,101,112,116,32,105,110,32,99,111,109,112,108,105,97,110,99,101,32,119,105,116,104,32,116,104,101,32,76,105,99,101,110,115,101,46,10,89,111,117,32,109,97,121,32,111,98,116,97,105,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,76,105,99,101,110,115,101,32,97,116,10,10,32,32,32,32,104,116,116,112,58,47,47,119,119,119,46,97,112,97,99,104,101,46,111,114,103,47,108,105,99,101,110,115,101,115,47,76,73,67,69,78,83,69,45,50,46,48,10,10,85,110,108,101,115,115,32,114,101,113,117,105,114,101,100,32,98,121,32,97,112,112,108,105,99,97,98,108,101,32,108,97,119,32,111,114,32,97,103,114,101,101,100,32,116,111,32,105,110,32,119,114,105,116,105,110,103,44,32,115,111,102,116,119,97,114,101,10,100,105,115,116,114,105,98,117,116,101,100,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,32,105,115,32,100,105,115,116,114,105,98,117,116,101,100,32,111,110,32,97,110,32,34,65,83,32,73,83,34,32,66,65,83,73,83,44,10,87,73,84,72,79,85,84,32,87,65,82,82,65,78,84,73,69,83,32,79,82,32,67,79,78,68,73,84,73,79,78,83,32,79,70,32,65,78,89,32,75,73,78,68,44,32,101,105,116,104,101,114,32,101,120,112,114,101,115,115,32,111,114,32,105,109,112,108,105,101,100,46,10,83,101,101,32,116,104,101,32,76,105,99,101,110,115,101,32,102,111,114,32,116,104,101,32,115,112,101,99,105,102,105,99,32,108,97,110,103,117,97,103,101,32,103,111,118,101,114,110,105,110,103,32,112,101,114,109,105,115,115,105,111,110,115,32,97,110,100,10,108,105,109,105,116,97,116,105,111,110,115,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,46,10,42,47,10,10,47,42,32,84,104,105,115,32,105,115,32,116,104,101,32,74,115,111,110,110,101,116,32,115,116,97,110,100,97,114,100,32,108,105,98,114,97,114,121,44,32,97,116,32,108,101,97,115,116,32,116,104,101,32,112,97,114,116,115,32,111,102,32,105,116,32,116,104,97,116,32,97,114,101,32,119,114,105,116,116,101,110,32,105,110,32,74,115,111,110,110,101,116,46,10,32,42,10,32,42,32,84,104,101,114,101,32,97,114,101,32,115,111,109,101,32,110,97,116,105,118,101,32,109,101,116,104,111,100,115,32,97,115,32,119,101,108,108,44,32,119,104,105,99,104,32,97,114,101,32,100,101,102,105,110,101,100,32,105,110,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,110,100,32,97,100,100,101,100,32,116,111,32,116,104,105,115,10,32,42,32,102,105,108,101,46,32,32,73,116,32,105,115,32,110,101,118,101,114,32,110,101,99,101,115,115,97,114,121,32,116,111,32,105,109,112,111,114,116,32,115,116,100,46,106,115,111,110,110,101,116,44,32,105,116,32,105,115,32,101,109,98,101,100,100,101,100,32,105,110,116,111,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,116,10,32,42,32,99,111,109,112,105,108,101,45,116,105,109,101,32,97,110,100,32,97,117,116,111,109,97,116,105,99,97,108,108,121,32,105,109,112,111,114,116,101,100,32,105,110,116,111,32,97,108,108,32,111,116,104,101,114,32,74,115,111,110,110,101,116,32,112,114,111,103,114,97,109,115,46,10,32,42,47,10,123,10,10,32,32,32,32,108,111,99,97,108,32,115,116,100,32,61,32,115,101,108,102,44,10,10,32,32,32,32,116,111,83,116,114,105,110,103,40,97,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,32,97,32,101,108,115,101,32,34,34,32,43,32,97,44,10,32,32,32,32,10,32,32,32,32,115,117,98,115,116,114,40,115,116,114,44,32,102,114,111,109,44,32,108,101,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,108,101,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,108,101,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,108,101,110,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,122,101,114,111,44,32,103,111,116,32,34,32,43,32,108,101,110,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,108,101,110,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,32,43,32,102,114,111,109,93,41,41,44,10,10,32,32,32,32,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,93,41,44,10,10,32,32,32,32,115,112,108,105,116,40,115,116,114,44,32,99,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,99,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,99,41,32,33,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,104,97,118,101,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,44,32,97,114,114,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,50,32,61,32,105,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,32,43,32,91,118,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,102,111,114,99,101,40,105,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,100,101,108,105,109,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,114,114,50,32,61,32,97,114,114,32,43,32,91,118,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,97,114,114,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,50,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,50,32,61,32,118,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,118,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,44,32,118,50,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,99,44,32,48,44,32,91,93,44,32,34,34,41,44,10,10,32,32,32,32,114,97,110,103,101,40,102,114,111,109,44,32,116,111,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,116,111,32,45,32,102,114,111,109,32,43,32,49,44,32,102,117,110,99,116,105,111,110,40,105,41,32,105,32,43,32,102,114,111,109,41,44,10,10,32,32,32,32,109,111,100,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,110,117,109,98,101,114,34,32,38,38,32,115,116,100,46,116,121,112,101,40,98,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,111,100,117,108,111,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,102,111,114,109,97,116,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,79,112,101,114,97,116,111,114,32,37,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,111,110,32,116,121,112,101,115,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,32,43,32,34,32,97,110,100,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,32,43,32,34,46,34,44,10,10,32,32,32,32,109,97,112,40,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,38,38,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,102,117,110,99,40,97,114,114,91,105,93,41,41,44,10,10,32,32,32,32,106,111,105,110,40,115,101,112,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,114,114,91,105,93,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,43,49,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,102,105,114,115,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,43,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,97,114,114,91,105,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,43,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,115,101,112,32,43,32,97,114,114,91,105,93,41,59,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,91,93,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,115,116,114,105,110,103,32,111,114,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,44,10,10,32,32,32,32,108,105,110,101,115,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,97,114,114,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,102,111,114,109,97,116,40,115,116,114,44,32,118,97,108,115,41,58,58,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,116,104,101,32,109,105,110,105,45,108,97,110,103,117,97,103,101,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,40,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,33,61,32,34,41,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,32,43,32,49,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,32,43,32,49,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,35,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,97,108,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,122,101,114,111,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,45,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,108,101,102,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,32,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,98,108,97,110,107,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,43,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,115,105,103,110,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,123,32,97,108,116,58,32,102,97,108,115,101,44,32,122,101,114,111,58,32,102,97,108,115,101,44,32,108,101,102,116,58,32,102,97,108,115,101,44,32,98,108,97,110,107,58,32,102,97,108,115,101,44,32,115,105,103,110,58,32,102,97,108,115,101,125,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,38,38,32,115,116,114,91,105,93,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,43,49,44,32,118,58,32,34,42,34,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,49,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,50,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,50,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,51,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,51,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,52,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,52,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,53,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,53,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,54,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,54,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,55,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,55,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,56,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,56,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,57,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,57,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,48,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,46,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,73,103,110,111,114,101,100,44,32,105,102,32,105,116,32,101,120,105,115,116,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,104,34,32,124,124,32,99,32,61,61,32,34,108,34,32,124,124,32,99,32,61,61,32,34,76,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,32,43,32,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,100,34,32,124,124,32,99,32,61,61,32,34,105,34,32,124,124,32,99,32,61,61,32,34,117,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([32,43,32,49,44,32,118,58,32,34,100,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,111,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,88,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,69,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,70,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,71,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,99,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,115,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,37,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,114,101,99,111,103,110,105,115,101,100,32,99,111,110,118,101,114,115,105,111,110,32,116,121,112,101,58,32,34,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,100,32,105,110,105,116,105,97,108,32,37,44,32,110,111,119,32,116,104,101,32,114,101,115,116,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,107,101,121,32,61,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,109,107,101,121,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,99,102,108,97,103,115,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,102,119,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,101,110,95,109,111,100,32,61,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,112,114,101,99,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,116,121,112,101,32,61,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,108,101,110,95,109,111,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,58,32,99,116,121,112,101,46,105,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,107,101,121,58,32,109,107,101,121,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,58,32,99,102,108,97,103,115,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,102,119,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,112,114,101,99,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,116,121,112,101,58,32,99,116,121,112,101,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,112,115,58,32,99,116,121,112,101,46,99,97,112,115,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,97,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,40,99,111,110,116,97,105,110,105,110,103,32,110,111,110,101,32,111,114,32,109,111,114,101,32,37,32,102,111,114,109,97,116,32,116,97,103,115,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,44,32,111,117,116,41,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,117,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,32,61,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,114,46,105,44,32,111,117,116,43,91,114,46,99,111,100,101,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,97,115,116,32,61,32,111,117,116,91,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,112,112,101,110,100,32,61,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,62,32,48,32,38,38,32,115,116,100,46,116,121,112,101,40,108,97,115,116,41,32,61,61,32,34,115,116,114,105,110,103,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,32,43,32,49,44,32,105,102,32,97,112,112,101,110,100,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,108,97,115,116,32,43,32,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,99,41,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,115,32,61,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,48,44,32,91,93,41,59,10,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,70,111,114,109,97,116,32,116,104,101,32,118,97,108,117,101,115,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,47,47,32,85,115,101,102,117,108,32,117,116,105,108,105,116,105,101,115,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,100,105,110,103,40,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,119,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,119,32,60,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,32,45,32,49,44,32,118,32,43,32,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,44,32,34,34,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,108,101,102,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,108,101,102,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,32,43,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,114,105,103,104,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,114,105,103,104,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,40,101,46,103,46,44,32,100,101,99,105,109,97,108,32,111,114,32,111,99,116,97,108,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,114,97,100,105,120,44,32,122,101,114,111,95,112,114,101,102,105,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,122,101,114,111,95,112,114,101,102,105,120,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,114,97,100,105,120,41,41,32,43,32,40,110,32,37,32,114,97,100,105,120,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,50,32,61,32,112,97,100,95,108,101,102,116,40,100,101,99,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,100,101,99,50,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,105,110,32,104,101,120,97,100,101,99,105,109,97,108,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,104,101,120,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,97,100,100,95,122,101,114,111,120,44,32,99,97,112,105,116,97,108,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,117,109,101,114,97,108,115,32,61,32,91,48,44,32,49,44,32,50,44,32,51,44,32,52,44,32,53,44,32,54,44,32,55,44,32,56,44,32,57,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,91,34,65,34,44,32,34,66,34,44,32,34,67,34,44,32,34,68,34,44,32,34,69,34,44,32,34,70,34,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,34,97,34,44,32,34,98,34,44,32,34,99,34,44,32,34,100,34,44,32,34,101,34,44,32,34,102,34,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,49,54,41,41,32,43,32,110,117,109,101,114,97,108,115,91,110,32,37,32,49,54,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,45,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,50,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,50,32,61,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,40,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,34,48,88,34,32,101,108,115,101,32,34,48,120,34,41,32,101,108,115,101,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,112,97,100,95,108,101,102,116,40,104,101,120,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,104,101,120,50,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,115,116,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,93,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,115,117,98,115,116,114,40,115,116,114,44,32,48,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,45,32,49,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,100,101,99,105,109,97,108,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,119,104,111,108,101,32,61,32,115,116,100,46,102,108,111,111,114,40,110,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,111,116,95,115,105,122,101,32,61,32,105,102,32,112,114,101,99,32,61,61,32,48,32,38,38,32,33,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,48,32,101,108,115,101,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,122,101,114,111,95,112,97,100,32,45,32,112,114,101,99,32,45,32,100,111,116,95,115,105,122,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,32,47,32,110,95,32,42,32,119,104,111,108,101,44,32,122,112,44,32,48,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,112,114,101,99,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,105,102,32,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,34,46,34,32,101,108,115,101,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,32,61,32,115,116,100,46,102,108,111,111,114,40,40,110,95,32,45,32,119,104,111,108,101,41,32,42,32,115,116,100,46,112,111,119,40,49,48,44,32,112,114,101,99,41,32,43,32,48,46,53,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,116,114,97,105,108,105,110,103,32,124,124,32,102,114,97,99,32,62,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,95,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,102,114,97,99,44,32,112,114,101,99,44,32,48,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,34,46,34,32,43,32,105,102,32,33,116,114,97,105,108,105,110,103,32,116,104,101,110,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,102,114,97,99,95,115,116,114,41,32,101,108,115,101,32,102,114,97,99,95,115,116,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,115,99,105,101,110,116,105,102,105,99,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,99,97,112,115,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,110,95,95,41,41,32,47,32,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,117,102,102,32,61,32,40,105,102,32,99,97,112,115,32,116,104,101,110,32,34,69,34,32,101,108,115,101,32,34,101,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,114,101,110,100,101,114,95,105,110,116,40,101,120,112,111,110,101,110,116,44,32,51,44,32,48,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,97,110,116,105,115,115,97,32,61,32,110,95,95,32,47,32,115,116,100,46,112,111,119,40,49,48,44,32,101,120,112,111,110,101,110,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,122,101,114,111,95,112,97,100,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,117,102,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,109,97,110,116,105,115,115,97,44,32,122,112,50,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,43,32,115,117,102,102,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,118,97,108,117,101,32,119,105,116,104,32,97,110,32,97,114,98,105,116,114,97,114,121,32,102,111,114,109,97,116,32,99,111,100,101,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,95,111,114,95,110,117,108,108,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,99,111,100,101,46,99,102,108,97,103,115,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,112,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,105,102,32,99,102,108,97,103,115,46,122,101,114,111,32,38,38,32,33,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,32,102,119,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,100,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,49,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,101,114,111,95,112,114,101,102,105,120,32,61,32,105,102,32,99,102,108,97,103,115,46,97,108,116,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,34,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,56,44,32,122,101,114,111,95,112,114,101,102,105,120,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,104,101,120,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,99,97,112,115,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,118,97,108,41,41,47,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,101,120,112,111,110,101,110,116,32,60,32,45,52,32,124,124,32,101,120,112,111,110,101,110,116,32,62,61,32,102,112,112,114,101,99,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,32,61,32,115,116,100,46,109,97,120,40,49,44,32,101,120,112,111,110,101,110,116,43,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,102,112,112,114,101,99,32,45,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,99,104,97,114,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,32,61,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,49,45,115,105,122,101,100,32,115,116,114,105,110,103,32,103,111,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,32,47,32,115,116,114,105,110,103,44,32,103,111,116,58,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,107,110,111,119,110,32,99,111,100,101,58,32,34,32,43,32,99,111,100,101,46,99,116,121,112,101,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,97,114,114,97,121,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,84,111,111,32,109,97,110,121,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,43,32,34,44,32,101,120,112,101,99,116,101,100,32,34,32,43,32,106,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,44,32,118,32,43,32,99,111,100,101,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,32,61,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,99,111,100,101,46,102,119,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,50,32,61,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,105,102,32,116,109,112,46,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,116,109,112,46,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,99,111,100,101,46,112,114,101,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,106,50,32,61,32,116,109,112,50,46,106,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,50,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,50,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,116,109,112,46,102,119,44,32,116,109,112,50,46,112,114,101,99,44,32,106,50,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,50,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,111,98,106,101,99,116,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,99,111,100,101,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,109,107,101,121,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,77,97,112,112,105,110,103,32,107,101,121,115,32,114,101,113,117,105,114,101,100,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,109,107,101,121,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,102,105,101,108,100,32,119,105,100,116,104,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,102,119,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,112,114,101,99,105,115,105,111,110,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,112,114,101,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,111,98,106,44,32,102,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,98,106,91,102,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,32,115,117,99,104,32,102,105,101,108,100,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,59,10,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,91,118,97,108,115,93,44,32,48,44,32,48,44,32,34,34,41,44,10,10,32,32,32,32,102,111,108,100,114,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,117,110,110,105,110,103,50,32,61,32,102,117,110,99,40,97,114,114,91,105,100,120,93,44,32,114,117,110,110,105,110,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,100,120,50,32,61,32,105,100,120,32,45,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,114,117,110,110,105,110,103,50,41,32,38,38,32,115,116,100,46,102,111,114,99,101,40,105,100,120,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,50,44,32,105,100,120,50,41,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,45,32,49,41,44,10,10,32,32,32,32,102,111,108,100,108,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,117,110,110,105,110,103,50,32,61,32,102,117,110,99,40,114,117,110,110,105,110,103,44,32,97,114,114,91,105,100,120,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,100,120,50,32,61,32,105,100,120,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,114,117,110,110,105,110,103,50,41,32,38,38,32,115,116,100,46,102,111,114,99,101,40,105,100,120,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,50,44,32,105,100,120,50,41,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,48,41,44,10,10,10,32,32,32,32,102,105,108,116,101,114,77,97,112,40,102,105,108,116,101,114,95,102,117,110,99,44,32,109,97,112,95,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,116,104,105,114,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,109,97,112,95,102,117,110,99,44,32,115,116,100,46,102,105,108,116,101,114,40,102,105,108,116,101,114,95,102,117,110,99,44,32,97,114,114,41,41,44,10,10,32,32,32,32,97,115,115,101,114,116,69,113,117,97,108,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,97,32,61,61,32,98,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,116,114,117,101,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,46,32,34,32,43,32,97,32,43,32,34,32,33,61,32,34,32,43,32,98,44,10,10,32,32,32,32,97,98,115,40,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,97,98,115,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,62,32,48,32,116,104,101,110,32,110,32,101,108,115,101,32,45,110,44,10,10,32,32,32,32,109,97,120,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,62,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,109,105,110,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,60,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,114,114,115,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,98,41,32,97,32,43,32,98,44,32,97,114,114,115,44,32,91,93,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,73,110,105,40,105,110,105,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,111,100,121,95,108,105,110,101,115,40,98,111,100,121,41,32,61,32,91,32,34,37,115,32,61,32,37,115,34,32,37,32,91,107,44,32,98,111,100,121,91,107,93,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,98,111,100,121,41,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,101,99,116,105,111,110,95,108,105,110,101,115,40,115,110,97,109,101,44,32,115,98,111,100,121,41,32,61,32,91,32,34,91,37,115,93,34,32,37,32,91,115,110,97,109,101,93,32,93,32,43,32,98,111,100,121,95,108,105,110,101,115,40,115,98,111,100,121,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,105,110,95,98,111,100,121,32,61,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,105,110,105,44,32,34,109,97,105,110,34,41,32,116,104,101,110,32,98,111,100,121,95,108,105,110,101,115,40,105,110,105,46,109,97,105,110,41,32,101,108,115,101,32,91,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,108,108,95,115,101,99,116,105,111,110,115,32,61,32,91,115,101,99,116,105,111,110,95,108,105,110,101,115,40,107,44,32,105,110,105,46,115,101,99,116,105,111,110,115,91,107,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,105,110,105,46,115,101,99,116,105,111,110,115,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,109,97,105,110,95,98,111,100,121,32,43,32,115,116,100,46,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,108,108,95,115,101,99,116,105,111,110,115,41,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,92,34,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,92,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,92,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,98,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,98,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,102,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,110,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,114,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,116,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,117,48,48,48,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,48,48,48,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,112,32,61,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,112,32,60,32,51,50,32,124,124,32,99,112,32,62,32,49,50,54,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,37,48,52,120,34,32,37,32,91,99,112,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,92,34,37,115,92,34,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,32,32,32,32,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,115,116,114,41,58,58,32,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,41,44,10,32,32,32,32,32,32,32,32,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,66,97,115,104,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,39,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,39,92,34,39,92,34,39,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,39,37,115,39,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,68,111,108,108,97,114,115,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,36,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,36,36,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,105,101,108,100,115,32,61,32,91,34,37,115,58,32,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,107,41,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,91,107,93,41,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,111,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,34,123,37,115,125,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,102,105,101,108,100,115,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,91,37,115,93,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,91,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,50,41,32,102,111,114,32,111,50,32,105,110,32,111,93,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,111,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,99,97,110,110,111,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,111,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,116,114,117,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,114,117,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,102,97,108,115,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,97,108,115,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,111,110,101,34,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,86,97,114,115,40,99,111,110,102,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,114,115,32,61,32,91,34,37,115,32,61,32,37,115,34,32,37,32,91,107,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,99,111,110,102,91,107,93,41,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,99,111,110,102,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,118,97,114,115,32,43,32,91,34,34,93,41,44,10,10,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,116,97,98,108,101,32,61,32,34,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);
/* memory initializer */ allocate([57,43,47,34,44,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,105,110,118,32,61,32,123,91,98,97,115,101,54,52,95,116,97,98,108,101,91,105,93,93,58,32,105,32,102,111,114,32,105,32,105,110,32,115,116,100,46,114,97,110,103,101,40,48,44,32,54,51,41,125,44,10,10,32,32,32,32,98,97,115,101,54,52,40,105,110,112,117,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,105,110,112,117,116,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,99,41,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,41,44,32,105,110,112,117,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,112,117,116,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,49,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,61,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,50,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,34,59,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,50,32,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,32,124,32,40,97,114,114,91,105,43,50,93,32,38,32,49,57,50,41,32,62,62,32,54,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,76,83,66,32,111,102,32,105,43,50,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,50,93,32,38,32,54,51,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,97,110,105,116,121,32,61,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,114,44,32,97,41,32,114,32,38,38,32,40,97,32,60,32,50,53,54,41,44,32,98,121,116,101,115,44,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,105,102,32,33,115,97,110,105,116,121,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,32,111,110,108,121,32,98,97,115,101,54,52,32,101,110,99,111,100,101,32,115,116,114,105,110,103,115,32,47,32,97,114,114,97,121,115,32,111,102,32,115,105,110,103,108,101,32,98,121,116,101,115,46,34,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,98,121,116,101,115,44,32,48,44,32,34,34,41,44,10,10,32,32,32,32,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,58,58,32,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,37,32,52,32,33,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,97,32,98,97,115,101,54,52,32,101,110,99,111,100,101,100,32,115,116,114,105,110,103,32,92,34,37,115,92,34,34,32,37,32,115,116,114,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,44,32,50,32,77,83,66,32,111,102,32,105,43,49,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,49,32,61,32,91,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,93,93,32,60,60,32,50,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,62,62,32,52,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,52,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,50,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,50,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,38,32,49,53,41,32,60,60,32,52,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,62,62,32,50,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,43,50,44,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,43,51,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,51,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,51,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,38,32,51,41,32,60,60,32,54,32,124,32,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,51,93,93,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,43,52,44,32,114,32,43,32,110,49,32,43,32,110,50,32,43,32,110,51,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,48,44,32,91,93,41,44,10,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,32,115,116,100,46,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,98,41,32,115,116,100,46,99,104,97,114,40,98,41,44,32,98,121,116,101,115,41,41,10,10,10,125,10,0,0,0,115,116,100,0,0,0,0,0,92,34,0,0,0,0,0,0,92,92,0,0,0,0,0,0,92,98,0,0,0,0,0,0,92,102,0,0,0,0,0,0,92,110,0,0,0,0,0,0,92,114,0,0,0,0,0,0,92,116,0,0,0,0,0,0,92,117,48,48,48,48,0,0,92,117,0,0,0,0,0,0,51,65,83,84,0,0,0,0,112,163,0,0,0,132,0,0,53,76,111,99,97,108,0,0,152,163,0,0,16,132,0,0,8,132,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,97,110,32,65,83,84,32,116,104,97,116,32,119,97,115,110,39,116,32,119,114,97,112,112,101,100,32,105,110,32,97,32,115,116,100,32,108,111,99,97,108,46,0,0,0,0,0,0,0,0,152,132,0,0,23,0,0,0,24,0,0,0,49,53,66,117,105,108,116,105,110,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,152,163,0,0,128,132,0,0,8,132,0,0,0,0,0,0,0,0,0,0,8,132,0,0,25,0,0,0,26,0,0,0,0,0,0,0,216,132,0,0,27,0,0,0,28,0,0,0,49,51,76,105,116,101,114,97,108,83,116,114,105,110,103,0,152,163,0,0,200,132,0,0,8,132,0,0,0,0,0,0,0,0,0,0,24,132,0,0,29,0,0,0,30,0,0,0,53,65,112,112,108,121,0,0,152,163,0,0,248,132,0,0,8,132,0,0,0,0,0,0,40,41,0,0,0,0,0,0,53,65,114,114,97,121,0,0,152,163,0,0,24,133,0,0,8,132,0,0,0,0,0,0,54,66,105,110,97,114,121,0,152,163,0,0,48,133,0,0,8,132,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,46,0,0,0,0,0,49,49,67,111,110,100,105,116,105,111,110,97,108,0,0,0,152,163,0,0,120,133,0,0,8,132,0,0,0,0,0,0,105,102,32,0,0,0,0,0,32,116,104,101,110,32,0,0,32,101,108,115,101,32,0,0,53,69,114,114,111,114,0,0,152,163,0,0,176,133,0,0,8,132,0,0,0,0,0,0,101,114,114,111,114,32,0,0,56,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,152,163,0,0,208,133,0,0,8,132,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,0,0,0,0,0,0,0,41,32,0,0,0,0,0,0,54,73,109,112,111,114,116,0,152,163,0,0,8,134,0,0,8,132,0,0,0,0,0,0,105,109,112,111,114,116,32,0,57,73,109,112,111,114,116,115,116,114,0,0,0,0,0,0,152,163,0,0,40,134,0,0,8,132,0,0,0,0,0,0,105,109,112,111,114,116,115,116,114,32,0,0,0,0,0,0,53,73,110,100,101,120,0,0,152,163,0,0,88,134,0,0,8,132,0,0,0,0,0,0,108,111,99,97,108,32,0,0,32,61,32,0,0,0,0,0,59,32,0,0,0,0,0,0,49,52,76,105,116,101,114,97,108,66,111,111,108,101,97,110,0,0,0,0,0,0,0,0,152,163,0,0,136,134,0,0,8,132,0,0,0,0,0,0,49,51,76,105,116,101,114,97,108,78,117,109,98,101,114,0,152,163,0,0,176,134,0,0,8,132,0,0,0,0,0,0,49,49,76,105,116,101,114,97,108,78,117,108,108,0,0,0,152,163,0,0,208,134,0,0,8,132,0,0,0,0,0,0,54,79,98,106,101,99,116,0,152,163,0,0,240,134,0,0,8,132,0,0,0,0,0,0,58,58,0,0,0,0,0,0,58,58,58,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,105,101,108,100,72,105,100,101,58,32,0,0,0,0,0,49,55,79,98,106,101,99,116,67,111,109,112,111,115,105,116,105,111,110,0,0,0,0,0,152,163,0,0,64,135,0,0,8,132,0,0,0,0,0,0,123,91,0,0,0,0,0,0,93,58,32,0,0,0,0,0,32,102,111,114,32,0,0,0,32,105,110,32,0,0,0,0,52,83,101,108,102,0,0,0,152,163,0,0,136,135,0,0,8,132,0,0,0,0,0,0,115,101,108,102,0,0,0,0,53,83,117,112,101,114,0,0,152,163,0,0,168,135,0,0,8,132,0,0,0,0,0,0,115,117,112,101,114,0,0,0,53,85,110,97,114,121,0,0,152,163,0,0,200,135,0,0,8,132,0,0,0,0,0,0,51,86,97,114,0,0,0,0,152,163,0,0,224,135,0,0,8,132,0,0,0,0,0,0,68,105,100,32,110,111,116,32,101,120,112,101,99,116,58,32,0,0,0,0,0,0,0,0,44,32,34,0,0,0,0,0,34,41,0,0,0,0,0,0,34,123,34,0,0,0,0,0,34,125,34,0,0,0,0,0,34,91,34,0,0,0,0,0,34,93,34,0,0,0,0,0,34,58,34,0,0,0,0,0,34,44,34,0,0,0,0,0,34,36,34,0,0,0,0,0,34,46,34,0,0,0,0,0,34,40,34,0,0,0,0,0,34,41,34,0,0,0,0,0,34,59,34,0,0,0,0,0,73,68,69,78,84,73,70,73,69,82,0,0,0,0,0,0,78,85,77,66,69,82,0,0,79,80,69,82,65,84,79,82,0,0,0,0,0,0,0,0,83,84,82,73,78,71,0,0,101,108,115,101,0,0,0,0,101,114,114,111,114,0,0,0,102,111,114,0,0,0,0,0,105,102,0,0,0,0,0,0,105,109,112,111,114,116,0,0,105,109,112,111,114,116,115,116,114,0,0,0,0,0,0,0,105,110,0,0,0,0,0,0,108,111,99,97,108,0,0,0,116,97,105,108,99,97,108,108,0,0,0,0,0,0,0,0,116,104,101,110,0,0,0,0,101,110,100,32,111,102,32,102,105,108,101,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,101,110,32,107,105,110,100,58,32,0,0,0,0,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,78,111,116,32,97,110,32,105,100,101,110,116,105,102,105,101,114,58,32,0,0,0,0,0,69,120,112,101,99,116,101,100,32,40,32,98,117,116,32,103,111,116,32,0,0,0,0,0,69,120,112,101,99,116,101,100,32,44,32,111,114,32,59,32,98,117,116,32,103,111,116,32,0,0,0,0,0,0,0,0,78,111,116,32,97,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,37,0,0,0,0,0,0,0,78,111,116,32,97,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,102,117,110,99,116,105,111,110,32,97,114,103,117,109,101,110,116,0,0,0,0,0,0,0,109,111,100,0,0,0,0,0,0,0,0,0,232,135,0,0,25,0,0,0,31,0,0,0,0,0,0,0,56,133,0,0,25,0,0,0,32,0,0,0,36,0,0,0,0,0,0,0,79,98,106,101,99,116,32,99,111,109,112,111,115,105,116,105,111,110,32,99,97,110,32,111,110,108,121,32,104,97,118,101,32,111,110,101,32,102,105,101,108,100,47,118,97,108,117,101,32,112,97,105,114,46,0,0,76,111,99,97,108,115,32,109,117,115,116,32,97,112,112,101,97,114,32,102,105,114,115,116,32,105,110,32,97,110,32,111,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,46,0,0,0,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,115,32,99,97,110,110,111,116,32,104,97,118,101,32,104,105,100,100,101,110,32,102,105,101,108,100,115,46,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,99,111,109,109,97,32,98,101,102,111,114,101,32,102,111,114,46,0,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,102,105,101,108,100,46,0,0,0,0,0,109,101,116,104,111,100,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,0,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,58,32,0,0,0,0,0,0,0,112,97,114,115,105,110,103,32,102,105,101,108,100,32,100,101,102,105,110,105,116,105,111,110,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,58,32,0,0,0,0,32,119,104,105,108,101,32,0,0,0,0,0,176,135,0,0,25,0,0,0,33,0,0,0,0,0,0,0,96,134,0,0,25,0,0,0,34,0,0,0,0,0,0,0,88,135,0,0,25,0,0,0,35,0,0,0,0,0,0,0,248,134,0,0,36,0,0,0,37,0,0,0,0,0,0,0,144,135,0,0,25,0,0,0,38,0,0,0,0,0,0,0,0,133,0,0,39,0,0,0,40,0,0,0,112,97,114,115,105,110,103,32,116,101,114,109,105,110,97,108,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,102,105,108,101,46,0,109,97,112,0,0,0,0,0,102,105,108,116,101,114,77,97,112,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,105,102,32,111,114,32,93,32,97,102,116,101,114,32,102,111,114,32,99,108,97,117,115,101,44,32,103,111,116,58,32,0,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,97,114,114,97,121,32,101,108,101,109,101,110,116,46,0,0,0,0,0,78,111,32,116,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,102,111,117,110,100,46,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,32,107,105,110,100,58,32,0,0,0,0,0,0,0,0,0,0,56,134,0,0,41,0,0,0,42,0,0,0,0,0,0,0,16,134,0,0,43,0,0,0,44,0,0,0,0,0,0,0,160,134,0,0,25,0,0,0,45,0,0,0,0,0,0,0,192,134,0,0,25,0,0,0,46,0,0,0,0,0,0,0,32,133,0,0,47,0,0,0,48,0,0,0,0,0,0,0,208,135,0,0,25,0,0,0,49,0,0,0,68,117,112,108,105,99,97,116,101,32,108,111,99,97,108,32,118,97,114,58,32,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,224,133,0,0,50,0,0,0,51,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,0,0,0,0,0,0,0,136,133,0,0,25,0,0,0,52,0,0,0,0,0,0,0,224,134,0,0,25,0,0,0,53,0,0,0,69,120,112,101,99,116,101,100,32,116,111,107,101,110,32,0,32,98,117,116,32,103,111,116,32,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,111,112,101,114,97,116,111,114,32,0,0,0,0,0,0,0,0,0,0,184,133,0,0,25,0,0,0,54,0,0,0,68,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,58,32,0,0,67,97,110,39,116,32,117,115,101,32,115,101,108,102,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,0,0,0,67,97,110,39,116,32,117,115,101,32,115,117,112,101,114,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,0,0,85,110,107,110,111,119,110,32,118,97,114,105,97,98,108,101,58,32,0,0,0,0,0,0,68,117,114,105,110,103,32,109,97,110,105,102,101,115,116,97,116,105,111,110,0,0,0,0,77,117,108,116,105,32,109,111,100,101,58,32,84,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,119,97,115,32,97,32,0,0,0,0,0,44,32,0,0,0,0,0,0,115,104,111,117,108,100,32,98,101,32,97,110,32,111,98,106,101,99,116,32,119,104,111,115,101,32,107,101,121,115,32,97,114,101,32,102,105,108,101,110,97,109,101,115,32,97,110,100,32,118,97,108,117,101,115,32,104,111,108,100,32,0,0,0,116,104,101,32,74,83,79,78,32,102,111,114,32,116,104,97,116,32,102,105,108,101,46,0,49,50,82,117,110,116,105,109,101,69,114,114,111,114,0,0,112,163,0,0,16,143,0,0,70,105,101,108,100,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,58,32,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,52,72,101,97,112,76,101,97,102,79,98,106,101,99,116,69,0,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,79,98,106,101,99,116,69,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,69,110,116,105,116,121,69,0,0,0,0,112,163,0,0,136,143,0,0,152,163,0,0,104,143,0,0,168,143,0,0,0,0,0,0,152,163,0,0,64,143,0,0,176,143,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,54,72,101,97,112,83,105,109,112,108,101,79,98,106,101,99,116,69,0,0,0,0,0,0,152,163,0,0,208,143,0,0,192,143,0,0,0,0,0,0,77,97,120,32,115,116,97,99,107,32,102,114,97,109,101,115,32,101,120,99,101,101,100,101,100,46,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,84,104,117,110,107,69,0,0,0,0,0,0,152,163,0,0,40,144,0,0,168,143,0,0,0,0,0,0,98,105,110,100,46,115,101,99,111,110,100,32,33,61,32,110,117,108,108,112,116,114,0,0,118,109,46,99,112,112,0,0,110,101,119,67,97,108,108,0,97,110,111,110,121,109,111,117,115,0,0,0,0,0,0,0,111,98,106,101,99,116,32,60,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,116,104,117,110,107,32,60,0,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,60,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,60,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,56,72,101,97,112,69,120,116,101,110,100,101,100,79,98,106,101,99,116,69,0,0,0,0,152,163,0,0,216,144,0,0,176,143,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,53,72,101,97,112,83,117,112,101,114,79,98,106,101,99,116,69,0,0,0,0,0,0,0,152,163,0,0,16,145,0,0,176,143,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,50,51,72,101,97,112,67,111,109,112,114,101,104,101,110,115,105,111,110,79,98,106,101,99,116,69,0,0,0,0,0,0,0,152,163,0,0,72,145,0,0,192,143,0,0,0,0,0,0,110,117,108,108,0,0,0,0,98,111,111,108,101,97,110,0,100,111,117,98,108,101,0,0,97,114,114,97,121,0,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,111,98,106,101,99,116,0,0,115,116,114,105,110,103,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,121,112,101,58,32,0,0,0,0,0,0,16,146,0,0,55,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,53,83,116,97,99,107,69,0,0,112,163,0,0,248,145,0,0,115,116,97,99,107,91,0,0,93,32,61,32,0,0,0,0,32,40,0,0,0,0,0,0,91,32,93,0,0,0,0,0,91,10,0,0,0,0,0,0,91,0,0,0,0,0,0,0,32,32,32,0,0,0,0,0,44,10,0,0,0,0,0,0,93,0,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,32,105,110,32,74,83,79,78,32,111,117,116,112,117,116,46,0,0,0,0,0,0,123,32,125,0,0,0,0,0,123,10,0,0,0,0,0,0,123,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,34,58,32,0,0,0,0,0,125,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,115,116,114,105,110,103,32,114,101,115,117,108,116,44,32,103,111,116,58,32,0,0,0,65,116,116,101,109,112,116,32,116,111,32,117,115,101,32,115,117,112,101,114,32,119,104,101,110,32,116,104,101,114,101,32,105,115,32,110,111,32,115,117,112,101,114,32,99,108,97,115,115,46,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,67,111,117,108,100,32,110,111,116,32,98,105,110,100,32,118,97,114,105,97,98,108,101,58,32,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,65,83,84,58,32,0,0,0,79,110,108,121,32,102,117,110,99,116,105,111,110,115,32,99,97,110,32,98,101,32,99,97,108,108,101,100,44,32,103,111,116,32,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,0,0,0,0,0,0,0,32,97,114,103,117,109,101,110,116,115,44,32,103,111,116,32,0,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,73,110,101,113,117,97,108,105,116,105,101,115,32,110,111,116,32,100,101,115,117,103,97,114,101,100,0,0,0,0,0,0,66,105,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,0,0,0,0,0,0,0,32,114,101,113,117,105,114,101,115,32,109,97,116,99,104,105,110,103,32,116,121,112,101,115,44,32,103,111,116,32,0,0,32,97,110,100,32,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,97,114,114,97,121,115,46,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,98,111,111,108,101,97,110,115,46,0,0,68,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111,46,0,0,0,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,109,98,101,114,115,46,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,102,117,110,99,116,105,111,110,115,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,108,108,46,0,0,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,111,98,106,101,99,116,115,46,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,115,116,114,105,110,103,115,46,0,0,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,114,101,116,117,114,110,32,98,111,111,108,101,97,110,44,32,103,111,116,58,32,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,32,114,101,113,117,105,114,101,115,32,115,105,122,101,32,62,61,32,48,44,32,103,111,116,32,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,116,97,107,101,32,49,32,112,97,114,97,109,44,32,103,111,116,58,32,0,0,0,0,0,110,117,109,98,101,114,0,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,0,0,0,0,0,108,101,110,103,116,104,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,0,0,0,0,0,0,108,101,110,103,116,104,32,111,112,101,114,97,116,101,115,32,111,110,32,115,116,114,105,110,103,115,44,32,111,98,106,101,99,116,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,0,0,99,111,100,101,112,111,105,110,116,32,116,97,107,101,115,32,97,32,115,116,114,105,110,103,32,111,102,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,108,101,110,103,116,104,32,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,62,61,32,48,44,32,103,111,116,32,0,0,0,83,111,114,114,121,44,32,111,110,108,121,32,65,83,67,73,73,32,115,117,112,112,111,114,116,101,100,32,114,105,103,104,116,32,110,111,119,46,32,32,0,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,60,32,49,50,56,44,32,103,111,116,32,0,0,85,110,100,101,102,105,110,101,100,32,101,120,116,101,114,110,97,108,32,118,97,114,105,97,98,108,101,58,32,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,58,32,0,0,69,114,114,111,114,32,109,101,115,115,97,103,101,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,0,0,0,0,0,73,102,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,98,101,32,98,111,111,108,101,97,110,44,32,103,111,116,32,0,0,0,0,0,0,65,114,114,97,121,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,110,117,109,98,101,114,44,32,103,111,116,32,0,0,0,0,0,0,0,0,65,114,114,97,121,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,0,0,0,32,110,111,116,32,119,105,116,104,105,110,32,91,48,44,32,0,0,0,0,0,0,0,0,111,98,106,32,33,61,32,110,117,108,108,112,116,114,0,0,101,118,97,108,117,97,116,101,0,0,0,0,0,0,0,0,79,98,106,101,99,116,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,0,0,0,0,0,0,83,116,114,105,110,103,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,0,0,0,0,0,83,116,114,105,110,103,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,78,111,116,32,111,98,106,101,99,116,32,47,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,46,0,0,0,0,67,97,110,32,111,110,108,121,32,105,110,100,101,120,32,111,98,106,101,99,116,115,44,32,115,116,114,105,110,103,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,0,0,0,0,0,0,70,105,101,108,100,32,110,97,109,101,32,119,97,115,32,110,111,116,32,97,32,115,116,114,105,110,103,46,0,0,0,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,32,110,97,109,101,58,32,34,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,32,110,101,101,100,115,32,97,114,114,97,121,44,32,103,111,116,32,0,0,102,105,101,108,100,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,58,32,0,0,0,0,0,85,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,116,121,112,101,32,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,114,97,109,101,75,105,110,100,58,32,32,0,0,0,0,43,0,0,0,0,0,0,0,126,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,0,102,114,111,109,32,33,61,32,110,117,108,108,112,116,114,0,46,47,115,116,97,116,101,46,104,0,0,0,0,0,0,0,109,97,114,107,70,114,111,109,0,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,65,114,114,97,121,69,0,0,0,0,0,0,152,163,0,0,8,154,0,0,168,143,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,49,72,101,97,112,67,108,111,115,117,114,101,69,0,0,0,152,163,0,0,56,154,0,0,168,143,0,0,0,0,0,0,0,0,0,0,120,145,0,0,56,0,0,0,57,0,0,0,0,0,0,0,72,144,0,0,58,0,0,0,59,0,0,0,66,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,0,0,0,0,0,0,0,32,101,120,112,101,99,116,101,100,32,40,0,0,0,0,0,41,32,98,117,116,32,103,111,116,32,40,0,0,0,0,0,0,0,0,0,0,145,0,0,60,0,0,0,61,0,0,0,42,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,60,60,0,0,0,0,0,0,62,62,0,0,0,0,0,0,62,61,0,0,0,0,0,0,60,0,0,0,0,0,0,0,60,61,0,0,0,0,0,0,61,61,0,0,0,0,0,0,33,61,0,0,0,0,0,0,38,0,0,0,0,0,0,0,94,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,124,124,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,0,0,0,0,56,145,0,0,60,0,0,0,62,0,0,0,0,0,0,0,248,143,0,0,63,0,0,0,64,0,0,0,78,111,116,32,97,32,110,117,109,98,101,114,0,0,0,0,79,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,0,0,0,0,224,155,0,0,65,0,0,0,66,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,83,116,114,105,110,103,69,0,0,0,0,152,163,0,0,192,155,0,0,168,143,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,111,112,101,110,32,105,109,112,111,114,116,32,34,0,0,0,0,0,0,88,154,0,0,67,0,0,0,68,0,0,0,0,0,0,0,40,154,0,0,69,0,0,0,70,0,0,0,97,114,114,97,121,95,101,108,101,109,101,110,116,0,0,0,10,0,0,0,0,0,0,0,82,85,78,84,73,77,69,32,69,82,82,79,82,58,32,0,9,46,46,46,0,0,0,0,9,0,0,0,0,0,0,0,83,84,65,84,73,67,32,69,82,82,79,82,58,32,0,0,58,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,41,45,40,0,0,0,0,0,41,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,48,157,0,0,71,0,0,0,72,0,0,0,148,255,255,255,148,255,255,255,48,157,0,0,73,0,0,0,74,0,0,0,172,156,0,0,228,156,0,0,248,156,0,0,192,156,0,0,108,0,0,0,0,0,0,0,96,179,0,0,13,0,0,0,14,0,0,0,148,255,255,255,148,255,255,255,96,179,0,0,15,0,0,0,16,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,152,163,0,0,0,157,0,0,96,179,0,0,0,0,0,0,0,0,0,0,176,157,0,0,75,0,0,0,76,0,0,0,2,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,6,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,152,163,0,0,128,157,0,0,232,178,0,0,0,0,0,0,114,0,0,0,0,0,0,0,84,104,101,32,101,109,112,116,121,32,115,116,114,105,110,103,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,102,105,108,101,110,97,109,101,0,0,0,0,0,0,0,0,65,116,116,101,109,112,116,101,100,32,116,111,32,105,109,112,111,114,116,32,97,32,100,105,114,101,99,116,111,114,121,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,159,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+30720);
/* memory initializer */ allocate([104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,160,160,0,0,77,0,0,0,78,0,0,0,7,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,152,163,0,0,144,160,0,0,40,161,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,112,163,0,0,24,161,0,0,0,0,0,0,112,161,0,0,79,0,0,0,80,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,24,162,0,0,81,0,0,0,82,0,0,0,9,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,152,163,0,0,96,161,0,0,40,161,0,0,0,0,0,0,0,0,0,0,176,161,0,0,79,0,0,0,83,0,0,0,8,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,152,163,0,0,152,161,0,0,112,161,0,0,0,0,0,0,0,0,0,0,240,161,0,0,79,0,0,0,84,0,0,0,8,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,152,163,0,0,216,161,0,0,112,161,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,152,163,0,0,0,162,0,0,40,161,0,0,0,0,0,0,0,0,0,0,120,162,0,0,85,0,0,0,86,0,0,0,10,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,112,163,0,0,80,162,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,152,163,0,0,104,162,0,0,40,161,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,152,163,0,0,136,162,0,0,96,162,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,152,163,0,0,192,162,0,0,176,162,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,152,163,0,0,32,163,0,0,176,162,0,0,0,0,0,0,152,163,0,0,248,162,0,0,72,163,0,0,0,0,0,0,0,0,0,0,232,162,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,5,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,224,163,0,0,87,0,0,0,91,0,0,0,89,0,0,0,90,0,0,0,5,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,152,163,0,0,184,163,0,0,232,162,0,0,0,0,0,0,0,0,0,0,64,164,0,0,87,0,0,0,92,0,0,0,89,0,0,0,90,0,0,0,5,0,0,0,5,0,0,0,3,0,0,0,5,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,152,163,0,0,24,164,0,0,232,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+40960);
/* memory initializer */ allocate([184,174,0,0,93,0,0,0,94,0,0,0,3,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,11,0,0,0,12,0,0,0,8,0,0,0,13,0,0,0,14,0,0,0,5,0,0,0,9,0,0,0,6,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,152,163,0,0,152,174,0,0,40,179,0,0,0,0,0,0,0,0,0,0,32,175,0,0,93,0,0,0,95,0,0,0,4,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,8,0,0,0,16,0,0,0,17,0,0,0,7,0,0,0,10,0,0,0,8,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,152,163,0,0,8,175,0,0,40,179,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,0,0,0,0,184,175,0,0,96,0,0,0,97,0,0,0,5,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,18,0,0,0,2,0,0,0,2,0,0,0,19,0,0,0,4,0,0,0,9,0,0,0,11,0,0,0,10,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,152,163,0,0,152,175,0,0,232,178,0,0,0,0,0,0,0,0,0,0,32,176,0,0,96,0,0,0,98,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,20,0,0,0,21,0,0,0,11,0,0,0,3,0,0,0,12,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,152,163,0,0,8,176,0,0,232,178,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,232,178,0,0,96,0,0,0,99,0,0,0,1,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,19,0,0,0,4,0,0,0,9,0,0,0,3,0,0,0,12,0,0,0,0,0,0,0,40,179,0,0,93,0,0,0,100,0,0,0,7,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,8,0,0,0,13,0,0,0,14,0,0,0,5,0,0,0,10,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,96,179,0,0,13,0,0,0,14,0,0,0,248,255,255,255,248,255,255,255,96,179,0,0,15,0,0,0,16,0,0,0,8,0,0,0,0,0,0,0,168,179,0,0,101,0,0,0,102,0,0,0,248,255,255,255,248,255,255,255,168,179,0,0,103,0,0,0,104,0,0,0,4,0,0,0,0,0,0,0,240,179,0,0,17,0,0,0,18,0,0,0,252,255,255,255,252,255,255,255,240,179,0,0,19,0,0,0,20,0,0,0,4,0,0,0,0,0,0,0,56,180,0,0,105,0,0,0,106,0,0,0,252,255,255,255,252,255,255,255,56,180,0,0,107,0,0,0,108,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,109,0,0,0,110,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,40,178,0,0,111,0,0,0,112,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,152,163,0,0,224,177,0,0,168,217,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,112,163,0,0,16,178,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,152,163,0,0,48,178,0,0,40,178,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,152,163,0,0,112,178,0,0,40,178,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,112,163,0,0,176,178,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,112,163,0,0,240,178,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,248,163,0,0,48,179,0,0,0,0,0,0,1,0,0,0,96,178,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,248,163,0,0,120,179,0,0,0,0,0,0,1,0,0,0,160,178,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,248,163,0,0,192,179,0,0,0,0,0,0,1,0,0,0,96,178,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,248,163,0,0,8,180,0,0,0,0,0,0,1,0,0,0,160,178,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,248,163,0,0,80,180,0,0,3,0,0,0,2,0,0,0,96,179,0,0,2,0,0,0,240,179,0,0,2,8,0,0,0,0,0,0,232,180,0,0,113,0,0,0,114,0,0,0,22,0,0,0,1,0,0,0,12,0,0,0,13,0,0,0,2,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,152,163,0,0,200,180,0,0,248,217,0,0,0,0,0,0,0,0,0,0,48,195,0,0,115,0,0,0,116,0,0,0,117,0,0,0,1,0,0,0,8,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,195,0,0,118,0,0,0,119,0,0,0,117,0,0,0,2,0,0,0,9,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,197,0,0,120,0,0,0,121,0,0,0,117,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,192,197,0,0,122,0,0,0,123,0,0,0,117,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,198,0,0,124,0,0,0,125,0,0,0,117,0,0,0,8,0,0,0,9,0,0,0,23,0,0,0,10,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,24,199,0,0,126,0,0,0,127,0,0,0,117,0,0,0,12,0,0,0,13,0,0,0,25,0,0,0,14,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,208,199,0,0,128,0,0,0,129,0,0,0,117,0,0,0,23,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,208,199,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,112,200,0,0,130,0,0,0,131,0,0,0,117,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,112,200,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,201,0,0,132,0,0,0,133,0,0,0,117,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,201,0,0,134,0,0,0,135,0,0,0,117,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,195,0,0,136,0,0,0,137,0,0,0,117,0,0,0,39,0,0,0,40,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,41,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,195,0,0,138,0,0,0,139,0,0,0,117,0,0,0,42,0,0,0,43,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,44,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,196,0,0,140,0,0,0,141,0,0,0,117,0,0,0,45,0,0,0,46,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,47,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,196,0,0,142,0,0,0,143,0,0,0,117,0,0,0,48,0,0,0,49,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,50,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,201,0,0,144,0,0,0,145,0,0,0,117,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,136,202,0,0,146,0,0,0,147,0,0,0,117,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,24,203,0,0,148,0,0,0,149,0,0,0,117,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,168,203,0,0,150,0,0,0,151,0,0,0,117,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0,152,0,0,0,153,0,0,0,117,0,0,0,16,0,0,0,16,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,204,0,0,154,0,0,0,155,0,0,0,117,0,0,0,17,0,0,0,17,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,8,195,0,0,156,0,0,0,157,0,0,0,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,191,0,0,158,0,0,0,159,0,0,0,117,0,0,0,13,0,0,0,18,0,0,0,14,0,0,0,19,0,0,0,15,0,0,0,1,0,0,0,20,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,0,0,160,0,0,0,161,0,0,0,117,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,51,0,0,0,52,0,0,0,5,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,194,0,0,162,0,0,0,163,0,0,0,117,0,0,0,54,0,0,0,55,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,224,194,0,0,164,0,0,0,165,0,0,0,117,0,0,0,56,0,0,0,57,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,24,191,0,0,166,0,0,0,167,0,0,0,117,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,152,163,0,0,0,191,0,0,104,217,0,0,0,0,0,0,0,0,0,0,168,191,0,0,166,0,0,0,168,0,0,0,117,0,0,0,21,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,16,0,0,0,22,0,0,0,17,0,0,0,23,0,0,0,18,0,0,0,5,0,0,0,24,0,0,0,6,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,112,163,0,0,136,191,0,0,248,163,0,0,112,191,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,160,191,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,248,163,0,0,200,191,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,160,191,0,0,2,0,0,0,0,0,0,0,120,192,0,0,166,0,0,0,169,0,0,0,117,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,58,0,0,0,59,0,0,0,8,0,0,0,60,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,112,163,0,0,88,192,0,0,248,163,0,0,48,192,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,112,192,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,248,163,0,0,152,192,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,112,192,0,0,2,0,0,0,0,0,0,0,56,193,0,0,166,0,0,0,170,0,0,0,117,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,61,0,0,0,62,0,0,0,10,0,0,0,63,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,248,163,0,0,16,193,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,112,192,0,0,2,0,0,0,0,0,0,0,176,193,0,0,166,0,0,0,171,0,0,0,117,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,64,0,0,0,65,0,0,0,12,0,0,0,66,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,248,163,0,0,136,193,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,112,192,0,0,2,0,0,0,0,0,0,0,40,194,0,0,166,0,0,0,172,0,0,0,117,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,64,0,0,0,65,0,0,0,12,0,0,0,66,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,152,163,0,0,0,194,0,0,176,193,0,0,0,0,0,0,0,0,0,0,144,194,0,0,166,0,0,0,173,0,0,0,117,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,64,0,0,0,65,0,0,0,12,0,0,0,66,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,152,163,0,0,104,194,0,0,176,193,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,152,163,0,0,160,194,0,0,24,191,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,152,163,0,0,200,194,0,0,24,191,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,152,163,0,0,240,194,0,0,24,191,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,152,163,0,0,24,195,0,0,24,191,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,152,163,0,0,64,195,0,0,24,191,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,112,163,0,0,136,195,0,0,248,163,0,0,104,195,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,160,195,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,248,163,0,0,200,195,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,160,195,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,248,163,0,0,8,196,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,160,195,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,248,163,0,0,72,196,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,160,195,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,112,163,0,0,232,196,0,0,248,163,0,0,208,196,0,0,0,0,0,0,1,0,0,0,8,197,0,0,0,0,0,0,248,163,0,0,136,196,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,16,197,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,248,163,0,0,144,197,0,0,0,0,0,0,1,0,0,0,8,197,0,0,0,0,0,0,248,163,0,0,72,197,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,168,197,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,112,163,0,0,64,198,0,0,248,163,0,0,40,198,0,0,0,0,0,0,1,0,0,0,96,198,0,0,0,0,0,0,248,163,0,0,224,197,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,104,198,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,248,163,0,0,232,198,0,0,0,0,0,0,1,0,0,0,96,198,0,0,0,0,0,0,248,163,0,0,160,198,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,0,199,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,112,163,0,0,128,199,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,112,163,0,0,160,199,0,0,248,163,0,0,56,199,0,0,0,0,0,0,3,0,0,0,24,191,0,0,2,0,0,0,152,199,0,0,2,0,0,0,200,199,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,112,163,0,0,64,200,0,0,248,163,0,0,248,199,0,0,0,0,0,0,3,0,0,0,24,191,0,0,2,0,0,0,152,199,0,0,2,0,0,0,104,200,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,112,163,0,0,224,200,0,0,248,163,0,0,152,200,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,248,200,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,248,163,0,0,32,201,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,248,200,0,0,0,8,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,112,163,0,0,208,201,0,0,248,163,0,0,136,201,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,240,201,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,112,163,0,0,96,202,0,0,248,163,0,0,24,202,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,128,202,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,112,163,0,0,240,202,0,0,248,163,0,0,168,202,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,16,203,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,112,163,0,0,128,203,0,0,248,163,0,0,56,203,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,160,203,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,112,163,0,0,224,203,0,0,248,163,0,0,200,203,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,248,203,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,248,163,0,0,32,204,0,0,0,0,0,0,2,0,0,0,24,191,0,0,2,0,0,0,248,203,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+44628);
/* memory initializer */ allocate([83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,112,163,0,0,72,217,0,0,58,32,0,0,0,0,0,0,0,0,0,0,168,217,0,0,174,0,0,0,175,0,0,0,9,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,152,163,0,0,144,217,0,0,24,162,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,112,163,0,0,184,217,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,152,163,0,0,224,217,0,0,216,217,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+54944);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(lookup.node.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }


  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        // If Module['websocket'] has already been defined (e.g. for configuring
        // the subprotocol/url) use that, if not initialise it to a new object.
        Module['websocket'] = (Module['websocket'] && 
                               ('object' === typeof Module['websocket'])) ? Module['websocket'] : {};
  
        // Add the Event registration mechanism to the exported websocket configuration
        // object so we can register network callbacks from native JavaScript too.
        // For more documentation see system/include/emscripten/emscripten.h
        Module['websocket']._callbacks = {};
        Module['websocket']['on'] = function(event, callback) {
  	    if ('function' === typeof callback) {
  		  this._callbacks[event] = callback;
          }
  	    return this;
        };
  
        Module['websocket'].emit = function(event, param) {
  	    if ('function' === typeof this._callbacks[event]) {
  		  this._callbacks[event].call(this, param);
          }
        };
  
        // If debug is enabled register simple default logging callbacks for each Event.
  
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          error: null, // Used in getsockopt for SOL_SOCKET/SO_ERROR test
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces '//' comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the '#' for '//' again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                var parts = addr.split('/');
                url = url + parts[0] + ":" + port + "/" + parts.slice(1).join('/');
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
  
            Module['websocket'].emit('open', sock.stream.fd);
  
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
            Module['websocket'].emit('message', sock.stream.fd);
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('close', function() {
              Module['websocket'].emit('close', sock.stream.fd);
            });
            peer.socket.on('error', function(error) {
              // Although the ws library may pass errors that may be more descriptive than
              // ECONNREFUSED they are not necessarily the expected error code e.g. 
              // ENOTFOUND on getaddrinfo seems to be node.js specific, so using ECONNREFUSED
              // is still probably the most useful thing to do.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onclose = function() {
              Module['websocket'].emit('close', sock.stream.fd);
            };
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
            peer.socket.onerror = function(error) {
              // The WebSocket spec only allows a 'simple event' to be thrown on error,
              // so we only really know as much as ECONNREFUSED.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          Module['websocket'].emit('listen', sock.stream.fd); // Send Event with listen fd.
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
              Module['websocket'].emit('connection', newsock.stream.fd);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
              Module['websocket'].emit('connection', sock.stream.fd);
            }
          });
          sock.server.on('closed', function() {
            Module['websocket'].emit('close', sock.stream.fd);
            sock.server = null;
          });
          sock.server.on('error', function(error) {
            // Although the ws library may pass errors that may be more descriptive than
            // ECONNREFUSED they are not necessarily the expected error code e.g. 
            // ENOTFOUND on getaddrinfo seems to be node.js specific, so using EHOSTUNREACH
            // is still probably the most useful thing to do. This error shouldn't
            // occur in a well written app as errors should get trapped in the compiled
            // app's own getaddrinfo call.
            sock.error = ERRNO_CODES.EHOSTUNREACH; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
            Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'EHOSTUNREACH: Host is unreachable']);
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _log=Math_log;

  var _emscripten_postinvoke=true;

  function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }

  function ___gxx_personality_v0() {
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)>>0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return (bytesRead / size)|0;
    }

  var _BDtoILow=true;

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  var _ceil=Math_ceil;

  
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }function _ftello() {
  return _ftell.apply(null, arguments)
  }

  var _BItoD=true;

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;


  var _asin=Math_asin;

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  var _floor=Math_floor;

  
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)>>0)];
      }
    }function _getc() {
  return _fgetc.apply(null, arguments)
  }

  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  var _atan=Math_atan;

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }


  var _cos=Math_cos;

  
  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }function _fseeko() {
  return _fseek.apply(null, arguments)
  }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

   
  Module["_strcpy"] = _strcpy;

  var _exp=Math_exp;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);



FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiddiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiddiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iid(index,a1,a2) {
  try {
    return Module["dynCall_iid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiiiddiii": invoke_viiiiiddiii, "invoke_iid": invoke_iid, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_exp": _exp, "_pthread_key_create": _pthread_key_create, "_fread": _fread, "___cxa_guard_acquire": ___cxa_guard_acquire, "___assert_fail": ___assert_fail, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "__addDays": __addDays, "_fsync": _fsync, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_sbrk": _sbrk, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sysconf": _sysconf, "_close": _close, "_cos": _cos, "_write": _write, "__isLeapYear": __isLeapYear, "_ftell": _ftell, "___cxa_atexit": ___cxa_atexit, "___cxa_rethrow": ___cxa_rethrow, "_catclose": _catclose, "_send": _send, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_guard_release": ___cxa_guard_release, "_strerror_r": _strerror_r, "___setErrNo": ___setErrNo, "___ctype_tolower_loc": ___ctype_tolower_loc, "_newlocale": _newlocale, "___resumeException": ___resumeException, "_freelocale": _freelocale, "_pthread_once": _pthread_once, "_read": _read, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_catopen": _catopen, "___cxa_guard_abort": ___cxa_guard_abort, "_llvm_pow_f64": _llvm_pow_f64, "___ctype_b_loc": ___ctype_b_loc, "_lseek": _lseek, "_vfprintf": _vfprintf, "___cxa_allocate_exception": ___cxa_allocate_exception, "_asin": _asin, "_floor": _floor, "_pwrite": _pwrite, "_open": _open, "_uselocale": _uselocale, "___cxa_end_catch": ___cxa_end_catch, "_pthread_getspecific": _pthread_getspecific, "_fseek": _fseek, "_fclose": _fclose, "_log": _log, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_recv": _recv, "_tan": _tan, "_fgetc": _fgetc, "_abort": _abort, "_ceil": _ceil, "_fopen": _fopen, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "_acos": _acos, "___gxx_personality_v0": ___gxx_personality_v0, "_ungetc": _ungetc, "_calloc": _calloc, "_fflush": _fflush, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_catgets": _catgets, "_fileno": _fileno, "__arraySum": __arraySum, "_fseeko": _fseeko, "_atan": _atan, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pread": _pread, "_mkport": _mkport, "_getc": _getc, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_ftello": _ftello, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_strerror": _strerror, "__formatString": __formatString, "_atexit": _atexit, "_sqrt": _sqrt, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle, "_stderr": _stderr, "_stdin": _stdin, "_stdout": _stdout };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;
  var _stderr=env._stderr|0;
  var _stdin=env._stdin|0;
  var _stdout=env._stdout|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vid=env.invoke_vid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiddiii=env.invoke_viiiiiddiii;
  var invoke_iid=env.invoke_iid;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiid=env.invoke_viiid;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _exp=env._exp;
  var _pthread_key_create=env._pthread_key_create;
  var _fread=env._fread;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var ___assert_fail=env.___assert_fail;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var __addDays=env.__addDays;
  var _fsync=env._fsync;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _sbrk=env._sbrk;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _sysconf=env._sysconf;
  var _close=env._close;
  var _cos=env._cos;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var _ftell=env._ftell;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _catclose=env._catclose;
  var _send=env._send;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var _strerror_r=env._strerror_r;
  var ___setErrNo=env.___setErrNo;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _newlocale=env._newlocale;
  var ___resumeException=env.___resumeException;
  var _freelocale=env._freelocale;
  var _pthread_once=env._pthread_once;
  var _read=env._read;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _catopen=env._catopen;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var _lseek=env._lseek;
  var _vfprintf=env._vfprintf;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _asin=env._asin;
  var _floor=env._floor;
  var _pwrite=env._pwrite;
  var _open=env._open;
  var _uselocale=env._uselocale;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var _fseek=env._fseek;
  var _fclose=env._fclose;
  var _log=env._log;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _recv=env._recv;
  var _tan=env._tan;
  var _fgetc=env._fgetc;
  var _abort=env._abort;
  var _ceil=env._ceil;
  var _fopen=env._fopen;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var _acos=env._acos;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _ungetc=env._ungetc;
  var _calloc=env._calloc;
  var _fflush=env._fflush;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _llvm_eh_typeid_for=env._llvm_eh_typeid_for;
  var _catgets=env._catgets;
  var _fileno=env._fileno;
  var __arraySum=env.__arraySum;
  var _fseeko=env._fseeko;
  var _atan=env._atan;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pread=env._pread;
  var _mkport=env._mkport;
  var _getc=env._getc;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _ftello=env._ftello;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _atexit=env._atexit;
  var _sqrt=env._sqrt;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, $ast_) {
 $this = $this | 0;
 $ast_ = $ast_ | 0;
 var $$$i$i$i$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$i$i427 = 0, $$0$i$i$i$i$i$i$i$i$i$i$i427$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$i416 = 0, $$0$i$i$i$i$i$i$i$i$i$i416$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i1039 = 0, $$0$i$i$i$i$i$i$i$i$i1039$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i1522 = 0, $$0$i$i$i$i$i$i$i$i$i1522$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2$i = 0, $$0$i$i$i$i$i$i$i$i$i2095 = 0, $$0$i$i$i$i$i$i$i$i$i2095$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2136 = 0, $$0$i$i$i$i$i$i$i$i$i2136$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2255 = 0, $$0$i$i$i$i$i$i$i$i$i2255$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2296 = 0, $$0$i$i$i$i$i$i$i$i$i2296$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i770 = 0, $$0$i$i$i$i$i$i$i$i$i770$lcssa = 0, $$0$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i1041 = 0, $$0$i$i$i$i$i$i$i$i1524 = 0, $$0$i$i$i$i$i$i$i$i2097 = 0, $$0$i$i$i$i$i$i$i$i2138 = 0, $$0$i$i$i$i$i$i$i$i2257 = 0, $$0$i$i$i$i$i$i$i$i2298 = 0, $$0$i$i$i$i$i$i$i$i449 = 0, $$0$i$i$i$i$i$i$i$i449$lcssa = 0, $$0$i$i$i$i$i$i$i$i772 = 0, $$0$i$i$i$i$i$i$i418 = 0, $$0$i$i$i$i$i$i$i418$lcssa = 0, $$0$i$i$i$i$i$i1062 = 0, $$0$i$i$i$i$i$i1062$lcssa = 0, $$0$i$i$i$i$i$i1184 = 0, $$0$i$i$i$i$i$i1184$lcssa = 0, $$0$i$i$i$i$i$i1545 = 0, $$0$i$i$i$i$i$i1545$lcssa = 0, $$0$i$i$i$i$i$i2118 = 0, $$0$i$i$i$i$i$i2118$lcssa = 0, $$0$i$i$i$i$i$i2161 = 0, $$0$i$i$i$i$i$i2161$lcssa = 0, $$0$i$i$i$i$i$i2278 = 0, $$0$i$i$i$i$i$i2278$lcssa = 0, $$0$i$i$i$i$i$i2319 = 0, $$0$i$i$i$i$i$i2319$lcssa = 0, $$0$i$i$i$i$i$i3$i = 0, $$0$i$i$i$i$i$i793 = 0, $$0$i$i$i$i$i$i793$lcssa = 0, $$0$i$i$i$i$i1064 = 0, $$0$i$i$i$i$i1186 = 0, $$0$i$i$i$i$i1547 = 0, $$0$i$i$i$i$i2120 = 0, $$0$i$i$i$i$i2163 = 0, $$0$i$i$i$i$i2280 = 0, $$0$i$i$i$i$i2321 = 0, $$0$i$i$i$i$i795 = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i1182 = 0, $$0$i$i$i$i119$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$ph = 0, $$0$i$i$i$i119$i$i$i$i442 = 0, $$0$i$i$i$i119$i$i$i$i442$ph = 0, $$0$i$i$i$i119$i$i$i$ph = 0, $$0$i$i$i$i119$i$i1055 = 0, $$0$i$i$i$i119$i$i1055$ph = 0, $$0$i$i$i$i119$i$i1538 = 0, $$0$i$i$i$i119$i$i1538$ph = 0, $$0$i$i$i$i119$i$i2111 = 0, $$0$i$i$i$i119$i$i2111$ph = 0, $$0$i$i$i$i119$i$i2154 = 0, $$0$i$i$i$i119$i$i2154$ph = 0, $$0$i$i$i$i119$i$i2271 = 0, $$0$i$i$i$i119$i$i2271$ph = 0, $$0$i$i$i$i119$i$i2312 = 0, $$0$i$i$i$i119$i$i2312$ph = 0, $$0$i$i$i$i119$i$i786 = 0, $$0$i$i$i$i119$i$i786$ph = 0, $$0$i$i$i$i561 = 0, $$0$i$i$i$i561$lcssa = 0, $$0$i$i$i10$i$i$i = 0, $$0$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i1598 = 0, $$0$i$i$i1598$lcssa = 0, $$0$i$i$i1638 = 0, $$0$i$i$i1638$lcssa = 0, $$0$i$i$i1671 = 0, $$0$i$i$i1671$lcssa = 0, $$0$i$i$i563 = 0, $$0$i$i12$i$i$i = 0, $$0$i$i1599 = 0, $$0$i$i1640 = 0, $$0$i$i1673 = 0, $$0$i$i26$i$i$i = 0, $$0$i$i518 = 0, $$0$i$i7$i$i$i = 0, $$0$i$i8$i$i$i = 0, $$0$i$i8$i$i$i$be = 0, $$0$i$i8$i$i$i$lcssa = 0, $$0$i1$i$i$i$i = 0, $$0$i1$i$i$i$i$be = 0, $$0$i1$i$i$i$i$lcssa = 0, $$0$i1116 = 0, $$0$i1135 = 0, $$0$i12$i$i = 0, $$0$i1707 = 0, $$0$i1748 = 0, $$0$i1767 = 0, $$0$i1982 = 0, $$0$i2016 = 0, $$0$i2196 = 0, $$0$i2352 = 0, $$0$i5$i$i = 0, $$0$i527 = 0, $$0$i7$i = 0, $$0$i7$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i7$i$i$i$i$i = 0, $$0$i7$i$i$i$i$i474 = 0, $$0$i7$i$i$i$i$i645 = 0, $$0$i7$i$i$i$i$i967 = 0, $$0$i7$i$i1024 = 0, $$0$i7$i$i1094 = 0, $$0$i7$i$i1173 = 0, $$0$i7$i$i1662 = 0, $$0$i7$i$i728 = 0, $$0$i7$i$i875 = 0, $$0$i7$i$i901 = 0, $$0$i7$i1079 = 0, $$0$i7$i1200 = 0, $$0$i7$i1564 = 0, $$0$i7$i2069 = 0, $$0$i7$i2081 = 0, $$0$i7$i2186 = 0, $$0$i7$i2241 = 0, $$0$i7$i2338 = 0, $$0$i7$i554 = 0, $$0$i7$i812 = 0, $$0$i701 = 0, $$0$i8$i$i = 0, $$0$i8$i$i$i$i = 0, $$0$i8$i$i$i$i$i = 0, $$0$i8$i$i$i$i$i476 = 0, $$0$i8$i$i$i$i$i646 = 0, $$0$i8$i$i$i$i$i968 = 0, $$0$i8$i$i1025 = 0, $$0$i8$i$i1095 = 0, $$0$i8$i$i1174 = 0, $$0$i8$i$i1663 = 0, $$0$i8$i$i729 = 0, $$0$i8$i$i876 = 0, $$0$i8$i$i902 = 0, $$0$i812$i$i = 0, $$0$i813$i$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i$lcssa = 0, $$0$ph$lcssa$i$i$i2216 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i$lcssa6009 = 0, $$0$ph6$i$i$i$lcssa6109 = 0, $$0$ph6$i$i$i2209 = 0, $$0$ph6$i$i$i2209$lcssa6101 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i431 = 0, $$01$i$i$i$i$i$i$i$i1044 = 0, $$01$i$i$i$i$i$i$i$i1527 = 0, $$01$i$i$i$i$i$i$i$i2100 = 0, $$01$i$i$i$i$i$i$i$i2141 = 0, $$01$i$i$i$i$i$i$i$i2260 = 0, $$01$i$i$i$i$i$i$i$i2301 = 0, $$01$i$i$i$i$i$i$i$i775 = 0, $$01$i$i$i$i$i$i$i453 = 0, $$01$i$i$i$i$i1067 = 0, $$01$i$i$i$i$i1189 = 0, $$01$i$i$i$i$i1550 = 0, $$01$i$i$i$i$i2123 = 0, $$01$i$i$i$i$i2166 = 0, $$01$i$i$i$i$i2283 = 0, $$01$i$i$i$i$i2324 = 0, $$01$i$i$i$i$i798 = 0, $$01$i$i$i457 = 0, $$01$i$i$i544 = 0, $$01$i$i$i566 = 0, $$01$i$i$i754 = 0, $$01$i$i15$i$i$i = 0, $$01$i$i1601 = 0, $$01$i$i1643 = 0, $$01$i$i1676 = 0, $$01$i$i517 = 0, $$01$i$i737 = 0, $$01$i1115 = 0, $$01$i1134 = 0, $$01$i1706 = 0, $$01$i1747 = 0, $$01$i1766 = 0, $$01$i1981 = 0, $$01$i2015 = 0, $$01$i2195 = 0, $$01$i2351 = 0, $$01$i526 = 0, $$01$i6$i$i = 0, $$01$i700 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i$i = 0, $$01$ph5$i$i$i2210 = 0, $$010 = 0, $$010$be = 0, $$010$lcssa6614 = 0, $$010$ph = 0, $$013$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$i$lcssa$lcssa = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i2212 = 0, $$013$i$i$i2212$lcssa = 0, $$013$i$i$i2212$lcssa$lcssa = 0, $$0135 = 0, $$0137 = 0, $$0141 = 0, $$0143 = 0, $$0145 = 0, $$0148 = 0, $$0150 = 0, $$0153 = 0, $$0163 = 0, $$0166 = 0, $$0170 = 0, $$0172 = 0, $$0176 = 0, $$0180 = 0, $$0182 = 0, $$0184 = 0, $$0188 = 0, $$0192 = 0, $$0196 = 0, $$02 = 0, $$0200 = 0, $$0204 = 0, $$0208 = 0, $$0212 = 0, $$0215 = 0, $$0217 = 0, $$0219 = 0, $$0221 = 0, $$0225 = 0, $$0227 = 0, $$0229 = 0, $$0233 = 0, $$0236 = 0, $$0240 = 0, $$0242 = 0, $$0244 = 0, $$0246 = 0, $$0248 = 0, $$06 = 0, $$1 = 0, $$10 = 0, $$1011282689 = 0, $$1012690 = 0, $$102 = 0, $$102129 = 0, $$103 = 0, $$103130 = 0, $$1037 = 0, $$104 = 0, $$104131 = 0, $$1061332693 = 0, $$1062694 = 0, $$107 = 0, $$107134 = 0, $$11 = 0, $$111$ph$be = 0, $$111$ph4070 = 0, $$1136 = 0, $$1136$ph = 0, $$1138 = 0, $$1154 = 0, $$1167 = 0, $$1173 = 0, $$1177 = 0, $$1185 = 0, $$1189 = 0, $$1193 = 0, $$1197 = 0, $$12 = 0, $$1201 = 0, $$1205 = 0, $$1209 = 0, $$1222 = 0, $$1230 = 0, $$1237 = 0, $$1239 = 0, $$13 = 0, $$1321 = 0, $$1340 = 0, $$14 = 0, $$1441 = 0, $$162564 = 0, $$16432563 = 0, $$17 = 0, $$1722 = 0, $$1744 = 0, $$192568 = 0, $$19462567 = 0, $$2 = 0, $$20 = 0, $$2047 = 0, $$212 = 0, $$2155 = 0, $$2172554 = 0, $$222572 = 0, $$22492571 = 0, $$2292553 = 0, $$232576 = 0, $$23502575 = 0, $$2423 = 0, $$2451 = 0, $$262579 = 0, $$26532578 = 0, $$27 = 0, $$2754 = 0, $$292583 = 0, $$29562582 = 0, $$3 = 0, $$30 = 0, $$3057 = 0, $$313 = 0, $$313$ph = 0, $$3156 = 0, $$322587 = 0, $$32592586 = 0, $$33 = 0, $$3360 = 0, $$35252591 = 0, $$35622590 = 0, $$36 = 0, $$3663 = 0, $$382595 = 0, $$38652594 = 0, $$402599 = 0, $$40672598 = 0, $$412603 = 0, $$414 = 0, $$4157 = 0, $$41682602 = 0, $$4192557 = 0, $$42 = 0, $$4269 = 0, $$4312556 = 0, $$432606 = 0, $$43702605 = 0, $$44 = 0, $$4471 = 0, $$45 = 0, $$4572 = 0, $$462609 = 0, $$46732608 = 0, $$472614 = 0, $$47742613 = 0, $$492617 = 0, $$49762616 = 0, $$50 = 0, $$5077 = 0, $$512621 = 0, $$5158 = 0, $$51782620 = 0, $$52 = 0, $$5202561 = 0, $$5279 = 0, $$5322560 = 0, $$532624 = 0, $$53802623 = 0, $$54 = 0, $$5481 = 0, $$552627 = 0, $$55822626 = 0, $$56 = 0, $$5683 = 0, $$572630 = 0, $$57842629 = 0, $$582634 = 0, $$58852633 = 0, $$59 = 0, $$5986 = 0, $$6 = 0, $$60 = 0, $$6087 = 0, $$6159 = 0, $$622638 = 0, $$62892637 = 0, $$63 = 0, $$633 = 0, $$6390 = 0, $$652642 = 0, $$65922641 = 0, $$66 = 0, $$6693 = 0, $$682646 = 0, $$68952645 = 0, $$692650 = 0, $$69962649 = 0, $$7 = 0, $$70 = 0, $$7097 = 0, $$71 = 0, $$7160 = 0, $$7198 = 0, $$731002652 = 0, $$732653 = 0, $$734 = 0, $$74 = 0, $$74101 = 0, $$761032656 = 0, $$762657 = 0, $$771042660 = 0, $$772661 = 0, $$78 = 0, $$78105 = 0, $$79 = 0, $$79106 = 0, $$8 = 0, $$811082663 = 0, $$812664 = 0, $$821092667 = 0, $$822668 = 0, $$835 = 0, $$841112670 = 0, $$842671 = 0, $$85 = 0, $$85112 = 0, $$86 = 0, $$86113 = 0, $$881152674 = 0, $$882675 = 0, $$891162678 = 0, $$892679 = 0, $$9 = 0, $$90 = 0, $$90117 = 0, $$921192681 = 0, $$922682 = 0, $$93 = 0, $$93120 = 0, $$936 = 0, $$94 = 0, $$94121 = 0, $$95 = 0, $$95122 = 0, $$96 = 0, $$96123 = 0, $$981252685 = 0, $$982686 = 0, $$99 = 0, $$99126 = 0, $$cast$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$i$i429$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i1042$lcssa = 0, $$cast$i$i$i$i$i$i$i$i1525$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2098$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2139$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2258$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2299$lcssa = 0, $$cast$i$i$i$i$i$i$i$i773$lcssa = 0, $$cast$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i451$lcssa = 0, $$cast$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i1065$lcssa = 0, $$cast$i$i$i$i$i1187$lcssa = 0, $$cast$i$i$i$i$i1548$lcssa = 0, $$cast$i$i$i$i$i2121$lcssa = 0, $$cast$i$i$i$i$i2164$lcssa = 0, $$cast$i$i$i$i$i2281$lcssa = 0, $$cast$i$i$i$i$i2322$lcssa = 0, $$cast$i$i$i$i$i796$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i564$lcssa = 0, $$cast$i$i$lcssa = 0, $$cast$i$i13$i$i$i$lcssa = 0, $$cast$i$i1641$lcssa = 0, $$cast$i$i1674$lcssa = 0, $$idx$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i420 = 0, $$idx$val$i$i$i$i752 = 0, $$idx$val$i$i$i413 = 0, $$idx$val$i$i$i744 = 0, $$idx$val$i$i1032 = 0, $$idx$val$i$i1515 = 0, $$idx$val$i$i2088 = 0, $$idx$val$i$i2129 = 0, $$idx$val$i$i2248 = 0, $$idx$val$i$i2289 = 0, $$idx$val$i$i763 = 0, $$idx$val$i393 = 0, $$idx$val$i404 = 0, $$idx$val$i529 = 0, $$idx$val$i531 = 0, $$idx$val$i613 = 0, $$idx$val$i623 = 0, $$idx$val$i679 = 0, $$idx$val$i68940384068 = 0, $$idx$val$i7064958 = 0, $$idx$val$i7064958$lcssa6029 = 0, $$idx$val$i7064959 = 0, $$idx$val$i742 = 0, $$idx$val$i759 = 0, $$idx$val$i842 = 0, $$idx$val$i842$lcssa6048 = 0, $$idx$val$i842$lcssa6049 = 0, $$idx$val$i842$lcssa6049$lcssa = 0, $$idx$val$i842$lcssa6050 = 0, $$idx$val$i842$lcssa6051 = 0, $$idx$val$i842$lcssa6052 = 0, $$idx$val$i842$lcssa6053 = 0, $$idx$val$i842$lcssa6054 = 0, $$idx$val$i842$lcssa6055 = 0, $$idx$val$i842$lcssa6056 = 0, $$idx$val$i842$lcssa6056$lcssa6202 = 0, $$idx$val$i842$lcssa6057 = 0, $$idx$val$i842$lcssa6059 = 0, $$idx$val$i842$lcssa6060 = 0, $$idx$val$i842$lcssa6060$lcssa6183 = 0, $$idx$val$i842$lcssa60606185 = 0, $$idx$val$i842$lcssa6061 = 0, $$idx$val$i842$lcssa6061$lcssa6154 = 0, $$idx$val$i842$lcssa6062 = 0, $$idx$val$i842$lcssa6063 = 0, $$idx$val$i842$lcssa6064 = 0, $$idx$val$lcssa = 0, $$idx1$i = 0, $$idx1$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i469 = 0, $$idx1$val$i$i$i$i$i$i$i640 = 0, $$idx1$val$i$i$i$i$i$i$i962 = 0, $$idx1$val$i$i$i$i1019 = 0, $$idx1$val$i$i$i$i1091 = 0, $$idx1$val$i$i$i$i1149 = 0, $$idx1$val$i$i$i$i1168 = 0, $$idx1$val$i$i$i$i1657 = 0, $$idx1$val$i$i$i$i723 = 0, $$idx1$val$i$i$i$i751 = 0, $$idx1$val$i$i$i$i870 = 0, $$idx1$val$i$i$i$i896 = 0, $$idx1$val$i$i$i482 = 0, $$idx1$val$i$i$i652 = 0, $$idx1$val$i$i$i745 = 0, $$idx1$val$i$i$i974 = 0, $$idx1$val$i$i17$i$i = 0, $$idx1$val$i69140394069 = 0, $$idx1$val$i69140394071 = 0, $$idx1$val$i708 = 0, $$idx2$val$i22$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i438 = 0, $$idx2$val$i22$i$i$i$i$i$i1051 = 0, $$idx2$val$i22$i$i$i$i$i$i1534 = 0, $$idx2$val$i22$i$i$i$i$i$i2107 = 0, $$idx2$val$i22$i$i$i$i$i$i2150 = 0, $$idx2$val$i22$i$i$i$i$i$i2267 = 0, $$idx2$val$i22$i$i$i$i$i$i2308 = 0, $$idx2$val$i22$i$i$i$i$i$i782 = 0, $$idx2$val$i713 = 0, $$idx252 = 0, $$idx252$lcssa = 0, $$idx254$val = 0, $$idx258 = 0, $$idx260$val = 0, $$idx261 = 0, $$idx261$val = 0, $$idx262$pre$phiZZ2D = 0, $$idx262$val = 0, $$idx262$val$lcssa = 0, $$idx265$val = 0, $$idx266$val = 0, $$idx268$val = 0, $$idx269$val = 0, $$idx304 = 0, $$idx387 = 0, $$idx4$val$i$i = 0, $$idx4$val$i$i$i = 0, $$idx4$val$i$i$i500 = 0, $$idx4$val$i$i$i666 = 0, $$idx4$val$i$i$i988 = 0, $$idx5$val$i$i = 0, $$idx5$val$i$i$i = 0, $$idx5$val$i$i$i499 = 0, $$idx5$val$i$i$i665 = 0, $$idx5$val$i$i$i987 = 0, $$idx6$i$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$i = 0, $$idx6$val$i$i$i506 = 0, $$idx6$val$i$i$i672 = 0, $$idx6$val$i$i$i994 = 0, $$idx6$val$pre$i$i = 0, $$idx6$val$pre$i$i$i = 0, $$idx6$val$pre$i$i$i503 = 0, $$idx6$val$pre$i$i$i669 = 0, $$idx6$val$pre$i$i$i991 = 0, $$idx6$val11$i$i = 0, $$idx6$val11$i$i$i = 0, $$idx6$val11$i$i$i491 = 0, $$idx6$val11$i$i$i656 = 0, $$idx6$val11$i$i$i978 = 0, $$idx6$val14$i$i = 0, $$idx6$val14$i$i$i = 0, $$idx6$val14$i$i$i495 = 0, $$idx6$val14$i$i$i660 = 0, $$idx6$val14$i$i$i982 = 0, $$idx7$val$i$i = 0, $$idx7$val$i$i$i = 0, $$idx7$val$i$i$i505 = 0, $$idx7$val$i$i$i671 = 0, $$idx7$val$i$i$i993 = 0, $$idx7$val12$i$i = 0, $$idx7$val12$i$i$i = 0, $$idx7$val12$i$i$i492 = 0, $$idx7$val12$i$i$i657 = 0, $$idx7$val12$i$i$i979 = 0, $$idx7$val18$i$i = 0, $$idx7$val18$i$i$i = 0, $$idx7$val18$i$i$i494 = 0, $$idx7$val18$i$i$i659 = 0, $$idx7$val18$i$i$i981 = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$lcssa$i$i$i = 0, $$lcssa$i$i$i509 = 0, $$lcssa$i$i$i676 = 0, $$lcssa$i$i$i998 = 0, $$lcssa6013 = 0, $$lcssa6016 = 0, $$lcssa6017 = 0, $$lcssa6020 = 0, $$lcssa6021 = 0, $$lcssa6025 = 0, $$lcssa6027 = 0, $$lcssa6067 = 0, $$lcssa6069 = 0, $$lcssa6069$lcssa = 0, $$lcssa6071 = 0, $$lcssa6077 = 0, $$lcssa6080 = 0, $$lcssa6080$lcssa6181 = 0, $$lcssa6087 = 0, $$lcssa6087$lcssa = 0, $$lcssa6087$lcssa6554 = 0, $$lcssa6087$lcssa6555 = 0, $$lcssa6087$lcssa6556 = 0, $$lcssa6087$lcssa6559 = 0, $$lcssa6087$lcssa6560 = 0, $$lcssa6087$lcssa6561 = 0, $$lcssa6087$lcssa6562 = 0, $$lcssa6087$lcssa6563 = 0, $$lcssa6090 = 0, $$lcssa6090$lcssa = 0, $$lcssa6093 = 0, $$lcssa6096 = 0, $$lcssa6098 = 0, $$lcssa6098$lcssa = 0, $$lcssa6098$lcssa6528 = 0, $$lcssa6098$lcssa6529 = 0, $$lcssa6098$lcssa6530 = 0, $$lcssa6098$lcssa6533 = 0, $$lcssa6098$lcssa6534 = 0, $$lcssa6098$lcssa6536 = 0, $$lcssa6098$lcssa6537 = 0, $$lcssa6104 = 0, $$lcssa6105 = 0, $$lcssa6112 = 0, $$lcssa6113 = 0, $$lcssa6116 = 0, $$lcssa6117 = 0, $$lcssa6123 = 0, $$lcssa6124 = 0, $$lcssa6125 = 0, $$lcssa6127 = 0, $$lcssa6128 = 0, $$lcssa6130 = 0, $$lcssa6131 = 0, $$lcssa6133 = 0, $$lcssa6134 = 0, $$lcssa6137 = 0, $$lcssa6138 = 0, $$lcssa6139 = 0, $$lcssa6144 = 0, $$lcssa6145 = 0, $$lcssa6146 = 0, $$lcssa6148 = 0, $$lcssa6149 = 0, $$lcssa6150 = 0, $$lcssa6151 = 0, $$lcssa6152 = 0, $$lcssa6158 = 0, $$lcssa6159 = 0, $$lcssa6160 = 0, $$lcssa6164 = 0, $$lcssa6169 = 0, $$lcssa6174 = 0, $$lcssa6186 = 0, $$lcssa6187 = 0, $$lcssa6190 = 0, $$lcssa6191 = 0, $$lcssa6196 = 0, $$lcssa6197 = 0, $$lcssa6198 = 0, $$lcssa6211 = 0, $$lcssa6211$lcssa6942 = 0, $$lcssa6213 = 0, $$lcssa6214 = 0, $$lcssa6216 = 0, $$lcssa6217 = 0, $$lcssa6218 = 0, $$lcssa6219 = 0, $$lcssa6221 = 0, $$lcssa6223 = 0, $$lcssa6225 = 0, $$lcssa6227 = 0, $$lcssa6228 = 0, $$lcssa6305 = 0, $$lcssa6310 = 0, $$lcssa6311 = 0, $$lcssa6315 = 0, $$lcssa6326 = 0, $$lcssa6327 = 0, $$lcssa6331 = 0, $$lcssa6338 = 0, $$lcssa6339 = 0, $$lcssa6344 = 0, $$lcssa6377 = 0, $$lcssa6378 = 0, $$lcssa6383 = 0, $$lcssa6458 = 0, $$lcssa6461 = 0, $$lcssa6462 = 0, $$lcssa6463 = 0, $$lcssa6464 = 0, $$lcssa6465 = 0, $$lcssa6466 = 0, $$lcssa6468 = 0, $$lcssa6469 = 0, $$lcssa6470 = 0, $$lcssa6471 = 0, $$lcssa6472 = 0, $$lcssa6476 = 0, $$lcssa6477 = 0, $$lcssa6479 = 0, $$lcssa6481 = 0, $$lcssa6482 = 0, $$lcssa6483 = 0, $$lcssa6488 = 0, $$lcssa6489 = 0, $$lcssa6494 = 0, $$lcssa6495 = 0, $$lcssa6496 = 0, $$lcssa6497 = 0, $$lcssa6498 = 0, $$lcssa6499 = 0, $$lcssa6500 = 0, $$lcssa6501 = 0, $$lcssa6502 = 0, $$lcssa6503 = 0, $$lcssa6504 = 0, $$lcssa6510 = 0, $$lcssa6515 = 0, $$lcssa6519 = 0, $$lcssa6523 = 0, $$lcssa6524 = 0, $$lcssa6526 = 0, $$lcssa6527 = 0, $$lcssa6567 = 0, $$lcssa6568 = 0, $$lcssa6569 = 0, $$lcssa6575 = 0, $$lcssa6581 = 0, $$lcssa6587 = 0, $$lcssa6593 = 0, $$lcssa6601 = 0, $$lcssa6602 = 0, $$lcssa6605 = 0, $$lcssa6606 = 0, $$lcssa6610 = 0, $$lcssa6611 = 0, $$lcssa6773 = 0, $$lcssa6935 = 0, $$lcssa6936 = 0, $$lcssa6937 = 0, $$lcssa6939 = 0, $$lcssa6941 = 0, $$lcssa6943 = 0, $$pre = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i425 = 0, $$pre$i$i$i$i$i$i1037 = 0, $$pre$i$i$i$i$i$i1520 = 0, $$pre$i$i$i$i$i$i2093 = 0, $$pre$i$i$i$i$i$i2134 = 0, $$pre$i$i$i$i$i$i2253 = 0, $$pre$i$i$i$i$i$i2294 = 0, $$pre$i$i$i$i$i$i768 = 0, $$pre$i$i$i$i440 = 0, $$pre$i$i$i417 = 0, $$pre$i$i1053 = 0, $$pre$i$i1536 = 0, $$pre$i$i2109 = 0, $$pre$i$i2152 = 0, $$pre$i$i2269 = 0, $$pre$i$i2310 = 0, $$pre$i$i784 = 0, $$pre$i1086 = 0, $$pre$phi4990Z2D = 0, $$pre$phi4992Z2D = 0, $$pre4951 = 0, $$pre4954 = 0, $$pre4967 = 0, $$pre4968 = 0, $$pre4969 = 0, $$pre4970 = 0, $$pre4986$pre$phiZZ2D = 0, $$sroa$22540 = 0, $$sroa$3 = 0, $$sroa$32410 = 0, $$sroa$32418 = 0, $$sroa$32454 = 0, $$sroa$32491 = 0, $$sroa$32495 = 0, $$sroa$32499 = 0, $$sroa$32503 = 0, $$sroa$32522 = 0, $$sroa$32526 = 0, $$sroa$32530 = 0, $$sroa$32534 = 0, $$sroa$32544 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1004 = 0, $1006 = 0, $101 = 0, $1010 = 0, $1012 = 0, $1014 = 0, $1016 = 0, $1017 = 0, $102 = 0, $1024 = 0, $1026 = 0, $1027 = 0, $103 = 0, $1033 = 0, $1035 = 0, $1037 = 0, $1039 = 0, $104 = 0, $1040 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1065 = 0, $1066 = 0, $107 = 0, $108 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1095 = 0, $1096 = 0, $11 = 0, $110 = 0, $1100 = 0, $1103 = 0, $1105 = 0, $1107 = 0, $1108 = 0, $111 = 0, $1111 = 0, $1112 = 0, $1117 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1126 = 0, $1128 = 0, $113 = 0, $1130 = 0, $1132 = 0, $1133 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1142 = 0, $1143 = 0, $115 = 0, $1150 = 0, $116 = 0, $1164 = 0, $1167 = 0, $117 = 0, $1171 = 0, $118 = 0, $1180 = 0, $1185 = 0, $1187 = 0, $119 = 0, $1191 = 0, $1193 = 0, $1196 = 0, $1198 = 0, $12 = 0, $120 = 0, $1201 = 0, $1202 = 0, $1205 = 0, $121 = 0, $1210 = 0, $1212 = 0, $1215 = 0, $122 = 0, $1220 = 0, $1222 = 0, $1225 = 0, $1229 = 0, $123 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1236 = 0, $1237 = 0, $124 = 0, $1240 = 0, $1242 = 0, $1245 = 0, $1246 = 0, $1249 = 0, $125 = 0, $1254 = 0, $1256 = 0, $1259 = 0, $126 = 0, $1263 = 0, $1264 = 0, $1266 = 0, $1267 = 0, $127 = 0, $1271 = 0, $1273 = 0, $1276 = 0, $1278 = 0, $128 = 0, $1280 = 0, $1283 = 0, $129 = 0, $1290 = 0, $1298 = 0, $13 = 0, $130 = 0, $1304 = 0, $1305 = 0, $1309 = 0, $131 = 0, $1312 = 0, $1315 = 0, $1317 = 0, $1318 = 0, $132 = 0, $133 = 0, $1330 = 0, $134 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1346 = 0, $1347 = 0, $135 = 0, $1350 = 0, $1352 = 0, $1354 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $136 = 0, $1361 = 0, $1362 = 0, $1365 = 0, $1366 = 0, $137 = 0, $1371 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $138 = 0, $1380 = 0, $1382 = 0, $1384 = 0, $1386 = 0, $1387 = 0, $139 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1396 = 0, $1397 = 0, $14 = 0, $140 = 0, $1404 = 0, $141 = 0, $1418 = 0, $142 = 0, $1421 = 0, $1425 = 0, $143 = 0, $1434 = 0, $1439 = 0, $144 = 0, $1441 = 0, $1445 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1456 = 0, $1457 = 0, $146 = 0, $1469 = 0, $147 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $148 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $149 = 0, $1491 = 0, $1492 = 0, $1497 = 0, $1498 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1505 = 0, $151 = 0, $1516 = 0, $152 = 0, $1521 = 0, $1522 = 0, $1527 = 0, $1528 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1534 = 0, $1535 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1542 = 0, $1543 = 0, $1545 = 0, $1547 = 0, $1549 = 0, $155 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1563 = 0, $1565 = 0, $157 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $158 = 0, $1580 = 0, $1584 = 0, $1586 = 0, $1588 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1594 = 0, $1596 = 0, $1597 = 0, $16 = 0, $160 = 0, $1605 = 0, $1606 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1617 = 0, $1618 = 0, $162 = 0, $1620 = 0, $1622 = 0, $1623 = 0, $1626 = 0, $1628 = 0, $163 = 0, $1630 = 0, $1632 = 0, $1634 = 0, $1635 = 0, $1637 = 0, $1638 = 0, $164 = 0, $165 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $166 = 0, $1660 = 0, $1662 = 0, $1665 = 0, $1666 = 0, $167 = 0, $1671 = 0, $1676 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1685 = 0, $1687 = 0, $1689 = 0, $169 = 0, $1691 = 0, $1692 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $17 = 0, $170 = 0, $1702 = 0, $1704 = 0, $1706 = 0, $171 = 0, $1714 = 0, $1715 = 0, $1718 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1724 = 0, $1725 = 0, $1727 = 0, $173 = 0, $1731 = 0, $1733 = 0, $1736 = 0, $174 = 0, $1742 = 0, $1746 = 0, $1748 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1754 = 0, $1755 = 0, $1757 = 0, $176 = 0, $1762 = 0, $1763 = 0, $1765 = 0, $1767 = 0, $177 = 0, $1770 = 0, $1773 = 0, $1774 = 0, $178 = 0, $1781 = 0, $1782 = 0, $1789 = 0, $179 = 0, $1792 = 0, $1795 = 0, $1797 = 0, $1799 = 0, $18 = 0, $180 = 0, $1802 = 0, $1803 = 0, $1805 = 0, $1808 = 0, $181 = 0, $1813 = 0, $1814 = 0, $1816 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1822 = 0, $1824 = 0, $1826 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1834 = 0, $1836 = 0, $1838 = 0, $184 = 0, $1841 = 0, $1848 = 0, $185 = 0, $1851 = 0, $1852 = 0, $1854 = 0, $1855 = 0, $1859 = 0, $186 = 0, $1861 = 0, $1864 = 0, $1867 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1873 = 0, $1876 = 0, $188 = 0, $1881 = 0, $1883 = 0, $1884 = 0, $1887 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1893 = 0, $1895 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1902 = 0, $1903 = 0, $1909 = 0, $191 = 0, $1911 = 0, $1914 = 0, $192 = 0, $1928 = 0, $193 = 0, $1930 = 0, $1936 = 0, $1938 = 0, $194 = 0, $1940 = 0, $1942 = 0, $1943 = 0, $1949 = 0, $195 = 0, $1952 = 0, $1959 = 0, $196 = 0, $1963 = 0, $1968 = 0, $197 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1979 = 0, $198 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1988 = 0, $1993 = 0, $1994 = 0, $1999 = 0, $2 = 0, $20 = 0, $2000 = 0, $2002 = 0, $2003 = 0, $2006 = 0, $2007 = 0, $2009 = 0, $201 = 0, $2011 = 0, $2012 = 0, $2014 = 0, $2015 = 0, $2017 = 0, $2019 = 0, $202 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2034 = 0, $2035 = 0, $2037 = 0, $2039 = 0, $204 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2054 = 0, $2055 = 0, $2057 = 0, $2059 = 0, $206 = 0, $2061 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2067 = 0, $2069 = 0, $207 = 0, $2071 = 0, $2073 = 0, $2075 = 0, $2077 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2083 = 0, $2084 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $209 = 0, $2090 = 0, $2093 = 0, $2098 = 0, $21 = 0, $210 = 0, $2100 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2109 = 0, $211 = 0, $2111 = 0, $2113 = 0, $2115 = 0, $2116 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2128 = 0, $213 = 0, $2130 = 0, $2138 = 0, $214 = 0, $2141 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2155 = 0, $216 = 0, $2160 = 0, $2162 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $217 = 0, $2171 = 0, $2173 = 0, $2175 = 0, $2177 = 0, $2178 = 0, $218 = 0, $2181 = 0, $2182 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $219 = 0, $2190 = 0, $2194 = 0, $2196 = 0, $2199 = 0, $22 = 0, $220 = 0, $2205 = 0, $2206 = 0, $2208 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2213 = 0, $2214 = 0, $2216 = 0, $2218 = 0, $222 = 0, $2220 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2226 = 0, $2227 = 0, $223 = 0, $2234 = 0, $224 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2245 = 0, $2247 = 0, $2248 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2253 = 0, $2255 = 0, $2257 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2263 = 0, $2264 = 0, $227 = 0, $228 = 0, $2280 = 0.0, $2282 = 0, $2283 = 0, $2286 = 0, $2288 = 0, $229 = 0, $2290 = 0, $2292 = 0, $2293 = 0, $23 = 0, $230 = 0, $2304 = 0.0, $231 = 0, $2311 = 0.0, $2318 = 0.0, $232 = 0, $2325 = 0.0, $233 = 0, $2332 = 0.0, $2337 = 0, $234 = 0, $2342 = 0, $2347 = 0, $235 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2356 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2361 = 0, $2362 = 0, $2364 = 0, $2366 = 0, $2368 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2379 = 0, $238 = 0, $2381 = 0, $2382 = 0, $2384 = 0, $2385 = 0, $2387 = 0, $2389 = 0, $239 = 0, $2391 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2402 = 0, $2404 = 0, $2405 = 0, $2407 = 0, $2408 = 0, $241 = 0, $2410 = 0, $2412 = 0, $2414 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $242 = 0, $2420 = 0, $2421 = 0, $2423 = 0, $2424 = 0, $2426 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2431 = 0, $2432 = 0, $2434 = 0, $2436 = 0, $2438 = 0, $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2444 = 0, $2445 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2452 = 0, $2453 = 0, $2456 = 0, $2457 = 0, $246 = 0, $2462 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $247 = 0, $2471 = 0, $2473 = 0, $2475 = 0, $2477 = 0, $2478 = 0, $248 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2487 = 0, $2488 = 0, $249 = 0, $2495 = 0, $25 = 0, $250 = 0, $2509 = 0, $251 = 0, $2512 = 0, $2516 = 0, $252 = 0, $2525 = 0, $253 = 0, $2530 = 0, $2532 = 0, $2536 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2546 = 0, $255 = 0, $2551 = 0, $256 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $257 = 0, $2573 = 0, $2574 = 0, $2576 = 0, $2578 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2585 = 0, $2587 = 0, $2588 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2593 = 0, $2595 = 0, $2597 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0, $2603 = 0, $2604 = 0, $2606 = 0, $2608 = 0, $261 = 0, $2610 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2617 = 0, $2618 = 0, $262 = 0, $2620 = 0, $2622 = 0, $2624 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2632 = 0, $2633 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $264 = 0, $2643 = 0, $2648 = 0, $265 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2657 = 0, $2659 = 0, $266 = 0, $2661 = 0, $2663 = 0, $2664 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2674 = 0, $2677 = 0, $268 = 0, $2685 = 0, $2686 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2694 = 0, $2696 = 0, $2698 = 0, $27 = 0, $270 = 0, $2701 = 0, $2702 = 0, $2706 = 0, $2708 = 0, $271 = 0, $2710 = 0, $2713 = 0, $272 = 0, $2720 = 0, $2723 = 0, $2724 = 0, $2726 = 0, $2727 = 0, $273 = 0, $2731 = 0, $2733 = 0, $2736 = 0, $2739 = 0, $274 = 0, $2742 = 0, $2743 = 0, $2745 = 0, $2748 = 0, $275 = 0, $2752 = 0, $2759 = 0, $276 = 0, $2761 = 0, $2764 = 0, $2765 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2775 = 0, $2777 = 0, $278 = 0, $2780 = 0, $2789 = 0, $279 = 0, $2792 = 0, $2794 = 0, $2795 = 0, $2798 = 0, $2799 = 0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0, $2802 = 0, $281 = 0, $2810 = 0, $2812 = 0, $2815 = 0, $2816 = 0, $2818 = 0, $282 = 0, $2821 = 0, $2826 = 0, $2828 = 0, $283 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $2837 = 0, $2839 = 0, $284 = 0, $2841 = 0, $2843 = 0, $2844 = 0, $2847 = 0, $2848 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2852 = 0, $2856 = 0, $2858 = 0, $286 = 0, $2860 = 0, $2862 = 0, $2864 = 0, $2866 = 0, $2867 = 0, $287 = 0, $2872 = 0, $2874 = 0, $2878 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2885 = 0, $2889 = 0, $289 = 0, $2891 = 0, $2893 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2899 = 0, $29 = 0, $290 = 0, $2901 = 0, $2902 = 0, $2904 = 0, $2906 = 0, $2907 = 0, $2909 = 0, $291 = 0, $2911 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2917 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2922 = 0, $2923 = 0, $2925 = 0, $293 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2936 = 0, $294 = 0, $2940 = 0, $2942 = 0, $2944 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $295 = 0, $2950 = 0, $2952 = 0, $2953 = 0, $296 = 0, $2961 = 0, $2963 = 0, $2964 = 0, $2966 = 0, $2968 = 0, $297 = 0, $2970 = 0, $2972 = 0, $2974 = 0, $2976 = 0, $2978 = 0, $298 = 0, $2980 = 0, $2981 = 0, $2984 = 0, $2987 = 0, $2988 = 0, $299 = 0, $2994 = 0, $2996 = 0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3002 = 0, $3003 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3015 = 0, $3019 = 0, $302 = 0, $3021 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3034 = 0, $3035 = 0, $3037 = 0, $304 = 0, $3042 = 0, $3047 = 0, $3049 = 0, $305 = 0, $3052 = 0, $3053 = 0, $3054 = 0, $3058 = 0, $306 = 0, $3060 = 0, $3062 = 0, $3064 = 0, $3065 = 0, $3068 = 0, $3069 = 0, $307 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3077 = 0, $3079 = 0, $308 = 0, $3081 = 0, $3084 = 0, $3085 = 0, $3089 = 0, $309 = 0, $3092 = 0, $3095 = 0, $3099 = 0, $31 = 0, $310 = 0, $3103 = 0, $3104 = 0, $3106 = 0, $3109 = 0, $311 = 0, $3111 = 0, $3114 = 0, $3118 = 0, $312 = 0, $3121 = 0, $3123 = 0, $3126 = 0, $3128 = 0, $3129 = 0, $313 = 0, $3132 = 0, $3134 = 0, $3137 = 0, $314 = 0, $3141 = 0, $3143 = 0, $3146 = 0, $315 = 0, $3151 = 0, $3152 = 0, $3155 = 0, $3156 = 0, $3157 = 0, $3158 = 0, $316 = 0, $3161 = 0, $3163 = 0, $3164 = 0, $3166 = 0, $3167 = 0, $317 = 0, $3170 = 0, $3175 = 0, $3176 = 0, $318 = 0, $3182 = 0, $3184 = 0, $3187 = 0, $319 = 0, $3191 = 0, $3193 = 0, $3196 = 0, $32 = 0, $320 = 0, $3202 = 0, $3203 = 0, $321 = 0, $3210 = 0, $3211 = 0, $3215 = 0, $3216 = 0, $3219 = 0, $322 = 0, $3221 = 0, $3224 = 0, $3225 = 0, $3228 = 0, $3229 = 0, $323 = 0, $3235 = 0, $3237 = 0, $324 = 0, $3241 = 0, $3242 = 0, $3249 = 0, $325 = 0, $3251 = 0, $3253 = 0, $3254 = 0, $326 = 0, $3260 = 0, $3262 = 0, $3263 = 0, $3269 = 0, $327 = 0, $3270 = 0, $3275 = 0, $3277 = 0, $328 = 0, $3283 = 0.0, $3284 = 0, $3286 = 0, $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0, $3293 = 0, $3295 = 0, $3299 = 0.0, $33 = 0, $330 = 0, $3300 = 0, $3302 = 0, $3303 = 0, $3304 = 0, $3305 = 0, $3309 = 0, $331 = 0, $3311 = 0, $3315 = 0.0, $3316 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0, $3321 = 0, $3325 = 0, $3327 = 0, $333 = 0, $3331 = 0.0, $3332 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0, $334 = 0, $3341 = 0, $3343 = 0, $3347 = 0.0, $3348 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3357 = 0, $3359 = 0, $336 = 0, $3363 = 0.0, $3364 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0, $3373 = 0, $3375 = 0, $3379 = 0.0, $338 = 0, $3380 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3389 = 0, $339 = 0, $3391 = 0, $3395 = 0.0, $3396 = 0, $3398 = 0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3405 = 0, $3407 = 0, $341 = 0, $3411 = 0.0, $3412 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $342 = 0, $3421 = 0, $3423 = 0, $3427 = 0.0, $3428 = 0, $343 = 0, $3430 = 0, $3431 = 0, $3433 = 0, $3435 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3441 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3447 = 0, $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3453 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3459 = 0, $346 = 0, $3461 = 0, $3462 = 0, $3463 = 0, $3465 = 0, $3467 = 0, $3468 = 0, $3469 = 0, $347 = 0, $3471 = 0, $3473 = 0, $3474 = 0, $3475 = 0, $3476 = 0, $348 = 0, $3481 = 0, $3483 = 0, $3486 = 0, $3489 = 0, $349 = 0, $3495 = 0, $3496 = 0, $3498 = 0, $35 = 0, $350 = 0, $3500 = 0, $3502 = 0, $3503 = 0, $3504 = 0, $3506 = 0, $3507 = 0, $3509 = 0, $351 = 0, $3511 = 0, $3515 = 0, $3516 = 0, $3517 = 0, $3518 = 0, $352 = 0, $3524 = 0, $3525 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3532 = 0, $3534 = 0, $3536 = 0, $3539 = 0, $354 = 0, $3540 = 0, $3544 = 0, $3546 = 0, $3548 = 0, $355 = 0, $3551 = 0, $3558 = 0, $356 = 0, $3561 = 0, $3562 = 0, $3564 = 0, $3565 = 0, $3569 = 0, $357 = 0, $3571 = 0, $3574 = 0, $3577 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3583 = 0, $3586 = 0, $359 = 0, $3590 = 0, $3591 = 0, $3596 = 0, $3598 = 0, $36 = 0, $360 = 0, $3601 = 0, $3602 = 0, $3605 = 0, $3606 = 0, $361 = 0, $3612 = 0, $3614 = 0, $3617 = 0, $362 = 0, $3625 = 0, $3628 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3633 = 0, $3634 = 0, $3639 = 0, $364 = 0, $3641 = 0, $3646 = 0, $3647 = 0, $3649 = 0, $365 = 0, $3651 = 0, $3652 = 0, $3654 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0, $3663 = 0, $3664 = 0, $3665 = 0, $3667 = 0, $367 = 0, $3673 = 0, $3675 = 0, $368 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3693 = 0, $3695 = 0, $3698 = 0, $37 = 0, $370 = 0, $3707 = 0, $3708 = 0, $371 = 0, $3710 = 0, $3712 = 0, $3714 = 0, $3716 = 0, $3717 = 0, $3719 = 0, $372 = 0, $3720 = 0, $3721 = 0, $3724 = 0.0, $373 = 0, $3731 = 0.0, $3733 = 0, $3741 = 0, $3742 = 0, $3750 = 0.0, $3751 = 0, $3752 = 0, $3754 = 0, $3755 = 0, $3757 = 0, $3759 = 0, $3761 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3772 = 0, $3774 = 0, $3777 = 0, $3778 = 0, $3780 = 0, $3783 = 0, $3785 = 0, $3786 = 0, $3791 = 0, $3792 = 0, $3795 = 0, $3797 = 0, $38 = 0, $3800 = 0, $3802 = 0, $3805 = 0, $3809 = 0, $3811 = 0, $3812 = 0, $3813 = 0, $3814 = 0, $3816 = 0, $3817 = 0, $3819 = 0, $3824 = 0, $3829 = 0, $3831 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3840 = 0, $3842 = 0, $3844 = 0, $3846 = 0, $3847 = 0, $3850 = 0, $3851 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3859 = 0, $3861 = 0, $3863 = 0, $3866 = 0, $3867 = 0, $387 = 0, $3871 = 0, $3873 = 0, $3876 = 0, $3884 = 0, $3885 = 0, $3889 = 0, $389 = 0, $3891 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3898 = 0, $39 = 0, $3903 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $391 = 0, $3910 = 0, $3914 = 0, $3916 = 0, $3918 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0, $3924 = 0, $3926 = 0, $3927 = 0, $3929 = 0, $3936 = 0, $3937 = 0, $3939 = 0, $3940 = 0, $3942 = 0, $3944 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3950 = 0, $3952 = 0, $3953 = 0, $3958 = 0, $3959 = 0.0, $3960 = 0, $3961 = 0, $3965 = 0, $3967 = 0, $397 = 0, $3971 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3978 = 0, $398 = 0, $3982 = 0, $3984 = 0, $3986 = 0, $3988 = 0, $3989 = 0, $3990 = 0, $3992 = 0, $3994 = 0, $3995 = 0, $3997 = 0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4002 = 0, $4004 = 0, $4006 = 0, $4007 = 0, $4008 = 0, $401 = 0, $4010 = 0, $4012 = 0, $4013 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $402 = 0, $4020 = 0, $4024 = 0, $4026 = 0, $4028 = 0, $403 = 0, $4030 = 0, $4031 = 0, $4032 = 0, $4034 = 0, $4036 = 0, $4038 = 0, $4039 = 0, $404 = 0, $4041 = 0, $4043 = 0, $4044 = 0, $4046 = 0, $4048 = 0, $4050 = 0, $4052 = 0, $4054 = 0, $4055 = 0, $4057 = 0, $4059 = 0, $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4068 = 0, $4070 = 0, $4074 = 0.0, $4075 = 0, $4077 = 0, $4078 = 0, $4079 = 0, $408 = 0, $4080 = 0, $4084 = 0, $4086 = 0, $4090 = 0.0, $4091 = 0, $4093 = 0, $4094 = 0, $4095 = 0, $4096 = 0, $41 = 0, $410 = 0, $4100 = 0, $4102 = 0, $4106 = 0.0, $4107 = 0, $4109 = 0, $4110 = 0, $4111 = 0, $4112 = 0, $4116 = 0, $4118 = 0, $4124 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0, $4134 = 0, $4136 = 0, $4139 = 0.0, $414 = 0, $4141 = 0, $4142 = 0, $4144 = 0, $4146 = 0, $4148 = 0, $4149 = 0, $4150 = 0, $4152 = 0, $4153 = 0, $4156 = 0.0, $4157 = 0, $4159 = 0, $4160 = 0, $4164 = 0, $4166 = 0, $4169 = 0, $4170 = 0, $4172 = 0, $4174 = 0, $4175 = 0, $4177 = 0, $4182 = 0, $4184 = 0, $419 = 0, $4195 = 0, $4197 = 0, $4199 = 0, $42 = 0, $4200 = 0, $4201 = 0, $4205 = 0, $4206 = 0, $4210 = 0, $4215 = 0, $4216 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4228 = 0, $4229 = 0, $4231 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4237 = 0, $4238 = 0, $4239 = 0, $424 = 0, $4240 = 0, $4242 = 0, $4244 = 0, $4245 = 0, $4247 = 0, $4248 = 0, $4254 = 0, $4256 = 0, $4257 = 0, $4262 = 0, $4263 = 0, $4265 = 0, $4266 = 0, $4267 = 0, $4269 = 0, $427 = 0, $4271 = 0, $4273 = 0, $4275 = 0, $4276 = 0, $428 = 0, $4282 = 0, $4285 = 0, $429 = 0, $4293 = 0, $43 = 0, $4306 = 0, $4308 = 0, $4310 = 0, $4313 = 0, $4314 = 0, $4323 = 0, $4325 = 0, $4327 = 0, $4328 = 0, $4329 = 0, $433 = 0, $4330 = 0, $4332 = 0, $4333 = 0, $4335 = 0, $4336 = 0, $4338 = 0, $4340 = 0, $4342 = 0, $4344 = 0, $4345 = 0, $4346 = 0, $4348 = 0, $4349 = 0, $435 = 0, $4352 = 0, $4354 = 0, $4355 = 0, $4357 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4364 = 0, $4365 = 0, $4367 = 0, $4368 = 0, $437 = 0, $4370 = 0, $4372 = 0, $4374 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4380 = 0, $4381 = 0, $4386 = 0, $4388 = 0, $439 = 0, $4390 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4397 = 0, $4398 = 0, $44 = 0, $440 = 0, $4400 = 0, $4401 = 0, $4403 = 0, $4405 = 0, $4407 = 0, $4409 = 0, $4410 = 0, $4411 = 0, $4413 = 0, $4414 = 0, $4416 = 0, $4418 = 0, $4422 = 0, $4425 = 0, $4426 = 0, $4427 = 0, $4430 = 0, $4434 = 0, $4436 = 0, $4438 = 0, $444 = 0, $4440 = 0, $4441 = 0, $4442 = 0, $4444 = 0, $4446 = 0, $4447 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4452 = 0, $4453 = 0, $4455 = 0, $4456 = 0, $4458 = 0, $446 = 0, $4460 = 0, $4461 = 0, $4464 = 0, $4466 = 0, $4468 = 0, $4470 = 0, $4472 = 0, $4473 = 0, $4475 = 0, $4479 = 0, $4489 = 0, $4493 = 0, $4494 = 0, $4495 = 0, $4497 = 0, $4498 = 0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4503 = 0, $4505 = 0, $4507 = 0, $4509 = 0, $4510 = 0, $4511 = 0, $4513 = 0, $4514 = 0, $4518 = 0, $4522 = 0, $4526 = 0, $4527 = 0, $4528 = 0, $4530 = 0, $4531 = 0, $4533 = 0, $4534 = 0, $4536 = 0, $4538 = 0, $4540 = 0, $4542 = 0, $4543 = 0, $4544 = 0, $4546 = 0, $4547 = 0, $4548 = 0, $4549 = 0, $4551 = 0, $4557 = 0, $4560 = 0, $4561 = 0, $4562 = 0, $4563 = 0, $4566 = 0, $4570 = 0, $4572 = 0, $4574 = 0, $4576 = 0, $4577 = 0, $4578 = 0, $4580 = 0, $4582 = 0, $4583 = 0, $4585 = 0, $4586 = 0, $4588 = 0, $4589 = 0, $459 = 0, $4591 = 0, $4592 = 0, $4594 = 0, $4596 = 0, $4597 = 0, $46 = 0, $4600 = 0, $4602 = 0, $4604 = 0, $4606 = 0, $4608 = 0, $4609 = 0, $461 = 0, $4614 = 0, $4617 = 0, $4619 = 0, $4620 = 0, $4621 = 0, $4626 = 0, $4627 = 0, $4632 = 0, $4633 = 0, $4635 = 0, $4636 = 0, $4638 = 0, $4639 = 0, $464 = 0, $4640 = 0, $4641 = 0, $4642 = 0, $4644 = 0, $4645 = 0, $4647 = 0, $4648 = 0, $465 = 0, $4650 = 0, $4652 = 0, $4654 = 0, $4656 = 0, $4657 = 0, $4658 = 0, $4660 = 0, $4661 = 0, $4663 = 0, $4664 = 0, $4666 = 0, $4667 = 0, $4668 = 0, $4669 = 0, $4672 = 0, $4674 = 0, $4676 = 0, $4678 = 0, $4679 = 0, $468 = 0, $4680 = 0, $4681 = 0, $4683 = 0, $4684 = 0, $4685 = 0, $4686 = 0, $4687 = 0, $4688 = 0, $47 = 0, $470 = 0, $4700 = 0, $4701 = 0, $4702 = 0, $4710 = 0, $4711 = 0, $4719 = 0, $472 = 0, $4720 = 0, $4722 = 0, $4723 = 0, $4725 = 0, $4727 = 0, $4729 = 0, $4730 = 0, $4731 = 0, $4732 = 0, $4733 = 0, $4734 = 0, $4735 = 0, $4738 = 0, $4740 = 0, $4742 = 0, $4745 = 0, $4746 = 0, $4749 = 0, $475 = 0, $4752 = 0, $4758 = 0, $476 = 0, $4760 = 0, $4764 = 0, $4765 = 0, $4769 = 0, $4771 = 0, $4773 = 0, $4774 = 0, $4777 = 0, $4779 = 0, $4782 = 0, $4783 = 0, $4786 = 0, $4789 = 0, $4795 = 0, $4797 = 0, $48 = 0, $480 = 0, $4801 = 0, $4802 = 0, $4808 = 0, $4814 = 0, $4815 = 0, $4818 = 0, $482 = 0, $4820 = 0, $4822 = 0, $4825 = 0, $4826 = 0, $4830 = 0, $4832 = 0, $4834 = 0, $4837 = 0, $484 = 0, $4844 = 0, $4847 = 0, $4848 = 0, $4850 = 0, $4851 = 0, $4855 = 0, $4857 = 0, $4860 = 0, $4863 = 0, $4866 = 0, $4867 = 0, $4869 = 0, $487 = 0, $4872 = 0, $4876 = 0, $4878 = 0, $4879 = 0, $4881 = 0, $4882 = 0, $4883 = 0, $4885 = 0, $4887 = 0, $4890 = 0, $4897 = 0, $49 = 0, $4900 = 0, $4901 = 0, $4903 = 0, $4904 = 0, $4908 = 0, $4910 = 0, $4913 = 0, $4916 = 0, $4919 = 0, $4920 = 0, $4922 = 0, $4925 = 0, $4929 = 0, $4934 = 0, $4935 = 0, $4937 = 0, $4938 = 0, $494 = 0, $4940 = 0, $4941 = 0, $4946 = 0, $4949 = 0, $4950 = 0, $4951 = 0, $4953 = 0, $4954 = 0, $4956 = 0, $4958 = 0, $4960 = 0, $4962 = 0, $4963 = 0, $4964 = 0, $4965 = 0, $4966 = 0, $4969 = 0, $497 = 0, $4971 = 0, $4972 = 0, $4976 = 0, $4977 = 0, $498 = 0, $4980 = 0, $4981 = 0, $4982 = 0, $4984 = 0, $4985 = 0, $4988 = 0, $4990 = 0, $4993 = 0, $4994 = 0, $4997 = 0, $5 = 0, $50 = 0, $500 = 0, $5002 = 0, $5004 = 0, $5008 = 0, $5009 = 0, $501 = 0, $5017 = 0, $5019 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5027 = 0, $5031 = 0, $5033 = 0, $5035 = 0, $5037 = 0, $5038 = 0, $5039 = 0, $5041 = 0, $5043 = 0, $5044 = 0, $5046 = 0, $5048 = 0, $505 = 0, $5058 = 0, $5059 = 0, $5060 = 0, $5062 = 0, $5063 = 0, $5066 = 0, $5068 = 0, $507 = 0, $5070 = 0, $5072 = 0, $5073 = 0, $5074 = 0, $5076 = 0, $5077 = 0, $5078 = 0, $5079 = 0, $5081 = 0, $5082 = 0, $5083 = 0, $5084 = 0, $5085 = 0, $5094 = 0, $5095 = 0, $5096 = 0, $51 = 0, $510 = 0, $5104 = 0, $5105 = 0, $5113 = 0, $5114 = 0, $5116 = 0, $5117 = 0, $5119 = 0, $5121 = 0, $5123 = 0, $5124 = 0, $5125 = 0, $5126 = 0, $5127 = 0, $5128 = 0, $5129 = 0, $513 = 0, $5132 = 0, $5134 = 0, $5136 = 0, $5139 = 0, $5140 = 0, $5143 = 0, $5148 = 0, $5150 = 0, $5154 = 0, $5155 = 0, $516 = 0, $5160 = 0, $5167 = 0, $5168 = 0, $517 = 0, $5171 = 0, $5173 = 0, $5175 = 0, $5178 = 0, $5179 = 0, $5183 = 0, $5185 = 0, $5187 = 0, $519 = 0, $5190 = 0, $5197 = 0, $52 = 0, $5200 = 0, $5201 = 0, $5203 = 0, $5204 = 0, $5208 = 0, $5210 = 0, $5213 = 0, $5216 = 0, $5219 = 0, $522 = 0, $5220 = 0, $5222 = 0, $5225 = 0, $5230 = 0, $5232 = 0, $5234 = 0, $5235 = 0, $5238 = 0, $5240 = 0, $5242 = 0, $5245 = 0, $5246 = 0, $5250 = 0, $5252 = 0, $5254 = 0, $5257 = 0, $526 = 0, $5264 = 0, $5267 = 0, $5268 = 0, $527 = 0, $5270 = 0, $5271 = 0, $5275 = 0, $5277 = 0, $5280 = 0, $5283 = 0, $5286 = 0, $5287 = 0, $5289 = 0, $5292 = 0, $5296 = 0, $53 = 0, $5301 = 0, $5302 = 0, $5304 = 0, $5305 = 0, $5307 = 0, $5308 = 0, $5313 = 0, $5314 = 0, $5316 = 0, $5317 = 0, $5320 = 0, $5322 = 0, $5325 = 0, $5326 = 0, $5329 = 0, $533 = 0, $5334 = 0, $5336 = 0, $534 = 0, $5340 = 0, $5341 = 0, $5348 = 0, $5349 = 0, $5350 = 0, $5351 = 0, $5353 = 0, $5355 = 0, $5357 = 0, $5358 = 0, $5359 = 0, $5361 = 0, $5366 = 0, $5367 = 0, $5368 = 0, $537 = 0, $5378 = 0, $5379 = 0, $5380 = 0, $5382 = 0, $5385 = 0, $5386 = 0, $5389 = 0, $539 = 0, $5391 = 0, $5392 = 0, $5393 = 0, $54 = 0, $540 = 0, $5400 = 0, $5401 = 0, $5402 = 0, $5404 = 0, $5405 = 0, $5409 = 0, $5410 = 0, $5411 = 0, $5421 = 0, $5422 = 0, $5423 = 0, $5426 = 0, $5427 = 0, $543 = 0, $5430 = 0, $5432 = 0, $5433 = 0, $5434 = 0, $544 = 0, $5441 = 0, $5442 = 0, $5443 = 0, $5445 = 0, $5446 = 0, $5447 = 0, $5449 = 0, $5451 = 0, $5452 = 0, $5454 = 0, $5455 = 0, $5456 = 0, $5460 = 0, $5461 = 0, $5462 = 0, $5464 = 0, $5466 = 0, $5467 = 0, $5469 = 0, $547 = 0, $5470 = 0, $5472 = 0, $5474 = 0, $5476 = 0, $5478 = 0, $5479 = 0, $5480 = 0, $5482 = 0, $5483 = 0, $5484 = 0, $5485 = 0, $5487 = 0.0, $5491 = 0.0, $5492 = 0, $5493 = 0, $5495 = 0, $5497 = 0, $5498 = 0, $55 = 0, $5500 = 0, $5501 = 0, $5503 = 0, $5505 = 0, $5507 = 0, $5509 = 0, $551 = 0, $5510 = 0, $5511 = 0, $5513 = 0, $5514 = 0, $5515 = 0, $5516 = 0, $5519 = 0, $552 = 0, $5521 = 0, $5522 = 0, $5524 = 0, $5525 = 0, $5527 = 0, $5529 = 0, $553 = 0, $5539 = 0, $5540 = 0, $5541 = 0, $5542 = 0, $5544 = 0, $5546 = 0, $5548 = 0, $555 = 0, $5550 = 0, $5551 = 0, $5552 = 0, $5554 = 0, $5556 = 0, $5558 = 0, $5559 = 0, $556 = 0, $5562 = 0, $5567 = 0, $5568 = 0, $5573 = 0, $5574 = 0, $5576 = 0, $5577 = 0, $5582 = 0, $5583 = 0, $5584 = 0, $5585 = 0, $5586 = 0, $5587 = 0, $5588 = 0, $5589 = 0, $5590 = 0, $5591 = 0, $5592 = 0, $5593 = 0, $5594 = 0, $5595 = 0, $5596 = 0, $5597 = 0, $5598 = 0, $5599 = 0, $56 = 0, $5600 = 0, $5601 = 0, $5602 = 0, $5603 = 0, $5604 = 0, $5605 = 0, $5606 = 0, $5607 = 0, $5608 = 0, $5609 = 0, $5610 = 0, $5611 = 0, $5612 = 0, $5613 = 0, $5614 = 0, $5615 = 0, $5616 = 0, $5617 = 0, $5618 = 0, $5619 = 0, $562 = 0, $5620 = 0, $5621 = 0, $5622 = 0, $5623 = 0, $563 = 0, $565 = 0, $567 = 0, $568 = 0, $57 = 0, $571 = 0, $572 = 0, $577 = 0, $579 = 0, $58 = 0, $582 = 0, $583 = 0, $584 = 0, $588 = 0, $59 = 0, $590 = 0, $592 = 0, $594 = 0, $595 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $601 = 0, $602 = 0, $603 = 0, $606 = 0, $607 = 0, $609 = 0, $61 = 0, $610 = 0, $617 = 0, $619 = 0, $62 = 0, $620 = 0, $627 = 0, $63 = 0, $636 = 0, $638 = 0, $64 = 0, $644 = 0, $647 = 0, $65 = 0, $650 = 0, $654 = 0, $66 = 0, $663 = 0, $668 = 0, $67 = 0, $670 = 0, $674 = 0, $676 = 0, $678 = 0, $68 = 0, $680 = 0, $681 = 0, $688 = 0, $69 = 0, $690 = 0, $691 = 0, $697 = 0, $699 = 0, $7 = 0, $70 = 0, $701 = 0, $704 = 0, $71 = 0, $710 = 0, $72 = 0, $726 = 0, $728 = 0, $73 = 0, $730 = 0, $731 = 0, $734 = 0, $736 = 0, $738 = 0, $74 = 0, $741 = 0, $742 = 0, $746 = 0, $748 = 0, $75 = 0, $750 = 0, $753 = 0, $76 = 0, $760 = 0, $763 = 0, $764 = 0, $766 = 0, $767 = 0, $77 = 0, $771 = 0, $773 = 0, $776 = 0, $779 = 0, $78 = 0, $782 = 0, $783 = 0, $785 = 0, $788 = 0, $79 = 0, $792 = 0, $793 = 0, $795 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $802 = 0, $804 = 0, $806 = 0, $809 = 0, $81 = 0, $810 = 0, $814 = 0, $816 = 0, $818 = 0, $82 = 0, $821 = 0, $828 = 0, $83 = 0, $831 = 0, $832 = 0, $834 = 0, $835 = 0, $839 = 0, $84 = 0, $841 = 0, $844 = 0, $847 = 0, $85 = 0, $850 = 0, $851 = 0, $853 = 0, $856 = 0, $86 = 0, $860 = 0, $861 = 0, $867 = 0, $868 = 0, $87 = 0, $871 = 0, $873 = 0, $874 = 0, $877 = 0, $878 = 0, $88 = 0, $881 = 0, $885 = 0, $886 = 0, $887 = 0, $889 = 0, $89 = 0, $890 = 0, $896 = 0, $897 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $903 = 0, $904 = 0, $907 = 0, $908 = 0, $91 = 0, $913 = 0, $915 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $924 = 0, $926 = 0, $928 = 0, $93 = 0, $930 = 0, $931 = 0, $934 = 0, $935 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $942 = 0, $943 = 0, $945 = 0, $946 = 0, $95 = 0, $953 = 0, $955 = 0, $956 = 0, $96 = 0, $963 = 0, $97 = 0, $972 = 0, $974 = 0, $98 = 0, $980 = 0, $983 = 0, $986 = 0, $99 = 0, $990 = 0, $999 = 0, $__cache$017$i$i$i = 0, $__cache$017$i$i$i$lcssa = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0316$i$i$i = 0, $__first$04$ph$i$i$i = 0, $__first$0414$i$i$i = 0, $__k$val$i = 0, $__k$val$i1071 = 0, $__k$val$i10714994 = 0, $__k$val$i10714996 = 0, $__k$val$i1192 = 0, $__k$val$i1556 = 0, $__k$val$i15564998 = 0, $__k$val$i15565000 = 0, $__k$val$i2178 = 0, $__k$val$i2330 = 0, $__k$val$i546 = 0, $__k$val$i804 = 0, $__lhs_sz$03$i = 0, $__lp$04$i = 0, $__nd$0$be$in$i$i = 0, $__nd$0$be$in$i$i$i$i$i = 0, $__nd$0$be$in$i$i1074 = 0, $__nd$0$be$in$i$i1195 = 0, $__nd$0$be$in$i$i1559 = 0, $__nd$0$be$in$i$i2065 = 0, $__nd$0$be$in$i$i2076 = 0, $__nd$0$be$in$i$i2181 = 0, $__nd$0$be$in$i$i2236 = 0, $__nd$0$be$in$i$i23$i$i$i = 0, $__nd$0$be$in$i$i2333 = 0, $__nd$0$be$in$i$i549 = 0, $__nd$0$be$in$i$i807 = 0, $__nd$0$i$i = 0, $__nd$0$i$i$i$i$i = 0, $__nd$0$i$i$i$i$i$lcssa = 0, $__nd$0$i$i$i$i$i$lcssa6132 = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa6014 = 0, $__nd$0$i$i$lcssa6015 = 0, $__nd$0$i$i1072 = 0, $__nd$0$i$i1072$lcssa = 0, $__nd$0$i$i1072$lcssa6608 = 0, $__nd$0$i$i1072$lcssa6609 = 0, $__nd$0$i$i1193 = 0, $__nd$0$i$i1193$lcssa = 0, $__nd$0$i$i1193$lcssa6135 = 0, $__nd$0$i$i1193$lcssa6136 = 0, $__nd$0$i$i1557 = 0, $__nd$0$i$i1557$lcssa = 0, $__nd$0$i$i1557$lcssa6121 = 0, $__nd$0$i$i1557$lcssa6122 = 0, $__nd$0$i$i20$i$i$i = 0, $__nd$0$i$i20$i$i$i$lcssa = 0, $__nd$0$i$i20$i$i$i$lcssa6126 = 0, $__nd$0$i$i2063 = 0, $__nd$0$i$i2063$lcssa = 0, $__nd$0$i$i2063$lcssa6110 = 0, $__nd$0$i$i2063$lcssa6111 = 0, $__nd$0$i$i2074 = 0, $__nd$0$i$i2074$lcssa = 0, $__nd$0$i$i2074$lcssa6114 = 0, $__nd$0$i$i2074$lcssa6115 = 0, $__nd$0$i$i2179 = 0, $__nd$0$i$i2179$lcssa = 0, $__nd$0$i$i2179$lcssa6603 = 0, $__nd$0$i$i2179$lcssa6604 = 0, $__nd$0$i$i2234 = 0, $__nd$0$i$i2234$lcssa = 0, $__nd$0$i$i2234$lcssa6102 = 0, $__nd$0$i$i2234$lcssa6103 = 0, $__nd$0$i$i2331 = 0, $__nd$0$i$i2331$lcssa = 0, $__nd$0$i$i2331$lcssa6599 = 0, $__nd$0$i$i2331$lcssa6600 = 0, $__nd$0$i$i547 = 0, $__nd$0$i$i547$lcssa = 0, $__nd$0$i$i547$lcssa6018 = 0, $__nd$0$i$i547$lcssa6019 = 0, $__nd$0$i$i805 = 0, $__nd$0$i$i805$lcssa = 0, $__nd$0$i$i805$lcssa6142 = 0, $__nd$0$i$i805$lcssa6143 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa6026 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i436 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i436$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i436$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i436$lcssa6024 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa6023 = 0, $__nd$0$i20$i$i$i$i$in$i$i1049 = 0, $__nd$0$i20$i$i$i$i$in$i$i1049$be = 0, $__nd$0$i20$i$i$i$i$in$i$i1049$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i1049$lcssa6607 = 0, $__nd$0$i20$i$i$i$i$in$i$i1532 = 0, $__nd$0$i20$i$i$i$i$in$i$i1532$be = 0, $__nd$0$i20$i$i$i$i$in$i$i1532$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i1532$lcssa6120 = 0, $__nd$0$i20$i$i$i$i$in$i$i2105 = 0, $__nd$0$i20$i$i$i$i$in$i$i2105$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2105$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2105$lcssa6118 = 0, $__nd$0$i20$i$i$i$i$in$i$i2148 = 0, $__nd$0$i20$i$i$i$i$in$i$i2148$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2148$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2148$lcssa6119 = 0, $__nd$0$i20$i$i$i$i$in$i$i2265 = 0, $__nd$0$i20$i$i$i$i$in$i$i2265$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2265$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2265$lcssa6106 = 0, $__nd$0$i20$i$i$i$i$in$i$i2306 = 0, $__nd$0$i20$i$i$i$i$in$i$i2306$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2306$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2306$lcssa6107 = 0, $__nd$0$i20$i$i$i$i$in$i$i780 = 0, $__nd$0$i20$i$i$i$i$in$i$i780$be = 0, $__nd$0$i20$i$i$i$i$in$i$i780$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i780$lcssa6141 = 0, $__parent$i1070 = 0, $__parent$i1191 = 0, $__parent$i1555 = 0, $__parent$i803 = 0, $__r$0$i = 0, $__r$0$i1083 = 0, $__r$0$i1204 = 0, $__r$0$i1568 = 0, $__r$0$i2071 = 0, $__r$0$i2085 = 0, $__r$0$i2190 = 0, $__r$0$i2245 = 0, $__r$0$i2342 = 0, $__r$0$i558 = 0, $__r$0$i816 = 0, $__rp$05$i = 0, $__t$idx$val$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i18$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i2145 = 0, $__x$idx$i = 0, $__x$idx1$i$pre$phiZZZ2D = 0, $args = 0, $args68 = 0, $args68$idx$val = 0, $args68$idx353$val = 0, $args68$idx355$val = 0, $args68$idx365$val = 0, $args68$idx369$val = 0, $args68$idx371$val = 0, $args68$idx384$val = 0, $bindings = 0, $bindings65 = 0, $bindings83 = 0, $c105 = 0, $ch = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$i$i511$index14Z2D = 0, $eh$lpad$body$i$i511$indexZ2D = 0, $eh$lpad$body$i$index8Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i1113$index116Z2D = 0, $eh$lpad$body$i1113$indexZ2D = 0, $eh$lpad$body$i1132$index121Z2D = 0, $eh$lpad$body$i1132$indexZ2D = 0, $eh$lpad$body$i1704$index140Z2D = 0, $eh$lpad$body$i1704$indexZ2D = 0, $eh$lpad$body$i1745$index145Z2D = 0, $eh$lpad$body$i1745$indexZ2D = 0, $eh$lpad$body$i1764$index150Z2D = 0, $eh$lpad$body$i1764$indexZ2D = 0, $eh$lpad$body$i1979$index155Z2D = 0, $eh$lpad$body$i1979$indexZ2D = 0, $eh$lpad$body$i2013$index160Z2D = 0, $eh$lpad$body$i2013$indexZ2D = 0, $eh$lpad$body$i2193$index165Z2D = 0, $eh$lpad$body$i2193$indexZ2D = 0, $eh$lpad$body$i2349$index170Z2D = 0, $eh$lpad$body$i2349$indexZ2D = 0, $eh$lpad$body$i524$index20Z2D = 0, $eh$lpad$body$i524$indexZ2D = 0, $eh$lpad$body$i698$index31Z2D = 0, $eh$lpad$body$i698$indexZ2D = 0, $eh$lpad$body$index26Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body1108$index82Z2D = 0, $eh$lpad$body1108$indexZ2D = 0, $eh$lpad$body1137$index128Z2D = 0, $eh$lpad$body1137$indexZ2D = 0, $eh$lpad$body2376$index176Z2D = 0, $eh$lpad$body2376$indexZ2D = 0, $eh$lpad$body801$index36Z2D = 0, $eh$lpad$body801$indexZ2D = 0, $elements45 = 0, $elements75 = 0, $env = 0, $env129 = 0, $env137 = 0, $env26 = 0, $env27 = 0, $exp = 0, $exp106 = 0, $fields = 0, $fields88 = 0, $fields90 = 0, $found$0$off0 = 0, $found$0$off0$ph = 0, $i$0$i = 0, $i$0$i$lcssa6028 = 0, $i$0$i408 = 0, $i$0$i408$lcssa6022 = 0, $i$0$i535 = 0, $i$0$i535$lcssa6012 = 0, $i$0$i617 = 0, $i$0$i617$lcssa6011 = 0, $i$0$i627 = 0, $i$0$i627$lcssa6010 = 0, $i$0$i710 = 0, $i$0$i710$lcssa6140 = 0, $i$0$in$i = 0, $i$0$in$i407 = 0, $i$0$in$i534 = 0, $i$0$in$i616 = 0, $i$0$in$i626 = 0, $i$0$in$i682 = 0, $i$0$in$i709 = 0, $i$013$i$i = 0, $i$013$i$i$i = 0, $i$013$i$i$i496 = 0, $i$013$i$i$i661 = 0, $i$013$i$i$i983 = 0, $i$04063 = 0, $i$1$i$i = 0, $i$1$i$i$i = 0, $i$1$i$i$i507 = 0, $i$1$i$i$i673 = 0, $i$1$i$i$i995 = 0, $i41$04066 = 0, $i77$04055 = 0, $lpad$phi2724$index = 0, $lpad$phi2724$index41 = 0, $lpad$phi2730$index = 0, $lpad$phi2730$index47 = 0, $lpad$phi2741$index = 0, $lpad$phi2741$index135 = 0, $scevgep4$i$i$i$i$i$i = 0, $scevgep4$i$i$i$i$i$i504 = 0, $scevgep4$i$i$i$i$i$i670 = 0, $scevgep4$i$i$i$i$i$i992 = 0, $scevgep4$i$i$i$i$i541 = 0, $ss = 0, $ss102 = 0, $ss103 = 0, $ss104 = 0, $ss119 = 0, $ss125 = 0, $ss134 = 0, $ss141 = 0, $ss73 = 0, $ss76 = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i465 = 0, $this$idx2$val$i$i$i$i$i637 = 0, $this$idx2$val$i$i$i$i$i959 = 0, $this$idx2$val$i$i1016 = 0, $this$idx2$val$i$i1088 = 0, $this$idx2$val$i$i1165 = 0, $this$idx2$val$i$i1654 = 0, $this$idx2$val$i$i720 = 0, $this$idx2$val$i$i867 = 0, $this$idx2$val$i$i893 = 0, $this$idx3$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4336 | 0;
 $0 = sp + 4220 | 0;
 $1 = sp + 4208 | 0;
 $2 = sp + 4196 | 0;
 $3 = sp + 4184 | 0;
 $4 = sp + 4172 | 0;
 $5 = sp + 4160 | 0;
 $6 = sp + 4152 | 0;
 $__parent$i1555 = sp + 4148 | 0;
 $__parent$i1191 = sp + 4144 | 0;
 $7 = sp + 4132 | 0;
 $8 = sp + 4120 | 0;
 $__parent$i1070 = sp + 4116 | 0;
 $__parent$i803 = sp + 4112 | 0;
 $9 = sp + 4100 | 0;
 $10 = sp + 4088 | 0;
 $11 = sp + 4076 | 0;
 $12 = sp + 4064 | 0;
 $13 = sp + 704 | 0;
 $14 = sp + 4052 | 0;
 $15 = sp + 4040 | 0;
 $env = sp + 4028 | 0;
 $16 = sp + 4016 | 0;
 $17 = sp + 688 | 0;
 $18 = sp + 4004 | 0;
 $$sroa$32544 = sp + 4320 | 0;
 $19 = sp + 672 | 0;
 $20 = sp + 656 | 0;
 $$sroa$22540 = sp + 3992 | 0;
 $env26 = sp + 3980 | 0;
 $fields = sp + 3968 | 0;
 $21 = sp + 640 | 0;
 $22 = sp + 3956 | 0;
 $23 = sp + 3944 | 0;
 $env27 = sp + 3932 | 0;
 $24 = sp + 3920 | 0;
 $25 = sp + 3908 | 0;
 $26 = sp + 3896 | 0;
 $ss = sp + 3752 | 0;
 $27 = sp + 3740 | 0;
 $28 = sp + 3728 | 0;
 $args = sp + 3716 | 0;
 $bindings = sp + 3704 | 0;
 $$sroa$32534 = sp + 4313 | 0;
 $$sroa$32530 = sp + 4306 | 0;
 $29 = sp + 3692 | 0;
 $30 = sp + 3680 | 0;
 $31 = sp + 3668 | 0;
 $32 = sp + 3656 | 0;
 $33 = sp + 3644 | 0;
 $34 = sp + 3632 | 0;
 $35 = sp + 3620 | 0;
 $36 = sp + 3608 | 0;
 $37 = sp + 3596 | 0;
 $elements45 = sp + 3584 | 0;
 $38 = sp + 624 | 0;
 $39 = sp + 3572 | 0;
 $40 = sp + 3560 | 0;
 $41 = sp + 3548 | 0;
 $$sroa$32526 = sp + 4299 | 0;
 $$sroa$32522 = sp + 4292 | 0;
 $42 = sp + 3536 | 0;
 $43 = sp + 3524 | 0;
 $44 = sp + 3512 | 0;
 $45 = sp + 608 | 0;
 $46 = sp + 592 | 0;
 $47 = sp + 576 | 0;
 $48 = sp + 3500 | 0;
 $49 = sp + 560 | 0;
 $$sroa$32503 = sp + 4285 | 0;
 $$sroa$32499 = sp + 4278 | 0;
 $$sroa$32495 = sp + 4271 | 0;
 $$sroa$32491 = sp + 4264 | 0;
 $50 = sp + 3488 | 0;
 $51 = sp + 3476 | 0;
 $52 = sp + 3464 | 0;
 $53 = sp + 3452 | 0;
 $54 = sp + 3440 | 0;
 $55 = sp + 3428 | 0;
 $56 = sp + 3416 | 0;
 $57 = sp + 3404 | 0;
 $58 = sp + 3392 | 0;
 $59 = sp + 3380 | 0;
 $60 = sp + 3368 | 0;
 $61 = sp + 3356 | 0;
 $62 = sp + 544 | 0;
 $63 = sp + 3344 | 0;
 $64 = sp + 3332 | 0;
 $65 = sp + 3320 | 0;
 $66 = sp + 3308 | 0;
 $67 = sp + 3296 | 0;
 $68 = sp + 3284 | 0;
 $69 = sp + 528 | 0;
 $bindings65 = sp + 3272 | 0;
 $args68 = sp + 3260 | 0;
 $70 = sp + 3248 | 0;
 $ss73 = sp + 3104 | 0;
 $71 = sp + 3092 | 0;
 $elements75 = sp + 3080 | 0;
 $ss76 = sp + 2936 | 0;
 $72 = sp + 2920 | 0;
 $73 = sp + 512 | 0;
 $74 = sp + 2908 | 0;
 $75 = sp + 496 | 0;
 $76 = sp + 2896 | 0;
 $77 = sp + 480 | 0;
 $78 = sp + 2884 | 0;
 $79 = sp + 464 | 0;
 $80 = sp + 2872 | 0;
 $81 = sp + 448 | 0;
 $82 = sp + 2860 | 0;
 $83 = sp + 432 | 0;
 $84 = sp + 2848 | 0;
 $85 = sp + 416 | 0;
 $86 = sp + 2836 | 0;
 $87 = sp + 400 | 0;
 $88 = sp + 2824 | 0;
 $89 = sp + 384 | 0;
 $90 = sp + 2812 | 0;
 $91 = sp + 368 | 0;
 $92 = sp + 2800 | 0;
 $93 = sp + 352 | 0;
 $94 = sp + 336 | 0;
 $95 = sp + 2788 | 0;
 $96 = sp + 320 | 0;
 $97 = sp + 2776 | 0;
 $98 = sp + 304 | 0;
 $99 = sp + 2764 | 0;
 $100 = sp + 288 | 0;
 $101 = sp + 2752 | 0;
 $102 = sp + 272 | 0;
 $103 = sp + 2740 | 0;
 $104 = sp + 256 | 0;
 $105 = sp + 2728 | 0;
 $106 = sp + 240 | 0;
 $107 = sp + 2716 | 0;
 $108 = sp + 2704 | 0;
 $109 = sp + 2692 | 0;
 $110 = sp + 224 | 0;
 $111 = sp + 2680 | 0;
 $bindings83 = sp + 2668 | 0;
 $112 = sp + 2656 | 0;
 $113 = sp + 2644 | 0;
 $$sroa$32454 = sp + 4257 | 0;
 $114 = sp + 2632 | 0;
 $fields88 = sp + 2620 | 0;
 $115 = sp + 2608 | 0;
 $116 = sp + 2596 | 0;
 $117 = sp + 2584 | 0;
 $fields90 = sp + 2572 | 0;
 $118 = sp + 2560 | 0;
 $119 = sp + 208 | 0;
 $120 = sp + 2548 | 0;
 $121 = sp + 192 | 0;
 $122 = sp + 2536 | 0;
 $ss102 = sp + 2392 | 0;
 $123 = sp + 2380 | 0;
 $124 = sp + 2368 | 0;
 $ss103 = sp + 2224 | 0;
 $125 = sp + 2208 | 0;
 $ss104 = sp + 2064 | 0;
 $126 = sp + 2048 | 0;
 $c105 = sp + 4256 | 0;
 $127 = sp + 176 | 0;
 $128 = sp + 2036 | 0;
 $129 = sp + 2024 | 0;
 $130 = sp + 160 | 0;
 $131 = sp + 2012 | 0;
 $132 = sp + 144 | 0;
 $133 = sp + 2e3 | 0;
 $exp = sp + 1996 | 0;
 $134 = sp + 128 | 0;
 $135 = sp + 1984 | 0;
 $exp106 = sp + 1980 | 0;
 $136 = sp + 112 | 0;
 $137 = sp + 1968 | 0;
 $138 = sp + 1956 | 0;
 $139 = sp + 96 | 0;
 $$sroa$32418 = sp + 4249 | 0;
 $140 = sp + 1944 | 0;
 $141 = sp + 1932 | 0;
 $142 = sp + 80 | 0;
 $$sroa$32410 = sp + 4242 | 0;
 $143 = sp + 1920 | 0;
 $144 = sp + 1908 | 0;
 $145 = sp + 1896 | 0;
 $146 = sp + 1884 | 0;
 $147 = sp + 1872 | 0;
 $148 = sp + 1860 | 0;
 $149 = sp + 1848 | 0;
 $150 = sp + 1836 | 0;
 $151 = sp + 1824 | 0;
 $ss119 = sp + 1680 | 0;
 $152 = sp + 1664 | 0;
 $153 = sp + 1652 | 0;
 $154 = sp + 1640 | 0;
 $155 = sp + 1628 | 0;
 $156 = sp + 1616 | 0;
 $157 = sp + 1604 | 0;
 $158 = sp + 1592 | 0;
 $ss125 = sp + 1448 | 0;
 $159 = sp + 1432 | 0;
 $ch = sp + 4240 | 0;
 $160 = sp + 64 | 0;
 $161 = sp + 1420 | 0;
 $162 = sp + 1408 | 0;
 $163 = sp + 1396 | 0;
 $164 = sp + 1384 | 0;
 $165 = sp + 1372 | 0;
 $166 = sp + 1360 | 0;
 $167 = sp + 1348 | 0;
 $env129 = sp + 1336 | 0;
 $168 = sp + 48 | 0;
 $169 = sp + 1324 | 0;
 $170 = sp + 1312 | 0;
 $171 = sp + 1300 | 0;
 $172 = sp + 1288 | 0;
 $173 = sp + 32 | 0;
 $174 = sp + 1276 | 0;
 $175 = sp + 1264 | 0;
 $ss134 = sp + 1120 | 0;
 $176 = sp + 1104 | 0;
 $177 = sp + 1092 | 0;
 $178 = sp + 1080 | 0;
 $179 = sp + 1068 | 0;
 $env137 = sp + 1056 | 0;
 $180 = sp + 16 | 0;
 $181 = sp + 1044 | 0;
 $182 = sp + 1032 | 0;
 $ss141 = sp + 888 | 0;
 $183 = sp + 876 | 0;
 $184 = sp + 864 | 0;
 $185 = sp;
 $186 = sp + 852 | 0;
 $$sroa$3 = sp + 4232 | 0;
 $187 = sp + 840 | 0;
 $188 = sp + 828 | 0;
 $189 = sp + 816 | 0;
 $190 = sp + 804 | 0;
 $191 = sp + 792 | 0;
 $192 = sp + 780 | 0;
 $193 = sp + 768 | 0;
 $194 = sp + 756 | 0;
 $195 = sp + 744 | 0;
 $196 = sp + 732 | 0;
 $197 = sp + 720 | 0;
 $198 = $this + 72 | 0;
 $$idx$i = $this + 84 | 0;
 $$idx1$i = $this + 88 | 0;
 $201 = (HEAP32[$$idx1$i >> 2] | 0) - (HEAP32[$$idx$i >> 2] | 0) | 0;
 $202 = $14 + 4 | 0;
 $203 = $14 + 8 | 0;
 $204 = $this + 56 | 0;
 $205 = $this + 64 | 0;
 $206 = $this + 100 | 0;
 $207 = $15 + 4 | 0;
 $208 = $15 + 8 | 0;
 $209 = $15 + 4 | 0;
 $210 = $2 + 4 | 0;
 $211 = $2 + 8 | 0;
 $212 = $2 + 4 | 0;
 $213 = $0 + 4 | 0;
 $214 = $0 + 8 | 0;
 $215 = $0 + 4 | 0;
 $216 = $1 + 4 | 0;
 $217 = $1 + 8 | 0;
 $218 = $3 + 4 | 0;
 $219 = $this + 20 | 0;
 $220 = $this + 24 | 0;
 $221 = $this + 28 | 0;
 $222 = $this + 16 | 0;
 $223 = $this + 48 | 0;
 $224 = $this + 8 | 0;
 $225 = $this + 44 | 0;
 $226 = $this + 56 | 0;
 $$idx6$i$i$i = $this + 20 | 0;
 $227 = $11 + 4 | 0;
 $228 = $11 + 8 | 0;
 $229 = $11 + 4 | 0;
 $230 = $env + 4 | 0;
 $231 = $9 + 4 | 0;
 $232 = $9 + 8 | 0;
 $233 = $9 + 4 | 0;
 $234 = $10 + 4 | 0;
 $235 = $10 + 8 | 0;
 $236 = $12 + 4 | 0;
 $237 = $this + 96 | 0;
 $238 = $16 + 4 | 0;
 $239 = $16 + 8 | 0;
 $240 = $16 + 4 | 0;
 $241 = $18 + 4 | 0;
 $242 = $18 + 8 | 0;
 $243 = $18 + 4 | 0;
 $244 = $this + 65 | 0;
 $245 = $this + 60 | 0;
 $246 = $env26 + 4 | 0;
 $247 = $env26 + 8 | 0;
 $248 = $env26 + 4 | 0;
 $249 = $fields + 4 | 0;
 $250 = $fields + 8 | 0;
 $251 = $fields + 4 | 0;
 $252 = $22 + 4 | 0;
 $253 = $22 + 8 | 0;
 $254 = $22 + 4 | 0;
 $255 = $23 + 4 | 0;
 $256 = $23 + 8 | 0;
 $257 = $23 + 4 | 0;
 $258 = $env27 + 4 | 0;
 $259 = $args + 4 | 0;
 $260 = $args + 8 | 0;
 $261 = $bindings + 4 | 0;
 $262 = $bindings + 8 | 0;
 $263 = $bindings + 4 | 0;
 $264 = $28 + 4 | 0;
 $265 = $28 + 8 | 0;
 $266 = $28 + 4 | 0;
 $267 = $elements45 + 4 | 0;
 $268 = $elements45 + 8 | 0;
 $269 = $this + 64 | 0;
 $270 = $args68 + 4 | 0;
 $271 = $args68 + 8 | 0;
 $272 = $70 + 4 | 0;
 $273 = $70 + 8 | 0;
 $274 = $elements75 + 4 | 0;
 $275 = $elements75 + 8 | 0;
 $276 = $74 + 4 | 0;
 $277 = $74 + 8 | 0;
 $278 = $76 + 4 | 0;
 $279 = $76 + 8 | 0;
 $280 = $78 + 4 | 0;
 $281 = $78 + 8 | 0;
 $282 = $80 + 4 | 0;
 $283 = $80 + 8 | 0;
 $284 = $82 + 4 | 0;
 $285 = $82 + 8 | 0;
 $286 = $84 + 4 | 0;
 $287 = $84 + 8 | 0;
 $288 = $86 + 4 | 0;
 $289 = $86 + 8 | 0;
 $290 = $88 + 4 | 0;
 $291 = $88 + 8 | 0;
 $292 = $90 + 4 | 0;
 $293 = $90 + 8 | 0;
 $294 = $92 + 4 | 0;
 $295 = $92 + 8 | 0;
 $296 = $108 + 4 | 0;
 $297 = $108 + 8 | 0;
 $298 = $111 + 4 | 0;
 $299 = $111 + 8 | 0;
 $300 = $bindings83 + 4 | 0;
 $301 = $bindings83 + 8 | 0;
 $302 = $bindings83 + 4 | 0;
 $303 = $112 + 4 | 0;
 $304 = $112 + 8 | 0;
 $305 = $113 + 4 | 0;
 $306 = $fields88 + 8 | 0;
 $307 = $fields88 + 4 | 0;
 $308 = $117 + 4 | 0;
 $309 = $117 + 8 | 0;
 $310 = $fields90 + 4 | 0;
 $311 = $fields90 + 8 | 0;
 $312 = $fields90 + 4 | 0;
 $313 = $118 + 4 | 0;
 $314 = $120 + 4 | 0;
 $315 = $120 + 8 | 0;
 $316 = $122 + 4 | 0;
 $317 = $122 + 8 | 0;
 $318 = $124 + 4 | 0;
 $319 = $124 + 8 | 0;
 $320 = $129 + 4 | 0;
 $321 = $129 + 8 | 0;
 $322 = $131 + 4 | 0;
 $323 = $131 + 8 | 0;
 $324 = $133 + 4 | 0;
 $325 = $133 + 8 | 0;
 $326 = $135 + 4 | 0;
 $327 = $135 + 8 | 0;
 $328 = $137 + 4 | 0;
 $329 = $137 + 8 | 0;
 $330 = $140 + 4 | 0;
 $331 = $140 + 8 | 0;
 $332 = $this + 116 | 0;
 $333 = $this + 120 | 0;
 $334 = $ch + 1 | 0;
 $335 = $169 + 4 | 0;
 $336 = $169 + 8 | 0;
 $337 = $169 + 4 | 0;
 $338 = $env129 + 4 | 0;
 $339 = $170 + 4 | 0;
 $340 = $170 + 8 | 0;
 $341 = $170 + 4 | 0;
 $342 = $174 + 4 | 0;
 $343 = $174 + 8 | 0;
 $344 = $174 + 4 | 0;
 $345 = $175 + 4 | 0;
 $346 = $175 + 8 | 0;
 $347 = $175 + 4 | 0;
 $348 = $181 + 4 | 0;
 $349 = $181 + 8 | 0;
 $350 = $181 + 4 | 0;
 $351 = $env137 + 4 | 0;
 $352 = $182 + 4 | 0;
 $353 = $182 + 8 | 0;
 $354 = $182 + 4 | 0;
 $355 = $ss141 + 64 | 0;
 $356 = $ss141 + 8 | 0;
 $357 = $ss141 + 12 | 0;
 $358 = $ss141 + 4 | 0;
 $359 = $ss141 + 64 | 0;
 $360 = $ss141 + 136 | 0;
 $361 = $ss141 + 140 | 0;
 $362 = $ss141 + 44 | 0;
 $363 = $ss141 + 60 | 0;
 $364 = $184 + 1 | 0;
 $365 = $184 + 8 | 0;
 $366 = $184 + 4 | 0;
 $367 = $183 + 1 | 0;
 $368 = $183 + 8 | 0;
 $369 = $183 + 4 | 0;
 $370 = $bindings65 + 4 | 0;
 $371 = $bindings65 + 8 | 0;
 $372 = $bindings65 + 4 | 0;
 $$010 = $ast_;
 L1 : while (1) {
  $373 = $$010 + 32 | 0;
  L3 : do switch (HEAP32[$373 >> 2] | 0) {
  case 18:
   {
    $$idx$val$i623 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i626 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i623 | 0) / 144 | 0;
    while (1) {
     $i$0$i627 = $i$0$in$i626 + -1 | 0;
     if (($i$0$i627 | 0) <= -1) {
      label = 424;
      break;
     }
     if ((HEAP32[$$idx$val$i623 + ($i$0$i627 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i627$lcssa6010 = $i$0$i627;
      label = 423;
      break;
     } else $i$0$in$i626 = $i$0$i627;
    }
    if ((label | 0) == 423) {
     label = 0;
     $1342 = HEAP32[$$idx$val$i623 + ($i$0$i627$lcssa6010 * 144 | 0) + 124 >> 2] | 0;
     $1343 = HEAP32[$$idx$val$i623 + ($i$0$i627$lcssa6010 * 144 | 0) + 120 >> 2] | 0;
    } else if ((label | 0) == 424) {
     label = 0;
     $1342 = 0;
     $1343 = 0;
    }
    $1341 = $1342 + 1 | 0;
    if ($1341 >>> 0 >= (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($1343) | 0) >>> 0) {
     $$010$lcssa6614 = $$010;
     label = 426;
     break L1;
    }
    $1358 = __Znwj(16) | 0;
    HEAP32[$1358 >> 2] = 39800;
    HEAP32[$1358 + 8 >> 2] = $1343;
    HEAP32[$1358 + 12 >> 2] = $1341;
    $1361 = HEAP32[$220 >> 2] | 0;
    $1362 = HEAP32[$221 >> 2] | 0;
    if ($1361 >>> 0 < $1362 >>> 0) {
     if (!$1361) $1366 = 0; else {
      HEAP32[$1361 >> 2] = $1358;
      $1366 = HEAP32[$220 >> 2] | 0;
     }
     $1365 = $1366 + 4 | 0;
     HEAP32[$220 >> 2] = $1365;
     $$idx1$val$i$i$i652 = $1365;
    } else {
     $this$idx2$val$i$i$i$i$i637 = HEAP32[$219 >> 2] | 0;
     $1371 = ($1361 - $this$idx2$val$i$i$i$i$i637 >> 2) + 1 | 0;
     if ($1371 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($219);
      $$idx1$val$i$i$i$i$i$i$i640 = HEAP32[$221 >> 2] | 0;
      $1374 = HEAP32[$219 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i640 = $1362;
      $1374 = $this$idx2$val$i$i$i$i$i637;
     }
     $1375 = $1374;
     $1376 = $$idx1$val$i$i$i$i$i$i$i640 - $1375 | 0;
     if ($1376 >> 2 >>> 0 < 536870911) {
      $1382 = $1376 >> 1;
      $1384 = $1382 >>> 0 < $1371 >>> 0 ? $1371 : $1382;
      $1386 = (HEAP32[$220 >> 2] | 0) - $1375 | 0;
      $1387 = $1386 >> 2;
      if (!$1384) {
       $$0$i8$i$i$i$i$i646 = 0;
       $1392 = 0;
       $1393 = $1387;
       $1397 = $1386;
      } else {
       $$0$i7$i$i$i$i$i645 = $1384;
       $5593 = $1387;
       $5594 = $1386;
       label = 441;
      }
     } else {
      $1380 = (HEAP32[$220 >> 2] | 0) - $1375 | 0;
      $$0$i7$i$i$i$i$i645 = 1073741823;
      $5593 = $1380 >> 2;
      $5594 = $1380;
      label = 441;
     }
     if ((label | 0) == 441) {
      label = 0;
      $$0$i8$i$i$i$i$i646 = $$0$i7$i$i$i$i$i645;
      $1392 = __Znwj($$0$i7$i$i$i$i$i645 << 2) | 0;
      $1393 = $5593;
      $1397 = $5594;
     }
     $1391 = $1392 + ($1393 << 2) | 0;
     if ($1391) HEAP32[$1391 >> 2] = $1358;
     $1396 = $1392 + ($1393 + 1 << 2) | 0;
     _memcpy($1392 | 0, $1374 | 0, $1397 | 0) | 0;
     HEAP32[$219 >> 2] = $1392;
     HEAP32[$220 >> 2] = $1396;
     HEAP32[$221 >> 2] = $1392 + ($$0$i8$i$i$i$i$i646 << 2);
     if (!$1374) $$idx1$val$i$i$i652 = $1396; else {
      __ZdlPv($1374);
      $$idx1$val$i$i$i652 = HEAP32[$220 >> 2] | 0;
     }
    }
    HEAP8[$1358 + 4 >> 0] = HEAP8[$222 >> 0] | 0;
    $1404 = $$idx1$val$i$i$i652 - (HEAP32[$219 >> 2] | 0) >> 2;
    HEAP32[$223 >> 2] = $1404;
    if ($1404 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1404 >>> 0) > +HEAPF64[$224 >> 3] * +((HEAP32[$225 >> 2] | 0) >>> 0)) {
     __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1358);
     __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($198, $this);
     if (HEAP32[$226 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$205 >> 2] | 0);
     $1418 = (HEAP8[$222 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$222 >> 0] = $1418;
     $$idx6$val11$i$i$i656 = HEAP32[$$idx6$i$i$i >> 2] | 0;
     $$idx7$val12$i$i$i657 = HEAP32[$220 >> 2] | 0;
     if (($$idx7$val12$i$i$i657 | 0) == ($$idx6$val11$i$i$i656 | 0)) $$lcssa$i$i$i676 = 0; else {
      $$idx6$val14$i$i$i660 = $$idx6$val11$i$i$i656;
      $$idx7$val18$i$i$i659 = $$idx7$val12$i$i$i657;
      $1425 = $1418;
      $i$013$i$i$i661 = 0;
      while (1) {
       $1421 = HEAP32[$$idx6$val14$i$i$i660 + ($i$013$i$i$i661 << 2) >> 2] | 0;
       if ((HEAP8[$1421 + 4 >> 0] | 0) == $1425 << 24 >> 24) {
        $$idx6$val$i$i$i672 = $$idx6$val14$i$i$i660;
        $$idx7$val$i$i$i671 = $$idx7$val18$i$i$i659;
        $i$1$i$i$i673 = $i$013$i$i$i661;
       } else {
        if (!$1421) {
         $$idx4$val$i$i$i666 = $$idx6$val14$i$i$i660;
         $$idx5$val$i$i$i665 = $$idx7$val18$i$i$i659;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1421 >> 2] | 0) + 4 >> 2] & 255]($1421);
         $$idx4$val$i$i$i666 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $$idx5$val$i$i$i665 = HEAP32[$220 >> 2] | 0;
        }
        $1434 = ($$idx5$val$i$i$i665 - $$idx4$val$i$i$i666 >> 2) + -1 | 0;
        if (($i$013$i$i$i661 | 0) == ($1434 | 0)) {
         $$idx6$val$pre$i$i$i669 = $$idx4$val$i$i$i666;
         $1439 = $$idx5$val$i$i$i665;
        } else {
         HEAP32[$$idx4$val$i$i$i666 + ($i$013$i$i$i661 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i666 + ($1434 << 2) >> 2];
         $$idx6$val$pre$i$i$i669 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $1439 = HEAP32[$220 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i670 = $1439 + -4 | 0;
        HEAP32[$220 >> 2] = $scevgep4$i$i$i$i$i$i670;
        $$idx6$val$i$i$i672 = $$idx6$val$pre$i$i$i669;
        $$idx7$val$i$i$i671 = $scevgep4$i$i$i$i$i$i670;
        $i$1$i$i$i673 = $i$013$i$i$i661 + -1 | 0;
       }
       $1441 = $i$1$i$i$i673 + 1 | 0;
       $1445 = $$idx7$val$i$i$i671 - $$idx6$val$i$i$i672 >> 2;
       if ($1441 >>> 0 >= $1445 >>> 0) {
        $$lcssa = $1445;
        break;
       }
       $$idx6$val14$i$i$i660 = $$idx6$val$i$i$i672;
       $$idx7$val18$i$i$i659 = $$idx7$val$i$i$i671;
       $1425 = HEAP8[$222 >> 0] | 0;
       $i$013$i$i$i661 = $1441;
      }
      $$lcssa$i$i$i676 = $$lcssa;
     }
     HEAP32[$223 >> 2] = $$lcssa$i$i$i676;
     HEAP32[$225 >> 2] = $$lcssa$i$i$i676;
    }
    HEAP32[$226 >> 2] = 18;
    HEAP32[$205 >> 2] = $1358;
    label = 15;
    break;
   }
  case 7:
   {
    $1050 = $$010 + 4 | 0;
    $1051 = $$010 + 48 | 0;
    $1052 = __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $1050, $1051) | 0;
    if (!(HEAP8[$1052 >> 0] & 1)) $1060 = $1052 + 1 | 0; else $1060 = HEAP32[$1052 + 8 >> 2] | 0;
    $1061 = __Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc(HEAP32[$237 >> 2] | 0, $1051, $1060) | 0;
    __Z23jsonnet_static_analysisP3AST($1061);
    HEAP32[$238 >> 2] = 0;
    HEAP32[$239 >> 2] = 0;
    HEAP32[$16 >> 2] = $240;
    __THREW__ = 0;
    invoke_viiiiii(19, $198 | 0, $1050 | 0, 0, 0, 0, $16 | 0);
    $1062 = __THREW__;
    __THREW__ = 0;
    if ($1062 & 1) {
     label = 310;
     break L1;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($16, HEAP32[$240 >> 2] | 0);
    $$010$be = $1061;
    break;
   }
  case 16:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 13, $$010);
    $$010$be = HEAP32[$$010 + 60 >> 2] | 0;
    break;
   }
  case 17:
   {
    HEAP32[$226 >> 2] = 18;
    $$idx$val$i613 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i616 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i613 | 0) / 144 | 0;
    while (1) {
     $i$0$i617 = $i$0$in$i616 + -1 | 0;
     if (($i$0$i617 | 0) <= -1) {
      label = 418;
      break;
     }
     if ((HEAP32[$$idx$val$i613 + ($i$0$i617 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i617$lcssa6011 = $i$0$i617;
      label = 417;
      break;
     } else $i$0$in$i616 = $i$0$i617;
    }
    if ((label | 0) == 417) {
     label = 0;
     $1330 = HEAP32[$$idx$val$i613 + ($i$0$i617$lcssa6011 * 144 | 0) + 120 >> 2] | 0;
    } else if ((label | 0) == 418) {
     label = 0;
     $1330 = 0;
    }
    HEAP32[$205 >> 2] = $1330;
    label = 15;
    break;
   }
  case 19:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 16, $$010);
    $$010$be = HEAP32[$$010 + 52 >> 2] | 0;
    break;
   }
  case 20:
   {
    $1449 = $$010 + 48 | 0;
    $1450 = HEAP32[$1449 >> 2] | 0;
    $$idx$val$i679 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i682 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i679 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i682 = $i$0$in$i682 + -1 | 0;
     if (($i$0$in$i682 | 0) <= -1) {
      $$lcssa6935 = $1449;
      label = 478;
      break L1;
     }
     $1456 = $$idx$val$i679 + ($i$0$in$i682 * 144 | 0) + 132 | 0;
     $1457 = HEAP32[$1456 >> 2] | 0;
     if ($1457) {
      $$0$ph6$i$i$i$i = $1456;
      $$01$ph5$i$i$i$i = $1457;
      L78 : while (1) {
       $$013$i$i$i$i = $$01$ph5$i$i$i$i;
       while (1) {
        if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $1450 >>> 0) {
         $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
         break;
        }
        $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
        if (!$$013$i$i$i$i) {
         $$0$ph6$i$i$i$i$lcssa6009 = $$0$ph6$i$i$i$i;
         label = 472;
         break L78;
        }
       }
       $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
       if (!$$01$ph5$i$i$i$i) {
        $$013$i$i$i$i$lcssa$lcssa = $$013$i$i$i$i$lcssa;
        label = 473;
        break;
       } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
      }
      if ((label | 0) == 472) {
       label = 0;
       $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i$lcssa6009;
      } else if ((label | 0) == 473) {
       label = 0;
       $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa$lcssa;
      }
      if (($$0$ph$lcssa$i$i$i$i | 0) != ($1456 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 <= $1450 >>> 0) {
       $$0$ph$lcssa$i$i$i$i$lcssa = $$0$ph$lcssa$i$i$i$i;
       break;
      }
     }
     if ((HEAP32[$$idx$val$i679 + ($i$0$in$i682 * 144 | 0) >> 2] | 0) == 5) {
      $$lcssa6935 = $1449;
      label = 478;
      break L1;
     }
    }
    $1469 = HEAP32[$$0$ph$lcssa$i$i$i$i$lcssa + 20 >> 2] | 0;
    if (!$1469) {
     $$lcssa6936 = $1449;
     label = 479;
     break L1;
    }
    if (!(HEAP8[$1469 + 5 >> 0] | 0)) {
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($198, $$010 + 4 | 0, $1469, HEAP32[$1469 + 40 >> 2] | 0, HEAP32[$1469 + 44 >> 2] | 0, $1469 + 28 | 0);
     $$010$be = HEAP32[$1469 + 48 >> 2] | 0;
     break L3;
    } else {
     $1505 = $1469 + 8 | 0;
     HEAP32[$204 + 0 >> 2] = HEAP32[$1505 + 0 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$1505 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$1505 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$1505 + 12 >> 2];
     label = 15;
     break L3;
    }
    break;
   }
  case 4:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 8, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 5:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 6, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 2:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 1, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 8:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($17, $this, __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $$010 + 4 | 0, $$010 + 48 | 0) | 0);
    HEAP32[$204 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
    label = 15;
    break;
   }
  case 9:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 9, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 10:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 11, $$010);
    $$idx$val$i529 = HEAP32[$$idx1$i >> 2] | 0;
    $$idx$val$i531 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i534 = ($$idx$val$i529 - $$idx$val$i531 | 0) / 144 | 0;
    while (1) {
     $i$0$i535 = $i$0$in$i534 + -1 | 0;
     if (($i$0$i535 | 0) <= -1) {
      label = 317;
      break;
     }
     if ((HEAP32[$$idx$val$i531 + ($i$0$i535 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i535$lcssa6012 = $i$0$i535;
      label = 316;
      break;
     } else $i$0$in$i534 = $i$0$i535;
    }
    if ((label | 0) == 316) {
     label = 0;
     $1103 = HEAP32[$$idx$val$i531 + ($i$0$i535$lcssa6012 * 144 | 0) + 120 >> 2] | 0;
     $1105 = HEAP32[$$idx$val$i531 + ($i$0$i535$lcssa6012 * 144 | 0) + 124 >> 2] | 0;
    } else if ((label | 0) == 317) {
     label = 0;
     $1103 = 0;
     $1105 = 0;
    }
    $1083 = $$010 + 48 | 0;
    $1084 = HEAP32[$1083 >> 2] | 0;
    $1085 = $$010 + 52 | 0;
    if (($1084 | 0) == ($1085 | 0)) $1229 = $1084; else {
     $1087 = $$idx$val$i529 + -16 | 0;
     $1088 = $$idx$val$i529 + -12 | 0;
     $1089 = $$idx$val$i529 + -12 | 0;
     $1090 = $$idx$val$i529 + -8 | 0;
     $1092 = $1084;
     while (1) {
      $1091 = $1092 + 16 | 0;
      $1093 = HEAP32[$1091 >> 2] | 0;
      $1095 = HEAP32[$1092 + 20 >> 2] | 0;
      $1096 = __Znwj(56) | 0;
      HEAP32[$1096 >> 2] = 39552;
      HEAP8[$1096 + 5 >> 0] = 0;
      HEAP32[$1096 + 24 >> 2] = $1093;
      $1100 = $1096 + 32 | 0;
      HEAP32[$1100 >> 2] = 0;
      HEAP32[$1096 + 36 >> 2] = 0;
      HEAP32[$1096 + 28 >> 2] = $1100;
      HEAP32[$1096 + 40 >> 2] = $1103;
      HEAP32[$1096 + 44 >> 2] = $1105;
      HEAP32[$1096 + 48 >> 2] = $1095;
      $1107 = HEAP32[$220 >> 2] | 0;
      $1108 = HEAP32[$221 >> 2] | 0;
      if ($1107 >>> 0 < $1108 >>> 0) {
       if (!$1107) $1112 = 0; else {
        HEAP32[$1107 >> 2] = $1096;
        $1112 = HEAP32[$220 >> 2] | 0;
       }
       $1111 = $1112 + 4 | 0;
       HEAP32[$220 >> 2] = $1111;
       $$idx1$val$i$i = $1111;
      } else {
       $this$idx2$val$i$i$i$i = HEAP32[$219 >> 2] | 0;
       $1117 = ($1107 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
       if ($1117 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($219);
        $$idx1$val$i$i$i$i$i$i = HEAP32[$221 >> 2] | 0;
        $1120 = HEAP32[$219 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i$i$i = $1108;
        $1120 = $this$idx2$val$i$i$i$i;
       }
       $1121 = $1120;
       $1122 = $$idx1$val$i$i$i$i$i$i - $1121 | 0;
       if ($1122 >> 2 >>> 0 < 536870911) {
        $1128 = $1122 >> 1;
        $1130 = $1128 >>> 0 < $1117 >>> 0 ? $1117 : $1128;
        $1132 = (HEAP32[$220 >> 2] | 0) - $1121 | 0;
        $1133 = $1132 >> 2;
        if (!$1130) {
         $$0$i8$i$i$i$i = 0;
         $1138 = 0;
         $1139 = $1133;
         $1143 = $1132;
        } else {
         $$0$i7$i$i$i$i = $1130;
         $5591 = $1133;
         $5592 = $1132;
         label = 329;
        }
       } else {
        $1126 = (HEAP32[$220 >> 2] | 0) - $1121 | 0;
        $$0$i7$i$i$i$i = 1073741823;
        $5591 = $1126 >> 2;
        $5592 = $1126;
        label = 329;
       }
       if ((label | 0) == 329) {
        label = 0;
        $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
        $1138 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
        $1139 = $5591;
        $1143 = $5592;
       }
       $1137 = $1138 + ($1139 << 2) | 0;
       if ($1137) HEAP32[$1137 >> 2] = $1096;
       $1142 = $1138 + ($1139 + 1 << 2) | 0;
       _memcpy($1138 | 0, $1120 | 0, $1143 | 0) | 0;
       HEAP32[$219 >> 2] = $1138;
       HEAP32[$220 >> 2] = $1142;
       HEAP32[$221 >> 2] = $1138 + ($$0$i8$i$i$i$i << 2);
       if (!$1120) $$idx1$val$i$i = $1142; else {
        __ZdlPv($1120);
        $$idx1$val$i$i = HEAP32[$220 >> 2] | 0;
       }
      }
      HEAP8[$1096 + 4 >> 0] = HEAP8[$222 >> 0] | 0;
      $1150 = $$idx1$val$i$i - (HEAP32[$219 >> 2] | 0) >> 2;
      HEAP32[$223 >> 2] = $1150;
      if ($1150 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1150 >>> 0) > +HEAPF64[$224 >> 3] * +((HEAP32[$225 >> 2] | 0) >>> 0)) {
       __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1096);
       __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($198, $this);
       if (HEAP32[$226 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$205 >> 2] | 0);
       $1164 = (HEAP8[$222 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$222 >> 0] = $1164;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$220 >> 2] | 0;
       if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $$idx7$val18$i$i = $$idx7$val12$i$i;
        $1171 = $1164;
        $i$013$i$i = 0;
        while (1) {
         $1167 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$1167 + 4 >> 0] | 0) == $1171 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx7$val18$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$1167) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx7$val18$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1167 >> 2] | 0) + 4 >> 2] & 255]($1167);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$220 >> 2] | 0;
          }
          $1180 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($1180 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $1185 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($1180 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
           $1185 = HEAP32[$220 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i541 = $1185 + -4 | 0;
          HEAP32[$220 >> 2] = $scevgep4$i$i$i$i$i541;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i$i541;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $1187 = $i$1$i$i + 1 | 0;
         $1191 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($1187 >>> 0 >= $1191 >>> 0) {
          $$lcssa6013 = $1191;
          break;
         }
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $$idx7$val18$i$i = $$idx7$val$i$i;
         $1171 = HEAP8[$222 >> 0] | 0;
         $i$013$i$i = $1187;
        }
        $$lcssa$i$i = $$lcssa6013;
       }
       HEAP32[$223 >> 2] = $$lcssa$i$i;
       HEAP32[$225 >> 2] = $$lcssa$i$i;
      }
      $__k$val$i = HEAP32[$1091 >> 2] | 0;
      $1193 = HEAP32[$1088 >> 2] | 0;
      do if (!$1193) {
       HEAP32[$0 >> 2] = $1088;
       $$0$i7$i = $1088;
       $1210 = $1088;
       label = 361;
      } else {
       $__nd$0$i$i = $1193;
       while (1) {
        $1196 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
        if ($1196 >>> 0 > $__k$val$i >>> 0) {
         $1198 = HEAP32[$__nd$0$i$i >> 2] | 0;
         if (!$1198) {
          $$lcssa6017 = $__nd$0$i$i;
          $__nd$0$i$i$lcssa6015 = $__nd$0$i$i;
          label = 354;
          break;
         } else $__nd$0$be$in$i$i = $1198;
        } else {
         if ($1196 >>> 0 >= $__k$val$i >>> 0) {
          $__nd$0$i$i$lcssa = $__nd$0$i$i;
          label = 360;
          break;
         }
         $1201 = $__nd$0$i$i + 4 | 0;
         $1202 = HEAP32[$1201 >> 2] | 0;
         if (!$1202) {
          $$lcssa6016 = $1201;
          $__nd$0$i$i$lcssa6014 = $__nd$0$i$i;
          label = 358;
          break;
         } else $__nd$0$be$in$i$i = $1202;
        }
        $__nd$0$i$i = $__nd$0$be$in$i$i;
       }
       if ((label | 0) == 354) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa6015;
        $$0$i7$i = $$lcssa6017;
        $1210 = $__nd$0$i$i$lcssa6015;
        label = 361;
        break;
       } else if ((label | 0) == 358) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa6014;
        $$0$i7$i = $$lcssa6016;
        $1210 = $__nd$0$i$i$lcssa6014;
        label = 361;
        break;
       } else if ((label | 0) == 360) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa;
        if (!$__nd$0$i$i$lcssa) {
         $$0$i7$i = $0;
         $1210 = 0;
         label = 361;
         break;
        } else {
         $__r$0$i = $__nd$0$i$i$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 361) {
       label = 0;
       $1205 = __Znwj(24) | 0;
       HEAP32[$1205 + 16 >> 2] = $__k$val$i;
       HEAP32[$1205 + 20 >> 2] = 0;
       HEAP32[$1205 >> 2] = 0;
       HEAP32[$1205 + 4 >> 2] = 0;
       HEAP32[$1205 + 8 >> 2] = $1210;
       HEAP32[$$0$i7$i >> 2] = $1205;
       $1212 = HEAP32[HEAP32[$1087 >> 2] >> 2] | 0;
       if (!$1212) $1215 = $1205; else {
        HEAP32[$1087 >> 2] = $1212;
        $1215 = HEAP32[$$0$i7$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1089 >> 2] | 0, $1215);
       HEAP32[$1090 >> 2] = (HEAP32[$1090 >> 2] | 0) + 1;
       $__r$0$i = $1205;
      }
      HEAP32[$__r$0$i + 20 >> 2] = $1096;
      $1220 = HEAP32[$1092 + 4 >> 2] | 0;
      if (!$1220) {
       $$0$i$i$i = $1092;
       while (1) {
        $1225 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$1225 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$cast$i$i$i$lcssa = $1225;
         break;
        } else $$0$i$i$i = $1225;
       }
       $$01$i$i$i544 = $$cast$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i = $1220;
       while (1) {
        $1222 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$1222) {
         $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $1222;
       }
       $$01$i$i$i544 = $$0$i$i$i$i$lcssa;
      }
      if (($$01$i$i$i544 | 0) == ($1085 | 0)) break; else $1092 = $$01$i$i$i544;
     }
     $1229 = HEAP32[$1083 >> 2] | 0;
    }
    if (($1229 | 0) != ($1085 | 0)) {
     $1231 = $$idx$val$i529 + -16 | 0;
     $1232 = $$idx$val$i529 + -12 | 0;
     $1233 = $$idx$val$i529 + -12 | 0;
     $1234 = $$idx$val$i529 + -8 | 0;
     $1236 = $1229;
     while (1) {
      $__k$val$i546 = HEAP32[$1236 + 16 >> 2] | 0;
      $1237 = HEAP32[$1232 >> 2] | 0;
      do if (!$1237) {
       HEAP32[$0 >> 2] = $1232;
       $$0$i7$i554 = $1232;
       $1254 = $1232;
       label = 386;
      } else {
       $__nd$0$i$i547 = $1237;
       while (1) {
        $1240 = HEAP32[$__nd$0$i$i547 + 16 >> 2] | 0;
        if ($1240 >>> 0 > $__k$val$i546 >>> 0) {
         $1242 = HEAP32[$__nd$0$i$i547 >> 2] | 0;
         if (!$1242) {
          $$lcssa6021 = $__nd$0$i$i547;
          $__nd$0$i$i547$lcssa6019 = $__nd$0$i$i547;
          label = 379;
          break;
         } else $__nd$0$be$in$i$i549 = $1242;
        } else {
         if ($1240 >>> 0 >= $__k$val$i546 >>> 0) {
          $__nd$0$i$i547$lcssa = $__nd$0$i$i547;
          label = 385;
          break;
         }
         $1245 = $__nd$0$i$i547 + 4 | 0;
         $1246 = HEAP32[$1245 >> 2] | 0;
         if (!$1246) {
          $$lcssa6020 = $1245;
          $__nd$0$i$i547$lcssa6018 = $__nd$0$i$i547;
          label = 383;
          break;
         } else $__nd$0$be$in$i$i549 = $1246;
        }
        $__nd$0$i$i547 = $__nd$0$be$in$i$i549;
       }
       if ((label | 0) == 379) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i547$lcssa6019;
        $$0$i7$i554 = $$lcssa6021;
        $1254 = $__nd$0$i$i547$lcssa6019;
        label = 386;
        break;
       } else if ((label | 0) == 383) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i547$lcssa6018;
        $$0$i7$i554 = $$lcssa6020;
        $1254 = $__nd$0$i$i547$lcssa6018;
        label = 386;
        break;
       } else if ((label | 0) == 385) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i547$lcssa;
        if (!$__nd$0$i$i547$lcssa) {
         $$0$i7$i554 = $0;
         $1254 = 0;
         label = 386;
         break;
        } else {
         $__r$0$i558 = $__nd$0$i$i547$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 386) {
       label = 0;
       $1249 = __Znwj(24) | 0;
       HEAP32[$1249 + 16 >> 2] = $__k$val$i546;
       HEAP32[$1249 + 20 >> 2] = 0;
       HEAP32[$1249 >> 2] = 0;
       HEAP32[$1249 + 4 >> 2] = 0;
       HEAP32[$1249 + 8 >> 2] = $1254;
       HEAP32[$$0$i7$i554 >> 2] = $1249;
       $1256 = HEAP32[HEAP32[$1231 >> 2] >> 2] | 0;
       if (!$1256) $1259 = $1249; else {
        HEAP32[$1231 >> 2] = $1256;
        $1259 = HEAP32[$$0$i7$i554 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1233 >> 2] | 0, $1259);
       HEAP32[$1234 >> 2] = (HEAP32[$1234 >> 2] | 0) + 1;
       $__r$0$i558 = $1249;
      }
      $1263 = HEAP32[$__r$0$i558 + 20 >> 2] | 0;
      $1264 = $1263 + 28 | 0;
      $1266 = HEAP32[$1236 + 20 >> 2] | 0;
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($18, $this, HEAP32[$1266 + 36 >> 2] | 0, HEAP32[$1266 + 40 >> 2] | 0);
      $1267 = $1263 + 32 | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1264, HEAP32[$1267 >> 2] | 0);
      HEAP32[$1264 >> 2] = HEAP32[$18 >> 2];
      $1271 = HEAP32[$241 >> 2] | 0;
      HEAP32[$1263 + 32 >> 2] = $1271;
      $1273 = HEAP32[$242 >> 2] | 0;
      HEAP32[$1263 + 36 >> 2] = $1273;
      if (!$1273) {
       HEAP32[$1264 >> 2] = $1267;
       $1276 = HEAP32[$243 >> 2] | 0;
      } else {
       HEAP32[$1271 + 8 >> 2] = $1267;
       HEAP32[$18 >> 2] = $243;
       HEAP32[$243 >> 2] = 0;
       HEAP32[$242 >> 2] = 0;
       $1276 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($18, $1276);
      $1278 = HEAP32[$1236 + 4 >> 2] | 0;
      if (!$1278) {
       $$0$i$i$i563 = $1236;
       while (1) {
        $1283 = HEAP32[$$0$i$i$i563 + 8 >> 2] | 0;
        if ((HEAP32[$1283 >> 2] | 0) == ($$0$i$i$i563 | 0)) {
         $$cast$i$i$i564$lcssa = $1283;
         break;
        } else $$0$i$i$i563 = $1283;
       }
       $$01$i$i$i566 = $$cast$i$i$i564$lcssa;
      } else {
       $$0$i$i$i$i561 = $1278;
       while (1) {
        $1280 = HEAP32[$$0$i$i$i$i561 >> 2] | 0;
        if (!$1280) {
         $$0$i$i$i$i561$lcssa = $$0$i$i$i$i561;
         break;
        } else $$0$i$i$i$i561 = $1280;
       }
       $$01$i$i$i566 = $$0$i$i$i$i561$lcssa;
      }
      if (($$01$i$i$i566 | 0) == ($1085 | 0)) break; else $1236 = $$01$i$i$i566;
     }
    }
    $$010$be = HEAP32[$$010 + 60 >> 2] | 0;
    break;
   }
  case 6:
   {
    __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env, $this, HEAP32[$$010 + 36 >> 2] | 0, HEAP32[$$010 + 40 >> 2] | 0);
    $$idx$val$i404 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i407 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i404 | 0) / 144 | 0;
    while (1) {
     $i$0$i408 = $i$0$in$i407 + -1 | 0;
     if (($i$0$i408 | 0) <= -1) {
      label = 154;
      break;
     }
     if ((HEAP32[$$idx$val$i404 + ($i$0$i408 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i408$lcssa6022 = $i$0$i408;
      label = 153;
      break;
     } else $i$0$in$i407 = $i$0$i408;
    }
    if ((label | 0) == 153) {
     label = 0;
     $899 = HEAP32[$$idx$val$i404 + ($i$0$i408$lcssa6022 * 144 | 0) + 120 >> 2] | 0;
     $900 = HEAP32[$$idx$val$i404 + ($i$0$i408$lcssa6022 * 144 | 0) + 124 >> 2] | 0;
    } else if ((label | 0) == 154) {
     label = 0;
     $899 = 0;
     $900 = 0;
    }
    $726 = $$010 + 48 | 0;
    $728 = HEAP32[$$010 + 60 >> 2] | 0;
    HEAP32[$227 >> 2] = 0;
    HEAP32[$228 >> 2] = 0;
    HEAP32[$11 >> 2] = $229;
    $$idx$val$i$i$i413 = HEAP32[$env >> 2] | 0;
    if (($$idx$val$i$i$i413 | 0) != ($230 | 0)) {
     $5587 = $$idx$val$i$i$i413;
     $734 = $$idx$val$i$i$i413;
     while (1) {
      __THREW__ = 0;
      $730 = invoke_ii(67, 24) | 0;
      $731 = __THREW__;
      __THREW__ = 0;
      if ($731 & 1) {
       label = 191;
       break L1;
      }
      $736 = $734 + 16 | 0;
      $738 = HEAP32[$736 >> 2] | 0;
      $741 = HEAP32[$736 + 4 >> 2] | 0;
      $742 = $730 + 16 | 0;
      HEAP32[$742 >> 2] = $738;
      HEAP32[$742 + 4 >> 2] = $741;
      $746 = $738;
      $$pre$i$i$i$i$i$i$i = HEAP32[$229 >> 2] | 0;
      do if ((HEAP32[$11 >> 2] | 0) == ($229 | 0)) {
       $767 = $229;
       label = 167;
      } else {
       $748 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
       if ($748) {
        $$0$i$i$i$i$i$i$i$i$i = $229;
        while (1) {
         $753 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$753 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i = $753; else {
          $$cast$i$i$i$i$i$i$i$i$i$lcssa = $753;
          break;
         }
        }
        $$01$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i416 = $$pre$i$i$i$i$i$i$i;
        while (1) {
         $750 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i416 + 4 >> 2] | 0;
         if (!$750) {
          $$0$i$i$i$i$i$i$i$i$i$i416$lcssa = $$0$i$i$i$i$i$i$i$i$i$i416;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i416 = $750;
        }
        $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i416$lcssa;
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $746 >>> 0) {
        $767 = $$01$i$i$i$i$i$i$i$i$i;
        label = 167;
       } else if ($748) {
        $$0$i$i$i$i119$i$i$i = $229;
        $771 = $229;
        label = 177;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i$i = $$pre$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 > $746 >>> 0) {
          $760 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i >> 2] | 0;
          if (!$760) {
           $$0$i$i$i$i119$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa6023 = $__nd$0$i20$i$i$i$i$in$i$i$i;
           label = 176;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$be = $760;
         } else {
          if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 >= $746 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i;
           label = 180;
           break;
          }
          $763 = $__nd$0$i20$i$i$i$i$in$i$i$i + 4 | 0;
          $764 = HEAP32[$763 >> 2] | 0;
          if (!$764) {
           $$0$i$i$i$i119$i$i$i$ph = $763;
           $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa6023 = $__nd$0$i20$i$i$i$i$in$i$i$i;
           label = 176;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$be = $764;
         }
         $__nd$0$i20$i$i$i$i$in$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$be;
        }
        if ((label | 0) == 176) {
         label = 0;
         $$0$i$i$i$i119$i$i$i = $$0$i$i$i$i119$i$i$i$ph;
         $771 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa6023;
         label = 177;
         break;
        } else if ((label | 0) == 180) {
         label = 0;
         $779 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa;
         label = 181;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 167) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i) {
        $$0$i$i$i$i119$i$i$i = $229;
        $771 = $229;
        label = 177;
       } else {
        $766 = $767 + 4 | 0;
        $$pre$i$i$i417 = HEAP32[$766 >> 2] | 0;
        if (!$$pre$i$i$i417) {
         $$0$i$i$i$i119$i$i$i = $766;
         $771 = $767;
         label = 177;
        } else {
         $779 = $$pre$i$i$i417;
         label = 181;
        }
       }
      }
      if ((label | 0) == 177) {
       label = 0;
       HEAP32[$730 >> 2] = 0;
       HEAP32[$730 + 4 >> 2] = 0;
       HEAP32[$730 + 8 >> 2] = $771;
       HEAP32[$$0$i$i$i$i119$i$i$i >> 2] = $730;
       $773 = HEAP32[HEAP32[$11 >> 2] >> 2] | 0;
       if (!$773) $776 = $730; else {
        HEAP32[$11 >> 2] = $773;
        $776 = HEAP32[$$0$i$i$i$i119$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$227 >> 2] | 0, $776);
       HEAP32[$228 >> 2] = (HEAP32[$228 >> 2] | 0) + 1;
       $782 = $734;
      } else if ((label | 0) == 181) {
       label = 0;
       if (($779 | 0) == ($730 | 0)) $782 = $5587; else {
        __ZdlPv($730);
        $782 = $5587;
       }
      }
      $783 = HEAP32[$782 + 4 >> 2] | 0;
      if (!$783) {
       $$0$i$i$i$i$i$i = $782;
       while (1) {
        $788 = HEAP32[$$0$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$788 >> 2] | 0) == ($$0$i$i$i$i$i$i | 0)) {
         $$cast$i$i$i$i$i$i$lcssa = $788;
         break;
        } else $$0$i$i$i$i$i$i = $788;
       }
       $$01$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i$i$i$i418 = $783;
       while (1) {
        $785 = HEAP32[$$0$i$i$i$i$i$i$i418 >> 2] | 0;
        if (!$785) {
         $$0$i$i$i$i$i$i$i418$lcssa = $$0$i$i$i$i$i$i$i418;
         break;
        } else $$0$i$i$i$i$i$i$i418 = $785;
       }
       $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i418$lcssa;
      }
      if (($$01$i$i$i$i$i$i | 0) == ($230 | 0)) break; else {
       $5587 = $$01$i$i$i$i$i$i;
       $734 = $$01$i$i$i$i$i$i;
      }
     }
    }
    __THREW__ = 0;
    invoke_vii(56, $12 | 0, $726 | 0);
    $795 = __THREW__;
    __THREW__ = 0;
    if ($795 & 1) {
     label = 296;
     break L1;
    }
    HEAP32[$231 >> 2] = 0;
    HEAP32[$232 >> 2] = 0;
    HEAP32[$9 >> 2] = $233;
    $$idx$val$i$i$i$i420 = HEAP32[$11 >> 2] | 0;
    if (($$idx$val$i$i$i$i420 | 0) != ($229 | 0)) {
     $5588 = $$idx$val$i$i$i$i420;
     $802 = $$idx$val$i$i$i$i420;
     while (1) {
      __THREW__ = 0;
      $798 = invoke_ii(67, 24) | 0;
      $799 = __THREW__;
      __THREW__ = 0;
      if ($799 & 1) {
       label = 230;
       break L1;
      }
      $804 = $802 + 16 | 0;
      $806 = HEAP32[$804 >> 2] | 0;
      $809 = HEAP32[$804 + 4 >> 2] | 0;
      $810 = $798 + 16 | 0;
      HEAP32[$810 >> 2] = $806;
      HEAP32[$810 + 4 >> 2] = $809;
      $814 = $806;
      $$pre$i$i$i$i$i$i$i$i425 = HEAP32[$233 >> 2] | 0;
      do if ((HEAP32[$9 >> 2] | 0) == ($233 | 0)) {
       $835 = $233;
       label = 206;
      } else {
       $816 = ($$pre$i$i$i$i$i$i$i$i425 | 0) == 0;
       if ($816) {
        $$0$i$i$i$i$i$i$i$i$i2$i = $233;
        while (1) {
         $821 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2$i + 8 >> 2] | 0;
         if ((HEAP32[$821 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i2$i | 0)) $$0$i$i$i$i$i$i$i$i$i2$i = $821; else {
          $$cast$i$i$i$i$i$i$i$i$i$i429$lcssa = $821;
          break;
         }
        }
        $$01$i$i$i$i$i$i$i$i$i$i431 = $$cast$i$i$i$i$i$i$i$i$i$i429$lcssa;
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i427 = $$pre$i$i$i$i$i$i$i$i425;
        while (1) {
         $818 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i427 + 4 >> 2] | 0;
         if (!$818) {
          $$0$i$i$i$i$i$i$i$i$i$i$i427$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i427;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i427 = $818;
        }
        $$01$i$i$i$i$i$i$i$i$i$i431 = $$0$i$i$i$i$i$i$i$i$i$i$i427$lcssa;
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i431 + 16 >> 2] | 0) >>> 0 < $814 >>> 0) {
        $835 = $$01$i$i$i$i$i$i$i$i$i$i431;
        label = 206;
       } else if ($816) {
        $$0$i$i$i$i119$i$i$i$i442 = $233;
        $839 = $233;
        label = 216;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i$i$i436 = $$pre$i$i$i$i$i$i$i$i425;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i438 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i436 + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i438 >>> 0 > $814 >>> 0) {
          $828 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i436 >> 2] | 0;
          if (!$828) {
           $$0$i$i$i$i119$i$i$i$i442$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i436;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i436$lcssa6024 = $__nd$0$i20$i$i$i$i$in$i$i$i$i436;
           label = 215;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i436$be = $828;
         } else {
          if ($$idx2$val$i22$i$i$i$i$i$i$i$i438 >>> 0 >= $814 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i436$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i436;
           label = 219;
           break;
          }
          $831 = $__nd$0$i20$i$i$i$i$in$i$i$i$i436 + 4 | 0;
          $832 = HEAP32[$831 >> 2] | 0;
          if (!$832) {
           $$0$i$i$i$i119$i$i$i$i442$ph = $831;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i436$lcssa6024 = $__nd$0$i20$i$i$i$i$in$i$i$i$i436;
           label = 215;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i436$be = $832;
         }
         $__nd$0$i20$i$i$i$i$in$i$i$i$i436 = $__nd$0$i20$i$i$i$i$in$i$i$i$i436$be;
        }
        if ((label | 0) == 215) {
         label = 0;
         $$0$i$i$i$i119$i$i$i$i442 = $$0$i$i$i$i119$i$i$i$i442$ph;
         $839 = $__nd$0$i20$i$i$i$i$in$i$i$i$i436$lcssa6024;
         label = 216;
         break;
        } else if ((label | 0) == 219) {
         label = 0;
         $847 = $__nd$0$i20$i$i$i$i$in$i$i$i$i436$lcssa;
         label = 220;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 206) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i425) {
        $$0$i$i$i$i119$i$i$i$i442 = $233;
        $839 = $233;
        label = 216;
       } else {
        $834 = $835 + 4 | 0;
        $$pre$i$i$i$i440 = HEAP32[$834 >> 2] | 0;
        if (!$$pre$i$i$i$i440) {
         $$0$i$i$i$i119$i$i$i$i442 = $834;
         $839 = $835;
         label = 216;
        } else {
         $847 = $$pre$i$i$i$i440;
         label = 220;
        }
       }
      }
      if ((label | 0) == 216) {
       label = 0;
       HEAP32[$798 >> 2] = 0;
       HEAP32[$798 + 4 >> 2] = 0;
       HEAP32[$798 + 8 >> 2] = $839;
       HEAP32[$$0$i$i$i$i119$i$i$i$i442 >> 2] = $798;
       $841 = HEAP32[HEAP32[$9 >> 2] >> 2] | 0;
       if (!$841) $844 = $798; else {
        HEAP32[$9 >> 2] = $841;
        $844 = HEAP32[$$0$i$i$i$i119$i$i$i$i442 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$231 >> 2] | 0, $844);
       HEAP32[$232 >> 2] = (HEAP32[$232 >> 2] | 0) + 1;
       $850 = $802;
      } else if ((label | 0) == 220) {
       label = 0;
       if (($847 | 0) == ($798 | 0)) $850 = $5588; else {
        __ZdlPv($798);
        $850 = $5588;
       }
      }
      $851 = HEAP32[$850 + 4 >> 2] | 0;
      if (!$851) {
       $$0$i$i$i$i$i$i3$i = $850;
       while (1) {
        $856 = HEAP32[$$0$i$i$i$i$i$i3$i + 8 >> 2] | 0;
        if ((HEAP32[$856 >> 2] | 0) == ($$0$i$i$i$i$i$i3$i | 0)) {
         $$cast$i$i$i$i$i$i$i451$lcssa = $856;
         break;
        } else $$0$i$i$i$i$i$i3$i = $856;
       }
       $$01$i$i$i$i$i$i$i453 = $$cast$i$i$i$i$i$i$i451$lcssa;
      } else {
       $$0$i$i$i$i$i$i$i$i449 = $851;
       while (1) {
        $853 = HEAP32[$$0$i$i$i$i$i$i$i$i449 >> 2] | 0;
        if (!$853) {
         $$0$i$i$i$i$i$i$i$i449$lcssa = $$0$i$i$i$i$i$i$i$i449;
         break;
        } else $$0$i$i$i$i$i$i$i$i449 = $853;
       }
       $$01$i$i$i$i$i$i$i453 = $$0$i$i$i$i$i$i$i$i449$lcssa;
      }
      if (($$01$i$i$i$i$i$i$i453 | 0) == ($229 | 0)) break; else {
       $5588 = $$01$i$i$i$i$i$i$i453;
       $802 = $$01$i$i$i$i$i$i$i453;
      }
     }
    }
    HEAP32[$10 >> 2] = 0;
    HEAP32[$234 >> 2] = 0;
    HEAP32[$235 >> 2] = 0;
    $867 = (HEAP32[$236 >> 2] | 0) - (HEAP32[$12 >> 2] | 0) | 0;
    $868 = $867 >> 2;
    if ($868) {
     if ($868 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(179, $10 | 0);
      $871 = __THREW__;
      __THREW__ = 0;
      if ($871 & 1) {
       label = 239;
       break L1;
      }
     }
     __THREW__ = 0;
     $873 = invoke_ii(67, $867 | 0) | 0;
     $874 = __THREW__;
     __THREW__ = 0;
     if ($874 & 1) {
      label = 239;
      break L1;
     }
     HEAP32[$234 >> 2] = $873;
     HEAP32[$10 >> 2] = $873;
     HEAP32[$235 >> 2] = $873 + ($868 << 2);
     $877 = HEAP32[$12 >> 2] | 0;
     $878 = HEAP32[$236 >> 2] | 0;
     if (($877 | 0) != ($878 | 0)) {
      $$01$i$i$i457 = $877;
      $881 = $873;
      do {
       HEAP32[$881 >> 2] = HEAP32[$$01$i$i$i457 >> 2];
       $881 = (HEAP32[$234 >> 2] | 0) + 4 | 0;
       HEAP32[$234 >> 2] = $881;
       $$01$i$i$i457 = $$01$i$i$i457 + 4 | 0;
      } while (($$01$i$i$i457 | 0) != ($878 | 0));
     }
    }
    __THREW__ = 0;
    $896 = invoke_ii(67, 48) | 0;
    $897 = __THREW__;
    __THREW__ = 0;
    if ($897 & 1) {
     label = 286;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(40, $896 | 0, $9 | 0, $899 | 0, $900 | 0, $10 | 0, $728 | 0, 0);
    $901 = __THREW__;
    __THREW__ = 0;
    if ($901 & 1) {
     $$lcssa6937 = $896;
     label = 262;
     break L1;
    }
    $903 = HEAP32[$220 >> 2] | 0;
    $904 = HEAP32[$221 >> 2] | 0;
    if ($903 >>> 0 < $904 >>> 0) {
     if (!$903) $908 = 0; else {
      HEAP32[$903 >> 2] = $896;
      $908 = HEAP32[$220 >> 2] | 0;
     }
     $907 = $908 + 4 | 0;
     HEAP32[$220 >> 2] = $907;
     $$idx1$val$i$i$i482 = $907;
    } else {
     $this$idx2$val$i$i$i$i$i465 = HEAP32[$219 >> 2] | 0;
     $913 = ($903 - $this$idx2$val$i$i$i$i$i465 >> 2) + 1 | 0;
     if ($913 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(179, $219 | 0);
      $915 = __THREW__;
      __THREW__ = 0;
      if ($915 & 1) {
       label = 286;
       break L1;
      }
      $$idx1$val$i$i$i$i$i$i$i469 = HEAP32[$221 >> 2] | 0;
      $918 = HEAP32[$219 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i469 = $904;
      $918 = $this$idx2$val$i$i$i$i$i465;
     }
     $919 = $918;
     $920 = $$idx1$val$i$i$i$i$i$i$i469 - $919 | 0;
     if ($920 >> 2 >>> 0 < 536870911) {
      $926 = $920 >> 1;
      $928 = $926 >>> 0 < $913 >>> 0 ? $913 : $926;
      $930 = (HEAP32[$220 >> 2] | 0) - $919 | 0;
      $931 = $930 >> 2;
      if (!$928) {
       $$0$i8$i$i$i$i$i476 = 0;
       $938 = 0;
       $939 = $931;
       $943 = $930;
      } else {
       $$0$i7$i$i$i$i$i474 = $928;
       $5589 = $931;
       $5590 = $930;
       label = 256;
      }
     } else {
      $924 = (HEAP32[$220 >> 2] | 0) - $919 | 0;
      $$0$i7$i$i$i$i$i474 = 1073741823;
      $5589 = $924 >> 2;
      $5590 = $924;
      label = 256;
     }
     if ((label | 0) == 256) {
      label = 0;
      __THREW__ = 0;
      $934 = invoke_ii(67, $$0$i7$i$i$i$i$i474 << 2 | 0) | 0;
      $935 = __THREW__;
      __THREW__ = 0;
      if ($935 & 1) {
       label = 286;
       break L1;
      }
      $$0$i8$i$i$i$i$i476 = $$0$i7$i$i$i$i$i474;
      $938 = $934;
      $939 = $5589;
      $943 = $5590;
     }
     $937 = $938 + ($939 << 2) | 0;
     if ($937) HEAP32[$937 >> 2] = $896;
     $942 = $938 + ($939 + 1 << 2) | 0;
     _memcpy($938 | 0, $918 | 0, $943 | 0) | 0;
     HEAP32[$219 >> 2] = $938;
     HEAP32[$220 >> 2] = $942;
     HEAP32[$221 >> 2] = $938 + ($$0$i8$i$i$i$i$i476 << 2);
     if (!$918) $$idx1$val$i$i$i482 = $942; else {
      __ZdlPv($918);
      $$idx1$val$i$i$i482 = HEAP32[$220 >> 2] | 0;
     }
    }
    HEAP8[$896 + 4 >> 0] = HEAP8[$222 >> 0] | 0;
    HEAP32[$223 >> 2] = $$idx1$val$i$i$i482 - (HEAP32[$219 >> 2] | 0) >> 2;
    $953 = HEAP32[$10 >> 2] | 0;
    $955 = $953;
    if ($953) {
     $956 = HEAP32[$234 >> 2] | 0;
     if (($956 | 0) != ($953 | 0)) HEAP32[$234 >> 2] = $956 + (~(($956 + -4 - $955 | 0) >>> 2) << 2);
     __ZdlPv($953);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($9, HEAP32[$233 >> 2] | 0);
    $963 = HEAP32[$223 >> 2] | 0;
    if ($963 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($963 >>> 0) > +HEAPF64[$224 >> 3] * +((HEAP32[$225 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(63, $this | 0, $896 | 0);
     $972 = __THREW__;
     __THREW__ = 0;
     if ($972 & 1) {
      label = 297;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(64, $198 | 0, $this | 0);
     $974 = __THREW__;
     __THREW__ = 0;
     if ($974 & 1) {
      label = 297;
      break L1;
     }
     if (HEAP32[$226 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(63, $this | 0, HEAP32[$205 >> 2] | 0);
      $980 = __THREW__;
      __THREW__ = 0;
      if ($980 & 1) {
       label = 297;
       break L1;
      }
     }
     $983 = (HEAP8[$222 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$222 >> 0] = $983;
     $$idx6$val11$i$i$i491 = HEAP32[$$idx6$i$i$i >> 2] | 0;
     $$idx7$val12$i$i$i492 = HEAP32[$220 >> 2] | 0;
     if (($$idx7$val12$i$i$i492 | 0) == ($$idx6$val11$i$i$i491 | 0)) $$lcssa$i$i$i509 = 0; else {
      $$idx6$val14$i$i$i495 = $$idx6$val11$i$i$i491;
      $$idx7$val18$i$i$i494 = $$idx7$val12$i$i$i492;
      $990 = $983;
      $i$013$i$i$i496 = 0;
      while (1) {
       $986 = HEAP32[$$idx6$val14$i$i$i495 + ($i$013$i$i$i496 << 2) >> 2] | 0;
       if ((HEAP8[$986 + 4 >> 0] | 0) == $990 << 24 >> 24) {
        $$idx6$val$i$i$i506 = $$idx6$val14$i$i$i495;
        $$idx7$val$i$i$i505 = $$idx7$val18$i$i$i494;
        $i$1$i$i$i507 = $i$013$i$i$i496;
       } else {
        if (!$986) {
         $$idx4$val$i$i$i500 = $$idx6$val14$i$i$i495;
         $$idx5$val$i$i$i499 = $$idx7$val18$i$i$i494;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$986 >> 2] | 0) + 4 >> 2] & 255]($986);
         $$idx4$val$i$i$i500 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $$idx5$val$i$i$i499 = HEAP32[$220 >> 2] | 0;
        }
        $999 = ($$idx5$val$i$i$i499 - $$idx4$val$i$i$i500 >> 2) + -1 | 0;
        if (($i$013$i$i$i496 | 0) == ($999 | 0)) {
         $$idx6$val$pre$i$i$i503 = $$idx4$val$i$i$i500;
         $1004 = $$idx5$val$i$i$i499;
        } else {
         HEAP32[$$idx4$val$i$i$i500 + ($i$013$i$i$i496 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i500 + ($999 << 2) >> 2];
         $$idx6$val$pre$i$i$i503 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $1004 = HEAP32[$220 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i504 = $1004 + -4 | 0;
        HEAP32[$220 >> 2] = $scevgep4$i$i$i$i$i$i504;
        $$idx6$val$i$i$i506 = $$idx6$val$pre$i$i$i503;
        $$idx7$val$i$i$i505 = $scevgep4$i$i$i$i$i$i504;
        $i$1$i$i$i507 = $i$013$i$i$i496 + -1 | 0;
       }
       $1006 = $i$1$i$i$i507 + 1 | 0;
       $1010 = $$idx7$val$i$i$i505 - $$idx6$val$i$i$i506 >> 2;
       if ($1006 >>> 0 >= $1010 >>> 0) {
        $$lcssa6025 = $1010;
        break;
       }
       $$idx6$val14$i$i$i495 = $$idx6$val$i$i$i506;
       $$idx7$val18$i$i$i494 = $$idx7$val$i$i$i505;
       $990 = HEAP8[$222 >> 0] | 0;
       $i$013$i$i$i496 = $1006;
      }
      $$lcssa$i$i$i509 = $$lcssa6025;
     }
     HEAP32[$223 >> 2] = $$lcssa$i$i$i509;
     HEAP32[$225 >> 2] = $$lcssa$i$i$i509;
    }
    $1024 = HEAP32[$12 >> 2] | 0;
    $1026 = $1024;
    if ($1024) {
     $1027 = HEAP32[$236 >> 2] | 0;
     if (($1027 | 0) != ($1024 | 0)) HEAP32[$236 >> 2] = $1027 + (~(($1027 + -4 - $1026 | 0) >>> 2) << 2);
     __ZdlPv($1024);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($11, HEAP32[$229 >> 2] | 0);
    HEAP32[$226 >> 2] = 17;
    HEAP32[$205 >> 2] = $896;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$230 >> 2] | 0);
    label = 15;
    break;
   }
  case 0:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 0, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 13:
   {
    __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($19, $this, $$010 + 4 | 0, +HEAPF64[$$010 + 48 >> 3]);
    HEAP32[$204 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
    label = 15;
    break;
   }
  case 14:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($20, $this, $$010 + 48 | 0);
    HEAP32[$204 + 0 >> 2] = HEAP32[$20 + 0 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$20 + 12 >> 2];
    label = 15;
    break;
   }
  case 12:
   {
    HEAP32[$226 >> 2] = 0;
    HEAP32[$245 + 0 >> 2] = HEAP32[$$sroa$22540 + 0 >> 2];
    HEAP32[$245 + 4 >> 2] = HEAP32[$$sroa$22540 + 4 >> 2];
    HEAP32[$245 + 8 >> 2] = HEAP32[$$sroa$22540 + 8 >> 2];
    label = 15;
    break;
   }
  case 15:
   {
    if (!(HEAP32[$$010 + 56 >> 2] | 0)) {
     HEAP32[$246 >> 2] = 0;
     HEAP32[$247 >> 2] = 0;
     HEAP32[$env26 >> 2] = $248;
     HEAP32[$249 >> 2] = 0;
     HEAP32[$250 >> 2] = 0;
     HEAP32[$fields >> 2] = $251;
     HEAP32[$252 >> 2] = 0;
     HEAP32[$253 >> 2] = 0;
     HEAP32[$22 >> 2] = $254;
     HEAP32[$255 >> 2] = 0;
     HEAP32[$256 >> 2] = 0;
     HEAP32[$23 >> 2] = $257;
     __THREW__ = 0;
     invoke_viiii(18, $21 | 0, $this | 0, $22 | 0, $23 | 0);
     $1298 = __THREW__;
     __THREW__ = 0;
     if ($1298 & 1) {
      label = 409;
      break L1;
     };
     HEAP32[$204 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($23, HEAP32[$257 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($22, HEAP32[$254 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$251 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$248 >> 2] | 0);
     label = 15;
     break L3;
    } else {
     __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env27, $this, HEAP32[$$010 + 36 >> 2] | 0, HEAP32[$$010 + 40 >> 2] | 0);
     __THREW__ = 0;
     invoke_viii(12, $198 | 0, 12, $$010 | 0);
     $1309 = __THREW__;
     __THREW__ = 0;
     if ($1309 & 1) {
      label = 412;
      break L1;
     }
     $1312 = HEAP32[$$010 + 52 >> 2] | 0;
     HEAP32[(HEAP32[$$idx1$i >> 2] | 0) + -72 >> 2] = $1312;
     $1315 = HEAP32[$1312 + 8 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$258 >> 2] | 0);
     $$010$be = $1315;
     break L3;
    }
    break;
   }
  case 11:
   {
    $1290 = HEAP8[$$010 + 48 >> 0] | 0;
    HEAP32[$226 >> 2] = 1;
    HEAP8[$205 >> 0] = $1290;
    HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32544 + 0 >> 0] | 0;
    HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32544 + 1 >> 0] | 0;
    HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32544 + 2 >> 0] | 0;
    HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32544 + 3 >> 0] | 0;
    HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32544 + 4 >> 0] | 0;
    HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32544 + 5 >> 0] | 0;
    HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32544 + 6 >> 0] | 0;
    label = 15;
    break;
   }
  case 3:
   {
    $459 = HEAP32[$$010 + 48 >> 2] | 0;
    HEAP32[$210 >> 2] = 0;
    HEAP32[$211 >> 2] = 0;
    HEAP32[$2 >> 2] = $212;
    __THREW__ = 0;
    invoke_vii(56, $3 | 0, $$010 + 52 | 0);
    $461 = __THREW__;
    __THREW__ = 0;
    if ($461 & 1) {
     label = 140;
     break L1;
    }
    HEAP32[$213 >> 2] = 0;
    HEAP32[$214 >> 2] = 0;
    HEAP32[$0 >> 2] = $215;
    $$idx$val$i$i$i$i = HEAP32[$2 >> 2] | 0;
    if (($$idx$val$i$i$i$i | 0) != ($212 | 0)) {
     $468 = $$idx$val$i$i$i$i;
     $5584 = $$idx$val$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $464 = invoke_ii(67, 24) | 0;
      $465 = __THREW__;
      __THREW__ = 0;
      if ($465 & 1) {
       label = 74;
       break L1;
      }
      $470 = $468 + 16 | 0;
      $472 = HEAP32[$470 >> 2] | 0;
      $475 = HEAP32[$470 + 4 >> 2] | 0;
      $476 = $464 + 16 | 0;
      HEAP32[$476 >> 2] = $472;
      HEAP32[$476 + 4 >> 2] = $475;
      $480 = $472;
      $$pre$i$i$i$i$i$i$i$i = HEAP32[$215 >> 2] | 0;
      do if ((HEAP32[$0 >> 2] | 0) == ($215 | 0)) {
       $501 = $215;
       label = 50;
      } else {
       $482 = ($$pre$i$i$i$i$i$i$i$i | 0) == 0;
       if ($482) {
        $$0$i$i$i$i$i$i$i$i$i$i = $215;
        while (1) {
         $487 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$487 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i = $487; else {
          $$cast$i$i$i$i$i$i$i$i$i$i$lcssa = $487;
          break;
         }
        }
        $$01$i$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $484 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$484) {
          $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i = $484;
        }
        $$01$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa;
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $480 >>> 0) {
        $501 = $$01$i$i$i$i$i$i$i$i$i$i;
        label = 50;
       } else if ($482) {
        $$0$i$i$i$i119$i$i$i$i = $215;
        $505 = $215;
        label = 60;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 > $480 >>> 0) {
          $494 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i >> 2] | 0;
          if (!$494) {
           $$0$i$i$i$i119$i$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa6026 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 59;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = $494;
         } else {
          if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 >= $480 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 63;
           break;
          }
          $497 = $__nd$0$i20$i$i$i$i$in$i$i$i$i + 4 | 0;
          $498 = HEAP32[$497 >> 2] | 0;
          if (!$498) {
           $$0$i$i$i$i119$i$i$i$i$ph = $497;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa6026 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 59;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = $498;
         }
         $__nd$0$i20$i$i$i$i$in$i$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$i$be;
        }
        if ((label | 0) == 59) {
         label = 0;
         $$0$i$i$i$i119$i$i$i$i = $$0$i$i$i$i119$i$i$i$i$ph;
         $505 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa6026;
         label = 60;
         break;
        } else if ((label | 0) == 63) {
         label = 0;
         $513 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa;
         label = 64;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 50) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i) {
        $$0$i$i$i$i119$i$i$i$i = $215;
        $505 = $215;
        label = 60;
       } else {
        $500 = $501 + 4 | 0;
        $$pre$i$i$i$i = HEAP32[$500 >> 2] | 0;
        if (!$$pre$i$i$i$i) {
         $$0$i$i$i$i119$i$i$i$i = $500;
         $505 = $501;
         label = 60;
        } else {
         $513 = $$pre$i$i$i$i;
         label = 64;
        }
       }
      }
      if ((label | 0) == 60) {
       label = 0;
       HEAP32[$464 >> 2] = 0;
       HEAP32[$464 + 4 >> 2] = 0;
       HEAP32[$464 + 8 >> 2] = $505;
       HEAP32[$$0$i$i$i$i119$i$i$i$i >> 2] = $464;
       $507 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
       if (!$507) $510 = $464; else {
        HEAP32[$0 >> 2] = $507;
        $510 = HEAP32[$$0$i$i$i$i119$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$213 >> 2] | 0, $510);
       HEAP32[$214 >> 2] = (HEAP32[$214 >> 2] | 0) + 1;
       $516 = $468;
      } else if ((label | 0) == 64) {
       label = 0;
       if (($513 | 0) == ($464 | 0)) $516 = $5584; else {
        __ZdlPv($464);
        $516 = $5584;
       }
      }
      $517 = HEAP32[$516 + 4 >> 2] | 0;
      if (!$517) {
       $$0$i$i$i$i$i$i$i = $516;
       while (1) {
        $522 = HEAP32[$$0$i$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$522 >> 2] | 0) == ($$0$i$i$i$i$i$i$i | 0)) {
         $$cast$i$i$i$i$i$i$i$lcssa = $522;
         break;
        } else $$0$i$i$i$i$i$i$i = $522;
       }
       $$01$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i$i$i$i$i = $517;
       while (1) {
        $519 = HEAP32[$$0$i$i$i$i$i$i$i$i >> 2] | 0;
        if (!$519) {
         $$0$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i;
         break;
        } else $$0$i$i$i$i$i$i$i$i = $519;
       }
       $$01$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$lcssa;
      }
      if (($$01$i$i$i$i$i$i$i | 0) == ($212 | 0)) break; else {
       $468 = $$01$i$i$i$i$i$i$i;
       $5584 = $$01$i$i$i$i$i$i$i;
      }
     }
    }
    HEAP32[$1 >> 2] = 0;
    HEAP32[$216 >> 2] = 0;
    HEAP32[$217 >> 2] = 0;
    $533 = (HEAP32[$218 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0;
    $534 = $533 >> 2;
    if ($534) {
     if ($534 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(179, $1 | 0);
      $537 = __THREW__;
      __THREW__ = 0;
      if ($537 & 1) {
       label = 83;
       break L1;
      }
     }
     __THREW__ = 0;
     $539 = invoke_ii(67, $533 | 0) | 0;
     $540 = __THREW__;
     __THREW__ = 0;
     if ($540 & 1) {
      label = 83;
      break L1;
     }
     HEAP32[$216 >> 2] = $539;
     HEAP32[$1 >> 2] = $539;
     HEAP32[$217 >> 2] = $539 + ($534 << 2);
     $543 = HEAP32[$3 >> 2] | 0;
     $544 = HEAP32[$218 >> 2] | 0;
     if (($543 | 0) != ($544 | 0)) {
      $$01$i$i$i = $543;
      $547 = $539;
      do {
       HEAP32[$547 >> 2] = HEAP32[$$01$i$i$i >> 2];
       $547 = (HEAP32[$216 >> 2] | 0) + 4 | 0;
       HEAP32[$216 >> 2] = $547;
       $$01$i$i$i = $$01$i$i$i + 4 | 0;
      } while (($$01$i$i$i | 0) != ($544 | 0));
     }
    }
    __THREW__ = 0;
    $562 = invoke_ii(67, 48) | 0;
    $563 = __THREW__;
    __THREW__ = 0;
    if ($563 & 1) {
     label = 130;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(40, $562 | 0, $0 | 0, 0, 0, $1 | 0, 0, $459 | 0);
    $565 = __THREW__;
    __THREW__ = 0;
    if ($565 & 1) {
     $$lcssa6939 = $562;
     label = 106;
     break L1;
    }
    $567 = HEAP32[$220 >> 2] | 0;
    $568 = HEAP32[$221 >> 2] | 0;
    if ($567 >>> 0 < $568 >>> 0) {
     if (!$567) $572 = 0; else {
      HEAP32[$567 >> 2] = $562;
      $572 = HEAP32[$220 >> 2] | 0;
     }
     $571 = $572 + 4 | 0;
     HEAP32[$220 >> 2] = $571;
     $$idx1$val$i$i$i = $571;
    } else {
     $this$idx2$val$i$i$i$i$i = HEAP32[$219 >> 2] | 0;
     $577 = ($567 - $this$idx2$val$i$i$i$i$i >> 2) + 1 | 0;
     if ($577 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(179, $219 | 0);
      $579 = __THREW__;
      __THREW__ = 0;
      if ($579 & 1) {
       label = 130;
       break L1;
      }
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$221 >> 2] | 0;
      $582 = HEAP32[$219 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i = $568;
      $582 = $this$idx2$val$i$i$i$i$i;
     }
     $583 = $582;
     $584 = $$idx1$val$i$i$i$i$i$i$i - $583 | 0;
     if ($584 >> 2 >>> 0 < 536870911) {
      $590 = $584 >> 1;
      $592 = $590 >>> 0 < $577 >>> 0 ? $577 : $590;
      $594 = (HEAP32[$220 >> 2] | 0) - $583 | 0;
      $595 = $594 >> 2;
      if (!$592) {
       $$0$i8$i$i$i$i$i = 0;
       $602 = 0;
       $603 = $595;
       $607 = $594;
      } else {
       $$0$i7$i$i$i$i$i = $592;
       $5585 = $595;
       $5586 = $594;
       label = 100;
      }
     } else {
      $588 = (HEAP32[$220 >> 2] | 0) - $583 | 0;
      $$0$i7$i$i$i$i$i = 1073741823;
      $5585 = $588 >> 2;
      $5586 = $588;
      label = 100;
     }
     if ((label | 0) == 100) {
      label = 0;
      __THREW__ = 0;
      $598 = invoke_ii(67, $$0$i7$i$i$i$i$i << 2 | 0) | 0;
      $599 = __THREW__;
      __THREW__ = 0;
      if ($599 & 1) {
       label = 130;
       break L1;
      }
      $$0$i8$i$i$i$i$i = $$0$i7$i$i$i$i$i;
      $602 = $598;
      $603 = $5585;
      $607 = $5586;
     }
     $601 = $602 + ($603 << 2) | 0;
     if ($601) HEAP32[$601 >> 2] = $562;
     $606 = $602 + ($603 + 1 << 2) | 0;
     _memcpy($602 | 0, $582 | 0, $607 | 0) | 0;
     HEAP32[$219 >> 2] = $602;
     HEAP32[$220 >> 2] = $606;
     HEAP32[$221 >> 2] = $602 + ($$0$i8$i$i$i$i$i << 2);
     if (!$582) $$idx1$val$i$i$i = $606; else {
      __ZdlPv($582);
      $$idx1$val$i$i$i = HEAP32[$220 >> 2] | 0;
     }
    }
    HEAP8[$562 + 4 >> 0] = HEAP8[$222 >> 0] | 0;
    HEAP32[$223 >> 2] = $$idx1$val$i$i$i - (HEAP32[$219 >> 2] | 0) >> 2;
    $617 = HEAP32[$1 >> 2] | 0;
    $619 = $617;
    if ($617) {
     $620 = HEAP32[$216 >> 2] | 0;
     if (($620 | 0) != ($617 | 0)) HEAP32[$216 >> 2] = $620 + (~(($620 + -4 - $619 | 0) >>> 2) << 2);
     __ZdlPv($617);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$215 >> 2] | 0);
    $627 = HEAP32[$223 >> 2] | 0;
    if ($627 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($627 >>> 0) > +HEAPF64[$224 >> 3] * +((HEAP32[$225 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(63, $this | 0, $562 | 0);
     $636 = __THREW__;
     __THREW__ = 0;
     if ($636 & 1) {
      label = 141;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(64, $198 | 0, $this | 0);
     $638 = __THREW__;
     __THREW__ = 0;
     if ($638 & 1) {
      label = 141;
      break L1;
     }
     if (HEAP32[$226 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(63, $this | 0, HEAP32[$205 >> 2] | 0);
      $644 = __THREW__;
      __THREW__ = 0;
      if ($644 & 1) {
       label = 141;
       break L1;
      }
     }
     $647 = (HEAP8[$222 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$222 >> 0] = $647;
     $$idx6$val11$i$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
     $$idx7$val12$i$i$i = HEAP32[$220 >> 2] | 0;
     if (($$idx7$val12$i$i$i | 0) == ($$idx6$val11$i$i$i | 0)) $$lcssa$i$i$i = 0; else {
      $$idx6$val14$i$i$i = $$idx6$val11$i$i$i;
      $$idx7$val18$i$i$i = $$idx7$val12$i$i$i;
      $654 = $647;
      $i$013$i$i$i = 0;
      while (1) {
       $650 = HEAP32[$$idx6$val14$i$i$i + ($i$013$i$i$i << 2) >> 2] | 0;
       if ((HEAP8[$650 + 4 >> 0] | 0) == $654 << 24 >> 24) {
        $$idx6$val$i$i$i = $$idx6$val14$i$i$i;
        $$idx7$val$i$i$i = $$idx7$val18$i$i$i;
        $i$1$i$i$i = $i$013$i$i$i;
       } else {
        if (!$650) {
         $$idx4$val$i$i$i = $$idx6$val14$i$i$i;
         $$idx5$val$i$i$i = $$idx7$val18$i$i$i;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$650 >> 2] | 0) + 4 >> 2] & 255]($650);
         $$idx4$val$i$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $$idx5$val$i$i$i = HEAP32[$220 >> 2] | 0;
        }
        $663 = ($$idx5$val$i$i$i - $$idx4$val$i$i$i >> 2) + -1 | 0;
        if (($i$013$i$i$i | 0) == ($663 | 0)) {
         $$idx6$val$pre$i$i$i = $$idx4$val$i$i$i;
         $668 = $$idx5$val$i$i$i;
        } else {
         HEAP32[$$idx4$val$i$i$i + ($i$013$i$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i$i + ($663 << 2) >> 2];
         $$idx6$val$pre$i$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $668 = HEAP32[$220 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i = $668 + -4 | 0;
        HEAP32[$220 >> 2] = $scevgep4$i$i$i$i$i$i;
        $$idx6$val$i$i$i = $$idx6$val$pre$i$i$i;
        $$idx7$val$i$i$i = $scevgep4$i$i$i$i$i$i;
        $i$1$i$i$i = $i$013$i$i$i + -1 | 0;
       }
       $670 = $i$1$i$i$i + 1 | 0;
       $674 = $$idx7$val$i$i$i - $$idx6$val$i$i$i >> 2;
       if ($670 >>> 0 >= $674 >>> 0) {
        $$lcssa6027 = $674;
        break;
       }
       $$idx6$val14$i$i$i = $$idx6$val$i$i$i;
       $$idx7$val18$i$i$i = $$idx7$val$i$i$i;
       $654 = HEAP8[$222 >> 0] | 0;
       $i$013$i$i$i = $670;
      }
      $$lcssa$i$i$i = $$lcssa6027;
     }
     HEAP32[$223 >> 2] = $$lcssa$i$i$i;
     HEAP32[$225 >> 2] = $$lcssa$i$i$i;
    }
    $688 = HEAP32[$3 >> 2] | 0;
    $690 = $688;
    if ($688) {
     $691 = HEAP32[$218 >> 2] | 0;
     if (($691 | 0) != ($688 | 0)) HEAP32[$218 >> 2] = $691 + (~(($691 + -4 - $690 | 0) >>> 2) << 2);
     __ZdlPv($688);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$212 >> 2] | 0);
    HEAP32[$226 >> 2] = 17;
    HEAP32[$205 >> 2] = $562;
    label = 15;
    break;
   }
  case 1:
   {
    $$idx$val$i393 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i393 | 0) / 144 | 0;
    while (1) {
     $i$0$i = $i$0$in$i + -1 | 0;
     if (($i$0$i | 0) <= -1) {
      label = 10;
      break;
     }
     if ((HEAP32[$$idx$val$i393 + ($i$0$i * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i$lcssa6028 = $i$0$i;
      label = 9;
      break;
     } else $i$0$in$i = $i$0$i;
    }
    if ((label | 0) == 9) {
     label = 0;
     $400 = HEAP32[$$idx$val$i393 + ($i$0$i$lcssa6028 * 144 | 0) + 120 >> 2] | 0;
     $401 = HEAP32[$$idx$val$i393 + ($i$0$i$lcssa6028 * 144 | 0) + 124 >> 2] | 0;
    } else if ((label | 0) == 10) {
     label = 0;
     $400 = 0;
     $401 = 0;
    }
    HEAP32[$14 >> 2] = 0;
    HEAP32[$202 >> 2] = 0;
    HEAP32[$203 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(11, $13 | 0, $this | 0, $14 | 0);
    $387 = __THREW__;
    __THREW__ = 0;
    if ($387 & 1) {
     label = 35;
     break L1;
    };
    HEAP32[$204 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
    $$pre = HEAP32[$205 >> 2] | 0;
    $$pre4951 = HEAP32[$$010 + 48 >> 2] | 0;
    $$pre4954 = HEAP32[$$010 + 52 >> 2] | 0;
    $389 = $$pre + 8 | 0;
    if (($$pre4951 | 0) == ($$pre4954 | 0)) label = 15; else {
     $391 = $$pre + 12 | 0;
     $392 = $$pre + 16 | 0;
     $398 = $$pre4951;
     do {
      $397 = HEAP32[$398 >> 2] | 0;
      $402 = __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, HEAP32[$206 >> 2] | 0, $400, $401, $397) | 0;
      $403 = $402 + 28 | 0;
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($15, $this, HEAP32[$397 + 36 >> 2] | 0, HEAP32[$397 + 40 >> 2] | 0);
      $404 = $402 + 32 | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($403, HEAP32[$404 >> 2] | 0);
      HEAP32[$403 >> 2] = HEAP32[$15 >> 2];
      $408 = HEAP32[$207 >> 2] | 0;
      HEAP32[$402 + 32 >> 2] = $408;
      $410 = HEAP32[$208 >> 2] | 0;
      HEAP32[$402 + 36 >> 2] = $410;
      if (!$410) {
       HEAP32[$403 >> 2] = $404;
       $413 = HEAP32[$209 >> 2] | 0;
      } else {
       HEAP32[$408 + 8 >> 2] = $404;
       HEAP32[$15 >> 2] = $209;
       HEAP32[$209 >> 2] = 0;
       HEAP32[$208 >> 2] = 0;
       $413 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($15, $413);
      $414 = HEAP32[$391 >> 2] | 0;
      if (($414 | 0) == (HEAP32[$392 >> 2] | 0)) {
       $this$idx2$val$i$i = HEAP32[$389 >> 2] | 0;
       $424 = ($414 - $this$idx2$val$i$i >> 2) + 1 | 0;
       if ($424 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($389);
        $$idx1$val$i$i$i$i = HEAP32[$392 >> 2] | 0;
        $427 = HEAP32[$389 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i = $414;
        $427 = $this$idx2$val$i$i;
       }
       $428 = $427;
       $429 = $$idx1$val$i$i$i$i - $428 | 0;
       if ($429 >> 2 >>> 0 < 536870911) {
        $435 = $429 >> 1;
        $437 = $435 >>> 0 < $424 >>> 0 ? $424 : $435;
        $439 = (HEAP32[$391 >> 2] | 0) - $428 | 0;
        $440 = $439 >> 2;
        if (!$437) {
         $$0$i8$i$i = 0;
         $445 = 0;
         $446 = $440;
         $450 = $439;
        } else {
         $$0$i7$i$i = $437;
         $5582 = $440;
         $5583 = $439;
         label = 29;
        }
       } else {
        $433 = (HEAP32[$391 >> 2] | 0) - $428 | 0;
        $$0$i7$i$i = 1073741823;
        $5582 = $433 >> 2;
        $5583 = $433;
        label = 29;
       }
       if ((label | 0) == 29) {
        label = 0;
        $$0$i8$i$i = $$0$i7$i$i;
        $445 = __Znwj($$0$i7$i$i << 2) | 0;
        $446 = $5582;
        $450 = $5583;
       }
       $444 = $445 + ($446 << 2) | 0;
       if ($444) HEAP32[$444 >> 2] = $402;
       _memcpy($445 | 0, $427 | 0, $450 | 0) | 0;
       HEAP32[$389 >> 2] = $445;
       HEAP32[$391 >> 2] = $445 + ($446 + 1 << 2);
       HEAP32[$392 >> 2] = $445 + ($$0$i8$i$i << 2);
       if ($427) __ZdlPv($427);
      } else {
       if (!$414) $419 = 0; else {
        HEAP32[$414 >> 2] = $402;
        $419 = HEAP32[$391 >> 2] | 0;
       }
       HEAP32[$391 >> 2] = $419 + 4;
      }
      $398 = $398 + 4 | 0;
     } while (($398 | 0) != ($$pre4954 | 0));
     label = 15;
    }
    break;
   }
  default:
   {
    $$lcssa6773 = $373;
    label = 490;
    break L1;
   }
  } while (0);
  L586 : do if ((label | 0) == 15) {
   label = 0;
   $$idx$val$i68940384068 = HEAP32[$$idx$i >> 2] | 0;
   $$idx1$val$i69140394069 = HEAP32[$$idx1$i >> 2] | 0;
   if (($$idx1$val$i69140394069 - $$idx$val$i68940384068 | 0) >>> 0 <= $201 >>> 0) {
    label = 2253;
    break L1;
   }
   $$111$ph4070 = $$010;
   $$idx$val$i7064959 = $$idx$val$i68940384068;
   $$idx1$val$i69140394071 = $$idx1$val$i69140394069;
   L589 : while (1) {
    $$idx$val$i7064958 = $$idx$val$i7064959;
    $$idx$val$i842 = $$idx1$val$i69140394071;
    L591 : while (1) {
     $1532 = $$idx$val$i842 + -144 | 0;
     switch (HEAP32[$1532 >> 2] | 0) {
     case 2:
      break;
     case 1:
      {
       $$idx$val$i842$lcssa6049 = $$idx$val$i842;
       $$lcssa6069 = $1532;
       label = 669;
       break L591;
       break;
      }
     case 0:
      {
       $$idx$val$i7064958$lcssa6029 = $$idx$val$i7064958;
       $$idx$val$i842$lcssa6048 = $$idx$val$i842;
       label = 495;
       break L591;
       break;
      }
     case 3:
      {
       $$idx$val$i842$lcssa6050 = $$idx$val$i842;
       label = 935;
       break L591;
       break;
      }
     case 4:
      {
       $$idx$val$i842$lcssa6051 = $$idx$val$i842;
       $$lcssa6071 = $1532;
       label = 1018;
       break L591;
       break;
      }
     case 7:
      {
       $$idx$val$i842$lcssa6053 = $$idx$val$i842;
       label = 1674;
       break L591;
       break;
      }
     case 5:
      {
       $$idx$val$i842$lcssa6052 = $$idx$val$i842;
       label = 1671;
       break L591;
       break;
      }
     case 6:
      {
       $$idx$val$i842$lcssa6054 = $$idx$val$i842;
       label = 1675;
       break L1;
       break;
      }
     case 8:
      {
       $$idx$val$i842$lcssa6055 = $$idx$val$i842;
       label = 1690;
       break L589;
       break;
      }
     case 10:
      {
       $$idx$val$i842$lcssa6056 = $$idx$val$i842;
       label = 1703;
       break L591;
       break;
      }
     case 9:
      {
       $$idx$val$i842$lcssa6057 = $$idx$val$i842;
       $$lcssa6077 = $1532;
       label = 1805;
       break L589;
       break;
      }
     case 12:
      {
       $$idx$val$i842$lcssa6059 = $$idx$val$i842;
       label = 1818;
       break L591;
       break;
      }
     case 13:
      {
       $$idx$val$i842$lcssa6060 = $$idx$val$i842;
       $$lcssa6080 = $1532;
       label = 1964;
       break L591;
       break;
      }
     case 14:
      {
       $$idx$val$i842$lcssa6061 = $$idx$val$i842;
       label = 1992;
       break L591;
       break;
      }
     case 15:
      {
       $$idx$val$i842$lcssa6062 = $$idx$val$i842;
       label = 2152;
       break L591;
       break;
      }
     case 16:
      {
       $$idx$val$i842$lcssa6063 = $$idx$val$i842;
       label = 2195;
       break L591;
       break;
      }
     case 11:
      {
       label = 2247;
       break L591;
       break;
      }
     default:
      {
       $$lcssa6067 = $1532;
       label = 2243;
       break L1;
      }
     }
     $1972 = HEAP32[$$idx$val$i842 + -140 >> 2] | 0;
     $1973 = $$idx$val$i842 + -104 | 0;
     $1974 = HEAP32[$1973 >> 2] | 0;
     if (($1974 | 0) == 19) label = 679; else if ((HEAP32[$204 >> 2] | 0) == 19) label = 679; else {
      $5598 = HEAP32[$1972 + 52 >> 2] | 0;
      label = 681;
     }
     if ((label | 0) == 679) {
      label = 0;
      $1979 = HEAP32[$1972 + 52 >> 2] | 0;
      if (($1979 | 0) == 2) {
       HEAP32[$1532 >> 2] = 15;
       $1981 = $$idx$val$i842 + -88 | 0;
       HEAP32[$1981 + 0 >> 2] = HEAP32[$204 + 0 >> 2];
       HEAP32[$1981 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
       HEAP32[$1981 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
       HEAP32[$1981 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
      } else {
       $5598 = $1979;
       label = 681;
      }
     }
     if ((label | 0) == 681) {
      label = 0;
      $1982 = $1972 + 52 | 0;
      if (($5598 | 0) == 11) {
       label = 684;
       break L1;
      } else if (($5598 | 0) != 10) {
       $$idx$val$i842$lcssa6064 = $$idx$val$i842;
       $$lcssa6087 = $1972;
       $$lcssa6090 = $1973;
       $$lcssa6093 = $1974;
       $$lcssa6096 = $5598;
       $$lcssa6098 = $1982;
       label = 688;
       break;
      }
      HEAP32[$1532 >> 2] = 7;
      $1983 = $$idx$val$i842 + -88 | 0;
      HEAP32[$1983 + 0 >> 2] = HEAP32[$204 + 0 >> 2];
      HEAP32[$1983 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
      HEAP32[$1983 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
      HEAP32[$1983 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
     }
     $$idx$val$i7064958 = HEAP32[$$idx$i >> 2] | 0;
     $$idx$val$i842 = HEAP32[$$idx1$i >> 2] | 0;
     if (($$idx$val$i842 - $$idx$val$i7064958 | 0) >>> 0 <= $201 >>> 0) {
      label = 2251;
      break L1;
     }
    }
    L604 : switch (label | 0) {
    case 495:
     {
      label = 0;
      $1534 = $$idx$val$i842$lcssa6048 + -140 | 0;
      $1535 = HEAP32[$1534 >> 2] | 0;
      if ((HEAP32[$204 >> 2] | 0) != 17) {
       $$lcssa6568 = $1535;
       label = 496;
       break L1;
      }
      $1555 = HEAP32[$205 >> 2] | 0;
      $1556 = $1535 + 56 | 0;
      $1557 = HEAP32[$1556 >> 2] | 0;
      $1558 = $1535 + 52 | 0;
      $1559 = HEAP32[$1558 >> 2] | 0;
      $1563 = $1555 + 32 | 0;
      $1565 = $1555 + 28 | 0;
      if (($1557 - $1559 | 0) != ((HEAP32[$1563 >> 2] | 0) - (HEAP32[$1565 >> 2] | 0) | 0)) {
       $$lcssa6569 = $1535;
       $$lcssa6575 = $1556;
       $$lcssa6581 = $1558;
       $$lcssa6587 = $1563;
       $$lcssa6593 = $1565;
       label = 508;
       break L1;
      }
      if (($1557 | 0) == ($1559 | 0)) $__x$idx1$i$pre$phiZZZ2D = $$idx$val$i842$lcssa6048 + -36 | 0; else {
       $1572 = $$idx$val$i842$lcssa6048 + -40 | 0;
       $1573 = $$idx$val$i842$lcssa6048 + -36 | 0;
       $1574 = $$idx$val$i842$lcssa6048 + -32 | 0;
       $$idx1$val$i708 = $$idx$val$i842$lcssa6048;
       $$idx2$val$i713 = $$idx$val$i7064958$lcssa6029;
       $1637 = $1559;
       $i$04063 = 0;
       while (1) {
        $1638 = HEAP32[$1637 + ($i$04063 << 2) >> 2] | 0;
        $i$0$in$i709 = ($$idx1$val$i708 - $$idx2$val$i713 | 0) / 144 | 0;
        while (1) {
         $i$0$i710 = $i$0$in$i709 + -1 | 0;
         if (($i$0$i710 | 0) <= -1) {
          label = 533;
          break;
         }
         if ((HEAP32[$$idx2$val$i713 + ($i$0$i710 * 144 | 0) >> 2] | 0) == 5) {
          $i$0$i710$lcssa6140 = $i$0$i710;
          label = 532;
          break;
         } else $i$0$in$i709 = $i$0$i710;
        }
        if ((label | 0) == 532) {
         label = 0;
         $1652 = HEAP32[$$idx2$val$i713 + ($i$0$i710$lcssa6140 * 144 | 0) + 120 >> 2] | 0;
         $1653 = HEAP32[$$idx2$val$i713 + ($i$0$i710$lcssa6140 * 144 | 0) + 124 >> 2] | 0;
        } else if ((label | 0) == 533) {
         label = 0;
         $1652 = 0;
         $1653 = 0;
        }
        $1654 = __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, HEAP32[(HEAP32[$1565 >> 2] | 0) + ($i$04063 << 2) >> 2] | 0, $1652, $1653, $1638) | 0;
        $1655 = $1654 + 28 | 0;
        __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($28, $this, HEAP32[$1638 + 36 >> 2] | 0, HEAP32[$1638 + 40 >> 2] | 0);
        $1656 = $1654 + 32 | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1655, HEAP32[$1656 >> 2] | 0);
        HEAP32[$1655 >> 2] = HEAP32[$28 >> 2];
        $1660 = HEAP32[$264 >> 2] | 0;
        HEAP32[$1654 + 32 >> 2] = $1660;
        $1662 = HEAP32[$265 >> 2] | 0;
        HEAP32[$1654 + 36 >> 2] = $1662;
        if (!$1662) {
         HEAP32[$1655 >> 2] = $1656;
         $1665 = HEAP32[$266 >> 2] | 0;
        } else {
         HEAP32[$1660 + 8 >> 2] = $1656;
         HEAP32[$28 >> 2] = $266;
         HEAP32[$266 >> 2] = 0;
         HEAP32[$265 >> 2] = 0;
         $1665 = 0;
        }
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($28, $1665);
        $1666 = HEAP32[$1573 >> 2] | 0;
        if (($1666 | 0) == (HEAP32[$1574 >> 2] | 0)) {
         $this$idx2$val$i$i720 = HEAP32[$1572 >> 2] | 0;
         $1676 = ($1666 - $this$idx2$val$i$i720 >> 2) + 1 | 0;
         if ($1676 >>> 0 > 1073741823) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1572);
          $$idx1$val$i$i$i$i723 = HEAP32[$1574 >> 2] | 0;
          $1679 = HEAP32[$1572 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i723 = $1666;
          $1679 = $this$idx2$val$i$i720;
         }
         $1680 = $1679;
         $1681 = $$idx1$val$i$i$i$i723 - $1680 | 0;
         if ($1681 >> 2 >>> 0 < 536870911) {
          $1687 = $1681 >> 1;
          $1689 = $1687 >>> 0 < $1676 >>> 0 ? $1676 : $1687;
          $1691 = (HEAP32[$1573 >> 2] | 0) - $1680 | 0;
          $1692 = $1691 >> 2;
          if (!$1689) {
           $$0$i8$i$i729 = 0;
           $1697 = 0;
           $1698 = $1692;
           $1702 = $1691;
          } else {
           $$0$i7$i$i728 = $1689;
           $5595 = $1692;
           $5596 = $1691;
           label = 546;
          }
         } else {
          $1685 = (HEAP32[$1573 >> 2] | 0) - $1680 | 0;
          $$0$i7$i$i728 = 1073741823;
          $5595 = $1685 >> 2;
          $5596 = $1685;
          label = 546;
         }
         if ((label | 0) == 546) {
          label = 0;
          $$0$i8$i$i729 = $$0$i7$i$i728;
          $1697 = __Znwj($$0$i7$i$i728 << 2) | 0;
          $1698 = $5595;
          $1702 = $5596;
         }
         $1696 = $1697 + ($1698 << 2) | 0;
         if ($1696) HEAP32[$1696 >> 2] = $1654;
         _memcpy($1697 | 0, $1679 | 0, $1702 | 0) | 0;
         HEAP32[$1572 >> 2] = $1697;
         HEAP32[$1573 >> 2] = $1697 + ($1698 + 1 << 2);
         HEAP32[$1574 >> 2] = $1697 + ($$0$i8$i$i729 << 2);
         if ($1679) __ZdlPv($1679);
        } else {
         if (!$1666) $1671 = 0; else {
          HEAP32[$1666 >> 2] = $1654;
          $1671 = HEAP32[$1573 >> 2] | 0;
         }
         HEAP32[$1573 >> 2] = $1671 + 4;
        }
        $1704 = $i$04063 + 1 | 0;
        $1706 = HEAP32[$1558 >> 2] | 0;
        if ($1704 >>> 0 >= (HEAP32[$1556 >> 2] | 0) - $1706 >> 2 >>> 0) break;
        $$idx1$val$i708 = HEAP32[$$idx1$i >> 2] | 0;
        $$idx2$val$i713 = HEAP32[$$idx$i >> 2] | 0;
        $1637 = $1706;
        $i$04063 = $1704;
       }
       $__x$idx1$i$pre$phiZZZ2D = $1573;
      }
      HEAP32[$args >> 2] = 0;
      HEAP32[$259 >> 2] = 0;
      HEAP32[$260 >> 2] = 0;
      $__x$idx$i = $$idx$val$i842$lcssa6048 + -40 | 0;
      $1714 = (HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0) - (HEAP32[$__x$idx$i >> 2] | 0) | 0;
      $1715 = $1714 >> 2;
      if ($1715) {
       if ($1715 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(179, $args | 0);
        $1718 = __THREW__;
        __THREW__ = 0;
        if ($1718 & 1) {
         label = 561;
         break L1;
        }
       }
       __THREW__ = 0;
       $1720 = invoke_ii(67, $1714 | 0) | 0;
       $1721 = __THREW__;
       __THREW__ = 0;
       if ($1721 & 1) {
        label = 561;
        break L1;
       }
       HEAP32[$259 >> 2] = $1720;
       HEAP32[$args >> 2] = $1720;
       HEAP32[$260 >> 2] = $1720 + ($1715 << 2);
       $1724 = HEAP32[$__x$idx$i >> 2] | 0;
       $1725 = HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0;
       if (($1724 | 0) != ($1725 | 0)) {
        $$01$i$i737 = $1724;
        $1727 = $1720;
        do {
         HEAP32[$1727 >> 2] = HEAP32[$$01$i$i737 >> 2];
         $1727 = (HEAP32[$259 >> 2] | 0) + 4 | 0;
         HEAP32[$259 >> 2] = $1727;
         $$01$i$i737 = $$01$i$i737 + 4 | 0;
        } while (($$01$i$i737 | 0) != ($1725 | 0));
       }
      }
      __ZN12_GLOBAL__N_15Stack3popEv($198);
      $1742 = $1555 + 40 | 0;
      if (!(HEAP32[$1742 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(12, $198 | 0, 4, HEAP32[$1534 >> 2] | 0);
       $1746 = __THREW__;
       __THREW__ = 0;
       if ($1746 & 1) {
        label = 596;
        break L1;
       }
       $$idx$val$i742 = HEAP32[$$idx1$i >> 2] | 0;
       $1748 = $$idx$val$i742 + -40 | 0;
       do if (($1748 | 0) != ($args | 0)) {
        $1750 = HEAP32[$args >> 2] | 0;
        $1751 = HEAP32[$259 >> 2] | 0;
        $1754 = $1751 - $1750 | 0;
        $1755 = $1754 >> 2;
        $$idx$val$i$i$i744 = HEAP32[$1748 >> 2] | 0;
        $$idx1$i$i$i = $$idx$val$i742 + -32 | 0;
        $$idx1$val$i$i$i745 = HEAP32[$$idx1$i$i$i >> 2] | 0;
        $1757 = $$idx$val$i$i$i744;
        if ($1755 >>> 0 <= $$idx1$val$i$i$i745 - $1757 >> 2 >>> 0) {
         $this$idx3$i$i = $$idx$val$i742 + -36 | 0;
         $1762 = (HEAP32[$this$idx3$i$i >> 2] | 0) - $1757 | 0;
         $1763 = $1762 >> 2;
         if ($1755 >>> 0 <= $1763 >>> 0) {
          _memmove($$idx$val$i$i$i744 | 0, $1750 | 0, $1754 | 0) | 0;
          $1773 = $$idx$val$i$i$i744 + ($1755 << 2) | 0;
          $1774 = HEAP32[$this$idx3$i$i >> 2] | 0;
          if (($1774 | 0) == ($1773 | 0)) break;
          HEAP32[$this$idx3$i$i >> 2] = $1774 + (~(($1774 + -4 - $1773 | 0) >>> 2) << 2);
          break;
         }
         $1765 = $1750 + ($1763 << 2) | 0;
         _memmove($$idx$val$i$i$i744 | 0, $1750 | 0, $1762 | 0) | 0;
         if (($1765 | 0) == ($1751 | 0)) break;
         $$01$i6$i$i = $1765;
         $1767 = HEAP32[$this$idx3$i$i >> 2] | 0;
         do {
          if (!$1767) $1770 = 0; else {
           HEAP32[$1767 >> 2] = HEAP32[$$01$i6$i$i >> 2];
           $1770 = HEAP32[$this$idx3$i$i >> 2] | 0;
          }
          $1767 = $1770 + 4 | 0;
          HEAP32[$this$idx3$i$i >> 2] = $1767;
          $$01$i6$i$i = $$01$i6$i$i + 4 | 0;
         } while (($$01$i6$i$i | 0) != ($1751 | 0));
         break;
        }
        if (!$$idx$val$i$i$i744) $$idx1$val$i$i17$i$i = $$idx1$val$i$i$i745; else {
         $1781 = $$idx$val$i742 + -36 | 0;
         $1782 = HEAP32[$1781 >> 2] | 0;
         if (($1782 | 0) != ($$idx$val$i$i$i744 | 0)) HEAP32[$1781 >> 2] = $1782 + (~(($1782 + -4 - $1757 | 0) >>> 2) << 2);
         __ZdlPv($$idx$val$i$i$i744);
         HEAP32[$$idx1$i$i$i >> 2] = 0;
         HEAP32[$1781 >> 2] = 0;
         HEAP32[$1748 >> 2] = 0;
         $$idx1$val$i$i17$i$i = 0;
        }
        if ($1755 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(179, $1748 | 0);
         $1789 = __THREW__;
         __THREW__ = 0;
         if ($1789 & 1) {
          label = 596;
          break L1;
         }
         $$idx$val$i$i$i$i752 = HEAP32[$1748 >> 2] | 0;
         $$idx1$val$i$i$i$i751 = HEAP32[$$idx1$i$i$i >> 2] | 0;
        } else {
         $$idx$val$i$i$i$i752 = 0;
         $$idx1$val$i$i$i$i751 = $$idx1$val$i$i17$i$i;
        }
        $1792 = $$idx1$val$i$i$i$i751 - $$idx$val$i$i$i$i752 | 0;
        if ($1792 >> 2 >>> 0 < 536870911) {
         $1795 = $1792 >> 1;
         $1797 = $1795 >>> 0 < $1755 >>> 0 ? $1755 : $1795;
         if ($1797 >>> 0 > 1073741823) {
          __THREW__ = 0;
          invoke_vi(179, $1748 | 0);
          $1799 = __THREW__;
          __THREW__ = 0;
          if ($1799 & 1) {
           label = 596;
           break L1;
          } else $$0$i12$i$i = $1797;
         } else $$0$i12$i$i = $1797;
        } else $$0$i12$i$i = 1073741823;
        __THREW__ = 0;
        $1802 = invoke_ii(67, $$0$i12$i$i << 2 | 0) | 0;
        $1803 = __THREW__;
        __THREW__ = 0;
        if ($1803 & 1) {
         label = 596;
         break L1;
        }
        $1805 = $$idx$val$i742 + -36 | 0;
        HEAP32[$1805 >> 2] = $1802;
        HEAP32[$1748 >> 2] = $1802;
        HEAP32[$$idx1$i$i$i >> 2] = $1802 + ($$0$i12$i$i << 2);
        if (($1750 | 0) != ($1751 | 0)) {
         $$01$i$i$i754 = $1750;
         $1808 = $1802;
         do {
          HEAP32[$1808 >> 2] = HEAP32[$$01$i$i$i754 >> 2];
          $1808 = (HEAP32[$1805 >> 2] | 0) + 4 | 0;
          HEAP32[$1805 >> 2] = $1808;
          $$01$i$i$i754 = $$01$i$i$i754 + 4 | 0;
         } while (($$01$i$i$i754 | 0) != ($1751 | 0));
        }
       } while (0);
       $$idx$val$i759 = HEAP32[$$idx1$i >> 2] | 0;
       HEAP32[$$idx$val$i759 + -56 >> 2] = 0;
       $1813 = $$idx$val$i759 + -104 | 0;
       HEAP32[$1813 + 0 >> 2] = HEAP32[$204 + 0 >> 2];
       HEAP32[$1813 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
       HEAP32[$1813 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
       HEAP32[$1813 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
       $$0135 = 1;
       $$212 = $$111$ph4070;
      } else {
       HEAP32[$261 >> 2] = 0;
       HEAP32[$262 >> 2] = 0;
       HEAP32[$bindings >> 2] = $263;
       $$idx$val$i$i763 = HEAP32[$1555 + 8 >> 2] | 0;
       $1816 = $1555 + 12 | 0;
       if (($$idx$val$i$i763 | 0) != ($1816 | 0)) {
        $1822 = $$idx$val$i$i763;
        $5597 = $$idx$val$i$i763;
        while (1) {
         __THREW__ = 0;
         $1818 = invoke_ii(67, 24) | 0;
         $1819 = __THREW__;
         __THREW__ = 0;
         if ($1819 & 1) {
          label = 637;
          break L1;
         }
         $1824 = $1822 + 16 | 0;
         $1826 = HEAP32[$1824 >> 2] | 0;
         $1829 = HEAP32[$1824 + 4 >> 2] | 0;
         $1830 = $1818 + 16 | 0;
         HEAP32[$1830 >> 2] = $1826;
         HEAP32[$1830 + 4 >> 2] = $1829;
         $1834 = $1826;
         $$pre$i$i$i$i$i$i768 = HEAP32[$263 >> 2] | 0;
         do if ((HEAP32[$bindings >> 2] | 0) == ($263 | 0)) {
          $1855 = $263;
          label = 610;
         } else {
          $1836 = ($$pre$i$i$i$i$i$i768 | 0) == 0;
          if ($1836) {
           $$0$i$i$i$i$i$i$i$i772 = $263;
           while (1) {
            $1841 = HEAP32[$$0$i$i$i$i$i$i$i$i772 + 8 >> 2] | 0;
            if ((HEAP32[$1841 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i772 | 0)) $$0$i$i$i$i$i$i$i$i772 = $1841; else {
             $$cast$i$i$i$i$i$i$i$i773$lcssa = $1841;
             break;
            }
           }
           $$01$i$i$i$i$i$i$i$i775 = $$cast$i$i$i$i$i$i$i$i773$lcssa;
          } else {
           $$0$i$i$i$i$i$i$i$i$i770 = $$pre$i$i$i$i$i$i768;
           while (1) {
            $1838 = HEAP32[$$0$i$i$i$i$i$i$i$i$i770 + 4 >> 2] | 0;
            if (!$1838) {
             $$0$i$i$i$i$i$i$i$i$i770$lcssa = $$0$i$i$i$i$i$i$i$i$i770;
             break;
            } else $$0$i$i$i$i$i$i$i$i$i770 = $1838;
           }
           $$01$i$i$i$i$i$i$i$i775 = $$0$i$i$i$i$i$i$i$i$i770$lcssa;
          }
          if ((HEAP32[$$01$i$i$i$i$i$i$i$i775 + 16 >> 2] | 0) >>> 0 < $1834 >>> 0) {
           $1855 = $$01$i$i$i$i$i$i$i$i775;
           label = 610;
          } else if ($1836) {
           $$0$i$i$i$i119$i$i786 = $263;
           $1859 = $263;
           label = 620;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i780 = $$pre$i$i$i$i$i$i768;
           while (1) {
            $$idx2$val$i22$i$i$i$i$i$i782 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i780 + 16 >> 2] | 0;
            if ($$idx2$val$i22$i$i$i$i$i$i782 >>> 0 > $1834 >>> 0) {
             $1848 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i780 >> 2] | 0;
             if (!$1848) {
              $$0$i$i$i$i119$i$i786$ph = $__nd$0$i20$i$i$i$i$in$i$i780;
              $__nd$0$i20$i$i$i$i$in$i$i780$lcssa6141 = $__nd$0$i20$i$i$i$i$in$i$i780;
              label = 619;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i780$be = $1848;
            } else {
             if ($$idx2$val$i22$i$i$i$i$i$i782 >>> 0 >= $1834 >>> 0) {
              $__nd$0$i20$i$i$i$i$in$i$i780$lcssa = $__nd$0$i20$i$i$i$i$in$i$i780;
              label = 623;
              break;
             }
             $1851 = $__nd$0$i20$i$i$i$i$in$i$i780 + 4 | 0;
             $1852 = HEAP32[$1851 >> 2] | 0;
             if (!$1852) {
              $$0$i$i$i$i119$i$i786$ph = $1851;
              $__nd$0$i20$i$i$i$i$in$i$i780$lcssa6141 = $__nd$0$i20$i$i$i$i$in$i$i780;
              label = 619;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i780$be = $1852;
            }
            $__nd$0$i20$i$i$i$i$in$i$i780 = $__nd$0$i20$i$i$i$i$in$i$i780$be;
           }
           if ((label | 0) == 619) {
            label = 0;
            $$0$i$i$i$i119$i$i786 = $$0$i$i$i$i119$i$i786$ph;
            $1859 = $__nd$0$i20$i$i$i$i$in$i$i780$lcssa6141;
            label = 620;
            break;
           } else if ((label | 0) == 623) {
            label = 0;
            $1867 = $__nd$0$i20$i$i$i$i$in$i$i780$lcssa;
            label = 624;
            break;
           }
          }
         } while (0);
         if ((label | 0) == 610) {
          label = 0;
          if (!$$pre$i$i$i$i$i$i768) {
           $$0$i$i$i$i119$i$i786 = $263;
           $1859 = $263;
           label = 620;
          } else {
           $1854 = $1855 + 4 | 0;
           $$pre$i$i784 = HEAP32[$1854 >> 2] | 0;
           if (!$$pre$i$i784) {
            $$0$i$i$i$i119$i$i786 = $1854;
            $1859 = $1855;
            label = 620;
           } else {
            $1867 = $$pre$i$i784;
            label = 624;
           }
          }
         }
         if ((label | 0) == 620) {
          label = 0;
          HEAP32[$1818 >> 2] = 0;
          HEAP32[$1818 + 4 >> 2] = 0;
          HEAP32[$1818 + 8 >> 2] = $1859;
          HEAP32[$$0$i$i$i$i119$i$i786 >> 2] = $1818;
          $1861 = HEAP32[HEAP32[$bindings >> 2] >> 2] | 0;
          if (!$1861) $1864 = $1818; else {
           HEAP32[$bindings >> 2] = $1861;
           $1864 = HEAP32[$$0$i$i$i$i119$i$i786 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$261 >> 2] | 0, $1864);
          HEAP32[$262 >> 2] = (HEAP32[$262 >> 2] | 0) + 1;
          $1870 = $1822;
         } else if ((label | 0) == 624) {
          label = 0;
          if (($1867 | 0) == ($1818 | 0)) $1870 = $5597; else {
           __ZdlPv($1818);
           $1870 = $5597;
          }
         }
         $1871 = HEAP32[$1870 + 4 >> 2] | 0;
         if (!$1871) {
          $$0$i$i$i$i$i795 = $1870;
          while (1) {
           $1876 = HEAP32[$$0$i$i$i$i$i795 + 8 >> 2] | 0;
           if ((HEAP32[$1876 >> 2] | 0) == ($$0$i$i$i$i$i795 | 0)) {
            $$cast$i$i$i$i$i796$lcssa = $1876;
            break;
           } else $$0$i$i$i$i$i795 = $1876;
          }
          $$01$i$i$i$i$i798 = $$cast$i$i$i$i$i796$lcssa;
         } else {
          $$0$i$i$i$i$i$i793 = $1871;
          while (1) {
           $1873 = HEAP32[$$0$i$i$i$i$i$i793 >> 2] | 0;
           if (!$1873) {
            $$0$i$i$i$i$i$i793$lcssa = $$0$i$i$i$i$i$i793;
            break;
           } else $$0$i$i$i$i$i$i793 = $1873;
          }
          $$01$i$i$i$i$i798 = $$0$i$i$i$i$i$i793$lcssa;
         }
         if (($$01$i$i$i$i$i798 | 0) == ($1816 | 0)) break; else {
          $1822 = $$01$i$i$i$i$i798;
          $5597 = $$01$i$i$i$i$i798;
         }
        }
       }
       $1881 = HEAP32[$1565 >> 2] | 0;
       if ((HEAP32[$1563 >> 2] | 0) != ($1881 | 0)) {
        $1889 = $1881;
        $i41$04066 = 0;
        do {
         $1887 = HEAP32[(HEAP32[$args >> 2] | 0) + ($i41$04066 << 2) >> 2] | 0;
         $__k$val$i804 = HEAP32[$1889 + ($i41$04066 << 2) >> 2] | 0;
         $1890 = HEAP32[$263 >> 2] | 0;
         do if (!$1890) {
          HEAP32[$__parent$i803 >> 2] = $263;
          $$0$i7$i812 = $263;
          $1909 = $263;
          label = 649;
         } else {
          $__nd$0$i$i805 = $1890;
          while (1) {
           $1893 = HEAP32[$__nd$0$i$i805 + 16 >> 2] | 0;
           if ($1893 >>> 0 > $__k$val$i804 >>> 0) {
            $1895 = HEAP32[$__nd$0$i$i805 >> 2] | 0;
            if (!$1895) {
             $$lcssa6145 = $__nd$0$i$i805;
             $__nd$0$i$i805$lcssa6143 = $__nd$0$i$i805;
             label = 642;
             break;
            } else $__nd$0$be$in$i$i807 = $1895;
           } else {
            if ($1893 >>> 0 >= $__k$val$i804 >>> 0) {
             $__nd$0$i$i805$lcssa = $__nd$0$i$i805;
             label = 648;
             break;
            }
            $1898 = $__nd$0$i$i805 + 4 | 0;
            $1899 = HEAP32[$1898 >> 2] | 0;
            if (!$1899) {
             $$lcssa6144 = $1898;
             $__nd$0$i$i805$lcssa6142 = $__nd$0$i$i805;
             label = 646;
             break;
            } else $__nd$0$be$in$i$i807 = $1899;
           }
           $__nd$0$i$i805 = $__nd$0$be$in$i$i807;
          }
          if ((label | 0) == 642) {
           label = 0;
           HEAP32[$__parent$i803 >> 2] = $__nd$0$i$i805$lcssa6143;
           $$0$i7$i812 = $$lcssa6145;
           $1909 = $__nd$0$i$i805$lcssa6143;
           label = 649;
           break;
          } else if ((label | 0) == 646) {
           label = 0;
           HEAP32[$__parent$i803 >> 2] = $__nd$0$i$i805$lcssa6142;
           $$0$i7$i812 = $$lcssa6144;
           $1909 = $__nd$0$i$i805$lcssa6142;
           label = 649;
           break;
          } else if ((label | 0) == 648) {
           label = 0;
           HEAP32[$__parent$i803 >> 2] = $__nd$0$i$i805$lcssa;
           if (!$__nd$0$i$i805$lcssa) {
            $$0$i7$i812 = $__parent$i803;
            $1909 = 0;
            label = 649;
            break;
           } else {
            $__r$0$i816 = $__nd$0$i$i805$lcssa;
            break;
           }
          }
         } while (0);
         if ((label | 0) == 649) {
          label = 0;
          __THREW__ = 0;
          $1902 = invoke_ii(67, 24) | 0;
          $1903 = __THREW__;
          __THREW__ = 0;
          if ($1903 & 1) {
           $$lcssa6146 = $1890;
           label = 654;
           break L1;
          }
          HEAP32[$1902 + 16 >> 2] = $__k$val$i804;
          HEAP32[$1902 + 20 >> 2] = 0;
          HEAP32[$1902 >> 2] = 0;
          HEAP32[$1902 + 4 >> 2] = 0;
          HEAP32[$1902 + 8 >> 2] = $1909;
          HEAP32[$$0$i7$i812 >> 2] = $1902;
          $1911 = HEAP32[HEAP32[$bindings >> 2] >> 2] | 0;
          if (!$1911) $1914 = $1902; else {
           HEAP32[$bindings >> 2] = $1911;
           $1914 = HEAP32[$$0$i7$i812 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$261 >> 2] | 0, $1914);
          HEAP32[$262 >> 2] = (HEAP32[$262 >> 2] | 0) + 1;
          $__r$0$i816 = $1902;
         }
         HEAP32[$__r$0$i816 + 20 >> 2] = $1887;
         $i41$04066 = $i41$04066 + 1 | 0;
         $1889 = HEAP32[$1565 >> 2] | 0;
        } while ($i41$04066 >>> 0 < (HEAP32[$1563 >> 2] | 0) - $1889 >> 2 >>> 0);
       }
       __THREW__ = 0;
       invoke_viiiiii(19, $198 | 0, $1535 + 4 | 0, $1555 | 0, HEAP32[$1555 + 20 >> 2] | 0, HEAP32[$1555 + 24 >> 2] | 0, $bindings | 0);
       $1936 = __THREW__;
       __THREW__ = 0;
       if ($1936 & 1) {
        label = 655;
        break L1;
       }
       $1938 = HEAP32[$1742 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$263 >> 2] | 0);
       $$0135 = 0;
       $$212 = $1938;
      }
      $1940 = HEAP32[$args >> 2] | 0;
      $1942 = $1940;
      if ($1940) {
       $1943 = HEAP32[$259 >> 2] | 0;
       if (($1943 | 0) != ($1940 | 0)) HEAP32[$259 >> 2] = $1943 + (~(($1943 + -4 - $1942 | 0) >>> 2) << 2);
       __ZdlPv($1940);
      }
      if ($$0135) $$111$ph$be = $$212; else {
       $$010$ph = $$212;
       label = 2;
       break L589;
      }
      break;
     }
    case 669:
     {
      label = 0;
      $1959 = HEAP32[$$idx$val$i842$lcssa6049 + -140 >> 2] | 0;
      if ((HEAP32[$204 >> 2] | 0) != 1) {
       $$idx$val$i842$lcssa6049$lcssa = $$idx$val$i842$lcssa6049;
       $$lcssa6069$lcssa = $$lcssa6069;
       $$lcssa6567 = $1959;
       label = 675;
       break L589;
      }
      $1963 = HEAP32[$1959 + 52 >> 2] | 0;
      if (($1963 | 0) == 15) {
       if (HEAP8[$205 >> 0] | 0) {
        $$idx$val$i842$lcssa6049$lcssa = $$idx$val$i842$lcssa6049;
        $$lcssa6069$lcssa = $$lcssa6069;
        $$lcssa6567 = $1959;
        label = 675;
        break L589;
       }
       HEAP32[$226 >> 2] = 1;
       HEAP8[$205 >> 0] = 0;
       HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32534 + 0 >> 0] | 0;
       HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32534 + 1 >> 0] | 0;
       HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32534 + 2 >> 0] | 0;
       HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32534 + 3 >> 0] | 0;
       HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32534 + 4 >> 0] | 0;
       HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32534 + 5 >> 0] | 0;
       HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32534 + 6 >> 0] | 0;
       $$414 = $$111$ph4070;
       label = 2248;
       break;
      } else if (($1963 | 0) == 16) {
       if (!(HEAP8[$205 >> 0] | 0)) {
        $$idx$val$i842$lcssa6049$lcssa = $$idx$val$i842$lcssa6049;
        $$lcssa6069$lcssa = $$lcssa6069;
        $$lcssa6567 = $1959;
        label = 675;
        break L589;
       }
       HEAP32[$226 >> 2] = 1;
       HEAP8[$205 >> 0] = 1;
       HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32530 + 0 >> 0] | 0;
       HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32530 + 1 >> 0] | 0;
       HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32530 + 2 >> 0] | 0;
       HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32530 + 3 >> 0] | 0;
       HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32530 + 4 >> 0] | 0;
       HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32530 + 5 >> 0] | 0;
       HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32530 + 6 >> 0] | 0;
       $$414 = $$111$ph4070;
       label = 2248;
       break;
      } else {
       $$idx$val$i842$lcssa6049$lcssa = $$idx$val$i842$lcssa6049;
       $$lcssa6069$lcssa = $$lcssa6069;
       $$lcssa6567 = $1959;
       label = 675;
       break L589;
      }
      break;
     }
    case 688:
     {
      label = 0;
      if (($$lcssa6093 | 0) != (HEAP32[$204 >> 2] | 0)) {
       $$lcssa6087$lcssa = $$lcssa6087;
       $$lcssa6090$lcssa = $$lcssa6090;
       $$lcssa6098$lcssa = $$lcssa6098;
       label = 689;
       break L1;
      }
      switch ($$lcssa6093 | 0) {
      case 16:
       {
        if (($$lcssa6096 | 0) != 2) {
         $$lcssa6087$lcssa6563 = $$lcssa6087;
         $$lcssa6098$lcssa6537 = $$lcssa6098;
         label = 779;
         break L1;
        }
        $2083 = HEAP32[$$idx$val$i842$lcssa6064 + -96 >> 2] | 0;
        $2084 = HEAP32[$205 >> 2] | 0;
        HEAP32[$elements45 >> 2] = 0;
        HEAP32[$267 >> 2] = 0;
        HEAP32[$268 >> 2] = 0;
        $$idx266$val = HEAP32[$2083 + 8 >> 2] | 0;
        $$idx269$val = HEAP32[$2083 + 12 >> 2] | 0;
        if (($$idx266$val | 0) != ($$idx269$val | 0)) {
         $2087 = $$idx266$val;
         $2088 = 0;
         $2090 = 0;
         while (1) {
          $2086 = HEAP32[$2087 >> 2] | 0;
          if (($2088 | 0) == ($2090 | 0)) {
           $this$idx2$val$i$i867 = HEAP32[$elements45 >> 2] | 0;
           $2098 = ($2090 - $this$idx2$val$i$i867 >> 2) + 1 | 0;
           if ($2098 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(179, $elements45 | 0);
            $2100 = __THREW__;
            __THREW__ = 0;
            if ($2100 & 1) {
             label = 747;
             break L1;
            }
            $$idx1$val$i$i$i$i870 = HEAP32[$268 >> 2] | 0;
            $2103 = HEAP32[$elements45 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i870 = $2090;
            $2103 = $this$idx2$val$i$i867;
           }
           $2104 = $2103;
           $2105 = $$idx1$val$i$i$i$i870 - $2104 | 0;
           if ($2105 >> 2 >>> 0 < 536870911) {
            $2111 = $2105 >> 1;
            $2113 = $2111 >>> 0 < $2098 >>> 0 ? $2098 : $2111;
            $2115 = (HEAP32[$267 >> 2] | 0) - $2104 | 0;
            $2116 = $2115 >> 2;
            if (!$2113) {
             $$0$i8$i$i876 = 0;
             $2123 = 0;
             $2124 = $2116;
             $2128 = $2115;
            } else {
             $$0$i7$i$i875 = $2113;
             $5599 = $2116;
             $5600 = $2115;
             label = 738;
            }
           } else {
            $2109 = (HEAP32[$267 >> 2] | 0) - $2104 | 0;
            $$0$i7$i$i875 = 1073741823;
            $5599 = $2109 >> 2;
            $5600 = $2109;
            label = 738;
           }
           if ((label | 0) == 738) {
            label = 0;
            __THREW__ = 0;
            $2119 = invoke_ii(67, $$0$i7$i$i875 << 2 | 0) | 0;
            $2120 = __THREW__;
            __THREW__ = 0;
            if ($2120 & 1) {
             label = 747;
             break L1;
            }
            $$0$i8$i$i876 = $$0$i7$i$i875;
            $2123 = $2119;
            $2124 = $5599;
            $2128 = $5600;
           }
           $2122 = $2123 + ($2124 << 2) | 0;
           if ($2122) HEAP32[$2122 >> 2] = $2086;
           _memcpy($2123 | 0, $2103 | 0, $2128 | 0) | 0;
           HEAP32[$elements45 >> 2] = $2123;
           HEAP32[$267 >> 2] = $2123 + ($2124 + 1 << 2);
           HEAP32[$268 >> 2] = $2123 + ($$0$i8$i$i876 << 2);
           if ($2103) __ZdlPv($2103);
          } else {
           if (!$2088) $2093 = 0; else {
            HEAP32[$2088 >> 2] = $2086;
            $2093 = HEAP32[$267 >> 2] | 0;
           }
           HEAP32[$267 >> 2] = $2093 + 4;
          }
          $2130 = $2087 + 4 | 0;
          if (($2130 | 0) == ($$idx269$val | 0)) break;
          $2087 = $2130;
          $2088 = HEAP32[$267 >> 2] | 0;
          $2090 = HEAP32[$268 >> 2] | 0;
         }
        }
        $$idx265$val = HEAP32[$2084 + 8 >> 2] | 0;
        $$idx268$val = HEAP32[$2084 + 12 >> 2] | 0;
        if (($$idx265$val | 0) != ($$idx268$val | 0)) {
         $2149 = $$idx265$val;
         do {
          $2148 = HEAP32[$2149 >> 2] | 0;
          $2150 = HEAP32[$267 >> 2] | 0;
          if (($2150 | 0) == (HEAP32[$268 >> 2] | 0)) {
           $this$idx2$val$i$i893 = HEAP32[$elements45 >> 2] | 0;
           $2160 = ($2150 - $this$idx2$val$i$i893 >> 2) + 1 | 0;
           if ($2160 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(179, $elements45 | 0);
            $2162 = __THREW__;
            __THREW__ = 0;
            if ($2162 & 1) {
             label = 746;
             break L1;
            }
            $$idx1$val$i$i$i$i896 = HEAP32[$268 >> 2] | 0;
            $2165 = HEAP32[$elements45 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i896 = $2150;
            $2165 = $this$idx2$val$i$i893;
           }
           $2166 = $2165;
           $2167 = $$idx1$val$i$i$i$i896 - $2166 | 0;
           if ($2167 >> 2 >>> 0 < 536870911) {
            $2173 = $2167 >> 1;
            $2175 = $2173 >>> 0 < $2160 >>> 0 ? $2160 : $2173;
            $2177 = (HEAP32[$267 >> 2] | 0) - $2166 | 0;
            $2178 = $2177 >> 2;
            if (!$2175) {
             $$0$i8$i$i902 = 0;
             $2185 = 0;
             $2186 = $2178;
             $2190 = $2177;
            } else {
             $$0$i7$i$i901 = $2175;
             $5601 = $2178;
             $5602 = $2177;
             label = 766;
            }
           } else {
            $2171 = (HEAP32[$267 >> 2] | 0) - $2166 | 0;
            $$0$i7$i$i901 = 1073741823;
            $5601 = $2171 >> 2;
            $5602 = $2171;
            label = 766;
           }
           if ((label | 0) == 766) {
            label = 0;
            __THREW__ = 0;
            $2181 = invoke_ii(67, $$0$i7$i$i901 << 2 | 0) | 0;
            $2182 = __THREW__;
            __THREW__ = 0;
            if ($2182 & 1) {
             label = 746;
             break L1;
            }
            $$0$i8$i$i902 = $$0$i7$i$i901;
            $2185 = $2181;
            $2186 = $5601;
            $2190 = $5602;
           }
           $2184 = $2185 + ($2186 << 2) | 0;
           if ($2184) HEAP32[$2184 >> 2] = $2148;
           _memcpy($2185 | 0, $2165 | 0, $2190 | 0) | 0;
           HEAP32[$elements45 >> 2] = $2185;
           HEAP32[$267 >> 2] = $2185 + ($2186 + 1 << 2);
           HEAP32[$268 >> 2] = $2185 + ($$0$i8$i$i902 << 2);
           if ($2165) __ZdlPv($2165);
          } else {
           if (!$2150) $2155 = 0; else {
            HEAP32[$2150 >> 2] = $2148;
            $2155 = HEAP32[$267 >> 2] | 0;
           }
           HEAP32[$267 >> 2] = $2155 + 4;
          }
          $2149 = $2149 + 4 | 0;
         } while (($2149 | 0) != ($$idx268$val | 0));
        }
        __THREW__ = 0;
        invoke_viii(11, $38 | 0, $this | 0, $elements45 | 0);
        $2194 = __THREW__;
        __THREW__ = 0;
        if ($2194 & 1) {
         label = 748;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$38 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$38 + 12 >> 2];
        $2196 = HEAP32[$elements45 >> 2] | 0;
        if (!$2196) {
         $$414 = $$111$ph4070;
         label = 2248;
         break L604;
        }
        $2199 = HEAP32[$267 >> 2] | 0;
        if (($2199 | 0) != ($2196 | 0)) HEAP32[$267 >> 2] = $2199 + (~(($2199 + -4 - $2196 | 0) >>> 2) << 2);
        __ZdlPv($2196);
        $$414 = $$111$ph4070;
        label = 2248;
        break L604;
        break;
       }
      case 1:
       {
        if (($$lcssa6096 | 0) == 15) {
         if (!(HEAP8[$$idx$val$i842$lcssa6064 + -96 >> 0] | 0)) $2234 = 0; else $2234 = (HEAP8[$205 >> 0] | 0) != 0;
         HEAP32[$226 >> 2] = 1;
         HEAP8[$205 >> 0] = $2234 & 1;
         HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32526 + 0 >> 0] | 0;
         HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32526 + 1 >> 0] | 0;
         HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32526 + 2 >> 0] | 0;
         HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32526 + 3 >> 0] | 0;
         HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32526 + 4 >> 0] | 0;
         HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32526 + 5 >> 0] | 0;
         HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32526 + 6 >> 0] | 0;
         $$414 = $$111$ph4070;
         label = 2248;
         break L604;
        } else if (($$lcssa6096 | 0) == 16) {
         if (!(HEAP8[$$idx$val$i842$lcssa6064 + -96 >> 0] | 0)) $2241 = (HEAP8[$205 >> 0] | 0) != 0; else $2241 = 1;
         HEAP32[$226 >> 2] = 1;
         HEAP8[$205 >> 0] = $2241 & 1;
         HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32522 + 0 >> 0] | 0;
         HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32522 + 1 >> 0] | 0;
         HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32522 + 2 >> 0] | 0;
         HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32522 + 3 >> 0] | 0;
         HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32522 + 4 >> 0] | 0;
         HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32522 + 5 >> 0] | 0;
         HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32522 + 6 >> 0] | 0;
         $$414 = $$111$ph4070;
         label = 2248;
         break L604;
        } else {
         $$lcssa6087$lcssa6562 = $$lcssa6087;
         $$lcssa6098$lcssa6536 = $$lcssa6098;
         label = 797;
         break L1;
        }
        break;
       }
      case 2:
       {
        do switch ($$lcssa6096 | 0) {
        case 2:
         {
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($45, $this, $$lcssa6087 + 4 | 0, +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] + +HEAPF64[$269 >> 3]);
          HEAP32[$204 + 0 >> 2] = HEAP32[$45 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$45 + 12 >> 2];
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 3:
         {
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($46, $this, $$lcssa6087 + 4 | 0, +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] - +HEAPF64[$269 >> 3]);
          HEAP32[$204 + 0 >> 2] = HEAP32[$46 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$46 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$46 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$46 + 12 >> 2];
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 1:
         {
          $2280 = +HEAPF64[$269 >> 3];
          if ($2280 == 0.0) {
           $$lcssa6087$lcssa6561 = $$lcssa6087;
           label = 813;
           break L1;
          }
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($49, $this, $$lcssa6087 + 4 | 0, +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] / $2280);
          HEAP32[$204 + 0 >> 2] = HEAP32[$49 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$49 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$49 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$49 + 12 >> 2];
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 0:
         {
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($47, $this, $$lcssa6087 + 4 | 0, +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] * +HEAPF64[$269 >> 3]);
          HEAP32[$204 + 0 >> 2] = HEAP32[$47 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$47 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$47 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$47 + 12 >> 2];
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 4:
         {
          $2304 = +(~~+HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] << ~~+HEAPF64[$269 >> 3] | 0);
          HEAP32[$226 >> 2] = 2;
          HEAPF64[$269 >> 3] = $2304;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 5:
         {
          $2311 = +(~~+HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] >> ~~+HEAPF64[$269 >> 3] | 0);
          HEAP32[$226 >> 2] = 2;
          HEAPF64[$269 >> 3] = $2311;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 12:
         {
          $2318 = +(~~+HEAPF64[$269 >> 3] & ~~+HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] | 0);
          HEAP32[$226 >> 2] = 2;
          HEAPF64[$269 >> 3] = $2318;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 13:
         {
          $2325 = +(~~+HEAPF64[$269 >> 3] ^ ~~+HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] | 0);
          HEAP32[$226 >> 2] = 2;
          HEAPF64[$269 >> 3] = $2325;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 14:
         {
          $2332 = +(~~+HEAPF64[$269 >> 3] | ~~+HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] | 0);
          HEAP32[$226 >> 2] = 2;
          HEAPF64[$269 >> 3] = $2332;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 9:
         {
          $2337 = +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] <= +HEAPF64[$269 >> 3] & 1;
          HEAP32[$226 >> 2] = 1;
          HEAP8[$205 >> 0] = $2337;
          HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32503 + 0 >> 0] | 0;
          HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32503 + 1 >> 0] | 0;
          HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32503 + 2 >> 0] | 0;
          HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32503 + 3 >> 0] | 0;
          HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32503 + 4 >> 0] | 0;
          HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32503 + 5 >> 0] | 0;
          HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32503 + 6 >> 0] | 0;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 7:
         {
          $2342 = +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] >= +HEAPF64[$269 >> 3] & 1;
          HEAP32[$226 >> 2] = 1;
          HEAP8[$205 >> 0] = $2342;
          HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32499 + 0 >> 0] | 0;
          HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32499 + 1 >> 0] | 0;
          HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32499 + 2 >> 0] | 0;
          HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32499 + 3 >> 0] | 0;
          HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32499 + 4 >> 0] | 0;
          HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32499 + 5 >> 0] | 0;
          HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32499 + 6 >> 0] | 0;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 8:
         {
          $2347 = +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] < +HEAPF64[$269 >> 3] & 1;
          HEAP32[$226 >> 2] = 1;
          HEAP8[$205 >> 0] = $2347;
          HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32495 + 0 >> 0] | 0;
          HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32495 + 1 >> 0] | 0;
          HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32495 + 2 >> 0] | 0;
          HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32495 + 3 >> 0] | 0;
          HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32495 + 4 >> 0] | 0;
          HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32495 + 5 >> 0] | 0;
          HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32495 + 6 >> 0] | 0;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        case 6:
         {
          $2352 = +HEAPF64[$$idx$val$i842$lcssa6064 + -96 >> 3] > +HEAPF64[$269 >> 3] & 1;
          HEAP32[$226 >> 2] = 1;
          HEAP8[$205 >> 0] = $2352;
          HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32491 + 0 >> 0] | 0;
          HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32491 + 1 >> 0] | 0;
          HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32491 + 2 >> 0] | 0;
          HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32491 + 3 >> 0] | 0;
          HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32491 + 4 >> 0] | 0;
          HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32491 + 5 >> 0] | 0;
          HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32491 + 6 >> 0] | 0;
          $$414 = $$111$ph4070;
          label = 2248;
          break L604;
          break;
         }
        default:
         {
          $$lcssa6087$lcssa6560 = $$lcssa6087;
          $$lcssa6098$lcssa6534 = $$lcssa6098;
          label = 829;
          break L1;
         }
        } while (0);
        break;
       }
      case 17:
       {
        $$lcssa6087$lcssa6554 = $$lcssa6087;
        $$lcssa6098$lcssa6528 = $$lcssa6098;
        label = 840;
        break L1;
        break;
       }
      case 18:
       {
        if (($$lcssa6096 | 0) != 2) {
         $$lcssa6087$lcssa6559 = $$lcssa6087;
         $$lcssa6098$lcssa6533 = $$lcssa6098;
         label = 863;
         break L1;
        }
        $2447 = HEAP32[$$idx$val$i842$lcssa6064 + -96 >> 2] | 0;
        $2448 = HEAP32[$205 >> 2] | 0;
        $2449 = __Znwj(16) | 0;
        HEAP32[$2449 >> 2] = 39624;
        HEAP32[$2449 + 8 >> 2] = $2447;
        HEAP32[$2449 + 12 >> 2] = $2448;
        $2452 = HEAP32[$220 >> 2] | 0;
        $2453 = HEAP32[$221 >> 2] | 0;
        if ($2452 >>> 0 < $2453 >>> 0) {
         if (!$2452) $2457 = 0; else {
          HEAP32[$2452 >> 2] = $2449;
          $2457 = HEAP32[$220 >> 2] | 0;
         }
         $2456 = $2457 + 4 | 0;
         HEAP32[$220 >> 2] = $2456;
         $$idx1$val$i$i$i974 = $2456;
        } else {
         $this$idx2$val$i$i$i$i$i959 = HEAP32[$219 >> 2] | 0;
         $2462 = ($2452 - $this$idx2$val$i$i$i$i$i959 >> 2) + 1 | 0;
         if ($2462 >>> 0 > 1073741823) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($219);
          $$idx1$val$i$i$i$i$i$i$i962 = HEAP32[$221 >> 2] | 0;
          $2465 = HEAP32[$219 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i$i$i$i962 = $2453;
          $2465 = $this$idx2$val$i$i$i$i$i959;
         }
         $2466 = $2465;
         $2467 = $$idx1$val$i$i$i$i$i$i$i962 - $2466 | 0;
         if ($2467 >> 2 >>> 0 < 536870911) {
          $2473 = $2467 >> 1;
          $2475 = $2473 >>> 0 < $2462 >>> 0 ? $2462 : $2473;
          $2477 = (HEAP32[$220 >> 2] | 0) - $2466 | 0;
          $2478 = $2477 >> 2;
          if (!$2475) {
           $$0$i8$i$i$i$i$i968 = 0;
           $2483 = 0;
           $2484 = $2478;
           $2488 = $2477;
          } else {
           $$0$i7$i$i$i$i$i967 = $2475;
           $5603 = $2478;
           $5604 = $2477;
           label = 883;
          }
         } else {
          $2471 = (HEAP32[$220 >> 2] | 0) - $2466 | 0;
          $$0$i7$i$i$i$i$i967 = 1073741823;
          $5603 = $2471 >> 2;
          $5604 = $2471;
          label = 883;
         }
         if ((label | 0) == 883) {
          label = 0;
          $$0$i8$i$i$i$i$i968 = $$0$i7$i$i$i$i$i967;
          $2483 = __Znwj($$0$i7$i$i$i$i$i967 << 2) | 0;
          $2484 = $5603;
          $2488 = $5604;
         }
         $2482 = $2483 + ($2484 << 2) | 0;
         if ($2482) HEAP32[$2482 >> 2] = $2449;
         $2487 = $2483 + ($2484 + 1 << 2) | 0;
         _memcpy($2483 | 0, $2465 | 0, $2488 | 0) | 0;
         HEAP32[$219 >> 2] = $2483;
         HEAP32[$220 >> 2] = $2487;
         HEAP32[$221 >> 2] = $2483 + ($$0$i8$i$i$i$i$i968 << 2);
         if (!$2465) $$idx1$val$i$i$i974 = $2487; else {
          __ZdlPv($2465);
          $$idx1$val$i$i$i974 = HEAP32[$220 >> 2] | 0;
         }
        }
        HEAP8[$2449 + 4 >> 0] = HEAP8[$222 >> 0] | 0;
        $2495 = $$idx1$val$i$i$i974 - (HEAP32[$219 >> 2] | 0) >> 2;
        HEAP32[$223 >> 2] = $2495;
        if ($2495 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($2495 >>> 0) > +HEAPF64[$224 >> 3] * +((HEAP32[$225 >> 2] | 0) >>> 0)) {
         __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $2449);
         __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($198, $this);
         if (HEAP32[$226 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$205 >> 2] | 0);
         $2509 = (HEAP8[$222 >> 0] | 0) + 1 << 24 >> 24;
         HEAP8[$222 >> 0] = $2509;
         $$idx6$val11$i$i$i978 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $$idx7$val12$i$i$i979 = HEAP32[$220 >> 2] | 0;
         if (($$idx7$val12$i$i$i979 | 0) == ($$idx6$val11$i$i$i978 | 0)) $$lcssa$i$i$i998 = 0; else {
          $$idx6$val14$i$i$i982 = $$idx6$val11$i$i$i978;
          $$idx7$val18$i$i$i981 = $$idx7$val12$i$i$i979;
          $2516 = $2509;
          $i$013$i$i$i983 = 0;
          while (1) {
           $2512 = HEAP32[$$idx6$val14$i$i$i982 + ($i$013$i$i$i983 << 2) >> 2] | 0;
           if ((HEAP8[$2512 + 4 >> 0] | 0) == $2516 << 24 >> 24) {
            $$idx6$val$i$i$i994 = $$idx6$val14$i$i$i982;
            $$idx7$val$i$i$i993 = $$idx7$val18$i$i$i981;
            $i$1$i$i$i995 = $i$013$i$i$i983;
           } else {
            if (!$2512) {
             $$idx4$val$i$i$i988 = $$idx6$val14$i$i$i982;
             $$idx5$val$i$i$i987 = $$idx7$val18$i$i$i981;
            } else {
             FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2512 >> 2] | 0) + 4 >> 2] & 255]($2512);
             $$idx4$val$i$i$i988 = HEAP32[$$idx6$i$i$i >> 2] | 0;
             $$idx5$val$i$i$i987 = HEAP32[$220 >> 2] | 0;
            }
            $2525 = ($$idx5$val$i$i$i987 - $$idx4$val$i$i$i988 >> 2) + -1 | 0;
            if (($i$013$i$i$i983 | 0) == ($2525 | 0)) {
             $$idx6$val$pre$i$i$i991 = $$idx4$val$i$i$i988;
             $2530 = $$idx5$val$i$i$i987;
            } else {
             HEAP32[$$idx4$val$i$i$i988 + ($i$013$i$i$i983 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i988 + ($2525 << 2) >> 2];
             $$idx6$val$pre$i$i$i991 = HEAP32[$$idx6$i$i$i >> 2] | 0;
             $2530 = HEAP32[$220 >> 2] | 0;
            }
            $scevgep4$i$i$i$i$i$i992 = $2530 + -4 | 0;
            HEAP32[$220 >> 2] = $scevgep4$i$i$i$i$i$i992;
            $$idx6$val$i$i$i994 = $$idx6$val$pre$i$i$i991;
            $$idx7$val$i$i$i993 = $scevgep4$i$i$i$i$i$i992;
            $i$1$i$i$i995 = $i$013$i$i$i983 + -1 | 0;
           }
           $2532 = $i$1$i$i$i995 + 1 | 0;
           $2536 = $$idx7$val$i$i$i993 - $$idx6$val$i$i$i994 >> 2;
           if ($2532 >>> 0 >= $2536 >>> 0) {
            $$lcssa6139 = $2536;
            break;
           }
           $$idx6$val14$i$i$i982 = $$idx6$val$i$i$i994;
           $$idx7$val18$i$i$i981 = $$idx7$val$i$i$i993;
           $2516 = HEAP8[$222 >> 0] | 0;
           $i$013$i$i$i983 = $2532;
          }
          $$lcssa$i$i$i998 = $$lcssa6139;
         }
         HEAP32[$223 >> 2] = $$lcssa$i$i$i998;
         HEAP32[$225 >> 2] = $$lcssa$i$i$i998;
        }
        HEAP32[$226 >> 2] = 18;
        HEAP32[$205 >> 2] = $2449;
        $$414 = $$111$ph4070;
        label = 2248;
        break L604;
        break;
       }
      case 0:
       {
        $$lcssa6087$lcssa6555 = $$lcssa6087;
        $$lcssa6098$lcssa6529 = $$lcssa6098;
        label = 851;
        break L1;
        break;
       }
      case 19:
       {
        if (($$lcssa6096 | 0) != 2) {
         $$lcssa6087$lcssa6556 = $$lcssa6087;
         $$lcssa6098$lcssa6530 = $$lcssa6098;
         label = 924;
         break L1;
        }
        $2540 = HEAP32[$$idx$val$i842$lcssa6064 + -96 >> 2] | 0;
        $2541 = $2540 + 8 | 0;
        $2542 = HEAP32[$205 >> 2] | 0;
        $2543 = $2542 + 8 | 0;
        HEAP32[$63 + 0 >> 2] = 0;
        HEAP32[$63 + 4 >> 2] = 0;
        HEAP32[$63 + 8 >> 2] = 0;
        $2544 = HEAP8[$2541 >> 0] | 0;
        $2546 = ($2544 & 1) == 0;
        if ($2546) $2562 = ($2544 & 255) >>> 1; else $2562 = HEAP32[$2540 + 12 >> 2] | 0;
        $2551 = HEAP8[$2543 >> 0] | 0;
        if (!($2551 & 1)) $2563 = ($2551 & 255) >>> 1; else $2563 = HEAP32[$2542 + 12 >> 2] | 0;
        if ($2546) $2564 = $2541 + 1 | 0; else $2564 = HEAP32[$2540 + 16 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(13, $63 | 0, $2564 | 0, $2562 | 0, $2563 + $2562 | 0);
        $2565 = __THREW__;
        __THREW__ = 0;
        if ($2565 & 1) {
         label = 920;
         break L1;
        }
        if (!(HEAP8[$2543 >> 0] & 1)) $2573 = $2543 + 1 | 0; else $2573 = HEAP32[$2542 + 16 >> 2] | 0;
        __THREW__ = 0;
        invoke_iiii(31, $63 | 0, $2573 | 0, $2563 | 0) | 0;
        $2574 = __THREW__;
        __THREW__ = 0;
        if ($2574 & 1) {
         label = 920;
         break L1;
        }
        __THREW__ = 0;
        invoke_viii(13, $62 | 0, $this | 0, $63 | 0);
        $2578 = __THREW__;
        __THREW__ = 0;
        if ($2578 & 1) {
         label = 923;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$62 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$62 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$62 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$62 + 12 >> 2];
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
        $$414 = $$111$ph4070;
        label = 2248;
        break L604;
        break;
       }
      default:
       {
        $$414 = $$111$ph4070;
        label = 2248;
        break L604;
       }
      }
      break;
     }
    case 935:
     {
      label = 0;
      $2606 = HEAP32[$$idx$val$i842$lcssa6050 + -140 >> 2] | 0;
      $2608 = HEAP32[$$idx$val$i842$lcssa6050 + -96 >> 2] | 0;
      $2610 = HEAP32[$$idx$val$i842$lcssa6050 + -80 >> 2] | 0;
      if ((HEAP32[$204 >> 2] | 0) != 1) {
       $$lcssa6523 = $2606;
       label = 936;
       break L1;
      }
      do if (!(HEAP8[$205 >> 0] | 0)) {
       $$idx262$pre$phiZZ2D = $2610 + 8 | 0;
       $$pre$phi4990Z2D = $$idx$val$i842$lcssa6050 + -56 | 0;
      } else {
       $2632 = $$idx$val$i842$lcssa6050 + -40 | 0;
       $2633 = $$idx$val$i842$lcssa6050 + -56 | 0;
       $$idx304 = $2610 + 8 | 0;
       $2635 = (HEAP32[$$idx304 >> 2] | 0) + (HEAP32[$2633 >> 2] << 2) | 0;
       $2636 = $$idx$val$i842$lcssa6050 + -36 | 0;
       $2637 = HEAP32[$2636 >> 2] | 0;
       $2638 = $$idx$val$i842$lcssa6050 + -32 | 0;
       if (($2637 | 0) != (HEAP32[$2638 >> 2] | 0)) {
        if (!$2637) $2643 = 0; else {
         HEAP32[$2637 >> 2] = HEAP32[$2635 >> 2];
         $2643 = HEAP32[$2636 >> 2] | 0;
        }
        HEAP32[$2636 >> 2] = $2643 + 4;
        $$idx262$pre$phiZZ2D = $$idx304;
        $$pre$phi4990Z2D = $2633;
        break;
       }
       $this$idx2$val$i$i1016 = HEAP32[$2632 >> 2] | 0;
       $2648 = ($2637 - $this$idx2$val$i$i1016 >> 2) + 1 | 0;
       if ($2648 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2632);
        $$idx1$val$i$i$i$i1019 = HEAP32[$2638 >> 2] | 0;
        $2651 = HEAP32[$2632 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i1019 = $2637;
        $2651 = $this$idx2$val$i$i1016;
       }
       $2652 = $2651;
       $2653 = $$idx1$val$i$i$i$i1019 - $2652 | 0;
       if ($2653 >> 2 >>> 0 < 536870911) {
        $2659 = $2653 >> 1;
        $2661 = $2659 >>> 0 < $2648 >>> 0 ? $2648 : $2659;
        $2663 = (HEAP32[$2636 >> 2] | 0) - $2652 | 0;
        $2664 = $2663 >> 2;
        if (!$2661) {
         $$0$i8$i$i1025 = 0;
         $2669 = 0;
         $2670 = $2664;
         $2674 = $2663;
        } else {
         $$0$i7$i$i1024 = $2661;
         $5605 = $2664;
         $5606 = $2663;
         label = 955;
        }
       } else {
        $2657 = (HEAP32[$2636 >> 2] | 0) - $2652 | 0;
        $$0$i7$i$i1024 = 1073741823;
        $5605 = $2657 >> 2;
        $5606 = $2657;
        label = 955;
       }
       if ((label | 0) == 955) {
        label = 0;
        $$0$i8$i$i1025 = $$0$i7$i$i1024;
        $2669 = __Znwj($$0$i7$i$i1024 << 2) | 0;
        $2670 = $5605;
        $2674 = $5606;
       }
       $2668 = $2669 + ($2670 << 2) | 0;
       if ($2668) HEAP32[$2668 >> 2] = HEAP32[$2635 >> 2];
       _memcpy($2669 | 0, $2651 | 0, $2674 | 0) | 0;
       HEAP32[$2632 >> 2] = $2669;
       HEAP32[$2636 >> 2] = $2669 + ($2670 + 1 << 2);
       HEAP32[$2638 >> 2] = $2669 + ($$0$i8$i$i1025 << 2);
       if (!$2651) {
        $$idx262$pre$phiZZ2D = $$idx304;
        $$pre$phi4990Z2D = $2633;
       } else {
        __ZdlPv($2651);
        $$idx262$pre$phiZZ2D = $$idx304;
        $$pre$phi4990Z2D = $2633;
       }
      } while (0);
      $2677 = (HEAP32[$$pre$phi4990Z2D >> 2] | 0) + 1 | 0;
      HEAP32[$$pre$phi4990Z2D >> 2] = $2677;
      $$idx262$val = HEAP32[$$idx262$pre$phiZZ2D >> 2] | 0;
      if (($2677 | 0) != ((HEAP32[$2610 + 12 >> 2] | 0) - $$idx262$val >> 2 | 0)) {
       $$idx262$val$lcssa = $$idx262$val;
       $$lcssa6524 = $2606;
       $$lcssa6526 = $2608;
       $$lcssa6527 = $2677;
       label = 962;
       break L589;
      }
      __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($69, $this, $$idx$val$i842$lcssa6050 + -40 | 0);
      HEAP32[$204 + 0 >> 2] = HEAP32[$69 + 0 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$69 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$69 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$69 + 12 >> 2];
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    case 1018:
     {
      label = 0;
      $2798 = HEAP32[$$idx$val$i842$lcssa6051 + -140 >> 2] | 0;
      $2799 = $$idx$val$i842$lcssa6051 + -104 | 0;
      $2800 = $$idx$val$i842$lcssa6051 + -56 | 0;
      $2801 = HEAP32[$2800 >> 2] | 0;
      $2802 = $$idx$val$i842$lcssa6051 + -40 | 0;
      $$idx260$val = HEAP32[$2802 >> 2] | 0;
      $$idx261 = $$idx$val$i842$lcssa6051 + -36 | 0;
      $$idx261$val = HEAP32[$$idx261 >> 2] | 0;
      if (($2801 | 0) != ($$idx261$val - $$idx260$val >> 2 | 0)) {
       HEAP32[$2800 >> 2] = $2801 + 1;
       $4293 = HEAP32[$$idx260$val + ($2801 << 2) >> 2] | 0;
       if (!(HEAP8[$4293 + 5 >> 0] | 0)) {
        $$lcssa6228 = $2798;
        $$lcssa6305 = $4293;
        label = 1670;
        break L589;
       } else {
        $$414 = $$111$ph4070;
        label = 2248;
        break;
       }
      }
      $2810 = $2798 + 4 | 0;
      $2812 = HEAP32[(HEAP32[$$idx$val$i842$lcssa6051 + -96 >> 2] | 0) + 44 >> 2] | 0;
      HEAP32[$args68 >> 2] = 0;
      HEAP32[$270 >> 2] = 0;
      HEAP32[$271 >> 2] = 0;
      if (($$idx260$val | 0) != ($$idx261$val | 0)) {
       $$pre$i1086 = 0;
       $2815 = $$idx260$val;
       $2818 = 0;
       while (1) {
        $2816 = (HEAP32[$2815 >> 2] | 0) + 8 | 0;
        if (($$pre$i1086 | 0) == ($2818 | 0)) {
         $this$idx2$val$i$i1088 = HEAP32[$args68 >> 2] | 0;
         $2826 = ($2818 - $this$idx2$val$i$i1088 >> 4) + 1 | 0;
         if ($2826 >>> 0 > 268435455) {
          __THREW__ = 0;
          invoke_vi(179, $args68 | 0);
          $2828 = __THREW__;
          __THREW__ = 0;
          if ($2828 & 1) {
           label = 1039;
           break L1;
          }
          $$idx1$val$i$i$i$i1091 = HEAP32[$271 >> 2] | 0;
          $2831 = HEAP32[$args68 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i1091 = $2818;
          $2831 = $this$idx2$val$i$i1088;
         }
         $2832 = $2831;
         $2833 = $$idx1$val$i$i$i$i1091 - $2832 | 0;
         if ($2833 >> 4 >>> 0 < 134217727) {
          $2839 = $2833 >> 3;
          $2841 = $2839 >>> 0 < $2826 >>> 0 ? $2826 : $2839;
          $2843 = (HEAP32[$270 >> 2] | 0) - $2832 | 0;
          $2844 = $2843 >> 4;
          if (!$2841) {
           $$0$i8$i$i1095 = 0;
           $2851 = 0;
           $2852 = $2844;
           $2856 = $2843;
          } else {
           $$0$i7$i$i1094 = $2841;
           $5608 = $2844;
           $5609 = $2843;
           label = 1031;
          }
         } else {
          $2837 = (HEAP32[$270 >> 2] | 0) - $2832 | 0;
          $$0$i7$i$i1094 = 268435455;
          $5608 = $2837 >> 4;
          $5609 = $2837;
          label = 1031;
         }
         if ((label | 0) == 1031) {
          label = 0;
          __THREW__ = 0;
          $2847 = invoke_ii(67, $$0$i7$i$i1094 << 4 | 0) | 0;
          $2848 = __THREW__;
          __THREW__ = 0;
          if ($2848 & 1) {
           label = 1039;
           break L1;
          }
          $$0$i8$i$i1095 = $$0$i7$i$i1094;
          $2851 = $2847;
          $2852 = $5608;
          $2856 = $5609;
         }
         $2850 = $2851 + ($2852 << 4) | 0;
         if ($2850) {
          HEAP32[$2850 + 0 >> 2] = HEAP32[$2816 + 0 >> 2];
          HEAP32[$2850 + 4 >> 2] = HEAP32[$2816 + 4 >> 2];
          HEAP32[$2850 + 8 >> 2] = HEAP32[$2816 + 8 >> 2];
          HEAP32[$2850 + 12 >> 2] = HEAP32[$2816 + 12 >> 2];
         }
         _memcpy($2851 | 0, $2831 | 0, $2856 | 0) | 0;
         HEAP32[$args68 >> 2] = $2851;
         HEAP32[$270 >> 2] = $2851 + ($2852 + 1 << 4);
         HEAP32[$271 >> 2] = $2851 + ($$0$i8$i$i1095 << 4);
         if ($2831) __ZdlPv($2831);
        } else {
         if (!$$pre$i1086) $2821 = 0; else {
          HEAP32[$$pre$i1086 + 0 >> 2] = HEAP32[$2816 + 0 >> 2];
          HEAP32[$$pre$i1086 + 4 >> 2] = HEAP32[$2816 + 4 >> 2];
          HEAP32[$$pre$i1086 + 8 >> 2] = HEAP32[$2816 + 8 >> 2];
          HEAP32[$$pre$i1086 + 12 >> 2] = HEAP32[$2816 + 12 >> 2];
          $2821 = $$pre$i1086;
         }
         HEAP32[$270 >> 2] = $2821 + 16;
        }
        $2858 = $2815 + 4 | 0;
        if (($2858 | 0) == ($$idx261$val | 0)) break;
        $$pre$i1086 = HEAP32[$270 >> 2] | 0;
        $2815 = $2858;
        $2818 = HEAP32[$271 >> 2] | 0;
       }
      }
      L1010 : do switch ($2812 | 0) {
      case 0:
       {
        HEAP32[$70 >> 2] = 0;
        HEAP32[$272 >> 2] = 0;
        HEAP32[$273 >> 2] = 0;
        __THREW__ = 0;
        $2866 = invoke_ii(67, 8) | 0;
        $2867 = __THREW__;
        __THREW__ = 0;
        if ($2867 & 1) {
         label = 1047;
         break L1;
        }
        HEAP32[$70 >> 2] = $2866;
        HEAP32[$273 >> 2] = $2866 + 8;
        HEAP32[$2866 >> 2] = 2;
        HEAP32[$2866 + 4 >> 2] = 17;
        HEAP32[$272 >> 2] = $2866 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 0, $args68 | 0, $70 | 0);
        $2872 = __THREW__;
        __THREW__ = 0;
        if ($2872 & 1) {
         $$lcssa6504 = $2866;
         label = 1062;
         break L1;
        }
        HEAP32[$272 >> 2] = $2866;
        __ZdlPv($2866);
        $args68$idx353$val = HEAP32[$args68 >> 2] | 0;
        $2878 = ~~+HEAPF64[$args68$idx353$val + 8 >> 3];
        if (($2878 | 0) < 0) {
         $$lcssa6377 = $2810;
         $$lcssa6510 = $2878;
         label = 1049;
         break L1;
        }
        $2922 = HEAP32[$args68$idx353$val + 24 >> 2] | 0;
        HEAP32[$elements75 >> 2] = 0;
        HEAP32[$274 >> 2] = 0;
        HEAP32[$275 >> 2] = 0;
        $2923 = $2922 + 32 | 0;
        $2925 = $2922 + 28 | 0;
        if (((HEAP32[$2923 >> 2] | 0) - (HEAP32[$2925 >> 2] | 0) | 0) != 4) {
         $$lcssa6378 = $2810;
         $$lcssa6515 = $2923;
         $$lcssa6519 = $2925;
         label = 1069;
         break L1;
        }
        if ($2878) {
         if ($2878 >>> 0 > 1073741823) {
          __THREW__ = 0;
          invoke_vi(179, $elements75 | 0);
          $2984 = __THREW__;
          __THREW__ = 0;
          if ($2984 & 1) {
           label = 1084;
           break L1;
          }
          $$idx1$val$i$i$i$i1149 = HEAP32[$275 >> 2] | 0;
          $this$idx$val$i$i = HEAP32[$elements75 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i1149 = 0;
          $this$idx$val$i$i = 0;
         }
         $2987 = $this$idx$val$i$i;
         $2988 = $$idx1$val$i$i$i$i1149 - $2987 | 0;
         if ($2988 >> 2 >>> 0 < 536870911) {
          $2994 = $2988 >> 1;
          $2996 = $2994 >>> 0 < $2878 >>> 0 ? $2878 : $2994;
          $2999 = (HEAP32[$274 >> 2] | 0) - $2987 >> 2;
          if (!$2996) {
           $$0$i813$i$i = 0;
           $3006 = 0;
           $3007 = $2999;
          } else {
           $$0$i812$i$i = $2996;
           $5610 = $2999;
           label = 1098;
          }
         } else {
          $$0$i812$i$i = 1073741823;
          $5610 = (HEAP32[$274 >> 2] | 0) - $2987 >> 2;
          label = 1098;
         }
         if ((label | 0) == 1098) {
          label = 0;
          __THREW__ = 0;
          $3002 = invoke_ii(67, $$0$i812$i$i << 2 | 0) | 0;
          $3003 = __THREW__;
          __THREW__ = 0;
          if ($3003 & 1) {
           label = 1084;
           break L1;
          }
          $$0$i813$i$i = $$0$i812$i$i;
          $3006 = $3002;
          $3007 = $5610;
         }
         $$0$i5$i$i = $2878;
         $3008 = $3006 + ($3007 << 2) | 0;
         while (1) {
          if (!$3008) $3011 = 0; else {
           HEAP32[$3008 >> 2] = 0;
           $3011 = $3008;
          }
          $3010 = $3011 + 4 | 0;
          $$0$i5$i$i = $$0$i5$i$i + -1 | 0;
          if (!$$0$i5$i$i) {
           $$lcssa6125 = $3010;
           break;
          } else $3008 = $3010;
         }
         $3015 = HEAP32[$elements75 >> 2] | 0;
         $3019 = (HEAP32[$274 >> 2] | 0) - $3015 | 0;
         $3021 = $3006 + ($3007 - ($3019 >> 2) << 2) | 0;
         _memcpy($3021 | 0, $3015 | 0, $3019 | 0) | 0;
         HEAP32[$elements75 >> 2] = $3021;
         HEAP32[$274 >> 2] = $$lcssa6125;
         HEAP32[$275 >> 2] = $3006 + ($$0$i813$i$i << 2);
         if ($3015) __ZdlPv($3015);
         if (($2878 | 0) > 0) {
          $3024 = $2922 + 20 | 0;
          $3025 = $2922 + 24 | 0;
          $3026 = $2922 + 40 | 0;
          $3027 = $$idx$val$i842$lcssa6051 + -32 | 0;
          $3028 = $2922 + 8 | 0;
          $3029 = $2922 + 12 | 0;
          $i77$04055 = 0;
          do {
           __THREW__ = 0;
           $3034 = invoke_iiiiii(13, $this | 0, HEAP32[$206 >> 2] | 0, HEAP32[$3024 >> 2] | 0, HEAP32[$3025 >> 2] | 0, HEAP32[$3026 >> 2] | 0) | 0;
           $3035 = __THREW__;
           __THREW__ = 0;
           if ($3035 & 1) {
            label = 1083;
            break L1;
           }
           $3037 = HEAP32[$$idx261 >> 2] | 0;
           do if (($3037 | 0) == (HEAP32[$3027 >> 2] | 0)) {
            $this$idx2$val$i$i1165 = HEAP32[$2802 >> 2] | 0;
            $3047 = ($3037 - $this$idx2$val$i$i1165 >> 2) + 1 | 0;
            if ($3047 >>> 0 > 1073741823) {
             __THREW__ = 0;
             invoke_vi(179, $2802 | 0);
             $3049 = __THREW__;
             __THREW__ = 0;
             if ($3049 & 1) {
              label = 1083;
              break L1;
             }
             $$idx1$val$i$i$i$i1168 = HEAP32[$3027 >> 2] | 0;
             $3052 = HEAP32[$2802 >> 2] | 0;
            } else {
             $$idx1$val$i$i$i$i1168 = $3037;
             $3052 = $this$idx2$val$i$i1165;
            }
            $3053 = $3052;
            $3054 = $$idx1$val$i$i$i$i1168 - $3053 | 0;
            if ($3054 >> 2 >>> 0 < 536870911) {
             $3060 = $3054 >> 1;
             $3062 = $3060 >>> 0 < $3047 >>> 0 ? $3047 : $3060;
             $3064 = (HEAP32[$$idx261 >> 2] | 0) - $3053 | 0;
             $3065 = $3064 >> 2;
             if (!$3062) {
              $$0$i8$i$i1174 = 0;
              $3072 = 0;
              $3073 = $3065;
              $3077 = $3064;
             } else {
              $$0$i7$i$i1173 = $3062;
              $5611 = $3065;
              $5612 = $3064;
              label = 1119;
             }
            } else {
             $3058 = (HEAP32[$$idx261 >> 2] | 0) - $3053 | 0;
             $$0$i7$i$i1173 = 1073741823;
             $5611 = $3058 >> 2;
             $5612 = $3058;
             label = 1119;
            }
            if ((label | 0) == 1119) {
             label = 0;
             __THREW__ = 0;
             $3068 = invoke_ii(67, $$0$i7$i$i1173 << 2 | 0) | 0;
             $3069 = __THREW__;
             __THREW__ = 0;
             if ($3069 & 1) {
              label = 1083;
              break L1;
             }
             $$0$i8$i$i1174 = $$0$i7$i$i1173;
             $3072 = $3068;
             $3073 = $5611;
             $3077 = $5612;
            }
            $3071 = $3072 + ($3073 << 2) | 0;
            if ($3071) HEAP32[$3071 >> 2] = $3034;
            _memcpy($3072 | 0, $3052 | 0, $3077 | 0) | 0;
            HEAP32[$2802 >> 2] = $3072;
            HEAP32[$$idx261 >> 2] = $3072 + ($3073 + 1 << 2);
            HEAP32[$3027 >> 2] = $3072 + ($$0$i8$i$i1174 << 2);
            if (!$3052) break;
            __ZdlPv($3052);
           } else {
            if (!$3037) $3042 = 0; else {
             HEAP32[$3037 >> 2] = $3034;
             $3042 = HEAP32[$$idx261 >> 2] | 0;
            }
            HEAP32[$$idx261 >> 2] = $3042 + 4;
           } while (0);
           $3079 = $3034 + 28 | 0;
           L1064 : do if (($3079 | 0) != ($3028 | 0)) {
            $__t$idx$val$i$i = HEAP32[$3028 >> 2] | 0;
            $3081 = $3034 + 36 | 0;
            do if (!(HEAP32[$3081 >> 2] | 0)) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
             $3084 = HEAP32[$3079 >> 2] | 0;
             $3085 = $3034 + 32 | 0;
             HEAP32[$3079 >> 2] = $3085;
             HEAP32[(HEAP32[$3085 >> 2] | 0) + 8 >> 2] = 0;
             HEAP32[$3085 >> 2] = 0;
             HEAP32[$3081 >> 2] = 0;
             $3089 = HEAP32[$3084 + 4 >> 2] | 0;
             $$$i$i$i$i = ($3089 | 0) == 0 ? $3084 : $3089;
             if (!$$$i$i$i$i) {
              $__first$04$ph$i$i$i = $__t$idx$val$i$i;
              break;
             }
             $3092 = $3034 + 32 | 0;
             $__cache$017$i$i$i = $$$i$i$i$i;
             $__first$0316$i$i$i = $__t$idx$val$i$i;
             while (1) {
              if (($__first$0316$i$i$i | 0) == ($3029 | 0)) {
               $__cache$017$i$i$i$lcssa = $__cache$017$i$i$i;
               break;
              }
              $3099 = $__cache$017$i$i$i + 16 | 0;
              HEAP32[$3099 >> 2] = HEAP32[$__first$0316$i$i$i + 16 >> 2];
              HEAP32[$__cache$017$i$i$i + 20 >> 2] = HEAP32[$__first$0316$i$i$i + 20 >> 2];
              $3103 = $__cache$017$i$i$i + 8 | 0;
              $3104 = HEAP32[$3103 >> 2] | 0;
              do if (!$3104) $$0$i$i$i$i1182 = 0; else {
               $3106 = HEAP32[$3104 >> 2] | 0;
               if (($3106 | 0) == ($__cache$017$i$i$i | 0)) {
                HEAP32[$3104 >> 2] = 0;
                $3109 = HEAP32[$3104 + 4 >> 2] | 0;
                if (!$3109) {
                 $$0$i$i$i$i1182 = $3104;
                 break;
                }
                $$0$i1$i$i$i$i = $3109;
                while (1) {
                 $3111 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
                 if (!$3111) {
                  $3114 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
                  if (!$3114) {
                   $$0$i1$i$i$i$i$lcssa = $$0$i1$i$i$i$i;
                   break;
                  } else $$0$i1$i$i$i$i$be = $3114;
                 } else $$0$i1$i$i$i$i$be = $3111;
                 $$0$i1$i$i$i$i = $$0$i1$i$i$i$i$be;
                }
                $$0$i$i$i$i1182 = $$0$i1$i$i$i$i$lcssa;
                break;
               } else {
                HEAP32[$3104 + 4 >> 2] = 0;
                if (!$3106) {
                 $$0$i$i$i$i1182 = $3104;
                 break;
                }
                $$0$i$i8$i$i$i = $3106;
                while (1) {
                 $3118 = HEAP32[$$0$i$i8$i$i$i >> 2] | 0;
                 if (!$3118) {
                  $3121 = HEAP32[$$0$i$i8$i$i$i + 4 >> 2] | 0;
                  if (!$3121) {
                   $$0$i$i8$i$i$i$lcssa = $$0$i$i8$i$i$i;
                   break;
                  } else $$0$i$i8$i$i$i$be = $3121;
                 } else $$0$i$i8$i$i$i$be = $3118;
                 $$0$i$i8$i$i$i = $$0$i$i8$i$i$i$be;
                }
                $$0$i$i$i$i1182 = $$0$i$i8$i$i$i$lcssa;
                break;
               }
              } while (0);
              $3123 = HEAP32[$3085 >> 2] | 0;
              do if (!$3123) {
               $$0$i$i26$i$i$i = $3085;
               $3132 = $3085;
              } else {
               $__v$idx$val$i$i18$i$i$i = HEAP32[$3099 >> 2] | 0;
               $__nd$0$i$i20$i$i$i = $3123;
               while (1) {
                if ($__v$idx$val$i$i18$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i20$i$i$i + 16 >> 2] | 0) >>> 0) {
                 $3126 = HEAP32[$__nd$0$i$i20$i$i$i >> 2] | 0;
                 if (!$3126) {
                  $$lcssa6128 = $__nd$0$i$i20$i$i$i;
                  $__nd$0$i$i20$i$i$i$lcssa6126 = $__nd$0$i$i20$i$i$i;
                  label = 1150;
                  break;
                 } else $__nd$0$be$in$i$i23$i$i$i = $3126;
                } else {
                 $3128 = $__nd$0$i$i20$i$i$i + 4 | 0;
                 $3129 = HEAP32[$3128 >> 2] | 0;
                 if (!$3129) {
                  $$lcssa6127 = $3128;
                  $__nd$0$i$i20$i$i$i$lcssa = $__nd$0$i$i20$i$i$i;
                  label = 1153;
                  break;
                 } else $__nd$0$be$in$i$i23$i$i$i = $3129;
                }
                $__nd$0$i$i20$i$i$i = $__nd$0$be$in$i$i23$i$i$i;
               }
               if ((label | 0) == 1150) {
                label = 0;
                $$0$i$i26$i$i$i = $$lcssa6128;
                $3132 = $__nd$0$i$i20$i$i$i$lcssa6126;
                break;
               } else if ((label | 0) == 1153) {
                label = 0;
                $$0$i$i26$i$i$i = $$lcssa6127;
                $3132 = $__nd$0$i$i20$i$i$i$lcssa;
                break;
               }
              } while (0);
              HEAP32[$__cache$017$i$i$i >> 2] = 0;
              HEAP32[$__cache$017$i$i$i + 4 >> 2] = 0;
              HEAP32[$3103 >> 2] = $3132;
              HEAP32[$$0$i$i26$i$i$i >> 2] = $__cache$017$i$i$i;
              $3134 = HEAP32[HEAP32[$3079 >> 2] >> 2] | 0;
              if (!$3134) $3137 = $__cache$017$i$i$i; else {
               HEAP32[$3079 >> 2] = $3134;
               $3137 = HEAP32[$$0$i$i26$i$i$i >> 2] | 0;
              }
              __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3092 >> 2] | 0, $3137);
              HEAP32[$3081 >> 2] = (HEAP32[$3081 >> 2] | 0) + 1;
              $3141 = HEAP32[$__first$0316$i$i$i + 4 >> 2] | 0;
              if (!$3141) {
               $$0$i$i12$i$i$i = $__first$0316$i$i$i;
               while (1) {
                $3146 = HEAP32[$$0$i$i12$i$i$i + 8 >> 2] | 0;
                if ((HEAP32[$3146 >> 2] | 0) == ($$0$i$i12$i$i$i | 0)) {
                 $$cast$i$i13$i$i$i$lcssa = $3146;
                 break;
                } else $$0$i$i12$i$i$i = $3146;
               }
               $$01$i$i15$i$i$i = $$cast$i$i13$i$i$i$lcssa;
              } else {
               $$0$i$i$i10$i$i$i = $3141;
               while (1) {
                $3143 = HEAP32[$$0$i$i$i10$i$i$i >> 2] | 0;
                if (!$3143) {
                 $$0$i$i$i10$i$i$i$lcssa = $$0$i$i$i10$i$i$i;
                 break;
                } else $$0$i$i$i10$i$i$i = $3143;
               }
               $$01$i$i15$i$i$i = $$0$i$i$i10$i$i$i$lcssa;
              }
              if (!$$0$i$i$i$i1182) {
               $$lcssa6130 = $$01$i$i15$i$i$i;
               label = 1167;
               break;
              } else {
               $__cache$017$i$i$i = $$0$i$i$i$i1182;
               $__first$0316$i$i$i = $$01$i$i15$i$i$i;
              }
             }
             if ((label | 0) == 1167) {
              label = 0;
              $__first$04$ph$i$i$i = $$lcssa6130;
              break;
             }
             $3095 = HEAP32[$__cache$017$i$i$i$lcssa + 8 >> 2] | 0;
             if (!$3095) $__cache$2$lcssa$i$i$i = $__cache$017$i$i$i$lcssa; else {
              $3151 = $3095;
              while (1) {
               $3152 = HEAP32[$3151 + 8 >> 2] | 0;
               if (!$3152) {
                $$lcssa6131 = $3151;
                break;
               } else $3151 = $3152;
              }
              $__cache$2$lcssa$i$i$i = $$lcssa6131;
             }
             __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3079, $__cache$2$lcssa$i$i$i);
             break L1064;
            } while (0);
            if (($__first$04$ph$i$i$i | 0) == ($3029 | 0)) break;
            $3155 = $3034 + 32 | 0;
            $3156 = $3034 + 32 | 0;
            $__first$0414$i$i$i = $__first$04$ph$i$i$i;
            while (1) {
             $3157 = $__first$0414$i$i$i + 16 | 0;
             $3158 = HEAP32[$3155 >> 2] | 0;
             do if (!$3158) {
              $$0$i$i7$i$i$i = $3155;
              $3182 = $3155;
             } else {
              $__v$idx$val$i$i$i$i$i = HEAP32[$3157 >> 2] | 0;
              $__nd$0$i$i$i$i$i = $3158;
              while (1) {
               if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
                $3161 = HEAP32[$__nd$0$i$i$i$i$i >> 2] | 0;
                if (!$3161) {
                 $$lcssa6134 = $__nd$0$i$i$i$i$i;
                 $__nd$0$i$i$i$i$i$lcssa6132 = $__nd$0$i$i$i$i$i;
                 label = 1174;
                 break;
                } else $__nd$0$be$in$i$i$i$i$i = $3161;
               } else {
                $3163 = $__nd$0$i$i$i$i$i + 4 | 0;
                $3164 = HEAP32[$3163 >> 2] | 0;
                if (!$3164) {
                 $$lcssa6133 = $3163;
                 $__nd$0$i$i$i$i$i$lcssa = $__nd$0$i$i$i$i$i;
                 label = 1177;
                 break;
                } else $__nd$0$be$in$i$i$i$i$i = $3164;
               }
               $__nd$0$i$i$i$i$i = $__nd$0$be$in$i$i$i$i$i;
              }
              if ((label | 0) == 1174) {
               label = 0;
               $$0$i$i7$i$i$i = $$lcssa6134;
               $3182 = $__nd$0$i$i$i$i$i$lcssa6132;
               break;
              } else if ((label | 0) == 1177) {
               label = 0;
               $$0$i$i7$i$i$i = $$lcssa6133;
               $3182 = $__nd$0$i$i$i$i$i$lcssa;
               break;
              }
             } while (0);
             __THREW__ = 0;
             $3166 = invoke_ii(67, 24) | 0;
             $3167 = __THREW__;
             __THREW__ = 0;
             if ($3167 & 1) {
              label = 1082;
              break L1;
             }
             $3170 = $3157;
             $3175 = HEAP32[$3170 + 4 >> 2] | 0;
             $3176 = $3166 + 16 | 0;
             HEAP32[$3176 >> 2] = HEAP32[$3170 >> 2];
             HEAP32[$3176 + 4 >> 2] = $3175;
             HEAP32[$3166 >> 2] = 0;
             HEAP32[$3166 + 4 >> 2] = 0;
             HEAP32[$3166 + 8 >> 2] = $3182;
             HEAP32[$$0$i$i7$i$i$i >> 2] = $3166;
             $3184 = HEAP32[HEAP32[$3079 >> 2] >> 2] | 0;
             if (!$3184) $3187 = $3166; else {
              HEAP32[$3079 >> 2] = $3184;
              $3187 = HEAP32[$$0$i$i7$i$i$i >> 2] | 0;
             }
             __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3156 >> 2] | 0, $3187);
             HEAP32[$3081 >> 2] = (HEAP32[$3081 >> 2] | 0) + 1;
             $3191 = HEAP32[$__first$0414$i$i$i + 4 >> 2] | 0;
             if (!$3191) {
              $$0$i$i$i$i$i1186 = $__first$0414$i$i$i;
              while (1) {
               $3196 = HEAP32[$$0$i$i$i$i$i1186 + 8 >> 2] | 0;
               if ((HEAP32[$3196 >> 2] | 0) == ($$0$i$i$i$i$i1186 | 0)) {
                $$cast$i$i$i$i$i1187$lcssa = $3196;
                break;
               } else $$0$i$i$i$i$i1186 = $3196;
              }
              $$01$i$i$i$i$i1189 = $$cast$i$i$i$i$i1187$lcssa;
             } else {
              $$0$i$i$i$i$i$i1184 = $3191;
              while (1) {
               $3193 = HEAP32[$$0$i$i$i$i$i$i1184 >> 2] | 0;
               if (!$3193) {
                $$0$i$i$i$i$i$i1184$lcssa = $$0$i$i$i$i$i$i1184;
                break;
               } else $$0$i$i$i$i$i$i1184 = $3193;
              }
              $$01$i$i$i$i$i1189 = $$0$i$i$i$i$i$i1184$lcssa;
             }
             if (($$01$i$i$i$i$i1189 | 0) == ($3029 | 0)) break; else $__first$0414$i$i$i = $$01$i$i$i$i$i1189;
            }
           } while (0);
           __THREW__ = 0;
           $3202 = invoke_iii(32, $this | 0, HEAP32[HEAP32[$2925 >> 2] >> 2] | 0) | 0;
           $3203 = __THREW__;
           __THREW__ = 0;
           if ($3203 & 1) {
            label = 1083;
            break L1;
           }
           HEAP32[$3202 + 8 >> 2] = 2;
           HEAPF64[$3202 + 16 >> 3] = +($i77$04055 | 0);
           HEAP8[$3202 + 5 >> 0] = 1;
           HEAP32[$3202 + 40 >> 2] = 0;
           $3210 = $3202 + 28 | 0;
           $3211 = $3202 + 32 | 0;
           __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3210, HEAP32[$3211 >> 2] | 0);
           HEAP32[$3202 + 36 >> 2] = 0;
           HEAP32[$3210 >> 2] = $3211;
           HEAP32[$3211 >> 2] = 0;
           $__k$val$i1192 = HEAP32[HEAP32[$2925 >> 2] >> 2] | 0;
           $3215 = $3034 + 32 | 0;
           $3216 = HEAP32[$3215 >> 2] | 0;
           do if (!$3216) {
            HEAP32[$__parent$i1191 >> 2] = $3215;
            $$0$i7$i1200 = $3215;
            $3235 = $3215;
            label = 1202;
           } else {
            $__nd$0$i$i1193 = $3216;
            while (1) {
             $3219 = HEAP32[$__nd$0$i$i1193 + 16 >> 2] | 0;
             if ($3219 >>> 0 > $__k$val$i1192 >>> 0) {
              $3221 = HEAP32[$__nd$0$i$i1193 >> 2] | 0;
              if (!$3221) {
               $$lcssa6138 = $__nd$0$i$i1193;
               $__nd$0$i$i1193$lcssa6136 = $__nd$0$i$i1193;
               label = 1195;
               break;
              } else $__nd$0$be$in$i$i1195 = $3221;
             } else {
              if ($3219 >>> 0 >= $__k$val$i1192 >>> 0) {
               $__nd$0$i$i1193$lcssa = $__nd$0$i$i1193;
               label = 1201;
               break;
              }
              $3224 = $__nd$0$i$i1193 + 4 | 0;
              $3225 = HEAP32[$3224 >> 2] | 0;
              if (!$3225) {
               $$lcssa6137 = $3224;
               $__nd$0$i$i1193$lcssa6135 = $__nd$0$i$i1193;
               label = 1199;
               break;
              } else $__nd$0$be$in$i$i1195 = $3225;
             }
             $__nd$0$i$i1193 = $__nd$0$be$in$i$i1195;
            }
            if ((label | 0) == 1195) {
             label = 0;
             HEAP32[$__parent$i1191 >> 2] = $__nd$0$i$i1193$lcssa6136;
             $$0$i7$i1200 = $$lcssa6138;
             $3235 = $__nd$0$i$i1193$lcssa6136;
             label = 1202;
             break;
            } else if ((label | 0) == 1199) {
             label = 0;
             HEAP32[$__parent$i1191 >> 2] = $__nd$0$i$i1193$lcssa6135;
             $$0$i7$i1200 = $$lcssa6137;
             $3235 = $__nd$0$i$i1193$lcssa6135;
             label = 1202;
             break;
            } else if ((label | 0) == 1201) {
             label = 0;
             HEAP32[$__parent$i1191 >> 2] = $__nd$0$i$i1193$lcssa;
             if (!$__nd$0$i$i1193$lcssa) {
              $$0$i7$i1200 = $__parent$i1191;
              $3235 = 0;
              label = 1202;
              break;
             } else {
              $__r$0$i1204 = $__nd$0$i$i1193$lcssa;
              break;
             }
            }
           } while (0);
           if ((label | 0) == 1202) {
            label = 0;
            __THREW__ = 0;
            $3228 = invoke_ii(67, 24) | 0;
            $3229 = __THREW__;
            __THREW__ = 0;
            if ($3229 & 1) {
             label = 1083;
             break L1;
            }
            HEAP32[$3228 + 16 >> 2] = $__k$val$i1192;
            HEAP32[$3228 + 20 >> 2] = 0;
            HEAP32[$3228 >> 2] = 0;
            HEAP32[$3228 + 4 >> 2] = 0;
            HEAP32[$3228 + 8 >> 2] = $3235;
            HEAP32[$$0$i7$i1200 >> 2] = $3228;
            $3237 = HEAP32[HEAP32[$3079 >> 2] >> 2] | 0;
            if (!$3237) $3241 = $3228; else {
             HEAP32[$3079 >> 2] = $3237;
             $3241 = HEAP32[$$0$i7$i1200 >> 2] | 0;
            }
            __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3034 + 32 >> 2] | 0, $3241);
            $3242 = $3034 + 36 | 0;
            HEAP32[$3242 >> 2] = (HEAP32[$3242 >> 2] | 0) + 1;
            $__r$0$i1204 = $3228;
           }
           HEAP32[$__r$0$i1204 + 20 >> 2] = $3202;
           HEAP32[(HEAP32[$elements75 >> 2] | 0) + ($i77$04055 << 2) >> 2] = $3034;
           $i77$04055 = $i77$04055 + 1 | 0;
          } while (($i77$04055 | 0) < ($2878 | 0));
         }
        }
        __THREW__ = 0;
        invoke_viii(11, $73 | 0, $this | 0, $elements75 | 0);
        $3249 = __THREW__;
        __THREW__ = 0;
        if ($3249 & 1) {
         label = 1084;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$73 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$73 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$73 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$73 + 12 >> 2];
        $3251 = HEAP32[$elements75 >> 2] | 0;
        $3253 = $3251;
        if (!$3251) {
         $$1136$ph = 0;
         $$313$ph = $$111$ph4070;
         label = 1659;
        } else {
         $3254 = HEAP32[$274 >> 2] | 0;
         if (($3254 | 0) != ($3251 | 0)) HEAP32[$274 >> 2] = $3254 + (~(($3254 + -4 - $3253 | 0) >>> 2) << 2);
         __ZdlPv($3251);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4070;
         label = 1659;
        }
        break;
       }
      case 1:
       {
        HEAP32[$74 >> 2] = 0;
        HEAP32[$276 >> 2] = 0;
        HEAP32[$277 >> 2] = 0;
        __THREW__ = 0;
        $3269 = invoke_ii(67, 8) | 0;
        $3270 = __THREW__;
        __THREW__ = 0;
        if ($3270 & 1) {
         label = 1219;
         break L1;
        }
        HEAP32[$74 >> 2] = $3269;
        HEAP32[$277 >> 2] = $3269 + 8;
        HEAP32[$3269 >> 2] = 2;
        HEAP32[$3269 + 4 >> 2] = 2;
        HEAP32[$276 >> 2] = $3269 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 1, $args68 | 0, $74 | 0);
        $3275 = __THREW__;
        __THREW__ = 0;
        if ($3275 & 1) {
         $$lcssa6503 = $3269;
         label = 1222;
         break L1;
        }
        HEAP32[$276 >> 2] = $3269;
        __ZdlPv($3269);
        $args68$idx355$val = HEAP32[$args68 >> 2] | 0;
        $3283 = +Math_pow(+(+HEAPF64[$args68$idx355$val + 8 >> 3]), +(+HEAPF64[$args68$idx355$val + 24 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $75 | 0, $this | 0, $2810 | 0, +$3283);
        $3284 = __THREW__;
        __THREW__ = 0;
        if ($3284 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$75 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$75 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$75 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$75 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 2:
       {
        HEAP32[$76 >> 2] = 0;
        HEAP32[$278 >> 2] = 0;
        HEAP32[$279 >> 2] = 0;
        __THREW__ = 0;
        $3288 = invoke_ii(67, 4) | 0;
        $3289 = __THREW__;
        __THREW__ = 0;
        if ($3289 & 1) {
         label = 1225;
         break L1;
        }
        HEAP32[$76 >> 2] = $3288;
        HEAP32[$279 >> 2] = $3288 + 4;
        HEAP32[$3288 >> 2] = 2;
        HEAP32[$278 >> 2] = $3288 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 2, $args68 | 0, $76 | 0);
        $3293 = __THREW__;
        __THREW__ = 0;
        if ($3293 & 1) {
         $$lcssa6502 = $3288;
         label = 1228;
         break L1;
        }
        HEAP32[$278 >> 2] = $3288;
        __ZdlPv($3288);
        $3299 = +Math_floor(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $77 | 0, $this | 0, $2810 | 0, +$3299);
        $3300 = __THREW__;
        __THREW__ = 0;
        if ($3300 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$77 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$77 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 3:
       {
        HEAP32[$78 >> 2] = 0;
        HEAP32[$280 >> 2] = 0;
        HEAP32[$281 >> 2] = 0;
        __THREW__ = 0;
        $3304 = invoke_ii(67, 4) | 0;
        $3305 = __THREW__;
        __THREW__ = 0;
        if ($3305 & 1) {
         label = 1231;
         break L1;
        }
        HEAP32[$78 >> 2] = $3304;
        HEAP32[$281 >> 2] = $3304 + 4;
        HEAP32[$3304 >> 2] = 2;
        HEAP32[$280 >> 2] = $3304 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 3, $args68 | 0, $78 | 0);
        $3309 = __THREW__;
        __THREW__ = 0;
        if ($3309 & 1) {
         $$lcssa6501 = $3304;
         label = 1234;
         break L1;
        }
        HEAP32[$280 >> 2] = $3304;
        __ZdlPv($3304);
        $3315 = +Math_ceil(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $79 | 0, $this | 0, $2810 | 0, +$3315);
        $3316 = __THREW__;
        __THREW__ = 0;
        if ($3316 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$79 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$79 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$79 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$79 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 5:
       {
        HEAP32[$82 >> 2] = 0;
        HEAP32[$284 >> 2] = 0;
        HEAP32[$285 >> 2] = 0;
        __THREW__ = 0;
        $3336 = invoke_ii(67, 4) | 0;
        $3337 = __THREW__;
        __THREW__ = 0;
        if ($3337 & 1) {
         label = 1243;
         break L1;
        }
        HEAP32[$82 >> 2] = $3336;
        HEAP32[$285 >> 2] = $3336 + 4;
        HEAP32[$3336 >> 2] = 2;
        HEAP32[$284 >> 2] = $3336 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 5, $args68 | 0, $82 | 0);
        $3341 = __THREW__;
        __THREW__ = 0;
        if ($3341 & 1) {
         $$lcssa6499 = $3336;
         label = 1246;
         break L1;
        }
        HEAP32[$284 >> 2] = $3336;
        __ZdlPv($3336);
        $3347 = +Math_sin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $83 | 0, $this | 0, $2810 | 0, +$3347);
        $3348 = __THREW__;
        __THREW__ = 0;
        if ($3348 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$83 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$83 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 4:
       {
        HEAP32[$80 >> 2] = 0;
        HEAP32[$282 >> 2] = 0;
        HEAP32[$283 >> 2] = 0;
        __THREW__ = 0;
        $3320 = invoke_ii(67, 4) | 0;
        $3321 = __THREW__;
        __THREW__ = 0;
        if ($3321 & 1) {
         label = 1237;
         break L1;
        }
        HEAP32[$80 >> 2] = $3320;
        HEAP32[$283 >> 2] = $3320 + 4;
        HEAP32[$3320 >> 2] = 2;
        HEAP32[$282 >> 2] = $3320 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 4, $args68 | 0, $80 | 0);
        $3325 = __THREW__;
        __THREW__ = 0;
        if ($3325 & 1) {
         $$lcssa6500 = $3320;
         label = 1240;
         break L1;
        }
        HEAP32[$282 >> 2] = $3320;
        __ZdlPv($3320);
        $3331 = +Math_sqrt(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $81 | 0, $this | 0, $2810 | 0, +$3331);
        $3332 = __THREW__;
        __THREW__ = 0;
        if ($3332 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$81 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$81 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 6:
       {
        HEAP32[$84 >> 2] = 0;
        HEAP32[$286 >> 2] = 0;
        HEAP32[$287 >> 2] = 0;
        __THREW__ = 0;
        $3352 = invoke_ii(67, 4) | 0;
        $3353 = __THREW__;
        __THREW__ = 0;
        if ($3353 & 1) {
         label = 1249;
         break L1;
        }
        HEAP32[$84 >> 2] = $3352;
        HEAP32[$287 >> 2] = $3352 + 4;
        HEAP32[$3352 >> 2] = 2;
        HEAP32[$286 >> 2] = $3352 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 6, $args68 | 0, $84 | 0);
        $3357 = __THREW__;
        __THREW__ = 0;
        if ($3357 & 1) {
         $$lcssa6498 = $3352;
         label = 1252;
         break L1;
        }
        HEAP32[$286 >> 2] = $3352;
        __ZdlPv($3352);
        $3363 = +Math_cos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $85 | 0, $this | 0, $2810 | 0, +$3363);
        $3364 = __THREW__;
        __THREW__ = 0;
        if ($3364 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$85 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$85 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 8:
       {
        HEAP32[$88 >> 2] = 0;
        HEAP32[$290 >> 2] = 0;
        HEAP32[$291 >> 2] = 0;
        __THREW__ = 0;
        $3384 = invoke_ii(67, 4) | 0;
        $3385 = __THREW__;
        __THREW__ = 0;
        if ($3385 & 1) {
         label = 1261;
         break L1;
        }
        HEAP32[$88 >> 2] = $3384;
        HEAP32[$291 >> 2] = $3384 + 4;
        HEAP32[$3384 >> 2] = 2;
        HEAP32[$290 >> 2] = $3384 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 8, $args68 | 0, $88 | 0);
        $3389 = __THREW__;
        __THREW__ = 0;
        if ($3389 & 1) {
         $$lcssa6496 = $3384;
         label = 1264;
         break L1;
        }
        HEAP32[$290 >> 2] = $3384;
        __ZdlPv($3384);
        $3395 = +Math_asin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $89 | 0, $this | 0, $2810 | 0, +$3395);
        $3396 = __THREW__;
        __THREW__ = 0;
        if ($3396 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$89 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 7:
       {
        HEAP32[$86 >> 2] = 0;
        HEAP32[$288 >> 2] = 0;
        HEAP32[$289 >> 2] = 0;
        __THREW__ = 0;
        $3368 = invoke_ii(67, 4) | 0;
        $3369 = __THREW__;
        __THREW__ = 0;
        if ($3369 & 1) {
         label = 1255;
         break L1;
        }
        HEAP32[$86 >> 2] = $3368;
        HEAP32[$289 >> 2] = $3368 + 4;
        HEAP32[$3368 >> 2] = 2;
        HEAP32[$288 >> 2] = $3368 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 7, $args68 | 0, $86 | 0);
        $3373 = __THREW__;
        __THREW__ = 0;
        if ($3373 & 1) {
         $$lcssa6497 = $3368;
         label = 1258;
         break L1;
        }
        HEAP32[$288 >> 2] = $3368;
        __ZdlPv($3368);
        $3379 = +Math_tan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $87 | 0, $this | 0, $2810 | 0, +$3379);
        $3380 = __THREW__;
        __THREW__ = 0;
        if ($3380 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$87 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$87 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$87 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$87 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 9:
       {
        HEAP32[$90 >> 2] = 0;
        HEAP32[$292 >> 2] = 0;
        HEAP32[$293 >> 2] = 0;
        __THREW__ = 0;
        $3400 = invoke_ii(67, 4) | 0;
        $3401 = __THREW__;
        __THREW__ = 0;
        if ($3401 & 1) {
         label = 1267;
         break L1;
        }
        HEAP32[$90 >> 2] = $3400;
        HEAP32[$293 >> 2] = $3400 + 4;
        HEAP32[$3400 >> 2] = 2;
        HEAP32[$292 >> 2] = $3400 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 9, $args68 | 0, $90 | 0);
        $3405 = __THREW__;
        __THREW__ = 0;
        if ($3405 & 1) {
         $$lcssa6495 = $3400;
         label = 1270;
         break L1;
        }
        HEAP32[$292 >> 2] = $3400;
        __ZdlPv($3400);
        $3411 = +Math_acos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $91 | 0, $this | 0, $2810 | 0, +$3411);
        $3412 = __THREW__;
        __THREW__ = 0;
        if ($3412 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$91 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$91 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 11:
       {
        $args68$idx365$val = HEAP32[$args68 >> 2] | 0;
        switch (HEAP32[$args68$idx365$val >> 2] | 0) {
        case 0:
         {
          __THREW__ = 0;
          invoke_viii(3, $95 | 0, 37256, 4);
          $3433 = __THREW__;
          __THREW__ = 0;
          if ($3433 & 1) {
           label = 1040;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(13, $94 | 0, $this | 0, $95 | 0);
          $3435 = __THREW__;
          __THREW__ = 0;
          if ($3435 & 1) {
           label = 1281;
           break L1;
          };
          HEAP32[$204 + 0 >> 2] = HEAP32[$94 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$94 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
          $$1136$ph = 0;
          $$313$ph = $$111$ph4070;
          label = 1659;
          break L1010;
          break;
         }
        case 2:
         {
          __THREW__ = 0;
          invoke_viii(3, $99 | 0, 38312, 6);
          $3445 = __THREW__;
          __THREW__ = 0;
          if ($3445 & 1) {
           label = 1040;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(13, $98 | 0, $this | 0, $99 | 0);
          $3447 = __THREW__;
          __THREW__ = 0;
          if ($3447 & 1) {
           label = 1289;
           break L1;
          };
          HEAP32[$204 + 0 >> 2] = HEAP32[$98 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$98 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$98 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$98 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
          $$1136$ph = 0;
          $$313$ph = $$111$ph4070;
          label = 1659;
          break L1010;
          break;
         }
        case 16:
         {
          __THREW__ = 0;
          invoke_viii(3, $101 | 0, 37280, 5);
          $3451 = __THREW__;
          __THREW__ = 0;
          if ($3451 & 1) {
           label = 1040;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(13, $100 | 0, $this | 0, $101 | 0);
          $3453 = __THREW__;
          __THREW__ = 0;
          if ($3453 & 1) {
           label = 1293;
           break L1;
          };
          HEAP32[$204 + 0 >> 2] = HEAP32[$100 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$100 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$100 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$100 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
          $$1136$ph = 0;
          $$313$ph = $$111$ph4070;
          label = 1659;
          break L1010;
          break;
         }
        case 1:
         {
          __THREW__ = 0;
          invoke_viii(3, $97 | 0, 37264, 7);
          $3439 = __THREW__;
          __THREW__ = 0;
          if ($3439 & 1) {
           label = 1040;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(13, $96 | 0, $this | 0, $97 | 0);
          $3441 = __THREW__;
          __THREW__ = 0;
          if ($3441 & 1) {
           label = 1285;
           break L1;
          };
          HEAP32[$204 + 0 >> 2] = HEAP32[$96 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$96 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
          $$1136$ph = 0;
          $$313$ph = $$111$ph4070;
          label = 1659;
          break L1010;
          break;
         }
        case 18:
         {
          __THREW__ = 0;
          invoke_viii(3, $105 | 0, 37304, 6);
          $3463 = __THREW__;
          __THREW__ = 0;
          if ($3463 & 1) {
           label = 1040;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(13, $104 | 0, $this | 0, $105 | 0);
          $3465 = __THREW__;
          __THREW__ = 0;
          if ($3465 & 1) {
           label = 1301;
           break L1;
          };
          HEAP32[$204 + 0 >> 2] = HEAP32[$104 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$104 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$104 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$104 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
          $$1136$ph = 0;
          $$313$ph = $$111$ph4070;
          label = 1659;
          break L1010;
          break;
         }
        case 19:
         {
          __THREW__ = 0;
          invoke_viii(3, $107 | 0, 37312, 6);
          $3469 = __THREW__;
          __THREW__ = 0;
          if ($3469 & 1) {
           label = 1040;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(13, $106 | 0, $this | 0, $107 | 0);
          $3471 = __THREW__;
          __THREW__ = 0;
          if ($3471 & 1) {
           label = 1305;
           break L1;
          };
          HEAP32[$204 + 0 >> 2] = HEAP32[$106 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$106 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$106 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$106 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($107);
          $$1136$ph = 0;
          $$313$ph = $$111$ph4070;
          label = 1659;
          break L1010;
          break;
         }
        case 17:
         {
          __THREW__ = 0;
          invoke_viii(3, $103 | 0, 37288, 8);
          $3457 = __THREW__;
          __THREW__ = 0;
          if ($3457 & 1) {
           label = 1040;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(13, $102 | 0, $this | 0, $103 | 0);
          $3459 = __THREW__;
          __THREW__ = 0;
          if ($3459 & 1) {
           label = 1297;
           break L1;
          };
          HEAP32[$204 + 0 >> 2] = HEAP32[$102 + 0 >> 2];
          HEAP32[$204 + 4 >> 2] = HEAP32[$102 + 4 >> 2];
          HEAP32[$204 + 8 >> 2] = HEAP32[$102 + 8 >> 2];
          HEAP32[$204 + 12 >> 2] = HEAP32[$102 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
          $$1136$ph = 0;
          $$313$ph = $$111$ph4070;
          label = 1659;
          break L1010;
          break;
         }
        default:
         {
          $$1136 = 0;
          $$313 = $$111$ph4070;
          $4273 = $args68$idx365$val;
          break L1010;
         }
        }
        break;
       }
      case 10:
       {
        HEAP32[$92 >> 2] = 0;
        HEAP32[$294 >> 2] = 0;
        HEAP32[$295 >> 2] = 0;
        __THREW__ = 0;
        $3416 = invoke_ii(67, 4) | 0;
        $3417 = __THREW__;
        __THREW__ = 0;
        if ($3417 & 1) {
         label = 1273;
         break L1;
        }
        HEAP32[$92 >> 2] = $3416;
        HEAP32[$295 >> 2] = $3416 + 4;
        HEAP32[$3416 >> 2] = 2;
        HEAP32[$294 >> 2] = $3416 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 10, $args68 | 0, $92 | 0);
        $3421 = __THREW__;
        __THREW__ = 0;
        if ($3421 & 1) {
         $$lcssa6494 = $3416;
         label = 1276;
         break L1;
        }
        HEAP32[$294 >> 2] = $3416;
        __ZdlPv($3416);
        $3427 = +Math_atan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $93 | 0, $this | 0, $2810 | 0, +$3427);
        $3428 = __THREW__;
        __THREW__ = 0;
        if ($3428 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$93 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$93 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$93 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$93 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 12:
       {
        HEAP32[$108 >> 2] = 0;
        HEAP32[$296 >> 2] = 0;
        HEAP32[$297 >> 2] = 0;
        __THREW__ = 0;
        $3475 = invoke_ii(67, 8) | 0;
        $3476 = __THREW__;
        __THREW__ = 0;
        if ($3476 & 1) {
         label = 1308;
         break L1;
        }
        HEAP32[$108 >> 2] = $3475;
        HEAP32[$297 >> 2] = $3475 + 8;
        HEAP32[$3475 >> 2] = 17;
        HEAP32[$3475 + 4 >> 2] = 16;
        HEAP32[$296 >> 2] = $3475 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 12, $args68 | 0, $108 | 0);
        $3481 = __THREW__;
        __THREW__ = 0;
        if ($3481 & 1) {
         $$lcssa6489 = $3475;
         label = 1313;
         break L1;
        }
        HEAP32[$296 >> 2] = $3475;
        __ZdlPv($3475);
        $args68$idx369$val = HEAP32[$args68 >> 2] | 0;
        $3486 = HEAP32[$args68$idx369$val + 8 >> 2] | 0;
        $3489 = $3486 + 28 | 0;
        if (((HEAP32[$3486 + 32 >> 2] | 0) - (HEAP32[$3489 >> 2] | 0) | 0) != 4) {
         $$lcssa6344 = $2810;
         label = 1310;
         break L1;
        }
        $3509 = HEAP32[$args68$idx369$val + 24 >> 2] | 0;
        $$idx258 = $3509 + 8 | 0;
        if ((HEAP32[$3509 + 12 >> 2] | 0) == (HEAP32[$$idx258 >> 2] | 0)) {
         HEAP32[$111 >> 2] = 0;
         HEAP32[$298 >> 2] = 0;
         HEAP32[$299 >> 2] = 0;
         __THREW__ = 0;
         invoke_viii(11, $110 | 0, $this | 0, $111 | 0);
         $3511 = __THREW__;
         __THREW__ = 0;
         if ($3511 & 1) {
          label = 1320;
          break L1;
         };
         HEAP32[$204 + 0 >> 2] = HEAP32[$110 + 0 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$110 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$110 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$110 + 12 >> 2];
         $$1136$ph = 0;
         $$313$ph = $$111$ph4070;
         label = 1659;
         break L1010;
        }
        HEAP32[$$lcssa6071 >> 2] = 3;
        HEAP32[$2799 + 0 >> 2] = HEAP32[$args68$idx369$val + 0 >> 2];
        HEAP32[$2799 + 4 >> 2] = HEAP32[$args68$idx369$val + 4 >> 2];
        HEAP32[$2799 + 8 >> 2] = HEAP32[$args68$idx369$val + 8 >> 2];
        HEAP32[$2799 + 12 >> 2] = HEAP32[$args68$idx369$val + 12 >> 2];
        $3515 = $$idx$val$i842$lcssa6051 + -88 | 0;
        $3516 = $args68$idx369$val + 16 | 0;
        HEAP32[$3515 + 0 >> 2] = HEAP32[$3516 + 0 >> 2];
        HEAP32[$3515 + 4 >> 2] = HEAP32[$3516 + 4 >> 2];
        HEAP32[$3515 + 8 >> 2] = HEAP32[$3516 + 8 >> 2];
        HEAP32[$3515 + 12 >> 2] = HEAP32[$3516 + 12 >> 2];
        $3517 = HEAP32[$2802 >> 2] | 0;
        $3518 = HEAP32[$$idx261 >> 2] | 0;
        if (($3518 | 0) != ($3517 | 0)) HEAP32[$$idx261 >> 2] = $3518 + (~(($3518 + -4 - $3517 | 0) >>> 2) << 2);
        HEAP32[$2800 >> 2] = 0;
        $3524 = HEAP32[HEAP32[$$idx258 >> 2] >> 2] | 0;
        HEAP32[$300 >> 2] = 0;
        HEAP32[$301 >> 2] = 0;
        HEAP32[$bindings83 >> 2] = $302;
        $$idx$val$i$i1515 = HEAP32[$3486 + 8 >> 2] | 0;
        $3525 = $3486 + 12 | 0;
        do if (($$idx$val$i$i1515 | 0) == ($3525 | 0)) {
         $__k$val$i15565000 = HEAP32[HEAP32[$3489 >> 2] >> 2] | 0;
         label = 1370;
        } else {
         $3532 = $$idx$val$i$i1515;
         $5613 = $$idx$val$i$i1515;
         while (1) {
          __THREW__ = 0;
          $3528 = invoke_ii(67, 24) | 0;
          $3529 = __THREW__;
          __THREW__ = 0;
          if ($3529 & 1) {
           label = 1360;
           break L1;
          }
          $3534 = $3532 + 16 | 0;
          $3536 = HEAP32[$3534 >> 2] | 0;
          $3539 = HEAP32[$3534 + 4 >> 2] | 0;
          $3540 = $3528 + 16 | 0;
          HEAP32[$3540 >> 2] = $3536;
          HEAP32[$3540 + 4 >> 2] = $3539;
          $3544 = $3536;
          $$pre$i$i$i$i$i$i1520 = HEAP32[$302 >> 2] | 0;
          do if ((HEAP32[$bindings83 >> 2] | 0) == ($302 | 0)) {
           $3565 = $302;
           label = 1336;
          } else {
           $3546 = ($$pre$i$i$i$i$i$i1520 | 0) == 0;
           if ($3546) {
            $$0$i$i$i$i$i$i$i$i1524 = $302;
            while (1) {
             $3551 = HEAP32[$$0$i$i$i$i$i$i$i$i1524 + 8 >> 2] | 0;
             if ((HEAP32[$3551 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1524 | 0)) $$0$i$i$i$i$i$i$i$i1524 = $3551; else {
              $$cast$i$i$i$i$i$i$i$i1525$lcssa = $3551;
              break;
             }
            }
            $$01$i$i$i$i$i$i$i$i1527 = $$cast$i$i$i$i$i$i$i$i1525$lcssa;
           } else {
            $$0$i$i$i$i$i$i$i$i$i1522 = $$pre$i$i$i$i$i$i1520;
            while (1) {
             $3548 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1522 + 4 >> 2] | 0;
             if (!$3548) {
              $$0$i$i$i$i$i$i$i$i$i1522$lcssa = $$0$i$i$i$i$i$i$i$i$i1522;
              break;
             } else $$0$i$i$i$i$i$i$i$i$i1522 = $3548;
            }
            $$01$i$i$i$i$i$i$i$i1527 = $$0$i$i$i$i$i$i$i$i$i1522$lcssa;
           }
           if ((HEAP32[$$01$i$i$i$i$i$i$i$i1527 + 16 >> 2] | 0) >>> 0 < $3544 >>> 0) {
            $3565 = $$01$i$i$i$i$i$i$i$i1527;
            label = 1336;
            break;
           }
           if ($3546) {
            $$0$i$i$i$i119$i$i1538 = $302;
            $3569 = $302;
            label = 1346;
            break;
           }
           $__nd$0$i20$i$i$i$i$in$i$i1532 = $$pre$i$i$i$i$i$i1520;
           while (1) {
            $$idx2$val$i22$i$i$i$i$i$i1534 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1532 + 16 >> 2] | 0;
            if ($$idx2$val$i22$i$i$i$i$i$i1534 >>> 0 > $3544 >>> 0) {
             $3558 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1532 >> 2] | 0;
             if (!$3558) {
              $$0$i$i$i$i119$i$i1538$ph = $__nd$0$i20$i$i$i$i$in$i$i1532;
              $__nd$0$i20$i$i$i$i$in$i$i1532$lcssa6120 = $__nd$0$i20$i$i$i$i$in$i$i1532;
              label = 1345;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i1532$be = $3558;
            } else {
             if ($$idx2$val$i22$i$i$i$i$i$i1534 >>> 0 >= $3544 >>> 0) {
              $__nd$0$i20$i$i$i$i$in$i$i1532$lcssa = $__nd$0$i20$i$i$i$i$in$i$i1532;
              label = 1349;
              break;
             }
             $3561 = $__nd$0$i20$i$i$i$i$in$i$i1532 + 4 | 0;
             $3562 = HEAP32[$3561 >> 2] | 0;
             if (!$3562) {
              $$0$i$i$i$i119$i$i1538$ph = $3561;
              $__nd$0$i20$i$i$i$i$in$i$i1532$lcssa6120 = $__nd$0$i20$i$i$i$i$in$i$i1532;
              label = 1345;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i1532$be = $3562;
            }
            $__nd$0$i20$i$i$i$i$in$i$i1532 = $__nd$0$i20$i$i$i$i$in$i$i1532$be;
           }
           if ((label | 0) == 1345) {
            label = 0;
            $$0$i$i$i$i119$i$i1538 = $$0$i$i$i$i119$i$i1538$ph;
            $3569 = $__nd$0$i20$i$i$i$i$in$i$i1532$lcssa6120;
            label = 1346;
            break;
           } else if ((label | 0) == 1349) {
            label = 0;
            $3577 = $__nd$0$i20$i$i$i$i$in$i$i1532$lcssa;
            label = 1350;
            break;
           }
          } while (0);
          if ((label | 0) == 1336) {
           label = 0;
           if (!$$pre$i$i$i$i$i$i1520) {
            $$0$i$i$i$i119$i$i1538 = $302;
            $3569 = $302;
            label = 1346;
           } else {
            $3564 = $3565 + 4 | 0;
            $$pre$i$i1536 = HEAP32[$3564 >> 2] | 0;
            if (!$$pre$i$i1536) {
             $$0$i$i$i$i119$i$i1538 = $3564;
             $3569 = $3565;
             label = 1346;
            } else {
             $3577 = $$pre$i$i1536;
             label = 1350;
            }
           }
          }
          if ((label | 0) == 1346) {
           label = 0;
           HEAP32[$3528 >> 2] = 0;
           HEAP32[$3528 + 4 >> 2] = 0;
           HEAP32[$3528 + 8 >> 2] = $3569;
           HEAP32[$$0$i$i$i$i119$i$i1538 >> 2] = $3528;
           $3571 = HEAP32[HEAP32[$bindings83 >> 2] >> 2] | 0;
           if (!$3571) $3574 = $3528; else {
            HEAP32[$bindings83 >> 2] = $3571;
            $3574 = HEAP32[$$0$i$i$i$i119$i$i1538 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$300 >> 2] | 0, $3574);
           HEAP32[$301 >> 2] = (HEAP32[$301 >> 2] | 0) + 1;
           $3580 = $3532;
          } else if ((label | 0) == 1350) {
           label = 0;
           if (($3577 | 0) == ($3528 | 0)) $3580 = $5613; else {
            __ZdlPv($3528);
            $3580 = $5613;
           }
          }
          $3581 = HEAP32[$3580 + 4 >> 2] | 0;
          if (!$3581) {
           $$0$i$i$i$i$i1547 = $3580;
           while (1) {
            $3586 = HEAP32[$$0$i$i$i$i$i1547 + 8 >> 2] | 0;
            if ((HEAP32[$3586 >> 2] | 0) == ($$0$i$i$i$i$i1547 | 0)) {
             $$cast$i$i$i$i$i1548$lcssa = $3586;
             break;
            } else $$0$i$i$i$i$i1547 = $3586;
           }
           $$01$i$i$i$i$i1550 = $$cast$i$i$i$i$i1548$lcssa;
          } else {
           $$0$i$i$i$i$i$i1545 = $3581;
           while (1) {
            $3583 = HEAP32[$$0$i$i$i$i$i$i1545 >> 2] | 0;
            if (!$3583) {
             $$0$i$i$i$i$i$i1545$lcssa = $$0$i$i$i$i$i$i1545;
             break;
            } else $$0$i$i$i$i$i$i1545 = $3583;
           }
           $$01$i$i$i$i$i1550 = $$0$i$i$i$i$i$i1545$lcssa;
          }
          if (($$01$i$i$i$i$i1550 | 0) == ($3525 | 0)) break; else {
           $3532 = $$01$i$i$i$i$i1550;
           $5613 = $$01$i$i$i$i$i1550;
          }
         }
         $$pre4968 = HEAP32[$302 >> 2] | 0;
         $__k$val$i1556 = HEAP32[HEAP32[$3489 >> 2] >> 2] | 0;
         if (!$$pre4968) {
          $__k$val$i15565000 = $__k$val$i1556;
          label = 1370;
         } else {
          $__nd$0$i$i1557 = $$pre4968;
          while (1) {
           $3596 = HEAP32[$__nd$0$i$i1557 + 16 >> 2] | 0;
           if ($3596 >>> 0 > $__k$val$i1556 >>> 0) {
            $3598 = HEAP32[$__nd$0$i$i1557 >> 2] | 0;
            if (!$3598) {
             $$lcssa6124 = $__nd$0$i$i1557;
             $__nd$0$i$i1557$lcssa6122 = $__nd$0$i$i1557;
             label = 1365;
             break;
            } else $__nd$0$be$in$i$i1559 = $3598;
           } else {
            if ($3596 >>> 0 >= $__k$val$i1556 >>> 0) {
             $__nd$0$i$i1557$lcssa = $__nd$0$i$i1557;
             label = 1371;
             break;
            }
            $3601 = $__nd$0$i$i1557 + 4 | 0;
            $3602 = HEAP32[$3601 >> 2] | 0;
            if (!$3602) {
             $$lcssa6123 = $3601;
             $__nd$0$i$i1557$lcssa6121 = $__nd$0$i$i1557;
             label = 1369;
             break;
            } else $__nd$0$be$in$i$i1559 = $3602;
           }
           $__nd$0$i$i1557 = $__nd$0$be$in$i$i1559;
          }
          if ((label | 0) == 1365) {
           label = 0;
           HEAP32[$__parent$i1555 >> 2] = $__nd$0$i$i1557$lcssa6122;
           $$0$i7$i1564 = $$lcssa6124;
           $3612 = $__nd$0$i$i1557$lcssa6122;
           $__k$val$i15564998 = $__k$val$i1556;
           label = 1372;
           break;
          } else if ((label | 0) == 1369) {
           label = 0;
           HEAP32[$__parent$i1555 >> 2] = $__nd$0$i$i1557$lcssa6121;
           $$0$i7$i1564 = $$lcssa6123;
           $3612 = $__nd$0$i$i1557$lcssa6121;
           $__k$val$i15564998 = $__k$val$i1556;
           label = 1372;
           break;
          } else if ((label | 0) == 1371) {
           label = 0;
           HEAP32[$__parent$i1555 >> 2] = $__nd$0$i$i1557$lcssa;
           if (!$__nd$0$i$i1557$lcssa) {
            $$0$i7$i1564 = $__parent$i1555;
            $3612 = 0;
            $__k$val$i15564998 = $__k$val$i1556;
            label = 1372;
            break;
           } else {
            $__r$0$i1568 = $__nd$0$i$i1557$lcssa;
            break;
           }
          }
         }
        } while (0);
        if ((label | 0) == 1370) {
         label = 0;
         HEAP32[$__parent$i1555 >> 2] = $302;
         $$0$i7$i1564 = $302;
         $3612 = $302;
         $__k$val$i15564998 = $__k$val$i15565000;
         label = 1372;
        }
        if ((label | 0) == 1372) {
         label = 0;
         __THREW__ = 0;
         $3605 = invoke_ii(67, 24) | 0;
         $3606 = __THREW__;
         __THREW__ = 0;
         if ($3606 & 1) {
          label = 1378;
          break L1;
         }
         HEAP32[$3605 + 16 >> 2] = $__k$val$i15564998;
         HEAP32[$3605 + 20 >> 2] = 0;
         HEAP32[$3605 >> 2] = 0;
         HEAP32[$3605 + 4 >> 2] = 0;
         HEAP32[$3605 + 8 >> 2] = $3612;
         HEAP32[$$0$i7$i1564 >> 2] = $3605;
         $3614 = HEAP32[HEAP32[$bindings83 >> 2] >> 2] | 0;
         if (!$3614) $3617 = $3605; else {
          HEAP32[$bindings83 >> 2] = $3614;
          $3617 = HEAP32[$$0$i7$i1564 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$300 >> 2] | 0, $3617);
         HEAP32[$301 >> 2] = (HEAP32[$301 >> 2] | 0) + 1;
         $__r$0$i1568 = $3605;
        }
        HEAP32[$__r$0$i1568 + 20 >> 2] = $3524;
        __THREW__ = 0;
        invoke_viiiiii(19, $198 | 0, $2810 | 0, $3486 | 0, HEAP32[$3486 + 20 >> 2] | 0, HEAP32[$3486 + 24 >> 2] | 0, $bindings83 | 0);
        $3625 = __THREW__;
        __THREW__ = 0;
        if ($3625 & 1) {
         label = 1378;
         break L1;
        }
        $3628 = HEAP32[$3486 + 40 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$302 >> 2] | 0);
        $$1136$ph = 1;
        $$313$ph = $3628;
        label = 1659;
        break;
       }
      case 13:
       {
        HEAP32[$112 >> 2] = 0;
        HEAP32[$303 >> 2] = 0;
        HEAP32[$304 >> 2] = 0;
        __THREW__ = 0;
        $3633 = invoke_ii(67, 8) | 0;
        $3634 = __THREW__;
        __THREW__ = 0;
        if ($3634 & 1) {
         label = 1381;
         break L1;
        }
        HEAP32[$112 >> 2] = $3633;
        HEAP32[$304 >> 2] = $3633 + 8;
        HEAP32[$3633 >> 2] = 18;
        HEAP32[$3633 + 4 >> 2] = 19;
        HEAP32[$303 >> 2] = $3633 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 13, $args68 | 0, $112 | 0);
        $3639 = __THREW__;
        __THREW__ = 0;
        if ($3639 & 1) {
         $$lcssa6488 = $3633;
         label = 1385;
         break L1;
        }
        HEAP32[$303 >> 2] = $3633;
        __ZdlPv($3633);
        $args68$idx371$val = HEAP32[$args68 >> 2] | 0;
        $3646 = HEAP32[$args68$idx371$val + 24 >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(62, $113 | 0, HEAP32[$args68$idx371$val + 8 >> 2] | 0);
        $3647 = __THREW__;
        __THREW__ = 0;
        if ($3647 & 1) {
         label = 1040;
         break L1;
        }
        $3649 = HEAP32[$113 >> 2] | 0;
        do if (($3649 | 0) == ($305 | 0)) $found$0$off0 = 0; else {
         $3651 = $3646 + 8 | 0;
         $3652 = HEAP8[$3651 >> 0] | 0;
         $3654 = ($3652 & 1) == 0;
         $3656 = ($3652 & 255) >>> 1;
         $3657 = $3651 + 1 | 0;
         $3658 = $3646 + 16 | 0;
         $3659 = $3646 + 12 | 0;
         $3663 = $3649;
         L1341 : while (1) {
          $3664 = HEAP32[$3663 + 16 >> 2] | 0;
          $3665 = HEAP8[$3664 >> 0] | 0;
          $3667 = ($3665 & 1) == 0;
          if ($3667) $3673 = ($3665 & 255) >>> 1; else $3673 = HEAP32[$3664 + 4 >> 2] | 0;
          if ($3654) $3675 = $3656; else $3675 = HEAP32[$3659 >> 2] | 0;
          do if (($3673 | 0) == ($3675 | 0)) {
           if ($3667) $3688 = $3664 + 1 | 0; else $3688 = HEAP32[$3664 + 8 >> 2] | 0;
           if ($3654) $3689 = $3657; else $3689 = HEAP32[$3658 >> 2] | 0;
           if (!$3667) if (!(_memcmp($3688, $3689, $3673) | 0)) {
            $found$0$off0$ph = 1;
            label = 1413;
            break L1341;
           } else break;
           if (!$3673) {
            $found$0$off0$ph = 1;
            label = 1413;
            break L1341;
           }
           $__lhs_sz$03$i = $3673;
           $__lp$04$i = $3688;
           $__rp$05$i = $3689;
           while (1) {
            if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) break;
            $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
            if (!$__lhs_sz$03$i) {
             label = 1412;
             break L1341;
            } else {
             $__lp$04$i = $__lp$04$i + 1 | 0;
             $__rp$05$i = $__rp$05$i + 1 | 0;
            }
           }
          } while (0);
          $3693 = HEAP32[$3663 + 4 >> 2] | 0;
          if (!$3693) {
           $$0$i$i1599 = $3663;
           while (1) {
            $3698 = HEAP32[$$0$i$i1599 + 8 >> 2] | 0;
            if ((HEAP32[$3698 >> 2] | 0) == ($$0$i$i1599 | 0)) {
             $$cast$i$i$lcssa = $3698;
             break;
            } else $$0$i$i1599 = $3698;
           }
           $$01$i$i1601 = $$cast$i$i$lcssa;
          } else {
           $$0$i$i$i1598 = $3693;
           while (1) {
            $3695 = HEAP32[$$0$i$i$i1598 >> 2] | 0;
            if (!$3695) {
             $$0$i$i$i1598$lcssa = $$0$i$i$i1598;
             break;
            } else $$0$i$i$i1598 = $3695;
           }
           $$01$i$i1601 = $$0$i$i$i1598$lcssa;
          }
          if (($$01$i$i1601 | 0) == ($305 | 0)) {
           $found$0$off0$ph = 0;
           label = 1413;
           break;
          } else $3663 = $$01$i$i1601;
         }
         if ((label | 0) == 1412) {
          label = 0;
          $found$0$off0 = 1;
          break;
         } else if ((label | 0) == 1413) {
          label = 0;
          $found$0$off0 = $found$0$off0$ph;
          break;
         }
        } while (0);
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($113, HEAP32[$305 >> 2] | 0);
        HEAP32[$226 >> 2] = 1;
        HEAP8[$205 >> 0] = $found$0$off0;
        HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32454 + 0 >> 0] | 0;
        HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32454 + 1 >> 0] | 0;
        HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32454 + 2 >> 0] | 0;
        HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32454 + 3 >> 0] | 0;
        HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32454 + 4 >> 0] | 0;
        HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32454 + 5 >> 0] | 0;
        HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32454 + 6 >> 0] | 0;
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 14:
       {
        $args68$idx$val = HEAP32[$args68 >> 2] | 0;
        if (((HEAP32[$270 >> 2] | 0) - $args68$idx$val | 0) != 16) {
         $$lcssa6338 = $2810;
         label = 1416;
         break L1;
        }
        $3719 = HEAP32[$args68$idx$val + 8 >> 2] | 0;
        $3720 = HEAP32[$args68$idx$val >> 2] | 0;
        if (($3720 | 0) == 18) {
         __THREW__ = 0;
         invoke_vii(62, $fields88 | 0, $3719 | 0);
         $3721 = __THREW__;
         __THREW__ = 0;
         if ($3721 & 1) {
          label = 1040;
          break L1;
         }
         $3724 = +((HEAP32[$306 >> 2] | 0) >>> 0);
         HEAP32[$226 >> 2] = 2;
         HEAPF64[$269 >> 3] = $3724;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields88, HEAP32[$307 >> 2] | 0);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4070;
         label = 1659;
         break L1010;
        } else if (($3720 | 0) == 17) {
         $3742 = $3719 + 28 | 0;
         $3750 = +((HEAP32[$3742 + 4 >> 2] | 0) - (HEAP32[$3742 >> 2] | 0) >> 2 >>> 0);
         HEAP32[$226 >> 2] = 2;
         HEAPF64[$269 >> 3] = $3750;
         $$1136$ph = 0;
         $$313$ph = $$111$ph4070;
         label = 1659;
         break L1010;
        } else if (($3720 | 0) == 16) {
         $3731 = +((HEAP32[$3719 + 12 >> 2] | 0) - (HEAP32[$3719 + 8 >> 2] | 0) >> 2 >>> 0);
         HEAP32[$226 >> 2] = 2;
         HEAPF64[$269 >> 3] = $3731;
         $$1136$ph = 0;
         $$313$ph = $$111$ph4070;
         label = 1659;
         break L1010;
        } else if (($3720 | 0) == 19) {
         $3733 = HEAP8[$3719 + 8 >> 0] | 0;
         if (!($3733 & 1)) $3741 = ($3733 & 255) >>> 1; else $3741 = HEAP32[$3719 + 12 >> 2] | 0;
         HEAP32[$226 >> 2] = 2;
         HEAPF64[$269 >> 3] = +($3741 >>> 0);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4070;
         label = 1659;
         break L1010;
        } else {
         $$lcssa6339 = $2810;
         label = 1431;
         break L1;
        }
        break;
       }
      case 15:
       {
        HEAP32[$117 >> 2] = 0;
        HEAP32[$308 >> 2] = 0;
        HEAP32[$309 >> 2] = 0;
        __THREW__ = 0;
        $3767 = invoke_ii(67, 4) | 0;
        $3768 = __THREW__;
        __THREW__ = 0;
        if ($3768 & 1) {
         label = 1441;
         break L1;
        }
        HEAP32[$117 >> 2] = $3767;
        HEAP32[$309 >> 2] = $3767 + 4;
        HEAP32[$3767 >> 2] = 18;
        HEAP32[$308 >> 2] = $3767 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 15, $args68 | 0, $117 | 0);
        $3772 = __THREW__;
        __THREW__ = 0;
        if ($3772 & 1) {
         $$lcssa6483 = $3767;
         label = 1447;
         break L1;
        }
        HEAP32[$308 >> 2] = $3767;
        __ZdlPv($3767);
        $3777 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
        HEAP32[$310 >> 2] = 0;
        HEAP32[$311 >> 2] = 0;
        HEAP32[$fields90 >> 2] = $312;
        __THREW__ = 0;
        invoke_vii(62, $118 | 0, $3777 | 0);
        $3778 = __THREW__;
        __THREW__ = 0;
        if ($3778 & 1) {
         label = 1449;
         break L1;
        }
        $3780 = HEAP32[$118 >> 2] | 0;
        if (($3780 | 0) != ($313 | 0)) {
         $3795 = $3780;
         while (1) {
          __THREW__ = 0;
          invoke_viii(9, $6 | 0, $fields90 | 0, HEAP32[$3795 + 16 >> 2] | 0);
          $3797 = __THREW__;
          __THREW__ = 0;
          if ($3797 & 1) {
           label = 1451;
           break L1;
          }
          $3800 = HEAP32[$3795 + 4 >> 2] | 0;
          if (!$3800) {
           $$0$i$i1640 = $3795;
           while (1) {
            $3805 = HEAP32[$$0$i$i1640 + 8 >> 2] | 0;
            if ((HEAP32[$3805 >> 2] | 0) == ($$0$i$i1640 | 0)) {
             $$cast$i$i1641$lcssa = $3805;
             break;
            } else $$0$i$i1640 = $3805;
           }
           $$01$i$i1643 = $$cast$i$i1641$lcssa;
          } else {
           $$0$i$i$i1638 = $3800;
           while (1) {
            $3802 = HEAP32[$$0$i$i$i1638 >> 2] | 0;
            if (!$3802) {
             $$0$i$i$i1638$lcssa = $$0$i$i$i1638;
             break;
            } else $$0$i$i$i1638 = $3802;
           }
           $$01$i$i1643 = $$0$i$i$i1638$lcssa;
          }
          if (($$01$i$i1643 | 0) == ($313 | 0)) break; else $3795 = $$01$i$i1643;
         }
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($118, HEAP32[$313 >> 2] | 0);
        HEAP32[$120 >> 2] = 0;
        HEAP32[$314 >> 2] = 0;
        HEAP32[$315 >> 2] = 0;
        __THREW__ = 0;
        invoke_viii(11, $119 | 0, $this | 0, $120 | 0);
        $3783 = __THREW__;
        __THREW__ = 0;
        if ($3783 & 1) {
         label = 1489;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$119 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$119 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$119 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$119 + 12 >> 2];
        $$pre4969 = HEAP32[$205 >> 2] | 0;
        $$pre4970 = HEAP32[$fields90 >> 2] | 0;
        $3809 = $$pre4969 + 8 | 0;
        if (($$pre4970 | 0) != ($312 | 0)) {
         $3811 = $$pre4969 + 12 | 0;
         $3812 = $$pre4969 + 16 | 0;
         $3814 = $$pre4970;
         while (1) {
          $3813 = $3814 + 16 | 0;
          __THREW__ = 0;
          $3816 = invoke_iii(32, $this | 0, HEAP32[$206 >> 2] | 0) | 0;
          $3817 = __THREW__;
          __THREW__ = 0;
          if ($3817 & 1) {
           label = 1448;
           break L1;
          }
          $3819 = HEAP32[$3811 >> 2] | 0;
          do if (($3819 | 0) == (HEAP32[$3812 >> 2] | 0)) {
           $this$idx2$val$i$i1654 = HEAP32[$3809 >> 2] | 0;
           $3829 = ($3819 - $this$idx2$val$i$i1654 >> 2) + 1 | 0;
           if ($3829 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(179, $3809 | 0);
            $3831 = __THREW__;
            __THREW__ = 0;
            if ($3831 & 1) {
             label = 1448;
             break L1;
            }
            $$idx1$val$i$i$i$i1657 = HEAP32[$3812 >> 2] | 0;
            $3834 = HEAP32[$3809 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i1657 = $3819;
            $3834 = $this$idx2$val$i$i1654;
           }
           $3835 = $3834;
           $3836 = $$idx1$val$i$i$i$i1657 - $3835 | 0;
           if ($3836 >> 2 >>> 0 < 536870911) {
            $3842 = $3836 >> 1;
            $3844 = $3842 >>> 0 < $3829 >>> 0 ? $3829 : $3842;
            $3846 = (HEAP32[$3811 >> 2] | 0) - $3835 | 0;
            $3847 = $3846 >> 2;
            if (!$3844) {
             $$0$i8$i$i1663 = 0;
             $3854 = 0;
             $3855 = $3847;
             $3859 = $3846;
            } else {
             $$0$i7$i$i1662 = $3844;
             $5614 = $3847;
             $5615 = $3846;
             label = 1474;
            }
           } else {
            $3840 = (HEAP32[$3811 >> 2] | 0) - $3835 | 0;
            $$0$i7$i$i1662 = 1073741823;
            $5614 = $3840 >> 2;
            $5615 = $3840;
            label = 1474;
           }
           if ((label | 0) == 1474) {
            label = 0;
            __THREW__ = 0;
            $3850 = invoke_ii(67, $$0$i7$i$i1662 << 2 | 0) | 0;
            $3851 = __THREW__;
            __THREW__ = 0;
            if ($3851 & 1) {
             label = 1448;
             break L1;
            }
            $$0$i8$i$i1663 = $$0$i7$i$i1662;
            $3854 = $3850;
            $3855 = $5614;
            $3859 = $5615;
           }
           $3853 = $3854 + ($3855 << 2) | 0;
           if ($3853) HEAP32[$3853 >> 2] = $3816;
           _memcpy($3854 | 0, $3834 | 0, $3859 | 0) | 0;
           HEAP32[$3809 >> 2] = $3854;
           HEAP32[$3811 >> 2] = $3854 + ($3855 + 1 << 2);
           HEAP32[$3812 >> 2] = $3854 + ($$0$i8$i$i1663 << 2);
           if (!$3834) break;
           __ZdlPv($3834);
          } else {
           if (!$3819) $3824 = 0; else {
            HEAP32[$3819 >> 2] = $3816;
            $3824 = HEAP32[$3811 >> 2] | 0;
           }
           HEAP32[$3811 >> 2] = $3824 + 4;
          } while (0);
          __THREW__ = 0;
          invoke_viii(13, $121 | 0, $this | 0, $3813 | 0);
          $3861 = __THREW__;
          __THREW__ = 0;
          if ($3861 & 1) {
           label = 1448;
           break L1;
          }
          $3863 = $3816 + 8 | 0;
          HEAP32[$3863 + 0 >> 2] = HEAP32[$121 + 0 >> 2];
          HEAP32[$3863 + 4 >> 2] = HEAP32[$121 + 4 >> 2];
          HEAP32[$3863 + 8 >> 2] = HEAP32[$121 + 8 >> 2];
          HEAP32[$3863 + 12 >> 2] = HEAP32[$121 + 12 >> 2];
          HEAP8[$3816 + 5 >> 0] = 1;
          HEAP32[$3816 + 40 >> 2] = 0;
          $3866 = $3816 + 28 | 0;
          $3867 = $3816 + 32 | 0;
          __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3866, HEAP32[$3867 >> 2] | 0);
          HEAP32[$3816 + 36 >> 2] = 0;
          HEAP32[$3866 >> 2] = $3867;
          HEAP32[$3867 >> 2] = 0;
          $3871 = HEAP32[$3814 + 4 >> 2] | 0;
          if (!$3871) {
           $$0$i$i1673 = $3814;
           while (1) {
            $3876 = HEAP32[$$0$i$i1673 + 8 >> 2] | 0;
            if ((HEAP32[$3876 >> 2] | 0) == ($$0$i$i1673 | 0)) {
             $$cast$i$i1674$lcssa = $3876;
             break;
            } else $$0$i$i1673 = $3876;
           }
           $$01$i$i1676 = $$cast$i$i1674$lcssa;
          } else {
           $$0$i$i$i1671 = $3871;
           while (1) {
            $3873 = HEAP32[$$0$i$i$i1671 >> 2] | 0;
            if (!$3873) {
             $$0$i$i$i1671$lcssa = $$0$i$i$i1671;
             break;
            } else $$0$i$i$i1671 = $3873;
           }
           $$01$i$i1676 = $$0$i$i$i1671$lcssa;
          }
          if (($$01$i$i1676 | 0) == ($312 | 0)) break; else $3814 = $$01$i$i1676;
         }
        }
        __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$312 >> 2] | 0);
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 16:
       {
        HEAP32[$122 >> 2] = 0;
        HEAP32[$316 >> 2] = 0;
        HEAP32[$317 >> 2] = 0;
        __THREW__ = 0;
        $3884 = invoke_ii(67, 4) | 0;
        $3885 = __THREW__;
        __THREW__ = 0;
        if ($3885 & 1) {
         label = 1495;
         break L1;
        }
        HEAP32[$122 >> 2] = $3884;
        HEAP32[$317 >> 2] = $3884 + 4;
        HEAP32[$3884 >> 2] = 19;
        HEAP32[$316 >> 2] = $3884 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 16, $args68 | 0, $122 | 0);
        $3889 = __THREW__;
        __THREW__ = 0;
        if ($3889 & 1) {
         $$lcssa6479 = $3884;
         label = 1516;
         break L1;
        }
        HEAP32[$316 >> 2] = $3884;
        __ZdlPv($3884);
        $3894 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
        $3895 = $3894 + 8 | 0;
        $3896 = HEAP8[$3895 >> 0] | 0;
        $3898 = ($3896 & 1) == 0;
        if ($3898) $3903 = ($3896 & 255) >>> 1; else $3903 = HEAP32[$3894 + 12 >> 2] | 0;
        if (($3903 | 0) != 1) {
         $$lcssa6331 = $2810;
         $$lcssa6481 = $3894;
         $$lcssa6482 = $3895;
         label = 1500;
         break L1;
        }
        if ($3898) $3958 = $3895 + 1 | 0; else $3958 = HEAP32[$3894 + 16 >> 2] | 0;
        $3959 = +(HEAPU8[$3958 >> 0] | 0);
        HEAP32[$226 >> 2] = 2;
        HEAPF64[$269 >> 3] = $3959;
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 17:
       {
        HEAP32[$124 >> 2] = 0;
        HEAP32[$318 >> 2] = 0;
        HEAP32[$319 >> 2] = 0;
        __THREW__ = 0;
        $3960 = invoke_ii(67, 4) | 0;
        $3961 = __THREW__;
        __THREW__ = 0;
        if ($3961 & 1) {
         label = 1528;
         break L1;
        }
        HEAP32[$124 >> 2] = $3960;
        HEAP32[$319 >> 2] = $3960 + 4;
        HEAP32[$3960 >> 2] = 2;
        HEAP32[$318 >> 2] = $3960 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 17, $args68 | 0, $124 | 0);
        $3965 = __THREW__;
        __THREW__ = 0;
        if ($3965 & 1) {
         $$lcssa6472 = $3960;
         label = 1543;
         break L1;
        }
        HEAP32[$318 >> 2] = $3960;
        __ZdlPv($3960);
        $3971 = ~~+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3] >>> 0;
        if (($3971 | 0) < 0) {
         $$lcssa6326 = $2810;
         $$lcssa6476 = $3971;
         label = 1530;
         break L1;
        }
        if (($3971 | 0) > 127) {
         $$lcssa6327 = $2810;
         $$lcssa6477 = $3971;
         label = 1550;
         break L1;
        }
        HEAP8[$c105 >> 0] = $3971;
        __THREW__ = 0;
        invoke_viii(3, $128 | 0, $c105 | 0, 1);
        $4057 = __THREW__;
        __THREW__ = 0;
        if ($4057 & 1) {
         label = 1040;
         break L1;
        }
        __THREW__ = 0;
        invoke_viii(13, $127 | 0, $this | 0, $128 | 0);
        $4059 = __THREW__;
        __THREW__ = 0;
        if ($4059 & 1) {
         label = 1572;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$127 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$127 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$127 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$127 + 12 >> 2];
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 18:
       {
        HEAP32[$129 >> 2] = 0;
        HEAP32[$320 >> 2] = 0;
        HEAP32[$321 >> 2] = 0;
        __THREW__ = 0;
        $4063 = invoke_ii(67, 4) | 0;
        $4064 = __THREW__;
        __THREW__ = 0;
        if ($4064 & 1) {
         label = 1575;
         break L1;
        }
        HEAP32[$129 >> 2] = $4063;
        HEAP32[$321 >> 2] = $4063 + 4;
        HEAP32[$4063 >> 2] = 2;
        HEAP32[$320 >> 2] = $4063 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 18, $args68 | 0, $129 | 0);
        $4068 = __THREW__;
        __THREW__ = 0;
        if ($4068 & 1) {
         $$lcssa6471 = $4063;
         label = 1578;
         break L1;
        }
        HEAP32[$320 >> 2] = $4063;
        __ZdlPv($4063);
        $4074 = +Math_log(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $130 | 0, $this | 0, $2810 | 0, +$4074);
        $4075 = __THREW__;
        __THREW__ = 0;
        if ($4075 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$130 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$130 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$130 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$130 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 19:
       {
        HEAP32[$131 >> 2] = 0;
        HEAP32[$322 >> 2] = 0;
        HEAP32[$323 >> 2] = 0;
        __THREW__ = 0;
        $4079 = invoke_ii(67, 4) | 0;
        $4080 = __THREW__;
        __THREW__ = 0;
        if ($4080 & 1) {
         label = 1581;
         break L1;
        }
        HEAP32[$131 >> 2] = $4079;
        HEAP32[$323 >> 2] = $4079 + 4;
        HEAP32[$4079 >> 2] = 2;
        HEAP32[$322 >> 2] = $4079 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 19, $args68 | 0, $131 | 0);
        $4084 = __THREW__;
        __THREW__ = 0;
        if ($4084 & 1) {
         $$lcssa6470 = $4079;
         label = 1584;
         break L1;
        }
        HEAP32[$322 >> 2] = $4079;
        __ZdlPv($4079);
        $4090 = +Math_exp(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $132 | 0, $this | 0, $2810 | 0, +$4090);
        $4091 = __THREW__;
        __THREW__ = 0;
        if ($4091 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$132 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$132 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$132 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$132 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 20:
       {
        HEAP32[$133 >> 2] = 0;
        HEAP32[$324 >> 2] = 0;
        HEAP32[$325 >> 2] = 0;
        __THREW__ = 0;
        $4095 = invoke_ii(67, 4) | 0;
        $4096 = __THREW__;
        __THREW__ = 0;
        if ($4096 & 1) {
         label = 1587;
         break L1;
        }
        HEAP32[$133 >> 2] = $4095;
        HEAP32[$325 >> 2] = $4095 + 4;
        HEAP32[$4095 >> 2] = 2;
        HEAP32[$324 >> 2] = $4095 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 20, $args68 | 0, $133 | 0);
        $4100 = __THREW__;
        __THREW__ = 0;
        if ($4100 & 1) {
         $$lcssa6469 = $4095;
         label = 1590;
         break L1;
        }
        HEAP32[$324 >> 2] = $4095;
        __ZdlPv($4095);
        $4106 = +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp);
        __THREW__ = 0;
        invoke_viiid(1, $134 | 0, $this | 0, $2810 | 0, +$4106);
        $4107 = __THREW__;
        __THREW__ = 0;
        if ($4107 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$134 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$134 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$134 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$134 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 22:
       {
        HEAP32[$137 >> 2] = 0;
        HEAP32[$328 >> 2] = 0;
        HEAP32[$329 >> 2] = 0;
        __THREW__ = 0;
        $4128 = invoke_ii(67, 8) | 0;
        $4129 = __THREW__;
        __THREW__ = 0;
        if ($4129 & 1) {
         label = 1599;
         break L1;
        }
        HEAP32[$137 >> 2] = $4128;
        HEAP32[$329 >> 2] = $4128 + 8;
        HEAP32[$4128 >> 2] = 2;
        HEAP32[$4128 + 4 >> 2] = 2;
        HEAP32[$328 >> 2] = $4128 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 22, $args68 | 0, $137 | 0);
        $4134 = __THREW__;
        __THREW__ = 0;
        if ($4134 & 1) {
         $$lcssa6466 = $4128;
         label = 1604;
         break L1;
        }
        HEAP32[$328 >> 2] = $4128;
        __ZdlPv($4128);
        $args68$idx384$val = HEAP32[$args68 >> 2] | 0;
        $4139 = +HEAPF64[$args68$idx384$val + 24 >> 3];
        if ($4139 == 0.0) {
         $$lcssa6315 = $2810;
         label = 1601;
         break L1;
        }
        $4156 = +_fmod(+HEAPF64[$args68$idx384$val + 8 >> 3], $4139);
        __THREW__ = 0;
        invoke_viiid(1, $139 | 0, $this | 0, $2810 | 0, +$4156);
        $4157 = __THREW__;
        __THREW__ = 0;
        if ($4157 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$139 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$139 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$139 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$139 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 21:
       {
        HEAP32[$135 >> 2] = 0;
        HEAP32[$326 >> 2] = 0;
        HEAP32[$327 >> 2] = 0;
        __THREW__ = 0;
        $4111 = invoke_ii(67, 4) | 0;
        $4112 = __THREW__;
        __THREW__ = 0;
        if ($4112 & 1) {
         label = 1593;
         break L1;
        }
        HEAP32[$135 >> 2] = $4111;
        HEAP32[$327 >> 2] = $4111 + 4;
        HEAP32[$4111 >> 2] = 2;
        HEAP32[$326 >> 2] = $4111 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 21, $args68 | 0, $135 | 0);
        $4116 = __THREW__;
        __THREW__ = 0;
        if ($4116 & 1) {
         $$lcssa6468 = $4111;
         label = 1596;
         break L1;
        }
        HEAP32[$326 >> 2] = $4111;
        __ZdlPv($4111);
        +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp106);
        __THREW__ = 0;
        invoke_viiid(1, $136 | 0, $this | 0, $2810 | 0, +(+(HEAP32[$exp106 >> 2] | 0)));
        $4124 = __THREW__;
        __THREW__ = 0;
        if ($4124 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$136 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$136 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$136 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$136 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 23:
       {
        HEAP32[$226 >> 2] = 1;
        HEAP8[$205 >> 0] = 1;
        HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32418 + 0 >> 0] | 0;
        HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32418 + 1 >> 0] | 0;
        HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32418 + 2 >> 0] | 0;
        HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32418 + 3 >> 0] | 0;
        HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32418 + 4 >> 0] | 0;
        HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32418 + 5 >> 0] | 0;
        HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32418 + 6 >> 0] | 0;
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      case 24:
       {
        HEAP32[$140 >> 2] = 0;
        HEAP32[$330 >> 2] = 0;
        HEAP32[$331 >> 2] = 0;
        __THREW__ = 0;
        $4159 = invoke_ii(67, 4) | 0;
        $4160 = __THREW__;
        __THREW__ = 0;
        if ($4160 & 1) {
         label = 1613;
         break L1;
        }
        HEAP32[$140 >> 2] = $4159;
        HEAP32[$331 >> 2] = $4159 + 4;
        HEAP32[$4159 >> 2] = 19;
        HEAP32[$330 >> 2] = $4159 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2810 | 0, 24, $args68 | 0, $140 | 0);
        $4164 = __THREW__;
        __THREW__ = 0;
        if ($4164 & 1) {
         $$lcssa6458 = $4159;
         label = 1642;
         break L1;
        }
        HEAP32[$330 >> 2] = $4159;
        __ZdlPv($4159);
        $4169 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
        $4170 = $4169 + 8 | 0;
        __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_SK_SK_($0, $332, $4170, HEAP32[$333 >> 2] | 0, $333);
        $4172 = HEAP32[$0 >> 2] | 0;
        if (($4172 | 0) == ($333 | 0)) {
         $$lcssa6310 = $2810;
         $$lcssa6461 = $4169;
         $$lcssa6463 = $4170;
         label = 1615;
         break L1;
        }
        $4174 = $4172 + 16 | 0;
        $4175 = HEAP8[$4170 >> 0] | 0;
        $4177 = ($4175 & 1) == 0;
        if ($4177) $4197 = ($4175 & 255) >>> 1; else $4197 = HEAP32[$4169 + 12 >> 2] | 0;
        $4182 = HEAP8[$4174 >> 0] | 0;
        $4184 = ($4182 & 1) == 0;
        if ($4184) $4195 = ($4182 & 255) >>> 1; else $4195 = HEAP32[$4172 + 20 >> 2] | 0;
        if ($4177) $4199 = $4170 + 1 | 0; else $4199 = HEAP32[$4169 + 16 >> 2] | 0;
        if ($4184) $4200 = $4174 + 1 | 0; else $4200 = HEAP32[$4172 + 24 >> 2] | 0;
        $4201 = _memcmp($4199, $4200, $4195 >>> 0 < $4197 >>> 0 ? $4195 : $4197) | 0;
        if (!$4201) {
         if ($4197 >>> 0 < $4195 >>> 0) {
          $$lcssa6311 = $2810;
          $$lcssa6462 = $4169;
          $$lcssa6464 = $4170;
          $$lcssa6465 = $4170;
          label = 1631;
          break L1;
         }
        } else if (($4201 | 0) < 0) {
         $$lcssa6311 = $2810;
         $$lcssa6462 = $4169;
         $$lcssa6464 = $4170;
         $$lcssa6465 = $4170;
         label = 1631;
         break L1;
        }
        __THREW__ = 0;
        $4239 = invoke_iii(30, $332 | 0, $4170 | 0) | 0;
        $4240 = __THREW__;
        __THREW__ = 0;
        if ($4240 & 1) {
         label = 1040;
         break L1;
        }
        __THREW__ = 0;
        invoke_viii(13, $142 | 0, $this | 0, $4239 | 0);
        $4242 = __THREW__;
        __THREW__ = 0;
        if ($4242 & 1) {
         label = 1040;
         break L1;
        };
        HEAP32[$204 + 0 >> 2] = HEAP32[$142 + 0 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$142 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$142 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$142 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4070;
        label = 1659;
        break;
       }
      default:
       {
        $$lcssa6383 = $2812;
        label = 1649;
        break L1;
       }
      } while (0);
      if ((label | 0) == 1659) {
       label = 0;
       $$1136 = $$1136$ph;
       $$313 = $$313$ph;
       $4273 = HEAP32[$args68 >> 2] | 0;
      }
      $4275 = $4273;
      if ($4273) {
       $4276 = HEAP32[$270 >> 2] | 0;
       if (($4276 | 0) != ($4273 | 0)) HEAP32[$270 >> 2] = $4276 + (~(($4276 + -16 - $4275 | 0) >>> 4) << 4);
       __ZdlPv($4273);
      }
      if ($$1136) {
       $$010$ph = $$313;
       label = 2;
       break L589;
      } else {
       $$414 = $$313;
       label = 2248;
      }
      break;
     }
    case 1671:
     {
      label = 0;
      $4306 = HEAP32[$$idx$val$i842$lcssa6052 + -28 >> 2] | 0;
      if (!$4306) {
       $$414 = $$111$ph4070;
       label = 2248;
      } else {
       $4308 = ___dynamic_cast($4306, 36776, 36936, 0) | 0;
       if (!$4308) {
        $$414 = $$111$ph4070;
        label = 2248;
       } else {
        $4310 = $4308 + 8 | 0;
        HEAP32[$4310 + 0 >> 2] = HEAP32[$204 + 0 >> 2];
        HEAP32[$4310 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
        HEAP32[$4310 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
        HEAP32[$4310 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
        HEAP8[$4308 + 5 >> 0] = 1;
        HEAP32[$4308 + 40 >> 2] = 0;
        $4313 = $4308 + 28 | 0;
        $4314 = $4308 + 32 | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4313, HEAP32[$4314 >> 2] | 0);
        HEAP32[$4308 + 36 >> 2] = 0;
        HEAP32[$4313 >> 2] = $4314;
        HEAP32[$4314 >> 2] = 0;
        $$414 = $$111$ph4070;
        label = 2248;
       }
      }
      break;
     }
    case 1674:
     {
      label = 0;
      $4323 = (__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, (HEAP32[$$idx$val$i842$lcssa6053 + -140 >> 2] | 0) + 4 | 0, $$idx$val$i842$lcssa6053 + -104 | 0, $$idx$val$i842$lcssa6053 + -88 | 0) | 0) & 1;
      HEAP32[$226 >> 2] = 1;
      HEAP8[$205 >> 0] = $4323;
      HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32410 + 0 >> 0] | 0;
      HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32410 + 1 >> 0] | 0;
      HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32410 + 2 >> 0] | 0;
      HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32410 + 3 >> 0] | 0;
      HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32410 + 4 >> 0] | 0;
      HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32410 + 5 >> 0] | 0;
      HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32410 + 6 >> 0] | 0;
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    case 1703:
     {
      label = 0;
      $4388 = HEAP32[$$idx$val$i842$lcssa6056 + -140 >> 2] | 0;
      $4390 = HEAP32[$$idx$val$i842$lcssa6056 + -104 >> 2] | 0;
      if (($4390 | 0) == 16) {
       if ((HEAP32[$204 >> 2] | 0) != 2) {
        $$lcssa6216 = $4388;
        label = 1705;
        break L1;
       }
       $4416 = HEAP32[$$idx$val$i842$lcssa6056 + -96 >> 2] | 0;
       $4418 = ~~+HEAPF64[$269 >> 3];
       $$idx254$val = HEAP32[$4416 + 8 >> 2] | 0;
       $4422 = (HEAP32[$4416 + 12 >> 2] | 0) - $$idx254$val >> 2;
       if (!(($4418 | 0) > -1 & ($4418 | 0) < ($4422 | 0))) {
        $$lcssa6217 = $4388;
        $$lcssa6223 = $4418;
        $$lcssa6225 = $4422;
        label = 1717;
        break L1;
       }
       $4475 = HEAP32[$$idx254$val + ($4418 << 2) >> 2] | 0;
       if (!(HEAP8[$4475 + 5 >> 0] | 0)) {
        $$lcssa6218 = $4388;
        $$lcssa6227 = $4475;
        label = 1740;
        break L589;
       }
       $4479 = $4475 + 8 | 0;
       HEAP32[$204 + 0 >> 2] = HEAP32[$4479 + 0 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$4479 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$4479 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$4479 + 12 >> 2];
       $$414 = $$111$ph4070;
       label = 2248;
       break;
      } else if (($4390 | 0) == 18) {
       $$idx$val$i842$lcssa6056$lcssa6202 = $$idx$val$i842$lcssa6056;
       $$lcssa6211 = $4388;
       label = 1741;
       break L589;
      } else if (($4390 | 0) != 19) {
       label = 1801;
       break L1;
      }
      $4522 = HEAP32[$$idx$val$i842$lcssa6056 + -96 >> 2] | 0;
      if (!$4522) {
       label = 1757;
       break L1;
      }
      if ((HEAP32[$204 >> 2] | 0) != 2) {
       $$lcssa6213 = $4388;
       label = 1759;
       break L1;
      }
      $4548 = $4522 + 8 | 0;
      $4549 = HEAP8[$4548 >> 0] | 0;
      $4551 = ($4549 & 1) == 0;
      if ($4551) $4560 = ($4549 & 255) >>> 1; else $4560 = HEAP32[$4522 + 12 >> 2] | 0;
      $4557 = ~~+HEAPF64[$269 >> 3];
      if (!(($4557 | 0) > -1 & ($4557 | 0) < ($4560 | 0))) {
       $$lcssa6214 = $4388;
       $$lcssa6219 = $4560;
       $$lcssa6221 = $4557;
       label = 1774;
       break L1;
      }
      if ($4551) $4614 = $4548 + 1 | 0; else $4614 = HEAP32[$4522 + 16 >> 2] | 0;
      HEAP8[$ch >> 0] = HEAP8[$4614 + $4557 >> 0] | 0;
      HEAP8[$334 >> 0] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($161, $ch, _strlen($ch | 0) | 0);
      __THREW__ = 0;
      invoke_viii(13, $160 | 0, $this | 0, $161 | 0);
      $4617 = __THREW__;
      __THREW__ = 0;
      if ($4617 & 1) {
       label = 1800;
       break L1;
      };
      HEAP32[$204 + 0 >> 2] = HEAP32[$160 + 0 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$160 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$160 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$160 + 12 >> 2];
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    case 1818:
     {
      label = 0;
      $4666 = HEAP32[$$idx$val$i842$lcssa6059 + -140 >> 2] | 0;
      $4667 = HEAP32[$204 >> 2] | 0;
      if (!$4667) $$pre$phi4992Z2D = $$idx$val$i842$lcssa6059 + -72 | 0; else if (($4667 | 0) == 19) {
       $4680 = HEAP32[$205 >> 2] | 0;
       $4681 = $4680 + 8 | 0;
       $4683 = __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[$237 >> 2] | 0, $4681) | 0;
       $4684 = $$idx$val$i842$lcssa6059 + -68 | 0;
       $4685 = $$idx$val$i842$lcssa6059 + -64 | 0;
       $4686 = HEAP32[$4685 >> 2] | 0;
       $4687 = ($4686 | 0) == 0;
       do if ($4687) {
        $4688 = $$idx$val$i842$lcssa6059 + -72 | 0;
        $5616 = HEAP32[(HEAP32[$4688 >> 2] | 0) + 12 >> 2] | 0;
        $5617 = $4688;
        label = 1861;
       } else {
        $$0$ph6$i$i$i = $4685;
        $$01$ph5$i$i$i = $4686;
        L1561 : while (1) {
         $$013$i$i$i = $$01$ph5$i$i$i;
         while (1) {
          if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $4683 >>> 0) {
           $$013$i$i$i$lcssa = $$013$i$i$i;
           break;
          }
          $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
          if (!$$013$i$i$i) {
           $$0$ph6$i$i$i$lcssa6109 = $$0$ph6$i$i$i;
           label = 1833;
           break L1561;
          }
         }
         $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i) {
          $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
          label = 1834;
          break;
         } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
        }
        if ((label | 0) == 1833) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa6109;
        } else if ((label | 0) == 1834) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i | 0) != ($4685 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 <= $4683 >>> 0) {
         $$lcssa6191 = $4666;
         $$lcssa6196 = $4680;
         $$lcssa6197 = $4681;
         label = 1837;
         break L1;
        }
        $4735 = $$idx$val$i842$lcssa6059 + -72 | 0;
        $4738 = HEAP32[(HEAP32[$4735 >> 2] | 0) + 12 >> 2] | 0;
        if ($4687) {
         $5616 = $4738;
         $5617 = $4735;
         label = 1861;
        } else {
         $__nd$0$i$i2063 = $4686;
         while (1) {
          $4740 = HEAP32[$__nd$0$i$i2063 + 16 >> 2] | 0;
          if ($4740 >>> 0 > $4683 >>> 0) {
           $4742 = HEAP32[$__nd$0$i$i2063 >> 2] | 0;
           if (!$4742) {
            $$lcssa6113 = $__nd$0$i$i2063;
            $__nd$0$i$i2063$lcssa6111 = $__nd$0$i$i2063;
            label = 1856;
            break;
           } else $__nd$0$be$in$i$i2065 = $4742;
          } else {
           if ($4740 >>> 0 >= $4683 >>> 0) {
            $__nd$0$i$i2063$lcssa = $__nd$0$i$i2063;
            label = 1862;
            break;
           }
           $4745 = $__nd$0$i$i2063 + 4 | 0;
           $4746 = HEAP32[$4745 >> 2] | 0;
           if (!$4746) {
            $$lcssa6112 = $4745;
            $__nd$0$i$i2063$lcssa6110 = $__nd$0$i$i2063;
            label = 1860;
            break;
           } else $__nd$0$be$in$i$i2065 = $4746;
          }
          $__nd$0$i$i2063 = $__nd$0$be$in$i$i2065;
         }
         if ((label | 0) == 1856) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$i$i2063$lcssa6111;
          $$0$i7$i2069 = $$lcssa6113;
          $4758 = $__nd$0$i$i2063$lcssa6111;
          $5618 = $4738;
          $5619 = $4735;
          label = 1863;
          break;
         } else if ((label | 0) == 1860) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$i$i2063$lcssa6110;
          $$0$i7$i2069 = $$lcssa6112;
          $4758 = $__nd$0$i$i2063$lcssa6110;
          $5618 = $4738;
          $5619 = $4735;
          label = 1863;
          break;
         } else if ((label | 0) == 1862) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$i$i2063$lcssa;
          if (!$__nd$0$i$i2063$lcssa) {
           $$0$i7$i2069 = $0;
           $4758 = 0;
           $5618 = $4738;
           $5619 = $4735;
           label = 1863;
           break;
          } else {
           $4769 = $4738;
           $4771 = $4735;
           $__r$0$i2071 = $__nd$0$i$i2063$lcssa;
           break;
          }
         }
        }
       } while (0);
       if ((label | 0) == 1861) {
        label = 0;
        HEAP32[$0 >> 2] = $4685;
        $$0$i7$i2069 = $4685;
        $4758 = $4685;
        $5618 = $5616;
        $5619 = $5617;
        label = 1863;
       }
       if ((label | 0) == 1863) {
        label = 0;
        $4749 = __Znwj(28) | 0;
        HEAP32[$4749 + 16 >> 2] = $4683;
        $4752 = $4749 + 20 | 0;
        HEAP32[$4752 >> 2] = 0;
        HEAP32[$4752 + 4 >> 2] = 0;
        HEAP32[$4749 >> 2] = 0;
        HEAP32[$4749 + 4 >> 2] = 0;
        HEAP32[$4749 + 8 >> 2] = $4758;
        HEAP32[$$0$i7$i2069 >> 2] = $4749;
        $4760 = HEAP32[HEAP32[$4684 >> 2] >> 2] | 0;
        if (!$4760) $4764 = $4749; else {
         HEAP32[$4684 >> 2] = $4760;
         $4764 = HEAP32[$$0$i7$i2069 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i842$lcssa6059 + -64 >> 2] | 0, $4764);
        $4765 = $$idx$val$i842$lcssa6059 + -60 | 0;
        HEAP32[$4765 >> 2] = (HEAP32[$4765 >> 2] | 0) + 1;
        $4769 = $5618;
        $4771 = $5619;
        $__r$0$i2071 = $4749;
       }
       HEAP32[$__r$0$i2071 + 20 >> 2] = $4769;
       $4773 = HEAP32[(HEAP32[$4771 >> 2] | 0) + 16 >> 2] | 0;
       $4774 = HEAP32[$4685 >> 2] | 0;
       do if (!$4774) {
        HEAP32[$0 >> 2] = $4685;
        $$0$i7$i2081 = $4685;
        $4795 = $4685;
        label = 1877;
       } else {
        $__nd$0$i$i2074 = $4774;
        while (1) {
         $4777 = HEAP32[$__nd$0$i$i2074 + 16 >> 2] | 0;
         if ($4777 >>> 0 > $4683 >>> 0) {
          $4779 = HEAP32[$__nd$0$i$i2074 >> 2] | 0;
          if (!$4779) {
           $$lcssa6117 = $__nd$0$i$i2074;
           $__nd$0$i$i2074$lcssa6115 = $__nd$0$i$i2074;
           label = 1870;
           break;
          } else $__nd$0$be$in$i$i2076 = $4779;
         } else {
          if ($4777 >>> 0 >= $4683 >>> 0) {
           $__nd$0$i$i2074$lcssa = $__nd$0$i$i2074;
           label = 1876;
           break;
          }
          $4782 = $__nd$0$i$i2074 + 4 | 0;
          $4783 = HEAP32[$4782 >> 2] | 0;
          if (!$4783) {
           $$lcssa6116 = $4782;
           $__nd$0$i$i2074$lcssa6114 = $__nd$0$i$i2074;
           label = 1874;
           break;
          } else $__nd$0$be$in$i$i2076 = $4783;
         }
         $__nd$0$i$i2074 = $__nd$0$be$in$i$i2076;
        }
        if ((label | 0) == 1870) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2074$lcssa6115;
         $$0$i7$i2081 = $$lcssa6117;
         $4795 = $__nd$0$i$i2074$lcssa6115;
         label = 1877;
         break;
        } else if ((label | 0) == 1874) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2074$lcssa6114;
         $$0$i7$i2081 = $$lcssa6116;
         $4795 = $__nd$0$i$i2074$lcssa6114;
         label = 1877;
         break;
        } else if ((label | 0) == 1876) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2074$lcssa;
         if (!$__nd$0$i$i2074$lcssa) {
          $$0$i7$i2081 = $0;
          $4795 = 0;
          label = 1877;
          break;
         } else {
          $__r$0$i2085 = $__nd$0$i$i2074$lcssa;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 1877) {
        label = 0;
        $4786 = __Znwj(28) | 0;
        HEAP32[$4786 + 16 >> 2] = $4683;
        $4789 = $4786 + 20 | 0;
        HEAP32[$4789 >> 2] = 0;
        HEAP32[$4789 + 4 >> 2] = 0;
        HEAP32[$4786 >> 2] = 0;
        HEAP32[$4786 + 4 >> 2] = 0;
        HEAP32[$4786 + 8 >> 2] = $4795;
        HEAP32[$$0$i7$i2081 >> 2] = $4786;
        $4797 = HEAP32[HEAP32[$4684 >> 2] >> 2] | 0;
        if (!$4797) $4801 = $4786; else {
         HEAP32[$4684 >> 2] = $4797;
         $4801 = HEAP32[$$0$i7$i2081 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i842$lcssa6059 + -64 >> 2] | 0, $4801);
        $4802 = $$idx$val$i842$lcssa6059 + -60 | 0;
        HEAP32[$4802 >> 2] = (HEAP32[$4802 >> 2] | 0) + 1;
        $__r$0$i2085 = $4786;
       }
       HEAP32[$__r$0$i2085 + 24 >> 2] = $4773;
       $$pre$phi4992Z2D = $4771;
      } else {
       $$lcssa6190 = $4666;
       label = 1820;
       break L1;
      }
      $4808 = HEAP32[(HEAP32[$$pre$phi4992Z2D >> 2] | 0) + 4 >> 2] | 0;
      HEAP32[$$pre$phi4992Z2D >> 2] = $4808;
      if (($4808 | 0) != ($4666 + 48 | 0)) {
       $$lcssa6198 = $4808;
       label = 1882;
       break L589;
      }
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env129, $this, HEAP32[$4666 + 36 >> 2] | 0, HEAP32[$4666 + 40 >> 2] | 0);
      HEAP32[$335 >> 2] = 0;
      HEAP32[$336 >> 2] = 0;
      HEAP32[$169 >> 2] = $337;
      $$idx$val$i$i2088 = HEAP32[$env129 >> 2] | 0;
      if (($$idx$val$i$i2088 | 0) != ($338 | 0)) {
       $4818 = $$idx$val$i$i2088;
       $5620 = $$idx$val$i$i2088;
       while (1) {
        __THREW__ = 0;
        $4814 = invoke_ii(67, 24) | 0;
        $4815 = __THREW__;
        __THREW__ = 0;
        if ($4815 & 1) {
         label = 1959;
         break L1;
        }
        $4820 = $4818 + 16 | 0;
        $4822 = HEAP32[$4820 >> 2] | 0;
        $4825 = HEAP32[$4820 + 4 >> 2] | 0;
        $4826 = $4814 + 16 | 0;
        HEAP32[$4826 >> 2] = $4822;
        HEAP32[$4826 + 4 >> 2] = $4825;
        $4830 = $4822;
        $$pre$i$i$i$i$i$i2093 = HEAP32[$337 >> 2] | 0;
        do if ((HEAP32[$169 >> 2] | 0) == ($337 | 0)) {
         $4851 = $337;
         label = 1895;
        } else {
         $4832 = ($$pre$i$i$i$i$i$i2093 | 0) == 0;
         if ($4832) {
          $$0$i$i$i$i$i$i$i$i2097 = $337;
          while (1) {
           $4837 = HEAP32[$$0$i$i$i$i$i$i$i$i2097 + 8 >> 2] | 0;
           if ((HEAP32[$4837 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2097 | 0)) $$0$i$i$i$i$i$i$i$i2097 = $4837; else {
            $$cast$i$i$i$i$i$i$i$i2098$lcssa = $4837;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2100 = $$cast$i$i$i$i$i$i$i$i2098$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2095 = $$pre$i$i$i$i$i$i2093;
          while (1) {
           $4834 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2095 + 4 >> 2] | 0;
           if (!$4834) {
            $$0$i$i$i$i$i$i$i$i$i2095$lcssa = $$0$i$i$i$i$i$i$i$i$i2095;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2095 = $4834;
          }
          $$01$i$i$i$i$i$i$i$i2100 = $$0$i$i$i$i$i$i$i$i$i2095$lcssa;
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2100 + 16 >> 2] | 0) >>> 0 < $4830 >>> 0) {
          $4851 = $$01$i$i$i$i$i$i$i$i2100;
          label = 1895;
         } else if ($4832) {
          $$0$i$i$i$i119$i$i2111 = $337;
          $4855 = $337;
          label = 1905;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2105 = $$pre$i$i$i$i$i$i2093;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2107 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2105 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2107 >>> 0 > $4830 >>> 0) {
            $4844 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2105 >> 2] | 0;
            if (!$4844) {
             $$0$i$i$i$i119$i$i2111$ph = $__nd$0$i20$i$i$i$i$in$i$i2105;
             $__nd$0$i20$i$i$i$i$in$i$i2105$lcssa6118 = $__nd$0$i20$i$i$i$i$in$i$i2105;
             label = 1904;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2105$be = $4844;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2107 >>> 0 >= $4830 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2105$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2105;
             label = 1908;
             break;
            }
            $4847 = $__nd$0$i20$i$i$i$i$in$i$i2105 + 4 | 0;
            $4848 = HEAP32[$4847 >> 2] | 0;
            if (!$4848) {
             $$0$i$i$i$i119$i$i2111$ph = $4847;
             $__nd$0$i20$i$i$i$i$in$i$i2105$lcssa6118 = $__nd$0$i20$i$i$i$i$in$i$i2105;
             label = 1904;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2105$be = $4848;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2105 = $__nd$0$i20$i$i$i$i$in$i$i2105$be;
          }
          if ((label | 0) == 1904) {
           label = 0;
           $$0$i$i$i$i119$i$i2111 = $$0$i$i$i$i119$i$i2111$ph;
           $4855 = $__nd$0$i20$i$i$i$i$in$i$i2105$lcssa6118;
           label = 1905;
           break;
          } else if ((label | 0) == 1908) {
           label = 0;
           $4863 = $__nd$0$i20$i$i$i$i$in$i$i2105$lcssa;
           label = 1909;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 1895) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2093) {
          $$0$i$i$i$i119$i$i2111 = $337;
          $4855 = $337;
          label = 1905;
         } else {
          $4850 = $4851 + 4 | 0;
          $$pre$i$i2109 = HEAP32[$4850 >> 2] | 0;
          if (!$$pre$i$i2109) {
           $$0$i$i$i$i119$i$i2111 = $4850;
           $4855 = $4851;
           label = 1905;
          } else {
           $4863 = $$pre$i$i2109;
           label = 1909;
          }
         }
        }
        if ((label | 0) == 1905) {
         label = 0;
         HEAP32[$4814 >> 2] = 0;
         HEAP32[$4814 + 4 >> 2] = 0;
         HEAP32[$4814 + 8 >> 2] = $4855;
         HEAP32[$$0$i$i$i$i119$i$i2111 >> 2] = $4814;
         $4857 = HEAP32[HEAP32[$169 >> 2] >> 2] | 0;
         if (!$4857) $4860 = $4814; else {
          HEAP32[$169 >> 2] = $4857;
          $4860 = HEAP32[$$0$i$i$i$i119$i$i2111 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$335 >> 2] | 0, $4860);
         HEAP32[$336 >> 2] = (HEAP32[$336 >> 2] | 0) + 1;
         $4866 = $4818;
        } else if ((label | 0) == 1909) {
         label = 0;
         if (($4863 | 0) == ($4814 | 0)) $4866 = $5620; else {
          __ZdlPv($4814);
          $4866 = $5620;
         }
        }
        $4867 = HEAP32[$4866 + 4 >> 2] | 0;
        if (!$4867) {
         $$0$i$i$i$i$i2120 = $4866;
         while (1) {
          $4872 = HEAP32[$$0$i$i$i$i$i2120 + 8 >> 2] | 0;
          if ((HEAP32[$4872 >> 2] | 0) == ($$0$i$i$i$i$i2120 | 0)) {
           $$cast$i$i$i$i$i2121$lcssa = $4872;
           break;
          } else $$0$i$i$i$i$i2120 = $4872;
         }
         $$01$i$i$i$i$i2123 = $$cast$i$i$i$i$i2121$lcssa;
        } else {
         $$0$i$i$i$i$i$i2118 = $4867;
         while (1) {
          $4869 = HEAP32[$$0$i$i$i$i$i$i2118 >> 2] | 0;
          if (!$4869) {
           $$0$i$i$i$i$i$i2118$lcssa = $$0$i$i$i$i$i$i2118;
           break;
          } else $$0$i$i$i$i$i$i2118 = $4869;
         }
         $$01$i$i$i$i$i2123 = $$0$i$i$i$i$i$i2118$lcssa;
        }
        if (($$01$i$i$i$i$i2123 | 0) == ($338 | 0)) break; else {
         $4818 = $$01$i$i$i$i$i2123;
         $5620 = $$01$i$i$i$i$i2123;
        }
       }
      }
      HEAP32[$339 >> 2] = 0;
      HEAP32[$340 >> 2] = 0;
      HEAP32[$170 >> 2] = $341;
      $$idx$val$i$i2129 = HEAP32[$$idx$val$i842$lcssa6059 + -68 >> 2] | 0;
      $4876 = $$idx$val$i842$lcssa6059 + -64 | 0;
      if (($$idx$val$i$i2129 | 0) != ($4876 | 0)) {
       $4882 = $$idx$val$i$i2129;
       $5621 = $$idx$val$i$i2129;
       while (1) {
        __THREW__ = 0;
        $4878 = invoke_ii(67, 28) | 0;
        $4879 = __THREW__;
        __THREW__ = 0;
        if ($4879 & 1) {
         label = 1960;
         break L1;
        }
        $4881 = $4882 + 16 | 0;
        $4883 = $4878 + 16 | 0;
        HEAP32[$4883 + 0 >> 2] = HEAP32[$4881 + 0 >> 2];
        HEAP32[$4883 + 4 >> 2] = HEAP32[$4881 + 4 >> 2];
        HEAP32[$4883 + 8 >> 2] = HEAP32[$4881 + 8 >> 2];
        $$pre$i$i$i$i$i$i2134 = HEAP32[$341 >> 2] | 0;
        do if ((HEAP32[$170 >> 2] | 0) == ($341 | 0)) {
         $4904 = $341;
         label = 1932;
        } else {
         $4885 = ($$pre$i$i$i$i$i$i2134 | 0) == 0;
         if ($4885) {
          $$0$i$i$i$i$i$i$i$i2138 = $341;
          while (1) {
           $4890 = HEAP32[$$0$i$i$i$i$i$i$i$i2138 + 8 >> 2] | 0;
           if ((HEAP32[$4890 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2138 | 0)) $$0$i$i$i$i$i$i$i$i2138 = $4890; else {
            $$cast$i$i$i$i$i$i$i$i2139$lcssa = $4890;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2141 = $$cast$i$i$i$i$i$i$i$i2139$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2136 = $$pre$i$i$i$i$i$i2134;
          while (1) {
           $4887 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2136 + 4 >> 2] | 0;
           if (!$4887) {
            $$0$i$i$i$i$i$i$i$i$i2136$lcssa = $$0$i$i$i$i$i$i$i$i$i2136;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2136 = $4887;
          }
          $$01$i$i$i$i$i$i$i$i2141 = $$0$i$i$i$i$i$i$i$i$i2136$lcssa;
         }
         $__v$idx14$val$i$i$i$i$i$i2145 = HEAP32[$4883 >> 2] | 0;
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2141 + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i2145 >>> 0) {
          $4904 = $$01$i$i$i$i$i$i$i$i2141;
          label = 1932;
         } else if ($4885) {
          $$0$i$i$i$i119$i$i2154 = $341;
          $4908 = $341;
          label = 1942;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2148 = $$pre$i$i$i$i$i$i2134;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2150 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2148 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2150 >>> 0 > $__v$idx14$val$i$i$i$i$i$i2145 >>> 0) {
            $4897 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2148 >> 2] | 0;
            if (!$4897) {
             $$0$i$i$i$i119$i$i2154$ph = $__nd$0$i20$i$i$i$i$in$i$i2148;
             $__nd$0$i20$i$i$i$i$in$i$i2148$lcssa6119 = $__nd$0$i20$i$i$i$i$in$i$i2148;
             label = 1941;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2148$be = $4897;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2150 >>> 0 >= $__v$idx14$val$i$i$i$i$i$i2145 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2148$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2148;
             label = 1945;
             break;
            }
            $4900 = $__nd$0$i20$i$i$i$i$in$i$i2148 + 4 | 0;
            $4901 = HEAP32[$4900 >> 2] | 0;
            if (!$4901) {
             $$0$i$i$i$i119$i$i2154$ph = $4900;
             $__nd$0$i20$i$i$i$i$in$i$i2148$lcssa6119 = $__nd$0$i20$i$i$i$i$in$i$i2148;
             label = 1941;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2148$be = $4901;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2148 = $__nd$0$i20$i$i$i$i$in$i$i2148$be;
          }
          if ((label | 0) == 1941) {
           label = 0;
           $$0$i$i$i$i119$i$i2154 = $$0$i$i$i$i119$i$i2154$ph;
           $4908 = $__nd$0$i20$i$i$i$i$in$i$i2148$lcssa6119;
           label = 1942;
           break;
          } else if ((label | 0) == 1945) {
           label = 0;
           $4916 = $__nd$0$i20$i$i$i$i$in$i$i2148$lcssa;
           label = 1946;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 1932) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2134) {
          $$0$i$i$i$i119$i$i2154 = $341;
          $4908 = $341;
          label = 1942;
         } else {
          $4903 = $4904 + 4 | 0;
          $$pre$i$i2152 = HEAP32[$4903 >> 2] | 0;
          if (!$$pre$i$i2152) {
           $$0$i$i$i$i119$i$i2154 = $4903;
           $4908 = $4904;
           label = 1942;
          } else {
           $4916 = $$pre$i$i2152;
           label = 1946;
          }
         }
        }
        if ((label | 0) == 1942) {
         label = 0;
         HEAP32[$4878 >> 2] = 0;
         HEAP32[$4878 + 4 >> 2] = 0;
         HEAP32[$4878 + 8 >> 2] = $4908;
         HEAP32[$$0$i$i$i$i119$i$i2154 >> 2] = $4878;
         $4910 = HEAP32[HEAP32[$170 >> 2] >> 2] | 0;
         if (!$4910) $4913 = $4878; else {
          HEAP32[$170 >> 2] = $4910;
          $4913 = HEAP32[$$0$i$i$i$i119$i$i2154 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$339 >> 2] | 0, $4913);
         HEAP32[$340 >> 2] = (HEAP32[$340 >> 2] | 0) + 1;
         $4919 = $4882;
        } else if ((label | 0) == 1946) {
         label = 0;
         if (($4916 | 0) == ($4878 | 0)) $4919 = $5621; else {
          __ZdlPv($4878);
          $4919 = $5621;
         }
        }
        $4920 = HEAP32[$4919 + 4 >> 2] | 0;
        if (!$4920) {
         $$0$i$i$i$i$i2163 = $4919;
         while (1) {
          $4925 = HEAP32[$$0$i$i$i$i$i2163 + 8 >> 2] | 0;
          if ((HEAP32[$4925 >> 2] | 0) == ($$0$i$i$i$i$i2163 | 0)) {
           $$cast$i$i$i$i$i2164$lcssa = $4925;
           break;
          } else $$0$i$i$i$i$i2163 = $4925;
         }
         $$01$i$i$i$i$i2166 = $$cast$i$i$i$i$i2164$lcssa;
        } else {
         $$0$i$i$i$i$i$i2161 = $4920;
         while (1) {
          $4922 = HEAP32[$$0$i$i$i$i$i$i2161 >> 2] | 0;
          if (!$4922) {
           $$0$i$i$i$i$i$i2161$lcssa = $$0$i$i$i$i$i$i2161;
           break;
          } else $$0$i$i$i$i$i$i2161 = $4922;
         }
         $$01$i$i$i$i$i2166 = $$0$i$i$i$i$i$i2161$lcssa;
        }
        if (($$01$i$i$i$i$i2166 | 0) == ($4876 | 0)) break; else {
         $4882 = $$01$i$i$i$i$i2166;
         $5621 = $$01$i$i$i$i$i2166;
        }
       }
      }
      __THREW__ = 0;
      invoke_viiii(18, $168 | 0, $this | 0, $169 | 0, $170 | 0);
      $4929 = __THREW__;
      __THREW__ = 0;
      if ($4929 & 1) {
       label = 1961;
       break L1;
      };
      HEAP32[$204 + 0 >> 2] = HEAP32[$168 + 0 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$168 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$168 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$168 + 12 >> 2];
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$341 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($169, HEAP32[$337 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env129, HEAP32[$338 >> 2] | 0);
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    case 1964:
     {
      label = 0;
      $4946 = HEAP32[$$idx$val$i842$lcssa6060 + -140 >> 2] | 0;
      if ((HEAP32[$204 >> 2] | 0) != 16) {
       $$lcssa6186 = $4946;
       label = 1965;
       break L1;
      }
      $4966 = HEAP32[$205 >> 2] | 0;
      $$idx252 = $4966 + 8 | 0;
      if ((HEAP32[$4966 + 12 >> 2] | 0) != (HEAP32[$$idx252 >> 2] | 0)) {
       $$idx$val$i842$lcssa6060$lcssa6183 = $$idx$val$i842$lcssa6060;
       $$idx252$lcssa = $$idx252;
       $$lcssa6080$lcssa6181 = $$lcssa6080;
       $$lcssa6187 = $4946;
       label = 1977;
       break L589;
      }
      HEAP32[$342 >> 2] = 0;
      HEAP32[$343 >> 2] = 0;
      HEAP32[$174 >> 2] = $344;
      $4969 = HEAP32[$4946 + 52 >> 2] | 0;
      $4971 = HEAP32[$4946 + 56 >> 2] | 0;
      HEAP32[$345 >> 2] = 0;
      HEAP32[$346 >> 2] = 0;
      HEAP32[$175 >> 2] = $347;
      __THREW__ = 0;
      invoke_viiiiii(20, $173 | 0, $this | 0, $174 | 0, $4969 | 0, $4971 | 0, $175 | 0);
      $4972 = __THREW__;
      __THREW__ = 0;
      if ($4972 & 1) {
       label = 1976;
       break L1;
      };
      HEAP32[$204 + 0 >> 2] = HEAP32[$173 + 0 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$173 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$173 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$173 + 12 >> 2];
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($175, HEAP32[$347 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($174, HEAP32[$344 >> 2] | 0);
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    case 1992:
     {
      label = 0;
      $5017 = HEAP32[$$idx$val$i842$lcssa6061 + -140 >> 2] | 0;
      $5019 = HEAP32[$$idx$val$i842$lcssa6061 + -96 >> 2] | 0;
      if ((HEAP32[$204 >> 2] | 0) != 19) {
       $$lcssa6158 = $5017;
       label = 1993;
       break L1;
      }
      $5078 = HEAP32[$205 >> 2] | 0;
      $5079 = $5078 + 8 | 0;
      $5081 = __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[$237 >> 2] | 0, $5079) | 0;
      $5082 = $$idx$val$i842$lcssa6061 + -52 | 0;
      $5083 = $$idx$val$i842$lcssa6061 + -48 | 0;
      $5084 = HEAP32[$5083 >> 2] | 0;
      $5085 = ($5084 | 0) == 0;
      if (!$5085) {
       $$0$ph6$i$i$i2209 = $5083;
       $$01$ph5$i$i$i2210 = $5084;
       L1730 : while (1) {
        $$013$i$i$i2212 = $$01$ph5$i$i$i2210;
        while (1) {
         if ((HEAP32[$$013$i$i$i2212 + 16 >> 2] | 0) >>> 0 >= $5081 >>> 0) {
          $$013$i$i$i2212$lcssa = $$013$i$i$i2212;
          break;
         }
         $$013$i$i$i2212 = HEAP32[$$013$i$i$i2212 + 4 >> 2] | 0;
         if (!$$013$i$i$i2212) {
          $$0$ph6$i$i$i2209$lcssa6101 = $$0$ph6$i$i$i2209;
          label = 2022;
          break L1730;
         }
        }
        $$01$ph5$i$i$i2210 = HEAP32[$$013$i$i$i2212$lcssa >> 2] | 0;
        if (!$$01$ph5$i$i$i2210) {
         $$013$i$i$i2212$lcssa$lcssa = $$013$i$i$i2212$lcssa;
         label = 2023;
         break;
        } else $$0$ph6$i$i$i2209 = $$013$i$i$i2212$lcssa;
       }
       if ((label | 0) == 2022) {
        label = 0;
        $$0$ph$lcssa$i$i$i2216 = $$0$ph6$i$i$i2209$lcssa6101;
       } else if ((label | 0) == 2023) {
        label = 0;
        $$0$ph$lcssa$i$i$i2216 = $$013$i$i$i2212$lcssa$lcssa;
       }
       if (($$0$ph$lcssa$i$i$i2216 | 0) != ($5083 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i2216 + 16 >> 2] | 0) >>> 0 <= $5081 >>> 0) {
        $$lcssa6159 = $5017;
        $$lcssa6164 = $5078;
        $$lcssa6169 = $5079;
        label = 2026;
        break L1;
       }
      }
      $5129 = $$idx$val$i842$lcssa6061 + -56 | 0;
      $$idx387 = $5019 + 8 | 0;
      $5132 = HEAP32[(HEAP32[$$idx387 >> 2] | 0) + (HEAP32[$5129 >> 2] << 2) >> 2] | 0;
      do if ($5085) {
       HEAP32[$0 >> 2] = $5083;
       $$0$i7$i2241 = $5083;
       $5148 = $5083;
       label = 2052;
      } else {
       $__nd$0$i$i2234 = $5084;
       while (1) {
        $5134 = HEAP32[$__nd$0$i$i2234 + 16 >> 2] | 0;
        if ($5134 >>> 0 > $5081 >>> 0) {
         $5136 = HEAP32[$__nd$0$i$i2234 >> 2] | 0;
         if (!$5136) {
          $$lcssa6105 = $__nd$0$i$i2234;
          $__nd$0$i$i2234$lcssa6103 = $__nd$0$i$i2234;
          label = 2045;
          break;
         } else $__nd$0$be$in$i$i2236 = $5136;
        } else {
         if ($5134 >>> 0 >= $5081 >>> 0) {
          $__nd$0$i$i2234$lcssa = $__nd$0$i$i2234;
          label = 2051;
          break;
         }
         $5139 = $__nd$0$i$i2234 + 4 | 0;
         $5140 = HEAP32[$5139 >> 2] | 0;
         if (!$5140) {
          $$lcssa6104 = $5139;
          $__nd$0$i$i2234$lcssa6102 = $__nd$0$i$i2234;
          label = 2049;
          break;
         } else $__nd$0$be$in$i$i2236 = $5140;
        }
        $__nd$0$i$i2234 = $__nd$0$be$in$i$i2236;
       }
       if ((label | 0) == 2045) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i2234$lcssa6103;
        $$0$i7$i2241 = $$lcssa6105;
        $5148 = $__nd$0$i$i2234$lcssa6103;
        label = 2052;
        break;
       } else if ((label | 0) == 2049) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i2234$lcssa6102;
        $$0$i7$i2241 = $$lcssa6104;
        $5148 = $__nd$0$i$i2234$lcssa6102;
        label = 2052;
        break;
       } else if ((label | 0) == 2051) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i2234$lcssa;
        if (!$__nd$0$i$i2234$lcssa) {
         $$0$i7$i2241 = $0;
         $5148 = 0;
         label = 2052;
         break;
        } else {
         $__r$0$i2245 = $__nd$0$i$i2234$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 2052) {
       label = 0;
       $5143 = __Znwj(24) | 0;
       HEAP32[$5143 + 16 >> 2] = $5081;
       HEAP32[$5143 + 20 >> 2] = 0;
       HEAP32[$5143 >> 2] = 0;
       HEAP32[$5143 + 4 >> 2] = 0;
       HEAP32[$5143 + 8 >> 2] = $5148;
       HEAP32[$$0$i7$i2241 >> 2] = $5143;
       $5150 = HEAP32[HEAP32[$5082 >> 2] >> 2] | 0;
       if (!$5150) $5154 = $5143; else {
        HEAP32[$5082 >> 2] = $5150;
        $5154 = HEAP32[$$0$i7$i2241 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i842$lcssa6061 + -48 >> 2] | 0, $5154);
       $5155 = $$idx$val$i842$lcssa6061 + -44 | 0;
       HEAP32[$5155 >> 2] = (HEAP32[$5155 >> 2] | 0) + 1;
       $__r$0$i2245 = $5143;
      }
      HEAP32[$__r$0$i2245 + 20 >> 2] = $5132;
      $5160 = (HEAP32[$5129 >> 2] | 0) + 1 | 0;
      HEAP32[$5129 >> 2] = $5160;
      $$idx$val = HEAP32[$$idx387 >> 2] | 0;
      if (($5160 | 0) != ((HEAP32[$5019 + 12 >> 2] | 0) - $$idx$val >> 2 | 0)) {
       $$idx$val$i842$lcssa6061$lcssa6154 = $$idx$val$i842$lcssa6061;
       $$idx$val$lcssa = $$idx$val;
       $$lcssa6160 = $5017;
       $$lcssa6174 = $5160;
       label = 2137;
       break L589;
      }
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env137, $this, HEAP32[$5017 + 36 >> 2] | 0, HEAP32[$5017 + 40 >> 2] | 0);
      HEAP32[$348 >> 2] = 0;
      HEAP32[$349 >> 2] = 0;
      HEAP32[$181 >> 2] = $350;
      $$idx$val$i$i2248 = HEAP32[$env137 >> 2] | 0;
      if (($$idx$val$i$i2248 | 0) != ($351 | 0)) {
       $5171 = $$idx$val$i$i2248;
       $5622 = $$idx$val$i$i2248;
       while (1) {
        __THREW__ = 0;
        $5167 = invoke_ii(67, 24) | 0;
        $5168 = __THREW__;
        __THREW__ = 0;
        if ($5168 & 1) {
         label = 2132;
         break L1;
        }
        $5173 = $5171 + 16 | 0;
        $5175 = HEAP32[$5173 >> 2] | 0;
        $5178 = HEAP32[$5173 + 4 >> 2] | 0;
        $5179 = $5167 + 16 | 0;
        HEAP32[$5179 >> 2] = $5175;
        HEAP32[$5179 + 4 >> 2] = $5178;
        $5183 = $5175;
        $$pre$i$i$i$i$i$i2253 = HEAP32[$350 >> 2] | 0;
        do if ((HEAP32[$181 >> 2] | 0) == ($350 | 0)) {
         $5204 = $350;
         label = 2068;
        } else {
         $5185 = ($$pre$i$i$i$i$i$i2253 | 0) == 0;
         if ($5185) {
          $$0$i$i$i$i$i$i$i$i2257 = $350;
          while (1) {
           $5190 = HEAP32[$$0$i$i$i$i$i$i$i$i2257 + 8 >> 2] | 0;
           if ((HEAP32[$5190 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2257 | 0)) $$0$i$i$i$i$i$i$i$i2257 = $5190; else {
            $$cast$i$i$i$i$i$i$i$i2258$lcssa = $5190;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2260 = $$cast$i$i$i$i$i$i$i$i2258$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2255 = $$pre$i$i$i$i$i$i2253;
          while (1) {
           $5187 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2255 + 4 >> 2] | 0;
           if (!$5187) {
            $$0$i$i$i$i$i$i$i$i$i2255$lcssa = $$0$i$i$i$i$i$i$i$i$i2255;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2255 = $5187;
          }
          $$01$i$i$i$i$i$i$i$i2260 = $$0$i$i$i$i$i$i$i$i$i2255$lcssa;
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2260 + 16 >> 2] | 0) >>> 0 < $5183 >>> 0) {
          $5204 = $$01$i$i$i$i$i$i$i$i2260;
          label = 2068;
         } else if ($5185) {
          $$0$i$i$i$i119$i$i2271 = $350;
          $5208 = $350;
          label = 2078;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2265 = $$pre$i$i$i$i$i$i2253;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2267 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2265 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2267 >>> 0 > $5183 >>> 0) {
            $5197 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2265 >> 2] | 0;
            if (!$5197) {
             $$0$i$i$i$i119$i$i2271$ph = $__nd$0$i20$i$i$i$i$in$i$i2265;
             $__nd$0$i20$i$i$i$i$in$i$i2265$lcssa6106 = $__nd$0$i20$i$i$i$i$in$i$i2265;
             label = 2077;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2265$be = $5197;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2267 >>> 0 >= $5183 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2265$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2265;
             label = 2081;
             break;
            }
            $5200 = $__nd$0$i20$i$i$i$i$in$i$i2265 + 4 | 0;
            $5201 = HEAP32[$5200 >> 2] | 0;
            if (!$5201) {
             $$0$i$i$i$i119$i$i2271$ph = $5200;
             $__nd$0$i20$i$i$i$i$in$i$i2265$lcssa6106 = $__nd$0$i20$i$i$i$i$in$i$i2265;
             label = 2077;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2265$be = $5201;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2265 = $__nd$0$i20$i$i$i$i$in$i$i2265$be;
          }
          if ((label | 0) == 2077) {
           label = 0;
           $$0$i$i$i$i119$i$i2271 = $$0$i$i$i$i119$i$i2271$ph;
           $5208 = $__nd$0$i20$i$i$i$i$in$i$i2265$lcssa6106;
           label = 2078;
           break;
          } else if ((label | 0) == 2081) {
           label = 0;
           $5216 = $__nd$0$i20$i$i$i$i$in$i$i2265$lcssa;
           label = 2082;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 2068) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2253) {
          $$0$i$i$i$i119$i$i2271 = $350;
          $5208 = $350;
          label = 2078;
         } else {
          $5203 = $5204 + 4 | 0;
          $$pre$i$i2269 = HEAP32[$5203 >> 2] | 0;
          if (!$$pre$i$i2269) {
           $$0$i$i$i$i119$i$i2271 = $5203;
           $5208 = $5204;
           label = 2078;
          } else {
           $5216 = $$pre$i$i2269;
           label = 2082;
          }
         }
        }
        if ((label | 0) == 2078) {
         label = 0;
         HEAP32[$5167 >> 2] = 0;
         HEAP32[$5167 + 4 >> 2] = 0;
         HEAP32[$5167 + 8 >> 2] = $5208;
         HEAP32[$$0$i$i$i$i119$i$i2271 >> 2] = $5167;
         $5210 = HEAP32[HEAP32[$181 >> 2] >> 2] | 0;
         if (!$5210) $5213 = $5167; else {
          HEAP32[$181 >> 2] = $5210;
          $5213 = HEAP32[$$0$i$i$i$i119$i$i2271 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$348 >> 2] | 0, $5213);
         HEAP32[$349 >> 2] = (HEAP32[$349 >> 2] | 0) + 1;
         $5219 = $5171;
        } else if ((label | 0) == 2082) {
         label = 0;
         if (($5216 | 0) == ($5167 | 0)) $5219 = $5622; else {
          __ZdlPv($5167);
          $5219 = $5622;
         }
        }
        $5220 = HEAP32[$5219 + 4 >> 2] | 0;
        if (!$5220) {
         $$0$i$i$i$i$i2280 = $5219;
         while (1) {
          $5225 = HEAP32[$$0$i$i$i$i$i2280 + 8 >> 2] | 0;
          if ((HEAP32[$5225 >> 2] | 0) == ($$0$i$i$i$i$i2280 | 0)) {
           $$cast$i$i$i$i$i2281$lcssa = $5225;
           break;
          } else $$0$i$i$i$i$i2280 = $5225;
         }
         $$01$i$i$i$i$i2283 = $$cast$i$i$i$i$i2281$lcssa;
        } else {
         $$0$i$i$i$i$i$i2278 = $5220;
         while (1) {
          $5222 = HEAP32[$$0$i$i$i$i$i$i2278 >> 2] | 0;
          if (!$5222) {
           $$0$i$i$i$i$i$i2278$lcssa = $$0$i$i$i$i$i$i2278;
           break;
          } else $$0$i$i$i$i$i$i2278 = $5222;
         }
         $$01$i$i$i$i$i2283 = $$0$i$i$i$i$i$i2278$lcssa;
        }
        if (($$01$i$i$i$i$i2283 | 0) == ($351 | 0)) break; else {
         $5171 = $$01$i$i$i$i$i2283;
         $5622 = $$01$i$i$i$i$i2283;
        }
       }
      }
      $5230 = HEAP32[$5017 + 52 >> 2] | 0;
      $5232 = HEAP32[$5017 + 56 >> 2] | 0;
      HEAP32[$352 >> 2] = 0;
      HEAP32[$353 >> 2] = 0;
      HEAP32[$182 >> 2] = $354;
      $$idx$val$i$i2289 = HEAP32[$5082 >> 2] | 0;
      if (($$idx$val$i$i2289 | 0) != ($5083 | 0)) {
       $5238 = $$idx$val$i$i2289;
       $5623 = $$idx$val$i$i2289;
       while (1) {
        __THREW__ = 0;
        $5234 = invoke_ii(67, 24) | 0;
        $5235 = __THREW__;
        __THREW__ = 0;
        if ($5235 & 1) {
         label = 2133;
         break L1;
        }
        $5240 = $5238 + 16 | 0;
        $5242 = HEAP32[$5240 >> 2] | 0;
        $5245 = HEAP32[$5240 + 4 >> 2] | 0;
        $5246 = $5234 + 16 | 0;
        HEAP32[$5246 >> 2] = $5242;
        HEAP32[$5246 + 4 >> 2] = $5245;
        $5250 = $5242;
        $$pre$i$i$i$i$i$i2294 = HEAP32[$354 >> 2] | 0;
        do if ((HEAP32[$182 >> 2] | 0) == ($354 | 0)) {
         $5271 = $354;
         label = 2105;
        } else {
         $5252 = ($$pre$i$i$i$i$i$i2294 | 0) == 0;
         if ($5252) {
          $$0$i$i$i$i$i$i$i$i2298 = $354;
          while (1) {
           $5257 = HEAP32[$$0$i$i$i$i$i$i$i$i2298 + 8 >> 2] | 0;
           if ((HEAP32[$5257 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2298 | 0)) $$0$i$i$i$i$i$i$i$i2298 = $5257; else {
            $$cast$i$i$i$i$i$i$i$i2299$lcssa = $5257;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2301 = $$cast$i$i$i$i$i$i$i$i2299$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2296 = $$pre$i$i$i$i$i$i2294;
          while (1) {
           $5254 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2296 + 4 >> 2] | 0;
           if (!$5254) {
            $$0$i$i$i$i$i$i$i$i$i2296$lcssa = $$0$i$i$i$i$i$i$i$i$i2296;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2296 = $5254;
          }
          $$01$i$i$i$i$i$i$i$i2301 = $$0$i$i$i$i$i$i$i$i$i2296$lcssa;
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2301 + 16 >> 2] | 0) >>> 0 < $5250 >>> 0) {
          $5271 = $$01$i$i$i$i$i$i$i$i2301;
          label = 2105;
         } else if ($5252) {
          $$0$i$i$i$i119$i$i2312 = $354;
          $5275 = $354;
          label = 2115;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2306 = $$pre$i$i$i$i$i$i2294;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2308 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2306 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2308 >>> 0 > $5250 >>> 0) {
            $5264 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2306 >> 2] | 0;
            if (!$5264) {
             $$0$i$i$i$i119$i$i2312$ph = $__nd$0$i20$i$i$i$i$in$i$i2306;
             $__nd$0$i20$i$i$i$i$in$i$i2306$lcssa6107 = $__nd$0$i20$i$i$i$i$in$i$i2306;
             label = 2114;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2306$be = $5264;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2308 >>> 0 >= $5250 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2306$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2306;
             label = 2118;
             break;
            }
            $5267 = $__nd$0$i20$i$i$i$i$in$i$i2306 + 4 | 0;
            $5268 = HEAP32[$5267 >> 2] | 0;
            if (!$5268) {
             $$0$i$i$i$i119$i$i2312$ph = $5267;
             $__nd$0$i20$i$i$i$i$in$i$i2306$lcssa6107 = $__nd$0$i20$i$i$i$i$in$i$i2306;
             label = 2114;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2306$be = $5268;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2306 = $__nd$0$i20$i$i$i$i$in$i$i2306$be;
          }
          if ((label | 0) == 2114) {
           label = 0;
           $$0$i$i$i$i119$i$i2312 = $$0$i$i$i$i119$i$i2312$ph;
           $5275 = $__nd$0$i20$i$i$i$i$in$i$i2306$lcssa6107;
           label = 2115;
           break;
          } else if ((label | 0) == 2118) {
           label = 0;
           $5283 = $__nd$0$i20$i$i$i$i$in$i$i2306$lcssa;
           label = 2119;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 2105) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2294) {
          $$0$i$i$i$i119$i$i2312 = $354;
          $5275 = $354;
          label = 2115;
         } else {
          $5270 = $5271 + 4 | 0;
          $$pre$i$i2310 = HEAP32[$5270 >> 2] | 0;
          if (!$$pre$i$i2310) {
           $$0$i$i$i$i119$i$i2312 = $5270;
           $5275 = $5271;
           label = 2115;
          } else {
           $5283 = $$pre$i$i2310;
           label = 2119;
          }
         }
        }
        if ((label | 0) == 2115) {
         label = 0;
         HEAP32[$5234 >> 2] = 0;
         HEAP32[$5234 + 4 >> 2] = 0;
         HEAP32[$5234 + 8 >> 2] = $5275;
         HEAP32[$$0$i$i$i$i119$i$i2312 >> 2] = $5234;
         $5277 = HEAP32[HEAP32[$182 >> 2] >> 2] | 0;
         if (!$5277) $5280 = $5234; else {
          HEAP32[$182 >> 2] = $5277;
          $5280 = HEAP32[$$0$i$i$i$i119$i$i2312 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$352 >> 2] | 0, $5280);
         HEAP32[$353 >> 2] = (HEAP32[$353 >> 2] | 0) + 1;
         $5286 = $5238;
        } else if ((label | 0) == 2119) {
         label = 0;
         if (($5283 | 0) == ($5234 | 0)) $5286 = $5623; else {
          __ZdlPv($5234);
          $5286 = $5623;
         }
        }
        $5287 = HEAP32[$5286 + 4 >> 2] | 0;
        if (!$5287) {
         $$0$i$i$i$i$i2321 = $5286;
         while (1) {
          $5292 = HEAP32[$$0$i$i$i$i$i2321 + 8 >> 2] | 0;
          if ((HEAP32[$5292 >> 2] | 0) == ($$0$i$i$i$i$i2321 | 0)) {
           $$cast$i$i$i$i$i2322$lcssa = $5292;
           break;
          } else $$0$i$i$i$i$i2321 = $5292;
         }
         $$01$i$i$i$i$i2324 = $$cast$i$i$i$i$i2322$lcssa;
        } else {
         $$0$i$i$i$i$i$i2319 = $5287;
         while (1) {
          $5289 = HEAP32[$$0$i$i$i$i$i$i2319 >> 2] | 0;
          if (!$5289) {
           $$0$i$i$i$i$i$i2319$lcssa = $$0$i$i$i$i$i$i2319;
           break;
          } else $$0$i$i$i$i$i$i2319 = $5289;
         }
         $$01$i$i$i$i$i2324 = $$0$i$i$i$i$i$i2319$lcssa;
        }
        if (($$01$i$i$i$i$i2324 | 0) == ($5083 | 0)) break; else {
         $5238 = $$01$i$i$i$i$i2324;
         $5623 = $$01$i$i$i$i$i2324;
        }
       }
      }
      __THREW__ = 0;
      invoke_viiiiii(20, $180 | 0, $this | 0, $181 | 0, $5230 | 0, $5232 | 0, $182 | 0);
      $5296 = __THREW__;
      __THREW__ = 0;
      if ($5296 & 1) {
       label = 2134;
       break L1;
      };
      HEAP32[$204 + 0 >> 2] = HEAP32[$180 + 0 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$180 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$180 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$180 + 12 >> 2];
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($182, HEAP32[$354 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($181, HEAP32[$350 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env137, HEAP32[$351 >> 2] | 0);
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    case 2152:
     {
      label = 0;
      $5348 = HEAP32[$$idx$val$i842$lcssa6062 + -140 >> 2] | 0;
      $5349 = $$idx$val$i842$lcssa6062 + -104 | 0;
      $5350 = $$idx$val$i842$lcssa6062 + -88 | 0;
      HEAP32[$356 >> 2] = 592;
      HEAP32[$ss141 >> 2] = 740;
      HEAP32[$355 >> 2] = 760;
      HEAP32[$358 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(41, $359 | 0, $357 | 0);
      $5351 = __THREW__;
      __THREW__ = 0;
      if ($5351 & 1) {
       label = 2156;
       break L1;
      }
      HEAP32[$360 >> 2] = 0;
      HEAP32[$361 >> 2] = -1;
      HEAP32[$ss141 >> 2] = 572;
      HEAP32[$355 >> 2] = 612;
      HEAP32[$356 >> 2] = 592;
      __THREW__ = 0;
      invoke_vi(177, $357 | 0);
      $5353 = __THREW__;
      __THREW__ = 0;
      if ($5353 & 1) {
       label = 2157;
       break L1;
      }
      HEAP32[$357 >> 2] = 904;
      HEAP32[$362 + 0 >> 2] = 0;
      HEAP32[$362 + 4 >> 2] = 0;
      HEAP32[$362 + 8 >> 2] = 0;
      HEAP32[$362 + 12 >> 2] = 0;
      HEAP32[$363 >> 2] = 24;
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $357 | 0, $0 | 0);
      $5355 = __THREW__;
      __THREW__ = 0;
      if ($5355 & 1) {
       label = 2155;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      if ((HEAP32[$5349 >> 2] | 0) == 19) {
       $5366 = HEAP32[$$idx$val$i842$lcssa6062 + -96 >> 2] | 0;
       $5367 = $5366 + 8 | 0;
       $5368 = HEAP8[$5367 >> 0] | 0;
       if (!($5368 & 1)) {
        $5378 = $5367 + 1 | 0;
        $5379 = ($5368 & 255) >>> 1;
       } else {
        $5378 = HEAP32[$5366 + 16 >> 2] | 0;
        $5379 = HEAP32[$5366 + 12 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $356 | 0, $5378 | 0, $5379 | 0) | 0;
       $5380 = __THREW__;
       __THREW__ = 0;
       if ($5380 & 1) {
        label = 2165;
        break L1;
       }
      } else {
       HEAP32[$204 + 0 >> 2] = HEAP32[$5349 + 0 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$5349 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$5349 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$5349 + 12 >> 2];
       $5385 = HEAP32[$5348 + 48 >> 2] | 0;
       __THREW__ = 0;
       invoke_viii(3, $1 | 0, 46680, 0);
       $5386 = __THREW__;
       __THREW__ = 0;
       if ($5386 & 1) {
        label = 2165;
        break L1;
       }
       __THREW__ = 0;
       invoke_viiiii(6, $183 | 0, $this | 0, $5385 + 4 | 0, 0, $1 | 0);
       $5389 = __THREW__;
       __THREW__ = 0;
       if ($5389 & 1) {
        label = 2169;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       $5393 = HEAP8[$183 >> 0] | 0;
       if (!($5393 & 1)) {
        $5400 = $367;
        $5401 = ($5393 & 255) >>> 1;
       } else {
        $5400 = HEAP32[$368 >> 2] | 0;
        $5401 = HEAP32[$369 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $356 | 0, $5400 | 0, $5401 | 0) | 0;
       $5402 = __THREW__;
       __THREW__ = 0;
       if ($5402 & 1) {
        label = 2175;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
      }
      if ((HEAP32[$5350 >> 2] | 0) == 19) {
       $5409 = HEAP32[$$idx$val$i842$lcssa6062 + -80 >> 2] | 0;
       $5410 = $5409 + 8 | 0;
       $5411 = HEAP8[$5410 >> 0] | 0;
       if (!($5411 & 1)) {
        $5421 = $5410 + 1 | 0;
        $5422 = ($5411 & 255) >>> 1;
       } else {
        $5421 = HEAP32[$5409 + 16 >> 2] | 0;
        $5422 = HEAP32[$5409 + 12 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $356 | 0, $5421 | 0, $5422 | 0) | 0;
       $5423 = __THREW__;
       __THREW__ = 0;
       if ($5423 & 1) {
        label = 2165;
        break L1;
       }
      } else {
       HEAP32[$204 + 0 >> 2] = HEAP32[$5350 + 0 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$5350 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$5350 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$5350 + 12 >> 2];
       $5426 = HEAP32[$5348 + 56 >> 2] | 0;
       __THREW__ = 0;
       invoke_viii(3, $2 | 0, 46680, 0);
       $5427 = __THREW__;
       __THREW__ = 0;
       if ($5427 & 1) {
        label = 2165;
        break L1;
       }
       __THREW__ = 0;
       invoke_viiiii(6, $184 | 0, $this | 0, $5426 + 4 | 0, 0, $2 | 0);
       $5430 = __THREW__;
       __THREW__ = 0;
       if ($5430 & 1) {
        label = 2183;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $5434 = HEAP8[$184 >> 0] | 0;
       if (!($5434 & 1)) {
        $5441 = $364;
        $5442 = ($5434 & 255) >>> 1;
       } else {
        $5441 = HEAP32[$365 >> 2] | 0;
        $5442 = HEAP32[$366 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $356 | 0, $5441 | 0, $5442 | 0) | 0;
       $5443 = __THREW__;
       __THREW__ = 0;
       if ($5443 & 1) {
        label = 2189;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184);
      }
      __THREW__ = 0;
      invoke_vii(43, $186 | 0, $357 | 0);
      $5447 = __THREW__;
      __THREW__ = 0;
      if ($5447 & 1) {
       label = 2165;
       break L1;
      }
      __THREW__ = 0;
      invoke_viii(13, $185 | 0, $this | 0, $186 | 0);
      $5449 = __THREW__;
      __THREW__ = 0;
      if ($5449 & 1) {
       label = 2193;
       break L1;
      };
      HEAP32[$204 + 0 >> 2] = HEAP32[$185 + 0 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$185 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$185 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$185 + 12 >> 2];
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($186);
      HEAP32[$ss141 >> 2] = 572;
      HEAP32[$355 >> 2] = 612;
      HEAP32[$356 >> 2] = 592;
      HEAP32[$357 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($362);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($357);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($355);
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    case 2195:
     {
      label = 0;
      $5454 = HEAP32[$$idx$val$i842$lcssa6063 + -140 >> 2] | 0;
      $5455 = HEAP32[$204 >> 2] | 0;
      if (($5455 | 0) == 1) {
       $5456 = $5454 + 48 | 0;
       if (HEAP32[$5456 >> 2] | 0) {
        $$lcssa6150 = $5454;
        $$lcssa6152 = $5456;
        label = 2198;
        break L1;
       }
       $5460 = HEAP8[$205 >> 0] ^ 1;
       HEAP32[$226 >> 2] = 1;
       HEAP8[$205 >> 0] = $5460;
       HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$3 + 0 >> 0] | 0;
       HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$3 + 1 >> 0] | 0;
       HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$3 + 2 >> 0] | 0;
       HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$3 + 3 >> 0] | 0;
       HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$3 + 4 >> 0] | 0;
       HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$3 + 5 >> 0] | 0;
       HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$3 + 6 >> 0] | 0;
       $$414 = $$111$ph4070;
       label = 2248;
       break;
      } else if (($5455 | 0) != 2) {
       $$lcssa6148 = $5454;
       label = 2223;
       break L1;
      }
      $5484 = $5454 + 48 | 0;
      $5485 = HEAP32[$5484 >> 2] | 0;
      if (($5485 | 0) == 1) {
       $5491 = +(~~+HEAPF64[$269 >> 3] ^ -1 | 0);
       HEAP32[$226 >> 2] = 2;
       HEAPF64[$269 >> 3] = $5491;
       $$414 = $$111$ph4070;
       label = 2248;
       break;
      } else if (($5485 | 0) == 3) {
       $5487 = -+HEAPF64[$269 >> 3];
       HEAP32[$226 >> 2] = 2;
       HEAPF64[$269 >> 3] = $5487;
       $$414 = $$111$ph4070;
       label = 2248;
       break;
      } else if (($5485 | 0) == 2) {
       $$414 = $$111$ph4070;
       label = 2248;
       break;
      } else {
       $$lcssa6149 = $5454;
       $$lcssa6151 = $5484;
       label = 2212;
       break L1;
      }
      break;
     }
    case 2247:
     {
      label = 0;
      $$414 = $$111$ph4070;
      label = 2248;
      break;
     }
    }
    if ((label | 0) == 2248) {
     label = 0;
     __ZN12_GLOBAL__N_15Stack3popEv($198);
     $$111$ph$be = $$414;
    }
    $$idx$val$i7064959 = HEAP32[$$idx$i >> 2] | 0;
    $$idx1$val$i69140394071 = HEAP32[$$idx1$i >> 2] | 0;
    if (($$idx1$val$i69140394071 - $$idx$val$i7064959 | 0) >>> 0 <= $201 >>> 0) {
     label = 2252;
     break L1;
    } else $$111$ph4070 = $$111$ph$be;
   }
   switch (label | 0) {
   case 2:
    {
     label = 0;
     $$010$be = $$010$ph;
     break L586;
     break;
    }
   case 675:
    {
     label = 0;
     HEAP32[$$lcssa6069$lcssa >> 2] = 2;
     $1968 = $$idx$val$i842$lcssa6049$lcssa + -104 | 0;
     HEAP32[$1968 + 0 >> 2] = HEAP32[$204 + 0 >> 2];
     HEAP32[$1968 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
     HEAP32[$1968 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
     HEAP32[$1968 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
     $$010$be = HEAP32[$$lcssa6567 + 56 >> 2] | 0;
     break L586;
     break;
    }
   case 962:
    {
     label = 0;
     $2685 = HEAP32[$$idx262$val$lcssa + ($$lcssa6527 << 2) >> 2] | 0;
     HEAP32[$370 >> 2] = 0;
     HEAP32[$371 >> 2] = 0;
     HEAP32[$bindings65 >> 2] = $372;
     $$idx$val$i$i1032 = HEAP32[$$lcssa6526 + 8 >> 2] | 0;
     $2686 = $$lcssa6526 + 12 | 0;
     do if (($$idx$val$i$i1032 | 0) == ($2686 | 0)) {
      $__k$val$i10714996 = HEAP32[HEAP32[$$lcssa6526 + 28 >> 2] >> 2] | 0;
      label = 1009;
     } else {
      $2694 = $$idx$val$i$i1032;
      $5607 = $$idx$val$i$i1032;
      while (1) {
       __THREW__ = 0;
       $2690 = invoke_ii(67, 24) | 0;
       $2691 = __THREW__;
       __THREW__ = 0;
       if ($2691 & 1) {
        label = 999;
        break L1;
       }
       $2696 = $2694 + 16 | 0;
       $2698 = HEAP32[$2696 >> 2] | 0;
       $2701 = HEAP32[$2696 + 4 >> 2] | 0;
       $2702 = $2690 + 16 | 0;
       HEAP32[$2702 >> 2] = $2698;
       HEAP32[$2702 + 4 >> 2] = $2701;
       $2706 = $2698;
       $$pre$i$i$i$i$i$i1037 = HEAP32[$372 >> 2] | 0;
       do if ((HEAP32[$bindings65 >> 2] | 0) == ($372 | 0)) {
        $2727 = $372;
        label = 975;
       } else {
        $2708 = ($$pre$i$i$i$i$i$i1037 | 0) == 0;
        if ($2708) {
         $$0$i$i$i$i$i$i$i$i1041 = $372;
         while (1) {
          $2713 = HEAP32[$$0$i$i$i$i$i$i$i$i1041 + 8 >> 2] | 0;
          if ((HEAP32[$2713 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1041 | 0)) $$0$i$i$i$i$i$i$i$i1041 = $2713; else {
           $$cast$i$i$i$i$i$i$i$i1042$lcssa = $2713;
           break;
          }
         }
         $$01$i$i$i$i$i$i$i$i1044 = $$cast$i$i$i$i$i$i$i$i1042$lcssa;
        } else {
         $$0$i$i$i$i$i$i$i$i$i1039 = $$pre$i$i$i$i$i$i1037;
         while (1) {
          $2710 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1039 + 4 >> 2] | 0;
          if (!$2710) {
           $$0$i$i$i$i$i$i$i$i$i1039$lcssa = $$0$i$i$i$i$i$i$i$i$i1039;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i1039 = $2710;
         }
         $$01$i$i$i$i$i$i$i$i1044 = $$0$i$i$i$i$i$i$i$i$i1039$lcssa;
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i1044 + 16 >> 2] | 0) >>> 0 < $2706 >>> 0) {
         $2727 = $$01$i$i$i$i$i$i$i$i1044;
         label = 975;
        } else if ($2708) {
         $$0$i$i$i$i119$i$i1055 = $372;
         $2731 = $372;
         label = 985;
        } else {
         $__nd$0$i20$i$i$i$i$in$i$i1049 = $$pre$i$i$i$i$i$i1037;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i1051 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1049 + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i1051 >>> 0 > $2706 >>> 0) {
           $2720 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1049 >> 2] | 0;
           if (!$2720) {
            $$0$i$i$i$i119$i$i1055$ph = $__nd$0$i20$i$i$i$i$in$i$i1049;
            $__nd$0$i20$i$i$i$i$in$i$i1049$lcssa6607 = $__nd$0$i20$i$i$i$i$in$i$i1049;
            label = 984;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i1049$be = $2720;
          } else {
           if ($$idx2$val$i22$i$i$i$i$i$i1051 >>> 0 >= $2706 >>> 0) {
            $__nd$0$i20$i$i$i$i$in$i$i1049$lcssa = $__nd$0$i20$i$i$i$i$in$i$i1049;
            label = 988;
            break;
           }
           $2723 = $__nd$0$i20$i$i$i$i$in$i$i1049 + 4 | 0;
           $2724 = HEAP32[$2723 >> 2] | 0;
           if (!$2724) {
            $$0$i$i$i$i119$i$i1055$ph = $2723;
            $__nd$0$i20$i$i$i$i$in$i$i1049$lcssa6607 = $__nd$0$i20$i$i$i$i$in$i$i1049;
            label = 984;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i1049$be = $2724;
          }
          $__nd$0$i20$i$i$i$i$in$i$i1049 = $__nd$0$i20$i$i$i$i$in$i$i1049$be;
         }
         if ((label | 0) == 984) {
          label = 0;
          $$0$i$i$i$i119$i$i1055 = $$0$i$i$i$i119$i$i1055$ph;
          $2731 = $__nd$0$i20$i$i$i$i$in$i$i1049$lcssa6607;
          label = 985;
          break;
         } else if ((label | 0) == 988) {
          label = 0;
          $2739 = $__nd$0$i20$i$i$i$i$in$i$i1049$lcssa;
          label = 989;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 975) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i1037) {
         $$0$i$i$i$i119$i$i1055 = $372;
         $2731 = $372;
         label = 985;
        } else {
         $2726 = $2727 + 4 | 0;
         $$pre$i$i1053 = HEAP32[$2726 >> 2] | 0;
         if (!$$pre$i$i1053) {
          $$0$i$i$i$i119$i$i1055 = $2726;
          $2731 = $2727;
          label = 985;
         } else {
          $2739 = $$pre$i$i1053;
          label = 989;
         }
        }
       }
       if ((label | 0) == 985) {
        label = 0;
        HEAP32[$2690 >> 2] = 0;
        HEAP32[$2690 + 4 >> 2] = 0;
        HEAP32[$2690 + 8 >> 2] = $2731;
        HEAP32[$$0$i$i$i$i119$i$i1055 >> 2] = $2690;
        $2733 = HEAP32[HEAP32[$bindings65 >> 2] >> 2] | 0;
        if (!$2733) $2736 = $2690; else {
         HEAP32[$bindings65 >> 2] = $2733;
         $2736 = HEAP32[$$0$i$i$i$i119$i$i1055 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$370 >> 2] | 0, $2736);
        HEAP32[$371 >> 2] = (HEAP32[$371 >> 2] | 0) + 1;
        $2742 = $2694;
       } else if ((label | 0) == 989) {
        label = 0;
        if (($2739 | 0) == ($2690 | 0)) $2742 = $5607; else {
         __ZdlPv($2690);
         $2742 = $5607;
        }
       }
       $2743 = HEAP32[$2742 + 4 >> 2] | 0;
       if (!$2743) {
        $$0$i$i$i$i$i1064 = $2742;
        while (1) {
         $2748 = HEAP32[$$0$i$i$i$i$i1064 + 8 >> 2] | 0;
         if ((HEAP32[$2748 >> 2] | 0) == ($$0$i$i$i$i$i1064 | 0)) {
          $$cast$i$i$i$i$i1065$lcssa = $2748;
          break;
         } else $$0$i$i$i$i$i1064 = $2748;
        }
        $$01$i$i$i$i$i1067 = $$cast$i$i$i$i$i1065$lcssa;
       } else {
        $$0$i$i$i$i$i$i1062 = $2743;
        while (1) {
         $2745 = HEAP32[$$0$i$i$i$i$i$i1062 >> 2] | 0;
         if (!$2745) {
          $$0$i$i$i$i$i$i1062$lcssa = $$0$i$i$i$i$i$i1062;
          break;
         } else $$0$i$i$i$i$i$i1062 = $2745;
        }
        $$01$i$i$i$i$i1067 = $$0$i$i$i$i$i$i1062$lcssa;
       }
       if (($$01$i$i$i$i$i1067 | 0) == ($2686 | 0)) break; else {
        $2694 = $$01$i$i$i$i$i1067;
        $5607 = $$01$i$i$i$i$i1067;
       }
      }
      $$pre4967 = HEAP32[$372 >> 2] | 0;
      $__k$val$i1071 = HEAP32[HEAP32[$$lcssa6526 + 28 >> 2] >> 2] | 0;
      if (!$$pre4967) {
       $__k$val$i10714996 = $__k$val$i1071;
       label = 1009;
      } else {
       $__nd$0$i$i1072 = $$pre4967;
       while (1) {
        $2759 = HEAP32[$__nd$0$i$i1072 + 16 >> 2] | 0;
        if ($2759 >>> 0 > $__k$val$i1071 >>> 0) {
         $2761 = HEAP32[$__nd$0$i$i1072 >> 2] | 0;
         if (!$2761) {
          $$lcssa6611 = $__nd$0$i$i1072;
          $__nd$0$i$i1072$lcssa6609 = $__nd$0$i$i1072;
          label = 1004;
          break;
         } else $__nd$0$be$in$i$i1074 = $2761;
        } else {
         if ($2759 >>> 0 >= $__k$val$i1071 >>> 0) {
          $__nd$0$i$i1072$lcssa = $__nd$0$i$i1072;
          label = 1010;
          break;
         }
         $2764 = $__nd$0$i$i1072 + 4 | 0;
         $2765 = HEAP32[$2764 >> 2] | 0;
         if (!$2765) {
          $$lcssa6610 = $2764;
          $__nd$0$i$i1072$lcssa6608 = $__nd$0$i$i1072;
          label = 1008;
          break;
         } else $__nd$0$be$in$i$i1074 = $2765;
        }
        $__nd$0$i$i1072 = $__nd$0$be$in$i$i1074;
       }
       if ((label | 0) == 1004) {
        label = 0;
        HEAP32[$__parent$i1070 >> 2] = $__nd$0$i$i1072$lcssa6609;
        $$0$i7$i1079 = $$lcssa6611;
        $2775 = $__nd$0$i$i1072$lcssa6609;
        $__k$val$i10714994 = $__k$val$i1071;
        label = 1011;
        break;
       } else if ((label | 0) == 1008) {
        label = 0;
        HEAP32[$__parent$i1070 >> 2] = $__nd$0$i$i1072$lcssa6608;
        $$0$i7$i1079 = $$lcssa6610;
        $2775 = $__nd$0$i$i1072$lcssa6608;
        $__k$val$i10714994 = $__k$val$i1071;
        label = 1011;
        break;
       } else if ((label | 0) == 1010) {
        label = 0;
        HEAP32[$__parent$i1070 >> 2] = $__nd$0$i$i1072$lcssa;
        if (!$__nd$0$i$i1072$lcssa) {
         $$0$i7$i1079 = $__parent$i1070;
         $2775 = 0;
         $__k$val$i10714994 = $__k$val$i1071;
         label = 1011;
         break;
        } else {
         $__r$0$i1083 = $__nd$0$i$i1072$lcssa;
         break;
        }
       }
      }
     } while (0);
     if ((label | 0) == 1009) {
      label = 0;
      HEAP32[$__parent$i1070 >> 2] = $372;
      $$0$i7$i1079 = $372;
      $2775 = $372;
      $__k$val$i10714994 = $__k$val$i10714996;
      label = 1011;
     }
     if ((label | 0) == 1011) {
      label = 0;
      __THREW__ = 0;
      $2768 = invoke_ii(67, 24) | 0;
      $2769 = __THREW__;
      __THREW__ = 0;
      if ($2769 & 1) {
       label = 1017;
       break L1;
      }
      HEAP32[$2768 + 16 >> 2] = $__k$val$i10714994;
      HEAP32[$2768 + 20 >> 2] = 0;
      HEAP32[$2768 >> 2] = 0;
      HEAP32[$2768 + 4 >> 2] = 0;
      HEAP32[$2768 + 8 >> 2] = $2775;
      HEAP32[$$0$i7$i1079 >> 2] = $2768;
      $2777 = HEAP32[HEAP32[$bindings65 >> 2] >> 2] | 0;
      if (!$2777) $2780 = $2768; else {
       HEAP32[$bindings65 >> 2] = $2777;
       $2780 = HEAP32[$$0$i7$i1079 >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$370 >> 2] | 0, $2780);
      HEAP32[$371 >> 2] = (HEAP32[$371 >> 2] | 0) + 1;
      $__r$0$i1083 = $2768;
     }
     HEAP32[$__r$0$i1083 + 20 >> 2] = $2685;
     __THREW__ = 0;
     invoke_viiiiii(19, $198 | 0, $$lcssa6524 + 4 | 0, $$lcssa6526 | 0, HEAP32[$$lcssa6526 + 20 >> 2] | 0, HEAP32[$$lcssa6526 + 24 >> 2] | 0, $bindings65 | 0);
     $2789 = __THREW__;
     __THREW__ = 0;
     if ($2789 & 1) {
      label = 1017;
      break L1;
     }
     $2792 = HEAP32[$$lcssa6526 + 40 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$372 >> 2] | 0);
     $$010$be = $2792;
     break L586;
     break;
    }
   case 1670:
    {
     label = 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($198, $$lcssa6228 + 4 | 0, $$lcssa6305, HEAP32[$$lcssa6305 + 40 >> 2] | 0, HEAP32[$$lcssa6305 + 44 >> 2] | 0, $$lcssa6305 + 28 | 0);
     $$010$be = HEAP32[$$lcssa6305 + 48 >> 2] | 0;
     break L586;
     break;
    }
   case 1690:
    {
     label = 0;
     $4357 = HEAP32[$$idx$val$i842$lcssa6055 + -140 >> 2] | 0;
     if ((HEAP32[$204 >> 2] | 0) != 1) {
      $$lcssa6943 = $4357;
      label = 1691;
      break L1;
     }
     $4386 = HEAP32[((HEAP8[$205 >> 0] | 0) == 0 ? $4357 + 56 | 0 : $4357 + 52 | 0) >> 2] | 0;
     __ZN12_GLOBAL__N_15Stack3popEv($198);
     $$010$be = $4386;
     break L586;
     break;
    }
   case 1740:
    {
     label = 0;
     __ZN12_GLOBAL__N_15Stack3popEv($198);
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($198, $$lcssa6218 + 4 | 0, $$lcssa6227, HEAP32[$$lcssa6227 + 40 >> 2] | 0, HEAP32[$$lcssa6227 + 44 >> 2] | 0, $$lcssa6227 + 28 | 0);
     $$010$be = HEAP32[$$lcssa6227 + 48 >> 2] | 0;
     break L586;
     break;
    }
   case 1741:
    {
     label = 0;
     $4489 = HEAP32[$$idx$val$i842$lcssa6056$lcssa6202 + -96 >> 2] | 0;
     if (!$4489) {
      label = 1742;
      break L1;
     }
     if ((HEAP32[$204 >> 2] | 0) != 19) {
      $$lcssa6211$lcssa6942 = $$lcssa6211;
      label = 1744;
      break L1;
     }
     $4518 = __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[$237 >> 2] | 0, (HEAP32[$205 >> 2] | 0) + 8 | 0) | 0;
     __ZN12_GLOBAL__N_15Stack3popEv($198);
     $$010$be = __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $$lcssa6211 + 4 | 0, $4489, $4518) | 0;
     break L586;
     break;
    }
   case 1805:
    {
     label = 0;
     $4638 = HEAP32[$$idx$val$i842$lcssa6057 + -140 >> 2] | 0;
     $4639 = HEAP32[$204 >> 2] | 0;
     if (!(($4639 | 0) == 19 | ($4639 | 0) == 18 | ($4639 | 0) == 16)) {
      $$lcssa6941 = $4638;
      label = 1806;
      break L1;
     }
     $4663 = HEAP32[$4638 + 52 >> 2] | 0;
     HEAP32[$$lcssa6077 >> 2] = 10;
     $4664 = $$idx$val$i842$lcssa6057 + -104 | 0;
     HEAP32[$4664 + 0 >> 2] = HEAP32[$204 + 0 >> 2];
     HEAP32[$4664 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
     HEAP32[$4664 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
     HEAP32[$4664 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
     $$010$be = $4663;
     break L586;
     break;
    }
   case 1882:
    {
     label = 0;
     $$010$be = HEAP32[$$lcssa6198 + 8 >> 2] | 0;
     break L586;
     break;
    }
   case 1977:
    {
     label = 0;
     HEAP32[$$lcssa6080$lcssa6181 >> 2] = 14;
     $4980 = $$idx$val$i842$lcssa6060$lcssa6183 + -104 | 0;
     HEAP32[$4980 + 0 >> 2] = HEAP32[$204 + 0 >> 2];
     HEAP32[$4980 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
     HEAP32[$4980 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
     HEAP32[$4980 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
     $4981 = HEAP32[HEAP32[$$idx252$lcssa >> 2] >> 2] | 0;
     $4982 = $$idx$val$i842$lcssa6060$lcssa6183 + -16 | 0;
     $__k$val$i2178 = HEAP32[$$lcssa6187 + 56 >> 2] | 0;
     $4984 = $$idx$val$i842$lcssa6060$lcssa6183 + -12 | 0;
     $4985 = HEAP32[$4984 >> 2] | 0;
     do if (!$4985) {
      HEAP32[$0 >> 2] = $4984;
      $$0$i7$i2186 = $4984;
      $5002 = $4984;
      label = 1988;
     } else {
      $__nd$0$i$i2179 = $4985;
      while (1) {
       $4988 = HEAP32[$__nd$0$i$i2179 + 16 >> 2] | 0;
       if ($4988 >>> 0 > $__k$val$i2178 >>> 0) {
        $4990 = HEAP32[$__nd$0$i$i2179 >> 2] | 0;
        if (!$4990) {
         $$lcssa6606 = $__nd$0$i$i2179;
         $__nd$0$i$i2179$lcssa6604 = $__nd$0$i$i2179;
         label = 1981;
         break;
        } else $__nd$0$be$in$i$i2181 = $4990;
       } else {
        if ($4988 >>> 0 >= $__k$val$i2178 >>> 0) {
         $__nd$0$i$i2179$lcssa = $__nd$0$i$i2179;
         label = 1987;
         break;
        }
        $4993 = $__nd$0$i$i2179 + 4 | 0;
        $4994 = HEAP32[$4993 >> 2] | 0;
        if (!$4994) {
         $$lcssa6605 = $4993;
         $__nd$0$i$i2179$lcssa6603 = $__nd$0$i$i2179;
         label = 1985;
         break;
        } else $__nd$0$be$in$i$i2181 = $4994;
       }
       $__nd$0$i$i2179 = $__nd$0$be$in$i$i2181;
      }
      if ((label | 0) == 1981) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2179$lcssa6604;
       $$0$i7$i2186 = $$lcssa6606;
       $5002 = $__nd$0$i$i2179$lcssa6604;
       label = 1988;
       break;
      } else if ((label | 0) == 1985) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2179$lcssa6603;
       $$0$i7$i2186 = $$lcssa6605;
       $5002 = $__nd$0$i$i2179$lcssa6603;
       label = 1988;
       break;
      } else if ((label | 0) == 1987) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2179$lcssa;
       if (!$__nd$0$i$i2179$lcssa) {
        $$0$i7$i2186 = $0;
        $5002 = 0;
        label = 1988;
        break;
       } else {
        $$idx$val$i842$lcssa60606185 = $$idx$val$i842$lcssa6060$lcssa6183;
        $__r$0$i2190 = $__nd$0$i$i2179$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 1988) {
      label = 0;
      $4997 = __Znwj(24) | 0;
      HEAP32[$4997 + 16 >> 2] = $__k$val$i2178;
      HEAP32[$4997 + 20 >> 2] = 0;
      HEAP32[$4997 >> 2] = 0;
      HEAP32[$4997 + 4 >> 2] = 0;
      HEAP32[$4997 + 8 >> 2] = $5002;
      HEAP32[$$0$i7$i2186 >> 2] = $4997;
      $5004 = HEAP32[HEAP32[$4982 >> 2] >> 2] | 0;
      if (!$5004) $5008 = $4997; else {
       HEAP32[$4982 >> 2] = $5004;
       $5008 = HEAP32[$$0$i7$i2186 >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i842$lcssa6060$lcssa6183 + -12 >> 2] | 0, $5008);
      $5009 = $$idx$val$i842$lcssa6060$lcssa6183 + -8 | 0;
      HEAP32[$5009 >> 2] = (HEAP32[$5009 >> 2] | 0) + 1;
      $$idx$val$i842$lcssa60606185 = $$idx$val$i842$lcssa6060$lcssa6183;
      $__r$0$i2190 = $4997;
     }
     HEAP32[$__r$0$i2190 + 20 >> 2] = $4981;
     HEAP32[$$idx$val$i842$lcssa60606185 + -56 >> 2] = 0;
     $$010$be = HEAP32[$$lcssa6187 + 48 >> 2] | 0;
     break L586;
     break;
    }
   case 2137:
    {
     label = 0;
     $5313 = HEAP32[$$idx$val$lcssa + ($$lcssa6174 << 2) >> 2] | 0;
     $5314 = $$idx$val$i842$lcssa6061$lcssa6154 + -16 | 0;
     $__k$val$i2330 = HEAP32[$$lcssa6160 + 56 >> 2] | 0;
     $5316 = $$idx$val$i842$lcssa6061$lcssa6154 + -12 | 0;
     $5317 = HEAP32[$5316 >> 2] | 0;
     do if (!$5317) {
      HEAP32[$0 >> 2] = $5316;
      $$0$i7$i2338 = $5316;
      $5334 = $5316;
      label = 2148;
     } else {
      $__nd$0$i$i2331 = $5317;
      while (1) {
       $5320 = HEAP32[$__nd$0$i$i2331 + 16 >> 2] | 0;
       if ($5320 >>> 0 > $__k$val$i2330 >>> 0) {
        $5322 = HEAP32[$__nd$0$i$i2331 >> 2] | 0;
        if (!$5322) {
         $$lcssa6602 = $__nd$0$i$i2331;
         $__nd$0$i$i2331$lcssa6600 = $__nd$0$i$i2331;
         label = 2141;
         break;
        } else $__nd$0$be$in$i$i2333 = $5322;
       } else {
        if ($5320 >>> 0 >= $__k$val$i2330 >>> 0) {
         $__nd$0$i$i2331$lcssa = $__nd$0$i$i2331;
         label = 2147;
         break;
        }
        $5325 = $__nd$0$i$i2331 + 4 | 0;
        $5326 = HEAP32[$5325 >> 2] | 0;
        if (!$5326) {
         $$lcssa6601 = $5325;
         $__nd$0$i$i2331$lcssa6599 = $__nd$0$i$i2331;
         label = 2145;
         break;
        } else $__nd$0$be$in$i$i2333 = $5326;
       }
       $__nd$0$i$i2331 = $__nd$0$be$in$i$i2333;
      }
      if ((label | 0) == 2141) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2331$lcssa6600;
       $$0$i7$i2338 = $$lcssa6602;
       $5334 = $__nd$0$i$i2331$lcssa6600;
       label = 2148;
       break;
      } else if ((label | 0) == 2145) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2331$lcssa6599;
       $$0$i7$i2338 = $$lcssa6601;
       $5334 = $__nd$0$i$i2331$lcssa6599;
       label = 2148;
       break;
      } else if ((label | 0) == 2147) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2331$lcssa;
       if (!$__nd$0$i$i2331$lcssa) {
        $$0$i7$i2338 = $0;
        $5334 = 0;
        label = 2148;
        break;
       } else {
        $__r$0$i2342 = $__nd$0$i$i2331$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 2148) {
      label = 0;
      $5329 = __Znwj(24) | 0;
      HEAP32[$5329 + 16 >> 2] = $__k$val$i2330;
      HEAP32[$5329 + 20 >> 2] = 0;
      HEAP32[$5329 >> 2] = 0;
      HEAP32[$5329 + 4 >> 2] = 0;
      HEAP32[$5329 + 8 >> 2] = $5334;
      HEAP32[$$0$i7$i2338 >> 2] = $5329;
      $5336 = HEAP32[HEAP32[$5314 >> 2] >> 2] | 0;
      if (!$5336) $5340 = $5329; else {
       HEAP32[$5314 >> 2] = $5336;
       $5340 = HEAP32[$$0$i7$i2338 >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i842$lcssa6061$lcssa6154 + -12 >> 2] | 0, $5340);
      $5341 = $$idx$val$i842$lcssa6061$lcssa6154 + -8 | 0;
      HEAP32[$5341 >> 2] = (HEAP32[$5341 >> 2] | 0) + 1;
      $__r$0$i2342 = $5329;
     }
     HEAP32[$__r$0$i2342 + 20 >> 2] = $5313;
     $$010$be = HEAP32[$$lcssa6160 + 48 >> 2] | 0;
     break L586;
     break;
    }
   }
  } while (0);
  $$010 = $$010$be;
 }
 L2047 : switch (label | 0) {
 case 35:
  {
   $$107 = ___cxa_find_matching_catch() | 0;
   $$107134 = tempRet0;
   ___resumeException($$107 | 0);
   break;
  }
 case 74:
  {
   $526 = ___cxa_find_matching_catch() | 0;
   $527 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$215 >> 2] | 0);
   $eh$lpad$body$i$index8Z2D = $527;
   $eh$lpad$body$i$indexZ2D = $526;
   label = 142;
   break;
  }
 case 83:
  {
   $551 = ___cxa_find_matching_catch() | 0;
   $552 = tempRet0;
   $553 = HEAP32[$1 >> 2] | 0;
   $555 = $553;
   if ($553) {
    $556 = HEAP32[$216 >> 2] | 0;
    if (($556 | 0) != ($553 | 0)) HEAP32[$216 >> 2] = $556 + (~(($556 + -4 - $555 | 0) >>> 2) << 2);
    __ZdlPv($553);
   }
   $$0$i$i = $552;
   $$01$i$i = $551;
   label = 135;
   break;
  }
 case 106:
  {
   $609 = ___cxa_find_matching_catch() | 0;
   $610 = tempRet0;
   __ZdlPv($$lcssa6939);
   $eh$lpad$body$i$i$index2Z2D = $610;
   $eh$lpad$body$i$i$indexZ2D = $609;
   label = 131;
   break;
  }
 case 130:
  {
   $676 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$i$indexZ2D = $676;
   label = 131;
   break;
  }
 case 140:
  {
   $697 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $697;
   $710 = HEAP32[$212 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $710);
   ___resumeException($$01$i | 0);
   break;
  }
 case 141:
  {
   $699 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index8Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $699;
   label = 142;
   break;
  }
 case 191:
  {
   $792 = ___cxa_find_matching_catch() | 0;
   $793 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($11, HEAP32[$229 >> 2] | 0);
   $eh$lpad$body$index26Z2D = $793;
   $eh$lpad$body$indexZ2D = $792;
   break;
  }
 case 230:
  {
   $860 = ___cxa_find_matching_catch() | 0;
   $861 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($9, HEAP32[$233 >> 2] | 0);
   $eh$lpad$body$i524$index20Z2D = $861;
   $eh$lpad$body$i524$indexZ2D = $860;
   label = 298;
   break;
  }
 case 239:
  {
   $885 = ___cxa_find_matching_catch() | 0;
   $886 = tempRet0;
   $887 = HEAP32[$10 >> 2] | 0;
   $889 = $887;
   if ($887) {
    $890 = HEAP32[$234 >> 2] | 0;
    if (($890 | 0) != ($887 | 0)) HEAP32[$234 >> 2] = $890 + (~(($890 + -4 - $889 | 0) >>> 2) << 2);
    __ZdlPv($887);
   }
   $$0$i$i518 = $886;
   $$01$i$i517 = $885;
   label = 291;
   break;
  }
 case 262:
  {
   $945 = ___cxa_find_matching_catch() | 0;
   $946 = tempRet0;
   __ZdlPv($$lcssa6937);
   $eh$lpad$body$i$i511$index14Z2D = $946;
   $eh$lpad$body$i$i511$indexZ2D = $945;
   label = 287;
   break;
  }
 case 286:
  {
   $1012 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$i511$index14Z2D = tempRet0;
   $eh$lpad$body$i$i511$indexZ2D = $1012;
   label = 287;
   break;
  }
 case 296:
  {
   $1033 = ___cxa_find_matching_catch() | 0;
   $$0$i527 = tempRet0;
   $$01$i526 = $1033;
   label = 302;
   break;
  }
 case 297:
  {
   $1035 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i524$index20Z2D = tempRet0;
   $eh$lpad$body$i524$indexZ2D = $1035;
   label = 298;
   break;
  }
 case 310:
  {
   $1065 = ___cxa_find_matching_catch() | 0;
   $1066 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($16, HEAP32[$240 >> 2] | 0);
   $$107 = $1065;
   $$107134 = $1066;
   ___resumeException($$107 | 0);
   break;
  }
 case 409:
  {
   $1304 = ___cxa_find_matching_catch() | 0;
   $1305 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($23, HEAP32[$257 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($22, HEAP32[$254 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$251 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$248 >> 2] | 0);
   $$107 = $1304;
   $$107134 = $1305;
   ___resumeException($$107 | 0);
   break;
  }
 case 412:
  {
   $1317 = ___cxa_find_matching_catch() | 0;
   $1318 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$258 >> 2] | 0);
   $$107 = $1317;
   $$107134 = $1318;
   ___resumeException($$107 | 0);
   break;
  }
 case 426:
  {
   $1346 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $24 | 0, 37600, 50);
   $1347 = __THREW__;
   __THREW__ = 0;
   if ($1347 & 1) {
    $1354 = ___cxa_find_matching_catch() | 0;
    $$2172554 = $1354;
    $$2292553 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $1346 | 0, $198 | 0, $$010$lcssa6614 + 4 | 0, $24 | 0);
    $1350 = __THREW__;
    __THREW__ = 0;
    if ($1350 & 1) $$0141 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1346 | 0, 36640, 183);
     $1352 = __THREW__;
     __THREW__ = 0;
     if ($1352 & 1) $$0141 = 0; else {}
    }
    $1356 = ___cxa_find_matching_catch() | 0;
    $1357 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    if ($$0141) {
     $$2172554 = $1356;
     $$2292553 = $1357;
    } else {
     $$107 = $1356;
     $$107134 = $1357;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($1346 | 0);
   $$107 = $$2172554;
   $$107134 = $$2292553;
   ___resumeException($$107 | 0);
   break;
  }
 case 478:
  {
   $1473 = $$lcssa6935;
   label = 480;
   break;
  }
 case 479:
  {
   $1473 = $$lcssa6936;
   label = 480;
   break;
  }
 case 490:
  {
   $1516 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 37704, 29) | 0, HEAP32[$$lcssa6773 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1516 + (HEAP32[(HEAP32[$1516 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1521 = invoke_iii(22, $0 | 0, 47968) | 0;
   $1522 = __THREW__;
   __THREW__ = 0;
   if ($1522 & 1) {
    $1530 = ___cxa_find_matching_catch() | 0;
    $1531 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1530 | 0);
   }
   __THREW__ = 0;
   $1527 = invoke_iii(HEAP32[(HEAP32[$1521 >> 2] | 0) + 28 >> 2] | 0, $1521 | 0, 10) | 0;
   $1528 = __THREW__;
   __THREW__ = 0;
   if ($1528 & 1) {
    $1530 = ___cxa_find_matching_catch() | 0;
    $1531 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1530 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1516, $1527) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1516) | 0;
    _abort();
   }
   break;
  }
 case 496:
  {
   $1538 = ___cxa_allocate_exception(24) | 0;
   $1539 = $$lcssa6568 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $26 | 0, HEAP32[$204 >> 2] | 0);
   $1540 = __THREW__;
   __THREW__ = 0;
   do if ($1540 & 1) {
    $1549 = ___cxa_find_matching_catch() | 0;
    $$4192557 = $1549;
    $$4312556 = tempRet0;
   } else {
    __THREW__ = 0;
    $1542 = invoke_iiii(29, $26 | 0, 0, 37736) | 0;
    $1543 = __THREW__;
    __THREW__ = 0;
    if ($1543 & 1) {
     $1551 = ___cxa_find_matching_catch() | 0;
     $1552 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
     $$4192557 = $1551;
     $$4312556 = $1552;
     break;
    };
    HEAP32[$25 + 0 >> 2] = HEAP32[$1542 + 0 >> 2];
    HEAP32[$25 + 4 >> 2] = HEAP32[$1542 + 4 >> 2];
    HEAP32[$25 + 8 >> 2] = HEAP32[$1542 + 8 >> 2];
    HEAP32[$1542 + 0 >> 2] = 0;
    HEAP32[$1542 + 4 >> 2] = 0;
    HEAP32[$1542 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $1538 | 0, $198 | 0, $1539 | 0, $25 | 0);
    $1545 = __THREW__;
    __THREW__ = 0;
    if ($1545 & 1) $$0145 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1538 | 0, 36640, 183);
     $1547 = __THREW__;
     __THREW__ = 0;
     if ($1547 & 1) $$0145 = 0; else {}
    }
    $1553 = ___cxa_find_matching_catch() | 0;
    $1554 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
    if ($$0145) {
     $$4192557 = $1553;
     $$4312556 = $1554;
    } else {
     $$107 = $1553;
     $$107134 = $1554;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($1538 | 0);
   $$107 = $$4192557;
   $$107134 = $$4312556;
   ___resumeException($$107 | 0);
   break;
  }
 case 508:
  {
   $1575 = $ss + 64 | 0;
   $1576 = $ss + 8 | 0;
   HEAP32[$1576 >> 2] = 592;
   $1577 = $ss + 12 | 0;
   HEAP32[$ss >> 2] = 740;
   HEAP32[$1575 >> 2] = 760;
   HEAP32[$ss + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss + 64 | 0, $1577 | 0);
   $1580 = __THREW__;
   __THREW__ = 0;
   if ($1580 & 1) {
    $1592 = ___cxa_find_matching_catch() | 0;
    $$0$i701 = tempRet0;
    $$01$i700 = $1592;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1575);
    ___resumeException($$01$i700 | 0);
   }
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 572;
   HEAP32[$1575 >> 2] = 612;
   HEAP32[$1576 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $1577 | 0);
   $1584 = __THREW__;
   __THREW__ = 0;
   do if ($1584 & 1) {
    $1594 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i698$index31Z2D = tempRet0;
    $eh$lpad$body$i698$indexZ2D = $1594;
   } else {
    HEAP32[$1577 >> 2] = 904;
    $1586 = $ss + 44 | 0;
    HEAP32[$1586 + 0 >> 2] = 0;
    HEAP32[$1586 + 4 >> 2] = 0;
    HEAP32[$1586 + 8 >> 2] = 0;
    HEAP32[$1586 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $1577 | 0, $0 | 0);
    $1588 = __THREW__;
    __THREW__ = 0;
    if ($1588 & 1) {
     $1590 = ___cxa_find_matching_catch() | 0;
     $1591 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1586);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1577);
     $eh$lpad$body$i698$index31Z2D = $1591;
     $eh$lpad$body$i698$indexZ2D = $1590;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $1596 = invoke_iiii(25, $1576 | 0, 37776, 9) | 0;
    $1597 = __THREW__;
    __THREW__ = 0;
    do if ($1597 & 1) label = 524; else {
     __THREW__ = 0;
     $1605 = invoke_iii(24, $1596 | 0, (HEAP32[$$lcssa6587 >> 2] | 0) - (HEAP32[$$lcssa6593 >> 2] | 0) >> 2 | 0) | 0;
     $1606 = __THREW__;
     __THREW__ = 0;
     if ($1606 & 1) label = 524; else {
      __THREW__ = 0;
      $1608 = invoke_iiii(25, $1605 | 0, 37792, 16) | 0;
      $1609 = __THREW__;
      __THREW__ = 0;
      if ($1609 & 1) label = 524; else {
       __THREW__ = 0;
       $1617 = invoke_iii(24, $1608 | 0, (HEAP32[$$lcssa6575 >> 2] | 0) - (HEAP32[$$lcssa6581 >> 2] | 0) >> 2 | 0) | 0;
       $1618 = __THREW__;
       __THREW__ = 0;
       if ($1618 & 1) label = 524; else {
        __THREW__ = 0;
        invoke_iiii(25, $1617 | 0, 43448, 1) | 0;
        $1620 = __THREW__;
        __THREW__ = 0;
        if ($1620 & 1) label = 524; else {
         $1622 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $27 | 0, $1577 | 0);
         $1623 = __THREW__;
         __THREW__ = 0;
         if ($1623 & 1) {
          $1632 = ___cxa_find_matching_catch() | 0;
          $$5202561 = $1632;
          $$5322560 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(16, $1622 | 0, $198 | 0, $$lcssa6569 + 4 | 0, $27 | 0);
          $1626 = __THREW__;
          __THREW__ = 0;
          if ($1626 & 1) $$0148 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $1622 | 0, 36640, 183);
           $1628 = __THREW__;
           __THREW__ = 0;
           if ($1628 & 1) $$0148 = 0; else {}
          }
          $1634 = ___cxa_find_matching_catch() | 0;
          $1635 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
          if ($$0148) {
           $$5202561 = $1634;
           $$5322560 = $1635;
          } else {
           $$6 = $1634;
           $$633 = $1635;
           break;
          }
         }
         ___cxa_free_exception($1622 | 0);
         $$6 = $$5202561;
         $$633 = $$5322560;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 524) {
     $1630 = ___cxa_find_matching_catch() | 0;
     $$6 = $1630;
     $$633 = tempRet0;
    }
    HEAP32[$ss >> 2] = 572;
    HEAP32[$1575 >> 2] = 612;
    HEAP32[$1576 >> 2] = 592;
    HEAP32[$1577 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1586);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1577);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1575);
    $$107 = $$6;
    $$107134 = $$633;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i701 = $eh$lpad$body$i698$index31Z2D;
   $$01$i700 = $eh$lpad$body$i698$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1575);
   ___resumeException($$01$i700 | 0);
   break;
  }
 case 561:
  {
   $1731 = ___cxa_find_matching_catch() | 0;
   $1733 = HEAP32[$args >> 2] | 0;
   if (!$1733) ___resumeException($1731 | 0);
   $1736 = HEAP32[$259 >> 2] | 0;
   if (($1736 | 0) != ($1733 | 0)) HEAP32[$259 >> 2] = $1736 + (~(($1736 + -4 - $1733 | 0) >>> 2) << 2);
   __ZdlPv($1733);
   ___resumeException($1731 | 0);
   break;
  }
 case 596:
  {
   $1814 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body801$index36Z2D = tempRet0;
   $eh$lpad$body801$indexZ2D = $1814;
   label = 597;
   break;
  }
 case 637:
  {
   $1883 = ___cxa_find_matching_catch() | 0;
   $1884 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$263 >> 2] | 0);
   $eh$lpad$body801$index36Z2D = $1884;
   $eh$lpad$body801$indexZ2D = $1883;
   label = 597;
   break;
  }
 case 654:
  {
   $1930 = $$lcssa6146;
   $lpad$phi2724$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2724$index41 = tempRet0;
   label = 656;
   break;
  }
 case 655:
  {
   $1928 = ___cxa_find_matching_catch() | 0;
   $1930 = HEAP32[$263 >> 2] | 0;
   $lpad$phi2724$index = $1928;
   $lpad$phi2724$index41 = tempRet0;
   label = 656;
   break;
  }
 case 684:
  {
   $1988 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 37816, 42) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1988 + (HEAP32[(HEAP32[$1988 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1993 = invoke_iii(22, $0 | 0, 47968) | 0;
   $1994 = __THREW__;
   __THREW__ = 0;
   if ($1994 & 1) {
    $2002 = ___cxa_find_matching_catch() | 0;
    $2003 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($2002 | 0);
   }
   __THREW__ = 0;
   $1999 = invoke_iii(HEAP32[(HEAP32[$1993 >> 2] | 0) + 28 >> 2] | 0, $1993 | 0, 10) | 0;
   $2000 = __THREW__;
   __THREW__ = 0;
   if ($2000 & 1) {
    $2002 = ___cxa_find_matching_catch() | 0;
    $2003 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($2002 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1988, $1999) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1988) | 0;
    _abort();
   }
   break;
  }
 case 689:
  {
   $2006 = ___cxa_allocate_exception(24) | 0;
   $2007 = $$lcssa6087$lcssa + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $35 | 0, HEAP32[$$lcssa6098$lcssa >> 2] | 0);
   $2009 = __THREW__;
   __THREW__ = 0;
   do if ($2009 & 1) {
    $2061 = ___cxa_find_matching_catch() | 0;
    $$162564 = $2061;
    $$16432563 = tempRet0;
   } else {
    __THREW__ = 0;
    $2011 = invoke_iiii(29, $35 | 0, 0, 37864) | 0;
    $2012 = __THREW__;
    __THREW__ = 0;
    if ($2012 & 1) {
     $2063 = ___cxa_find_matching_catch() | 0;
     $2064 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
     $$162564 = $2063;
     $$16432563 = $2064;
     break;
    };
    HEAP32[$34 + 0 >> 2] = HEAP32[$2011 + 0 >> 2];
    HEAP32[$34 + 4 >> 2] = HEAP32[$2011 + 4 >> 2];
    HEAP32[$34 + 8 >> 2] = HEAP32[$2011 + 8 >> 2];
    HEAP32[$2011 + 0 >> 2] = 0;
    HEAP32[$2011 + 4 >> 2] = 0;
    HEAP32[$2011 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2014 = invoke_iii(27, $34 | 0, 37888) | 0;
    $2015 = __THREW__;
    __THREW__ = 0;
    if ($2015 & 1) {
     $2065 = ___cxa_find_matching_catch() | 0;
     $$14 = $2065;
     $$1441 = tempRet0;
     $$7160 = 1;
    } else {
     HEAP32[$33 + 0 >> 2] = HEAP32[$2014 + 0 >> 2];
     HEAP32[$33 + 4 >> 2] = HEAP32[$2014 + 4 >> 2];
     HEAP32[$33 + 8 >> 2] = HEAP32[$2014 + 8 >> 2];
     HEAP32[$2014 + 0 >> 2] = 0;
     HEAP32[$2014 + 4 >> 2] = 0;
     HEAP32[$2014 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(61, $36 | 0, HEAP32[$$lcssa6090$lcssa >> 2] | 0);
     $2017 = __THREW__;
     __THREW__ = 0;
     if ($2017 & 1) {
      $2067 = ___cxa_find_matching_catch() | 0;
      $$1321 = $2067;
      $$1340 = tempRet0;
      $$6159 = 1;
     } else {
      $2019 = HEAP8[$36 >> 0] | 0;
      if (!($2019 & 1)) {
       $2029 = $36 + 1 | 0;
       $2030 = ($2019 & 255) >>> 1;
      } else {
       $2029 = HEAP32[$36 + 8 >> 2] | 0;
       $2030 = HEAP32[$36 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $2031 = invoke_iiii(31, $33 | 0, $2029 | 0, $2030 | 0) | 0;
      $2032 = __THREW__;
      __THREW__ = 0;
      if ($2032 & 1) {
       $2069 = ___cxa_find_matching_catch() | 0;
       $$12 = $2069;
       $$1239 = tempRet0;
       $$5158 = 1;
      } else {
       HEAP32[$32 + 0 >> 2] = HEAP32[$2031 + 0 >> 2];
       HEAP32[$32 + 4 >> 2] = HEAP32[$2031 + 4 >> 2];
       HEAP32[$32 + 8 >> 2] = HEAP32[$2031 + 8 >> 2];
       HEAP32[$2031 + 0 >> 2] = 0;
       HEAP32[$2031 + 4 >> 2] = 0;
       HEAP32[$2031 + 8 >> 2] = 0;
       __THREW__ = 0;
       $2034 = invoke_iii(27, $32 | 0, 37920) | 0;
       $2035 = __THREW__;
       __THREW__ = 0;
       if ($2035 & 1) {
        $2071 = ___cxa_find_matching_catch() | 0;
        $$11 = $2071;
        $$1138 = tempRet0;
        $$4157 = 1;
       } else {
        HEAP32[$31 + 0 >> 2] = HEAP32[$2034 + 0 >> 2];
        HEAP32[$31 + 4 >> 2] = HEAP32[$2034 + 4 >> 2];
        HEAP32[$31 + 8 >> 2] = HEAP32[$2034 + 8 >> 2];
        HEAP32[$2034 + 0 >> 2] = 0;
        HEAP32[$2034 + 4 >> 2] = 0;
        HEAP32[$2034 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(61, $37 | 0, HEAP32[$204 >> 2] | 0);
        $2037 = __THREW__;
        __THREW__ = 0;
        if ($2037 & 1) {
         $2073 = ___cxa_find_matching_catch() | 0;
         $$10 = $2073;
         $$1037 = tempRet0;
         $$3156 = 1;
        } else {
         $2039 = HEAP8[$37 >> 0] | 0;
         if (!($2039 & 1)) {
          $2049 = $37 + 1 | 0;
          $2050 = ($2039 & 255) >>> 1;
         } else {
          $2049 = HEAP32[$37 + 8 >> 2] | 0;
          $2050 = HEAP32[$37 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         $2051 = invoke_iiii(31, $31 | 0, $2049 | 0, $2050 | 0) | 0;
         $2052 = __THREW__;
         __THREW__ = 0;
         if ($2052 & 1) {
          $2075 = ___cxa_find_matching_catch() | 0;
          $$2155 = 1;
          $$9 = $2075;
          $$936 = tempRet0;
         } else {
          HEAP32[$30 + 0 >> 2] = HEAP32[$2051 + 0 >> 2];
          HEAP32[$30 + 4 >> 2] = HEAP32[$2051 + 4 >> 2];
          HEAP32[$30 + 8 >> 2] = HEAP32[$2051 + 8 >> 2];
          HEAP32[$2051 + 0 >> 2] = 0;
          HEAP32[$2051 + 4 >> 2] = 0;
          HEAP32[$2051 + 8 >> 2] = 0;
          __THREW__ = 0;
          $2054 = invoke_iii(27, $30 | 0, 43448) | 0;
          $2055 = __THREW__;
          __THREW__ = 0;
          if ($2055 & 1) {
           $2077 = ___cxa_find_matching_catch() | 0;
           $$1154 = 1;
           $$8 = $2077;
           $$835 = tempRet0;
          } else {
           HEAP32[$29 + 0 >> 2] = HEAP32[$2054 + 0 >> 2];
           HEAP32[$29 + 4 >> 2] = HEAP32[$2054 + 4 >> 2];
           HEAP32[$29 + 8 >> 2] = HEAP32[$2054 + 8 >> 2];
           HEAP32[$2054 + 0 >> 2] = 0;
           HEAP32[$2054 + 4 >> 2] = 0;
           HEAP32[$2054 + 8 >> 2] = 0;
           __THREW__ = 0;
           invoke_viiii(16, $2006 | 0, $198 | 0, $2007 | 0, $29 | 0);
           $2057 = __THREW__;
           __THREW__ = 0;
           do if ($2057 & 1) $$0153 = 1; else {
            __THREW__ = 0;
            invoke_viii(4, $2006 | 0, 36640, 183);
            $2059 = __THREW__;
            __THREW__ = 0;
            if ($2059 & 1) {
             $$0153 = 0;
             break;
            }
           } while (0);
           $2079 = ___cxa_find_matching_catch() | 0;
           $2080 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
           $$1154 = $$0153;
           $$8 = $2079;
           $$835 = $2080;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
          $$2155 = $$1154;
          $$9 = $$8;
          $$936 = $$835;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
         $$10 = $$9;
         $$1037 = $$936;
         $$3156 = $$2155;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
        $$11 = $$10;
        $$1138 = $$1037;
        $$4157 = $$3156;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
       $$12 = $$11;
       $$1239 = $$1138;
       $$5158 = $$4157;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
      $$1321 = $$12;
      $$1340 = $$1239;
      $$6159 = $$5158;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
     $$14 = $$1321;
     $$1441 = $$1340;
     $$7160 = $$6159;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
    if ($$7160) {
     $$162564 = $$14;
     $$16432563 = $$1441;
    } else {
     $$107 = $$14;
     $$107134 = $$1441;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2006 | 0);
   $$107 = $$162564;
   $$107134 = $$16432563;
   ___resumeException($$107 | 0);
   break;
  }
 case 746:
  {
   $lpad$phi2730$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2730$index47 = tempRet0;
   label = 749;
   break;
  }
 case 747:
  {
   $lpad$phi2730$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2730$index47 = tempRet0;
   label = 749;
   break;
  }
 case 748:
  {
   $lpad$phi2730$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2730$index47 = tempRet0;
   label = 749;
   break;
  }
 case 779:
  {
   $2205 = ___cxa_allocate_exception(24) | 0;
   $2206 = $$lcssa6087$lcssa6563 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $41 | 0, HEAP32[$$lcssa6098$lcssa6537 >> 2] | 0);
   $2208 = __THREW__;
   __THREW__ = 0;
   do if ($2208 & 1) {
    $2220 = ___cxa_find_matching_catch() | 0;
    $$192568 = $2220;
    $$19462567 = tempRet0;
   } else {
    __THREW__ = 0;
    $2210 = invoke_iiii(29, $41 | 0, 0, 37864) | 0;
    $2211 = __THREW__;
    __THREW__ = 0;
    if ($2211 & 1) {
     $2222 = ___cxa_find_matching_catch() | 0;
     $2223 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
     $$192568 = $2222;
     $$19462567 = $2223;
     break;
    };
    HEAP32[$40 + 0 >> 2] = HEAP32[$2210 + 0 >> 2];
    HEAP32[$40 + 4 >> 2] = HEAP32[$2210 + 4 >> 2];
    HEAP32[$40 + 8 >> 2] = HEAP32[$2210 + 8 >> 2];
    HEAP32[$2210 + 0 >> 2] = 0;
    HEAP32[$2210 + 4 >> 2] = 0;
    HEAP32[$2210 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2213 = invoke_iii(27, $40 | 0, 37928) | 0;
    $2214 = __THREW__;
    __THREW__ = 0;
    if ($2214 & 1) {
     $2224 = ___cxa_find_matching_catch() | 0;
     $$1167 = 1;
     $$1722 = $2224;
     $$1744 = tempRet0;
    } else {
     HEAP32[$39 + 0 >> 2] = HEAP32[$2213 + 0 >> 2];
     HEAP32[$39 + 4 >> 2] = HEAP32[$2213 + 4 >> 2];
     HEAP32[$39 + 8 >> 2] = HEAP32[$2213 + 8 >> 2];
     HEAP32[$2213 + 0 >> 2] = 0;
     HEAP32[$2213 + 4 >> 2] = 0;
     HEAP32[$2213 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2205 | 0, $198 | 0, $2206 | 0, $39 | 0);
     $2216 = __THREW__;
     __THREW__ = 0;
     if ($2216 & 1) $$0166 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2205 | 0, 36640, 183);
      $2218 = __THREW__;
      __THREW__ = 0;
      if ($2218 & 1) $$0166 = 0; else {}
     }
     $2226 = ___cxa_find_matching_catch() | 0;
     $2227 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
     $$1167 = $$0166;
     $$1722 = $2226;
     $$1744 = $2227;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
    if ($$1167) {
     $$192568 = $$1722;
     $$19462567 = $$1744;
    } else {
     $$107 = $$1722;
     $$107134 = $$1744;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2205 | 0);
   $$107 = $$192568;
   $$107134 = $$19462567;
   ___resumeException($$107 | 0);
   break;
  }
 case 797:
  {
   $2242 = ___cxa_allocate_exception(24) | 0;
   $2243 = $$lcssa6087$lcssa6562 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $44 | 0, HEAP32[$$lcssa6098$lcssa6536 >> 2] | 0);
   $2245 = __THREW__;
   __THREW__ = 0;
   do if ($2245 & 1) {
    $2257 = ___cxa_find_matching_catch() | 0;
    $$222572 = $2257;
    $$22492571 = tempRet0;
   } else {
    __THREW__ = 0;
    $2247 = invoke_iiii(29, $44 | 0, 0, 37864) | 0;
    $2248 = __THREW__;
    __THREW__ = 0;
    if ($2248 & 1) {
     $2259 = ___cxa_find_matching_catch() | 0;
     $2260 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     $$222572 = $2259;
     $$22492571 = $2260;
     break;
    };
    HEAP32[$43 + 0 >> 2] = HEAP32[$2247 + 0 >> 2];
    HEAP32[$43 + 4 >> 2] = HEAP32[$2247 + 4 >> 2];
    HEAP32[$43 + 8 >> 2] = HEAP32[$2247 + 8 >> 2];
    HEAP32[$2247 + 0 >> 2] = 0;
    HEAP32[$2247 + 4 >> 2] = 0;
    HEAP32[$2247 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2250 = invoke_iii(27, $43 | 0, 37960) | 0;
    $2251 = __THREW__;
    __THREW__ = 0;
    if ($2251 & 1) {
     $2261 = ___cxa_find_matching_catch() | 0;
     $$1173 = 1;
     $$20 = $2261;
     $$2047 = tempRet0;
    } else {
     HEAP32[$42 + 0 >> 2] = HEAP32[$2250 + 0 >> 2];
     HEAP32[$42 + 4 >> 2] = HEAP32[$2250 + 4 >> 2];
     HEAP32[$42 + 8 >> 2] = HEAP32[$2250 + 8 >> 2];
     HEAP32[$2250 + 0 >> 2] = 0;
     HEAP32[$2250 + 4 >> 2] = 0;
     HEAP32[$2250 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2242 | 0, $198 | 0, $2243 | 0, $42 | 0);
     $2253 = __THREW__;
     __THREW__ = 0;
     if ($2253 & 1) $$0172 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2242 | 0, 36640, 183);
      $2255 = __THREW__;
      __THREW__ = 0;
      if ($2255 & 1) $$0172 = 0; else {}
     }
     $2263 = ___cxa_find_matching_catch() | 0;
     $2264 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
     $$1173 = $$0172;
     $$20 = $2263;
     $$2047 = $2264;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    if ($$1173) {
     $$222572 = $$20;
     $$22492571 = $$2047;
    } else {
     $$107 = $$20;
     $$107134 = $$2047;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2242 | 0);
   $$107 = $$222572;
   $$107134 = $$22492571;
   ___resumeException($$107 | 0);
   break;
  }
 case 813:
  {
   $2282 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $48 | 0, 37992, 17);
   $2283 = __THREW__;
   __THREW__ = 0;
   if ($2283 & 1) {
    $2290 = ___cxa_find_matching_catch() | 0;
    $$232576 = $2290;
    $$23502575 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $2282 | 0, $198 | 0, $$lcssa6087$lcssa6561 + 4 | 0, $48 | 0);
    $2286 = __THREW__;
    __THREW__ = 0;
    if ($2286 & 1) $$0180 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2282 | 0, 36640, 183);
     $2288 = __THREW__;
     __THREW__ = 0;
     if ($2288 & 1) $$0180 = 0; else {}
    }
    $2292 = ___cxa_find_matching_catch() | 0;
    $2293 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    if ($$0180) {
     $$232576 = $2292;
     $$23502575 = $2293;
    } else {
     $$107 = $2292;
     $$107134 = $2293;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($2282 | 0);
   $$107 = $$232576;
   $$107134 = $$23502575;
   ___resumeException($$107 | 0);
   break;
  }
 case 829:
  {
   $2353 = ___cxa_allocate_exception(24) | 0;
   $2354 = $$lcssa6087$lcssa6560 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $52 | 0, HEAP32[$$lcssa6098$lcssa6534 >> 2] | 0);
   $2356 = __THREW__;
   __THREW__ = 0;
   do if ($2356 & 1) {
    $2368 = ___cxa_find_matching_catch() | 0;
    $$262579 = $2368;
    $$26532578 = tempRet0;
   } else {
    __THREW__ = 0;
    $2358 = invoke_iiii(29, $52 | 0, 0, 37864) | 0;
    $2359 = __THREW__;
    __THREW__ = 0;
    if ($2359 & 1) {
     $2370 = ___cxa_find_matching_catch() | 0;
     $2371 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$262579 = $2370;
     $$26532578 = $2371;
     break;
    };
    HEAP32[$51 + 0 >> 2] = HEAP32[$2358 + 0 >> 2];
    HEAP32[$51 + 4 >> 2] = HEAP32[$2358 + 4 >> 2];
    HEAP32[$51 + 8 >> 2] = HEAP32[$2358 + 8 >> 2];
    HEAP32[$2358 + 0 >> 2] = 0;
    HEAP32[$2358 + 4 >> 2] = 0;
    HEAP32[$2358 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2361 = invoke_iii(27, $51 | 0, 38016) | 0;
    $2362 = __THREW__;
    __THREW__ = 0;
    if ($2362 & 1) {
     $2372 = ___cxa_find_matching_catch() | 0;
     $$1185 = 1;
     $$2423 = $2372;
     $$2451 = tempRet0;
    } else {
     HEAP32[$50 + 0 >> 2] = HEAP32[$2361 + 0 >> 2];
     HEAP32[$50 + 4 >> 2] = HEAP32[$2361 + 4 >> 2];
     HEAP32[$50 + 8 >> 2] = HEAP32[$2361 + 8 >> 2];
     HEAP32[$2361 + 0 >> 2] = 0;
     HEAP32[$2361 + 4 >> 2] = 0;
     HEAP32[$2361 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2353 | 0, $198 | 0, $2354 | 0, $50 | 0);
     $2364 = __THREW__;
     __THREW__ = 0;
     if ($2364 & 1) $$0184 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2353 | 0, 36640, 183);
      $2366 = __THREW__;
      __THREW__ = 0;
      if ($2366 & 1) $$0184 = 0; else {}
     }
     $2374 = ___cxa_find_matching_catch() | 0;
     $2375 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     $$1185 = $$0184;
     $$2423 = $2374;
     $$2451 = $2375;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
    if ($$1185) {
     $$262579 = $$2423;
     $$26532578 = $$2451;
    } else {
     $$107 = $$2423;
     $$107134 = $$2451;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2353 | 0);
   $$107 = $$262579;
   $$107134 = $$26532578;
   ___resumeException($$107 | 0);
   break;
  }
 case 840:
  {
   $2376 = ___cxa_allocate_exception(24) | 0;
   $2377 = $$lcssa6087$lcssa6554 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $55 | 0, HEAP32[$$lcssa6098$lcssa6528 >> 2] | 0);
   $2379 = __THREW__;
   __THREW__ = 0;
   do if ($2379 & 1) {
    $2391 = ___cxa_find_matching_catch() | 0;
    $$292583 = $2391;
    $$29562582 = tempRet0;
   } else {
    __THREW__ = 0;
    $2381 = invoke_iiii(29, $55 | 0, 0, 37864) | 0;
    $2382 = __THREW__;
    __THREW__ = 0;
    if ($2382 & 1) {
     $2393 = ___cxa_find_matching_catch() | 0;
     $2394 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     $$292583 = $2393;
     $$29562582 = $2394;
     break;
    };
    HEAP32[$54 + 0 >> 2] = HEAP32[$2381 + 0 >> 2];
    HEAP32[$54 + 4 >> 2] = HEAP32[$2381 + 4 >> 2];
    HEAP32[$54 + 8 >> 2] = HEAP32[$2381 + 8 >> 2];
    HEAP32[$2381 + 0 >> 2] = 0;
    HEAP32[$2381 + 4 >> 2] = 0;
    HEAP32[$2381 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2384 = invoke_iii(27, $54 | 0, 38048) | 0;
    $2385 = __THREW__;
    __THREW__ = 0;
    if ($2385 & 1) {
     $2395 = ___cxa_find_matching_catch() | 0;
     $$1189 = 1;
     $$27 = $2395;
     $$2754 = tempRet0;
    } else {
     HEAP32[$53 + 0 >> 2] = HEAP32[$2384 + 0 >> 2];
     HEAP32[$53 + 4 >> 2] = HEAP32[$2384 + 4 >> 2];
     HEAP32[$53 + 8 >> 2] = HEAP32[$2384 + 8 >> 2];
     HEAP32[$2384 + 0 >> 2] = 0;
     HEAP32[$2384 + 4 >> 2] = 0;
     HEAP32[$2384 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2376 | 0, $198 | 0, $2377 | 0, $53 | 0);
     $2387 = __THREW__;
     __THREW__ = 0;
     if ($2387 & 1) $$0188 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2376 | 0, 36640, 183);
      $2389 = __THREW__;
      __THREW__ = 0;
      if ($2389 & 1) $$0188 = 0; else {}
     }
     $2397 = ___cxa_find_matching_catch() | 0;
     $2398 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
     $$1189 = $$0188;
     $$27 = $2397;
     $$2754 = $2398;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    if ($$1189) {
     $$292583 = $$27;
     $$29562582 = $$2754;
    } else {
     $$107 = $$27;
     $$107134 = $$2754;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2376 | 0);
   $$107 = $$292583;
   $$107134 = $$29562582;
   ___resumeException($$107 | 0);
   break;
  }
 case 851:
  {
   $2399 = ___cxa_allocate_exception(24) | 0;
   $2400 = $$lcssa6087$lcssa6555 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $58 | 0, HEAP32[$$lcssa6098$lcssa6529 >> 2] | 0);
   $2402 = __THREW__;
   __THREW__ = 0;
   do if ($2402 & 1) {
    $2414 = ___cxa_find_matching_catch() | 0;
    $$322587 = $2414;
    $$32592586 = tempRet0;
   } else {
    __THREW__ = 0;
    $2404 = invoke_iiii(29, $58 | 0, 0, 37864) | 0;
    $2405 = __THREW__;
    __THREW__ = 0;
    if ($2405 & 1) {
     $2416 = ___cxa_find_matching_catch() | 0;
     $2417 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     $$322587 = $2416;
     $$32592586 = $2417;
     break;
    };
    HEAP32[$57 + 0 >> 2] = HEAP32[$2404 + 0 >> 2];
    HEAP32[$57 + 4 >> 2] = HEAP32[$2404 + 4 >> 2];
    HEAP32[$57 + 8 >> 2] = HEAP32[$2404 + 8 >> 2];
    HEAP32[$2404 + 0 >> 2] = 0;
    HEAP32[$2404 + 4 >> 2] = 0;
    HEAP32[$2404 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2407 = invoke_iii(27, $57 | 0, 38080) | 0;
    $2408 = __THREW__;
    __THREW__ = 0;
    if ($2408 & 1) {
     $2418 = ___cxa_find_matching_catch() | 0;
     $$1197 = 1;
     $$30 = $2418;
     $$3057 = tempRet0;
    } else {
     HEAP32[$56 + 0 >> 2] = HEAP32[$2407 + 0 >> 2];
     HEAP32[$56 + 4 >> 2] = HEAP32[$2407 + 4 >> 2];
     HEAP32[$56 + 8 >> 2] = HEAP32[$2407 + 8 >> 2];
     HEAP32[$2407 + 0 >> 2] = 0;
     HEAP32[$2407 + 4 >> 2] = 0;
     HEAP32[$2407 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2399 | 0, $198 | 0, $2400 | 0, $56 | 0);
     $2410 = __THREW__;
     __THREW__ = 0;
     if ($2410 & 1) $$0196 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2399 | 0, 36640, 183);
      $2412 = __THREW__;
      __THREW__ = 0;
      if ($2412 & 1) $$0196 = 0; else {}
     }
     $2420 = ___cxa_find_matching_catch() | 0;
     $2421 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     $$1197 = $$0196;
     $$30 = $2420;
     $$3057 = $2421;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    if ($$1197) {
     $$322587 = $$30;
     $$32592586 = $$3057;
    } else {
     $$107 = $$30;
     $$107134 = $$3057;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2399 | 0);
   $$107 = $$322587;
   $$107134 = $$32592586;
   ___resumeException($$107 | 0);
   break;
  }
 case 863:
  {
   $2423 = ___cxa_allocate_exception(24) | 0;
   $2424 = $$lcssa6087$lcssa6559 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $61 | 0, HEAP32[$$lcssa6098$lcssa6533 >> 2] | 0);
   $2426 = __THREW__;
   __THREW__ = 0;
   do if ($2426 & 1) {
    $2438 = ___cxa_find_matching_catch() | 0;
    $$35252591 = $2438;
    $$35622590 = tempRet0;
   } else {
    __THREW__ = 0;
    $2428 = invoke_iiii(29, $61 | 0, 0, 37864) | 0;
    $2429 = __THREW__;
    __THREW__ = 0;
    if ($2429 & 1) {
     $2440 = ___cxa_find_matching_catch() | 0;
     $2441 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     $$35252591 = $2440;
     $$35622590 = $2441;
     break;
    };
    HEAP32[$60 + 0 >> 2] = HEAP32[$2428 + 0 >> 2];
    HEAP32[$60 + 4 >> 2] = HEAP32[$2428 + 4 >> 2];
    HEAP32[$60 + 8 >> 2] = HEAP32[$2428 + 8 >> 2];
    HEAP32[$2428 + 0 >> 2] = 0;
    HEAP32[$2428 + 4 >> 2] = 0;
    HEAP32[$2428 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2431 = invoke_iii(27, $60 | 0, 38112) | 0;
    $2432 = __THREW__;
    __THREW__ = 0;
    if ($2432 & 1) {
     $2442 = ___cxa_find_matching_catch() | 0;
     $$1201 = 1;
     $$33 = $2442;
     $$3360 = tempRet0;
    } else {
     HEAP32[$59 + 0 >> 2] = HEAP32[$2431 + 0 >> 2];
     HEAP32[$59 + 4 >> 2] = HEAP32[$2431 + 4 >> 2];
     HEAP32[$59 + 8 >> 2] = HEAP32[$2431 + 8 >> 2];
     HEAP32[$2431 + 0 >> 2] = 0;
     HEAP32[$2431 + 4 >> 2] = 0;
     HEAP32[$2431 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2423 | 0, $198 | 0, $2424 | 0, $59 | 0);
     $2434 = __THREW__;
     __THREW__ = 0;
     if ($2434 & 1) $$0200 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2423 | 0, 36640, 183);
      $2436 = __THREW__;
      __THREW__ = 0;
      if ($2436 & 1) $$0200 = 0; else {}
     }
     $2444 = ___cxa_find_matching_catch() | 0;
     $2445 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     $$1201 = $$0200;
     $$33 = $2444;
     $$3360 = $2445;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
    if ($$1201) {
     $$35252591 = $$33;
     $$35622590 = $$3360;
    } else {
     $$107 = $$33;
     $$107134 = $$3360;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2423 | 0);
   $$107 = $$35252591;
   $$107134 = $$35622590;
   ___resumeException($$107 | 0);
   break;
  }
 case 920:
  {
   $2576 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
   ___resumeException($2576 | 0);
   break;
  }
 case 923:
  {
   $2580 = ___cxa_find_matching_catch() | 0;
   $2581 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
   $$107 = $2580;
   $$107134 = $2581;
   ___resumeException($$107 | 0);
   break;
  }
 case 924:
  {
   $2582 = ___cxa_allocate_exception(24) | 0;
   $2583 = $$lcssa6087$lcssa6556 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $66 | 0, HEAP32[$$lcssa6098$lcssa6530 >> 2] | 0);
   $2585 = __THREW__;
   __THREW__ = 0;
   do if ($2585 & 1) {
    $2597 = ___cxa_find_matching_catch() | 0;
    $$382595 = $2597;
    $$38652594 = tempRet0;
   } else {
    __THREW__ = 0;
    $2587 = invoke_iiii(29, $66 | 0, 0, 37864) | 0;
    $2588 = __THREW__;
    __THREW__ = 0;
    if ($2588 & 1) {
     $2599 = ___cxa_find_matching_catch() | 0;
     $2600 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
     $$382595 = $2599;
     $$38652594 = $2600;
     break;
    };
    HEAP32[$65 + 0 >> 2] = HEAP32[$2587 + 0 >> 2];
    HEAP32[$65 + 4 >> 2] = HEAP32[$2587 + 4 >> 2];
    HEAP32[$65 + 8 >> 2] = HEAP32[$2587 + 8 >> 2];
    HEAP32[$2587 + 0 >> 2] = 0;
    HEAP32[$2587 + 4 >> 2] = 0;
    HEAP32[$2587 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2590 = invoke_iii(27, $65 | 0, 38144) | 0;
    $2591 = __THREW__;
    __THREW__ = 0;
    if ($2591 & 1) {
     $2601 = ___cxa_find_matching_catch() | 0;
     $$1205 = 1;
     $$36 = $2601;
     $$3663 = tempRet0;
    } else {
     HEAP32[$64 + 0 >> 2] = HEAP32[$2590 + 0 >> 2];
     HEAP32[$64 + 4 >> 2] = HEAP32[$2590 + 4 >> 2];
     HEAP32[$64 + 8 >> 2] = HEAP32[$2590 + 8 >> 2];
     HEAP32[$2590 + 0 >> 2] = 0;
     HEAP32[$2590 + 4 >> 2] = 0;
     HEAP32[$2590 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2582 | 0, $198 | 0, $2583 | 0, $64 | 0);
     $2593 = __THREW__;
     __THREW__ = 0;
     if ($2593 & 1) $$0204 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2582 | 0, 36640, 183);
      $2595 = __THREW__;
      __THREW__ = 0;
      if ($2595 & 1) $$0204 = 0; else {}
     }
     $2603 = ___cxa_find_matching_catch() | 0;
     $2604 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     $$1205 = $$0204;
     $$36 = $2603;
     $$3663 = $2604;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($65);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
    if ($$1205) {
     $$382595 = $$36;
     $$38652594 = $$3663;
    } else {
     $$107 = $$36;
     $$107134 = $$3663;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2582 | 0);
   $$107 = $$382595;
   $$107134 = $$38652594;
   ___resumeException($$107 | 0);
   break;
  }
 case 936:
  {
   $2613 = ___cxa_allocate_exception(24) | 0;
   $2614 = $$lcssa6523 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $68 | 0, HEAP32[$204 >> 2] | 0);
   $2615 = __THREW__;
   __THREW__ = 0;
   do if ($2615 & 1) {
    $2624 = ___cxa_find_matching_catch() | 0;
    $$402599 = $2624;
    $$40672598 = tempRet0;
   } else {
    __THREW__ = 0;
    $2617 = invoke_iiii(29, $68 | 0, 0, 38176) | 0;
    $2618 = __THREW__;
    __THREW__ = 0;
    if ($2618 & 1) {
     $2626 = ___cxa_find_matching_catch() | 0;
     $2627 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
     $$402599 = $2626;
     $$40672598 = $2627;
     break;
    };
    HEAP32[$67 + 0 >> 2] = HEAP32[$2617 + 0 >> 2];
    HEAP32[$67 + 4 >> 2] = HEAP32[$2617 + 4 >> 2];
    HEAP32[$67 + 8 >> 2] = HEAP32[$2617 + 8 >> 2];
    HEAP32[$2617 + 0 >> 2] = 0;
    HEAP32[$2617 + 4 >> 2] = 0;
    HEAP32[$2617 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $2613 | 0, $198 | 0, $2614 | 0, $67 | 0);
    $2620 = __THREW__;
    __THREW__ = 0;
    if ($2620 & 1) $$0212 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2613 | 0, 36640, 183);
     $2622 = __THREW__;
     __THREW__ = 0;
     if ($2622 & 1) $$0212 = 0; else {}
    }
    $2628 = ___cxa_find_matching_catch() | 0;
    $2629 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
    if ($$0212) {
     $$402599 = $2628;
     $$40672598 = $2629;
    } else {
     $$107 = $2628;
     $$107134 = $2629;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2613 | 0);
   $$107 = $$402599;
   $$107134 = $$40672598;
   ___resumeException($$107 | 0);
   break;
  }
 case 999:
  {
   $2752 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$372 >> 2] | 0);
   ___resumeException($2752 | 0);
   break;
  }
 case 1017:
  {
   $2794 = ___cxa_find_matching_catch() | 0;
   $2795 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$372 >> 2] | 0);
   $$107 = $2794;
   $$107134 = $2795;
   ___resumeException($$107 | 0);
   break;
  }
 case 1039:
  {
   $2860 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $2860;
   label = 1042;
   break;
  }
 case 1040:
  {
   $2862 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $2862;
   label = 1042;
   break;
  }
 case 1047:
  {
   $2874 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $2874;
   label = 1042;
   break;
  }
 case 1049:
  {
   $2880 = $ss73 + 64 | 0;
   $2881 = $ss73 + 8 | 0;
   HEAP32[$2881 >> 2] = 592;
   $2882 = $ss73 + 12 | 0;
   HEAP32[$ss73 >> 2] = 740;
   HEAP32[$2880 >> 2] = 760;
   HEAP32[$ss73 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss73 + 64 | 0, $2882 | 0);
   $2885 = __THREW__;
   __THREW__ = 0;
   if ($2885 & 1) {
    $2897 = ___cxa_find_matching_catch() | 0;
    $$0$i1116 = tempRet0;
    $$01$i1115 = $2897;
   } else {
    HEAP32[$ss73 + 136 >> 2] = 0;
    HEAP32[$ss73 + 140 >> 2] = -1;
    HEAP32[$ss73 >> 2] = 572;
    HEAP32[$2880 >> 2] = 612;
    HEAP32[$2881 >> 2] = 592;
    __THREW__ = 0;
    invoke_vi(177, $2882 | 0);
    $2889 = __THREW__;
    __THREW__ = 0;
    do if ($2889 & 1) {
     $2899 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1113$index116Z2D = tempRet0;
     $eh$lpad$body$i1113$indexZ2D = $2899;
    } else {
     HEAP32[$2882 >> 2] = 904;
     $2891 = $ss73 + 44 | 0;
     HEAP32[$2891 + 0 >> 2] = 0;
     HEAP32[$2891 + 4 >> 2] = 0;
     HEAP32[$2891 + 8 >> 2] = 0;
     HEAP32[$2891 + 12 >> 2] = 0;
     HEAP32[$ss73 + 60 >> 2] = 24;
     HEAP32[$8 + 0 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $2882 | 0, $8 | 0);
     $2893 = __THREW__;
     __THREW__ = 0;
     if ($2893 & 1) {
      $2895 = ___cxa_find_matching_catch() | 0;
      $2896 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2891);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2882);
      $eh$lpad$body$i1113$index116Z2D = $2896;
      $eh$lpad$body$i1113$indexZ2D = $2895;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     __THREW__ = 0;
     $2901 = invoke_iiii(25, $2881 | 0, 38224, 34) | 0;
     $2902 = __THREW__;
     __THREW__ = 0;
     do if ($2902 & 1) label = 1063; else {
      __THREW__ = 0;
      invoke_iii(31, $2901 | 0, $$lcssa6510 | 0) | 0;
      $2904 = __THREW__;
      __THREW__ = 0;
      if ($2904 & 1) label = 1063; else {
       $2906 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $71 | 0, $2882 | 0);
       $2907 = __THREW__;
       __THREW__ = 0;
       if ($2907 & 1) {
        $2917 = ___cxa_find_matching_catch() | 0;
        $$412603 = $2917;
        $$41682602 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $2906 | 0, $198 | 0, $$lcssa6377 | 0, $71 | 0);
        $2909 = __THREW__;
        __THREW__ = 0;
        if ($2909 & 1) $$0215 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $2906 | 0, 36640, 183);
         $2911 = __THREW__;
         __THREW__ = 0;
         if ($2911 & 1) $$0215 = 0; else {}
        }
        $2919 = ___cxa_find_matching_catch() | 0;
        $2920 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
        if ($$0215) {
         $$412603 = $2919;
         $$41682602 = $2920;
        } else {
         $$42 = $2919;
         $$4269 = $2920;
         break;
        }
       }
       ___cxa_free_exception($2906 | 0);
       $$42 = $$412603;
       $$4269 = $$41682602;
      }
     } while (0);
     if ((label | 0) == 1063) {
      $2915 = ___cxa_find_matching_catch() | 0;
      $$42 = $2915;
      $$4269 = tempRet0;
     }
     HEAP32[$ss73 >> 2] = 572;
     HEAP32[$2880 >> 2] = 612;
     HEAP32[$2881 >> 2] = 592;
     HEAP32[$2882 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2891);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2882);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2880);
     $$59 = $$42;
     $$5986 = $$4269;
     label = 1665;
     break L2047;
    } while (0);
    $$0$i1116 = $eh$lpad$body$i1113$index116Z2D;
    $$01$i1115 = $eh$lpad$body$i1113$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2880);
   $eh$lpad$body1108$index82Z2D = $$0$i1116;
   $eh$lpad$body1108$indexZ2D = $$01$i1115;
   label = 1042;
   break;
  }
 case 1062:
  {
   $2913 = ___cxa_find_matching_catch() | 0;
   $2914 = tempRet0;
   HEAP32[$272 >> 2] = $$lcssa6504;
   __ZdlPv($$lcssa6504);
   $$59 = $2913;
   $$5986 = $2914;
   label = 1665;
   break;
  }
 case 1069:
  {
   $2931 = $ss76 + 64 | 0;
   $2932 = $ss76 + 8 | 0;
   HEAP32[$2932 >> 2] = 592;
   $2933 = $ss76 + 12 | 0;
   HEAP32[$ss76 >> 2] = 740;
   HEAP32[$2931 >> 2] = 760;
   HEAP32[$ss76 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss76 + 64 | 0, $2933 | 0);
   $2936 = __THREW__;
   __THREW__ = 0;
   if ($2936 & 1) {
    $2948 = ___cxa_find_matching_catch() | 0;
    $$0$i1135 = tempRet0;
    $$01$i1134 = $2948;
   } else {
    HEAP32[$ss76 + 136 >> 2] = 0;
    HEAP32[$ss76 + 140 >> 2] = -1;
    HEAP32[$ss76 >> 2] = 572;
    HEAP32[$2931 >> 2] = 612;
    HEAP32[$2932 >> 2] = 592;
    __THREW__ = 0;
    invoke_vi(177, $2933 | 0);
    $2940 = __THREW__;
    __THREW__ = 0;
    do if ($2940 & 1) {
     $2950 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1132$index121Z2D = tempRet0;
     $eh$lpad$body$i1132$indexZ2D = $2950;
    } else {
     HEAP32[$2933 >> 2] = 904;
     $2942 = $ss76 + 44 | 0;
     HEAP32[$2942 + 0 >> 2] = 0;
     HEAP32[$2942 + 4 >> 2] = 0;
     HEAP32[$2942 + 8 >> 2] = 0;
     HEAP32[$2942 + 12 >> 2] = 0;
     HEAP32[$ss76 + 60 >> 2] = 24;
     HEAP32[$7 + 0 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $2933 | 0, $7 | 0);
     $2944 = __THREW__;
     __THREW__ = 0;
     if ($2944 & 1) {
      $2946 = ___cxa_find_matching_catch() | 0;
      $2947 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2942);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2933);
      $eh$lpad$body$i1132$index121Z2D = $2947;
      $eh$lpad$body$i1132$indexZ2D = $2946;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     __THREW__ = 0;
     $2952 = invoke_iiii(25, $2932 | 0, 38264, 43) | 0;
     $2953 = __THREW__;
     __THREW__ = 0;
     do if ($2953 & 1) label = 1086; else {
      __THREW__ = 0;
      invoke_iii(24, $2952 | 0, (HEAP32[$$lcssa6515 >> 2] | 0) - (HEAP32[$$lcssa6519 >> 2] | 0) >> 2 | 0) | 0;
      $2961 = __THREW__;
      __THREW__ = 0;
      if ($2961 & 1) label = 1086; else {
       $2963 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $72 | 0, $2933 | 0);
       $2964 = __THREW__;
       __THREW__ = 0;
       if ($2964 & 1) {
        $2978 = ___cxa_find_matching_catch() | 0;
        $$432606 = $2978;
        $$43702605 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $2963 | 0, $198 | 0, $$lcssa6378 | 0, $72 | 0);
        $2966 = __THREW__;
        __THREW__ = 0;
        if ($2966 & 1) $$0219 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $2963 | 0, 36640, 183);
         $2968 = __THREW__;
         __THREW__ = 0;
         if ($2968 & 1) $$0219 = 0; else {}
        }
        $2980 = ___cxa_find_matching_catch() | 0;
        $2981 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
        if ($$0219) {
         $$432606 = $2980;
         $$43702605 = $2981;
        } else {
         $$44 = $2980;
         $$4471 = $2981;
         break;
        }
       }
       ___cxa_free_exception($2963 | 0);
       $$44 = $$432606;
       $$4471 = $$43702605;
      }
     } while (0);
     if ((label | 0) == 1086) {
      $2976 = ___cxa_find_matching_catch() | 0;
      $$44 = $2976;
      $$4471 = tempRet0;
     }
     HEAP32[$ss76 >> 2] = 572;
     HEAP32[$2931 >> 2] = 612;
     HEAP32[$2932 >> 2] = 592;
     HEAP32[$2933 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2942);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2933);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2931);
     $$45 = $$44;
     $$4572 = $$4471;
     label = 1213;
     break L2047;
    } while (0);
    $$0$i1135 = $eh$lpad$body$i1132$index121Z2D;
    $$01$i1134 = $eh$lpad$body$i1132$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2931);
   $eh$lpad$body1137$index128Z2D = $$0$i1135;
   $eh$lpad$body1137$indexZ2D = $$01$i1134;
   label = 1085;
   break;
  }
 case 1082:
  {
   $2970 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1137$index128Z2D = tempRet0;
   $eh$lpad$body1137$indexZ2D = $2970;
   label = 1085;
   break;
  }
 case 1083:
  {
   $2972 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1137$index128Z2D = tempRet0;
   $eh$lpad$body1137$indexZ2D = $2972;
   label = 1085;
   break;
  }
 case 1084:
  {
   $2974 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1137$index128Z2D = tempRet0;
   $eh$lpad$body1137$indexZ2D = $2974;
   label = 1085;
   break;
  }
 case 1219:
  {
   $3277 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3277;
   label = 1042;
   break;
  }
 case 1222:
  {
   $3286 = ___cxa_find_matching_catch() | 0;
   $3287 = tempRet0;
   HEAP32[$276 >> 2] = $$lcssa6503;
   __ZdlPv($$lcssa6503);
   $$59 = $3286;
   $$5986 = $3287;
   label = 1665;
   break;
  }
 case 1225:
  {
   $3295 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3295;
   label = 1042;
   break;
  }
 case 1228:
  {
   $3302 = ___cxa_find_matching_catch() | 0;
   $3303 = tempRet0;
   HEAP32[$278 >> 2] = $$lcssa6502;
   __ZdlPv($$lcssa6502);
   $$59 = $3302;
   $$5986 = $3303;
   label = 1665;
   break;
  }
 case 1231:
  {
   $3311 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3311;
   label = 1042;
   break;
  }
 case 1234:
  {
   $3318 = ___cxa_find_matching_catch() | 0;
   $3319 = tempRet0;
   HEAP32[$280 >> 2] = $$lcssa6501;
   __ZdlPv($$lcssa6501);
   $$59 = $3318;
   $$5986 = $3319;
   label = 1665;
   break;
  }
 case 1237:
  {
   $3327 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3327;
   label = 1042;
   break;
  }
 case 1240:
  {
   $3334 = ___cxa_find_matching_catch() | 0;
   $3335 = tempRet0;
   HEAP32[$282 >> 2] = $$lcssa6500;
   __ZdlPv($$lcssa6500);
   $$59 = $3334;
   $$5986 = $3335;
   label = 1665;
   break;
  }
 case 1243:
  {
   $3343 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3343;
   label = 1042;
   break;
  }
 case 1246:
  {
   $3350 = ___cxa_find_matching_catch() | 0;
   $3351 = tempRet0;
   HEAP32[$284 >> 2] = $$lcssa6499;
   __ZdlPv($$lcssa6499);
   $$59 = $3350;
   $$5986 = $3351;
   label = 1665;
   break;
  }
 case 1249:
  {
   $3359 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3359;
   label = 1042;
   break;
  }
 case 1252:
  {
   $3366 = ___cxa_find_matching_catch() | 0;
   $3367 = tempRet0;
   HEAP32[$286 >> 2] = $$lcssa6498;
   __ZdlPv($$lcssa6498);
   $$59 = $3366;
   $$5986 = $3367;
   label = 1665;
   break;
  }
 case 1255:
  {
   $3375 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3375;
   label = 1042;
   break;
  }
 case 1258:
  {
   $3382 = ___cxa_find_matching_catch() | 0;
   $3383 = tempRet0;
   HEAP32[$288 >> 2] = $$lcssa6497;
   __ZdlPv($$lcssa6497);
   $$59 = $3382;
   $$5986 = $3383;
   label = 1665;
   break;
  }
 case 1261:
  {
   $3391 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3391;
   label = 1042;
   break;
  }
 case 1264:
  {
   $3398 = ___cxa_find_matching_catch() | 0;
   $3399 = tempRet0;
   HEAP32[$290 >> 2] = $$lcssa6496;
   __ZdlPv($$lcssa6496);
   $$59 = $3398;
   $$5986 = $3399;
   label = 1665;
   break;
  }
 case 1267:
  {
   $3407 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3407;
   label = 1042;
   break;
  }
 case 1270:
  {
   $3414 = ___cxa_find_matching_catch() | 0;
   $3415 = tempRet0;
   HEAP32[$292 >> 2] = $$lcssa6495;
   __ZdlPv($$lcssa6495);
   $$59 = $3414;
   $$5986 = $3415;
   label = 1665;
   break;
  }
 case 1273:
  {
   $3423 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3423;
   label = 1042;
   break;
  }
 case 1276:
  {
   $3430 = ___cxa_find_matching_catch() | 0;
   $3431 = tempRet0;
   HEAP32[$294 >> 2] = $$lcssa6494;
   __ZdlPv($$lcssa6494);
   $$59 = $3430;
   $$5986 = $3431;
   label = 1665;
   break;
  }
 case 1281:
  {
   $3437 = ___cxa_find_matching_catch() | 0;
   $3438 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
   $$59 = $3437;
   $$5986 = $3438;
   label = 1665;
   break;
  }
 case 1285:
  {
   $3443 = ___cxa_find_matching_catch() | 0;
   $3444 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
   $$59 = $3443;
   $$5986 = $3444;
   label = 1665;
   break;
  }
 case 1289:
  {
   $3449 = ___cxa_find_matching_catch() | 0;
   $3450 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
   $$59 = $3449;
   $$5986 = $3450;
   label = 1665;
   break;
  }
 case 1293:
  {
   $3455 = ___cxa_find_matching_catch() | 0;
   $3456 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
   $$59 = $3455;
   $$5986 = $3456;
   label = 1665;
   break;
  }
 case 1297:
  {
   $3461 = ___cxa_find_matching_catch() | 0;
   $3462 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
   $$59 = $3461;
   $$5986 = $3462;
   label = 1665;
   break;
  }
 case 1301:
  {
   $3467 = ___cxa_find_matching_catch() | 0;
   $3468 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
   $$59 = $3467;
   $$5986 = $3468;
   label = 1665;
   break;
  }
 case 1305:
  {
   $3473 = ___cxa_find_matching_catch() | 0;
   $3474 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($107);
   $$59 = $3473;
   $$5986 = $3474;
   label = 1665;
   break;
  }
 case 1308:
  {
   $3483 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3483;
   label = 1042;
   break;
  }
 case 1310:
  {
   $3495 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $109 | 0, 38320, 34);
   $3496 = __THREW__;
   __THREW__ = 0;
   if ($3496 & 1) {
    $3504 = ___cxa_find_matching_catch() | 0;
    $$462609 = $3504;
    $$46732608 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $3495 | 0, $198 | 0, $$lcssa6344 | 0, $109 | 0);
    $3498 = __THREW__;
    __THREW__ = 0;
    if ($3498 & 1) $$0225 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3495 | 0, 36640, 183);
     $3500 = __THREW__;
     __THREW__ = 0;
     if ($3500 & 1) $$0225 = 0; else {}
    }
    $3506 = ___cxa_find_matching_catch() | 0;
    $3507 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($109);
    if ($$0225) {
     $$462609 = $3506;
     $$46732608 = $3507;
    } else {
     $$59 = $3506;
     $$5986 = $3507;
     label = 1665;
     break;
    }
   }
   ___cxa_free_exception($3495 | 0);
   $$59 = $$462609;
   $$5986 = $$46732608;
   label = 1665;
   break;
  }
 case 1313:
  {
   $3502 = ___cxa_find_matching_catch() | 0;
   $3503 = tempRet0;
   HEAP32[$296 >> 2] = $$lcssa6489;
   __ZdlPv($$lcssa6489);
   $$59 = $3502;
   $$5986 = $3503;
   label = 1665;
   break;
  }
 case 1320:
  {
   $$59 = ___cxa_find_matching_catch() | 0;
   $$5986 = tempRet0;
   label = 1665;
   break;
  }
 case 1360:
  {
   $3590 = ___cxa_find_matching_catch() | 0;
   $3591 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$302 >> 2] | 0);
   $eh$lpad$body1108$index82Z2D = $3591;
   $eh$lpad$body1108$indexZ2D = $3590;
   label = 1042;
   break;
  }
 case 1378:
  {
   $3630 = ___cxa_find_matching_catch() | 0;
   $3631 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$302 >> 2] | 0);
   $$59 = $3630;
   $$5986 = $3631;
   label = 1665;
   break;
  }
 case 1381:
  {
   $3641 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3641;
   label = 1042;
   break;
  }
 case 1385:
  {
   $3660 = ___cxa_find_matching_catch() | 0;
   $3661 = tempRet0;
   HEAP32[$303 >> 2] = $$lcssa6488;
   __ZdlPv($$lcssa6488);
   $$59 = $3660;
   $$5986 = $3661;
   label = 1665;
   break;
  }
 case 1416:
  {
   $3707 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $114 | 0, 38360, 25);
   $3708 = __THREW__;
   __THREW__ = 0;
   if ($3708 & 1) {
    $3714 = ___cxa_find_matching_catch() | 0;
    $$472614 = $3714;
    $$47742613 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $3707 | 0, $198 | 0, $$lcssa6338 | 0, $114 | 0);
    $3710 = __THREW__;
    __THREW__ = 0;
    if ($3710 & 1) $$0227 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3707 | 0, 36640, 183);
     $3712 = __THREW__;
     __THREW__ = 0;
     if ($3712 & 1) $$0227 = 0; else {}
    }
    $3716 = ___cxa_find_matching_catch() | 0;
    $3717 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($114);
    if ($$0227) {
     $$472614 = $3716;
     $$47742613 = $3717;
    } else {
     $$59 = $3716;
     $$5986 = $3717;
     label = 1665;
     break;
    }
   }
   ___cxa_free_exception($3707 | 0);
   $$59 = $$472614;
   $$5986 = $$47742613;
   label = 1665;
   break;
  }
 case 1431:
  {
   $3751 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_vii(61, $116 | 0, HEAP32[HEAP32[$args68 >> 2] >> 2] | 0);
   $3752 = __THREW__;
   __THREW__ = 0;
   do if ($3752 & 1) {
    $3761 = ___cxa_find_matching_catch() | 0;
    $$492617 = $3761;
    $$49762616 = tempRet0;
   } else {
    __THREW__ = 0;
    $3754 = invoke_iiii(29, $116 | 0, 0, 38392) | 0;
    $3755 = __THREW__;
    __THREW__ = 0;
    if ($3755 & 1) {
     $3763 = ___cxa_find_matching_catch() | 0;
     $3764 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($116);
     $$492617 = $3763;
     $$49762616 = $3764;
     break;
    };
    HEAP32[$115 + 0 >> 2] = HEAP32[$3754 + 0 >> 2];
    HEAP32[$115 + 4 >> 2] = HEAP32[$3754 + 4 >> 2];
    HEAP32[$115 + 8 >> 2] = HEAP32[$3754 + 8 >> 2];
    HEAP32[$3754 + 0 >> 2] = 0;
    HEAP32[$3754 + 4 >> 2] = 0;
    HEAP32[$3754 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $3751 | 0, $198 | 0, $$lcssa6339 | 0, $115 | 0);
    $3757 = __THREW__;
    __THREW__ = 0;
    if ($3757 & 1) $$0233 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3751 | 0, 36640, 183);
     $3759 = __THREW__;
     __THREW__ = 0;
     if ($3759 & 1) $$0233 = 0; else {}
    }
    $3765 = ___cxa_find_matching_catch() | 0;
    $3766 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($116);
    if ($$0233) {
     $$492617 = $3765;
     $$49762616 = $3766;
    } else {
     $$59 = $3765;
     $$5986 = $3766;
     label = 1665;
     break L2047;
    }
   } while (0);
   ___cxa_free_exception($3751 | 0);
   $$59 = $$492617;
   $$5986 = $$49762616;
   label = 1665;
   break;
  }
 case 1441:
  {
   $3774 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3774;
   label = 1042;
   break;
  }
 case 1447:
  {
   $3785 = ___cxa_find_matching_catch() | 0;
   $3786 = tempRet0;
   HEAP32[$308 >> 2] = $$lcssa6483;
   __ZdlPv($$lcssa6483);
   $$59 = $3785;
   $$5986 = $3786;
   label = 1665;
   break;
  }
 case 1448:
  {
   $lpad$phi2741$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2741$index135 = tempRet0;
   label = 1450;
   break;
  }
 case 1449:
  {
   $lpad$phi2741$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2741$index135 = tempRet0;
   label = 1450;
   break;
  }
 case 1451:
  {
   $3791 = ___cxa_find_matching_catch() | 0;
   $3792 = tempRet0;
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($118, HEAP32[$313 >> 2] | 0);
   $$50 = $3791;
   $$5077 = $3792;
   label = 1492;
   break;
  }
 case 1489:
  {
   $$50 = ___cxa_find_matching_catch() | 0;
   $$5077 = tempRet0;
   label = 1492;
   break;
  }
 case 1495:
  {
   $3891 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3891;
   label = 1042;
   break;
  }
 case 1500:
  {
   $3905 = $ss102 + 64 | 0;
   $3906 = $ss102 + 8 | 0;
   HEAP32[$3906 >> 2] = 592;
   $3907 = $ss102 + 12 | 0;
   HEAP32[$ss102 >> 2] = 740;
   HEAP32[$3905 >> 2] = 760;
   HEAP32[$ss102 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss102 + 64 | 0, $3907 | 0);
   $3910 = __THREW__;
   __THREW__ = 0;
   if ($3910 & 1) {
    $3922 = ___cxa_find_matching_catch() | 0;
    $$0$i1707 = tempRet0;
    $$01$i1706 = $3922;
   } else {
    HEAP32[$ss102 + 136 >> 2] = 0;
    HEAP32[$ss102 + 140 >> 2] = -1;
    HEAP32[$ss102 >> 2] = 572;
    HEAP32[$3905 >> 2] = 612;
    HEAP32[$3906 >> 2] = 592;
    __THREW__ = 0;
    invoke_vi(177, $3907 | 0);
    $3914 = __THREW__;
    __THREW__ = 0;
    do if ($3914 & 1) {
     $3924 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1704$index140Z2D = tempRet0;
     $eh$lpad$body$i1704$indexZ2D = $3924;
    } else {
     HEAP32[$3907 >> 2] = 904;
     $3916 = $ss102 + 44 | 0;
     HEAP32[$3916 + 0 >> 2] = 0;
     HEAP32[$3916 + 4 >> 2] = 0;
     HEAP32[$3916 + 8 >> 2] = 0;
     HEAP32[$3916 + 12 >> 2] = 0;
     HEAP32[$ss102 + 60 >> 2] = 24;
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $3907 | 0, $5 | 0);
     $3918 = __THREW__;
     __THREW__ = 0;
     if ($3918 & 1) {
      $3920 = ___cxa_find_matching_catch() | 0;
      $3921 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3916);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3907);
      $eh$lpad$body$i1704$index140Z2D = $3921;
      $eh$lpad$body$i1704$indexZ2D = $3920;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __THREW__ = 0;
     $3926 = invoke_iiii(25, $3906 | 0, 38448, 49) | 0;
     $3927 = __THREW__;
     __THREW__ = 0;
     do if ($3927 & 1) label = 1517; else {
      $3929 = HEAP8[$$lcssa6482 >> 0] | 0;
      if (!($3929 & 1)) $3936 = ($3929 & 255) >>> 1; else $3936 = HEAP32[$$lcssa6481 + 12 >> 2] | 0;
      __THREW__ = 0;
      invoke_iii(24, $3926 | 0, $3936 | 0) | 0;
      $3937 = __THREW__;
      __THREW__ = 0;
      if ($3937 & 1) label = 1517; else {
       $3939 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $123 | 0, $3907 | 0);
       $3940 = __THREW__;
       __THREW__ = 0;
       if ($3940 & 1) {
        $3950 = ___cxa_find_matching_catch() | 0;
        $$512621 = $3950;
        $$51782620 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $3939 | 0, $198 | 0, $$lcssa6331 | 0, $123 | 0);
        $3942 = __THREW__;
        __THREW__ = 0;
        if ($3942 & 1) $$0240 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $3939 | 0, 36640, 183);
         $3944 = __THREW__;
         __THREW__ = 0;
         if ($3944 & 1) $$0240 = 0; else {}
        }
        $3952 = ___cxa_find_matching_catch() | 0;
        $3953 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
        if ($$0240) {
         $$512621 = $3952;
         $$51782620 = $3953;
        } else {
         $$52 = $3952;
         $$5279 = $3953;
         break;
        }
       }
       ___cxa_free_exception($3939 | 0);
       $$52 = $$512621;
       $$5279 = $$51782620;
      }
     } while (0);
     if ((label | 0) == 1517) {
      $3948 = ___cxa_find_matching_catch() | 0;
      $$52 = $3948;
      $$5279 = tempRet0;
     }
     HEAP32[$ss102 >> 2] = 572;
     HEAP32[$3905 >> 2] = 612;
     HEAP32[$3906 >> 2] = 592;
     HEAP32[$3907 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3916);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3907);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3905);
     $$59 = $$52;
     $$5986 = $$5279;
     label = 1665;
     break L2047;
    } while (0);
    $$0$i1707 = $eh$lpad$body$i1704$index140Z2D;
    $$01$i1706 = $eh$lpad$body$i1704$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3905);
   $eh$lpad$body1108$index82Z2D = $$0$i1707;
   $eh$lpad$body1108$indexZ2D = $$01$i1706;
   label = 1042;
   break;
  }
 case 1516:
  {
   $3946 = ___cxa_find_matching_catch() | 0;
   $3947 = tempRet0;
   HEAP32[$316 >> 2] = $$lcssa6479;
   __ZdlPv($$lcssa6479);
   $$59 = $3946;
   $$5986 = $3947;
   label = 1665;
   break;
  }
 case 1528:
  {
   $3967 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $3967;
   label = 1042;
   break;
  }
 case 1530:
  {
   $3973 = $ss103 + 64 | 0;
   $3974 = $ss103 + 8 | 0;
   HEAP32[$3974 >> 2] = 592;
   $3975 = $ss103 + 12 | 0;
   HEAP32[$ss103 >> 2] = 740;
   HEAP32[$3973 >> 2] = 760;
   HEAP32[$ss103 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss103 + 64 | 0, $3975 | 0);
   $3978 = __THREW__;
   __THREW__ = 0;
   if ($3978 & 1) {
    $3990 = ___cxa_find_matching_catch() | 0;
    $$0$i1748 = tempRet0;
    $$01$i1747 = $3990;
   } else {
    HEAP32[$ss103 + 136 >> 2] = 0;
    HEAP32[$ss103 + 140 >> 2] = -1;
    HEAP32[$ss103 >> 2] = 572;
    HEAP32[$3973 >> 2] = 612;
    HEAP32[$3974 >> 2] = 592;
    __THREW__ = 0;
    invoke_vi(177, $3975 | 0);
    $3982 = __THREW__;
    __THREW__ = 0;
    do if ($3982 & 1) {
     $3992 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1745$index145Z2D = tempRet0;
     $eh$lpad$body$i1745$indexZ2D = $3992;
    } else {
     HEAP32[$3975 >> 2] = 904;
     $3984 = $ss103 + 44 | 0;
     HEAP32[$3984 + 0 >> 2] = 0;
     HEAP32[$3984 + 4 >> 2] = 0;
     HEAP32[$3984 + 8 >> 2] = 0;
     HEAP32[$3984 + 12 >> 2] = 0;
     HEAP32[$ss103 + 60 >> 2] = 24;
     HEAP32[$4 + 0 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $3975 | 0, $4 | 0);
     $3986 = __THREW__;
     __THREW__ = 0;
     if ($3986 & 1) {
      $3988 = ___cxa_find_matching_catch() | 0;
      $3989 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3984);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3975);
      $eh$lpad$body$i1745$index145Z2D = $3989;
      $eh$lpad$body$i1745$indexZ2D = $3988;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __THREW__ = 0;
     $3994 = invoke_iiii(25, $3974 | 0, 38504, 29) | 0;
     $3995 = __THREW__;
     __THREW__ = 0;
     do if ($3995 & 1) label = 1544; else {
      __THREW__ = 0;
      invoke_iii(31, $3994 | 0, $$lcssa6476 | 0) | 0;
      $3997 = __THREW__;
      __THREW__ = 0;
      if ($3997 & 1) label = 1544; else {
       $3999 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $125 | 0, $3975 | 0);
       $4000 = __THREW__;
       __THREW__ = 0;
       if ($4000 & 1) {
        $4010 = ___cxa_find_matching_catch() | 0;
        $$532624 = $4010;
        $$53802623 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $3999 | 0, $198 | 0, $$lcssa6326 | 0, $125 | 0);
        $4002 = __THREW__;
        __THREW__ = 0;
        if ($4002 & 1) $$0242 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $3999 | 0, 36640, 183);
         $4004 = __THREW__;
         __THREW__ = 0;
         if ($4004 & 1) $$0242 = 0; else {}
        }
        $4012 = ___cxa_find_matching_catch() | 0;
        $4013 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($125);
        if ($$0242) {
         $$532624 = $4012;
         $$53802623 = $4013;
        } else {
         $$54 = $4012;
         $$5481 = $4013;
         break;
        }
       }
       ___cxa_free_exception($3999 | 0);
       $$54 = $$532624;
       $$5481 = $$53802623;
      }
     } while (0);
     if ((label | 0) == 1544) {
      $4008 = ___cxa_find_matching_catch() | 0;
      $$54 = $4008;
      $$5481 = tempRet0;
     }
     HEAP32[$ss103 >> 2] = 572;
     HEAP32[$3973 >> 2] = 612;
     HEAP32[$3974 >> 2] = 592;
     HEAP32[$3975 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3984);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3975);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3973);
     $$59 = $$54;
     $$5986 = $$5481;
     label = 1665;
     break L2047;
    } while (0);
    $$0$i1748 = $eh$lpad$body$i1745$index145Z2D;
    $$01$i1747 = $eh$lpad$body$i1745$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3973);
   $eh$lpad$body1108$index82Z2D = $$0$i1748;
   $eh$lpad$body1108$indexZ2D = $$01$i1747;
   label = 1042;
   break;
  }
 case 1543:
  {
   $4006 = ___cxa_find_matching_catch() | 0;
   $4007 = tempRet0;
   HEAP32[$318 >> 2] = $$lcssa6472;
   __ZdlPv($$lcssa6472);
   $$59 = $4006;
   $$5986 = $4007;
   label = 1665;
   break;
  }
 case 1550:
  {
   $4015 = $ss104 + 64 | 0;
   $4016 = $ss104 + 8 | 0;
   HEAP32[$4016 >> 2] = 592;
   $4017 = $ss104 + 12 | 0;
   HEAP32[$ss104 >> 2] = 740;
   HEAP32[$4015 >> 2] = 760;
   HEAP32[$ss104 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss104 + 64 | 0, $4017 | 0);
   $4020 = __THREW__;
   __THREW__ = 0;
   if ($4020 & 1) {
    $4032 = ___cxa_find_matching_catch() | 0;
    $$0$i1767 = tempRet0;
    $$01$i1766 = $4032;
   } else {
    HEAP32[$ss104 + 136 >> 2] = 0;
    HEAP32[$ss104 + 140 >> 2] = -1;
    HEAP32[$ss104 >> 2] = 572;
    HEAP32[$4015 >> 2] = 612;
    HEAP32[$4016 >> 2] = 592;
    __THREW__ = 0;
    invoke_vi(177, $4017 | 0);
    $4024 = __THREW__;
    __THREW__ = 0;
    do if ($4024 & 1) {
     $4034 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1764$index150Z2D = tempRet0;
     $eh$lpad$body$i1764$indexZ2D = $4034;
    } else {
     HEAP32[$4017 >> 2] = 904;
     $4026 = $ss104 + 44 | 0;
     HEAP32[$4026 + 0 >> 2] = 0;
     HEAP32[$4026 + 4 >> 2] = 0;
     HEAP32[$4026 + 8 >> 2] = 0;
     HEAP32[$4026 + 12 >> 2] = 0;
     HEAP32[$ss104 + 60 >> 2] = 24;
     HEAP32[$3 + 0 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4017 | 0, $3 | 0);
     $4028 = __THREW__;
     __THREW__ = 0;
     if ($4028 & 1) {
      $4030 = ___cxa_find_matching_catch() | 0;
      $4031 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4026);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4017);
      $eh$lpad$body$i1764$index150Z2D = $4031;
      $eh$lpad$body$i1764$indexZ2D = $4030;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __THREW__ = 0;
     invoke_iiii(25, $4016 | 0, 38536, 40) | 0;
     $4036 = __THREW__;
     __THREW__ = 0;
     do if ($4036 & 1) label = 1564; else {
      __THREW__ = 0;
      $4038 = invoke_iiii(25, $4016 | 0, 38584, 30) | 0;
      $4039 = __THREW__;
      __THREW__ = 0;
      if ($4039 & 1) label = 1564; else {
       __THREW__ = 0;
       invoke_iii(31, $4038 | 0, $$lcssa6477 | 0) | 0;
       $4041 = __THREW__;
       __THREW__ = 0;
       if ($4041 & 1) label = 1564; else {
        $4043 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $126 | 0, $4017 | 0);
        $4044 = __THREW__;
        __THREW__ = 0;
        if ($4044 & 1) {
         $4052 = ___cxa_find_matching_catch() | 0;
         $$552627 = $4052;
         $$55822626 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(16, $4043 | 0, $198 | 0, $$lcssa6327 | 0, $126 | 0);
         $4046 = __THREW__;
         __THREW__ = 0;
         if ($4046 & 1) $$0244 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $4043 | 0, 36640, 183);
          $4048 = __THREW__;
          __THREW__ = 0;
          if ($4048 & 1) $$0244 = 0; else {}
         }
         $4054 = ___cxa_find_matching_catch() | 0;
         $4055 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($126);
         if ($$0244) {
          $$552627 = $4054;
          $$55822626 = $4055;
         } else {
          $$56 = $4054;
          $$5683 = $4055;
          break;
         }
        }
        ___cxa_free_exception($4043 | 0);
        $$56 = $$552627;
        $$5683 = $$55822626;
       }
      }
     } while (0);
     if ((label | 0) == 1564) {
      $4050 = ___cxa_find_matching_catch() | 0;
      $$56 = $4050;
      $$5683 = tempRet0;
     }
     HEAP32[$ss104 >> 2] = 572;
     HEAP32[$4015 >> 2] = 612;
     HEAP32[$4016 >> 2] = 592;
     HEAP32[$4017 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4026);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4017);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4015);
     $$59 = $$56;
     $$5986 = $$5683;
     label = 1665;
     break L2047;
    } while (0);
    $$0$i1767 = $eh$lpad$body$i1764$index150Z2D;
    $$01$i1766 = $eh$lpad$body$i1764$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4015);
   $eh$lpad$body1108$index82Z2D = $$0$i1767;
   $eh$lpad$body1108$indexZ2D = $$01$i1766;
   label = 1042;
   break;
  }
 case 1572:
  {
   $4061 = ___cxa_find_matching_catch() | 0;
   $4062 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
   $$59 = $4061;
   $$5986 = $4062;
   label = 1665;
   break;
  }
 case 1575:
  {
   $4070 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $4070;
   label = 1042;
   break;
  }
 case 1578:
  {
   $4077 = ___cxa_find_matching_catch() | 0;
   $4078 = tempRet0;
   HEAP32[$320 >> 2] = $$lcssa6471;
   __ZdlPv($$lcssa6471);
   $$59 = $4077;
   $$5986 = $4078;
   label = 1665;
   break;
  }
 case 1581:
  {
   $4086 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $4086;
   label = 1042;
   break;
  }
 case 1584:
  {
   $4093 = ___cxa_find_matching_catch() | 0;
   $4094 = tempRet0;
   HEAP32[$322 >> 2] = $$lcssa6470;
   __ZdlPv($$lcssa6470);
   $$59 = $4093;
   $$5986 = $4094;
   label = 1665;
   break;
  }
 case 1587:
  {
   $4102 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $4102;
   label = 1042;
   break;
  }
 case 1590:
  {
   $4109 = ___cxa_find_matching_catch() | 0;
   $4110 = tempRet0;
   HEAP32[$324 >> 2] = $$lcssa6469;
   __ZdlPv($$lcssa6469);
   $$59 = $4109;
   $$5986 = $4110;
   label = 1665;
   break;
  }
 case 1593:
  {
   $4118 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $4118;
   label = 1042;
   break;
  }
 case 1596:
  {
   $4126 = ___cxa_find_matching_catch() | 0;
   $4127 = tempRet0;
   HEAP32[$326 >> 2] = $$lcssa6468;
   __ZdlPv($$lcssa6468);
   $$59 = $4126;
   $$5986 = $4127;
   label = 1665;
   break;
  }
 case 1599:
  {
   $4136 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $4136;
   label = 1042;
   break;
  }
 case 1601:
  {
   $4141 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $138 | 0, 37992, 17);
   $4142 = __THREW__;
   __THREW__ = 0;
   if ($4142 & 1) {
    $4150 = ___cxa_find_matching_catch() | 0;
    $$572630 = $4150;
    $$57842629 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $4141 | 0, $198 | 0, $$lcssa6315 | 0, $138 | 0);
    $4144 = __THREW__;
    __THREW__ = 0;
    if ($4144 & 1) $$0246 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4141 | 0, 36640, 183);
     $4146 = __THREW__;
     __THREW__ = 0;
     if ($4146 & 1) $$0246 = 0; else {}
    }
    $4152 = ___cxa_find_matching_catch() | 0;
    $4153 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
    if ($$0246) {
     $$572630 = $4152;
     $$57842629 = $4153;
    } else {
     $$59 = $4152;
     $$5986 = $4153;
     label = 1665;
     break;
    }
   }
   ___cxa_free_exception($4141 | 0);
   $$59 = $$572630;
   $$5986 = $$57842629;
   label = 1665;
   break;
  }
 case 1604:
  {
   $4148 = ___cxa_find_matching_catch() | 0;
   $4149 = tempRet0;
   HEAP32[$328 >> 2] = $$lcssa6466;
   __ZdlPv($$lcssa6466);
   $$59 = $4148;
   $$5986 = $4149;
   label = 1665;
   break;
  }
 case 1613:
  {
   $4166 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $4166;
   label = 1042;
   break;
  }
 case 1615:
  {
   $$pre4986$pre$phiZZ2D = $$lcssa6463;
   $4210 = $$lcssa6461;
   $4224 = $$lcssa6463;
   $4228 = $$lcssa6310;
   label = 1632;
   break;
  }
 case 1631:
  {
   $$pre4986$pre$phiZZ2D = $$lcssa6465;
   $4210 = $$lcssa6462;
   $4224 = $$lcssa6464;
   $4228 = $$lcssa6311;
   label = 1632;
   break;
  }
 case 1642:
  {
   $4233 = ___cxa_find_matching_catch() | 0;
   $4234 = tempRet0;
   HEAP32[$330 >> 2] = $$lcssa6458;
   __ZdlPv($$lcssa6458);
   $$59 = $4233;
   $$5986 = $4234;
   label = 1665;
   break;
  }
 case 1649:
  {
   __THREW__ = 0;
   $4244 = invoke_iiii(25, 43744, 38648, 38) | 0;
   $4245 = __THREW__;
   __THREW__ = 0;
   do if (!($4245 & 1)) {
    __THREW__ = 0;
    $4247 = invoke_iii(24, $4244 | 0, $$lcssa6383 | 0) | 0;
    $4248 = __THREW__;
    __THREW__ = 0;
    if (!($4248 & 1)) {
     __THREW__ = 0;
     invoke_vii(47, $0 | 0, $4247 + (HEAP32[(HEAP32[$4247 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $4254 = __THREW__;
     __THREW__ = 0;
     if (!($4254 & 1)) {
      __THREW__ = 0;
      $4256 = invoke_iii(22, $0 | 0, 47968) | 0;
      $4257 = __THREW__;
      __THREW__ = 0;
      if (!($4257 & 1)) {
       __THREW__ = 0;
       $4262 = invoke_iii(HEAP32[(HEAP32[$4256 >> 2] | 0) + 28 >> 2] | 0, $4256 | 0, 10) | 0;
       $4263 = __THREW__;
       __THREW__ = 0;
       if (!($4263 & 1)) {
        __ZNSt3__16localeD2Ev($0);
        __THREW__ = 0;
        invoke_iii(25, $4247 | 0, $4262 | 0) | 0;
        $4267 = __THREW__;
        __THREW__ = 0;
        if ($4267 & 1) break;
        __THREW__ = 0;
        invoke_ii(68, $4247 | 0) | 0;
        $4269 = __THREW__;
        __THREW__ = 0;
        if ($4269 & 1) break;
        __THREW__ = 0;
        invoke_v(3);
        $4271 = __THREW__;
        __THREW__ = 0;
        if ($4271 & 1) break;
       }
      }
      $4265 = ___cxa_find_matching_catch() | 0;
      $4266 = tempRet0;
      __ZNSt3__16localeD2Ev($0);
      $eh$lpad$body1108$index82Z2D = $4266;
      $eh$lpad$body1108$indexZ2D = $4265;
      label = 1042;
      break L2047;
     }
    }
   } while (0);
   $2864 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1108$index82Z2D = tempRet0;
   $eh$lpad$body1108$indexZ2D = $2864;
   label = 1042;
   break;
  }
 case 1675:
  {
   $4325 = HEAP32[$$idx$val$i842$lcssa6054 + -140 >> 2] | 0;
   $4327 = (HEAP32[$204 >> 2] | 0) == 19;
   $4328 = ___cxa_allocate_exception(24) | 0;
   $4329 = $4325 + 4 | 0;
   if ($4327) {
    __THREW__ = 0;
    invoke_viiii(16, $4328 | 0, $198 | 0, $4329 | 0, (HEAP32[$205 >> 2] | 0) + 8 | 0);
    $4352 = __THREW__;
    __THREW__ = 0;
    if (!($4352 & 1)) ___cxa_throw($4328 | 0, 36640, 183);
    $4354 = ___cxa_find_matching_catch() | 0;
    $4355 = tempRet0;
    ___cxa_free_exception($4328 | 0);
    $$107 = $4354;
    $$107134 = $4355;
    ___resumeException($$107 | 0);
   }
   __THREW__ = 0;
   invoke_vii(61, $145 | 0, HEAP32[$204 >> 2] | 0);
   $4330 = __THREW__;
   __THREW__ = 0;
   do if ($4330 & 1) {
    $4342 = ___cxa_find_matching_catch() | 0;
    $$622638 = $4342;
    $$62892637 = tempRet0;
   } else {
    __THREW__ = 0;
    $4332 = invoke_iiii(29, $145 | 0, 0, 38688) | 0;
    $4333 = __THREW__;
    __THREW__ = 0;
    if ($4333 & 1) {
     $4344 = ___cxa_find_matching_catch() | 0;
     $4345 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($145);
     $$622638 = $4344;
     $$62892637 = $4345;
     break;
    };
    HEAP32[$144 + 0 >> 2] = HEAP32[$4332 + 0 >> 2];
    HEAP32[$144 + 4 >> 2] = HEAP32[$4332 + 4 >> 2];
    HEAP32[$144 + 8 >> 2] = HEAP32[$4332 + 8 >> 2];
    HEAP32[$4332 + 0 >> 2] = 0;
    HEAP32[$4332 + 4 >> 2] = 0;
    HEAP32[$4332 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4335 = invoke_iii(27, $144 | 0, 43448) | 0;
    $4336 = __THREW__;
    __THREW__ = 0;
    if ($4336 & 1) {
     $4346 = ___cxa_find_matching_catch() | 0;
     $$1237 = 1;
     $$60 = $4346;
     $$6087 = tempRet0;
    } else {
     HEAP32[$143 + 0 >> 2] = HEAP32[$4335 + 0 >> 2];
     HEAP32[$143 + 4 >> 2] = HEAP32[$4335 + 4 >> 2];
     HEAP32[$143 + 8 >> 2] = HEAP32[$4335 + 8 >> 2];
     HEAP32[$4335 + 0 >> 2] = 0;
     HEAP32[$4335 + 4 >> 2] = 0;
     HEAP32[$4335 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4328 | 0, $198 | 0, $4329 | 0, $143 | 0);
     $4338 = __THREW__;
     __THREW__ = 0;
     if ($4338 & 1) $$0236 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4328 | 0, 36640, 183);
      $4340 = __THREW__;
      __THREW__ = 0;
      if ($4340 & 1) $$0236 = 0; else {}
     }
     $4348 = ___cxa_find_matching_catch() | 0;
     $4349 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($143);
     $$1237 = $$0236;
     $$60 = $4348;
     $$6087 = $4349;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($144);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($145);
    if ($$1237) {
     $$622638 = $$60;
     $$62892637 = $$6087;
    } else {
     $$107 = $$60;
     $$107134 = $$6087;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4328 | 0);
   $$107 = $$622638;
   $$107134 = $$62892637;
   ___resumeException($$107 | 0);
   break;
  }
 case 1691:
  {
   $4360 = ___cxa_allocate_exception(24) | 0;
   $4361 = $$lcssa6943 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $148 | 0, HEAP32[$204 >> 2] | 0);
   $4362 = __THREW__;
   __THREW__ = 0;
   do if ($4362 & 1) {
    $4374 = ___cxa_find_matching_catch() | 0;
    $$652642 = $4374;
    $$65922641 = tempRet0;
   } else {
    __THREW__ = 0;
    $4364 = invoke_iiii(29, $148 | 0, 0, 38728) | 0;
    $4365 = __THREW__;
    __THREW__ = 0;
    if ($4365 & 1) {
     $4376 = ___cxa_find_matching_catch() | 0;
     $4377 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
     $$652642 = $4376;
     $$65922641 = $4377;
     break;
    };
    HEAP32[$147 + 0 >> 2] = HEAP32[$4364 + 0 >> 2];
    HEAP32[$147 + 4 >> 2] = HEAP32[$4364 + 4 >> 2];
    HEAP32[$147 + 8 >> 2] = HEAP32[$4364 + 8 >> 2];
    HEAP32[$4364 + 0 >> 2] = 0;
    HEAP32[$4364 + 4 >> 2] = 0;
    HEAP32[$4364 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4367 = invoke_iii(27, $147 | 0, 43448) | 0;
    $4368 = __THREW__;
    __THREW__ = 0;
    if ($4368 & 1) {
     $4378 = ___cxa_find_matching_catch() | 0;
     $$1230 = 1;
     $$63 = $4378;
     $$6390 = tempRet0;
    } else {
     HEAP32[$146 + 0 >> 2] = HEAP32[$4367 + 0 >> 2];
     HEAP32[$146 + 4 >> 2] = HEAP32[$4367 + 4 >> 2];
     HEAP32[$146 + 8 >> 2] = HEAP32[$4367 + 8 >> 2];
     HEAP32[$4367 + 0 >> 2] = 0;
     HEAP32[$4367 + 4 >> 2] = 0;
     HEAP32[$4367 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4360 | 0, $198 | 0, $4361 | 0, $146 | 0);
     $4370 = __THREW__;
     __THREW__ = 0;
     if ($4370 & 1) $$0229 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4360 | 0, 36640, 183);
      $4372 = __THREW__;
      __THREW__ = 0;
      if ($4372 & 1) $$0229 = 0; else {}
     }
     $4380 = ___cxa_find_matching_catch() | 0;
     $4381 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($146);
     $$1230 = $$0229;
     $$63 = $4380;
     $$6390 = $4381;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
    if ($$1230) {
     $$652642 = $$63;
     $$65922641 = $$6390;
    } else {
     $$107 = $$63;
     $$107134 = $$6390;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4360 | 0);
   $$107 = $$652642;
   $$107134 = $$65922641;
   ___resumeException($$107 | 0);
   break;
  }
 case 1705:
  {
   $4393 = ___cxa_allocate_exception(24) | 0;
   $4394 = $$lcssa6216 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $151 | 0, HEAP32[$204 >> 2] | 0);
   $4395 = __THREW__;
   __THREW__ = 0;
   do if ($4395 & 1) {
    $4407 = ___cxa_find_matching_catch() | 0;
    $$682646 = $4407;
    $$68952645 = tempRet0;
   } else {
    __THREW__ = 0;
    $4397 = invoke_iiii(29, $151 | 0, 0, 38768) | 0;
    $4398 = __THREW__;
    __THREW__ = 0;
    if ($4398 & 1) {
     $4409 = ___cxa_find_matching_catch() | 0;
     $4410 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
     $$682646 = $4409;
     $$68952645 = $4410;
     break;
    };
    HEAP32[$150 + 0 >> 2] = HEAP32[$4397 + 0 >> 2];
    HEAP32[$150 + 4 >> 2] = HEAP32[$4397 + 4 >> 2];
    HEAP32[$150 + 8 >> 2] = HEAP32[$4397 + 8 >> 2];
    HEAP32[$4397 + 0 >> 2] = 0;
    HEAP32[$4397 + 4 >> 2] = 0;
    HEAP32[$4397 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4400 = invoke_iii(27, $150 | 0, 43448) | 0;
    $4401 = __THREW__;
    __THREW__ = 0;
    if ($4401 & 1) {
     $4411 = ___cxa_find_matching_catch() | 0;
     $$1222 = 1;
     $$66 = $4411;
     $$6693 = tempRet0;
    } else {
     HEAP32[$149 + 0 >> 2] = HEAP32[$4400 + 0 >> 2];
     HEAP32[$149 + 4 >> 2] = HEAP32[$4400 + 4 >> 2];
     HEAP32[$149 + 8 >> 2] = HEAP32[$4400 + 8 >> 2];
     HEAP32[$4400 + 0 >> 2] = 0;
     HEAP32[$4400 + 4 >> 2] = 0;
     HEAP32[$4400 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4393 | 0, $198 | 0, $4394 | 0, $149 | 0);
     $4403 = __THREW__;
     __THREW__ = 0;
     if ($4403 & 1) $$0221 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4393 | 0, 36640, 183);
      $4405 = __THREW__;
      __THREW__ = 0;
      if ($4405 & 1) $$0221 = 0; else {}
     }
     $4413 = ___cxa_find_matching_catch() | 0;
     $4414 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($149);
     $$1222 = $$0221;
     $$66 = $4413;
     $$6693 = $4414;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
    if ($$1222) {
     $$682646 = $$66;
     $$68952645 = $$6693;
    } else {
     $$107 = $$66;
     $$107134 = $$6693;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4393 | 0);
   $$107 = $$682646;
   $$107134 = $$68952645;
   ___resumeException($$107 | 0);
   break;
  }
 case 1717:
  {
   $4425 = $ss119 + 64 | 0;
   $4426 = $ss119 + 8 | 0;
   HEAP32[$4426 >> 2] = 592;
   $4427 = $ss119 + 12 | 0;
   HEAP32[$ss119 >> 2] = 740;
   HEAP32[$4425 >> 2] = 760;
   HEAP32[$ss119 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss119 + 64 | 0, $4427 | 0);
   $4430 = __THREW__;
   __THREW__ = 0;
   if ($4430 & 1) {
    $4442 = ___cxa_find_matching_catch() | 0;
    $$0$i1982 = tempRet0;
    $$01$i1981 = $4442;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4425);
    ___resumeException($$01$i1981 | 0);
   }
   HEAP32[$ss119 + 136 >> 2] = 0;
   HEAP32[$ss119 + 140 >> 2] = -1;
   HEAP32[$ss119 >> 2] = 572;
   HEAP32[$4425 >> 2] = 612;
   HEAP32[$4426 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $4427 | 0);
   $4434 = __THREW__;
   __THREW__ = 0;
   do if ($4434 & 1) {
    $4444 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i1979$index155Z2D = tempRet0;
    $eh$lpad$body$i1979$indexZ2D = $4444;
   } else {
    HEAP32[$4427 >> 2] = 904;
    $4436 = $ss119 + 44 | 0;
    HEAP32[$4436 + 0 >> 2] = 0;
    HEAP32[$4436 + 4 >> 2] = 0;
    HEAP32[$4436 + 8 >> 2] = 0;
    HEAP32[$4436 + 12 >> 2] = 0;
    HEAP32[$ss119 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $4427 | 0, $0 | 0);
    $4438 = __THREW__;
    __THREW__ = 0;
    if ($4438 & 1) {
     $4440 = ___cxa_find_matching_catch() | 0;
     $4441 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4436);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4427);
     $eh$lpad$body$i1979$index155Z2D = $4441;
     $eh$lpad$body$i1979$indexZ2D = $4440;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $4446 = invoke_iiii(25, $4426 | 0, 38808, 20) | 0;
    $4447 = __THREW__;
    __THREW__ = 0;
    do if ($4447 & 1) label = 1733; else {
     __THREW__ = 0;
     $4449 = invoke_iii(31, $4446 | 0, $$lcssa6223 | 0) | 0;
     $4450 = __THREW__;
     __THREW__ = 0;
     if ($4450 & 1) label = 1733; else {
      __THREW__ = 0;
      $4452 = invoke_iiii(25, $4449 | 0, 38832, 16) | 0;
      $4453 = __THREW__;
      __THREW__ = 0;
      if ($4453 & 1) label = 1733; else {
       __THREW__ = 0;
       $4455 = invoke_iii(31, $4452 | 0, $$lcssa6225 | 0) | 0;
       $4456 = __THREW__;
       __THREW__ = 0;
       if ($4456 & 1) label = 1733; else {
        __THREW__ = 0;
        invoke_iiii(25, $4455 | 0, 40088, 1) | 0;
        $4458 = __THREW__;
        __THREW__ = 0;
        if ($4458 & 1) label = 1733; else {
         $4460 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $152 | 0, $4427 | 0);
         $4461 = __THREW__;
         __THREW__ = 0;
         if ($4461 & 1) {
          $4470 = ___cxa_find_matching_catch() | 0;
          $$692650 = $4470;
          $$69962649 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(16, $4460 | 0, $198 | 0, $$lcssa6217 + 4 | 0, $152 | 0);
          $4464 = __THREW__;
          __THREW__ = 0;
          if ($4464 & 1) $$0217 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $4460 | 0, 36640, 183);
           $4466 = __THREW__;
           __THREW__ = 0;
           if ($4466 & 1) $$0217 = 0; else {}
          }
          $4472 = ___cxa_find_matching_catch() | 0;
          $4473 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($152);
          if ($$0217) {
           $$692650 = $4472;
           $$69962649 = $4473;
          } else {
           $$70 = $4472;
           $$7097 = $4473;
           break;
          }
         }
         ___cxa_free_exception($4460 | 0);
         $$70 = $$692650;
         $$7097 = $$69962649;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 1733) {
     $4468 = ___cxa_find_matching_catch() | 0;
     $$70 = $4468;
     $$7097 = tempRet0;
    }
    HEAP32[$ss119 >> 2] = 572;
    HEAP32[$4425 >> 2] = 612;
    HEAP32[$4426 >> 2] = 592;
    HEAP32[$4427 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4436);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4427);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4425);
    $$107 = $$70;
    $$107134 = $$7097;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i1982 = $eh$lpad$body$i1979$index155Z2D;
   $$01$i1981 = $eh$lpad$body$i1979$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4425);
   ___resumeException($$01$i1981 | 0);
   break;
  }
 case 1742:
  {
   ___assert_fail(38856, 36976, 1805, 38872);
   break;
  }
 case 1744:
  {
   $4493 = ___cxa_allocate_exception(24) | 0;
   $4494 = $$lcssa6211$lcssa6942 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $155 | 0, HEAP32[$204 >> 2] | 0);
   $4495 = __THREW__;
   __THREW__ = 0;
   do if ($4495 & 1) {
    $4507 = ___cxa_find_matching_catch() | 0;
    $$731002652 = tempRet0;
    $$732653 = $4507;
   } else {
    __THREW__ = 0;
    $4497 = invoke_iiii(29, $155 | 0, 0, 38888) | 0;
    $4498 = __THREW__;
    __THREW__ = 0;
    if ($4498 & 1) {
     $4509 = ___cxa_find_matching_catch() | 0;
     $4510 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
     $$731002652 = $4510;
     $$732653 = $4509;
     break;
    };
    HEAP32[$154 + 0 >> 2] = HEAP32[$4497 + 0 >> 2];
    HEAP32[$154 + 4 >> 2] = HEAP32[$4497 + 4 >> 2];
    HEAP32[$154 + 8 >> 2] = HEAP32[$4497 + 8 >> 2];
    HEAP32[$4497 + 0 >> 2] = 0;
    HEAP32[$4497 + 4 >> 2] = 0;
    HEAP32[$4497 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4500 = invoke_iii(27, $154 | 0, 43448) | 0;
    $4501 = __THREW__;
    __THREW__ = 0;
    if ($4501 & 1) {
     $4511 = ___cxa_find_matching_catch() | 0;
     $$1209 = 1;
     $$71 = $4511;
     $$7198 = tempRet0;
    } else {
     HEAP32[$153 + 0 >> 2] = HEAP32[$4500 + 0 >> 2];
     HEAP32[$153 + 4 >> 2] = HEAP32[$4500 + 4 >> 2];
     HEAP32[$153 + 8 >> 2] = HEAP32[$4500 + 8 >> 2];
     HEAP32[$4500 + 0 >> 2] = 0;
     HEAP32[$4500 + 4 >> 2] = 0;
     HEAP32[$4500 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4493 | 0, $198 | 0, $4494 | 0, $153 | 0);
     $4503 = __THREW__;
     __THREW__ = 0;
     if ($4503 & 1) $$0208 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4493 | 0, 36640, 183);
      $4505 = __THREW__;
      __THREW__ = 0;
      if ($4505 & 1) $$0208 = 0; else {}
     }
     $4513 = ___cxa_find_matching_catch() | 0;
     $4514 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($153);
     $$1209 = $$0208;
     $$71 = $4513;
     $$7198 = $4514;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($154);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
    if ($$1209) {
     $$731002652 = $$7198;
     $$732653 = $$71;
    } else {
     $$107 = $$71;
     $$107134 = $$7198;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4493 | 0);
   $$107 = $$732653;
   $$107134 = $$731002652;
   ___resumeException($$107 | 0);
   break;
  }
 case 1757:
  {
   ___assert_fail(38856, 36976, 1819, 38872);
   break;
  }
 case 1759:
  {
   $4526 = ___cxa_allocate_exception(24) | 0;
   $4527 = $$lcssa6213 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $158 | 0, HEAP32[$204 >> 2] | 0);
   $4528 = __THREW__;
   __THREW__ = 0;
   do if ($4528 & 1) {
    $4540 = ___cxa_find_matching_catch() | 0;
    $$761032656 = tempRet0;
    $$762657 = $4540;
   } else {
    __THREW__ = 0;
    $4530 = invoke_iiii(29, $158 | 0, 0, 38928) | 0;
    $4531 = __THREW__;
    __THREW__ = 0;
    if ($4531 & 1) {
     $4542 = ___cxa_find_matching_catch() | 0;
     $4543 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($158);
     $$761032656 = $4543;
     $$762657 = $4542;
     break;
    };
    HEAP32[$157 + 0 >> 2] = HEAP32[$4530 + 0 >> 2];
    HEAP32[$157 + 4 >> 2] = HEAP32[$4530 + 4 >> 2];
    HEAP32[$157 + 8 >> 2] = HEAP32[$4530 + 8 >> 2];
    HEAP32[$4530 + 0 >> 2] = 0;
    HEAP32[$4530 + 4 >> 2] = 0;
    HEAP32[$4530 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4533 = invoke_iii(27, $157 | 0, 43448) | 0;
    $4534 = __THREW__;
    __THREW__ = 0;
    if ($4534 & 1) {
     $4544 = ___cxa_find_matching_catch() | 0;
     $$1193 = 1;
     $$74 = $4544;
     $$74101 = tempRet0;
    } else {
     HEAP32[$156 + 0 >> 2] = HEAP32[$4533 + 0 >> 2];
     HEAP32[$156 + 4 >> 2] = HEAP32[$4533 + 4 >> 2];
     HEAP32[$156 + 8 >> 2] = HEAP32[$4533 + 8 >> 2];
     HEAP32[$4533 + 0 >> 2] = 0;
     HEAP32[$4533 + 4 >> 2] = 0;
     HEAP32[$4533 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4526 | 0, $198 | 0, $4527 | 0, $156 | 0);
     $4536 = __THREW__;
     __THREW__ = 0;
     if ($4536 & 1) $$0192 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4526 | 0, 36640, 183);
      $4538 = __THREW__;
      __THREW__ = 0;
      if ($4538 & 1) $$0192 = 0; else {}
     }
     $4546 = ___cxa_find_matching_catch() | 0;
     $4547 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($156);
     $$1193 = $$0192;
     $$74 = $4546;
     $$74101 = $4547;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($157);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($158);
    if ($$1193) {
     $$761032656 = $$74101;
     $$762657 = $$74;
    } else {
     $$107 = $$74;
     $$107134 = $$74101;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4526 | 0);
   $$107 = $$762657;
   $$107134 = $$761032656;
   ___resumeException($$107 | 0);
   break;
  }
 case 1774:
  {
   $4561 = $ss125 + 64 | 0;
   $4562 = $ss125 + 8 | 0;
   HEAP32[$4562 >> 2] = 592;
   $4563 = $ss125 + 12 | 0;
   HEAP32[$ss125 >> 2] = 740;
   HEAP32[$4561 >> 2] = 760;
   HEAP32[$ss125 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss125 + 64 | 0, $4563 | 0);
   $4566 = __THREW__;
   __THREW__ = 0;
   if ($4566 & 1) {
    $4578 = ___cxa_find_matching_catch() | 0;
    $$0$i2016 = tempRet0;
    $$01$i2015 = $4578;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4561);
    ___resumeException($$01$i2015 | 0);
   }
   HEAP32[$ss125 + 136 >> 2] = 0;
   HEAP32[$ss125 + 140 >> 2] = -1;
   HEAP32[$ss125 >> 2] = 572;
   HEAP32[$4561 >> 2] = 612;
   HEAP32[$4562 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $4563 | 0);
   $4570 = __THREW__;
   __THREW__ = 0;
   do if ($4570 & 1) {
    $4580 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2013$index160Z2D = tempRet0;
    $eh$lpad$body$i2013$indexZ2D = $4580;
   } else {
    HEAP32[$4563 >> 2] = 904;
    $4572 = $ss125 + 44 | 0;
    HEAP32[$4572 + 0 >> 2] = 0;
    HEAP32[$4572 + 4 >> 2] = 0;
    HEAP32[$4572 + 8 >> 2] = 0;
    HEAP32[$4572 + 12 >> 2] = 0;
    HEAP32[$ss125 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $4563 | 0, $0 | 0);
    $4574 = __THREW__;
    __THREW__ = 0;
    if ($4574 & 1) {
     $4576 = ___cxa_find_matching_catch() | 0;
     $4577 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4572);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4563);
     $eh$lpad$body$i2013$index160Z2D = $4577;
     $eh$lpad$body$i2013$indexZ2D = $4576;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $4582 = invoke_iiii(25, $4562 | 0, 38968, 21) | 0;
    $4583 = __THREW__;
    __THREW__ = 0;
    do if ($4583 & 1) label = 1790; else {
     __THREW__ = 0;
     $4585 = invoke_iii(31, $4582 | 0, $$lcssa6221 | 0) | 0;
     $4586 = __THREW__;
     __THREW__ = 0;
     if ($4586 & 1) label = 1790; else {
      __THREW__ = 0;
      $4588 = invoke_iiii(25, $4585 | 0, 38832, 16) | 0;
      $4589 = __THREW__;
      __THREW__ = 0;
      if ($4589 & 1) label = 1790; else {
       __THREW__ = 0;
       $4591 = invoke_iii(31, $4588 | 0, $$lcssa6219 | 0) | 0;
       $4592 = __THREW__;
       __THREW__ = 0;
       if ($4592 & 1) label = 1790; else {
        __THREW__ = 0;
        invoke_iiii(25, $4591 | 0, 40088, 1) | 0;
        $4594 = __THREW__;
        __THREW__ = 0;
        if ($4594 & 1) label = 1790; else {
         $4596 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $159 | 0, $4563 | 0);
         $4597 = __THREW__;
         __THREW__ = 0;
         if ($4597 & 1) {
          $4606 = ___cxa_find_matching_catch() | 0;
          $$771042660 = tempRet0;
          $$772661 = $4606;
         } else {
          __THREW__ = 0;
          invoke_viiii(16, $4596 | 0, $198 | 0, $$lcssa6214 + 4 | 0, $159 | 0);
          $4600 = __THREW__;
          __THREW__ = 0;
          if ($4600 & 1) $$0182 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $4596 | 0, 36640, 183);
           $4602 = __THREW__;
           __THREW__ = 0;
           if ($4602 & 1) $$0182 = 0; else {}
          }
          $4608 = ___cxa_find_matching_catch() | 0;
          $4609 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($159);
          if ($$0182) {
           $$771042660 = $4609;
           $$772661 = $4608;
          } else {
           $$78 = $4608;
           $$78105 = $4609;
           break;
          }
         }
         ___cxa_free_exception($4596 | 0);
         $$78 = $$772661;
         $$78105 = $$771042660;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 1790) {
     $4604 = ___cxa_find_matching_catch() | 0;
     $$78 = $4604;
     $$78105 = tempRet0;
    }
    HEAP32[$ss125 >> 2] = 572;
    HEAP32[$4561 >> 2] = 612;
    HEAP32[$4562 >> 2] = 592;
    HEAP32[$4563 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4572);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4563);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4561);
    $$107 = $$78;
    $$107134 = $$78105;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2016 = $eh$lpad$body$i2013$index160Z2D;
   $$01$i2015 = $eh$lpad$body$i2013$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4561);
   ___resumeException($$01$i2015 | 0);
   break;
  }
 case 1800:
  {
   $4619 = ___cxa_find_matching_catch() | 0;
   $4620 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
   $$107 = $4619;
   $$107134 = $4620;
   ___resumeException($$107 | 0);
   break;
  }
 case 1801:
  {
   $4621 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 38992, 44) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $4621 + (HEAP32[(HEAP32[$4621 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $4626 = invoke_iii(22, $0 | 0, 47968) | 0;
   $4627 = __THREW__;
   __THREW__ = 0;
   if ($4627 & 1) {
    $4635 = ___cxa_find_matching_catch() | 0;
    $4636 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($4635 | 0);
   }
   __THREW__ = 0;
   $4632 = invoke_iii(HEAP32[(HEAP32[$4626 >> 2] | 0) + 28 >> 2] | 0, $4626 | 0, 10) | 0;
   $4633 = __THREW__;
   __THREW__ = 0;
   if ($4633 & 1) {
    $4635 = ___cxa_find_matching_catch() | 0;
    $4636 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($4635 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($4621, $4632) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($4621) | 0;
    _abort();
   }
   break;
  }
 case 1806:
  {
   $4640 = ___cxa_allocate_exception(24) | 0;
   $4641 = $$lcssa6941 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $164 | 0, HEAP32[$204 >> 2] | 0);
   $4642 = __THREW__;
   __THREW__ = 0;
   do if ($4642 & 1) {
    $4654 = ___cxa_find_matching_catch() | 0;
    $$811082663 = tempRet0;
    $$812664 = $4654;
   } else {
    __THREW__ = 0;
    $4644 = invoke_iiii(29, $164 | 0, 0, 39040) | 0;
    $4645 = __THREW__;
    __THREW__ = 0;
    if ($4645 & 1) {
     $4656 = ___cxa_find_matching_catch() | 0;
     $4657 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
     $$811082663 = $4657;
     $$812664 = $4656;
     break;
    };
    HEAP32[$163 + 0 >> 2] = HEAP32[$4644 + 0 >> 2];
    HEAP32[$163 + 4 >> 2] = HEAP32[$4644 + 4 >> 2];
    HEAP32[$163 + 8 >> 2] = HEAP32[$4644 + 8 >> 2];
    HEAP32[$4644 + 0 >> 2] = 0;
    HEAP32[$4644 + 4 >> 2] = 0;
    HEAP32[$4644 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4647 = invoke_iii(27, $163 | 0, 43448) | 0;
    $4648 = __THREW__;
    __THREW__ = 0;
    if ($4648 & 1) {
     $4658 = ___cxa_find_matching_catch() | 0;
     $$1177 = 1;
     $$79 = $4658;
     $$79106 = tempRet0;
    } else {
     HEAP32[$162 + 0 >> 2] = HEAP32[$4647 + 0 >> 2];
     HEAP32[$162 + 4 >> 2] = HEAP32[$4647 + 4 >> 2];
     HEAP32[$162 + 8 >> 2] = HEAP32[$4647 + 8 >> 2];
     HEAP32[$4647 + 0 >> 2] = 0;
     HEAP32[$4647 + 4 >> 2] = 0;
     HEAP32[$4647 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4640 | 0, $198 | 0, $4641 | 0, $162 | 0);
     $4650 = __THREW__;
     __THREW__ = 0;
     if ($4650 & 1) $$0176 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4640 | 0, 36640, 183);
      $4652 = __THREW__;
      __THREW__ = 0;
      if ($4652 & 1) $$0176 = 0; else {}
     }
     $4660 = ___cxa_find_matching_catch() | 0;
     $4661 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($162);
     $$1177 = $$0176;
     $$79 = $4660;
     $$79106 = $4661;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($163);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
    if ($$1177) {
     $$811082663 = $$79106;
     $$812664 = $$79;
    } else {
     $$107 = $$79;
     $$107134 = $$79106;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4640 | 0);
   $$107 = $$812664;
   $$107134 = $$811082663;
   ___resumeException($$107 | 0);
   break;
  }
 case 1820:
  {
   $4668 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $165 | 0, 39096, 28);
   $4669 = __THREW__;
   __THREW__ = 0;
   if ($4669 & 1) {
    $4676 = ___cxa_find_matching_catch() | 0;
    $$821092667 = tempRet0;
    $$822668 = $4676;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $4668 | 0, $198 | 0, $$lcssa6190 + 4 | 0, $165 | 0);
    $4672 = __THREW__;
    __THREW__ = 0;
    if ($4672 & 1) $$0170 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4668 | 0, 36640, 183);
     $4674 = __THREW__;
     __THREW__ = 0;
     if ($4674 & 1) $$0170 = 0; else {}
    }
    $4678 = ___cxa_find_matching_catch() | 0;
    $4679 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
    if ($$0170) {
     $$821092667 = $4679;
     $$822668 = $4678;
    } else {
     $$107 = $4678;
     $$107134 = $4679;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($4668 | 0);
   $$107 = $$822668;
   $$107134 = $$821092667;
   ___resumeException($$107 | 0);
   break;
  }
 case 1837:
  {
   $4700 = ___cxa_allocate_exception(24) | 0;
   $4701 = $$lcssa6191 + 4 | 0;
   HEAP32[$167 + 0 >> 2] = 0;
   HEAP32[$167 + 4 >> 2] = 0;
   HEAP32[$167 + 8 >> 2] = 0;
   $4702 = HEAP8[$$lcssa6197 >> 0] | 0;
   if (!($4702 & 1)) $4710 = ($4702 & 255) >>> 1; else $4710 = HEAP32[$$lcssa6196 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $167 | 0, 39128, 23, $4710 + 23 | 0);
   $4711 = __THREW__;
   __THREW__ = 0;
   do if ($4711 & 1) label = 1848; else {
    if (!(HEAP8[$$lcssa6197 >> 0] & 1)) $4719 = $$lcssa6197 + 1 | 0; else $4719 = HEAP32[$$lcssa6196 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $167 | 0, $4719 | 0, $4710 | 0) | 0;
    $4720 = __THREW__;
    __THREW__ = 0;
    if ($4720 & 1) label = 1848; else {
     __THREW__ = 0;
     $4722 = invoke_iii(27, $167 | 0, 37544) | 0;
     $4723 = __THREW__;
     __THREW__ = 0;
     if ($4723 & 1) {
      $4731 = ___cxa_find_matching_catch() | 0;
      $4732 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
      $$841112670 = $4732;
      $$842671 = $4731;
      break;
     };
     HEAP32[$166 + 0 >> 2] = HEAP32[$4722 + 0 >> 2];
     HEAP32[$166 + 4 >> 2] = HEAP32[$4722 + 4 >> 2];
     HEAP32[$166 + 8 >> 2] = HEAP32[$4722 + 8 >> 2];
     HEAP32[$4722 + 0 >> 2] = 0;
     HEAP32[$4722 + 4 >> 2] = 0;
     HEAP32[$4722 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4700 | 0, $198 | 0, $4701 | 0, $166 | 0);
     $4725 = __THREW__;
     __THREW__ = 0;
     if ($4725 & 1) $$0163 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4700 | 0, 36640, 183);
      $4727 = __THREW__;
      __THREW__ = 0;
      if ($4727 & 1) $$0163 = 0; else {}
     }
     $4733 = ___cxa_find_matching_catch() | 0;
     $4734 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($166);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
     if ($$0163) {
      $$841112670 = $4734;
      $$842671 = $4733;
     } else {
      $$107 = $4733;
      $$107134 = $4734;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 1848) {
    $4729 = ___cxa_find_matching_catch() | 0;
    $4730 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
    $$841112670 = $4730;
    $$842671 = $4729;
   }
   ___cxa_free_exception($4700 | 0);
   $$107 = $$842671;
   $$107134 = $$841112670;
   ___resumeException($$107 | 0);
   break;
  }
 case 1959:
  {
   $4934 = ___cxa_find_matching_catch() | 0;
   $4935 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($169, HEAP32[$337 >> 2] | 0);
   $$86 = $4934;
   $$86113 = $4935;
   label = 1963;
   break;
  }
 case 1960:
  {
   $4937 = ___cxa_find_matching_catch() | 0;
   $4938 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$341 >> 2] | 0);
   $$85 = $4937;
   $$85112 = $4938;
   label = 1962;
   break;
  }
 case 1961:
  {
   $4940 = ___cxa_find_matching_catch() | 0;
   $4941 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$341 >> 2] | 0);
   $$85 = $4940;
   $$85112 = $4941;
   label = 1962;
   break;
  }
 case 1965:
  {
   $4949 = ___cxa_allocate_exception(24) | 0;
   $4950 = $$lcssa6186 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $172 | 0, HEAP32[$204 >> 2] | 0);
   $4951 = __THREW__;
   __THREW__ = 0;
   do if ($4951 & 1) {
    $4960 = ___cxa_find_matching_catch() | 0;
    $$881152674 = tempRet0;
    $$882675 = $4960;
   } else {
    __THREW__ = 0;
    $4953 = invoke_iiii(29, $172 | 0, 0, 39152) | 0;
    $4954 = __THREW__;
    __THREW__ = 0;
    if ($4954 & 1) {
     $4962 = ___cxa_find_matching_catch() | 0;
     $4963 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($172);
     $$881152674 = $4963;
     $$882675 = $4962;
     break;
    };
    HEAP32[$171 + 0 >> 2] = HEAP32[$4953 + 0 >> 2];
    HEAP32[$171 + 4 >> 2] = HEAP32[$4953 + 4 >> 2];
    HEAP32[$171 + 8 >> 2] = HEAP32[$4953 + 8 >> 2];
    HEAP32[$4953 + 0 >> 2] = 0;
    HEAP32[$4953 + 4 >> 2] = 0;
    HEAP32[$4953 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $4949 | 0, $198 | 0, $4950 | 0, $171 | 0);
    $4956 = __THREW__;
    __THREW__ = 0;
    if ($4956 & 1) $$0150 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4949 | 0, 36640, 183);
     $4958 = __THREW__;
     __THREW__ = 0;
     if ($4958 & 1) $$0150 = 0; else {}
    }
    $4964 = ___cxa_find_matching_catch() | 0;
    $4965 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($171);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($172);
    if ($$0150) {
     $$881152674 = $4965;
     $$882675 = $4964;
    } else {
     $$107 = $4964;
     $$107134 = $4965;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4949 | 0);
   $$107 = $$882675;
   $$107134 = $$881152674;
   ___resumeException($$107 | 0);
   break;
  }
 case 1976:
  {
   $4976 = ___cxa_find_matching_catch() | 0;
   $4977 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($175, HEAP32[$347 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($174, HEAP32[$344 >> 2] | 0);
   $$107 = $4976;
   $$107134 = $4977;
   ___resumeException($$107 | 0);
   break;
  }
 case 1993:
  {
   $5022 = $ss134 + 64 | 0;
   $5023 = $ss134 + 8 | 0;
   HEAP32[$5023 >> 2] = 592;
   $5024 = $ss134 + 12 | 0;
   HEAP32[$ss134 >> 2] = 740;
   HEAP32[$5022 >> 2] = 760;
   HEAP32[$ss134 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss134 + 64 | 0, $5024 | 0);
   $5027 = __THREW__;
   __THREW__ = 0;
   if ($5027 & 1) {
    $5039 = ___cxa_find_matching_catch() | 0;
    $$0$i2196 = tempRet0;
    $$01$i2195 = $5039;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5022);
    ___resumeException($$01$i2195 | 0);
   }
   HEAP32[$ss134 + 136 >> 2] = 0;
   HEAP32[$ss134 + 140 >> 2] = -1;
   HEAP32[$ss134 >> 2] = 572;
   HEAP32[$5022 >> 2] = 612;
   HEAP32[$5023 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $5024 | 0);
   $5031 = __THREW__;
   __THREW__ = 0;
   do if ($5031 & 1) {
    $5041 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2193$index165Z2D = tempRet0;
    $eh$lpad$body$i2193$indexZ2D = $5041;
   } else {
    HEAP32[$5024 >> 2] = 904;
    $5033 = $ss134 + 44 | 0;
    HEAP32[$5033 + 0 >> 2] = 0;
    HEAP32[$5033 + 4 >> 2] = 0;
    HEAP32[$5033 + 8 >> 2] = 0;
    HEAP32[$5033 + 12 >> 2] = 0;
    HEAP32[$ss134 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $5024 | 0, $0 | 0);
    $5035 = __THREW__;
    __THREW__ = 0;
    if ($5035 & 1) {
     $5037 = ___cxa_find_matching_catch() | 0;
     $5038 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5033);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5024);
     $eh$lpad$body$i2193$index165Z2D = $5038;
     $eh$lpad$body$i2193$indexZ2D = $5037;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $5043 = invoke_iiii(25, $5023 | 0, 39192, 27) | 0;
    $5044 = __THREW__;
    __THREW__ = 0;
    do if ($5044 & 1) label = 2010; else {
     __THREW__ = 0;
     invoke_vii(61, $176 | 0, HEAP32[$204 >> 2] | 0);
     $5046 = __THREW__;
     __THREW__ = 0;
     if ($5046 & 1) label = 2010; else {
      $5048 = HEAP8[$176 >> 0] | 0;
      if (!($5048 & 1)) {
       $5058 = $176 + 1 | 0;
       $5059 = ($5048 & 255) >>> 1;
      } else {
       $5058 = HEAP32[$176 + 8 >> 2] | 0;
       $5059 = HEAP32[$176 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $5043 | 0, $5058 | 0, $5059 | 0) | 0;
      $5060 = __THREW__;
      __THREW__ = 0;
      if ($5060 & 1) {
       $5072 = ___cxa_find_matching_catch() | 0;
       $5073 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
       $$90 = $5072;
       $$90117 = $5073;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
      $5062 = ___cxa_allocate_exception(24) | 0;
      __THREW__ = 0;
      invoke_vii(43, $177 | 0, $5024 | 0);
      $5063 = __THREW__;
      __THREW__ = 0;
      if ($5063 & 1) {
       $5074 = ___cxa_find_matching_catch() | 0;
       $$891162678 = tempRet0;
       $$892679 = $5074;
      } else {
       __THREW__ = 0;
       invoke_viiii(16, $5062 | 0, $198 | 0, $$lcssa6158 + 4 | 0, $177 | 0);
       $5066 = __THREW__;
       __THREW__ = 0;
       if ($5066 & 1) $$0143 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $5062 | 0, 36640, 183);
        $5068 = __THREW__;
        __THREW__ = 0;
        if ($5068 & 1) $$0143 = 0; else {}
       }
       $5076 = ___cxa_find_matching_catch() | 0;
       $5077 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($177);
       if ($$0143) {
        $$891162678 = $5077;
        $$892679 = $5076;
       } else {
        $$90 = $5076;
        $$90117 = $5077;
        break;
       }
      }
      ___cxa_free_exception($5062 | 0);
      $$90 = $$892679;
      $$90117 = $$891162678;
     }
    } while (0);
    if ((label | 0) == 2010) {
     $5070 = ___cxa_find_matching_catch() | 0;
     $$90 = $5070;
     $$90117 = tempRet0;
    }
    HEAP32[$ss134 >> 2] = 572;
    HEAP32[$5022 >> 2] = 612;
    HEAP32[$5023 >> 2] = 592;
    HEAP32[$5024 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5033);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5024);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5022);
    $$107 = $$90;
    $$107134 = $$90117;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2196 = $eh$lpad$body$i2193$index165Z2D;
   $$01$i2195 = $eh$lpad$body$i2193$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5022);
   ___resumeException($$01$i2195 | 0);
   break;
  }
 case 2026:
  {
   $5094 = ___cxa_allocate_exception(24) | 0;
   $5095 = $$lcssa6159 + 4 | 0;
   HEAP32[$179 + 0 >> 2] = 0;
   HEAP32[$179 + 4 >> 2] = 0;
   HEAP32[$179 + 8 >> 2] = 0;
   $5096 = HEAP8[$$lcssa6169 >> 0] | 0;
   if (!($5096 & 1)) $5104 = ($5096 & 255) >>> 1; else $5104 = HEAP32[$$lcssa6164 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $179 | 0, 39128, 23, $5104 + 23 | 0);
   $5105 = __THREW__;
   __THREW__ = 0;
   do if ($5105 & 1) label = 2037; else {
    if (!(HEAP8[$$lcssa6169 >> 0] & 1)) $5113 = $$lcssa6169 + 1 | 0; else $5113 = HEAP32[$$lcssa6164 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $179 | 0, $5113 | 0, $5104 | 0) | 0;
    $5114 = __THREW__;
    __THREW__ = 0;
    if ($5114 & 1) label = 2037; else {
     __THREW__ = 0;
     $5116 = invoke_iii(27, $179 | 0, 37544) | 0;
     $5117 = __THREW__;
     __THREW__ = 0;
     if ($5117 & 1) {
      $5125 = ___cxa_find_matching_catch() | 0;
      $5126 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($179);
      $$921192681 = $5126;
      $$922682 = $5125;
      break;
     };
     HEAP32[$178 + 0 >> 2] = HEAP32[$5116 + 0 >> 2];
     HEAP32[$178 + 4 >> 2] = HEAP32[$5116 + 4 >> 2];
     HEAP32[$178 + 8 >> 2] = HEAP32[$5116 + 8 >> 2];
     HEAP32[$5116 + 0 >> 2] = 0;
     HEAP32[$5116 + 4 >> 2] = 0;
     HEAP32[$5116 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $5094 | 0, $198 | 0, $5095 | 0, $178 | 0);
     $5119 = __THREW__;
     __THREW__ = 0;
     if ($5119 & 1) $$0137 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5094 | 0, 36640, 183);
      $5121 = __THREW__;
      __THREW__ = 0;
      if ($5121 & 1) $$0137 = 0; else {}
     }
     $5127 = ___cxa_find_matching_catch() | 0;
     $5128 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($178);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($179);
     if ($$0137) {
      $$921192681 = $5128;
      $$922682 = $5127;
     } else {
      $$107 = $5127;
      $$107134 = $5128;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 2037) {
    $5123 = ___cxa_find_matching_catch() | 0;
    $5124 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($179);
    $$921192681 = $5124;
    $$922682 = $5123;
   }
   ___cxa_free_exception($5094 | 0);
   $$107 = $$922682;
   $$107134 = $$921192681;
   ___resumeException($$107 | 0);
   break;
  }
 case 2132:
  {
   $5301 = ___cxa_find_matching_catch() | 0;
   $5302 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($181, HEAP32[$350 >> 2] | 0);
   $$94 = $5301;
   $$94121 = $5302;
   label = 2136;
   break;
  }
 case 2133:
  {
   $5304 = ___cxa_find_matching_catch() | 0;
   $5305 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($182, HEAP32[$354 >> 2] | 0);
   $$93 = $5304;
   $$93120 = $5305;
   label = 2135;
   break;
  }
 case 2134:
  {
   $5307 = ___cxa_find_matching_catch() | 0;
   $5308 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($182, HEAP32[$354 >> 2] | 0);
   $$93 = $5307;
   $$93120 = $5308;
   label = 2135;
   break;
  }
 case 2155:
  {
   $5357 = ___cxa_find_matching_catch() | 0;
   $5358 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($362);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($357);
   $eh$lpad$body$i2349$index170Z2D = $5358;
   $eh$lpad$body$i2349$indexZ2D = $5357;
   label = 2158;
   break;
  }
 case 2156:
  {
   $5359 = ___cxa_find_matching_catch() | 0;
   $$0$i2352 = tempRet0;
   $$01$i2351 = $5359;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($355);
   ___resumeException($$01$i2351 | 0);
   break;
  }
 case 2157:
  {
   $5361 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i2349$index170Z2D = tempRet0;
   $eh$lpad$body$i2349$indexZ2D = $5361;
   label = 2158;
   break;
  }
 case 2165:
  {
   $5382 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body2376$index176Z2D = tempRet0;
   $eh$lpad$body2376$indexZ2D = $5382;
   label = 2166;
   break;
  }
 case 2169:
  {
   $5391 = ___cxa_find_matching_catch() | 0;
   $5392 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $eh$lpad$body2376$index176Z2D = $5392;
   $eh$lpad$body2376$indexZ2D = $5391;
   label = 2166;
   break;
  }
 case 2175:
  {
   $5404 = ___cxa_find_matching_catch() | 0;
   $5405 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
   $$95 = $5404;
   $$95122 = $5405;
   label = 2194;
   break;
  }
 case 2183:
  {
   $5432 = ___cxa_find_matching_catch() | 0;
   $5433 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $eh$lpad$body2376$index176Z2D = $5433;
   $eh$lpad$body2376$indexZ2D = $5432;
   label = 2166;
   break;
  }
 case 2189:
  {
   $5445 = ___cxa_find_matching_catch() | 0;
   $5446 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184);
   $$95 = $5445;
   $$95122 = $5446;
   label = 2194;
   break;
  }
 case 2193:
  {
   $5451 = ___cxa_find_matching_catch() | 0;
   $5452 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($186);
   $$95 = $5451;
   $$95122 = $5452;
   label = 2194;
   break;
  }
 case 2198:
  {
   $5461 = ___cxa_allocate_exception(24) | 0;
   $5462 = $$lcssa6150 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(66, $189 | 0, HEAP32[$$lcssa6152 >> 2] | 0);
   $5464 = __THREW__;
   __THREW__ = 0;
   do if ($5464 & 1) {
    $5476 = ___cxa_find_matching_catch() | 0;
    $$981252685 = tempRet0;
    $$982686 = $5476;
   } else {
    __THREW__ = 0;
    $5466 = invoke_iiii(29, $189 | 0, 0, 39224) | 0;
    $5467 = __THREW__;
    __THREW__ = 0;
    if ($5467 & 1) {
     $5478 = ___cxa_find_matching_catch() | 0;
     $5479 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
     $$981252685 = $5479;
     $$982686 = $5478;
     break;
    };
    HEAP32[$188 + 0 >> 2] = HEAP32[$5466 + 0 >> 2];
    HEAP32[$188 + 4 >> 2] = HEAP32[$5466 + 4 >> 2];
    HEAP32[$188 + 8 >> 2] = HEAP32[$5466 + 8 >> 2];
    HEAP32[$5466 + 0 >> 2] = 0;
    HEAP32[$5466 + 4 >> 2] = 0;
    HEAP32[$5466 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5469 = invoke_iii(27, $188 | 0, 37960) | 0;
    $5470 = __THREW__;
    __THREW__ = 0;
    if ($5470 & 1) {
     $5480 = ___cxa_find_matching_catch() | 0;
     $$17 = 1;
     $$96 = $5480;
     $$96123 = tempRet0;
    } else {
     HEAP32[$187 + 0 >> 2] = HEAP32[$5469 + 0 >> 2];
     HEAP32[$187 + 4 >> 2] = HEAP32[$5469 + 4 >> 2];
     HEAP32[$187 + 8 >> 2] = HEAP32[$5469 + 8 >> 2];
     HEAP32[$5469 + 0 >> 2] = 0;
     HEAP32[$5469 + 4 >> 2] = 0;
     HEAP32[$5469 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $5461 | 0, $198 | 0, $5462 | 0, $187 | 0);
     $5472 = __THREW__;
     __THREW__ = 0;
     if ($5472 & 1) $$06 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5461 | 0, 36640, 183);
      $5474 = __THREW__;
      __THREW__ = 0;
      if ($5474 & 1) $$06 = 0; else {}
     }
     $5482 = ___cxa_find_matching_catch() | 0;
     $5483 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($187);
     $$17 = $$06;
     $$96 = $5482;
     $$96123 = $5483;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($188);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
    if ($$17) {
     $$981252685 = $$96123;
     $$982686 = $$96;
    } else {
     $$107 = $$96;
     $$107134 = $$96123;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5461 | 0);
   $$107 = $$982686;
   $$107134 = $$981252685;
   ___resumeException($$107 | 0);
   break;
  }
 case 2212:
  {
   $5492 = ___cxa_allocate_exception(24) | 0;
   $5493 = $$lcssa6149 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(66, $192 | 0, HEAP32[$$lcssa6151 >> 2] | 0);
   $5495 = __THREW__;
   __THREW__ = 0;
   do if ($5495 & 1) {
    $5507 = ___cxa_find_matching_catch() | 0;
    $$1011282689 = tempRet0;
    $$1012690 = $5507;
   } else {
    __THREW__ = 0;
    $5497 = invoke_iiii(29, $192 | 0, 0, 39224) | 0;
    $5498 = __THREW__;
    __THREW__ = 0;
    if ($5498 & 1) {
     $5509 = ___cxa_find_matching_catch() | 0;
     $5510 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($192);
     $$1011282689 = $5510;
     $$1012690 = $5509;
     break;
    };
    HEAP32[$191 + 0 >> 2] = HEAP32[$5497 + 0 >> 2];
    HEAP32[$191 + 4 >> 2] = HEAP32[$5497 + 4 >> 2];
    HEAP32[$191 + 8 >> 2] = HEAP32[$5497 + 8 >> 2];
    HEAP32[$5497 + 0 >> 2] = 0;
    HEAP32[$5497 + 4 >> 2] = 0;
    HEAP32[$5497 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5500 = invoke_iii(27, $191 | 0, 38016) | 0;
    $5501 = __THREW__;
    __THREW__ = 0;
    if ($5501 & 1) {
     $5511 = ___cxa_find_matching_catch() | 0;
     $$13 = 1;
     $$99 = $5511;
     $$99126 = tempRet0;
    } else {
     HEAP32[$190 + 0 >> 2] = HEAP32[$5500 + 0 >> 2];
     HEAP32[$190 + 4 >> 2] = HEAP32[$5500 + 4 >> 2];
     HEAP32[$190 + 8 >> 2] = HEAP32[$5500 + 8 >> 2];
     HEAP32[$5500 + 0 >> 2] = 0;
     HEAP32[$5500 + 4 >> 2] = 0;
     HEAP32[$5500 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $5492 | 0, $198 | 0, $5493 | 0, $190 | 0);
     $5503 = __THREW__;
     __THREW__ = 0;
     if ($5503 & 1) $$02 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5492 | 0, 36640, 183);
      $5505 = __THREW__;
      __THREW__ = 0;
      if ($5505 & 1) $$02 = 0; else {}
     }
     $5513 = ___cxa_find_matching_catch() | 0;
     $5514 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($190);
     $$13 = $$02;
     $$99 = $5513;
     $$99126 = $5514;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($191);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($192);
    if ($$13) {
     $$1011282689 = $$99126;
     $$1012690 = $$99;
    } else {
     $$107 = $$99;
     $$107134 = $$99126;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5492 | 0);
   $$107 = $$1012690;
   $$107134 = $$1011282689;
   ___resumeException($$107 | 0);
   break;
  }
 case 2223:
  {
   $5515 = ___cxa_allocate_exception(24) | 0;
   $5516 = $$lcssa6148 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(66, $196 | 0, HEAP32[$$lcssa6148 + 48 >> 2] | 0);
   $5519 = __THREW__;
   __THREW__ = 0;
   do if ($5519 & 1) {
    $5548 = ___cxa_find_matching_catch() | 0;
    $$1061332693 = tempRet0;
    $$1062694 = $5548;
   } else {
    __THREW__ = 0;
    $5521 = invoke_iiii(29, $196 | 0, 0, 39224) | 0;
    $5522 = __THREW__;
    __THREW__ = 0;
    if ($5522 & 1) {
     $5550 = ___cxa_find_matching_catch() | 0;
     $5551 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($196);
     $$1061332693 = $5551;
     $$1062694 = $5550;
     break;
    };
    HEAP32[$195 + 0 >> 2] = HEAP32[$5521 + 0 >> 2];
    HEAP32[$195 + 4 >> 2] = HEAP32[$5521 + 4 >> 2];
    HEAP32[$195 + 8 >> 2] = HEAP32[$5521 + 8 >> 2];
    HEAP32[$5521 + 0 >> 2] = 0;
    HEAP32[$5521 + 4 >> 2] = 0;
    HEAP32[$5521 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5524 = invoke_iii(27, $195 | 0, 39240) | 0;
    $5525 = __THREW__;
    __THREW__ = 0;
    if ($5525 & 1) {
     $5552 = ___cxa_find_matching_catch() | 0;
     $$104 = $5552;
     $$104131 = tempRet0;
     $$3 = 1;
    } else {
     HEAP32[$194 + 0 >> 2] = HEAP32[$5524 + 0 >> 2];
     HEAP32[$194 + 4 >> 2] = HEAP32[$5524 + 4 >> 2];
     HEAP32[$194 + 8 >> 2] = HEAP32[$5524 + 8 >> 2];
     HEAP32[$5524 + 0 >> 2] = 0;
     HEAP32[$5524 + 4 >> 2] = 0;
     HEAP32[$5524 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(61, $197 | 0, HEAP32[$204 >> 2] | 0);
     $5527 = __THREW__;
     __THREW__ = 0;
     if ($5527 & 1) {
      $5554 = ___cxa_find_matching_catch() | 0;
      $$103 = $5554;
      $$103130 = tempRet0;
      $$2 = 1;
     } else {
      $5529 = HEAP8[$197 >> 0] | 0;
      if (!($5529 & 1)) {
       $5539 = $197 + 1 | 0;
       $5540 = ($5529 & 255) >>> 1;
      } else {
       $5539 = HEAP32[$197 + 8 >> 2] | 0;
       $5540 = HEAP32[$197 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $5541 = invoke_iiii(31, $194 | 0, $5539 | 0, $5540 | 0) | 0;
      $5542 = __THREW__;
      __THREW__ = 0;
      if ($5542 & 1) {
       $5556 = ___cxa_find_matching_catch() | 0;
       $$1 = 1;
       $$102 = $5556;
       $$102129 = tempRet0;
      } else {
       HEAP32[$193 + 0 >> 2] = HEAP32[$5541 + 0 >> 2];
       HEAP32[$193 + 4 >> 2] = HEAP32[$5541 + 4 >> 2];
       HEAP32[$193 + 8 >> 2] = HEAP32[$5541 + 8 >> 2];
       HEAP32[$5541 + 0 >> 2] = 0;
       HEAP32[$5541 + 4 >> 2] = 0;
       HEAP32[$5541 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_viiii(16, $5515 | 0, $198 | 0, $5516 | 0, $193 | 0);
       $5544 = __THREW__;
       __THREW__ = 0;
       if ($5544 & 1) $$0 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $5515 | 0, 36640, 183);
        $5546 = __THREW__;
        __THREW__ = 0;
        if ($5546 & 1) $$0 = 0; else {}
       }
       $5558 = ___cxa_find_matching_catch() | 0;
       $5559 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
       $$1 = $$0;
       $$102 = $5558;
       $$102129 = $5559;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($197);
      $$103 = $$102;
      $$103130 = $$102129;
      $$2 = $$1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($194);
     $$104 = $$103;
     $$104131 = $$103130;
     $$3 = $$2;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($195);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($196);
    if ($$3) {
     $$1061332693 = $$104131;
     $$1062694 = $$104;
    } else {
     $$107 = $$104;
     $$107134 = $$104131;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5515 | 0);
   $$107 = $$1062694;
   $$107134 = $$1061332693;
   ___resumeException($$107 | 0);
   break;
  }
 case 2243:
  {
   $5562 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 39272, 36) | 0, HEAP32[$$lcssa6067 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $5562 + (HEAP32[(HEAP32[$5562 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $5567 = invoke_iii(22, $0 | 0, 47968) | 0;
   $5568 = __THREW__;
   __THREW__ = 0;
   if ($5568 & 1) {
    $5576 = ___cxa_find_matching_catch() | 0;
    $5577 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5576 | 0);
   }
   __THREW__ = 0;
   $5573 = invoke_iii(HEAP32[(HEAP32[$5567 >> 2] | 0) + 28 >> 2] | 0, $5567 | 0, 10) | 0;
   $5574 = __THREW__;
   __THREW__ = 0;
   if ($5574 & 1) {
    $5576 = ___cxa_find_matching_catch() | 0;
    $5577 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5576 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($5562, $5573) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($5562) | 0;
    _abort();
   }
   break;
  }
 case 2251:
  {
   STACKTOP = sp;
   return;
  }
 case 2252:
  {
   STACKTOP = sp;
   return;
  }
 case 2253:
  {
   STACKTOP = sp;
   return;
  }
 }
 switch (label | 0) {
 case 131:
  {
   $678 = HEAP32[$1 >> 2] | 0;
   $680 = $678;
   if (!$678) {
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
    label = 135;
   } else {
    $681 = HEAP32[$216 >> 2] | 0;
    if (($681 | 0) != ($678 | 0)) HEAP32[$216 >> 2] = $681 + (~(($681 + -4 - $680 | 0) >>> 2) << 2);
    __ZdlPv($678);
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
    label = 135;
   }
   break;
  }
 case 287:
  {
   $1014 = HEAP32[$10 >> 2] | 0;
   $1016 = $1014;
   if (!$1014) {
    $$0$i$i518 = $eh$lpad$body$i$i511$index14Z2D;
    $$01$i$i517 = $eh$lpad$body$i$i511$indexZ2D;
    label = 291;
   } else {
    $1017 = HEAP32[$234 >> 2] | 0;
    if (($1017 | 0) != ($1014 | 0)) HEAP32[$234 >> 2] = $1017 + (~(($1017 + -4 - $1016 | 0) >>> 2) << 2);
    __ZdlPv($1014);
    $$0$i$i518 = $eh$lpad$body$i$i511$index14Z2D;
    $$01$i$i517 = $eh$lpad$body$i$i511$indexZ2D;
    label = 291;
   }
   break;
  }
 case 480:
  {
   $1471 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 37656, 41) | 0;
   $1472 = HEAP32[$1473 >> 2] | 0;
   $1474 = HEAP8[$1472 >> 0] | 0;
   if (!($1474 & 1)) {
    $1484 = $1472 + 1 | 0;
    $1485 = ($1474 & 255) >>> 1;
   } else {
    $1484 = HEAP32[$1472 + 8 >> 2] | 0;
    $1485 = HEAP32[$1472 + 4 >> 2] | 0;
   }
   $1486 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($1471, $1484, $1485) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1486 + (HEAP32[(HEAP32[$1486 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1491 = invoke_iii(22, $0 | 0, 47968) | 0;
   $1492 = __THREW__;
   __THREW__ = 0;
   if ($1492 & 1) {
    $1500 = ___cxa_find_matching_catch() | 0;
    $1501 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1500 | 0);
   }
   __THREW__ = 0;
   $1497 = invoke_iii(HEAP32[(HEAP32[$1491 >> 2] | 0) + 28 >> 2] | 0, $1491 | 0, 10) | 0;
   $1498 = __THREW__;
   __THREW__ = 0;
   if ($1498 & 1) {
    $1500 = ___cxa_find_matching_catch() | 0;
    $1501 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1500 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1486, $1497) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1486) | 0;
    _abort();
   }
   break;
  }
 case 597:
  {
   $$7 = $eh$lpad$body801$indexZ2D;
   $$734 = $eh$lpad$body801$index36Z2D;
   label = 665;
   break;
  }
 case 656:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, $1930);
   $$7 = $lpad$phi2724$index;
   $$734 = $lpad$phi2724$index41;
   label = 665;
   break;
  }
 case 749:
  {
   $2138 = HEAP32[$elements45 >> 2] | 0;
   if (!$2138) {
    $$107 = $lpad$phi2730$index;
    $$107134 = $lpad$phi2730$index47;
    ___resumeException($$107 | 0);
   }
   $2141 = HEAP32[$267 >> 2] | 0;
   if (($2141 | 0) != ($2138 | 0)) HEAP32[$267 >> 2] = $2141 + (~(($2141 + -4 - $2138 | 0) >>> 2) << 2);
   __ZdlPv($2138);
   $$107 = $lpad$phi2730$index;
   $$107134 = $lpad$phi2730$index47;
   ___resumeException($$107 | 0);
   break;
  }
 case 1042:
  {
   $$59 = $eh$lpad$body1108$indexZ2D;
   $$5986 = $eh$lpad$body1108$index82Z2D;
   label = 1665;
   break;
  }
 case 1085:
  {
   $$45 = $eh$lpad$body1137$indexZ2D;
   $$4572 = $eh$lpad$body1137$index128Z2D;
   label = 1213;
   break;
  }
 case 1450:
  {
   $$50 = $lpad$phi2741$index;
   $$5077 = $lpad$phi2741$index135;
   label = 1492;
   break;
  }
 case 1632:
  {
   $4205 = ___cxa_allocate_exception(24) | 0;
   HEAP32[$141 + 0 >> 2] = 0;
   HEAP32[$141 + 4 >> 2] = 0;
   HEAP32[$141 + 8 >> 2] = 0;
   $4206 = HEAP8[$$pre4986$pre$phiZZ2D >> 0] | 0;
   if (!($4206 & 1)) $4215 = ($4206 & 255) >>> 1; else $4215 = HEAP32[$4210 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $141 | 0, 38616, 29, $4215 + 29 | 0);
   $4216 = __THREW__;
   __THREW__ = 0;
   if ($4216 & 1) label = 1643; else {
    if (!(HEAP8[$$pre4986$pre$phiZZ2D >> 0] & 1)) $4225 = $4224 + 1 | 0; else $4225 = HEAP32[$4210 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $141 | 0, $4225 | 0, $4215 | 0) | 0;
    $4226 = __THREW__;
    __THREW__ = 0;
    if ($4226 & 1) label = 1643; else {
     __THREW__ = 0;
     invoke_viiii(16, $4205 | 0, $198 | 0, $4228 | 0, $141 | 0);
     $4229 = __THREW__;
     __THREW__ = 0;
     if ($4229 & 1) $$0248 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4205 | 0, 36640, 183);
      $4231 = __THREW__;
      __THREW__ = 0;
      if ($4231 & 1) $$0248 = 0; else {}
     }
     $4237 = ___cxa_find_matching_catch() | 0;
     $4238 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($141);
     if ($$0248) {
      $$582634 = $4237;
      $$58852633 = $4238;
     } else {
      $$59 = $4237;
      $$5986 = $4238;
      label = 1665;
      break;
     }
    }
   }
   if ((label | 0) == 1643) {
    $4235 = ___cxa_find_matching_catch() | 0;
    $4236 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($141);
    $$582634 = $4235;
    $$58852633 = $4236;
   }
   ___cxa_free_exception($4205 | 0);
   $$59 = $$582634;
   $$5986 = $$58852633;
   label = 1665;
   break;
  }
 case 1962:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($169, HEAP32[$337 >> 2] | 0);
   $$86 = $$85;
   $$86113 = $$85112;
   label = 1963;
   break;
  }
 case 2135:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($181, HEAP32[$350 >> 2] | 0);
   $$94 = $$93;
   $$94121 = $$93120;
   label = 2136;
   break;
  }
 case 2158:
  {
   $$0$i2352 = $eh$lpad$body$i2349$index170Z2D;
   $$01$i2351 = $eh$lpad$body$i2349$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($355);
   ___resumeException($$01$i2351 | 0);
   break;
  }
 case 2166:
  {
   $$95 = $eh$lpad$body2376$indexZ2D;
   $$95122 = $eh$lpad$body2376$index176Z2D;
   label = 2194;
   break;
  }
 }
 if ((label | 0) == 135) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$215 >> 2] | 0);
  $eh$lpad$body$i$index8Z2D = $$0$i$i;
  $eh$lpad$body$i$indexZ2D = $$01$i$i;
  label = 142;
 } else if ((label | 0) == 291) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($9, HEAP32[$233 >> 2] | 0);
  $eh$lpad$body$i524$index20Z2D = $$0$i$i518;
  $eh$lpad$body$i524$indexZ2D = $$01$i$i517;
  label = 298;
 } else if ((label | 0) == 665) {
  $1949 = HEAP32[$args >> 2] | 0;
  if (!$1949) {
   $$107 = $$7;
   $$107134 = $$734;
   ___resumeException($$107 | 0);
  }
  $1952 = HEAP32[$259 >> 2] | 0;
  if (($1952 | 0) != ($1949 | 0)) HEAP32[$259 >> 2] = $1952 + (~(($1952 + -4 - $1949 | 0) >>> 2) << 2);
  __ZdlPv($1949);
  $$107 = $$7;
  $$107134 = $$734;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 1213) {
  $3260 = HEAP32[$elements75 >> 2] | 0;
  $3262 = $3260;
  if (!$3260) {
   $$59 = $$45;
   $$5986 = $$4572;
   label = 1665;
  } else {
   $3263 = HEAP32[$274 >> 2] | 0;
   if (($3263 | 0) != ($3260 | 0)) HEAP32[$274 >> 2] = $3263 + (~(($3263 + -4 - $3262 | 0) >>> 2) << 2);
   __ZdlPv($3260);
   $$59 = $$45;
   $$5986 = $$4572;
   label = 1665;
  }
 } else if ((label | 0) == 1492) {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$312 >> 2] | 0);
  $$59 = $$50;
  $$5986 = $$5077;
  label = 1665;
 } else if ((label | 0) == 1963) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env129, HEAP32[$338 >> 2] | 0);
  $$107 = $$86;
  $$107134 = $$86113;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 2136) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env137, HEAP32[$351 >> 2] | 0);
  $$107 = $$94;
  $$107134 = $$94121;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 2194) {
  HEAP32[$ss141 >> 2] = 572;
  HEAP32[$355 >> 2] = 612;
  HEAP32[$356 >> 2] = 592;
  HEAP32[$357 >> 2] = 904;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($362);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($357);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($355);
  $$107 = $$95;
  $$107134 = $$95122;
  ___resumeException($$107 | 0);
 }
 if ((label | 0) == 142) {
  $701 = HEAP32[$3 >> 2] | 0;
  if (!$701) {
   $$0$i = $eh$lpad$body$i$index8Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
   $710 = HEAP32[$212 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $710);
   ___resumeException($$01$i | 0);
  }
  $704 = HEAP32[$218 >> 2] | 0;
  if (($704 | 0) != ($701 | 0)) HEAP32[$218 >> 2] = $704 + (~(($704 + -4 - $701 | 0) >>> 2) << 2);
  __ZdlPv($701);
  $$0$i = $eh$lpad$body$i$index8Z2D;
  $$01$i = $eh$lpad$body$i$indexZ2D;
  $710 = HEAP32[$212 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $710);
  ___resumeException($$01$i | 0);
 } else if ((label | 0) == 298) {
  $1037 = HEAP32[$12 >> 2] | 0;
  $1039 = $1037;
  if (!$1037) {
   $$0$i527 = $eh$lpad$body$i524$index20Z2D;
   $$01$i526 = $eh$lpad$body$i524$indexZ2D;
   label = 302;
  } else {
   $1040 = HEAP32[$236 >> 2] | 0;
   if (($1040 | 0) != ($1037 | 0)) HEAP32[$236 >> 2] = $1040 + (~(($1040 + -4 - $1039 | 0) >>> 2) << 2);
   __ZdlPv($1037);
   $$0$i527 = $eh$lpad$body$i524$index20Z2D;
   $$01$i526 = $eh$lpad$body$i524$indexZ2D;
   label = 302;
  }
 } else if ((label | 0) == 1665) {
  $4282 = HEAP32[$args68 >> 2] | 0;
  if (!$4282) {
   $$107 = $$59;
   $$107134 = $$5986;
   ___resumeException($$107 | 0);
  }
  $4285 = HEAP32[$270 >> 2] | 0;
  if (($4285 | 0) != ($4282 | 0)) HEAP32[$270 >> 2] = $4285 + (~(($4285 + -16 - $4282 | 0) >>> 4) << 4);
  __ZdlPv($4282);
  $$107 = $$59;
  $$107134 = $$5986;
  ___resumeException($$107 | 0);
 }
 if ((label | 0) == 302) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($11, HEAP32[$229 >> 2] | 0);
  $eh$lpad$body$index26Z2D = $$0$i527;
  $eh$lpad$body$indexZ2D = $$01$i526;
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$230 >> 2] | 0);
 $$107 = $eh$lpad$body$indexZ2D;
 $$107134 = $eh$lpad$body$index26Z2D;
 ___resumeException($$107 | 0);
}

function __ZN12_GLOBAL__N_16Parser5parseEij($this, $precedence, $obj_level) {
 $this = $this | 0;
 $precedence = $precedence | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i192 = 0, $$0$i224 = 0, $$0$i262 = 0, $$0$i317 = 0, $$0$i322 = 0, $$0$i7$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i387 = 0, $$01$i191 = 0, $$01$i223 = 0, $$01$i261 = 0, $$01$i321 = 0, $$02442 = 0, $$03441 = 0, $$042 = 0, $$044 = 0, $$046 = 0, $$046$lpad$bodyZZ2D = 0, $$049 = 0, $$051 = 0, $$1 = 0, $$10 = 0, $$1019 = 0, $$11 = 0, $$110 = 0, $$1120 = 0, $$12 = 0, $$1221 = 0, $$1322453 = 0, $$13454 = 0, $$14 = 0, $$1423 = 0, $$147 = 0, $$15 = 0, $$1524 = 0, $$16 = 0, $$1625 = 0, $$1726457 = 0, $$17458 = 0, $$18 = 0, $$1827 = 0, $$19 = 0, $$1928 = 0, $$2 = 0, $$20 = 0, $$2029 = 0, $$21 = 0, $$211 = 0, $$2130 = 0, $$22 = 0, $$2231 = 0, $$23 = 0, $$2332 = 0, $$24 = 0, $$2433 = 0, $$25 = 0, $$2534 = 0, $$26 = 0, $$2635 = 0, $$27 = 0, $$2736 = 0, $$28 = 0, $$2837 = 0, $$29 = 0, $$2938 = 0, $$3 = 0, $$30 = 0, $$3039 = 0, $$31 = 0, $$312 = 0, $$3140 = 0, $$4 = 0, $$413 = 0, $$514445 = 0, $$5446 = 0, $$6 = 0, $$615 = 0, $$7 = 0, $$716 = 0, $$817449 = 0, $$8450 = 0, $$9 = 0, $$918 = 0, $$byval_copy = 0, $$cast$i$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa794 = 0, $$lcssa869 = 0, $$lcssa872 = 0, $$lcssa909 = 0, $$lcssa910 = 0, $$lcssa911 = 0, $$lcssa912 = 0, $$lcssa915 = 0, $$lcssa916 = 0, $$lcssa924 = 0, $$lcssa929 = 0, $$lcssa930 = 0, $$lcssa931 = 0, $$pre$phi799Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $1001 = 0, $1002 = 0, $1004 = 0, $1007 = 0, $1012 = 0, $1013 = 0, $1016 = 0, $1017 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1026 = 0, $1027 = 0, $103 = 0, $1032 = 0, $1037 = 0, $1038 = 0, $1042 = 0, $1043 = 0, $1046 = 0, $1048 = 0, $1055 = 0, $1056 = 0, $106 = 0, $1062 = 0, $1064 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $107 = 0, $1070 = 0, $1073 = 0, $1074 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1136 = 0, $1140 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1149 = 0, $1153 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1164 = 0, $1168 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1174 = 0, $1178 = 0, $1179 = 0, $1180 = 0, $1183 = 0, $1187 = 0, $1189 = 0, $1191 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1197 = 0, $1199 = 0, $12 = 0, $1200 = 0, $1202 = 0, $1204 = 0, $1206 = 0, $1209 = 0, $1211 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1218 = 0, $122 = 0, $1228 = 0, $1229 = 0, $1230 = 0, $1232 = 0, $1233 = 0, $1235 = 0, $1237 = 0, $1240 = 0, $1242 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1249 = 0, $1251 = 0, $1253 = 0, $1255 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $1261 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1267 = 0, $1269 = 0, $127 = 0, $1271 = 0, $1274 = 0, $1275 = 0, $1277 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1284 = 0, $1285 = 0, $1291 = 0, $1293 = 0, $1296 = 0, $13 = 0, $1302 = 0, $1305 = 0, $1309 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1315 = 0, $1317 = 0, $1318 = 0, $132 = 0, $1320 = 0, $1323 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1332 = 0, $1334 = 0, $1335 = 0, $1337 = 0, $1342 = 0, $1343 = 0, $1347 = 0, $1352 = 0, $1353 = 0, $1357 = 0, $1358 = 0, $136 = 0, $1361 = 0, $1363 = 0, $1369 = 0, $1371 = 0, $1372 = 0, $1378 = 0, $138 = 0, $1380 = 0, $1382 = 0, $1383 = 0, $1388 = 0, $1390 = 0, $1392 = 0, $1393 = 0, $1395 = 0, $14 = 0, $1400 = 0, $1401 = 0, $1405 = 0, $1410 = 0, $1411 = 0, $1415 = 0, $1417 = 0, $1418 = 0, $1420 = 0, $1421 = 0, $1423 = 0, $1428 = 0, $1429 = 0, $1433 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1443 = 0, $1444 = 0, $1447 = 0, $1449 = 0, $145 = 0, $1456 = 0, $1457 = 0, $1463 = 0, $1465 = 0, $1467 = 0, $1468 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1477 = 0, $1479 = 0, $1481 = 0, $1482 = 0, $1484 = 0, $1489 = 0, $1490 = 0, $1494 = 0, $1499 = 0, $15 = 0, $1500 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1512 = 0, $1514 = 0, $1515 = 0, $1518 = 0, $1519 = 0, $1522 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1537 = 0, $1538 = 0, $1540 = 0, $1542 = 0, $1543 = 0, $1549 = 0, $155 = 0, $1551 = 0, $1552 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1575 = 0, $1577 = 0, $1578 = 0, $1584 = 0, $1586 = 0, $1587 = 0, $1589 = 0, $159 = 0, $1594 = 0, $1595 = 0, $1599 = 0, $16 = 0, $1604 = 0, $1605 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1614 = 0, $1616 = 0, $1624 = 0, $1625 = 0, $163 = 0, $1631 = 0, $1633 = 0, $1635 = 0, $1636 = 0, $1639 = 0, $1643 = 0, $1644 = 0, $1646 = 0, $1647 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1652 = 0, $1653 = 0, $1655 = 0, $1656 = 0, $1659 = 0, $1661 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1675 = 0, $1677 = 0, $1679 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1684 = 0, $1685 = 0, $1687 = 0, $1688 = 0, $1690 = 0, $1691 = 0, $1694 = 0, $1696 = 0, $17 = 0, $170 = 0, $1703 = 0, $1704 = 0, $1710 = 0, $1712 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1723 = 0, $1726 = 0, $1731 = 0, $1732 = 0, $1736 = 0, $174 = 0, $1741 = 0, $1742 = 0, $1746 = 0, $1747 = 0, $175 = 0, $1751 = 0, $1755 = 0, $1756 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1762 = 0, $1763 = 0, $1769 = 0, $177 = 0, $1771 = 0, $1772 = 0, $1778 = 0, $1782 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1794 = 0, $1795 = 0, $18 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $181 = 0, $1811 = 0, $1816 = 0, $1817 = 0, $182 = 0, $1821 = 0, $1826 = 0, $1827 = 0, $1831 = 0, $1832 = 0, $1834 = 0, $1835 = 0, $1837 = 0, $184 = 0, $1845 = 0, $1846 = 0, $1852 = 0, $1854 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $1861 = 0, $1862 = 0, $1865 = 0, $1867 = 0, $187 = 0, $1874 = 0, $1875 = 0, $1881 = 0, $1883 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1889 = 0, $1891 = 0, $19 = 0, $192 = 0, $193 = 0, $195 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $202 = 0, $204 = 0, $206 = 0, $209 = 0, $21 = 0, $211 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $226 = 0, $228 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $235 = 0, $237 = 0, $238 = 0, $24 = 0, $240 = 0, $243 = 0, $248 = 0, $249 = 0, $25 = 0, $251 = 0, $252 = 0, $253 = 0, $256 = 0, $257 = 0, $26 = 0, $262 = 0, $263 = 0, $268 = 0, $27 = 0, $273 = 0, $274 = 0, $278 = 0, $279 = 0, $28 = 0, $282 = 0, $284 = 0, $289 = 0, $29 = 0, $290 = 0, $296 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $304 = 0, $305 = 0, $308 = 0, $309 = 0, $31 = 0, $314 = 0, $315 = 0, $32 = 0, $320 = 0, $325 = 0, $326 = 0, $33 = 0, $330 = 0, $331 = 0, $334 = 0, $336 = 0, $34 = 0, $344 = 0, $345 = 0, $35 = 0, $351 = 0, $353 = 0, $355 = 0, $356 = 0, $357 = 0, $359 = 0, $36 = 0, $361 = 0, $363 = 0, $366 = 0, $368 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $375 = 0, $377 = 0, $378 = 0, $38 = 0, $380 = 0, $383 = 0, $388 = 0, $39 = 0, $390 = 0, $392 = 0, $395 = 0, $397 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $404 = 0, $406 = 0, $407 = 0, $409 = 0, $41 = 0, $412 = 0, $419 = 0, $42 = 0, $421 = 0, $423 = 0, $427 = 0, $428 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $435 = 0, $436 = 0, $438 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $444 = 0, $445 = 0, $446 = 0, $449 = 0, $45 = 0, $453 = 0, $455 = 0, $457 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $463 = 0, $465 = 0, $466 = 0, $468 = 0, $47 = 0, $470 = 0, $471 = 0, $474 = 0, $476 = 0, $477 = 0, $479 = 0, $48 = 0, $481 = 0, $482 = 0, $483 = 0, $485 = 0, $487 = 0, $489 = 0, $49 = 0, $491 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $5 = 0, $50 = 0, $502 = 0, $503 = 0, $508 = 0, $509 = 0, $51 = 0, $513 = 0, $518 = 0, $519 = 0, $52 = 0, $524 = 0, $529 = 0, $53 = 0, $530 = 0, $534 = 0, $535 = 0, $54 = 0, $540 = 0, $541 = 0, $544 = 0, $546 = 0, $547 = 0, $55 = 0, $550 = 0, $551 = 0, $554 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $562 = 0, $563 = 0, $569 = 0, $57 = 0, $570 = 0, $572 = 0, $574 = 0, $575 = 0, $58 = 0, $581 = 0, $583 = 0, $584 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $599 = 0, $6 = 0, $600 = 0, $601 = 0, $604 = 0, $61 = 0, $610 = 0, $612 = 0, $613 = 0, $619 = 0, $621 = 0, $622 = 0, $628 = 0, $629 = 0, $630 = 0, $633 = 0, $637 = 0, $639 = 0, $64 = 0, $641 = 0, $643 = 0, $644 = 0, $645 = 0, $647 = 0, $649 = 0, $650 = 0, $652 = 0, $654 = 0, $655 = 0, $657 = 0, $659 = 0, $66 = 0, $661 = 0, $663 = 0, $664 = 0, $665 = 0, $667 = 0, $669 = 0, $671 = 0, $672 = 0, $673 = 0, $675 = 0, $677 = 0, $68 = 0, $680 = 0, $682 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $689 = 0, $691 = 0, $692 = 0, $694 = 0, $697 = 0, $7 = 0, $70 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $71 = 0, $710 = 0, $713 = 0, $717 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $723 = 0, $725 = 0, $726 = 0, $728 = 0, $73 = 0, $731 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $742 = 0, $746 = 0, $748 = 0, $75 = 0, $750 = 0, $752 = 0, $753 = 0, $754 = 0, $756 = 0, $758 = 0, $759 = 0, $761 = 0, $763 = 0, $764 = 0, $766 = 0, $768 = 0, $77 = 0, $770 = 0, $772 = 0, $773 = 0, $774 = 0, $776 = 0, $778 = 0, $780 = 0, $782 = 0, $784 = 0, $785 = 0, $787 = 0, $788 = 0, $791 = 0, $792 = 0, $796 = 0, $8 = 0, $80 = 0, $801 = 0, $802 = 0, $807 = 0, $812 = 0, $813 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $822 = 0, $823 = 0, $826 = 0, $827 = 0, $828 = 0, $833 = 0, $834 = 0, $838 = 0, $839 = 0, $84 = 0, $841 = 0, $845 = 0, $848 = 0, $85 = 0, $853 = 0, $854 = 0, $856 = 0, $859 = 0, $86 = 0, $863 = 0, $864 = 0, $866 = 0, $868 = 0, $869 = 0, $87 = 0, $875 = 0, $877 = 0, $879 = 0, $880 = 0, $883 = 0, $884 = 0, $886 = 0, $89 = 0, $891 = 0, $893 = 0, $894 = 0, $896 = 0, $9 = 0, $901 = 0, $903 = 0, $91 = 0, $914 = 0, $916 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $924 = 0, $925 = 0, $926 = 0, $929 = 0, $933 = 0, $935 = 0, $937 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $943 = 0, $945 = 0, $946 = 0, $948 = 0, $958 = 0, $959 = 0, $960 = 0, $962 = 0, $963 = 0, $965 = 0, $967 = 0, $969 = 0, $97 = 0, $971 = 0, $972 = 0, $973 = 0, $975 = 0, $977 = 0, $979 = 0, $980 = 0, $982 = 0, $983 = 0, $985 = 0, $987 = 0, $990 = 0, $992 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $999 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa867 = 0, $__nd$0$i$i$lcssa868 = 0, $__parent$i = 0, $__r$0$i = 0, $args = 0, $begin = 0, $binds = 0, $branch_false$0 = 0, $delim = 0, $eh$lpad$body$i$index50Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i189$index62Z2D = 0, $eh$lpad$body$i189$indexZ2D = 0, $eh$lpad$body$i221$index67Z2D = 0, $eh$lpad$body$i221$indexZ2D = 0, $eh$lpad$body$i259$index84Z2D = 0, $eh$lpad$body$i259$indexZ2D = 0, $eh$lpad$body$i319$index94Z2D = 0, $eh$lpad$body$i319$indexZ2D = 0, $eh$lpad$body$index149Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body116$index40Z2D = 0, $eh$lpad$body116$indexZ2D = 0, $eh$lpad$body124$index45Z2D = 0, $eh$lpad$body124$indexZ2D = 0, $eh$lpad$body148$index56Z2D = 0, $eh$lpad$body148$indexZ2D = 0, $eh$lpad$body218$index73Z2D = 0, $eh$lpad$body218$indexZ2D = 0, $eh$lpad$body256$index79Z2D = 0, $eh$lpad$body256$indexZ2D = 0, $eh$lpad$body292$index89Z2D = 0, $eh$lpad$body292$indexZ2D = 0, $eh$lpad$body304$index129Z2D = 0, $eh$lpad$body304$indexZ2D = 0, $eh$lpad$body330$index99Z2D = 0, $eh$lpad$body330$indexZ2D = 0, $eh$lpad$body337$index104Z2D = 0, $eh$lpad$body337$indexZ2D = 0, $eh$lpad$body343$index109Z2D = 0, $eh$lpad$body343$indexZ2D = 0, $eh$lpad$body360$index139Z2D = 0, $eh$lpad$body360$indexZ2D = 0, $eh$lpad$body367$index114Z2D = 0, $eh$lpad$body367$indexZ2D = 0, $eh$lpad$body377$index119Z2D = 0, $eh$lpad$body377$indexZ2D = 0, $eh$lpad$body425$index124Z2D = 0, $eh$lpad$body425$indexZ2D = 0, $eh$lpad$body436$index134Z2D = 0, $eh$lpad$body436$indexZ2D = 0, $eh$lpad$body66$index144Z2D = 0, $eh$lpad$body66$indexZ2D = 0, $eh$lpad$body75$index16Z2D = 0, $eh$lpad$body75$indexZ2D = 0, $eh$lpad$body83$index35Z2D = 0, $eh$lpad$body83$indexZ2D = 0, $end = 0, $end10 = 0, $end9 = 0, $field = 0, $l = 0, $lhs$1 = 0, $next = 0, $obj = 0, $op = 0, $op7 = 0, $params = 0, $params_asts = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $ss4 = 0, $ss6 = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i128 = 0, $this$idx$val$idx$val$i136 = 0, $this$idx$val$idx$val$i207 = 0, $this$idx$val$idx$val$i215 = 0, $this$idx$val$idx$val$i278 = 0, $this$idx$val$idx$val$i350 = 0, $this$idx$val$idx$val$i87 = 0, $this$idx$val$idx$val$i99 = 0, $this$idx53$val$idx$val = 0, $this$idx54$val$idx$val = 0, $this$idx55$val$idx$val = 0, $this$idx56$val$idx$val = 0, $this$idx57$val$idx$val = 0, $this$idx58$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2528 | 0;
 $$byval_copy = sp + 2520 | 0;
 $0 = sp + 2516 | 0;
 $1 = sp + 2512 | 0;
 $2 = sp + 2508 | 0;
 $3 = sp + 2504 | 0;
 $__parent$i = sp + 2500 | 0;
 $4 = sp + 2488 | 0;
 $5 = sp + 2484 | 0;
 $6 = sp + 2472 | 0;
 $7 = sp + 2468 | 0;
 $8 = sp + 2456 | 0;
 $9 = sp + 2444 | 0;
 $10 = sp + 2432 | 0;
 $11 = sp + 2428 | 0;
 $12 = sp + 2424 | 0;
 $13 = sp + 2420 | 0;
 $14 = sp + 2416 | 0;
 $15 = sp + 2412 | 0;
 $begin = sp + 2368 | 0;
 $16 = sp + 2324 | 0;
 $17 = sp + 2296 | 0;
 $18 = sp + 2252 | 0;
 $19 = sp + 2208 | 0;
 $20 = sp + 2164 | 0;
 $21 = sp + 2120 | 0;
 $22 = sp + 2092 | 0;
 $23 = sp + 2064 | 0;
 $24 = sp + 2020 | 0;
 $next = sp + 1976 | 0;
 $params_asts = sp + 1964 | 0;
 $25 = sp + 1920 | 0;
 $26 = sp + 1908 | 0;
 $params = sp + 1896 | 0;
 $ss = sp + 1752 | 0;
 $27 = sp + 1736 | 0;
 $28 = sp + 1708 | 0;
 $29 = sp + 1696 | 0;
 $ss1 = sp + 1552 | 0;
 $30 = sp + 1540 | 0;
 $31 = sp + 1496 | 0;
 $binds = sp + 1484 | 0;
 $delim = sp + 1440 | 0;
 $ss2 = sp + 1296 | 0;
 $32 = sp + 1280 | 0;
 $33 = sp + 1252 | 0;
 $34 = sp + 1240 | 0;
 $ss4 = sp + 1096 | 0;
 $35 = sp + 1084 | 0;
 $op = sp + 1040 | 0;
 $36 = sp + 1012 | 0;
 $37 = sp + 968 | 0;
 $38 = sp + 924 | 0;
 $39 = sp + 880 | 0;
 $ss6 = sp + 736 | 0;
 $40 = sp + 688 | 0;
 $41 = sp + 644 | 0;
 $42 = sp + 632 | 0;
 $op7 = sp + 588 | 0;
 $end = sp + 544 | 0;
 $43 = sp + 516 | 0;
 $field = sp + 472 | 0;
 $44 = sp + 444 | 0;
 $45 = sp + 432 | 0;
 $46 = sp + 404 | 0;
 $args = sp + 392 | 0;
 $end9 = sp + 348 | 0;
 $47 = sp + 336 | 0;
 $48 = sp + 308 | 0;
 $49 = sp + 296 | 0;
 $obj = sp + 292 | 0;
 $end10 = sp + 248 | 0;
 $50 = sp + 220 | 0;
 $l = sp + 192 | 0;
 $51 = sp + 164 | 0;
 $52 = sp + 152 | 0;
 $53 = sp + 124 | 0;
 $54 = sp + 96 | 0;
 $55 = sp + 68 | 0;
 $56 = sp + 56 | 0;
 $57 = sp + 28 | 0;
 $58 = sp;
 $this$idx58$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $59 = $this$idx58$val$idx$val + 8 | 0;
 HEAP32[$begin >> 2] = HEAP32[$59 >> 2];
 $61 = $begin + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($61, $this$idx58$val$idx$val + 12 | 0);
 HEAP32[$begin >> 2] = HEAP32[$59 >> 2];
 $64 = $begin + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $64 | 0, $this$idx58$val$idx$val + 24 | 0);
 $66 = __THREW__;
 __THREW__ = 0;
 if ($66 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
  ___resumeException($68 | 0);
 }
 $70 = $begin + 28 | 0;
 $71 = $this$idx58$val$idx$val + 36 | 0;
 HEAP32[$70 + 0 >> 2] = HEAP32[$71 + 0 >> 2];
 HEAP32[$70 + 4 >> 2] = HEAP32[$71 + 4 >> 2];
 HEAP32[$70 + 8 >> 2] = HEAP32[$71 + 8 >> 2];
 HEAP32[$70 + 12 >> 2] = HEAP32[$71 + 12 >> 2];
 $72 = HEAP32[$59 >> 2] | 0;
 HEAP32[$begin >> 2] = $72;
 L4 : do switch ($72 | 0) {
 case 24:
  {
   $this$idx$val$idx$val$i207 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $673 = $this$idx$val$idx$val$i207 + 8 | 0;
   HEAP32[$31 >> 2] = HEAP32[$673 >> 2];
   $675 = $31 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $675 | 0, $this$idx$val$idx$val$i207 + 12 | 0);
   $677 = __THREW__;
   __THREW__ = 0;
   if ($677 & 1) label = 19; else {
    HEAP32[$31 >> 2] = HEAP32[$673 >> 2];
    $680 = $31 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $680 | 0, $this$idx$val$idx$val$i207 + 24 | 0);
    $682 = __THREW__;
    __THREW__ = 0;
    if ($682 & 1) {
     $684 = ___cxa_find_matching_catch() | 0;
     $685 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($675);
     $eh$lpad$body75$index16Z2D = $685;
     $eh$lpad$body75$indexZ2D = $684;
     break L4;
    }
    $686 = $31 + 28 | 0;
    $687 = $this$idx$val$idx$val$i207 + 36 | 0;
    HEAP32[$686 + 0 >> 2] = HEAP32[$687 + 0 >> 2];
    HEAP32[$686 + 4 >> 2] = HEAP32[$687 + 4 >> 2];
    HEAP32[$686 + 8 >> 2] = HEAP32[$687 + 8 >> 2];
    HEAP32[$686 + 12 >> 2] = HEAP32[$687 + 12 >> 2];
    HEAP32[$31 >> 2] = HEAP32[$673 >> 2];
    $689 = HEAP32[$this >> 2] | 0;
    $691 = HEAP32[$689 + 4 >> 2] | 0;
    $692 = $691 + 4 | 0;
    $694 = HEAP32[$691 >> 2] | 0;
    HEAP32[$694 + 4 >> 2] = HEAP32[$692 >> 2];
    HEAP32[HEAP32[$692 >> 2] >> 2] = $694;
    $697 = $689 + 8 | 0;
    HEAP32[$697 >> 2] = (HEAP32[$697 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($691 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($691 + 12 | 0);
    __ZdlPv($691);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($680);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($675);
    HEAP32[$binds + 4 >> 2] = 0;
    HEAP32[$binds + 8 >> 2] = 0;
    $704 = $binds + 4 | 0;
    HEAP32[$binds >> 2] = $704;
    $705 = $delim + 4 | 0;
    $706 = $delim + 16 | 0;
    $707 = $delim + 28 | 0;
    while (1) {
     __THREW__ = 0;
     invoke_viii(6, $this | 0, $binds | 0, $obj_level | 0);
     $708 = __THREW__;
     __THREW__ = 0;
     if ($708 & 1) {
      label = 193;
      break;
     }
     $this$idx$val$idx$val$i215 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $710 = $this$idx$val$idx$val$i215 + 8 | 0;
     HEAP32[$delim >> 2] = HEAP32[$710 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $705 | 0, $this$idx$val$idx$val$i215 + 12 | 0);
     $713 = __THREW__;
     __THREW__ = 0;
     if ($713 & 1) {
      label = 193;
      break;
     }
     HEAP32[$delim >> 2] = HEAP32[$710 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $706 | 0, $this$idx$val$idx$val$i215 + 24 | 0);
     $717 = __THREW__;
     __THREW__ = 0;
     if ($717 & 1) {
      label = 177;
      break;
     }
     $721 = $this$idx$val$idx$val$i215 + 36 | 0;
     HEAP32[$707 + 0 >> 2] = HEAP32[$721 + 0 >> 2];
     HEAP32[$707 + 4 >> 2] = HEAP32[$721 + 4 >> 2];
     HEAP32[$707 + 8 >> 2] = HEAP32[$721 + 8 >> 2];
     HEAP32[$707 + 12 >> 2] = HEAP32[$721 + 12 >> 2];
     HEAP32[$delim >> 2] = HEAP32[$710 >> 2];
     $723 = HEAP32[$this >> 2] | 0;
     $725 = HEAP32[$723 + 4 >> 2] | 0;
     $726 = $725 + 4 | 0;
     $728 = HEAP32[$725 >> 2] | 0;
     HEAP32[$728 + 4 >> 2] = HEAP32[$726 >> 2];
     HEAP32[HEAP32[$726 >> 2] >> 2] = $728;
     $731 = $723 + 8 | 0;
     HEAP32[$731 >> 2] = (HEAP32[$731 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($725 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($725 + 12 | 0);
     __ZdlPv($725);
     $736 = HEAP32[$delim >> 2] | 0;
     if (!(($736 | 0) == 5 | ($736 | 0) == 10)) {
      label = 179;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($706);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($705);
     if (($736 | 0) == 10) {
      label = 203;
      break;
     }
    }
    do if ((label | 0) == 177) {
     $719 = ___cxa_find_matching_catch() | 0;
     $720 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($705);
     $eh$lpad$body218$index73Z2D = $720;
     $eh$lpad$body218$indexZ2D = $719;
     label = 195;
    } else if ((label | 0) == 179) {
     $737 = $ss2 + 64 | 0;
     $738 = $ss2 + 8 | 0;
     HEAP32[$738 >> 2] = 592;
     $739 = $ss2 + 12 | 0;
     HEAP32[$ss2 >> 2] = 740;
     HEAP32[$737 >> 2] = 760;
     HEAP32[$ss2 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss2 + 64 | 0, $739 | 0);
     $742 = __THREW__;
     __THREW__ = 0;
     L19 : do if ($742 & 1) {
      $754 = ___cxa_find_matching_catch() | 0;
      $$0$i224 = tempRet0;
      $$01$i223 = $754;
      label = 196;
     } else {
      HEAP32[$ss2 + 136 >> 2] = 0;
      HEAP32[$ss2 + 140 >> 2] = -1;
      HEAP32[$ss2 >> 2] = 572;
      HEAP32[$737 >> 2] = 612;
      HEAP32[$738 >> 2] = 592;
      __THREW__ = 0;
      invoke_vi(177, $739 | 0);
      $746 = __THREW__;
      __THREW__ = 0;
      do if ($746 & 1) {
       $756 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i221$index67Z2D = tempRet0;
       $eh$lpad$body$i221$indexZ2D = $756;
      } else {
       HEAP32[$739 >> 2] = 904;
       $748 = $ss2 + 44 | 0;
       HEAP32[$748 + 0 >> 2] = 0;
       HEAP32[$748 + 4 >> 2] = 0;
       HEAP32[$748 + 8 >> 2] = 0;
       HEAP32[$748 + 12 >> 2] = 0;
       HEAP32[$ss2 + 60 >> 2] = 24;
       HEAP32[$8 + 0 >> 2] = 0;
       HEAP32[$8 + 4 >> 2] = 0;
       HEAP32[$8 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $739 | 0, $8 | 0);
       $750 = __THREW__;
       __THREW__ = 0;
       if ($750 & 1) {
        $752 = ___cxa_find_matching_catch() | 0;
        $753 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($748);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($739);
        $eh$lpad$body$i221$index67Z2D = $753;
        $eh$lpad$body$i221$indexZ2D = $752;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       __THREW__ = 0;
       $758 = invoke_iiii(25, $738 | 0, 35208, 24) | 0;
       $759 = __THREW__;
       __THREW__ = 0;
       L27 : do if ($759 & 1) label = 197; else {
        __THREW__ = 0;
        invoke_vii(52, $758 | 0, $delim | 0);
        $761 = __THREW__;
        __THREW__ = 0;
        if ($761 & 1) label = 197; else {
         $763 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $32 | 0, $739 | 0);
         $764 = __THREW__;
         __THREW__ = 0;
         do if ($764 & 1) {
          $782 = ___cxa_find_matching_catch() | 0;
          $$817449 = tempRet0;
          $$8450 = $782;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $763 | 0, $706 | 0);
          $766 = __THREW__;
          __THREW__ = 0;
          if ($766 & 1) $$049 = 1; else {
           $768 = $763 + 12 | 0;
           HEAP32[$768 + 0 >> 2] = HEAP32[$707 + 0 >> 2];
           HEAP32[$768 + 4 >> 2] = HEAP32[$707 + 4 >> 2];
           HEAP32[$768 + 8 >> 2] = HEAP32[$707 + 8 >> 2];
           HEAP32[$768 + 12 >> 2] = HEAP32[$707 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $763 + 28 | 0, $32 | 0);
           $770 = __THREW__;
           __THREW__ = 0;
           if ($770 & 1) {
            $772 = ___cxa_find_matching_catch() | 0;
            $773 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($763);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
            $$817449 = $773;
            $$8450 = $772;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $763 | 0, 48, 176);
           $774 = __THREW__;
           __THREW__ = 0;
           if ($774 & 1) $$049 = 0; else {}
          }
          $784 = ___cxa_find_matching_catch() | 0;
          $785 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
          if ($$049) {
           $$817449 = $785;
           $$8450 = $784;
          } else {
           $$9 = $784;
           $$918 = $785;
           break L27;
          }
         } while (0);
         ___cxa_free_exception($763 | 0);
         $$9 = $$8450;
         $$918 = $$817449;
        }
       } while (0);
       if ((label | 0) == 197) {
        $780 = ___cxa_find_matching_catch() | 0;
        $$9 = $780;
        $$918 = tempRet0;
       }
       HEAP32[$ss2 >> 2] = 572;
       HEAP32[$737 >> 2] = 612;
       HEAP32[$738 >> 2] = 592;
       HEAP32[$739 >> 2] = 904;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($748);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($739);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($737);
       $$10 = $$9;
       $$1019 = $$918;
       break L19;
      } while (0);
      $$0$i224 = $eh$lpad$body$i221$index67Z2D;
      $$01$i223 = $eh$lpad$body$i221$indexZ2D;
      label = 196;
     } while (0);
     if ((label | 0) == 196) {
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($737);
      $$10 = $$01$i223;
      $$1019 = $$0$i224;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($706);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($705);
     $$12 = $$10;
     $$1221 = $$1019;
    } else if ((label | 0) == 193) {
     $776 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body218$index73Z2D = tempRet0;
     $eh$lpad$body218$indexZ2D = $776;
     label = 195;
    } else if ((label | 0) == 203) {
     __THREW__ = 0;
     $787 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $788 = __THREW__;
     __THREW__ = 0;
     if (!($788 & 1)) {
      $791 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $33 | 0, $64 | 0);
      $792 = __THREW__;
      __THREW__ = 0;
      if (!($792 & 1)) {
       $796 = $70;
       $801 = HEAP32[$796 + 4 >> 2] | 0;
       $802 = $33 + 12 | 0;
       HEAP32[$802 >> 2] = HEAP32[$796 >> 2];
       HEAP32[$802 + 4 >> 2] = $801;
       $807 = $787 + 24 | 0;
       $812 = HEAP32[$807 + 4 >> 2] | 0;
       $813 = $33 + 20 | 0;
       HEAP32[$813 >> 2] = HEAP32[$807 >> 2];
       HEAP32[$813 + 4 >> 2] = $812;
       $817 = $34 + 4 | 0;
       HEAP32[$817 >> 2] = 0;
       $818 = $34 + 8 | 0;
       HEAP32[$818 >> 2] = 0;
       $819 = $34 + 4 | 0;
       HEAP32[$34 >> 2] = $819;
       $820 = HEAP32[$binds >> 2] | 0;
       do if (($820 | 0) == ($704 | 0)) label = 223; else {
        $826 = $820;
        $853 = $820;
        while (1) {
         __THREW__ = 0;
         $822 = invoke_ii(67, 24) | 0;
         $823 = __THREW__;
         __THREW__ = 0;
         if ($823 & 1) {
          label = 233;
          break;
         }
         $827 = $822 + 16 | 0;
         $828 = $826 + 16 | 0;
         $833 = HEAP32[$828 + 4 >> 2] | 0;
         $834 = $827;
         HEAP32[$834 >> 2] = HEAP32[$828 >> 2];
         HEAP32[$834 + 4 >> 2] = $833;
         HEAP32[$1 >> 2] = $819;
         HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
         $838 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($34, $$byval_copy, $0, $827) | 0;
         $839 = HEAP32[$838 >> 2] | 0;
         if (!$839) {
          $841 = HEAP32[$0 >> 2] | 0;
          HEAP32[$822 >> 2] = 0;
          HEAP32[$822 + 4 >> 2] = 0;
          HEAP32[$822 + 8 >> 2] = $841;
          HEAP32[$838 >> 2] = $822;
          $845 = HEAP32[HEAP32[$34 >> 2] >> 2] | 0;
          if (!$845) $848 = $822; else {
           HEAP32[$34 >> 2] = $845;
           $848 = HEAP32[$838 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$817 >> 2] | 0, $848);
          HEAP32[$818 >> 2] = (HEAP32[$818 >> 2] | 0) + 1;
         } else if (($839 | 0) != ($822 | 0)) __ZdlPv($822);
         $854 = HEAP32[$853 + 4 >> 2] | 0;
         if (!$854) {
          $$0$i$i$i$i$i = $853;
          while (1) {
           $859 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
           if ((HEAP32[$859 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
            $$cast$i$i$i$i$i$lcssa = $859;
            break;
           } else $$0$i$i$i$i$i = $859;
          }
          $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
         } else {
          $$0$i$i$i$i$i$i = $854;
          while (1) {
           $856 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$856) {
            $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $856;
          }
          $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
         }
         if (($$01$i$i$i$i$i | 0) == ($704 | 0)) {
          label = 222;
          break;
         } else {
          $826 = $$01$i$i$i$i$i;
          $853 = $$01$i$i$i$i$i;
         }
        }
        if ((label | 0) == 222) {
         label = 223;
         break;
        } else if ((label | 0) == 233) {
         $883 = ___cxa_find_matching_catch() | 0;
         $884 = tempRet0;
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($34, HEAP32[$819 >> 2] | 0);
         $$11 = $883;
         $$1120 = $884;
         break;
        }
       } while (0);
       if ((label | 0) == 223) {
        __THREW__ = 0;
        $863 = invoke_ii(67, 64) | 0;
        $864 = __THREW__;
        __THREW__ = 0;
        do if ($864 & 1) label = 234; else {
         __THREW__ = 0;
         invoke_viiii(11, $863 | 0, $33 | 0, $34 | 0, $787 | 0);
         $866 = __THREW__;
         __THREW__ = 0;
         if ($866 & 1) {
          $879 = ___cxa_find_matching_catch() | 0;
          $880 = tempRet0;
          __ZdlPv($863);
          $eh$lpad$body256$index79Z2D = $880;
          $eh$lpad$body256$indexZ2D = $879;
          break;
         }
         HEAP32[$7 >> 2] = $863;
         $868 = $791 + 16 | 0;
         $869 = HEAP32[$868 >> 2] | 0;
         if ($869 >>> 0 < (HEAP32[$791 + 20 >> 2] | 0) >>> 0) {
          if (!$869) $875 = 0; else {
           HEAP32[$869 >> 2] = $863;
           $875 = HEAP32[$868 >> 2] | 0;
          }
          HEAP32[$868 >> 2] = $875 + 4;
         } else {
          __THREW__ = 0;
          invoke_vii(51, $791 + 12 | 0, $7 | 0);
          $877 = __THREW__;
          __THREW__ = 0;
          if ($877 & 1) {
           label = 234;
           break;
          }
         }
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($34, HEAP32[$819 >> 2] | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$704 >> 2] | 0);
         $$0 = $863;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
         STACKTOP = sp;
         return $$0 | 0;
        } while (0);
        if ((label | 0) == 234) {
         $886 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body256$index79Z2D = tempRet0;
         $eh$lpad$body256$indexZ2D = $886;
        }
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($34, HEAP32[$819 >> 2] | 0);
        $$11 = $eh$lpad$body256$indexZ2D;
        $$1120 = $eh$lpad$body256$index79Z2D;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
       $$12 = $$11;
       $$1221 = $$1120;
       break;
      }
     }
     $778 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body218$index73Z2D = tempRet0;
     $eh$lpad$body218$indexZ2D = $778;
     label = 195;
    } while (0);
    if ((label | 0) == 195) {
     $$12 = $eh$lpad$body218$indexZ2D;
     $$1221 = $eh$lpad$body218$index73Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$704 >> 2] | 0);
    $$31 = $$12;
    $$3140 = $$1221;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
    ___resumeException($$31 | 0);
   }
   break;
  }
 case 20:
  {
   $this$idx$val$idx$val$i87 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $163 = $this$idx$val$idx$val$i87 + 8 | 0;
   HEAP32[$18 >> 2] = HEAP32[$163 >> 2];
   $165 = $18 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $165 | 0, $this$idx$val$idx$val$i87 + 12 | 0);
   $167 = __THREW__;
   __THREW__ = 0;
   if ($167 & 1) label = 19; else {
    HEAP32[$18 >> 2] = HEAP32[$163 >> 2];
    $170 = $18 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $170 | 0, $this$idx$val$idx$val$i87 + 24 | 0);
    $172 = __THREW__;
    __THREW__ = 0;
    if ($172 & 1) {
     $174 = ___cxa_find_matching_catch() | 0;
     $175 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
     $eh$lpad$body75$index16Z2D = $175;
     $eh$lpad$body75$indexZ2D = $174;
     break L4;
    }
    $176 = $18 + 28 | 0;
    $177 = $this$idx$val$idx$val$i87 + 36 | 0;
    HEAP32[$176 + 0 >> 2] = HEAP32[$177 + 0 >> 2];
    HEAP32[$176 + 4 >> 2] = HEAP32[$177 + 4 >> 2];
    HEAP32[$176 + 8 >> 2] = HEAP32[$177 + 8 >> 2];
    HEAP32[$176 + 12 >> 2] = HEAP32[$177 + 12 >> 2];
    HEAP32[$18 >> 2] = HEAP32[$163 >> 2];
    $179 = HEAP32[$this >> 2] | 0;
    $181 = HEAP32[$179 + 4 >> 2] | 0;
    $182 = $181 + 4 | 0;
    $184 = HEAP32[$181 >> 2] | 0;
    HEAP32[$184 + 4 >> 2] = HEAP32[$182 >> 2];
    HEAP32[HEAP32[$182 >> 2] >> 2] = $184;
    $187 = $179 + 8 | 0;
    HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($181 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($181 + 12 | 0);
    __ZdlPv($181);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
    __THREW__ = 0;
    $192 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $193 = __THREW__;
    __THREW__ = 0;
    if ($193 & 1) label = 19; else {
     __THREW__ = 0;
     invoke_viiii(12, $19 | 0, $this | 0, 27, 0);
     $195 = __THREW__;
     __THREW__ = 0;
     if ($195 & 1) label = 19; else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19 + 16 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19 + 4 | 0);
      __THREW__ = 0;
      $199 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
      $200 = __THREW__;
      __THREW__ = 0;
      if ($200 & 1) label = 19; else {
       $this$idx57$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $202 = $this$idx57$val$idx$val + 8 | 0;
       HEAP32[$20 >> 2] = HEAP32[$202 >> 2];
       $204 = $20 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $204 | 0, $this$idx57$val$idx$val + 12 | 0);
       $206 = __THREW__;
       __THREW__ = 0;
       if ($206 & 1) label = 19; else {
        HEAP32[$20 >> 2] = HEAP32[$202 >> 2];
        $209 = $20 + 16 | 0;
        __THREW__ = 0;
        invoke_vii(40, $209 | 0, $this$idx57$val$idx$val + 24 | 0);
        $211 = __THREW__;
        __THREW__ = 0;
        if ($211 & 1) {
         $213 = ___cxa_find_matching_catch() | 0;
         $214 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($204);
         $eh$lpad$body75$index16Z2D = $214;
         $eh$lpad$body75$indexZ2D = $213;
         break L4;
        }
        $215 = $20 + 28 | 0;
        $216 = $this$idx57$val$idx$val + 36 | 0;
        HEAP32[$215 + 0 >> 2] = HEAP32[$216 + 0 >> 2];
        HEAP32[$215 + 4 >> 2] = HEAP32[$216 + 4 >> 2];
        HEAP32[$215 + 8 >> 2] = HEAP32[$216 + 8 >> 2];
        HEAP32[$215 + 12 >> 2] = HEAP32[$216 + 12 >> 2];
        $217 = HEAP32[$202 >> 2] | 0;
        HEAP32[$20 >> 2] = $217;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($209);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($204);
        L116 : do if (($217 | 0) == 15) {
         $this$idx$val$idx$val$i99 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $219 = $this$idx$val$idx$val$i99 + 8 | 0;
         HEAP32[$21 >> 2] = HEAP32[$219 >> 2];
         $221 = $21 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $221 | 0, $this$idx$val$idx$val$i99 + 12 | 0);
         $223 = __THREW__;
         __THREW__ = 0;
         if ($223 & 1) {
          label = 19;
          break L4;
         }
         HEAP32[$21 >> 2] = HEAP32[$219 >> 2];
         $226 = $21 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $226 | 0, $this$idx$val$idx$val$i99 + 24 | 0);
         $228 = __THREW__;
         __THREW__ = 0;
         if ($228 & 1) {
          $230 = ___cxa_find_matching_catch() | 0;
          $231 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($221);
          $eh$lpad$body75$index16Z2D = $231;
          $eh$lpad$body75$indexZ2D = $230;
          break L4;
         }
         $232 = $21 + 28 | 0;
         $233 = $this$idx$val$idx$val$i99 + 36 | 0;
         HEAP32[$232 + 0 >> 2] = HEAP32[$233 + 0 >> 2];
         HEAP32[$232 + 4 >> 2] = HEAP32[$233 + 4 >> 2];
         HEAP32[$232 + 8 >> 2] = HEAP32[$233 + 8 >> 2];
         HEAP32[$232 + 12 >> 2] = HEAP32[$233 + 12 >> 2];
         HEAP32[$21 >> 2] = HEAP32[$219 >> 2];
         $235 = HEAP32[$this >> 2] | 0;
         $237 = HEAP32[$235 + 4 >> 2] | 0;
         $238 = $237 + 4 | 0;
         $240 = HEAP32[$237 >> 2] | 0;
         HEAP32[$240 + 4 >> 2] = HEAP32[$238 >> 2];
         HEAP32[HEAP32[$238 >> 2] >> 2] = $240;
         $243 = $235 + 8 | 0;
         HEAP32[$243 >> 2] = (HEAP32[$243 >> 2] | 0) + -1;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($237 + 24 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($237 + 12 | 0);
         __ZdlPv($237);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($226);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($221);
         __THREW__ = 0;
         $248 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
         $249 = __THREW__;
         __THREW__ = 0;
         if ($249 & 1) {
          label = 19;
          break L4;
         }
         $$pre$phi799Z2D = $this + 4 | 0;
         $branch_false$0 = $248;
        } else {
         $251 = $this + 4 | 0;
         $252 = HEAP32[$251 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $22 | 0, $64 | 0);
         $253 = __THREW__;
         __THREW__ = 0;
         if ($253 & 1) {
          label = 19;
          break L4;
         }
         $256 = $22 + 12 | 0;
         $257 = $70;
         $262 = HEAP32[$257 + 4 >> 2] | 0;
         $263 = $256;
         HEAP32[$263 >> 2] = HEAP32[$257 >> 2];
         HEAP32[$263 + 4 >> 2] = $262;
         $268 = $199 + 24 | 0;
         $273 = HEAP32[$268 + 4 >> 2] | 0;
         $274 = $22 + 20 | 0;
         HEAP32[$274 >> 2] = HEAP32[$268 >> 2];
         HEAP32[$274 + 4 >> 2] = $273;
         __THREW__ = 0;
         $278 = invoke_ii(67, 48) | 0;
         $279 = __THREW__;
         __THREW__ = 0;
         do if ($279 & 1) label = 48; else {
          HEAP32[$278 >> 2] = 33968;
          __THREW__ = 0;
          invoke_vii(40, $278 + 4 | 0, $22 | 0);
          $282 = __THREW__;
          __THREW__ = 0;
          if ($282 & 1) {
           $300 = ___cxa_find_matching_catch() | 0;
           $301 = tempRet0;
           __ZdlPv($278);
           $eh$lpad$body116$index40Z2D = $301;
           $eh$lpad$body116$indexZ2D = $300;
           break;
          }
          $284 = $278 + 16 | 0;
          HEAP32[$284 + 0 >> 2] = HEAP32[$256 + 0 >> 2];
          HEAP32[$284 + 4 >> 2] = HEAP32[$256 + 4 >> 2];
          HEAP32[$284 + 8 >> 2] = HEAP32[$256 + 8 >> 2];
          HEAP32[$284 + 12 >> 2] = HEAP32[$256 + 12 >> 2];
          HEAP32[$278 + 32 >> 2] = 12;
          HEAP32[$278 + 36 >> 2] = 0;
          HEAP32[$278 + 40 >> 2] = 0;
          HEAP32[$278 + 44 >> 2] = 0;
          HEAP32[$278 >> 2] = 36248;
          HEAP32[$12 >> 2] = $278;
          $289 = $252 + 16 | 0;
          $290 = HEAP32[$289 >> 2] | 0;
          if ($290 >>> 0 < (HEAP32[$252 + 20 >> 2] | 0) >>> 0) {
           if (!$290) $296 = 0; else {
            HEAP32[$290 >> 2] = $278;
            $296 = HEAP32[$289 >> 2] | 0;
           }
           HEAP32[$289 >> 2] = $296 + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(51, $252 + 12 | 0, $12 | 0);
           $298 = __THREW__;
           __THREW__ = 0;
           if ($298 & 1) {
            label = 48;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
          $$pre$phi799Z2D = $251;
          $branch_false$0 = $278;
          break L116;
         } while (0);
         if ((label | 0) == 48) {
          $302 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body116$index40Z2D = tempRet0;
          $eh$lpad$body116$indexZ2D = $302;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
         $$31 = $eh$lpad$body116$indexZ2D;
         $$3140 = $eh$lpad$body116$index40Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
         ___resumeException($$31 | 0);
        } while (0);
        $304 = HEAP32[$$pre$phi799Z2D >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(40, $23 | 0, $64 | 0);
        $305 = __THREW__;
        __THREW__ = 0;
        if ($305 & 1) label = 19; else {
         $308 = $23 + 12 | 0;
         $309 = $70;
         $314 = HEAP32[$309 + 4 >> 2] | 0;
         $315 = $308;
         HEAP32[$315 >> 2] = HEAP32[$309 >> 2];
         HEAP32[$315 + 4 >> 2] = $314;
         $320 = $branch_false$0 + 24 | 0;
         $325 = HEAP32[$320 + 4 >> 2] | 0;
         $326 = $23 + 20 | 0;
         HEAP32[$326 >> 2] = HEAP32[$320 >> 2];
         HEAP32[$326 + 4 >> 2] = $325;
         __THREW__ = 0;
         $330 = invoke_ii(67, 60) | 0;
         $331 = __THREW__;
         __THREW__ = 0;
         do if ($331 & 1) label = 60; else {
          HEAP32[$330 >> 2] = 33968;
          __THREW__ = 0;
          invoke_vii(40, $330 + 4 | 0, $23 | 0);
          $334 = __THREW__;
          __THREW__ = 0;
          if ($334 & 1) {
           $355 = ___cxa_find_matching_catch() | 0;
           $356 = tempRet0;
           __ZdlPv($330);
           $eh$lpad$body124$index45Z2D = $356;
           $eh$lpad$body124$indexZ2D = $355;
           break;
          }
          $336 = $330 + 16 | 0;
          HEAP32[$336 + 0 >> 2] = HEAP32[$308 + 0 >> 2];
          HEAP32[$336 + 4 >> 2] = HEAP32[$308 + 4 >> 2];
          HEAP32[$336 + 8 >> 2] = HEAP32[$308 + 8 >> 2];
          HEAP32[$336 + 12 >> 2] = HEAP32[$308 + 12 >> 2];
          HEAP32[$330 + 32 >> 2] = 4;
          HEAP32[$330 + 36 >> 2] = 0;
          HEAP32[$330 + 40 >> 2] = 0;
          HEAP32[$330 + 44 >> 2] = 0;
          HEAP32[$330 >> 2] = 36232;
          HEAP32[$330 + 48 >> 2] = $192;
          HEAP32[$330 + 52 >> 2] = $199;
          HEAP32[$330 + 56 >> 2] = $branch_false$0;
          HEAP32[$11 >> 2] = $330;
          $344 = $304 + 16 | 0;
          $345 = HEAP32[$344 >> 2] | 0;
          if ($345 >>> 0 < (HEAP32[$304 + 20 >> 2] | 0) >>> 0) {
           if (!$345) $351 = 0; else {
            HEAP32[$345 >> 2] = $330;
            $351 = HEAP32[$344 >> 2] | 0;
           }
           HEAP32[$344 >> 2] = $351 + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(51, $304 + 12 | 0, $11 | 0);
           $353 = __THREW__;
           __THREW__ = 0;
           if ($353 & 1) {
            label = 60;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
          $$0 = $330;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
          STACKTOP = sp;
          return $$0 | 0;
         } while (0);
         if ((label | 0) == 60) {
          $357 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body124$index45Z2D = tempRet0;
          $eh$lpad$body124$indexZ2D = $357;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
         $$31 = $eh$lpad$body124$indexZ2D;
         $$3140 = $eh$lpad$body124$index45Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
         ___resumeException($$31 | 0);
        }
       }
      }
     }
    }
   }
   break;
  }
 case 19:
  {
   $this$idx$val$idx$val$i128 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $359 = $this$idx$val$idx$val$i128 + 8 | 0;
   HEAP32[$24 >> 2] = HEAP32[$359 >> 2];
   $361 = $24 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $361 | 0, $this$idx$val$idx$val$i128 + 12 | 0);
   $363 = __THREW__;
   __THREW__ = 0;
   if ($363 & 1) label = 19; else {
    HEAP32[$24 >> 2] = HEAP32[$359 >> 2];
    $366 = $24 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $366 | 0, $this$idx$val$idx$val$i128 + 24 | 0);
    $368 = __THREW__;
    __THREW__ = 0;
    if ($368 & 1) {
     $370 = ___cxa_find_matching_catch() | 0;
     $371 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($361);
     $eh$lpad$body75$index16Z2D = $371;
     $eh$lpad$body75$indexZ2D = $370;
     break L4;
    }
    $372 = $24 + 28 | 0;
    $373 = $this$idx$val$idx$val$i128 + 36 | 0;
    HEAP32[$372 + 0 >> 2] = HEAP32[$373 + 0 >> 2];
    HEAP32[$372 + 4 >> 2] = HEAP32[$373 + 4 >> 2];
    HEAP32[$372 + 8 >> 2] = HEAP32[$373 + 8 >> 2];
    HEAP32[$372 + 12 >> 2] = HEAP32[$373 + 12 >> 2];
    HEAP32[$24 >> 2] = HEAP32[$359 >> 2];
    $375 = HEAP32[$this >> 2] | 0;
    $377 = HEAP32[$375 + 4 >> 2] | 0;
    $378 = $377 + 4 | 0;
    $380 = HEAP32[$377 >> 2] | 0;
    HEAP32[$380 + 4 >> 2] = HEAP32[$378 >> 2];
    HEAP32[HEAP32[$378 >> 2] >> 2] = $380;
    $383 = $375 + 8 | 0;
    HEAP32[$383 >> 2] = (HEAP32[$383 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($377 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($377 + 12 | 0);
    __ZdlPv($377);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($366);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($361);
    $this$idx$val$idx$val$i136 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $388 = $this$idx$val$idx$val$i136 + 8 | 0;
    HEAP32[$next >> 2] = HEAP32[$388 >> 2];
    $390 = $next + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $390 | 0, $this$idx$val$idx$val$i136 + 12 | 0);
    $392 = __THREW__;
    __THREW__ = 0;
    if ($392 & 1) label = 19; else {
     HEAP32[$next >> 2] = HEAP32[$388 >> 2];
     $395 = $next + 16 | 0;
     __THREW__ = 0;
     invoke_vii(40, $395 | 0, $this$idx$val$idx$val$i136 + 24 | 0);
     $397 = __THREW__;
     __THREW__ = 0;
     if ($397 & 1) {
      $399 = ___cxa_find_matching_catch() | 0;
      $400 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($390);
      $eh$lpad$body75$index16Z2D = $400;
      $eh$lpad$body75$indexZ2D = $399;
      break L4;
     }
     $401 = $next + 28 | 0;
     $402 = $this$idx$val$idx$val$i136 + 36 | 0;
     HEAP32[$401 + 0 >> 2] = HEAP32[$402 + 0 >> 2];
     HEAP32[$401 + 4 >> 2] = HEAP32[$402 + 4 >> 2];
     HEAP32[$401 + 8 >> 2] = HEAP32[$402 + 8 >> 2];
     HEAP32[$401 + 12 >> 2] = HEAP32[$402 + 12 >> 2];
     HEAP32[$next >> 2] = HEAP32[$388 >> 2];
     $404 = HEAP32[$this >> 2] | 0;
     $406 = HEAP32[$404 + 4 >> 2] | 0;
     $407 = $406 + 4 | 0;
     $409 = HEAP32[$406 >> 2] | 0;
     HEAP32[$409 + 4 >> 2] = HEAP32[$407 >> 2];
     HEAP32[HEAP32[$407 >> 2] >> 2] = $409;
     $412 = $404 + 8 | 0;
     HEAP32[$412 >> 2] = (HEAP32[$412 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($406 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($406 + 12 | 0);
     __ZdlPv($406);
     L169 : do if ((HEAP32[$next >> 2] | 0) == 8) {
      HEAP32[$params_asts >> 2] = 0;
      $419 = $params_asts + 4 | 0;
      HEAP32[$419 >> 2] = 0;
      HEAP32[$params_asts + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_viii(3, $26 | 0, 35136, 18);
      $421 = __THREW__;
      __THREW__ = 0;
      do if ($421 & 1) label = 75; else {
       __THREW__ = 0;
       invoke_viiiii(4, $25 | 0, $this | 0, $params_asts | 0, $26 | 0, $obj_level | 0);
       $423 = __THREW__;
       __THREW__ = 0;
       if ($423 & 1) {
        $440 = ___cxa_find_matching_catch() | 0;
        $441 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        $$4 = $440;
        $$413 = $441;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25 + 16 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25 + 4 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
       __THREW__ = 0;
       $427 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
       $428 = __THREW__;
       __THREW__ = 0;
       if ($428 & 1) label = 75; else {
        HEAP32[$params >> 2] = 0;
        $430 = $params + 4 | 0;
        HEAP32[$430 >> 2] = 0;
        $431 = $params + 8 | 0;
        HEAP32[$431 >> 2] = 0;
        $432 = HEAP32[$params_asts >> 2] | 0;
        $433 = HEAP32[$419 >> 2] | 0;
        L206 : do if (($432 | 0) == ($433 | 0)) label = 108; else {
         $436 = $432;
         while (1) {
          $435 = HEAP32[$436 >> 2] | 0;
          if (!$435) {
           $$lcssa794 = 0;
           label = 78;
           break;
          }
          $442 = ___dynamic_cast($435, 33800, 34792, 0) | 0;
          if (!$442) {
           $$lcssa794 = $435;
           label = 78;
           break;
          }
          $495 = $442 + 48 | 0;
          $496 = HEAP32[$430 >> 2] | 0;
          if (($496 | 0) == (HEAP32[$431 >> 2] | 0)) {
           __THREW__ = 0;
           invoke_vii(55, $params | 0, $495 | 0);
           $503 = __THREW__;
           __THREW__ = 0;
           if ($503 & 1) {
            label = 93;
            break;
           }
          } else {
           if (!$496) $502 = 0; else {
            HEAP32[$496 >> 2] = HEAP32[$495 >> 2];
            $502 = HEAP32[$430 >> 2] | 0;
           }
           HEAP32[$430 >> 2] = $502 + 4;
          }
          $436 = $436 + 4 | 0;
          if (($436 | 0) == ($433 | 0)) {
           label = 107;
           break;
          }
         }
         if ((label | 0) == 78) {
          $444 = $ss + 64 | 0;
          $445 = $ss + 8 | 0;
          HEAP32[$445 >> 2] = 592;
          $446 = $ss + 12 | 0;
          HEAP32[$ss >> 2] = 740;
          HEAP32[$444 >> 2] = 760;
          HEAP32[$ss + 4 >> 2] = 0;
          __THREW__ = 0;
          invoke_vii(41, $ss + 64 | 0, $446 | 0);
          $449 = __THREW__;
          __THREW__ = 0;
          if ($449 & 1) {
           $461 = ___cxa_find_matching_catch() | 0;
           $$0$i = tempRet0;
           $$01$i = $461;
          } else {
           HEAP32[$ss + 136 >> 2] = 0;
           HEAP32[$ss + 140 >> 2] = -1;
           HEAP32[$ss >> 2] = 572;
           HEAP32[$444 >> 2] = 612;
           HEAP32[$445 >> 2] = 592;
           __THREW__ = 0;
           invoke_vi(177, $446 | 0);
           $453 = __THREW__;
           __THREW__ = 0;
           do if ($453 & 1) {
            $463 = ___cxa_find_matching_catch() | 0;
            $eh$lpad$body$i$index50Z2D = tempRet0;
            $eh$lpad$body$i$indexZ2D = $463;
           } else {
            HEAP32[$446 >> 2] = 904;
            $455 = $ss + 44 | 0;
            HEAP32[$455 + 0 >> 2] = 0;
            HEAP32[$455 + 4 >> 2] = 0;
            HEAP32[$455 + 8 >> 2] = 0;
            HEAP32[$455 + 12 >> 2] = 0;
            HEAP32[$ss + 60 >> 2] = 24;
            HEAP32[$10 + 0 >> 2] = 0;
            HEAP32[$10 + 4 >> 2] = 0;
            HEAP32[$10 + 8 >> 2] = 0;
            __THREW__ = 0;
            invoke_vii(42, $446 | 0, $10 | 0);
            $457 = __THREW__;
            __THREW__ = 0;
            if ($457 & 1) {
             $459 = ___cxa_find_matching_catch() | 0;
             $460 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($455);
             __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($446);
             $eh$lpad$body$i$index50Z2D = $460;
             $eh$lpad$body$i$indexZ2D = $459;
             break;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
            __THREW__ = 0;
            $465 = invoke_iiii(25, $445 | 0, 35160, 19) | 0;
            $466 = __THREW__;
            __THREW__ = 0;
            L232 : do if ($466 & 1) label = 96; else {
             __THREW__ = 0;
             invoke_iii(26, $465 | 0, $$lcssa794 | 0) | 0;
             $468 = __THREW__;
             __THREW__ = 0;
             if ($468 & 1) {
              label = 96;
              break;
             }
             $470 = ___cxa_allocate_exception(40) | 0;
             __THREW__ = 0;
             invoke_vii(43, $27 | 0, $446 | 0);
             $471 = __THREW__;
             __THREW__ = 0;
             L235 : do if ($471 & 1) {
              $491 = ___cxa_find_matching_catch() | 0;
              $$02442 = $491;
              $$03441 = tempRet0;
             } else {
              __THREW__ = 0;
              invoke_vii(40, $470 | 0, $$lcssa794 + 4 | 0);
              $474 = __THREW__;
              __THREW__ = 0;
              do if ($474 & 1) $$042 = 1; else {
               $476 = $470 + 12 | 0;
               $477 = $$lcssa794 + 16 | 0;
               HEAP32[$476 + 0 >> 2] = HEAP32[$477 + 0 >> 2];
               HEAP32[$476 + 4 >> 2] = HEAP32[$477 + 4 >> 2];
               HEAP32[$476 + 8 >> 2] = HEAP32[$477 + 8 >> 2];
               HEAP32[$476 + 12 >> 2] = HEAP32[$477 + 12 >> 2];
               __THREW__ = 0;
               invoke_vii(40, $470 + 28 | 0, $27 | 0);
               $479 = __THREW__;
               __THREW__ = 0;
               if ($479 & 1) {
                $481 = ___cxa_find_matching_catch() | 0;
                $482 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($470);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
                $$02442 = $481;
                $$03441 = $482;
                break L235;
               }
               __THREW__ = 0;
               invoke_viii(4, $470 | 0, 48, 176);
               $483 = __THREW__;
               __THREW__ = 0;
               if ($483 & 1) {
                $$042 = 0;
                break;
               }
              } while (0);
              $493 = ___cxa_find_matching_catch() | 0;
              $494 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
              if ($$042) {
               $$02442 = $493;
               $$03441 = $494;
              } else {
               $$1 = $493;
               $$110 = $494;
               break L232;
              }
             } while (0);
             ___cxa_free_exception($470 | 0);
             $$1 = $$02442;
             $$110 = $$03441;
            } while (0);
            if ((label | 0) == 96) {
             $489 = ___cxa_find_matching_catch() | 0;
             $$1 = $489;
             $$110 = tempRet0;
            }
            HEAP32[$ss >> 2] = 572;
            HEAP32[$444 >> 2] = 612;
            HEAP32[$445 >> 2] = 592;
            HEAP32[$446 >> 2] = 904;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($455);
            __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($446);
            __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($444);
            $$3 = $$1;
            $$312 = $$110;
            break L206;
           } while (0);
           $$0$i = $eh$lpad$body$i$index50Z2D;
           $$01$i = $eh$lpad$body$i$indexZ2D;
          }
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($444);
          $eh$lpad$body148$index56Z2D = $$0$i;
          $eh$lpad$body148$indexZ2D = $$01$i;
          label = 95;
          break;
         } else if ((label | 0) == 93) {
          $485 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body148$index56Z2D = tempRet0;
          $eh$lpad$body148$indexZ2D = $485;
          label = 95;
          break;
         } else if ((label | 0) == 107) {
          label = 108;
          break;
         }
        } while (0);
        do if ((label | 0) == 108) {
         $508 = HEAP32[$this + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $28 | 0, $64 | 0);
         $509 = __THREW__;
         __THREW__ = 0;
         if ($509 & 1) {
          $487 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body148$index56Z2D = tempRet0;
          $eh$lpad$body148$indexZ2D = $487;
          label = 95;
          break;
         }
         $513 = $70;
         $518 = HEAP32[$513 + 4 >> 2] | 0;
         $519 = $28 + 12 | 0;
         HEAP32[$519 >> 2] = HEAP32[$513 >> 2];
         HEAP32[$519 + 4 >> 2] = $518;
         $524 = $427 + 24 | 0;
         $529 = HEAP32[$524 + 4 >> 2] | 0;
         $530 = $28 + 20 | 0;
         HEAP32[$530 >> 2] = HEAP32[$524 >> 2];
         HEAP32[$530 + 4 >> 2] = $529;
         HEAP32[$29 >> 2] = 0;
         $534 = $29 + 4 | 0;
         HEAP32[$534 >> 2] = 0;
         $535 = $29 + 8 | 0;
         HEAP32[$535 >> 2] = 0;
         $540 = (HEAP32[$430 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
         $541 = $540 >> 2;
         do if (!$541) label = 121; else {
          if ($541 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(179, $29 | 0);
           $544 = __THREW__;
           __THREW__ = 0;
           if (!($544 & 1)) label = 112;
          } else label = 112;
          if ((label | 0) == 112) {
           __THREW__ = 0;
           $546 = invoke_ii(67, $540 | 0) | 0;
           $547 = __THREW__;
           __THREW__ = 0;
           if (!($547 & 1)) {
            HEAP32[$534 >> 2] = $546;
            HEAP32[$29 >> 2] = $546;
            HEAP32[$535 >> 2] = $546 + ($541 << 2);
            $550 = HEAP32[$params >> 2] | 0;
            $551 = HEAP32[$430 >> 2] | 0;
            if (($550 | 0) == ($551 | 0)) {
             label = 121;
             break;
            }
            $$01$i$i = $550;
            $554 = $546;
            do {
             HEAP32[$554 >> 2] = HEAP32[$$01$i$i >> 2];
             $554 = (HEAP32[$534 >> 2] | 0) + 4 | 0;
             HEAP32[$534 >> 2] = $554;
             $$01$i$i = $$01$i$i + 4 | 0;
            } while (($$01$i$i | 0) != ($551 | 0));
            label = 121;
            break;
           }
          }
          $558 = ___cxa_find_matching_catch() | 0;
          $559 = tempRet0;
          $560 = HEAP32[$29 >> 2] | 0;
          $562 = $560;
          if ($560) {
           $563 = HEAP32[$534 >> 2] | 0;
           if (($563 | 0) != ($560 | 0)) HEAP32[$534 >> 2] = $563 + (~(($563 + -4 - $562 | 0) >>> 2) << 2);
           __ZdlPv($560);
          }
          $$2 = $558;
          $$211 = $559;
         } while (0);
         do if ((label | 0) == 121) {
          __THREW__ = 0;
          $569 = invoke_iiiii(6, $508 | 0, $28 | 0, $29 | 0, $427 | 0) | 0;
          $570 = __THREW__;
          __THREW__ = 0;
          if ($570 & 1) {
           $599 = ___cxa_find_matching_catch() | 0;
           $600 = tempRet0;
           $601 = HEAP32[$29 >> 2] | 0;
           if (!$601) {
            $$2 = $599;
            $$211 = $600;
            break;
           }
           $604 = HEAP32[$534 >> 2] | 0;
           if (($604 | 0) != ($601 | 0)) HEAP32[$534 >> 2] = $604 + (~(($604 + -4 - $601 | 0) >>> 2) << 2);
           __ZdlPv($601);
           $$2 = $599;
           $$211 = $600;
           break;
          }
          $572 = HEAP32[$29 >> 2] | 0;
          $574 = $572;
          if ($572) {
           $575 = HEAP32[$534 >> 2] | 0;
           if (($575 | 0) != ($572 | 0)) HEAP32[$534 >> 2] = $575 + (~(($575 + -4 - $574 | 0) >>> 2) << 2);
           __ZdlPv($572);
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
          $581 = HEAP32[$params >> 2] | 0;
          $583 = $581;
          if ($581) {
           $584 = HEAP32[$430 >> 2] | 0;
           if (($584 | 0) != ($581 | 0)) HEAP32[$430 >> 2] = $584 + (~(($584 + -4 - $583 | 0) >>> 2) << 2);
           __ZdlPv($581);
          }
          $590 = HEAP32[$params_asts >> 2] | 0;
          $592 = $590;
          if ($590) {
           $593 = HEAP32[$419 >> 2] | 0;
           if (($593 | 0) != ($590 | 0)) HEAP32[$419 >> 2] = $593 + (~(($593 + -4 - $592 | 0) >>> 2) << 2);
           __ZdlPv($590);
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($395);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($390);
          $$0 = $569;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
          STACKTOP = sp;
          return $$0 | 0;
         } while (0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
         $$3 = $$2;
         $$312 = $$211;
        } while (0);
        if ((label | 0) == 95) {
         $$3 = $eh$lpad$body148$indexZ2D;
         $$312 = $eh$lpad$body148$index56Z2D;
        }
        $610 = HEAP32[$params >> 2] | 0;
        $612 = $610;
        if (!$610) {
         $$4 = $$3;
         $$413 = $$312;
        } else {
         $613 = HEAP32[$430 >> 2] | 0;
         if (($613 | 0) != ($610 | 0)) HEAP32[$430 >> 2] = $613 + (~(($613 + -4 - $612 | 0) >>> 2) << 2);
         __ZdlPv($610);
         $$4 = $$3;
         $$413 = $$312;
        }
       }
      } while (0);
      if ((label | 0) == 75) {
       $438 = ___cxa_find_matching_catch() | 0;
       $$4 = $438;
       $$413 = tempRet0;
      }
      $619 = HEAP32[$params_asts >> 2] | 0;
      $621 = $619;
      if (!$619) {
       $$7 = $$4;
       $$716 = $$413;
      } else {
       $622 = HEAP32[$419 >> 2] | 0;
       if (($622 | 0) != ($619 | 0)) HEAP32[$419 >> 2] = $622 + (~(($622 + -4 - $621 | 0) >>> 2) << 2);
       __ZdlPv($619);
       $$7 = $$4;
       $$716 = $$413;
      }
     } else {
      $628 = $ss1 + 64 | 0;
      $629 = $ss1 + 8 | 0;
      HEAP32[$629 >> 2] = 592;
      $630 = $ss1 + 12 | 0;
      HEAP32[$ss1 >> 2] = 740;
      HEAP32[$628 >> 2] = 760;
      HEAP32[$ss1 + 4 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(41, $ss1 + 64 | 0, $630 | 0);
      $633 = __THREW__;
      __THREW__ = 0;
      if ($633 & 1) {
       $645 = ___cxa_find_matching_catch() | 0;
       $$0$i192 = tempRet0;
       $$01$i191 = $645;
      } else {
       HEAP32[$ss1 + 136 >> 2] = 0;
       HEAP32[$ss1 + 140 >> 2] = -1;
       HEAP32[$ss1 >> 2] = 572;
       HEAP32[$628 >> 2] = 612;
       HEAP32[$629 >> 2] = 592;
       __THREW__ = 0;
       invoke_vi(177, $630 | 0);
       $637 = __THREW__;
       __THREW__ = 0;
       do if ($637 & 1) {
        $647 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$i189$index62Z2D = tempRet0;
        $eh$lpad$body$i189$indexZ2D = $647;
       } else {
        HEAP32[$630 >> 2] = 904;
        $639 = $ss1 + 44 | 0;
        HEAP32[$639 + 0 >> 2] = 0;
        HEAP32[$639 + 4 >> 2] = 0;
        HEAP32[$639 + 8 >> 2] = 0;
        HEAP32[$639 + 12 >> 2] = 0;
        HEAP32[$ss1 + 60 >> 2] = 24;
        HEAP32[$9 + 0 >> 2] = 0;
        HEAP32[$9 + 4 >> 2] = 0;
        HEAP32[$9 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(42, $630 | 0, $9 | 0);
        $641 = __THREW__;
        __THREW__ = 0;
        if ($641 & 1) {
         $643 = ___cxa_find_matching_catch() | 0;
         $644 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($639);
         __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($630);
         $eh$lpad$body$i189$index62Z2D = $644;
         $eh$lpad$body$i189$indexZ2D = $643;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
        __THREW__ = 0;
        $649 = invoke_iiii(25, $629 | 0, 35184, 19) | 0;
        $650 = __THREW__;
        __THREW__ = 0;
        L179 : do if ($650 & 1) label = 164; else {
         __THREW__ = 0;
         invoke_vii(52, $649 | 0, $next | 0);
         $652 = __THREW__;
         __THREW__ = 0;
         if ($652 & 1) label = 164; else {
          $654 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $30 | 0, $630 | 0);
          $655 = __THREW__;
          __THREW__ = 0;
          L182 : do if ($655 & 1) {
           $669 = ___cxa_find_matching_catch() | 0;
           $$514445 = tempRet0;
           $$5446 = $669;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $654 | 0, $395 | 0);
           $657 = __THREW__;
           __THREW__ = 0;
           do if ($657 & 1) $$044 = 1; else {
            $659 = $654 + 12 | 0;
            HEAP32[$659 + 0 >> 2] = HEAP32[$401 + 0 >> 2];
            HEAP32[$659 + 4 >> 2] = HEAP32[$401 + 4 >> 2];
            HEAP32[$659 + 8 >> 2] = HEAP32[$401 + 8 >> 2];
            HEAP32[$659 + 12 >> 2] = HEAP32[$401 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $654 + 28 | 0, $30 | 0);
            $661 = __THREW__;
            __THREW__ = 0;
            if ($661 & 1) {
             $663 = ___cxa_find_matching_catch() | 0;
             $664 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($654);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
             $$514445 = $664;
             $$5446 = $663;
             break L182;
            }
            __THREW__ = 0;
            invoke_viii(4, $654 | 0, 48, 176);
            $665 = __THREW__;
            __THREW__ = 0;
            if ($665 & 1) {
             $$044 = 0;
             break;
            }
           } while (0);
           $671 = ___cxa_find_matching_catch() | 0;
           $672 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
           if ($$044) {
            $$514445 = $672;
            $$5446 = $671;
           } else {
            $$6 = $671;
            $$615 = $672;
            break L179;
           }
          } while (0);
          ___cxa_free_exception($654 | 0);
          $$6 = $$5446;
          $$615 = $$514445;
         }
        } while (0);
        if ((label | 0) == 164) {
         $667 = ___cxa_find_matching_catch() | 0;
         $$6 = $667;
         $$615 = tempRet0;
        }
        HEAP32[$ss1 >> 2] = 572;
        HEAP32[$628 >> 2] = 612;
        HEAP32[$629 >> 2] = 592;
        HEAP32[$630 >> 2] = 904;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($639);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($630);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($628);
        $$7 = $$6;
        $$716 = $$615;
        break L169;
       } while (0);
       $$0$i192 = $eh$lpad$body$i189$index62Z2D;
       $$01$i191 = $eh$lpad$body$i189$indexZ2D;
      }
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($628);
      $$7 = $$01$i191;
      $$716 = $$0$i192;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($395);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($390);
     $$31 = $$7;
     $$3140 = $$716;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     ___resumeException($$31 | 0);
    }
   }
   break;
  }
 case 16:
  {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $73 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$16 >> 2] = HEAP32[$73 >> 2];
   $75 = $16 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $75 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $77 = __THREW__;
   __THREW__ = 0;
   if ($77 & 1) label = 19; else {
    HEAP32[$16 >> 2] = HEAP32[$73 >> 2];
    $80 = $16 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $80 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $82 = __THREW__;
    __THREW__ = 0;
    if ($82 & 1) {
     $84 = ___cxa_find_matching_catch() | 0;
     $85 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($75);
     $eh$lpad$body75$index16Z2D = $85;
     $eh$lpad$body75$indexZ2D = $84;
     break L4;
    }
    $86 = $16 + 28 | 0;
    $87 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$86 + 0 >> 2] = HEAP32[$87 + 0 >> 2];
    HEAP32[$86 + 4 >> 2] = HEAP32[$87 + 4 >> 2];
    HEAP32[$86 + 8 >> 2] = HEAP32[$87 + 8 >> 2];
    HEAP32[$86 + 12 >> 2] = HEAP32[$87 + 12 >> 2];
    HEAP32[$16 >> 2] = HEAP32[$73 >> 2];
    $89 = HEAP32[$this >> 2] | 0;
    $91 = HEAP32[$89 + 4 >> 2] | 0;
    $92 = $91 + 4 | 0;
    $94 = HEAP32[$91 >> 2] | 0;
    HEAP32[$94 + 4 >> 2] = HEAP32[$92 >> 2];
    HEAP32[HEAP32[$92 >> 2] >> 2] = $94;
    $97 = $89 + 8 | 0;
    HEAP32[$97 >> 2] = (HEAP32[$97 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($91 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($91 + 12 | 0);
    __ZdlPv($91);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($75);
    __THREW__ = 0;
    $102 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $103 = __THREW__;
    __THREW__ = 0;
    if ($103 & 1) label = 19; else {
     $106 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $17 | 0, $64 | 0);
     $107 = __THREW__;
     __THREW__ = 0;
     if ($107 & 1) label = 19; else {
      $110 = $17 + 12 | 0;
      $111 = $70;
      $116 = HEAP32[$111 + 4 >> 2] | 0;
      $117 = $110;
      HEAP32[$117 >> 2] = HEAP32[$111 >> 2];
      HEAP32[$117 + 4 >> 2] = $116;
      $122 = $102 + 24 | 0;
      $127 = HEAP32[$122 + 4 >> 2] | 0;
      $128 = $17 + 20 | 0;
      HEAP32[$128 >> 2] = HEAP32[$122 >> 2];
      HEAP32[$128 + 4 >> 2] = $127;
      __THREW__ = 0;
      $132 = invoke_ii(67, 52) | 0;
      $133 = __THREW__;
      __THREW__ = 0;
      do if ($133 & 1) label = 21; else {
       HEAP32[$132 >> 2] = 33968;
       __THREW__ = 0;
       invoke_vii(40, $132 + 4 | 0, $17 | 0);
       $136 = __THREW__;
       __THREW__ = 0;
       if ($136 & 1) {
        $155 = ___cxa_find_matching_catch() | 0;
        $156 = tempRet0;
        __ZdlPv($132);
        $eh$lpad$body83$index35Z2D = $156;
        $eh$lpad$body83$indexZ2D = $155;
        break;
       }
       $138 = $132 + 16 | 0;
       HEAP32[$138 + 0 >> 2] = HEAP32[$110 + 0 >> 2];
       HEAP32[$138 + 4 >> 2] = HEAP32[$110 + 4 >> 2];
       HEAP32[$138 + 8 >> 2] = HEAP32[$110 + 8 >> 2];
       HEAP32[$138 + 12 >> 2] = HEAP32[$110 + 12 >> 2];
       HEAP32[$132 + 32 >> 2] = 5;
       HEAP32[$132 + 36 >> 2] = 0;
       HEAP32[$132 + 40 >> 2] = 0;
       HEAP32[$132 + 44 >> 2] = 0;
       HEAP32[$132 >> 2] = 36320;
       HEAP32[$132 + 48 >> 2] = $102;
       HEAP32[$13 >> 2] = $132;
       $144 = $106 + 16 | 0;
       $145 = HEAP32[$144 >> 2] | 0;
       if ($145 >>> 0 < (HEAP32[$106 + 20 >> 2] | 0) >>> 0) {
        if (!$145) $151 = 0; else {
         HEAP32[$145 >> 2] = $132;
         $151 = HEAP32[$144 >> 2] | 0;
        }
        HEAP32[$144 >> 2] = $151 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $106 + 12 | 0, $13 | 0);
        $153 = __THREW__;
        __THREW__ = 0;
        if ($153 & 1) {
         label = 21;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
       $$0 = $132;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 21) {
       $161 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body83$index35Z2D = tempRet0;
       $eh$lpad$body83$indexZ2D = $161;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      $$31 = $eh$lpad$body83$indexZ2D;
      $$3140 = $eh$lpad$body83$index35Z2D;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
      ___resumeException($$31 | 0);
     }
    }
   }
   break;
  }
 case 13:
  {
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($$byval_copy, 1064, $61, HEAP32[267] | 0, 1068 | 0);
   $891 = HEAP32[$$byval_copy >> 2] | 0;
   do if (($891 | 0) != (1068 | 0)) {
    $893 = $891 + 16 | 0;
    $894 = HEAP8[$61 >> 0] | 0;
    $896 = ($894 & 1) == 0;
    if ($896) $916 = ($894 & 255) >>> 1; else $916 = HEAP32[$begin + 8 >> 2] | 0;
    $901 = HEAP8[$893 >> 0] | 0;
    $903 = ($901 & 1) == 0;
    if ($903) $914 = ($901 & 255) >>> 1; else $914 = HEAP32[$891 + 20 >> 2] | 0;
    if ($896) $918 = $61 + 1 | 0; else $918 = HEAP32[$begin + 12 >> 2] | 0;
    if ($903) $919 = $893 + 1 | 0; else $919 = HEAP32[$891 + 24 >> 2] | 0;
    $920 = _memcmp($918, $919, $914 >>> 0 < $916 >>> 0 ? $914 : $916) | 0;
    if (!$920) {
     if ($916 >>> 0 < $914 >>> 0) break;
    } else if (($920 | 0) < 0) break;
    $982 = HEAP32[$891 + 28 >> 2] | 0;
    if (!$precedence) {
     label = 297;
     break L4;
    } else if (($precedence | 0) != 4) {
     label = 298;
     break L4;
    }
    $this$idx$val$idx$val$i278 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $983 = $this$idx$val$idx$val$i278 + 8 | 0;
    HEAP32[$op >> 2] = HEAP32[$983 >> 2];
    $985 = $op + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $985 | 0, $this$idx$val$idx$val$i278 + 12 | 0);
    $987 = __THREW__;
    __THREW__ = 0;
    if ($987 & 1) {
     label = 19;
     break L4;
    }
    HEAP32[$op >> 2] = HEAP32[$983 >> 2];
    $990 = $op + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $990 | 0, $this$idx$val$idx$val$i278 + 24 | 0);
    $992 = __THREW__;
    __THREW__ = 0;
    if ($992 & 1) {
     $994 = ___cxa_find_matching_catch() | 0;
     $995 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($985);
     $eh$lpad$body75$index16Z2D = $995;
     $eh$lpad$body75$indexZ2D = $994;
     break L4;
    }
    $996 = $op + 28 | 0;
    $997 = $this$idx$val$idx$val$i278 + 36 | 0;
    HEAP32[$996 + 0 >> 2] = HEAP32[$997 + 0 >> 2];
    HEAP32[$996 + 4 >> 2] = HEAP32[$997 + 4 >> 2];
    HEAP32[$996 + 8 >> 2] = HEAP32[$997 + 8 >> 2];
    HEAP32[$996 + 12 >> 2] = HEAP32[$997 + 12 >> 2];
    HEAP32[$op >> 2] = HEAP32[$983 >> 2];
    $999 = HEAP32[$this >> 2] | 0;
    $1001 = HEAP32[$999 + 4 >> 2] | 0;
    $1002 = $1001 + 4 | 0;
    $1004 = HEAP32[$1001 >> 2] | 0;
    HEAP32[$1004 + 4 >> 2] = HEAP32[$1002 >> 2];
    HEAP32[HEAP32[$1002 >> 2] >> 2] = $1004;
    $1007 = $999 + 8 | 0;
    HEAP32[$1007 >> 2] = (HEAP32[$1007 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1001 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1001 + 12 | 0);
    __ZdlPv($1001);
    __THREW__ = 0;
    $1012 = invoke_iiii(28, $this | 0, 4, $obj_level | 0) | 0;
    $1013 = __THREW__;
    __THREW__ = 0;
    if ($1013 & 1) label = 292; else {
     $1016 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $36 | 0, $990 | 0);
     $1017 = __THREW__;
     __THREW__ = 0;
     if ($1017 & 1) label = 292; else {
      $1020 = $36 + 12 | 0;
      $1021 = $996;
      $1026 = HEAP32[$1021 + 4 >> 2] | 0;
      $1027 = $1020;
      HEAP32[$1027 >> 2] = HEAP32[$1021 >> 2];
      HEAP32[$1027 + 4 >> 2] = $1026;
      $1032 = $1012 + 24 | 0;
      $1037 = HEAP32[$1032 + 4 >> 2] | 0;
      $1038 = $36 + 20 | 0;
      HEAP32[$1038 >> 2] = HEAP32[$1032 >> 2];
      HEAP32[$1038 + 4 >> 2] = $1037;
      __THREW__ = 0;
      $1042 = invoke_ii(67, 56) | 0;
      $1043 = __THREW__;
      __THREW__ = 0;
      do if ($1043 & 1) label = 293; else {
       HEAP32[$1042 >> 2] = 33968;
       __THREW__ = 0;
       invoke_vii(40, $1042 + 4 | 0, $36 | 0);
       $1046 = __THREW__;
       __THREW__ = 0;
       if ($1046 & 1) {
        $1066 = ___cxa_find_matching_catch() | 0;
        $1067 = tempRet0;
        __ZdlPv($1042);
        $eh$lpad$body292$index89Z2D = $1067;
        $eh$lpad$body292$indexZ2D = $1066;
        break;
       }
       $1048 = $1042 + 16 | 0;
       HEAP32[$1048 + 0 >> 2] = HEAP32[$1020 + 0 >> 2];
       HEAP32[$1048 + 4 >> 2] = HEAP32[$1020 + 4 >> 2];
       HEAP32[$1048 + 8 >> 2] = HEAP32[$1020 + 8 >> 2];
       HEAP32[$1048 + 12 >> 2] = HEAP32[$1020 + 12 >> 2];
       HEAP32[$1042 + 32 >> 2] = 19;
       HEAP32[$1042 + 36 >> 2] = 0;
       HEAP32[$1042 + 40 >> 2] = 0;
       HEAP32[$1042 + 44 >> 2] = 0;
       HEAP32[$1042 >> 2] = 36136;
       HEAP32[$1042 + 48 >> 2] = $982;
       HEAP32[$1042 + 52 >> 2] = $1012;
       HEAP32[$5 >> 2] = $1042;
       $1055 = $1016 + 16 | 0;
       $1056 = HEAP32[$1055 >> 2] | 0;
       if ($1056 >>> 0 < (HEAP32[$1016 + 20 >> 2] | 0) >>> 0) {
        if (!$1056) $1062 = 0; else {
         HEAP32[$1056 >> 2] = $1042;
         $1062 = HEAP32[$1055 >> 2] | 0;
        }
        HEAP32[$1055 >> 2] = $1062 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $1016 + 12 | 0, $5 | 0);
        $1064 = __THREW__;
        __THREW__ = 0;
        if ($1064 & 1) {
         label = 293;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($990);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($985);
       $$0 = $1042;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 293) {
       $1070 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body292$index89Z2D = tempRet0;
       $eh$lpad$body292$indexZ2D = $1070;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
      $$15 = $eh$lpad$body292$indexZ2D;
      $$1524 = $eh$lpad$body292$index89Z2D;
     }
    }
    if ((label | 0) == 292) {
     $1068 = ___cxa_find_matching_catch() | 0;
     $$15 = $1068;
     $$1524 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($990);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($985);
    $$31 = $$15;
    $$3140 = $$1524;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
    ___resumeException($$31 | 0);
   } while (0);
   $924 = $ss4 + 64 | 0;
   $925 = $ss4 + 8 | 0;
   HEAP32[$925 >> 2] = 592;
   $926 = $ss4 + 12 | 0;
   HEAP32[$ss4 >> 2] = 740;
   HEAP32[$924 >> 2] = 760;
   HEAP32[$ss4 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss4 + 64 | 0, $926 | 0);
   $929 = __THREW__;
   __THREW__ = 0;
   if ($929 & 1) {
    $941 = ___cxa_find_matching_catch() | 0;
    $$0$i262 = tempRet0;
    $$01$i261 = $941;
   } else {
    HEAP32[$ss4 + 136 >> 2] = 0;
    HEAP32[$ss4 + 140 >> 2] = -1;
    HEAP32[$ss4 >> 2] = 572;
    HEAP32[$924 >> 2] = 612;
    HEAP32[$925 >> 2] = 592;
    __THREW__ = 0;
    invoke_vi(177, $926 | 0);
    $933 = __THREW__;
    __THREW__ = 0;
    do if ($933 & 1) {
     $943 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i259$index84Z2D = tempRet0;
     $eh$lpad$body$i259$indexZ2D = $943;
    } else {
     HEAP32[$926 >> 2] = 904;
     $935 = $ss4 + 44 | 0;
     HEAP32[$935 + 0 >> 2] = 0;
     HEAP32[$935 + 4 >> 2] = 0;
     HEAP32[$935 + 8 >> 2] = 0;
     HEAP32[$935 + 12 >> 2] = 0;
     HEAP32[$ss4 + 60 >> 2] = 24;
     HEAP32[$6 + 0 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $926 | 0, $6 | 0);
     $937 = __THREW__;
     __THREW__ = 0;
     if ($937 & 1) {
      $939 = ___cxa_find_matching_catch() | 0;
      $940 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($935);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($926);
      $eh$lpad$body$i259$index84Z2D = $940;
      $eh$lpad$body$i259$indexZ2D = $939;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     __THREW__ = 0;
     $945 = invoke_iiii(25, $925 | 0, 35240, 22) | 0;
     $946 = __THREW__;
     __THREW__ = 0;
     L403 : do if ($946 & 1) label = 272; else {
      $948 = HEAP8[$61 >> 0] | 0;
      if (!($948 & 1)) {
       $958 = $61 + 1 | 0;
       $959 = ($948 & 255) >>> 1;
      } else {
       $958 = HEAP32[$begin + 12 >> 2] | 0;
       $959 = HEAP32[$begin + 8 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $945 | 0, $958 | 0, $959 | 0) | 0;
      $960 = __THREW__;
      __THREW__ = 0;
      if ($960 & 1) label = 272; else {
       $962 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $35 | 0, $926 | 0);
       $963 = __THREW__;
       __THREW__ = 0;
       do if ($963 & 1) {
        $977 = ___cxa_find_matching_catch() | 0;
        $$1322453 = tempRet0;
        $$13454 = $977;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $962 | 0, $64 | 0);
        $965 = __THREW__;
        __THREW__ = 0;
        if ($965 & 1) $$051 = 1; else {
         $967 = $962 + 12 | 0;
         HEAP32[$967 + 0 >> 2] = HEAP32[$70 + 0 >> 2];
         HEAP32[$967 + 4 >> 2] = HEAP32[$70 + 4 >> 2];
         HEAP32[$967 + 8 >> 2] = HEAP32[$70 + 8 >> 2];
         HEAP32[$967 + 12 >> 2] = HEAP32[$70 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $962 + 28 | 0, $35 | 0);
         $969 = __THREW__;
         __THREW__ = 0;
         if ($969 & 1) {
          $971 = ___cxa_find_matching_catch() | 0;
          $972 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($962);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
          $$1322453 = $972;
          $$13454 = $971;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $962 | 0, 48, 176);
         $973 = __THREW__;
         __THREW__ = 0;
         if ($973 & 1) $$051 = 0; else {}
        }
        $979 = ___cxa_find_matching_catch() | 0;
        $980 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
        if ($$051) {
         $$1322453 = $980;
         $$13454 = $979;
        } else {
         $$14 = $979;
         $$1423 = $980;
         break L403;
        }
       } while (0);
       ___cxa_free_exception($962 | 0);
       $$14 = $$13454;
       $$1423 = $$1322453;
      }
     } while (0);
     if ((label | 0) == 272) {
      $975 = ___cxa_find_matching_catch() | 0;
      $$14 = $975;
      $$1423 = tempRet0;
     }
     HEAP32[$ss4 >> 2] = 572;
     HEAP32[$924 >> 2] = 612;
     HEAP32[$925 >> 2] = 592;
     HEAP32[$926 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($935);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($926);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($924);
     $$31 = $$14;
     $$3140 = $$1423;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     ___resumeException($$31 | 0);
    } while (0);
    $$0$i262 = $eh$lpad$body$i259$index84Z2D;
    $$01$i261 = $eh$lpad$body$i259$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($924);
   $eh$lpad$body75$index16Z2D = $$0$i262;
   $eh$lpad$body75$indexZ2D = $$01$i261;
   break;
  }
 default:
  if (!$precedence) label = 297; else label = 298;
 } while (0);
 L429 : do if ((label | 0) == 297) {
  __THREW__ = 0;
  $1073 = invoke_iii(28, $this | 0, $obj_level | 0) | 0;
  $1074 = __THREW__;
  __THREW__ = 0;
  if ($1074 & 1) label = 19; else {
   $$0 = $1073;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if ((label | 0) == 298) {
  $1076 = $precedence + -1 | 0;
  __THREW__ = 0;
  $1077 = invoke_iiii(28, $this | 0, $1076 | 0, $obj_level | 0) | 0;
  $1078 = __THREW__;
  __THREW__ = 0;
  if ($1078 & 1) label = 19; else {
   $1080 = $37 + 4 | 0;
   $1081 = $37 + 16 | 0;
   $1082 = $37 + 28 | 0;
   $1083 = $38 + 4 | 0;
   $1084 = $38 + 16 | 0;
   $1085 = $38 + 28 | 0;
   $1086 = ($precedence | 0) == 5;
   $1087 = $39 + 4 | 0;
   $1088 = $39 + 16 | 0;
   $1089 = $39 + 28 | 0;
   $1090 = $op7 + 4 | 0;
   $1091 = $op7 + 16 | 0;
   $1092 = $op7 + 28 | 0;
   $1093 = $this + 4 | 0;
   $1094 = $51 + 12 | 0;
   $1095 = $l + 12 | 0;
   $1096 = $53 + 12 | 0;
   $1097 = $54 + 12 | 0;
   $1098 = $55 + 12 | 0;
   $1099 = $55 + 20 | 0;
   $1100 = $56 + 4 | 0;
   $1101 = $56 + 8 | 0;
   $1102 = $57 + 12 | 0;
   $1103 = $57 + 20 | 0;
   $1104 = $58 + 12 | 0;
   $1105 = $end + 36 | 0;
   $1106 = $43 + 12 | 0;
   $1107 = $43 + 20 | 0;
   $1108 = $end + 16 | 0;
   $1109 = $end + 4 | 0;
   $1110 = $field + 16 | 0;
   $1111 = $field + 36 | 0;
   $1112 = $field + 28 | 0;
   $1113 = $44 + 12 | 0;
   $1114 = $44 + 20 | 0;
   $1115 = $field + 4 | 0;
   $1116 = $46 + 12 | 0;
   $1117 = $46 + 20 | 0;
   $1118 = $args + 4 | 0;
   $1119 = $args + 8 | 0;
   $1120 = $end9 + 36 | 0;
   $1121 = $48 + 12 | 0;
   $1122 = $48 + 20 | 0;
   $1123 = $49 + 4 | 0;
   $1124 = $49 + 8 | 0;
   $1125 = $end9 + 16 | 0;
   $1126 = $end9 + 4 | 0;
   $1127 = $end10 + 36 | 0;
   $1128 = $50 + 12 | 0;
   $1129 = $50 + 20 | 0;
   $1130 = $end10 + 16 | 0;
   $1131 = $end10 + 4 | 0;
   $1132 = ($precedence | 0) == 2;
   $1369 = $1077;
   L434 : while (1) {
    $this$idx56$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1133 = $this$idx56$val$idx$val + 8 | 0;
    HEAP32[$37 >> 2] = HEAP32[$1133 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1080 | 0, $this$idx56$val$idx$val + 12 | 0);
    $1136 = __THREW__;
    __THREW__ = 0;
    if ($1136 & 1) {
     label = 18;
     break;
    }
    HEAP32[$37 >> 2] = HEAP32[$1133 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1081 | 0, $this$idx56$val$idx$val + 24 | 0);
    $1140 = __THREW__;
    __THREW__ = 0;
    if ($1140 & 1) {
     label = 302;
     break;
    }
    $1144 = $this$idx56$val$idx$val + 36 | 0;
    HEAP32[$1082 + 0 >> 2] = HEAP32[$1144 + 0 >> 2];
    HEAP32[$1082 + 4 >> 2] = HEAP32[$1144 + 4 >> 2];
    HEAP32[$1082 + 8 >> 2] = HEAP32[$1144 + 8 >> 2];
    HEAP32[$1082 + 12 >> 2] = HEAP32[$1144 + 12 >> 2];
    $1145 = HEAP32[$1133 >> 2] | 0;
    HEAP32[$37 >> 2] = $1145;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1081);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1080);
    L438 : do switch ($1145 | 0) {
    case 0:
    case 8:
    case 2:
    case 7:
     {
      if ($1132) $1805 = 2; else {
       $$lcssa872 = $1369;
       label = 546;
       break L434;
      }
      break;
     }
    case 13:
     {
      $this$idx55$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1146 = $this$idx55$val$idx$val + 8 | 0;
      HEAP32[$38 >> 2] = HEAP32[$1146 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1083 | 0, $this$idx55$val$idx$val + 12 | 0);
      $1149 = __THREW__;
      __THREW__ = 0;
      if ($1149 & 1) {
       label = 18;
       break L434;
      }
      HEAP32[$38 >> 2] = HEAP32[$1146 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1084 | 0, $this$idx55$val$idx$val + 24 | 0);
      $1153 = __THREW__;
      __THREW__ = 0;
      if ($1153 & 1) {
       label = 306;
       break L434;
      }
      $1157 = $this$idx55$val$idx$val + 36 | 0;
      HEAP32[$1085 + 0 >> 2] = HEAP32[$1157 + 0 >> 2];
      HEAP32[$1085 + 4 >> 2] = HEAP32[$1157 + 4 >> 2];
      HEAP32[$1085 + 8 >> 2] = HEAP32[$1157 + 8 >> 2];
      HEAP32[$1085 + 12 >> 2] = HEAP32[$1157 + 12 >> 2];
      HEAP32[$38 >> 2] = HEAP32[$1146 >> 2];
      $1160 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($1083, 35264) | 0) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1084);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1083);
      if ($1160) if ($1086) {
       $1805 = 2;
       break L438;
      } else {
       $$lcssa872 = $1369;
       label = 546;
       break L434;
      }
      $this$idx54$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1161 = $this$idx54$val$idx$val + 8 | 0;
      HEAP32[$39 >> 2] = HEAP32[$1161 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1087 | 0, $this$idx54$val$idx$val + 12 | 0);
      $1164 = __THREW__;
      __THREW__ = 0;
      if ($1164 & 1) {
       label = 18;
       break L434;
      }
      HEAP32[$39 >> 2] = HEAP32[$1161 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1088 | 0, $this$idx54$val$idx$val + 24 | 0);
      $1168 = __THREW__;
      __THREW__ = 0;
      if ($1168 & 1) {
       label = 311;
       break L434;
      }
      $1172 = $this$idx54$val$idx$val + 36 | 0;
      HEAP32[$1089 + 0 >> 2] = HEAP32[$1172 + 0 >> 2];
      HEAP32[$1089 + 4 >> 2] = HEAP32[$1172 + 4 >> 2];
      HEAP32[$1089 + 8 >> 2] = HEAP32[$1172 + 8 >> 2];
      HEAP32[$1089 + 12 >> 2] = HEAP32[$1172 + 12 >> 2];
      HEAP32[$39 >> 2] = HEAP32[$1161 >> 2];
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($$byval_copy, 1080, $1087);
      $1174 = HEAP32[$$byval_copy >> 2] | 0;
      if (($1174 | 0) == (1084 | 0)) {
       $$0$i317 = 0;
       $1275 = 2;
      } else {
       $$0$i317 = 1;
       $1275 = HEAP32[$1174 + 28 >> 2] | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1088);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1087);
      if (!$$0$i317) {
       label = 315;
       break L434;
      }
      $1271 = HEAP32[263] | 0;
      do if (!$1271) {
       HEAP32[$__parent$i >> 2] = 1052;
       $$0$i7$i = 1052 | 0;
       $1291 = 1052 | 0;
       label = 361;
      } else {
       $__nd$0$i$i = $1271;
       while (1) {
        $1274 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
        if (($1275 | 0) < ($1274 | 0)) {
         $1277 = HEAP32[$__nd$0$i$i >> 2] | 0;
         if (!$1277) {
          $$lcssa869 = $__nd$0$i$i;
          $__nd$0$i$i$lcssa868 = $__nd$0$i$i;
          label = 354;
          break;
         } else $__nd$0$be$in$i$i = $1277;
        } else {
         if (($1274 | 0) >= ($1275 | 0)) {
          $__nd$0$i$i$lcssa = $__nd$0$i$i;
          label = 360;
          break;
         }
         $1280 = $__nd$0$i$i + 4 | 0;
         $1281 = HEAP32[$1280 >> 2] | 0;
         if (!$1281) {
          $$lcssa = $1280;
          $__nd$0$i$i$lcssa867 = $__nd$0$i$i;
          label = 358;
          break;
         } else $__nd$0$be$in$i$i = $1281;
        }
        $__nd$0$i$i = $__nd$0$be$in$i$i;
       }
       if ((label | 0) == 354) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa868;
        $$0$i7$i = $$lcssa869;
        $1291 = $__nd$0$i$i$lcssa868;
        label = 361;
        break;
       } else if ((label | 0) == 358) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa867;
        $$0$i7$i = $$lcssa;
        $1291 = $__nd$0$i$i$lcssa867;
        label = 361;
        break;
       } else if ((label | 0) == 360) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
        if (!$__nd$0$i$i$lcssa) {
         $$0$i7$i = $__parent$i;
         $1291 = 0;
         label = 361;
         break;
        } else {
         $__r$0$i = $__nd$0$i$i$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 361) {
       label = 0;
       __THREW__ = 0;
       $1284 = invoke_ii(67, 24) | 0;
       $1285 = __THREW__;
       __THREW__ = 0;
       if ($1285 & 1) {
        label = 18;
        break L434;
       }
       HEAP32[$1284 + 16 >> 2] = $1275;
       HEAP32[$1284 + 20 >> 2] = 0;
       HEAP32[$1284 >> 2] = 0;
       HEAP32[$1284 + 4 >> 2] = 0;
       HEAP32[$1284 + 8 >> 2] = $1291;
       HEAP32[$$0$i7$i >> 2] = $1284;
       $1293 = HEAP32[HEAP32[262] >> 2] | 0;
       if (!$1293) $1296 = $1284; else {
        HEAP32[262] = $1293;
        $1296 = HEAP32[$$0$i7$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $1296);
       HEAP32[264] = (HEAP32[264] | 0) + 1;
       $__r$0$i = $1284;
      }
      if ((HEAP32[$__r$0$i + 20 >> 2] | 0) == ($precedence | 0)) $1805 = $1275; else {
       $$lcssa872 = $1369;
       label = 546;
       break L434;
      }
      break;
     }
    default:
     {
      $$lcssa872 = $1369;
      label = 546;
      break L434;
     }
    } while (0);
    $this$idx$val$idx$val$i350 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1302 = $this$idx$val$idx$val$i350 + 8 | 0;
    HEAP32[$op7 >> 2] = HEAP32[$1302 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1090 | 0, $this$idx$val$idx$val$i350 + 12 | 0);
    $1305 = __THREW__;
    __THREW__ = 0;
    if ($1305 & 1) {
     label = 18;
     break;
    }
    HEAP32[$op7 >> 2] = HEAP32[$1302 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1091 | 0, $this$idx$val$idx$val$i350 + 24 | 0);
    $1309 = __THREW__;
    __THREW__ = 0;
    if ($1309 & 1) {
     label = 369;
     break;
    }
    $1313 = $this$idx$val$idx$val$i350 + 36 | 0;
    HEAP32[$1092 + 0 >> 2] = HEAP32[$1313 + 0 >> 2];
    HEAP32[$1092 + 4 >> 2] = HEAP32[$1313 + 4 >> 2];
    HEAP32[$1092 + 8 >> 2] = HEAP32[$1313 + 8 >> 2];
    HEAP32[$1092 + 12 >> 2] = HEAP32[$1313 + 12 >> 2];
    HEAP32[$op7 >> 2] = HEAP32[$1302 >> 2];
    $1315 = HEAP32[$this >> 2] | 0;
    $1317 = HEAP32[$1315 + 4 >> 2] | 0;
    $1318 = $1317 + 4 | 0;
    $1320 = HEAP32[$1317 >> 2] | 0;
    HEAP32[$1320 + 4 >> 2] = HEAP32[$1318 >> 2];
    HEAP32[HEAP32[$1318 >> 2] >> 2] = $1320;
    $1323 = $1315 + 8 | 0;
    HEAP32[$1323 >> 2] = (HEAP32[$1323 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1317 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1317 + 12 | 0);
    __ZdlPv($1317);
    $1328 = HEAP32[$op7 >> 2] | 0;
    do if (($1328 | 0) == 2) {
     __THREW__ = 0;
     $1329 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $1330 = __THREW__;
     __THREW__ = 0;
     if ($1330 & 1) {
      label = 383;
      break L434;
     }
     __THREW__ = 0;
     invoke_viiii(12, $end | 0, $this | 0, 3, 0);
     $1332 = __THREW__;
     __THREW__ = 0;
     if ($1332 & 1) {
      label = 383;
      break L434;
     }
     $1334 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $43 | 0, $64 | 0);
     $1335 = __THREW__;
     __THREW__ = 0;
     if ($1335 & 1) {
      label = 384;
      break L434;
     }
     $1337 = $70;
     $1342 = HEAP32[$1337 + 4 >> 2] | 0;
     $1343 = $1106;
     HEAP32[$1343 >> 2] = HEAP32[$1337 >> 2];
     HEAP32[$1343 + 4 >> 2] = $1342;
     $1347 = $1105;
     $1352 = HEAP32[$1347 + 4 >> 2] | 0;
     $1353 = $1107;
     HEAP32[$1353 >> 2] = HEAP32[$1347 >> 2];
     HEAP32[$1353 + 4 >> 2] = $1352;
     __THREW__ = 0;
     $1357 = invoke_ii(67, 56) | 0;
     $1358 = __THREW__;
     __THREW__ = 0;
     if ($1358 & 1) {
      label = 385;
      break L434;
     }
     HEAP32[$1357 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1357 + 4 | 0, $43 | 0);
     $1361 = __THREW__;
     __THREW__ = 0;
     if ($1361 & 1) {
      $$lcssa911 = $1357;
      label = 381;
      break L434;
     }
     $1363 = $1357 + 16 | 0;
     HEAP32[$1363 + 0 >> 2] = HEAP32[$1106 + 0 >> 2];
     HEAP32[$1363 + 4 >> 2] = HEAP32[$1106 + 4 >> 2];
     HEAP32[$1363 + 8 >> 2] = HEAP32[$1106 + 8 >> 2];
     HEAP32[$1363 + 12 >> 2] = HEAP32[$1106 + 12 >> 2];
     HEAP32[$1357 + 32 >> 2] = 9;
     HEAP32[$1357 + 36 >> 2] = 0;
     HEAP32[$1357 + 40 >> 2] = 0;
     HEAP32[$1357 + 44 >> 2] = 0;
     HEAP32[$1357 >> 2] = 35736;
     HEAP32[$1357 + 48 >> 2] = $1369;
     HEAP32[$1357 + 52 >> 2] = $1329;
     HEAP32[$2 >> 2] = $1357;
     $1371 = $1334 + 16 | 0;
     $1372 = HEAP32[$1371 >> 2] | 0;
     if ($1372 >>> 0 < (HEAP32[$1334 + 20 >> 2] | 0) >>> 0) {
      if (!$1372) $1378 = 0; else {
       HEAP32[$1372 >> 2] = $1357;
       $1378 = HEAP32[$1371 >> 2] | 0;
      }
      HEAP32[$1371 >> 2] = $1378 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1334 + 12 | 0, $2 | 0);
      $1380 = __THREW__;
      __THREW__ = 0;
      if ($1380 & 1) {
       label = 385;
       break L434;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1108);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1109);
     $lhs$1 = $1357;
    } else if (($1328 | 0) == 7) {
     __THREW__ = 0;
     invoke_viiii(12, $field | 0, $this | 0, 11, 0);
     $1390 = __THREW__;
     __THREW__ = 0;
     if ($1390 & 1) {
      label = 383;
      break L434;
     }
     $1392 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $44 | 0, $1110 | 0);
     $1393 = __THREW__;
     __THREW__ = 0;
     if ($1393 & 1) {
      label = 402;
      break L434;
     }
     $1395 = $1112;
     $1400 = HEAP32[$1395 + 4 >> 2] | 0;
     $1401 = $1113;
     HEAP32[$1401 >> 2] = HEAP32[$1395 >> 2];
     HEAP32[$1401 + 4 >> 2] = $1400;
     $1405 = $1111;
     $1410 = HEAP32[$1405 + 4 >> 2] | 0;
     $1411 = $1114;
     HEAP32[$1411 >> 2] = HEAP32[$1405 >> 2];
     HEAP32[$1411 + 4 >> 2] = $1410;
     __THREW__ = 0;
     invoke_vii(40, $45 | 0, $1115 | 0);
     $1415 = __THREW__;
     __THREW__ = 0;
     if ($1415 & 1) {
      label = 403;
      break L434;
     }
     __THREW__ = 0;
     $1417 = invoke_iiii(27, $1392 | 0, $44 | 0, $45 | 0) | 0;
     $1418 = __THREW__;
     __THREW__ = 0;
     if ($1418 & 1) {
      label = 404;
      break L434;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     $1420 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $46 | 0, $64 | 0);
     $1421 = __THREW__;
     __THREW__ = 0;
     if ($1421 & 1) {
      label = 402;
      break L434;
     }
     $1423 = $70;
     $1428 = HEAP32[$1423 + 4 >> 2] | 0;
     $1429 = $1116;
     HEAP32[$1429 >> 2] = HEAP32[$1423 >> 2];
     HEAP32[$1429 + 4 >> 2] = $1428;
     $1433 = $1111;
     $1438 = HEAP32[$1433 + 4 >> 2] | 0;
     $1439 = $1117;
     HEAP32[$1439 >> 2] = HEAP32[$1433 >> 2];
     HEAP32[$1439 + 4 >> 2] = $1438;
     __THREW__ = 0;
     $1443 = invoke_ii(67, 56) | 0;
     $1444 = __THREW__;
     __THREW__ = 0;
     if ($1444 & 1) {
      label = 406;
      break L434;
     }
     HEAP32[$1443 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1443 + 4 | 0, $46 | 0);
     $1447 = __THREW__;
     __THREW__ = 0;
     if ($1447 & 1) {
      $$lcssa910 = $1443;
      label = 400;
      break L434;
     }
     $1449 = $1443 + 16 | 0;
     HEAP32[$1449 + 0 >> 2] = HEAP32[$1116 + 0 >> 2];
     HEAP32[$1449 + 4 >> 2] = HEAP32[$1116 + 4 >> 2];
     HEAP32[$1449 + 8 >> 2] = HEAP32[$1116 + 8 >> 2];
     HEAP32[$1449 + 12 >> 2] = HEAP32[$1116 + 12 >> 2];
     HEAP32[$1443 + 32 >> 2] = 9;
     HEAP32[$1443 + 36 >> 2] = 0;
     HEAP32[$1443 + 40 >> 2] = 0;
     HEAP32[$1443 + 44 >> 2] = 0;
     HEAP32[$1443 >> 2] = 35736;
     HEAP32[$1443 + 48 >> 2] = $1369;
     HEAP32[$1443 + 52 >> 2] = $1417;
     HEAP32[$1 >> 2] = $1443;
     $1456 = $1420 + 16 | 0;
     $1457 = HEAP32[$1456 >> 2] | 0;
     if ($1457 >>> 0 < (HEAP32[$1420 + 20 >> 2] | 0) >>> 0) {
      if (!$1457) $1463 = 0; else {
       HEAP32[$1457 >> 2] = $1443;
       $1463 = HEAP32[$1456 >> 2] | 0;
      }
      HEAP32[$1456 >> 2] = $1463 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1420 + 12 | 0, $1 | 0);
      $1465 = __THREW__;
      __THREW__ = 0;
      if ($1465 & 1) {
       label = 406;
       break L434;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1110);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1115);
     $lhs$1 = $1443;
    } else if (($1328 | 0) == 8) {
     HEAP32[$args >> 2] = 0;
     HEAP32[$1118 >> 2] = 0;
     HEAP32[$1119 >> 2] = 0;
     __THREW__ = 0;
     invoke_viii(3, $47 | 0, 35296, 17);
     $1477 = __THREW__;
     __THREW__ = 0;
     if ($1477 & 1) {
      label = 433;
      break L434;
     }
     __THREW__ = 0;
     invoke_viiiii(4, $end9 | 0, $this | 0, $args | 0, $47 | 0, $obj_level | 0);
     $1479 = __THREW__;
     __THREW__ = 0;
     if ($1479 & 1) {
      label = 434;
      break L434;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
     $1481 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $48 | 0, $64 | 0);
     $1482 = __THREW__;
     __THREW__ = 0;
     if ($1482 & 1) {
      label = 435;
      break L434;
     }
     $1484 = $70;
     $1489 = HEAP32[$1484 + 4 >> 2] | 0;
     $1490 = $1121;
     HEAP32[$1490 >> 2] = HEAP32[$1484 >> 2];
     HEAP32[$1490 + 4 >> 2] = $1489;
     $1494 = $1120;
     $1499 = HEAP32[$1494 + 4 >> 2] | 0;
     $1500 = $1122;
     HEAP32[$1500 >> 2] = HEAP32[$1494 >> 2];
     HEAP32[$1500 + 4 >> 2] = $1499;
     HEAP32[$49 >> 2] = 0;
     HEAP32[$1123 >> 2] = 0;
     HEAP32[$1124 >> 2] = 0;
     $1508 = (HEAP32[$1118 >> 2] | 0) - (HEAP32[$args >> 2] | 0) | 0;
     $1509 = $1508 >> 2;
     if ($1509) {
      if ($1509 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(179, $49 | 0);
       $1512 = __THREW__;
       __THREW__ = 0;
       if ($1512 & 1) {
        label = 419;
        break L434;
       }
      }
      __THREW__ = 0;
      $1514 = invoke_ii(67, $1508 | 0) | 0;
      $1515 = __THREW__;
      __THREW__ = 0;
      if ($1515 & 1) {
       label = 419;
       break L434;
      }
      HEAP32[$1123 >> 2] = $1514;
      HEAP32[$49 >> 2] = $1514;
      HEAP32[$1124 >> 2] = $1514 + ($1509 << 2);
      $1518 = HEAP32[$args >> 2] | 0;
      $1519 = HEAP32[$1118 >> 2] | 0;
      if (($1518 | 0) != ($1519 | 0)) {
       $$01$i$i387 = $1518;
       $1522 = $1514;
       do {
        HEAP32[$1522 >> 2] = HEAP32[$$01$i$i387 >> 2];
        $1522 = (HEAP32[$1123 >> 2] | 0) + 4 | 0;
        HEAP32[$1123 >> 2] = $1522;
        $$01$i$i387 = $$01$i$i387 + 4 | 0;
       } while (($$01$i$i387 | 0) != ($1519 | 0));
      }
     }
     __THREW__ = 0;
     $1537 = invoke_iiiii(7, $1481 | 0, $48 | 0, $1369 | 0, $49 | 0) | 0;
     $1538 = __THREW__;
     __THREW__ = 0;
     if ($1538 & 1) {
      label = 437;
      break L434;
     }
     $1540 = HEAP32[$49 >> 2] | 0;
     $1542 = $1540;
     if ($1540) {
      $1543 = HEAP32[$1123 >> 2] | 0;
      if (($1543 | 0) != ($1540 | 0)) HEAP32[$1123 >> 2] = $1543 + (~(($1543 + -4 - $1542 | 0) >>> 2) << 2);
      __ZdlPv($1540);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1125);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1126);
     $1549 = HEAP32[$args >> 2] | 0;
     $1551 = $1549;
     if (!$1549) $lhs$1 = $1537; else {
      $1552 = HEAP32[$1118 >> 2] | 0;
      if (($1552 | 0) != ($1549 | 0)) HEAP32[$1118 >> 2] = $1552 + (~(($1552 + -4 - $1551 | 0) >>> 2) << 2);
      __ZdlPv($1549);
      $lhs$1 = $1537;
     }
    } else if (!$1328) {
     __THREW__ = 0;
     invoke_viiiii(5, $end10 | 0, $this | 0, $obj | 0, $op7 | 0, $obj_level | 0);
     $1584 = __THREW__;
     __THREW__ = 0;
     if ($1584 & 1) {
      label = 383;
      break L434;
     }
     $1586 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $50 | 0, $64 | 0);
     $1587 = __THREW__;
     __THREW__ = 0;
     if ($1587 & 1) {
      label = 458;
      break L434;
     }
     $1589 = $70;
     $1594 = HEAP32[$1589 + 4 >> 2] | 0;
     $1595 = $1128;
     HEAP32[$1595 >> 2] = HEAP32[$1589 >> 2];
     HEAP32[$1595 + 4 >> 2] = $1594;
     $1599 = $1127;
     $1604 = HEAP32[$1599 + 4 >> 2] | 0;
     $1605 = $1129;
     HEAP32[$1605 >> 2] = HEAP32[$1599 >> 2];
     HEAP32[$1605 + 4 >> 2] = $1604;
     $1609 = HEAP32[$obj >> 2] | 0;
     __THREW__ = 0;
     $1610 = invoke_ii(67, 60) | 0;
     $1611 = __THREW__;
     __THREW__ = 0;
     if ($1611 & 1) {
      label = 459;
      break L434;
     }
     HEAP32[$1610 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1610 + 4 | 0, $50 | 0);
     $1614 = __THREW__;
     __THREW__ = 0;
     if ($1614 & 1) {
      $$lcssa909 = $1610;
      label = 456;
      break L434;
     }
     $1616 = $1610 + 16 | 0;
     HEAP32[$1616 + 0 >> 2] = HEAP32[$1128 + 0 >> 2];
     HEAP32[$1616 + 4 >> 2] = HEAP32[$1128 + 4 >> 2];
     HEAP32[$1616 + 8 >> 2] = HEAP32[$1128 + 8 >> 2];
     HEAP32[$1616 + 12 >> 2] = HEAP32[$1128 + 12 >> 2];
     HEAP32[$1610 + 32 >> 2] = 2;
     HEAP32[$1610 + 36 >> 2] = 0;
     HEAP32[$1610 + 40 >> 2] = 0;
     HEAP32[$1610 + 44 >> 2] = 0;
     HEAP32[$1610 >> 2] = 35352;
     HEAP32[$1610 + 48 >> 2] = $1369;
     HEAP32[$1610 + 52 >> 2] = 2;
     HEAP32[$1610 + 56 >> 2] = $1609;
     HEAP32[$0 >> 2] = $1610;
     $1624 = $1586 + 16 | 0;
     $1625 = HEAP32[$1624 >> 2] | 0;
     if ($1625 >>> 0 < (HEAP32[$1586 + 20 >> 2] | 0) >>> 0) {
      if (!$1625) $1631 = 0; else {
       HEAP32[$1625 >> 2] = $1610;
       $1631 = HEAP32[$1624 >> 2] | 0;
      }
      HEAP32[$1624 >> 2] = $1631 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1586 + 12 | 0, $0 | 0);
      $1633 = __THREW__;
      __THREW__ = 0;
      if ($1633 & 1) {
       label = 459;
       break L434;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1130);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1131);
     $lhs$1 = $1610;
    } else {
     if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($1090, 35264) | 0) {
      __THREW__ = 0;
      $1802 = invoke_iiii(28, $this | 0, $1076 | 0, $obj_level | 0) | 0;
      $1803 = __THREW__;
      __THREW__ = 0;
      if ($1803 & 1) {
       label = 383;
       break L434;
      }
      $1806 = ($1805 | 0) == 11;
      $1807 = HEAP32[$1093 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $57 | 0, $64 | 0);
      $1808 = __THREW__;
      __THREW__ = 0;
      if ($1808 & 1) {
       label = 383;
       break L434;
      }
      $1811 = $70;
      $1816 = HEAP32[$1811 + 4 >> 2] | 0;
      $1817 = $1102;
      HEAP32[$1817 >> 2] = HEAP32[$1811 >> 2];
      HEAP32[$1817 + 4 >> 2] = $1816;
      $1821 = $1802 + 24 | 0;
      $1826 = HEAP32[$1821 + 4 >> 2] | 0;
      $1827 = $1103;
      HEAP32[$1827 >> 2] = HEAP32[$1821 >> 2];
      HEAP32[$1827 + 4 >> 2] = $1826;
      __THREW__ = 0;
      $1831 = invoke_ii(67, 60) | 0;
      $1832 = __THREW__;
      __THREW__ = 0;
      if ($1832 & 1) {
       label = 540;
       break L434;
      }
      HEAP32[$1831 >> 2] = 33968;
      $1834 = $1831 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $1834 | 0, $57 | 0);
      $1835 = __THREW__;
      __THREW__ = 0;
      if ($1835 & 1) {
       $$lcssa912 = $1831;
       label = 528;
       break L434;
      }
      $1837 = $1831 + 16 | 0;
      HEAP32[$1837 + 0 >> 2] = HEAP32[$1102 + 0 >> 2];
      HEAP32[$1837 + 4 >> 2] = HEAP32[$1102 + 4 >> 2];
      HEAP32[$1837 + 8 >> 2] = HEAP32[$1102 + 8 >> 2];
      HEAP32[$1837 + 12 >> 2] = HEAP32[$1102 + 12 >> 2];
      HEAP32[$1831 + 32 >> 2] = 2;
      HEAP32[$1831 + 36 >> 2] = 0;
      HEAP32[$1831 + 40 >> 2] = 0;
      HEAP32[$1831 + 44 >> 2] = 0;
      HEAP32[$1831 >> 2] = 35352;
      HEAP32[$1831 + 48 >> 2] = $1369;
      HEAP32[$1831 + 52 >> 2] = $1806 ? 10 : $1805;
      HEAP32[$1831 + 56 >> 2] = $1802;
      HEAP32[$14 >> 2] = $1831;
      $1845 = $1807 + 16 | 0;
      $1846 = HEAP32[$1845 >> 2] | 0;
      if ($1846 >>> 0 < (HEAP32[$1807 + 20 >> 2] | 0) >>> 0) {
       if (!$1846) $1852 = 0; else {
        HEAP32[$1846 >> 2] = $1831;
        $1852 = HEAP32[$1845 >> 2] | 0;
       }
       HEAP32[$1845 >> 2] = $1852 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1807 + 12 | 0, $14 | 0);
       $1854 = __THREW__;
       __THREW__ = 0;
       if ($1854 & 1) {
        label = 540;
        break L434;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
      if (!$1806) {
       $lhs$1 = $1831;
       break;
      }
      $1858 = HEAP32[$1093 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $58 | 0, $1834 | 0);
      $1859 = __THREW__;
      __THREW__ = 0;
      if ($1859 & 1) {
       label = 383;
       break L434;
      };
      HEAP32[$1104 + 0 >> 2] = HEAP32[$1837 + 0 >> 2];
      HEAP32[$1104 + 4 >> 2] = HEAP32[$1837 + 4 >> 2];
      HEAP32[$1104 + 8 >> 2] = HEAP32[$1837 + 8 >> 2];
      HEAP32[$1104 + 12 >> 2] = HEAP32[$1837 + 12 >> 2];
      __THREW__ = 0;
      $1861 = invoke_ii(67, 56) | 0;
      $1862 = __THREW__;
      __THREW__ = 0;
      if ($1862 & 1) {
       label = 542;
       break L434;
      }
      HEAP32[$1861 >> 2] = 33968;
      __THREW__ = 0;
      invoke_vii(40, $1861 + 4 | 0, $58 | 0);
      $1865 = __THREW__;
      __THREW__ = 0;
      if ($1865 & 1) {
       $$lcssa915 = $1861;
       label = 538;
       break L434;
      }
      $1867 = $1861 + 16 | 0;
      HEAP32[$1867 + 0 >> 2] = HEAP32[$1104 + 0 >> 2];
      HEAP32[$1867 + 4 >> 2] = HEAP32[$1104 + 4 >> 2];
      HEAP32[$1867 + 8 >> 2] = HEAP32[$1104 + 8 >> 2];
      HEAP32[$1867 + 12 >> 2] = HEAP32[$1104 + 12 >> 2];
      HEAP32[$1861 + 32 >> 2] = 19;
      HEAP32[$1861 + 36 >> 2] = 0;
      HEAP32[$1861 + 40 >> 2] = 0;
      HEAP32[$1861 + 44 >> 2] = 0;
      HEAP32[$1861 >> 2] = 36136;
      HEAP32[$1861 + 48 >> 2] = 0;
      HEAP32[$1861 + 52 >> 2] = $1831;
      HEAP32[$15 >> 2] = $1861;
      $1874 = $1858 + 16 | 0;
      $1875 = HEAP32[$1874 >> 2] | 0;
      if ($1875 >>> 0 < (HEAP32[$1858 + 20 >> 2] | 0) >>> 0) {
       if (!$1875) $1881 = 0; else {
        HEAP32[$1875 >> 2] = $1861;
        $1881 = HEAP32[$1874 >> 2] | 0;
       }
       HEAP32[$1874 >> 2] = $1881 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1858 + 12 | 0, $15 | 0);
       $1883 = __THREW__;
       __THREW__ = 0;
       if ($1883 & 1) {
        label = 542;
        break L434;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
      $lhs$1 = $1861;
      break;
     }
     __THREW__ = 0;
     $1643 = invoke_iiii(28, $this | 0, $1076 | 0, $obj_level | 0) | 0;
     $1644 = __THREW__;
     __THREW__ = 0;
     if ($1644 & 1) {
      label = 383;
      break L434;
     };
     HEAP32[$l + 0 >> 2] = 0;
     HEAP32[$l + 4 >> 2] = 0;
     HEAP32[$l + 8 >> 2] = 0;
     HEAP32[$l + 12 >> 2] = 0;
     HEAP32[$l + 16 >> 2] = 0;
     HEAP32[$l + 20 >> 2] = 0;
     HEAP32[$l + 24 >> 2] = 0;
     $1646 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $51 | 0, $l | 0);
     $1647 = __THREW__;
     __THREW__ = 0;
     if ($1647 & 1) {
      label = 501;
      break L434;
     };
     HEAP32[$1094 + 0 >> 2] = HEAP32[$1095 + 0 >> 2];
     HEAP32[$1094 + 4 >> 2] = HEAP32[$1095 + 4 >> 2];
     HEAP32[$1094 + 8 >> 2] = HEAP32[$1095 + 8 >> 2];
     HEAP32[$1094 + 12 >> 2] = HEAP32[$1095 + 12 >> 2];
     $1649 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_viii(3, $52 | 0, 33712, 3);
     $1650 = __THREW__;
     __THREW__ = 0;
     if ($1650 & 1) {
      label = 503;
      break L434;
     }
     __THREW__ = 0;
     $1652 = invoke_iii(23, $1649 | 0, $52 | 0) | 0;
     $1653 = __THREW__;
     __THREW__ = 0;
     if ($1653 & 1) {
      label = 504;
      break L434;
     }
     __THREW__ = 0;
     $1655 = invoke_ii(67, 56) | 0;
     $1656 = __THREW__;
     __THREW__ = 0;
     if ($1656 & 1) {
      label = 504;
      break L434;
     }
     HEAP32[$1655 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1655 + 4 | 0, $51 | 0);
     $1659 = __THREW__;
     __THREW__ = 0;
     if ($1659 & 1) {
      $$lcssa916 = $1655;
      label = 474;
      break L434;
     }
     $1661 = $1655 + 16 | 0;
     HEAP32[$1661 + 0 >> 2] = HEAP32[$1094 + 0 >> 2];
     HEAP32[$1661 + 4 >> 2] = HEAP32[$1094 + 4 >> 2];
     HEAP32[$1661 + 8 >> 2] = HEAP32[$1094 + 8 >> 2];
     HEAP32[$1661 + 12 >> 2] = HEAP32[$1094 + 12 >> 2];
     HEAP32[$1655 + 32 >> 2] = 20;
     HEAP32[$1655 + 36 >> 2] = 0;
     HEAP32[$1655 + 40 >> 2] = 0;
     HEAP32[$1655 + 44 >> 2] = 0;
     HEAP32[$1655 >> 2] = 35336;
     HEAP32[$1655 + 48 >> 2] = $1652;
     HEAP32[$1655 + 52 >> 2] = $1652;
     HEAP32[$$byval_copy >> 2] = $1655;
     $1668 = $1646 + 16 | 0;
     $1669 = HEAP32[$1668 >> 2] | 0;
     if ($1669 >>> 0 < (HEAP32[$1646 + 20 >> 2] | 0) >>> 0) {
      if (!$1669) $1675 = 0; else {
       HEAP32[$1669 >> 2] = $1655;
       $1675 = HEAP32[$1668 >> 2] | 0;
      }
      HEAP32[$1668 >> 2] = $1675 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1646 + 12 | 0, $$byval_copy | 0);
      $1677 = __THREW__;
      __THREW__ = 0;
      if ($1677 & 1) {
       label = 504;
       break L434;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
     $1681 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $53 | 0, $l | 0);
     $1682 = __THREW__;
     __THREW__ = 0;
     if ($1682 & 1) {
      label = 501;
      break L434;
     };
     HEAP32[$1096 + 0 >> 2] = HEAP32[$1095 + 0 >> 2];
     HEAP32[$1096 + 4 >> 2] = HEAP32[$1095 + 4 >> 2];
     HEAP32[$1096 + 8 >> 2] = HEAP32[$1095 + 8 >> 2];
     HEAP32[$1096 + 12 >> 2] = HEAP32[$1095 + 12 >> 2];
     __THREW__ = 0;
     $1684 = invoke_iiii(30, $1681 | 0, $53 | 0, 35320) | 0;
     $1685 = __THREW__;
     __THREW__ = 0;
     if ($1685 & 1) {
      label = 507;
      break L434;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
     $1687 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $54 | 0, $l | 0);
     $1688 = __THREW__;
     __THREW__ = 0;
     if ($1688 & 1) {
      label = 501;
      break L434;
     };
     HEAP32[$1097 + 0 >> 2] = HEAP32[$1095 + 0 >> 2];
     HEAP32[$1097 + 4 >> 2] = HEAP32[$1095 + 4 >> 2];
     HEAP32[$1097 + 8 >> 2] = HEAP32[$1095 + 8 >> 2];
     HEAP32[$1097 + 12 >> 2] = HEAP32[$1095 + 12 >> 2];
     __THREW__ = 0;
     $1690 = invoke_ii(67, 56) | 0;
     $1691 = __THREW__;
     __THREW__ = 0;
     if ($1691 & 1) {
      label = 508;
      break L434;
     }
     HEAP32[$1690 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1690 + 4 | 0, $54 | 0);
     $1694 = __THREW__;
     __THREW__ = 0;
     if ($1694 & 1) {
      $$lcssa924 = $1690;
      label = 485;
      break L434;
     }
     $1696 = $1690 + 16 | 0;
     HEAP32[$1696 + 0 >> 2] = HEAP32[$1097 + 0 >> 2];
     HEAP32[$1696 + 4 >> 2] = HEAP32[$1097 + 4 >> 2];
     HEAP32[$1696 + 8 >> 2] = HEAP32[$1097 + 8 >> 2];
     HEAP32[$1696 + 12 >> 2] = HEAP32[$1097 + 12 >> 2];
     HEAP32[$1690 + 32 >> 2] = 9;
     HEAP32[$1690 + 36 >> 2] = 0;
     HEAP32[$1690 + 40 >> 2] = 0;
     HEAP32[$1690 + 44 >> 2] = 0;
     HEAP32[$1690 >> 2] = 35736;
     HEAP32[$1690 + 48 >> 2] = $1655;
     HEAP32[$1690 + 52 >> 2] = $1684;
     HEAP32[$3 >> 2] = $1690;
     $1703 = $1687 + 16 | 0;
     $1704 = HEAP32[$1703 >> 2] | 0;
     if ($1704 >>> 0 < (HEAP32[$1687 + 20 >> 2] | 0) >>> 0) {
      if (!$1704) $1710 = 0; else {
       HEAP32[$1704 >> 2] = $1690;
       $1710 = HEAP32[$1703 >> 2] | 0;
      }
      HEAP32[$1703 >> 2] = $1710 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1687 + 12 | 0, $3 | 0);
      $1712 = __THREW__;
      __THREW__ = 0;
      if ($1712 & 1) {
       label = 508;
       break L434;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
     __THREW__ = 0;
     $1716 = invoke_ii(67, 8) | 0;
     $1717 = __THREW__;
     __THREW__ = 0;
     if ($1717 & 1) {
      label = 488;
      break L434;
     }
     HEAP32[$1716 >> 2] = $1369;
     HEAP32[$1716 + 4 >> 2] = $1643;
     $1720 = HEAP32[$1093 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $55 | 0, $64 | 0);
     $1721 = __THREW__;
     __THREW__ = 0;
     if ($1721 & 1) {
      $$lcssa929 = $1716;
      label = 510;
      break L434;
     }
     $1726 = $70;
     $1731 = HEAP32[$1726 + 4 >> 2] | 0;
     $1732 = $1098;
     HEAP32[$1732 >> 2] = HEAP32[$1726 >> 2];
     HEAP32[$1732 + 4 >> 2] = $1731;
     $1736 = $1643 + 24 | 0;
     $1741 = HEAP32[$1736 + 4 >> 2] | 0;
     $1742 = $1099;
     HEAP32[$1742 >> 2] = HEAP32[$1736 >> 2];
     HEAP32[$1742 + 4 >> 2] = $1741;
     HEAP32[$56 >> 2] = 0;
     HEAP32[$1100 >> 2] = 0;
     HEAP32[$1101 >> 2] = 0;
     __THREW__ = 0;
     $1746 = invoke_ii(67, 8) | 0;
     $1747 = __THREW__;
     __THREW__ = 0;
     if ($1747 & 1) {
      $$lcssa930 = $1716;
      label = 492;
      break L434;
     }
     HEAP32[$1100 >> 2] = $1746;
     HEAP32[$56 >> 2] = $1746;
     HEAP32[$1101 >> 2] = $1746 + 8;
     HEAP32[$1746 >> 2] = HEAP32[$1716 >> 2];
     $1751 = (HEAP32[$1100 >> 2] | 0) + 4 | 0;
     HEAP32[$1100 >> 2] = $1751;
     HEAP32[$1751 >> 2] = HEAP32[$1716 + 4 >> 2];
     HEAP32[$1100 >> 2] = (HEAP32[$1100 >> 2] | 0) + 4;
     __THREW__ = 0;
     $1755 = invoke_iiiii(7, $1720 | 0, $55 | 0, $1690 | 0, $56 | 0) | 0;
     $1756 = __THREW__;
     __THREW__ = 0;
     if ($1756 & 1) {
      $$lcssa931 = $1716;
      label = 512;
      break L434;
     }
     $1769 = HEAP32[$56 >> 2] | 0;
     $1771 = $1769;
     if ($1769) {
      $1772 = HEAP32[$1100 >> 2] | 0;
      if (($1772 | 0) != ($1769 | 0)) HEAP32[$1100 >> 2] = $1772 + (~(($1772 + -4 - $1771 | 0) >>> 2) << 2);
      __ZdlPv($1769);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     __ZdlPv($1716);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
     $lhs$1 = $1755;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1091);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1090);
    $1369 = $lhs$1;
   }
   switch (label | 0) {
   case 18:
    {
     $157 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body75$index16Z2D = tempRet0;
     $eh$lpad$body75$indexZ2D = $157;
     break L429;
     break;
    }
   case 302:
    {
     $1142 = ___cxa_find_matching_catch() | 0;
     $1143 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1080);
     $eh$lpad$body75$index16Z2D = $1143;
     $eh$lpad$body75$indexZ2D = $1142;
     break L429;
     break;
    }
   case 306:
    {
     $1155 = ___cxa_find_matching_catch() | 0;
     $1156 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1083);
     $eh$lpad$body75$index16Z2D = $1156;
     $eh$lpad$body75$indexZ2D = $1155;
     break L429;
     break;
    }
   case 311:
    {
     $1170 = ___cxa_find_matching_catch() | 0;
     $1171 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1087);
     $eh$lpad$body75$index16Z2D = $1171;
     $eh$lpad$body75$indexZ2D = $1170;
     break L429;
     break;
    }
   case 315:
    {
     $1178 = $ss6 + 64 | 0;
     $1179 = $ss6 + 8 | 0;
     HEAP32[$1179 >> 2] = 592;
     $1180 = $ss6 + 12 | 0;
     HEAP32[$ss6 >> 2] = 740;
     HEAP32[$1178 >> 2] = 760;
     HEAP32[$ss6 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss6 + 64 | 0, $1180 | 0);
     $1183 = __THREW__;
     __THREW__ = 0;
     if ($1183 & 1) {
      $1195 = ___cxa_find_matching_catch() | 0;
      $$0$i322 = tempRet0;
      $$01$i321 = $1195;
     } else {
      HEAP32[$ss6 + 136 >> 2] = 0;
      HEAP32[$ss6 + 140 >> 2] = -1;
      HEAP32[$ss6 >> 2] = 572;
      HEAP32[$1178 >> 2] = 612;
      HEAP32[$1179 >> 2] = 592;
      __THREW__ = 0;
      invoke_vi(177, $1180 | 0);
      $1187 = __THREW__;
      __THREW__ = 0;
      do if ($1187 & 1) {
       $1197 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i319$index94Z2D = tempRet0;
       $eh$lpad$body$i319$indexZ2D = $1197;
      } else {
       HEAP32[$1180 >> 2] = 904;
       $1189 = $ss6 + 44 | 0;
       HEAP32[$1189 + 0 >> 2] = 0;
       HEAP32[$1189 + 4 >> 2] = 0;
       HEAP32[$1189 + 8 >> 2] = 0;
       HEAP32[$1189 + 12 >> 2] = 0;
       HEAP32[$ss6 + 60 >> 2] = 24;
       HEAP32[$4 + 0 >> 2] = 0;
       HEAP32[$4 + 4 >> 2] = 0;
       HEAP32[$4 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $1180 | 0, $4 | 0);
       $1191 = __THREW__;
       __THREW__ = 0;
       if ($1191 & 1) {
        $1193 = ___cxa_find_matching_catch() | 0;
        $1194 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1189);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1180);
        $eh$lpad$body$i319$index94Z2D = $1194;
        $eh$lpad$body$i319$indexZ2D = $1193;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
       __THREW__ = 0;
       $1199 = invoke_iiii(25, $1179 | 0, 35272, 23) | 0;
       $1200 = __THREW__;
       __THREW__ = 0;
       L624 : do if ($1200 & 1) label = 339; else {
        $this$idx53$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1202 = $this$idx53$val$idx$val + 8 | 0;
        HEAP32[$40 >> 2] = HEAP32[$1202 >> 2];
        $1204 = $40 + 4 | 0;
        __THREW__ = 0;
        invoke_vii(40, $1204 | 0, $this$idx53$val$idx$val + 12 | 0);
        $1206 = __THREW__;
        __THREW__ = 0;
        if ($1206 & 1) label = 339; else {
         HEAP32[$40 >> 2] = HEAP32[$1202 >> 2];
         $1209 = $40 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1209 | 0, $this$idx53$val$idx$val + 24 | 0);
         $1211 = __THREW__;
         __THREW__ = 0;
         if ($1211 & 1) {
          $1213 = ___cxa_find_matching_catch() | 0;
          $1214 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1204);
          $eh$lpad$body330$index99Z2D = $1214;
          $eh$lpad$body330$indexZ2D = $1213;
          label = 340;
          break;
         }
         $1215 = $40 + 28 | 0;
         $1216 = $this$idx53$val$idx$val + 36 | 0;
         HEAP32[$1215 + 0 >> 2] = HEAP32[$1216 + 0 >> 2];
         HEAP32[$1215 + 4 >> 2] = HEAP32[$1216 + 4 >> 2];
         HEAP32[$1215 + 8 >> 2] = HEAP32[$1216 + 8 >> 2];
         HEAP32[$1215 + 12 >> 2] = HEAP32[$1216 + 12 >> 2];
         HEAP32[$40 >> 2] = HEAP32[$1202 >> 2];
         $1218 = HEAP8[$1204 >> 0] | 0;
         if (!($1218 & 1)) {
          $1228 = $1204 + 1 | 0;
          $1229 = ($1218 & 255) >>> 1;
         } else {
          $1228 = HEAP32[$40 + 12 >> 2] | 0;
          $1229 = HEAP32[$40 + 8 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $1199 | 0, $1228 | 0, $1229 | 0) | 0;
         $1230 = __THREW__;
         __THREW__ = 0;
         if ($1230 & 1) {
          $1263 = ___cxa_find_matching_catch() | 0;
          $1264 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1209);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1204);
          $$18 = $1263;
          $$1827 = $1264;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1209);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1204);
         $1232 = ___cxa_allocate_exception(40) | 0;
         $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $1233 = $this$idx$val$idx$val + 8 | 0;
         HEAP32[$41 >> 2] = HEAP32[$1233 >> 2];
         $1235 = $41 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1235 | 0, $this$idx$val$idx$val + 12 | 0);
         $1237 = __THREW__;
         __THREW__ = 0;
         do if ($1237 & 1) {
          $1265 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body337$index104Z2D = tempRet0;
          $eh$lpad$body337$indexZ2D = $1265;
          label = 343;
         } else {
          HEAP32[$41 >> 2] = HEAP32[$1233 >> 2];
          $1240 = $41 + 16 | 0;
          __THREW__ = 0;
          invoke_vii(40, $1240 | 0, $this$idx$val$idx$val + 24 | 0);
          $1242 = __THREW__;
          __THREW__ = 0;
          if ($1242 & 1) {
           $1244 = ___cxa_find_matching_catch() | 0;
           $1245 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1235);
           $eh$lpad$body337$index104Z2D = $1245;
           $eh$lpad$body337$indexZ2D = $1244;
           label = 343;
           break;
          }
          $1246 = $41 + 28 | 0;
          $1247 = $this$idx$val$idx$val + 36 | 0;
          HEAP32[$1246 + 0 >> 2] = HEAP32[$1247 + 0 >> 2];
          HEAP32[$1246 + 4 >> 2] = HEAP32[$1247 + 4 >> 2];
          HEAP32[$1246 + 8 >> 2] = HEAP32[$1247 + 8 >> 2];
          HEAP32[$1246 + 12 >> 2] = HEAP32[$1247 + 12 >> 2];
          HEAP32[$41 >> 2] = HEAP32[$1233 >> 2];
          __THREW__ = 0;
          invoke_vii(43, $42 | 0, $1180 | 0);
          $1249 = __THREW__;
          __THREW__ = 0;
          if ($1249 & 1) {
           $1267 = ___cxa_find_matching_catch() | 0;
           $$147 = 1;
           $$16 = $1267;
           $$1625 = tempRet0;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $1232 | 0, $1240 | 0);
           $1251 = __THREW__;
           __THREW__ = 0;
           do if ($1251 & 1) {
            $$046 = 1;
            label = 345;
           } else {
            $1253 = $1232 + 12 | 0;
            HEAP32[$1253 + 0 >> 2] = HEAP32[$1246 + 0 >> 2];
            HEAP32[$1253 + 4 >> 2] = HEAP32[$1246 + 4 >> 2];
            HEAP32[$1253 + 8 >> 2] = HEAP32[$1246 + 8 >> 2];
            HEAP32[$1253 + 12 >> 2] = HEAP32[$1246 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $1232 + 28 | 0, $42 | 0);
            $1255 = __THREW__;
            __THREW__ = 0;
            if ($1255 & 1) {
             $1257 = ___cxa_find_matching_catch() | 0;
             $1258 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1232);
             $$046$lpad$bodyZZ2D = 1;
             $eh$lpad$body343$index109Z2D = $1258;
             $eh$lpad$body343$indexZ2D = $1257;
             break;
            }
            __THREW__ = 0;
            invoke_viii(4, $1232 | 0, 48, 176);
            $1259 = __THREW__;
            __THREW__ = 0;
            if ($1259 & 1) {
             $$046 = 0;
             label = 345;
             break;
            }
           } while (0);
           if ((label | 0) == 345) {
            $1269 = ___cxa_find_matching_catch() | 0;
            $$046$lpad$bodyZZ2D = $$046;
            $eh$lpad$body343$index109Z2D = tempRet0;
            $eh$lpad$body343$indexZ2D = $1269;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
           $$147 = $$046$lpad$bodyZZ2D;
           $$16 = $eh$lpad$body343$indexZ2D;
           $$1625 = $eh$lpad$body343$index109Z2D;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1240);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1235);
          if ($$147) {
           $$1726457 = $$1625;
           $$17458 = $$16;
          } else {
           $$18 = $$16;
           $$1827 = $$1625;
           break L624;
          }
         } while (0);
         if ((label | 0) == 343) {
          $$1726457 = $eh$lpad$body337$index104Z2D;
          $$17458 = $eh$lpad$body337$indexZ2D;
         }
         ___cxa_free_exception($1232 | 0);
         $$18 = $$17458;
         $$1827 = $$1726457;
        }
       } while (0);
       if ((label | 0) == 339) {
        $1261 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body330$index99Z2D = tempRet0;
        $eh$lpad$body330$indexZ2D = $1261;
        label = 340;
       }
       if ((label | 0) == 340) {
        $$18 = $eh$lpad$body330$indexZ2D;
        $$1827 = $eh$lpad$body330$index99Z2D;
       }
       HEAP32[$ss6 >> 2] = 572;
       HEAP32[$1178 >> 2] = 612;
       HEAP32[$1179 >> 2] = 592;
       HEAP32[$1180 >> 2] = 904;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1189);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1180);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1178);
       $$31 = $$18;
       $$3140 = $$1827;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
       ___resumeException($$31 | 0);
      } while (0);
      $$0$i322 = $eh$lpad$body$i319$index94Z2D;
      $$01$i321 = $eh$lpad$body$i319$indexZ2D;
     }
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1178);
     $eh$lpad$body75$index16Z2D = $$0$i322;
     $eh$lpad$body75$indexZ2D = $$01$i321;
     break L429;
     break;
    }
   case 369:
    {
     $1311 = ___cxa_find_matching_catch() | 0;
     $1312 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1090);
     $eh$lpad$body75$index16Z2D = $1312;
     $eh$lpad$body75$indexZ2D = $1311;
     break L429;
     break;
    }
   case 381:
    {
     $1382 = ___cxa_find_matching_catch() | 0;
     $1383 = tempRet0;
     __ZdlPv($$lcssa911);
     $eh$lpad$body367$index114Z2D = $1383;
     $eh$lpad$body367$indexZ2D = $1382;
     label = 386;
     break;
    }
   case 383:
    {
     $$30 = ___cxa_find_matching_catch() | 0;
     $$3039 = tempRet0;
     break;
    }
   case 384:
    {
     $$19 = ___cxa_find_matching_catch() | 0;
     $$1928 = tempRet0;
     label = 387;
     break;
    }
   case 385:
    {
     $1388 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body367$index114Z2D = tempRet0;
     $eh$lpad$body367$indexZ2D = $1388;
     label = 386;
     break;
    }
   case 400:
    {
     $1467 = ___cxa_find_matching_catch() | 0;
     $1468 = tempRet0;
     __ZdlPv($$lcssa910);
     $eh$lpad$body377$index119Z2D = $1468;
     $eh$lpad$body377$indexZ2D = $1467;
     label = 407;
     break;
    }
   case 402:
    {
     $$21 = ___cxa_find_matching_catch() | 0;
     $$2130 = tempRet0;
     label = 408;
     break;
    }
   case 403:
    {
     $$20 = ___cxa_find_matching_catch() | 0;
     $$2029 = tempRet0;
     label = 405;
     break;
    }
   case 404:
    {
     $1473 = ___cxa_find_matching_catch() | 0;
     $1474 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
     $$20 = $1473;
     $$2029 = $1474;
     label = 405;
     break;
    }
   case 406:
    {
     $1475 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body377$index119Z2D = tempRet0;
     $eh$lpad$body377$indexZ2D = $1475;
     label = 407;
     break;
    }
   case 419:
    {
     $1526 = ___cxa_find_matching_catch() | 0;
     $1527 = tempRet0;
     $1528 = HEAP32[$49 >> 2] | 0;
     $1530 = $1528;
     if ($1528) {
      $1531 = HEAP32[$1123 >> 2] | 0;
      if (($1531 | 0) != ($1528 | 0)) HEAP32[$1123 >> 2] = $1531 + (~(($1531 + -4 - $1530 | 0) >>> 2) << 2);
      __ZdlPv($1528);
     }
     $$22 = $1526;
     $$2231 = $1527;
     label = 441;
     break;
    }
   case 433:
    {
     $$24 = ___cxa_find_matching_catch() | 0;
     $$2433 = tempRet0;
     label = 443;
     break;
    }
   case 434:
    {
     $1560 = ___cxa_find_matching_catch() | 0;
     $1561 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
     $$24 = $1560;
     $$2433 = $1561;
     label = 443;
     break;
    }
   case 435:
    {
     $$23 = ___cxa_find_matching_catch() | 0;
     $$2332 = tempRet0;
     label = 442;
     break;
    }
   case 437:
    {
     $1564 = ___cxa_find_matching_catch() | 0;
     $1565 = tempRet0;
     $1566 = HEAP32[$49 >> 2] | 0;
     $1568 = $1566;
     if (!$1566) {
      $$22 = $1564;
      $$2231 = $1565;
      label = 441;
     } else {
      $1569 = HEAP32[$1123 >> 2] | 0;
      if (($1569 | 0) != ($1566 | 0)) HEAP32[$1123 >> 2] = $1569 + (~(($1569 + -4 - $1568 | 0) >>> 2) << 2);
      __ZdlPv($1566);
      $$22 = $1564;
      $$2231 = $1565;
      label = 441;
     }
     break;
    }
   case 456:
    {
     $1635 = ___cxa_find_matching_catch() | 0;
     $1636 = tempRet0;
     __ZdlPv($$lcssa909);
     $eh$lpad$body425$index124Z2D = $1636;
     $eh$lpad$body425$indexZ2D = $1635;
     label = 460;
     break;
    }
   case 458:
    {
     $$25 = ___cxa_find_matching_catch() | 0;
     $$2534 = tempRet0;
     label = 461;
     break;
    }
   case 459:
    {
     $1639 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body425$index124Z2D = tempRet0;
     $eh$lpad$body425$indexZ2D = $1639;
     label = 460;
     break;
    }
   case 474:
    {
     $1679 = ___cxa_find_matching_catch() | 0;
     $1680 = tempRet0;
     __ZdlPv($$lcssa916);
     $eh$lpad$body436$index134Z2D = $1680;
     $eh$lpad$body436$indexZ2D = $1679;
     label = 505;
     break;
    }
   case 485:
    {
     $1714 = ___cxa_find_matching_catch() | 0;
     $1715 = tempRet0;
     __ZdlPv($$lcssa924);
     $eh$lpad$body360$index139Z2D = $1715;
     $eh$lpad$body360$indexZ2D = $1714;
     label = 509;
     break;
    }
   case 488:
    {
     $1723 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body304$index129Z2D = tempRet0;
     $eh$lpad$body304$indexZ2D = $1723;
     label = 502;
     break;
    }
   case 492:
    {
     $1758 = ___cxa_find_matching_catch() | 0;
     $1759 = tempRet0;
     $1760 = HEAP32[$56 >> 2] | 0;
     $1762 = $1760;
     if ($1760) {
      $1763 = HEAP32[$1100 >> 2] | 0;
      if (($1763 | 0) != ($1760 | 0)) HEAP32[$1100 >> 2] = $1763 + (~(($1763 + -4 - $1762 | 0) >>> 2) << 2);
      __ZdlPv($1760);
     }
     $$27 = $1758;
     $$2736 = $1759;
     $1891 = $$lcssa930;
     label = 516;
     break;
    }
   case 501:
    {
     $1778 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body304$index129Z2D = tempRet0;
     $eh$lpad$body304$indexZ2D = $1778;
     label = 502;
     break;
    }
   case 503:
    {
     $$26 = ___cxa_find_matching_catch() | 0;
     $$2635 = tempRet0;
     label = 506;
     break;
    }
   case 504:
    {
     $1782 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body436$index134Z2D = tempRet0;
     $eh$lpad$body436$indexZ2D = $1782;
     label = 505;
     break;
    }
   case 507:
    {
     $1784 = ___cxa_find_matching_catch() | 0;
     $1785 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
     $$29 = $1784;
     $$2938 = $1785;
     label = 518;
     break;
    }
   case 508:
    {
     $1786 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body360$index139Z2D = tempRet0;
     $eh$lpad$body360$indexZ2D = $1786;
     label = 509;
     break;
    }
   case 510:
    {
     $$28 = ___cxa_find_matching_catch() | 0;
     $$2837 = tempRet0;
     $1801 = $$lcssa929;
     label = 517;
     break;
    }
   case 512:
    {
     $1790 = ___cxa_find_matching_catch() | 0;
     $1791 = tempRet0;
     $1792 = HEAP32[$56 >> 2] | 0;
     $1794 = $1792;
     if (!$1792) {
      $$27 = $1790;
      $$2736 = $1791;
      $1891 = $$lcssa931;
      label = 516;
     } else {
      $1795 = HEAP32[$1100 >> 2] | 0;
      if (($1795 | 0) != ($1792 | 0)) HEAP32[$1100 >> 2] = $1795 + (~(($1795 + -4 - $1794 | 0) >>> 2) << 2);
      __ZdlPv($1792);
      $$27 = $1790;
      $$2736 = $1791;
      $1891 = $$lcssa931;
      label = 516;
     }
     break;
    }
   case 528:
    {
     $1856 = ___cxa_find_matching_catch() | 0;
     $1857 = tempRet0;
     __ZdlPv($$lcssa912);
     $eh$lpad$body66$index144Z2D = $1857;
     $eh$lpad$body66$indexZ2D = $1856;
     label = 541;
     break;
    }
   case 538:
    {
     $1885 = ___cxa_find_matching_catch() | 0;
     $1886 = tempRet0;
     __ZdlPv($$lcssa915);
     $eh$lpad$body$index149Z2D = $1886;
     $eh$lpad$body$indexZ2D = $1885;
     label = 543;
     break;
    }
   case 540:
    {
     $1887 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body66$index144Z2D = tempRet0;
     $eh$lpad$body66$indexZ2D = $1887;
     label = 541;
     break;
    }
   case 542:
    {
     $1889 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index149Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $1889;
     label = 543;
     break;
    }
   case 546:
    {
     $$0 = $$lcssa872;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     STACKTOP = sp;
     return $$0 | 0;
    }
   }
   switch (label | 0) {
   case 386:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     $$19 = $eh$lpad$body367$indexZ2D;
     $$1928 = $eh$lpad$body367$index114Z2D;
     label = 387;
     break;
    }
   case 405:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     $$21 = $$20;
     $$2130 = $$2029;
     label = 408;
     break;
    }
   case 407:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
     $$21 = $eh$lpad$body377$indexZ2D;
     $$2130 = $eh$lpad$body377$index119Z2D;
     label = 408;
     break;
    }
   case 441:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
     $$23 = $$22;
     $$2332 = $$2231;
     label = 442;
     break;
    }
   case 460:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     $$25 = $eh$lpad$body425$indexZ2D;
     $$2534 = $eh$lpad$body425$index124Z2D;
     label = 461;
     break;
    }
   case 502:
    {
     $$29 = $eh$lpad$body304$indexZ2D;
     $$2938 = $eh$lpad$body304$index129Z2D;
     label = 518;
     break;
    }
   case 505:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$26 = $eh$lpad$body436$indexZ2D;
     $$2635 = $eh$lpad$body436$index134Z2D;
     label = 506;
     break;
    }
   case 509:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
     $$29 = $eh$lpad$body360$indexZ2D;
     $$2938 = $eh$lpad$body360$index139Z2D;
     label = 518;
     break;
    }
   case 516:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     $$28 = $$27;
     $$2837 = $$2736;
     $1801 = $1891;
     label = 517;
     break;
    }
   case 541:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
     $$30 = $eh$lpad$body66$indexZ2D;
     $$3039 = $eh$lpad$body66$index144Z2D;
     break;
    }
   case 543:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     $$30 = $eh$lpad$body$indexZ2D;
     $$3039 = $eh$lpad$body$index149Z2D;
     break;
    }
   }
   if ((label | 0) == 387) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1108);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1109);
    $$30 = $$19;
    $$3039 = $$1928;
   } else if ((label | 0) == 408) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1110);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1115);
    $$30 = $$21;
    $$3039 = $$2130;
   } else if ((label | 0) == 442) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1125);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1126);
    $$24 = $$23;
    $$2433 = $$2332;
    label = 443;
   } else if ((label | 0) == 461) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1130);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1131);
    $$30 = $$25;
    $$3039 = $$2534;
   } else if ((label | 0) == 506) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
    $$29 = $$26;
    $$2938 = $$2635;
    label = 518;
   } else if ((label | 0) == 517) {
    __ZdlPv($1801);
    $$29 = $$28;
    $$2938 = $$2837;
    label = 518;
   }
   if ((label | 0) == 443) {
    $1575 = HEAP32[$args >> 2] | 0;
    $1577 = $1575;
    if (!$1575) {
     $$30 = $$24;
     $$3039 = $$2433;
    } else {
     $1578 = HEAP32[$1118 >> 2] | 0;
     if (($1578 | 0) != ($1575 | 0)) HEAP32[$1118 >> 2] = $1578 + (~(($1578 + -4 - $1577 | 0) >>> 2) << 2);
     __ZdlPv($1575);
     $$30 = $$24;
     $$3039 = $$2433;
    }
   } else if ((label | 0) == 518) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
    $$30 = $$29;
    $$3039 = $$2938;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1091);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1090);
   $$31 = $$30;
   $$3140 = $$3039;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
   ___resumeException($$31 | 0);
  }
 } while (0);
 if ((label | 0) == 19) {
  $159 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body75$index16Z2D = tempRet0;
  $eh$lpad$body75$indexZ2D = $159;
 }
 $$31 = $eh$lpad$body75$indexZ2D;
 $$3140 = $eh$lpad$body75$index16Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
 ___resumeException($$31 | 0);
 return 0;
}
function __ZN12_GLOBAL__N_16Parser13parseTerminalEj($this, $obj_level) {
 $this = $this | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i312 = 0, $$01$i = 0, $$01$i$i328 = 0, $$01$i311 = 0, $$014481 = 0, $$03 = 0, $$043 = 0, $$045 = 0, $$05 = 0, $$07482 = 0, $$1024488 = 0, $$10489 = 0, $$11 = 0, $$1125 = 0, $$115484 = 0, $$12 = 0, $$1210 = 0, $$1226 = 0, $$13 = 0, $$1327 = 0, $$1411 = 0, $$1428 = 0, $$15 = 0, $$1529 = 0, $$1612493 = 0, $$1630492 = 0, $$17 = 0, $$1731 = 0, $$1813 = 0, $$1832 = 0, $$18485 = 0, $$19 = 0, $$1933 = 0, $$2 = 0, $$20 = 0, $$2034 = 0, $$21 = 0, $$2135 = 0, $$216 = 0, $$22 = 0, $$2236 = 0, $$23 = 0, $$2337 = 0, $$24 = 0, $$2438 = 0, $$25 = 0, $$2539 = 0, $$2640496 = 0, $$26497 = 0, $$27 = 0, $$2741 = 0, $$28 = 0, $$2842 = 0, $$29 = 0, $$3 = 0, $$317 = 0, $$4 = 0, $$418 = 0, $$5 = 0, $$519 = 0, $$6 = 0, $$620 = 0, $$7 = 0, $$721 = 0, $$8 = 0, $$822 = 0, $$9 = 0, $$923 = 0, $$pn = 0, $$pre$phi517Z2D = 0, $$pre$phi519Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1003 = 0, $1004 = 0, $1009 = 0, $1010 = 0, $1013 = 0, $1015 = 0, $1016 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1023 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1031 = 0, $1032 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1041 = 0, $1043 = 0, $1044 = 0, $105 = 0, $1050 = 0, $1053 = 0, $1059 = 0, $1060 = 0, $1061 = 0, $1064 = 0, $107 = 0, $1070 = 0, $1073 = 0, $1079 = 0, $1080 = 0, $1082 = 0, $1087 = 0, $1088 = 0, $109 = 0, $1091 = 0, $1092 = 0, $1097 = 0, $1098 = 0, $11 = 0, $1103 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1119 = 0, $1120 = 0.0, $1121 = 0, $1122 = 0, $1125 = 0, $1127 = 0, $113 = 0, $1133 = 0, $1134 = 0, $114 = 0, $1140 = 0, $1142 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1154 = 0, $1159 = 0, $1160 = 0, $1165 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1175 = 0, $1177 = 0, $1178 = 0, $1180 = 0, $1182 = 0, $1183 = 0, $1185 = 0, $1186 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1195 = 0, $1196 = 0, $12 = 0, $120 = 0, $1201 = 0, $1206 = 0, $1207 = 0, $121 = 0, $1211 = 0, $1212 = 0, $1215 = 0, $1217 = 0, $1223 = 0, $1224 = 0, $1230 = 0, $1232 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1239 = 0, $1240 = 0, $1243 = 0, $1244 = 0, $1249 = 0, $1250 = 0, $1255 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1265 = 0, $1266 = 0, $1269 = 0, $1271 = 0, $1277 = 0, $1278 = 0, $128 = 0, $1284 = 0, $1286 = 0, $1288 = 0, $1289 = 0, $1290 = 0, $1293 = 0, $1294 = 0, $1297 = 0, $1298 = 0, $13 = 0, $130 = 0, $1303 = 0, $1304 = 0, $1309 = 0, $1314 = 0, $1315 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1323 = 0, $1325 = 0, $1330 = 0, $1331 = 0, $1337 = 0, $1339 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1345 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1352 = 0, $1353 = 0, $1358 = 0, $1359 = 0, $1364 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1374 = 0, $1375 = 0, $1377 = 0, $1378 = 0, $1380 = 0, $1381 = 0, $1383 = 0, $1385 = 0, $1386 = 0, $1389 = 0, $139 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1395 = 0, $1396 = 0, $14 = 0, $140 = 0, $1402 = 0, $1403 = 0, $1409 = 0, $141 = 0, $1411 = 0, $1413 = 0, $1416 = 0, $1418 = 0, $142 = 0, $1420 = 0, $1423 = 0, $1426 = 0, $1427 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1436 = 0, $1437 = 0, $1442 = 0, $1447 = 0, $1448 = 0, $145 = 0, $1452 = 0, $1453 = 0, $1455 = 0, $1456 = 0, $1458 = 0, $1459 = 0, $1461 = 0, $1463 = 0, $1464 = 0, $1467 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1473 = 0, $1474 = 0, $1480 = 0, $1481 = 0, $1487 = 0, $1489 = 0, $149 = 0, $1491 = 0, $1494 = 0, $1496 = 0, $1498 = 0, $15 = 0, $1502 = 0, $1503 = 0, $1505 = 0, $1507 = 0, $1509 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1515 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1524 = 0, $1525 = 0, $1530 = 0, $1531 = 0, $1536 = 0, $154 = 0, $1541 = 0, $1542 = 0, $1546 = 0, $1547 = 0, $1549 = 0, $1550 = 0, $1552 = 0, $1553 = 0, $1556 = 0, $1558 = 0, $156 = 0, $1565 = 0, $1566 = 0, $157 = 0, $1572 = 0, $1574 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $158 = 0, $1580 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1587 = 0, $1588 = 0, $159 = 0, $1593 = 0, $1594 = 0, $1599 = 0, $16 = 0, $1604 = 0, $1605 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1613 = 0, $1614 = 0, $1617 = 0, $1619 = 0, $1626 = 0, $1627 = 0, $163 = 0, $1633 = 0, $1635 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1642 = 0, $1643 = 0, $1646 = 0, $1647 = 0, $1652 = 0, $1653 = 0, $1658 = 0, $166 = 0, $1663 = 0, $1664 = 0, $1668 = 0, $1669 = 0, $1672 = 0, $1674 = 0, $1679 = 0, $1680 = 0, $1686 = 0, $1688 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1695 = 0, $1696 = 0, $1699 = 0, $17 = 0, $1700 = 0, $1705 = 0, $1706 = 0, $1711 = 0, $1716 = 0, $1717 = 0, $1721 = 0, $1722 = 0, $1725 = 0, $1727 = 0, $1732 = 0, $1733 = 0, $1739 = 0, $1741 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1747 = 0, $1748 = 0, $175 = 0, $1751 = 0, $1752 = 0, $1754 = 0, $1755 = 0, $176 = 0, $1761 = 0, $1763 = 0, $1764 = 0, $1769 = 0, $1770 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1776 = 0, $1778 = 0, $18 = 0, $180 = 0, $185 = 0, $186 = 0, $19 = 0, $191 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $22 = 0, $220 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $236 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $249 = 0, $25 = 0, $251 = 0, $255 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $264 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $271 = 0, $273 = 0, $274 = 0, $276 = 0, $279 = 0, $28 = 0, $284 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $292 = 0, $293 = 0, $295 = 0, $296 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $305 = 0, $306 = 0, $308 = 0, $309 = 0, $31 = 0, $312 = 0, $314 = 0, $32 = 0, $321 = 0, $322 = 0, $328 = 0, $33 = 0, $330 = 0, $332 = 0, $333 = 0, $334 = 0, $336 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $348 = 0, $349 = 0, $35 = 0, $351 = 0, $352 = 0, $353 = 0, $355 = 0, $356 = 0, $36 = 0, $362 = 0, $364 = 0, $365 = 0, $37 = 0, $371 = 0, $375 = 0, $376 = 0, $378 = 0, $38 = 0, $380 = 0, $382 = 0, $385 = 0, $387 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $394 = 0, $396 = 0, $397 = 0, $399 = 0, $4 = 0, $40 = 0, $402 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $411 = 0, $412 = 0, $413 = 0, $415 = 0, $416 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $423 = 0, $425 = 0, $43 = 0, $432 = 0, $433 = 0, $439 = 0, $44 = 0, $441 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $449 = 0, $45 = 0, $450 = 0, $452 = 0, $456 = 0, $46 = 0, $461 = 0, $462 = 0, $467 = 0, $47 = 0, $472 = 0, $473 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $484 = 0, $488 = 0, $489 = 0, $49 = 0, $491 = 0, $492 = 0, $493 = 0, $495 = 0, $496 = 0, $5 = 0, $50 = 0, $502 = 0, $504 = 0, $505 = 0, $51 = 0, $511 = 0, $513 = 0, $515 = 0, $517 = 0, $519 = 0, $52 = 0, $521 = 0, $522 = 0, $523 = 0, $526 = 0, $53 = 0, $532 = 0, $534 = 0, $535 = 0, $536 = 0, $538 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $545 = 0, $55 = 0, $551 = 0, $552 = 0, $554 = 0, $556 = 0, $558 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $57 = 0, $570 = 0, $571 = 0, $573 = 0, $574 = 0, $575 = 0, $577 = 0, $578 = 0, $58 = 0, $584 = 0, $586 = 0, $587 = 0, $59 = 0, $593 = 0, $594 = 0, $596 = 0, $597 = 0, $598 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $603 = 0, $604 = 0, $605 = 0, $608 = 0, $61 = 0, $610 = 0, $617 = 0, $618 = 0, $62 = 0, $624 = 0, $626 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $635 = 0, $636 = 0, $638 = 0, $64 = 0, $642 = 0, $647 = 0, $648 = 0, $65 = 0, $653 = 0, $658 = 0, $659 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $67 = 0, $670 = 0, $671 = 0, $673 = 0, $677 = 0, $678 = 0, $680 = 0, $681 = 0, $682 = 0, $684 = 0, $685 = 0, $691 = 0, $693 = 0, $694 = 0, $7 = 0, $70 = 0, $702 = 0, $704 = 0, $705 = 0, $706 = 0, $709 = 0, $715 = 0, $716 = 0, $717 = 0, $719 = 0, $72 = 0, $721 = 0, $722 = 0, $723 = 0, $726 = 0, $734 = 0, $735 = 0, $736 = 0, $739 = 0, $74 = 0, $743 = 0, $745 = 0, $747 = 0, $749 = 0, $750 = 0, $751 = 0, $753 = 0, $755 = 0, $756 = 0, $758 = 0, $76 = 0, $760 = 0, $761 = 0, $763 = 0, $765 = 0, $767 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $773 = 0, $775 = 0, $777 = 0, $778 = 0, $781 = 0, $782 = 0, $783 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $800 = 0, $801 = 0, $802 = 0, $805 = 0, $809 = 0, $81 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $819 = 0, $82 = 0, $827 = 0, $831 = 0, $833 = 0, $836 = 0, $84 = 0, $840 = 0, $842 = 0, $843 = 0, $844 = 0, $846 = 0, $848 = 0, $849 = 0, $851 = 0, $854 = 0, $859 = 0, $862 = 0, $866 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $876 = 0, $884 = 0, $888 = 0, $890 = 0, $892 = 0, $894 = 0, $896 = 0, $898 = 0, $9 = 0, $901 = 0, $903 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $910 = 0, $912 = 0, $913 = 0, $915 = 0, $918 = 0, $924 = 0, $925 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $932 = 0, $936 = 0, $938 = 0, $94 = 0, $940 = 0, $942 = 0, $943 = 0, $944 = 0, $946 = 0, $948 = 0, $950 = 0, $951 = 0, $953 = 0, $955 = 0, $957 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $963 = 0, $965 = 0, $967 = 0, $968 = 0, $969 = 0, $970 = 0, $972 = 0, $977 = 0, $978 = 0, $98 = 0, $982 = 0, $987 = 0, $988 = 0, $993 = 0, $998 = 0, $999 = 0, $eh$lpad$body$i$index58Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i309$index78Z2D = 0, $eh$lpad$body$i309$indexZ2D = 0, $eh$lpad$body111$index26Z2D = 0, $eh$lpad$body111$indexZ2D = 0, $eh$lpad$body122$index43Z2D = 0, $eh$lpad$body122$indexZ2D = 0, $eh$lpad$body131$index37Z2D = 0, $eh$lpad$body131$indexZ2D = 0, $eh$lpad$body199$index53Z2D = 0, $eh$lpad$body199$indexZ2D = 0, $eh$lpad$body212$index48Z2D = 0, $eh$lpad$body212$indexZ2D = 0, $eh$lpad$body276$index68Z2D = 0, $eh$lpad$body276$indexZ2D = 0, $eh$lpad$body365$index83Z2D = 0, $eh$lpad$body365$indexZ2D = 0, $eh$lpad$body375$index88Z2D = 0, $eh$lpad$body375$indexZ2D = 0, $eh$lpad$body383$index93Z2D = 0, $eh$lpad$body383$indexZ2D = 0, $eh$lpad$body392$index98Z2D = 0, $eh$lpad$body392$indexZ2D = 0, $eh$lpad$body400$index108Z2D = 0, $eh$lpad$body400$indexZ2D = 0, $eh$lpad$body408$index118Z2D = 0, $eh$lpad$body408$indexZ2D = 0, $eh$lpad$body424$index123Z2D = 0, $eh$lpad$body424$indexZ2D = 0, $eh$lpad$body433$index128Z2D = 0, $eh$lpad$body433$indexZ2D = 0, $eh$lpad$body442$index133Z2D = 0, $eh$lpad$body442$indexZ2D = 0, $eh$lpad$body450$index138Z2D = 0, $eh$lpad$body450$indexZ2D = 0, $eh$lpad$body458$index103Z2D = 0, $eh$lpad$body458$indexZ2D = 0, $eh$lpad$body466$index113Z2D = 0, $eh$lpad$body466$indexZ2D = 0, $eh$lpad$body53$index3Z2D = 0, $eh$lpad$body53$indexZ2D = 0, $eh$lpad$body60$index10Z2D = 0, $eh$lpad$body60$indexZ2D = 0, $eh$lpad$body78$index16Z2D = 0, $eh$lpad$body78$indexZ2D = 0, $eh$lpad$body81$index21Z2D = 0, $eh$lpad$body81$indexZ2D = 0, $eh$lpad$body88$index31Z2D = 0, $eh$lpad$body88$indexZ2D = 0, $elements = 0, $file = 0, $file3 = 0, $first = 0, $got_comma$0$off0 = 0, $id_token = 0, $l = 0, $last = 0, $maybe_if = 0, $next = 0, $obj = 0, $ss = 0, $ss2 = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i108 = 0, $this$idx$val$idx$val$i285 = 0, $this$idx$val$idx$val$i301 = 0, $this$idx$val$idx$val$i57 = 0, $this$idx$val$idx$val$i75 = 0, $this$idx47$val$idx$val = 0, $this$idx48$val$idx$val = 0, $this$idx49$val$idx$val = 0, $tok = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1984 | 0;
 $0 = sp + 1976 | 0;
 $1 = sp + 1972 | 0;
 $2 = sp + 1968 | 0;
 $3 = sp + 1964 | 0;
 $4 = sp + 1960 | 0;
 $5 = sp + 1956 | 0;
 $6 = sp + 1952 | 0;
 $7 = sp + 1948 | 0;
 $8 = sp + 1944 | 0;
 $9 = sp + 1940 | 0;
 $10 = sp + 1936 | 0;
 $11 = sp + 1924 | 0;
 $12 = sp + 1912 | 0;
 $13 = sp + 1908 | 0;
 $14 = sp + 1904 | 0;
 $15 = sp + 1900 | 0;
 $tok = sp + 1856 | 0;
 $16 = sp + 1844 | 0;
 $17 = sp + 1832 | 0;
 $obj = sp + 1828 | 0;
 $18 = sp + 1784 | 0;
 $next = sp + 1740 | 0;
 $19 = sp + 1696 | 0;
 $20 = sp + 1668 | 0;
 $21 = sp + 1656 | 0;
 $first = sp + 1652 | 0;
 $22 = sp + 1608 | 0;
 $l = sp + 1580 | 0;
 $23 = sp + 1536 | 0;
 $id_token = sp + 1492 | 0;
 $24 = sp + 1464 | 0;
 $25 = sp + 1452 | 0;
 $26 = sp + 1424 | 0;
 $27 = sp + 1412 | 0;
 $28 = sp + 1368 | 0;
 $maybe_if = sp + 1324 | 0;
 $29 = sp + 1296 | 0;
 $30 = sp + 1268 | 0;
 $31 = sp + 1240 | 0;
 $32 = sp + 1228 | 0;
 $last = sp + 1184 | 0;
 $33 = sp + 1156 | 0;
 $34 = sp + 1144 | 0;
 $35 = sp + 1116 | 0;
 $36 = sp + 1088 | 0;
 $37 = sp + 1060 | 0;
 $38 = sp + 1048 | 0;
 $ss = sp + 904 | 0;
 $39 = sp + 892 | 0;
 $elements = sp + 880 | 0;
 $40 = sp + 836 | 0;
 $41 = sp + 792 | 0;
 $42 = sp + 748 | 0;
 $43 = sp + 704 | 0;
 $ss2 = sp + 560 | 0;
 $44 = sp + 544 | 0;
 $45 = sp + 540 | 0;
 $46 = sp + 512 | 0;
 $47 = sp + 500 | 0;
 $48 = sp + 456 | 0;
 $49 = sp + 428 | 0;
 $50 = sp + 400 | 0;
 $51 = sp + 388 | 0;
 $52 = sp + 360 | 0;
 $53 = sp + 332 | 0;
 $54 = sp + 304 | 0;
 $file = sp + 260 | 0;
 $55 = sp + 232 | 0;
 $56 = sp + 220 | 0;
 $file3 = sp + 176 | 0;
 $57 = sp + 148 | 0;
 $58 = sp + 136 | 0;
 $59 = sp + 124 | 0;
 $60 = sp + 96 | 0;
 $61 = sp + 84 | 0;
 $62 = sp + 56 | 0;
 $63 = sp + 28 | 0;
 $64 = sp;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $65 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $67 = $tok + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($67, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $70 = $tok + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $70 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $72 = __THREW__;
 __THREW__ = 0;
 if ($72 & 1) {
  $74 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
  ___resumeException($74 | 0);
 }
 $76 = $tok + 28 | 0;
 $77 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$76 + 0 >> 2] = HEAP32[$77 + 0 >> 2];
 HEAP32[$76 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
 HEAP32[$76 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
 HEAP32[$76 + 12 >> 2] = HEAP32[$77 + 12 >> 2];
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $79 = HEAP32[$this >> 2] | 0;
 $81 = HEAP32[$79 + 4 >> 2] | 0;
 $82 = $81 + 4 | 0;
 $84 = HEAP32[$81 >> 2] | 0;
 HEAP32[$84 + 4 >> 2] = HEAP32[$82 >> 2];
 HEAP32[HEAP32[$82 >> 2] >> 2] = $84;
 $87 = $79 + 8 | 0;
 HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81 + 12 | 0);
 __ZdlPv($81);
 L4 : do switch (HEAP32[$tok >> 2] | 0) {
 case 25:
  {
   $1293 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $54 | 0, $70 | 0);
   $1294 = __THREW__;
   __THREW__ = 0;
   if ($1294 & 1) label = 20; else {
    $1297 = $54 + 12 | 0;
    $1298 = $76;
    $1303 = HEAP32[$1298 + 4 >> 2] | 0;
    $1304 = $1297;
    HEAP32[$1304 >> 2] = HEAP32[$1298 >> 2];
    HEAP32[$1304 + 4 >> 2] = $1303;
    $1309 = $tok + 36 | 0;
    $1314 = HEAP32[$1309 + 4 >> 2] | 0;
    $1315 = $54 + 20 | 0;
    HEAP32[$1315 >> 2] = HEAP32[$1309 >> 2];
    HEAP32[$1315 + 4 >> 2] = $1314;
    __THREW__ = 0;
    $1319 = invoke_ii(67, 48) | 0;
    $1320 = __THREW__;
    __THREW__ = 0;
    do if ($1320 & 1) label = 388; else {
     HEAP32[$1319 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1319 + 4 | 0, $54 | 0);
     $1323 = __THREW__;
     __THREW__ = 0;
     if ($1323 & 1) {
      $1341 = ___cxa_find_matching_catch() | 0;
      $1342 = tempRet0;
      __ZdlPv($1319);
      $eh$lpad$body392$index98Z2D = $1342;
      $eh$lpad$body392$indexZ2D = $1341;
      break;
     }
     $1325 = $1319 + 16 | 0;
     HEAP32[$1325 + 0 >> 2] = HEAP32[$1297 + 0 >> 2];
     HEAP32[$1325 + 4 >> 2] = HEAP32[$1297 + 4 >> 2];
     HEAP32[$1325 + 8 >> 2] = HEAP32[$1297 + 8 >> 2];
     HEAP32[$1325 + 12 >> 2] = HEAP32[$1297 + 12 >> 2];
     HEAP32[$1319 + 32 >> 2] = 12;
     HEAP32[$1319 + 36 >> 2] = 0;
     HEAP32[$1319 + 40 >> 2] = 0;
     HEAP32[$1319 + 44 >> 2] = 0;
     HEAP32[$1319 >> 2] = 36248;
     HEAP32[$7 >> 2] = $1319;
     $1330 = $1293 + 16 | 0;
     $1331 = HEAP32[$1330 >> 2] | 0;
     if ($1331 >>> 0 < (HEAP32[$1293 + 20 >> 2] | 0) >>> 0) {
      if (!$1331) $1337 = 0; else {
       HEAP32[$1331 >> 2] = $1319;
       $1337 = HEAP32[$1330 >> 2] | 0;
      }
      HEAP32[$1330 >> 2] = $1337 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1293 + 12 | 0, $7 | 0);
      $1339 = __THREW__;
      __THREW__ = 0;
      if ($1339 & 1) {
       label = 388;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
     $$2 = $1319;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 388) {
     $1343 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body392$index98Z2D = tempRet0;
     $eh$lpad$body392$indexZ2D = $1343;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
    $$28 = $eh$lpad$body392$indexZ2D;
    $$2842 = $eh$lpad$body392$index98Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 30:
  {
   $1239 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $53 | 0, $70 | 0);
   $1240 = __THREW__;
   __THREW__ = 0;
   if ($1240 & 1) label = 20; else {
    $1243 = $53 + 12 | 0;
    $1244 = $76;
    $1249 = HEAP32[$1244 + 4 >> 2] | 0;
    $1250 = $1243;
    HEAP32[$1250 >> 2] = HEAP32[$1244 >> 2];
    HEAP32[$1250 + 4 >> 2] = $1249;
    $1255 = $tok + 36 | 0;
    $1260 = HEAP32[$1255 + 4 >> 2] | 0;
    $1261 = $53 + 20 | 0;
    HEAP32[$1261 >> 2] = HEAP32[$1255 >> 2];
    HEAP32[$1261 + 4 >> 2] = $1260;
    __THREW__ = 0;
    $1265 = invoke_ii(67, 52) | 0;
    $1266 = __THREW__;
    __THREW__ = 0;
    do if ($1266 & 1) label = 376; else {
     HEAP32[$1265 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1265 + 4 | 0, $53 | 0);
     $1269 = __THREW__;
     __THREW__ = 0;
     if ($1269 & 1) {
      $1288 = ___cxa_find_matching_catch() | 0;
      $1289 = tempRet0;
      __ZdlPv($1265);
      $eh$lpad$body383$index93Z2D = $1289;
      $eh$lpad$body383$indexZ2D = $1288;
      break;
     }
     $1271 = $1265 + 16 | 0;
     HEAP32[$1271 + 0 >> 2] = HEAP32[$1243 + 0 >> 2];
     HEAP32[$1271 + 4 >> 2] = HEAP32[$1243 + 4 >> 2];
     HEAP32[$1271 + 8 >> 2] = HEAP32[$1243 + 8 >> 2];
     HEAP32[$1271 + 12 >> 2] = HEAP32[$1243 + 12 >> 2];
     HEAP32[$1265 + 32 >> 2] = 11;
     HEAP32[$1265 + 36 >> 2] = 0;
     HEAP32[$1265 + 40 >> 2] = 0;
     HEAP32[$1265 + 44 >> 2] = 0;
     HEAP32[$1265 >> 2] = 36088;
     HEAP8[$1265 + 48 >> 0] = 1;
     HEAP32[$8 >> 2] = $1265;
     $1277 = $1239 + 16 | 0;
     $1278 = HEAP32[$1277 >> 2] | 0;
     if ($1278 >>> 0 < (HEAP32[$1239 + 20 >> 2] | 0) >>> 0) {
      if (!$1278) $1284 = 0; else {
       HEAP32[$1278 >> 2] = $1265;
       $1284 = HEAP32[$1277 >> 2] | 0;
      }
      HEAP32[$1277 >> 2] = $1284 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1239 + 12 | 0, $8 | 0);
      $1286 = __THREW__;
      __THREW__ = 0;
      if ($1286 & 1) {
       label = 376;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
     $$2 = $1265;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 376) {
     $1290 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body383$index93Z2D = tempRet0;
     $eh$lpad$body383$indexZ2D = $1290;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
    $$28 = $eh$lpad$body383$indexZ2D;
    $$2842 = $eh$lpad$body383$index93Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 21:
  {
   __THREW__ = 0;
   invoke_viiii(12, $file | 0, $this | 0, 14, 0);
   $1345 = __THREW__;
   __THREW__ = 0;
   if ($1345 & 1) label = 20; else {
    $1348 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $55 | 0, $70 | 0);
    $1349 = __THREW__;
    __THREW__ = 0;
    if ($1349 & 1) {
     $1416 = ___cxa_find_matching_catch() | 0;
     $$23 = $1416;
     $$2337 = tempRet0;
     $$pre$phi517Z2D = $file + 4 | 0;
    } else {
     $1352 = $55 + 12 | 0;
     $1353 = $76;
     $1358 = HEAP32[$1353 + 4 >> 2] | 0;
     $1359 = $1352;
     HEAP32[$1359 >> 2] = HEAP32[$1353 >> 2];
     HEAP32[$1359 + 4 >> 2] = $1358;
     $1364 = $file + 36 | 0;
     $1369 = HEAP32[$1364 + 4 >> 2] | 0;
     $1370 = $55 + 20 | 0;
     HEAP32[$1370 >> 2] = HEAP32[$1364 >> 2];
     HEAP32[$1370 + 4 >> 2] = $1369;
     $1374 = $file + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $56 | 0, $1374 | 0);
     $1375 = __THREW__;
     __THREW__ = 0;
     if ($1375 & 1) {
      $1418 = ___cxa_find_matching_catch() | 0;
      $$22 = $1418;
      $$2236 = tempRet0;
     } else {
      __THREW__ = 0;
      $1377 = invoke_ii(67, 60) | 0;
      $1378 = __THREW__;
      __THREW__ = 0;
      L63 : do if ($1378 & 1) label = 411; else {
       HEAP32[$1377 >> 2] = 33968;
       $1380 = $1377 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $1380 | 0, $55 | 0);
       $1381 = __THREW__;
       __THREW__ = 0;
       do if ($1381 & 1) {
        $1413 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body458$index103Z2D = tempRet0;
        $eh$lpad$body458$indexZ2D = $1413;
       } else {
        $1383 = $1377 + 16 | 0;
        HEAP32[$1383 + 0 >> 2] = HEAP32[$1352 + 0 >> 2];
        HEAP32[$1383 + 4 >> 2] = HEAP32[$1352 + 4 >> 2];
        HEAP32[$1383 + 8 >> 2] = HEAP32[$1352 + 8 >> 2];
        HEAP32[$1383 + 12 >> 2] = HEAP32[$1352 + 12 >> 2];
        HEAP32[$1377 + 32 >> 2] = 7;
        $1385 = $1377 + 36 | 0;
        HEAP32[$1385 >> 2] = 0;
        $1386 = $1377 + 40 | 0;
        HEAP32[$1386 >> 2] = 0;
        HEAP32[$1377 + 44 >> 2] = 0;
        HEAP32[$1377 >> 2] = 36072;
        __THREW__ = 0;
        invoke_vii(40, $1377 + 48 | 0, $56 | 0);
        $1389 = __THREW__;
        __THREW__ = 0;
        if ($1389 & 1) {
         $1391 = ___cxa_find_matching_catch() | 0;
         $1392 = tempRet0;
         HEAP32[$1377 >> 2] = 33968;
         $1393 = HEAP32[$1385 >> 2] | 0;
         $1395 = $1393;
         if ($1393) {
          $1396 = HEAP32[$1386 >> 2] | 0;
          if (($1396 | 0) != ($1393 | 0)) HEAP32[$1386 >> 2] = $1396 + (~(($1396 + -4 - $1395 | 0) >>> 2) << 2);
          __ZdlPv($1393);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1380);
         $eh$lpad$body458$index103Z2D = $1392;
         $eh$lpad$body458$indexZ2D = $1391;
         break;
        }
        HEAP32[$6 >> 2] = $1377;
        $1402 = $1348 + 16 | 0;
        $1403 = HEAP32[$1402 >> 2] | 0;
        if ($1403 >>> 0 < (HEAP32[$1348 + 20 >> 2] | 0) >>> 0) {
         if (!$1403) $1409 = 0; else {
          HEAP32[$1403 >> 2] = $1377;
          $1409 = HEAP32[$1402 >> 2] | 0;
         }
         HEAP32[$1402 >> 2] = $1409 + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(51, $1348 + 12 | 0, $6 | 0);
         $1411 = __THREW__;
         __THREW__ = 0;
         if ($1411 & 1) {
          label = 411;
          break L63;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file + 16 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1374);
        $$2 = $1377;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
        STACKTOP = sp;
        return $$2 | 0;
       } while (0);
       __ZdlPv($1377);
       $eh$lpad$body400$index108Z2D = $eh$lpad$body458$index103Z2D;
       $eh$lpad$body400$indexZ2D = $eh$lpad$body458$indexZ2D;
      } while (0);
      if ((label | 0) == 411) {
       $1420 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body400$index108Z2D = tempRet0;
       $eh$lpad$body400$indexZ2D = $1420;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
      $$22 = $eh$lpad$body400$indexZ2D;
      $$2236 = $eh$lpad$body400$index108Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     $$23 = $$22;
     $$2337 = $$2236;
     $$pre$phi517Z2D = $1374;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phi517Z2D);
    $$28 = $$23;
    $$2842 = $$2337;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 31:
  {
   $104 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 35832, 23);
   $105 = __THREW__;
   __THREW__ = 0;
   do if ($105 & 1) {
    $117 = ___cxa_find_matching_catch() | 0;
    $$115484 = tempRet0;
    $$18485 = $117;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $104 | 0, $70 | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    if ($107 & 1) $$045 = 1; else {
     $109 = $104 + 12 | 0;
     HEAP32[$109 + 0 >> 2] = HEAP32[$76 + 0 >> 2];
     HEAP32[$109 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
     HEAP32[$109 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
     HEAP32[$109 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $104 + 28 | 0, $17 | 0);
     $111 = __THREW__;
     __THREW__ = 0;
     if ($111 & 1) {
      $113 = ___cxa_find_matching_catch() | 0;
      $114 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($104);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      $$115484 = $114;
      $$18485 = $113;
      break;
     }
     __THREW__ = 0;
     invoke_viii(4, $104 | 0, 48, 176);
     $115 = __THREW__;
     __THREW__ = 0;
     if ($115 & 1) $$045 = 0; else {}
    }
    $119 = ___cxa_find_matching_catch() | 0;
    $120 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    if ($$045) {
     $$115484 = $120;
     $$18485 = $119;
    } else {
     $$28 = $119;
     $$2842 = $120;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     ___resumeException($$28 | 0);
    }
   } while (0);
   ___cxa_free_exception($104 | 0);
   $$28 = $$18485;
   $$2842 = $$115484;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
   ___resumeException($$28 | 0);
   break;
  }
 case 0:
  {
   __THREW__ = 0;
   invoke_viiiii(5, $18 | 0, $this | 0, $obj | 0, $tok | 0, $obj_level | 0);
   $121 = __THREW__;
   __THREW__ = 0;
   if ($121 & 1) label = 20; else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18 + 4 | 0);
    $$2 = HEAP32[$obj >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    STACKTOP = sp;
    return $$2 | 0;
   }
   break;
  }
 case 29:
  {
   $1695 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $64 | 0, $70 | 0);
   $1696 = __THREW__;
   __THREW__ = 0;
   if ($1696 & 1) label = 20; else {
    $1699 = $64 + 12 | 0;
    $1700 = $76;
    $1705 = HEAP32[$1700 + 4 >> 2] | 0;
    $1706 = $1699;
    HEAP32[$1706 >> 2] = HEAP32[$1700 >> 2];
    HEAP32[$1706 + 4 >> 2] = $1705;
    $1711 = $tok + 36 | 0;
    $1716 = HEAP32[$1711 + 4 >> 2] | 0;
    $1717 = $64 + 20 | 0;
    HEAP32[$1717 >> 2] = HEAP32[$1711 >> 2];
    HEAP32[$1717 + 4 >> 2] = $1716;
    __THREW__ = 0;
    $1721 = invoke_ii(67, 48) | 0;
    $1722 = __THREW__;
    __THREW__ = 0;
    do if ($1722 & 1) label = 500; else {
     HEAP32[$1721 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1721 + 4 | 0, $64 | 0);
     $1725 = __THREW__;
     __THREW__ = 0;
     if ($1725 & 1) {
      $1743 = ___cxa_find_matching_catch() | 0;
      $1744 = tempRet0;
      __ZdlPv($1721);
      $eh$lpad$body450$index138Z2D = $1744;
      $eh$lpad$body450$indexZ2D = $1743;
      break;
     }
     $1727 = $1721 + 16 | 0;
     HEAP32[$1727 + 0 >> 2] = HEAP32[$1699 + 0 >> 2];
     HEAP32[$1727 + 4 >> 2] = HEAP32[$1699 + 4 >> 2];
     HEAP32[$1727 + 8 >> 2] = HEAP32[$1699 + 8 >> 2];
     HEAP32[$1727 + 12 >> 2] = HEAP32[$1699 + 12 >> 2];
     HEAP32[$1721 + 32 >> 2] = 18;
     HEAP32[$1721 + 36 >> 2] = 0;
     HEAP32[$1721 + 40 >> 2] = 0;
     HEAP32[$1721 + 44 >> 2] = 0;
     HEAP32[$1721 >> 2] = 35720;
     HEAP32[$1 >> 2] = $1721;
     $1732 = $1695 + 16 | 0;
     $1733 = HEAP32[$1732 >> 2] | 0;
     if ($1733 >>> 0 < (HEAP32[$1695 + 20 >> 2] | 0) >>> 0) {
      if (!$1733) $1739 = 0; else {
       HEAP32[$1733 >> 2] = $1721;
       $1739 = HEAP32[$1732 >> 2] | 0;
      }
      HEAP32[$1732 >> 2] = $1739 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1695 + 12 | 0, $1 | 0);
      $1741 = __THREW__;
      __THREW__ = 0;
      if ($1741 & 1) {
       label = 500;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     $$2 = $1721;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 500) {
     $1745 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body450$index138Z2D = tempRet0;
     $eh$lpad$body450$indexZ2D = $1745;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
    $$28 = $eh$lpad$body450$indexZ2D;
    $$2842 = $eh$lpad$body450$index138Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 28:
  {
   $1642 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $63 | 0, $70 | 0);
   $1643 = __THREW__;
   __THREW__ = 0;
   if ($1643 & 1) label = 20; else {
    $1646 = $63 + 12 | 0;
    $1647 = $76;
    $1652 = HEAP32[$1647 + 4 >> 2] | 0;
    $1653 = $1646;
    HEAP32[$1653 >> 2] = HEAP32[$1647 >> 2];
    HEAP32[$1653 + 4 >> 2] = $1652;
    $1658 = $tok + 36 | 0;
    $1663 = HEAP32[$1658 + 4 >> 2] | 0;
    $1664 = $63 + 20 | 0;
    HEAP32[$1664 >> 2] = HEAP32[$1658 >> 2];
    HEAP32[$1664 + 4 >> 2] = $1663;
    __THREW__ = 0;
    $1668 = invoke_ii(67, 48) | 0;
    $1669 = __THREW__;
    __THREW__ = 0;
    do if ($1669 & 1) label = 488; else {
     HEAP32[$1668 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1668 + 4 | 0, $63 | 0);
     $1672 = __THREW__;
     __THREW__ = 0;
     if ($1672 & 1) {
      $1690 = ___cxa_find_matching_catch() | 0;
      $1691 = tempRet0;
      __ZdlPv($1668);
      $eh$lpad$body442$index133Z2D = $1691;
      $eh$lpad$body442$indexZ2D = $1690;
      break;
     }
     $1674 = $1668 + 16 | 0;
     HEAP32[$1674 + 0 >> 2] = HEAP32[$1646 + 0 >> 2];
     HEAP32[$1674 + 4 >> 2] = HEAP32[$1646 + 4 >> 2];
     HEAP32[$1674 + 8 >> 2] = HEAP32[$1646 + 8 >> 2];
     HEAP32[$1674 + 12 >> 2] = HEAP32[$1646 + 12 >> 2];
     HEAP32[$1668 + 32 >> 2] = 17;
     HEAP32[$1668 + 36 >> 2] = 0;
     HEAP32[$1668 + 40 >> 2] = 0;
     HEAP32[$1668 + 44 >> 2] = 0;
     HEAP32[$1668 >> 2] = 35784;
     HEAP32[$2 >> 2] = $1668;
     $1679 = $1642 + 16 | 0;
     $1680 = HEAP32[$1679 >> 2] | 0;
     if ($1680 >>> 0 < (HEAP32[$1642 + 20 >> 2] | 0) >>> 0) {
      if (!$1680) $1686 = 0; else {
       HEAP32[$1680 >> 2] = $1668;
       $1686 = HEAP32[$1679 >> 2] | 0;
      }
      HEAP32[$1679 >> 2] = $1686 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1642 + 12 | 0, $2 | 0);
      $1688 = __THREW__;
      __THREW__ = 0;
      if ($1688 & 1) {
       label = 488;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
     $$2 = $1668;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 488) {
     $1692 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body442$index133Z2D = tempRet0;
     $eh$lpad$body442$indexZ2D = $1692;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
    $$28 = $eh$lpad$body442$indexZ2D;
    $$2842 = $eh$lpad$body442$index133Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 27:
 case 26:
 case 10:
 case 9:
 case 13:
 case 24:
 case 23:
 case 20:
 case 19:
 case 18:
 case 16:
 case 15:
 case 7:
 case 5:
 case 4:
 case 3:
 case 1:
  {
   $93 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 35808, 16);
   $94 = __THREW__;
   __THREW__ = 0;
   if ($94 & 1) {
    $100 = ___cxa_find_matching_catch() | 0;
    $$014481 = tempRet0;
    $$07482 = $100;
   } else {
    __THREW__ = 0;
    invoke_viii(7, $93 | 0, $tok | 0, $16 | 0);
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) $$043 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $93 | 0, 48, 176);
     $98 = __THREW__;
     __THREW__ = 0;
     if ($98 & 1) $$043 = 0; else {}
    }
    $102 = ___cxa_find_matching_catch() | 0;
    $103 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
    if ($$043) {
     $$014481 = $103;
     $$07482 = $102;
    } else {
     $$28 = $102;
     $$2842 = $103;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     ___resumeException($$28 | 0);
    }
   }
   ___cxa_free_exception($93 | 0);
   $$28 = $$07482;
   $$2842 = $$014481;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
   ___resumeException($$28 | 0);
   break;
  }
 case 2:
  {
   $this$idx49$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $128 = $this$idx49$val$idx$val + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$128 >> 2];
   $130 = $next + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $130 | 0, $this$idx49$val$idx$val + 12 | 0);
   $132 = __THREW__;
   __THREW__ = 0;
   if ($132 & 1) label = 20; else {
    HEAP32[$next >> 2] = HEAP32[$128 >> 2];
    $135 = $next + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $135 | 0, $this$idx49$val$idx$val + 24 | 0);
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     $139 = ___cxa_find_matching_catch() | 0;
     $140 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
     $eh$lpad$body53$index3Z2D = $140;
     $eh$lpad$body53$indexZ2D = $139;
     break L4;
    }
    $141 = $next + 28 | 0;
    $142 = $this$idx49$val$idx$val + 36 | 0;
    HEAP32[$141 + 0 >> 2] = HEAP32[$142 + 0 >> 2];
    HEAP32[$141 + 4 >> 2] = HEAP32[$142 + 4 >> 2];
    HEAP32[$141 + 8 >> 2] = HEAP32[$142 + 8 >> 2];
    HEAP32[$141 + 12 >> 2] = HEAP32[$142 + 12 >> 2];
    $143 = HEAP32[$128 >> 2] | 0;
    HEAP32[$next >> 2] = $143;
    L163 : do if (($143 | 0) == 3) {
     $this$idx$val$idx$val$i57 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $145 = $this$idx$val$idx$val$i57 + 8 | 0;
     HEAP32[$19 >> 2] = HEAP32[$145 >> 2];
     $147 = $19 + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $147 | 0, $this$idx$val$idx$val$i57 + 12 | 0);
     $149 = __THREW__;
     __THREW__ = 0;
     if ($149 & 1) label = 32; else {
      HEAP32[$19 >> 2] = HEAP32[$145 >> 2];
      $152 = $19 + 16 | 0;
      __THREW__ = 0;
      invoke_vii(40, $152 | 0, $this$idx$val$idx$val$i57 + 24 | 0);
      $154 = __THREW__;
      __THREW__ = 0;
      if ($154 & 1) {
       $156 = ___cxa_find_matching_catch() | 0;
       $157 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
       $eh$lpad$body60$index10Z2D = $157;
       $eh$lpad$body60$indexZ2D = $156;
       label = 33;
       break;
      }
      $158 = $19 + 28 | 0;
      $159 = $this$idx$val$idx$val$i57 + 36 | 0;
      HEAP32[$158 + 0 >> 2] = HEAP32[$159 + 0 >> 2];
      HEAP32[$158 + 4 >> 2] = HEAP32[$159 + 4 >> 2];
      HEAP32[$158 + 8 >> 2] = HEAP32[$159 + 8 >> 2];
      HEAP32[$158 + 12 >> 2] = HEAP32[$159 + 12 >> 2];
      HEAP32[$19 >> 2] = HEAP32[$145 >> 2];
      $161 = HEAP32[$this >> 2] | 0;
      $163 = HEAP32[$161 + 4 >> 2] | 0;
      $164 = $163 + 4 | 0;
      $166 = HEAP32[$163 >> 2] | 0;
      HEAP32[$166 + 4 >> 2] = HEAP32[$164 >> 2];
      HEAP32[HEAP32[$164 >> 2] >> 2] = $166;
      $169 = $161 + 8 | 0;
      HEAP32[$169 >> 2] = (HEAP32[$169 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($163 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($163 + 12 | 0);
      __ZdlPv($163);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($152);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
      $175 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $20 | 0, $70 | 0);
      $176 = __THREW__;
      __THREW__ = 0;
      if ($176 & 1) label = 32; else {
       $180 = $76;
       $185 = HEAP32[$180 + 4 >> 2] | 0;
       $186 = $20 + 12 | 0;
       HEAP32[$186 >> 2] = HEAP32[$180 >> 2];
       HEAP32[$186 + 4 >> 2] = $185;
       $191 = $next + 36 | 0;
       $196 = HEAP32[$191 + 4 >> 2] | 0;
       $197 = $20 + 20 | 0;
       HEAP32[$197 >> 2] = HEAP32[$191 >> 2];
       HEAP32[$197 + 4 >> 2] = $196;
       HEAP32[$21 >> 2] = 0;
       HEAP32[$21 + 4 >> 2] = 0;
       HEAP32[$21 + 8 >> 2] = 0;
       __THREW__ = 0;
       $203 = invoke_iiii(32, $175 | 0, $20 | 0, $21 | 0) | 0;
       $204 = __THREW__;
       __THREW__ = 0;
       if ($204 & 1) {
        $208 = ___cxa_find_matching_catch() | 0;
        $209 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
        $$20 = $208;
        $$2034 = $209;
        break;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
        $$12 = $203;
        label = 327;
        break;
       }
      }
     }
    } else {
     __THREW__ = 0;
     $210 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $211 = __THREW__;
     __THREW__ = 0;
     if ($211 & 1) label = 32; else {
      HEAP32[$first >> 2] = $210;
      $this$idx48$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $213 = $this$idx48$val$idx$val + 8 | 0;
      HEAP32[$22 >> 2] = HEAP32[$213 >> 2];
      $215 = $22 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $215 | 0, $this$idx48$val$idx$val + 12 | 0);
      $217 = __THREW__;
      __THREW__ = 0;
      if ($217 & 1) label = 32; else {
       HEAP32[$22 >> 2] = HEAP32[$213 >> 2];
       $220 = $22 + 16 | 0;
       __THREW__ = 0;
       invoke_vii(40, $220 | 0, $this$idx48$val$idx$val + 24 | 0);
       $222 = __THREW__;
       __THREW__ = 0;
       if ($222 & 1) {
        $224 = ___cxa_find_matching_catch() | 0;
        $225 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($215);
        $eh$lpad$body60$index10Z2D = $225;
        $eh$lpad$body60$indexZ2D = $224;
        label = 33;
        break;
       }
       $226 = $22 + 28 | 0;
       $227 = $this$idx48$val$idx$val + 36 | 0;
       HEAP32[$226 + 0 >> 2] = HEAP32[$227 + 0 >> 2];
       HEAP32[$226 + 4 >> 2] = HEAP32[$227 + 4 >> 2];
       HEAP32[$226 + 8 >> 2] = HEAP32[$227 + 8 >> 2];
       HEAP32[$226 + 12 >> 2] = HEAP32[$227 + 12 >> 2];
       $228 = HEAP32[$213 >> 2] | 0;
       HEAP32[$22 >> 2] = $228;
       HEAP32[$next >> 2] = $228;
       if (!(HEAP8[$130 >> 0] & 1)) {
        HEAP8[$130 + 1 >> 0] = 0;
        HEAP8[$130 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 12 >> 2] >> 0] = 0;
        HEAP32[$next + 8 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $130 | 0, 0);
       $236 = __THREW__;
       __THREW__ = 0;
       if ($236 & 1) {
        $238 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($238);
       };
       HEAP32[$130 + 0 >> 2] = HEAP32[$215 + 0 >> 2];
       HEAP32[$130 + 4 >> 2] = HEAP32[$215 + 4 >> 2];
       HEAP32[$130 + 8 >> 2] = HEAP32[$215 + 8 >> 2];
       HEAP32[$215 + 0 >> 2] = 0;
       HEAP32[$215 + 4 >> 2] = 0;
       HEAP32[$215 + 8 >> 2] = 0;
       $240 = $next + 16 | 0;
       $241 = $22 + 16 | 0;
       if (!(HEAP8[$240 >> 0] & 1)) {
        HEAP8[$240 + 1 >> 0] = 0;
        HEAP8[$240 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 24 >> 2] >> 0] = 0;
        HEAP32[$next + 20 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $240 | 0, 0);
       $249 = __THREW__;
       __THREW__ = 0;
       if ($249 & 1) {
        $251 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($251);
       };
       HEAP32[$240 + 0 >> 2] = HEAP32[$241 + 0 >> 2];
       HEAP32[$240 + 4 >> 2] = HEAP32[$241 + 4 >> 2];
       HEAP32[$240 + 8 >> 2] = HEAP32[$241 + 8 >> 2];
       HEAP32[$241 + 0 >> 2] = 0;
       HEAP32[$241 + 4 >> 2] = 0;
       HEAP32[$241 + 8 >> 2] = 0;
       HEAP32[$141 + 0 >> 2] = HEAP32[$226 + 0 >> 2];
       HEAP32[$141 + 4 >> 2] = HEAP32[$226 + 4 >> 2];
       HEAP32[$141 + 8 >> 2] = HEAP32[$226 + 8 >> 2];
       HEAP32[$141 + 12 >> 2] = HEAP32[$226 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($220);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($215);
       if ((HEAP32[$next >> 2] | 0) != 18) {
        HEAP32[$elements >> 2] = 0;
        $781 = $elements + 4 | 0;
        HEAP32[$781 >> 2] = 0;
        $782 = $elements + 8 | 0;
        HEAP32[$782 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(57, $elements | 0, $first | 0);
        $783 = __THREW__;
        __THREW__ = 0;
        L195 : do if ($783 & 1) label = 262; else {
         $785 = $40 + 4 | 0;
         $786 = $40 + 16 | 0;
         $787 = $40 + 28 | 0;
         $788 = $130 + 1 | 0;
         $789 = $40 + 16 | 0;
         $790 = $240 + 1 | 0;
         $791 = $41 + 4 | 0;
         $792 = $41 + 16 | 0;
         $793 = $41 + 28 | 0;
         $794 = $42 + 4 | 0;
         $795 = $42 + 16 | 0;
         $796 = $42 + 28 | 0;
         $797 = $42 + 16 | 0;
         $798 = $next + 24 | 0;
         $799 = $next + 20 | 0;
         $800 = $next + 12 | 0;
         $801 = $next + 8 | 0;
         while (1) {
          $this$idx47$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
          $802 = $this$idx47$val$idx$val + 8 | 0;
          HEAP32[$40 >> 2] = HEAP32[$802 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $785 | 0, $this$idx47$val$idx$val + 12 | 0);
          $805 = __THREW__;
          __THREW__ = 0;
          if ($805 & 1) {
           label = 261;
           break;
          }
          HEAP32[$40 >> 2] = HEAP32[$802 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $786 | 0, $this$idx47$val$idx$val + 24 | 0);
          $809 = __THREW__;
          __THREW__ = 0;
          if ($809 & 1) {
           label = 232;
           break;
          }
          $813 = $this$idx47$val$idx$val + 36 | 0;
          HEAP32[$787 + 0 >> 2] = HEAP32[$813 + 0 >> 2];
          HEAP32[$787 + 4 >> 2] = HEAP32[$813 + 4 >> 2];
          HEAP32[$787 + 8 >> 2] = HEAP32[$813 + 8 >> 2];
          HEAP32[$787 + 12 >> 2] = HEAP32[$813 + 12 >> 2];
          $814 = HEAP32[$802 >> 2] | 0;
          HEAP32[$40 >> 2] = $814;
          HEAP32[$next >> 2] = $814;
          if (!(HEAP8[$130 >> 0] & 1)) {
           HEAP8[$788 >> 0] = 0;
           HEAP8[$130 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$800 >> 2] >> 0] = 0;
           HEAP32[$801 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $130 | 0, 0);
          $819 = __THREW__;
          __THREW__ = 0;
          if ($819 & 1) {
           label = 237;
           break;
          };
          HEAP32[$130 + 0 >> 2] = HEAP32[$785 + 0 >> 2];
          HEAP32[$130 + 4 >> 2] = HEAP32[$785 + 4 >> 2];
          HEAP32[$130 + 8 >> 2] = HEAP32[$785 + 8 >> 2];
          HEAP32[$785 + 0 >> 2] = 0;
          HEAP32[$785 + 4 >> 2] = 0;
          HEAP32[$785 + 8 >> 2] = 0;
          if (!(HEAP8[$240 >> 0] & 1)) {
           HEAP8[$790 >> 0] = 0;
           HEAP8[$240 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$798 >> 2] >> 0] = 0;
           HEAP32[$799 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $240 | 0, 0);
          $827 = __THREW__;
          __THREW__ = 0;
          if ($827 & 1) {
           label = 242;
           break;
          };
          HEAP32[$240 + 0 >> 2] = HEAP32[$789 + 0 >> 2];
          HEAP32[$240 + 4 >> 2] = HEAP32[$789 + 4 >> 2];
          HEAP32[$240 + 8 >> 2] = HEAP32[$789 + 8 >> 2];
          HEAP32[$789 + 0 >> 2] = 0;
          HEAP32[$789 + 4 >> 2] = 0;
          HEAP32[$789 + 8 >> 2] = 0;
          HEAP32[$141 + 0 >> 2] = HEAP32[$787 + 0 >> 2];
          HEAP32[$141 + 4 >> 2] = HEAP32[$787 + 4 >> 2];
          HEAP32[$141 + 8 >> 2] = HEAP32[$787 + 8 >> 2];
          HEAP32[$141 + 12 >> 2] = HEAP32[$787 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($786);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($785);
          $831 = HEAP32[$next >> 2] | 0;
          if (($831 | 0) == 5) {
           $this$idx$val$idx$val$i285 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $833 = $this$idx$val$idx$val$i285 + 8 | 0;
           HEAP32[$41 >> 2] = HEAP32[$833 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $791 | 0, $this$idx$val$idx$val$i285 + 12 | 0);
           $836 = __THREW__;
           __THREW__ = 0;
           if ($836 & 1) {
            label = 261;
            break;
           }
           HEAP32[$41 >> 2] = HEAP32[$833 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $792 | 0, $this$idx$val$idx$val$i285 + 24 | 0);
           $840 = __THREW__;
           __THREW__ = 0;
           if ($840 & 1) {
            label = 246;
            break;
           }
           $844 = $this$idx$val$idx$val$i285 + 36 | 0;
           HEAP32[$793 + 0 >> 2] = HEAP32[$844 + 0 >> 2];
           HEAP32[$793 + 4 >> 2] = HEAP32[$844 + 4 >> 2];
           HEAP32[$793 + 8 >> 2] = HEAP32[$844 + 8 >> 2];
           HEAP32[$793 + 12 >> 2] = HEAP32[$844 + 12 >> 2];
           HEAP32[$41 >> 2] = HEAP32[$833 >> 2];
           $846 = HEAP32[$this >> 2] | 0;
           $848 = HEAP32[$846 + 4 >> 2] | 0;
           $849 = $848 + 4 | 0;
           $851 = HEAP32[$848 >> 2] | 0;
           HEAP32[$851 + 4 >> 2] = HEAP32[$849 >> 2];
           HEAP32[HEAP32[$849 >> 2] >> 2] = $851;
           $854 = $846 + 8 | 0;
           HEAP32[$854 >> 2] = (HEAP32[$854 >> 2] | 0) + -1;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($848 + 24 | 0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($848 + 12 | 0);
           __ZdlPv($848);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($792);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($791);
           $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $859 = $this$idx$val$idx$val + 8 | 0;
           HEAP32[$42 >> 2] = HEAP32[$859 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $794 | 0, $this$idx$val$idx$val + 12 | 0);
           $862 = __THREW__;
           __THREW__ = 0;
           if ($862 & 1) {
            label = 261;
            break;
           }
           HEAP32[$42 >> 2] = HEAP32[$859 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $795 | 0, $this$idx$val$idx$val + 24 | 0);
           $866 = __THREW__;
           __THREW__ = 0;
           if ($866 & 1) {
            label = 249;
            break;
           }
           $870 = $this$idx$val$idx$val + 36 | 0;
           HEAP32[$796 + 0 >> 2] = HEAP32[$870 + 0 >> 2];
           HEAP32[$796 + 4 >> 2] = HEAP32[$870 + 4 >> 2];
           HEAP32[$796 + 8 >> 2] = HEAP32[$870 + 8 >> 2];
           HEAP32[$796 + 12 >> 2] = HEAP32[$870 + 12 >> 2];
           $871 = HEAP32[$859 >> 2] | 0;
           HEAP32[$42 >> 2] = $871;
           HEAP32[$next >> 2] = $871;
           if (!(HEAP8[$130 >> 0] & 1)) {
            HEAP8[$788 >> 0] = 0;
            HEAP8[$130 >> 0] = 0;
           } else {
            HEAP8[HEAP32[$800 >> 2] >> 0] = 0;
            HEAP32[$801 >> 2] = 0;
           }
           __THREW__ = 0;
           invoke_vii(45, $130 | 0, 0);
           $876 = __THREW__;
           __THREW__ = 0;
           if ($876 & 1) {
            label = 254;
            break;
           };
           HEAP32[$130 + 0 >> 2] = HEAP32[$794 + 0 >> 2];
           HEAP32[$130 + 4 >> 2] = HEAP32[$794 + 4 >> 2];
           HEAP32[$130 + 8 >> 2] = HEAP32[$794 + 8 >> 2];
           HEAP32[$794 + 0 >> 2] = 0;
           HEAP32[$794 + 4 >> 2] = 0;
           HEAP32[$794 + 8 >> 2] = 0;
           if (!(HEAP8[$240 >> 0] & 1)) {
            HEAP8[$790 >> 0] = 0;
            HEAP8[$240 >> 0] = 0;
           } else {
            HEAP8[HEAP32[$798 >> 2] >> 0] = 0;
            HEAP32[$799 >> 2] = 0;
           }
           __THREW__ = 0;
           invoke_vii(45, $240 | 0, 0);
           $884 = __THREW__;
           __THREW__ = 0;
           if ($884 & 1) {
            label = 259;
            break;
           };
           HEAP32[$240 + 0 >> 2] = HEAP32[$797 + 0 >> 2];
           HEAP32[$240 + 4 >> 2] = HEAP32[$797 + 4 >> 2];
           HEAP32[$240 + 8 >> 2] = HEAP32[$797 + 8 >> 2];
           HEAP32[$797 + 0 >> 2] = 0;
           HEAP32[$797 + 4 >> 2] = 0;
           HEAP32[$797 + 8 >> 2] = 0;
           HEAP32[$141 + 0 >> 2] = HEAP32[$796 + 0 >> 2];
           HEAP32[$141 + 4 >> 2] = HEAP32[$796 + 4 >> 2];
           HEAP32[$141 + 8 >> 2] = HEAP32[$796 + 8 >> 2];
           HEAP32[$141 + 12 >> 2] = HEAP32[$796 + 12 >> 2];
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($795);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($794);
           $892 = HEAP32[$next >> 2] | 0;
           $got_comma$0$off0 = 1;
          } else {
           $892 = $831;
           $got_comma$0$off0 = 0;
          }
          if (($892 | 0) == 3) {
           label = 265;
           break;
          }
          if (!$got_comma$0$off0) {
           label = 270;
           break;
          }
          __THREW__ = 0;
          $969 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
          $970 = __THREW__;
          __THREW__ = 0;
          if ($970 & 1) {
           label = 261;
           break;
          }
          HEAP32[$45 >> 2] = $969;
          $972 = HEAP32[$781 >> 2] | 0;
          if ($972 >>> 0 < (HEAP32[$782 >> 2] | 0) >>> 0) {
           if (!$972) $977 = 0; else {
            HEAP32[$972 >> 2] = $969;
            $977 = HEAP32[$781 >> 2] | 0;
           }
           HEAP32[$781 >> 2] = $977 + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(51, $elements | 0, $45 | 0);
           $978 = __THREW__;
           __THREW__ = 0;
           if ($978 & 1) {
            label = 261;
            break;
           }
          }
         }
         switch (label | 0) {
         case 232:
          {
           $811 = ___cxa_find_matching_catch() | 0;
           $812 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($785);
           $eh$lpad$body276$index68Z2D = $812;
           $eh$lpad$body276$indexZ2D = $811;
           label = 263;
           break L195;
           break;
          }
         case 237:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 242:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 246:
          {
           $842 = ___cxa_find_matching_catch() | 0;
           $843 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($791);
           $eh$lpad$body276$index68Z2D = $843;
           $eh$lpad$body276$indexZ2D = $842;
           label = 263;
           break L195;
           break;
          }
         case 249:
          {
           $868 = ___cxa_find_matching_catch() | 0;
           $869 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($794);
           $eh$lpad$body276$index68Z2D = $869;
           $eh$lpad$body276$indexZ2D = $868;
           label = 263;
           break L195;
           break;
          }
         case 254:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 259:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 261:
          {
           $888 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body276$index68Z2D = tempRet0;
           $eh$lpad$body276$indexZ2D = $888;
           label = 263;
           break L195;
           break;
          }
         case 265:
          {
           $this$idx$val$idx$val$i301 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $894 = $this$idx$val$idx$val$i301 + 8 | 0;
           HEAP32[$43 >> 2] = HEAP32[$894 >> 2];
           $896 = $43 + 4 | 0;
           __THREW__ = 0;
           invoke_vii(40, $896 | 0, $this$idx$val$idx$val$i301 + 12 | 0);
           $898 = __THREW__;
           __THREW__ = 0;
           if ($898 & 1) {
            label = 262;
            break L195;
           }
           HEAP32[$43 >> 2] = HEAP32[$894 >> 2];
           $901 = $43 + 16 | 0;
           __THREW__ = 0;
           invoke_vii(40, $901 | 0, $this$idx$val$idx$val$i301 + 24 | 0);
           $903 = __THREW__;
           __THREW__ = 0;
           if ($903 & 1) {
            $905 = ___cxa_find_matching_catch() | 0;
            $906 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($896);
            $eh$lpad$body276$index68Z2D = $906;
            $eh$lpad$body276$indexZ2D = $905;
            label = 263;
            break L195;
           }
           $907 = $43 + 28 | 0;
           $908 = $this$idx$val$idx$val$i301 + 36 | 0;
           HEAP32[$907 + 0 >> 2] = HEAP32[$908 + 0 >> 2];
           HEAP32[$907 + 4 >> 2] = HEAP32[$908 + 4 >> 2];
           HEAP32[$907 + 8 >> 2] = HEAP32[$908 + 8 >> 2];
           HEAP32[$907 + 12 >> 2] = HEAP32[$908 + 12 >> 2];
           HEAP32[$43 >> 2] = HEAP32[$894 >> 2];
           $910 = HEAP32[$this >> 2] | 0;
           $912 = HEAP32[$910 + 4 >> 2] | 0;
           $913 = $912 + 4 | 0;
           $915 = HEAP32[$912 >> 2] | 0;
           HEAP32[$915 + 4 >> 2] = HEAP32[$913 >> 2];
           HEAP32[HEAP32[$913 >> 2] >> 2] = $915;
           $918 = $910 + 8 | 0;
           HEAP32[$918 >> 2] = (HEAP32[$918 >> 2] | 0) + -1;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($912 + 24 | 0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($912 + 12 | 0);
           __ZdlPv($912);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($901);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($896);
           $924 = HEAP32[$this + 4 >> 2] | 0;
           __THREW__ = 0;
           invoke_vii(40, $46 | 0, $70 | 0);
           $925 = __THREW__;
           __THREW__ = 0;
           if ($925 & 1) {
            label = 262;
            break L195;
           }
           $982 = $76;
           $987 = HEAP32[$982 + 4 >> 2] | 0;
           $988 = $46 + 12 | 0;
           HEAP32[$988 >> 2] = HEAP32[$982 >> 2];
           HEAP32[$988 + 4 >> 2] = $987;
           $993 = $next + 36 | 0;
           $998 = HEAP32[$993 + 4 >> 2] | 0;
           $999 = $46 + 20 | 0;
           HEAP32[$999 >> 2] = HEAP32[$993 >> 2];
           HEAP32[$999 + 4 >> 2] = $998;
           HEAP32[$47 >> 2] = 0;
           $1003 = $47 + 4 | 0;
           HEAP32[$1003 >> 2] = 0;
           $1004 = $47 + 8 | 0;
           HEAP32[$1004 >> 2] = 0;
           $1009 = (HEAP32[$781 >> 2] | 0) - (HEAP32[$elements >> 2] | 0) | 0;
           $1010 = $1009 >> 2;
           L250 : do if (!$1010) label = 308; else {
            if ($1010 >>> 0 > 1073741823) {
             __THREW__ = 0;
             invoke_vi(179, $47 | 0);
             $1013 = __THREW__;
             __THREW__ = 0;
             if (!($1013 & 1)) label = 299;
            } else label = 299;
            do if ((label | 0) == 299) {
             __THREW__ = 0;
             $1015 = invoke_ii(67, $1009 | 0) | 0;
             $1016 = __THREW__;
             __THREW__ = 0;
             if ($1016 & 1) break;
             HEAP32[$1003 >> 2] = $1015;
             HEAP32[$47 >> 2] = $1015;
             HEAP32[$1004 >> 2] = $1015 + ($1010 << 2);
             $1019 = HEAP32[$elements >> 2] | 0;
             $1020 = HEAP32[$781 >> 2] | 0;
             if (($1019 | 0) == ($1020 | 0)) {
              label = 308;
              break L250;
             }
             $$01$i$i328 = $1019;
             $1023 = $1015;
             do {
              HEAP32[$1023 >> 2] = HEAP32[$$01$i$i328 >> 2];
              $1023 = (HEAP32[$1003 >> 2] | 0) + 4 | 0;
              HEAP32[$1003 >> 2] = $1023;
              $$01$i$i328 = $$01$i$i328 + 4 | 0;
             } while (($$01$i$i328 | 0) != ($1020 | 0));
             label = 308;
             break L250;
            } while (0);
            $1027 = ___cxa_find_matching_catch() | 0;
            $1028 = tempRet0;
            $1029 = HEAP32[$47 >> 2] | 0;
            $1031 = $1029;
            if ($1029) {
             $1032 = HEAP32[$1003 >> 2] | 0;
             if (($1032 | 0) != ($1029 | 0)) HEAP32[$1003 >> 2] = $1032 + (~(($1032 + -4 - $1031 | 0) >>> 2) << 2);
             __ZdlPv($1029);
            }
            $$1813 = $1027;
            $$1832 = $1028;
           } while (0);
           do if ((label | 0) == 308) {
            __THREW__ = 0;
            $1038 = invoke_iiii(32, $924 | 0, $46 | 0, $47 | 0) | 0;
            $1039 = __THREW__;
            __THREW__ = 0;
            if ($1039 & 1) {
             $1059 = ___cxa_find_matching_catch() | 0;
             $1060 = tempRet0;
             $1061 = HEAP32[$47 >> 2] | 0;
             if (!$1061) {
              $$1813 = $1059;
              $$1832 = $1060;
              break;
             }
             $1064 = HEAP32[$1003 >> 2] | 0;
             if (($1064 | 0) != ($1061 | 0)) HEAP32[$1003 >> 2] = $1064 + (~(($1064 + -4 - $1061 | 0) >>> 2) << 2);
             __ZdlPv($1061);
             $$1813 = $1059;
             $$1832 = $1060;
             break;
            }
            $1041 = HEAP32[$47 >> 2] | 0;
            $1043 = $1041;
            if ($1041) {
             $1044 = HEAP32[$1003 >> 2] | 0;
             if (($1044 | 0) != ($1041 | 0)) HEAP32[$1003 >> 2] = $1044 + (~(($1044 + -4 - $1043 | 0) >>> 2) << 2);
             __ZdlPv($1041);
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
            $1050 = HEAP32[$elements >> 2] | 0;
            if (!$1050) {
             $$12 = $1038;
             label = 327;
             break L163;
            }
            $1053 = HEAP32[$781 >> 2] | 0;
            if (($1053 | 0) != ($1050 | 0)) HEAP32[$781 >> 2] = $1053 + (~(($1053 + -4 - $1050 | 0) >>> 2) << 2);
            __ZdlPv($1050);
            $$12 = $1038;
            label = 327;
            break L163;
           } while (0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
           $$19 = $$1813;
           $$1933 = $$1832;
           break L195;
           break;
          }
         case 270:
          {
           $927 = $ss2 + 64 | 0;
           $928 = $ss2 + 8 | 0;
           HEAP32[$928 >> 2] = 592;
           $929 = $ss2 + 12 | 0;
           HEAP32[$ss2 >> 2] = 740;
           HEAP32[$927 >> 2] = 760;
           HEAP32[$ss2 + 4 >> 2] = 0;
           __THREW__ = 0;
           invoke_vii(41, $ss2 + 64 | 0, $929 | 0);
           $932 = __THREW__;
           __THREW__ = 0;
           if ($932 & 1) {
            $944 = ___cxa_find_matching_catch() | 0;
            $$0$i312 = tempRet0;
            $$01$i311 = $944;
           } else {
            HEAP32[$ss2 + 136 >> 2] = 0;
            HEAP32[$ss2 + 140 >> 2] = -1;
            HEAP32[$ss2 >> 2] = 572;
            HEAP32[$927 >> 2] = 612;
            HEAP32[$928 >> 2] = 592;
            __THREW__ = 0;
            invoke_vi(177, $929 | 0);
            $936 = __THREW__;
            __THREW__ = 0;
            do if ($936 & 1) {
             $946 = ___cxa_find_matching_catch() | 0;
             $eh$lpad$body$i309$index78Z2D = tempRet0;
             $eh$lpad$body$i309$indexZ2D = $946;
            } else {
             HEAP32[$929 >> 2] = 904;
             $938 = $ss2 + 44 | 0;
             HEAP32[$938 + 0 >> 2] = 0;
             HEAP32[$938 + 4 >> 2] = 0;
             HEAP32[$938 + 8 >> 2] = 0;
             HEAP32[$938 + 12 >> 2] = 0;
             HEAP32[$ss2 + 60 >> 2] = 24;
             HEAP32[$11 + 0 >> 2] = 0;
             HEAP32[$11 + 4 >> 2] = 0;
             HEAP32[$11 + 8 >> 2] = 0;
             __THREW__ = 0;
             invoke_vii(42, $929 | 0, $11 | 0);
             $940 = __THREW__;
             __THREW__ = 0;
             if ($940 & 1) {
              $942 = ___cxa_find_matching_catch() | 0;
              $943 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($938);
              __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($929);
              $eh$lpad$body$i309$index78Z2D = $943;
              $eh$lpad$body$i309$indexZ2D = $942;
              break;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
             __THREW__ = 0;
             invoke_iiii(25, $928 | 0, 35928, 43) | 0;
             $948 = __THREW__;
             __THREW__ = 0;
             L299 : do if ($948 & 1) {
              $963 = ___cxa_find_matching_catch() | 0;
              $$17 = $963;
              $$1731 = tempRet0;
             } else {
              $950 = ___cxa_allocate_exception(40) | 0;
              __THREW__ = 0;
              invoke_vii(43, $44 | 0, $929 | 0);
              $951 = __THREW__;
              __THREW__ = 0;
              L302 : do if ($951 & 1) {
               $965 = ___cxa_find_matching_catch() | 0;
               $$1612493 = $965;
               $$1630492 = tempRet0;
              } else {
               __THREW__ = 0;
               invoke_vii(40, $950 | 0, $240 | 0);
               $953 = __THREW__;
               __THREW__ = 0;
               do if ($953 & 1) $$03 = 1; else {
                $955 = $950 + 12 | 0;
                HEAP32[$955 + 0 >> 2] = HEAP32[$141 + 0 >> 2];
                HEAP32[$955 + 4 >> 2] = HEAP32[$141 + 4 >> 2];
                HEAP32[$955 + 8 >> 2] = HEAP32[$141 + 8 >> 2];
                HEAP32[$955 + 12 >> 2] = HEAP32[$141 + 12 >> 2];
                __THREW__ = 0;
                invoke_vii(40, $950 + 28 | 0, $44 | 0);
                $957 = __THREW__;
                __THREW__ = 0;
                if ($957 & 1) {
                 $959 = ___cxa_find_matching_catch() | 0;
                 $960 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($950);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
                 $$1612493 = $959;
                 $$1630492 = $960;
                 break L302;
                }
                __THREW__ = 0;
                invoke_viii(4, $950 | 0, 48, 176);
                $961 = __THREW__;
                __THREW__ = 0;
                if ($961 & 1) {
                 $$03 = 0;
                 break;
                }
               } while (0);
               $967 = ___cxa_find_matching_catch() | 0;
               $968 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
               if ($$03) {
                $$1612493 = $967;
                $$1630492 = $968;
               } else {
                $$17 = $967;
                $$1731 = $968;
                break L299;
               }
              } while (0);
              ___cxa_free_exception($950 | 0);
              $$17 = $$1612493;
              $$1731 = $$1630492;
             } while (0);
             HEAP32[$ss2 >> 2] = 572;
             HEAP32[$927 >> 2] = 612;
             HEAP32[$928 >> 2] = 592;
             HEAP32[$929 >> 2] = 904;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($938);
             __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($929);
             __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($927);
             $$19 = $$17;
             $$1933 = $$1731;
             break L195;
            } while (0);
            $$0$i312 = $eh$lpad$body$i309$index78Z2D;
            $$01$i311 = $eh$lpad$body$i309$indexZ2D;
           }
           __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($927);
           $eh$lpad$body276$index68Z2D = $$0$i312;
           $eh$lpad$body276$indexZ2D = $$01$i311;
           label = 263;
           break L195;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 262) {
         $890 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body276$index68Z2D = tempRet0;
         $eh$lpad$body276$indexZ2D = $890;
         label = 263;
        }
        if ((label | 0) == 263) {
         $$19 = $eh$lpad$body276$indexZ2D;
         $$1933 = $eh$lpad$body276$index68Z2D;
        }
        $1070 = HEAP32[$elements >> 2] | 0;
        if (!$1070) {
         $$20 = $$19;
         $$2034 = $$1933;
         break;
        }
        $1073 = HEAP32[$781 >> 2] | 0;
        if (($1073 | 0) != ($1070 | 0)) HEAP32[$781 >> 2] = $1073 + (~(($1073 + -4 - $1070 | 0) >>> 2) << 2);
        __ZdlPv($1070);
        $$20 = $$19;
        $$2034 = $$1933;
        break;
       };
       HEAP32[$l + 0 >> 2] = 0;
       HEAP32[$l + 4 >> 2] = 0;
       HEAP32[$l + 8 >> 2] = 0;
       HEAP32[$l + 12 >> 2] = 0;
       HEAP32[$l + 16 >> 2] = 0;
       HEAP32[$l + 20 >> 2] = 0;
       HEAP32[$l + 24 >> 2] = 0;
       $this$idx$val$idx$val$i75 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $255 = $this$idx$val$idx$val$i75 + 8 | 0;
       HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
       $257 = $23 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $257 | 0, $this$idx$val$idx$val$i75 + 12 | 0);
       $259 = __THREW__;
       __THREW__ = 0;
       do if ($259 & 1) label = 112; else {
        HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
        $262 = $23 + 16 | 0;
        __THREW__ = 0;
        invoke_vii(40, $262 | 0, $this$idx$val$idx$val$i75 + 24 | 0);
        $264 = __THREW__;
        __THREW__ = 0;
        if ($264 & 1) {
         $266 = ___cxa_find_matching_catch() | 0;
         $267 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($257);
         $eh$lpad$body78$index16Z2D = $267;
         $eh$lpad$body78$indexZ2D = $266;
         label = 113;
         break;
        }
        $268 = $23 + 28 | 0;
        $269 = $this$idx$val$idx$val$i75 + 36 | 0;
        HEAP32[$268 + 0 >> 2] = HEAP32[$269 + 0 >> 2];
        HEAP32[$268 + 4 >> 2] = HEAP32[$269 + 4 >> 2];
        HEAP32[$268 + 8 >> 2] = HEAP32[$269 + 8 >> 2];
        HEAP32[$268 + 12 >> 2] = HEAP32[$269 + 12 >> 2];
        HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
        $271 = HEAP32[$this >> 2] | 0;
        $273 = HEAP32[$271 + 4 >> 2] | 0;
        $274 = $273 + 4 | 0;
        $276 = HEAP32[$273 >> 2] | 0;
        HEAP32[$276 + 4 >> 2] = HEAP32[$274 >> 2];
        HEAP32[HEAP32[$274 >> 2] >> 2] = $276;
        $279 = $271 + 8 | 0;
        HEAP32[$279 >> 2] = (HEAP32[$279 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273 + 12 | 0);
        __ZdlPv($273);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($262);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($257);
        __THREW__ = 0;
        invoke_viiii(12, $id_token | 0, $this | 0, 11, 0);
        $284 = __THREW__;
        __THREW__ = 0;
        if ($284 & 1) label = 112; else {
         $286 = $this + 4 | 0;
         $288 = $id_token + 4 | 0;
         __THREW__ = 0;
         $289 = invoke_iii(23, HEAP32[$286 >> 2] | 0, $288 | 0) | 0;
         $290 = __THREW__;
         __THREW__ = 0;
         do if ($290 & 1) {
          $513 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body81$index21Z2D = tempRet0;
          $eh$lpad$body81$indexZ2D = $513;
          label = 115;
         } else {
          __THREW__ = 0;
          $292 = invoke_ii(67, 4) | 0;
          $293 = __THREW__;
          __THREW__ = 0;
          if ($293 & 1) {
           $298 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body81$index21Z2D = tempRet0;
           $eh$lpad$body81$indexZ2D = $298;
           label = 115;
           break;
          }
          HEAP32[$292 >> 2] = $289;
          $295 = HEAP32[$286 >> 2] | 0;
          __THREW__ = 0;
          invoke_vii(40, $24 | 0, $l | 0);
          $296 = __THREW__;
          __THREW__ = 0;
          L340 : do if ($296 & 1) label = 116; else {
           $300 = $24 + 12 | 0;
           $301 = $l + 12 | 0;
           HEAP32[$300 + 0 >> 2] = HEAP32[$301 + 0 >> 2];
           HEAP32[$300 + 4 >> 2] = HEAP32[$301 + 4 >> 2];
           HEAP32[$300 + 8 >> 2] = HEAP32[$301 + 8 >> 2];
           HEAP32[$300 + 12 >> 2] = HEAP32[$301 + 12 >> 2];
           $302 = HEAP32[$286 >> 2] | 0;
           __THREW__ = 0;
           invoke_viii(3, $25 | 0, 33712, 3);
           $303 = __THREW__;
           __THREW__ = 0;
           if ($303 & 1) {
            $517 = ___cxa_find_matching_catch() | 0;
            $$216 = tempRet0;
            $$29 = $517;
           } else {
            __THREW__ = 0;
            $305 = invoke_iii(23, $302 | 0, $25 | 0) | 0;
            $306 = __THREW__;
            __THREW__ = 0;
            do if ($306 & 1) label = 119; else {
             __THREW__ = 0;
             $308 = invoke_ii(67, 56) | 0;
             $309 = __THREW__;
             __THREW__ = 0;
             if ($309 & 1) {
              label = 119;
              break;
             }
             HEAP32[$308 >> 2] = 33968;
             __THREW__ = 0;
             invoke_vii(40, $308 + 4 | 0, $24 | 0);
             $312 = __THREW__;
             __THREW__ = 0;
             if ($312 & 1) {
              $332 = ___cxa_find_matching_catch() | 0;
              $333 = tempRet0;
              __ZdlPv($308);
              $eh$lpad$body88$index31Z2D = $333;
              $eh$lpad$body88$indexZ2D = $332;
              break;
             }
             $314 = $308 + 16 | 0;
             HEAP32[$314 + 0 >> 2] = HEAP32[$300 + 0 >> 2];
             HEAP32[$314 + 4 >> 2] = HEAP32[$300 + 4 >> 2];
             HEAP32[$314 + 8 >> 2] = HEAP32[$300 + 8 >> 2];
             HEAP32[$314 + 12 >> 2] = HEAP32[$300 + 12 >> 2];
             HEAP32[$308 + 32 >> 2] = 20;
             HEAP32[$308 + 36 >> 2] = 0;
             HEAP32[$308 + 40 >> 2] = 0;
             HEAP32[$308 + 44 >> 2] = 0;
             HEAP32[$308 >> 2] = 35336;
             HEAP32[$308 + 48 >> 2] = $305;
             HEAP32[$308 + 52 >> 2] = $305;
             HEAP32[$15 >> 2] = $308;
             $321 = $295 + 16 | 0;
             $322 = HEAP32[$321 >> 2] | 0;
             if ($322 >>> 0 < (HEAP32[$295 + 20 >> 2] | 0) >>> 0) {
              if (!$322) $328 = 0; else {
               HEAP32[$322 >> 2] = $308;
               $328 = HEAP32[$321 >> 2] | 0;
              }
              HEAP32[$321 >> 2] = $328 + 4;
             } else {
              __THREW__ = 0;
              invoke_vii(51, $295 + 12 | 0, $15 | 0);
              $330 = __THREW__;
              __THREW__ = 0;
              if ($330 & 1) {
               label = 119;
               break;
              }
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
             $334 = HEAP32[$286 >> 2] | 0;
             __THREW__ = 0;
             invoke_vii(40, $26 | 0, $210 + 4 | 0);
             $336 = __THREW__;
             __THREW__ = 0;
             if ($336 & 1) {
              label = 116;
              break L340;
             }
             $338 = $26 + 12 | 0;
             $339 = $210 + 16 | 0;
             HEAP32[$338 + 0 >> 2] = HEAP32[$339 + 0 >> 2];
             HEAP32[$338 + 4 >> 2] = HEAP32[$339 + 4 >> 2];
             HEAP32[$338 + 8 >> 2] = HEAP32[$339 + 8 >> 2];
             HEAP32[$338 + 12 >> 2] = HEAP32[$339 + 12 >> 2];
             HEAP32[$27 >> 2] = 0;
             $340 = $27 + 4 | 0;
             HEAP32[$340 >> 2] = 0;
             $341 = $27 + 8 | 0;
             HEAP32[$341 >> 2] = 0;
             __THREW__ = 0;
             $342 = invoke_ii(67, 4) | 0;
             $343 = __THREW__;
             __THREW__ = 0;
             do if ($343 & 1) {
              $351 = ___cxa_find_matching_catch() | 0;
              $352 = tempRet0;
              $353 = HEAP32[$27 >> 2] | 0;
              $355 = $353;
              if ($353) {
               $356 = HEAP32[$340 >> 2] | 0;
               if (($356 | 0) != ($353 | 0)) HEAP32[$340 >> 2] = $356 + (~(($356 + -4 - $355 | 0) >>> 2) << 2);
               __ZdlPv($353);
              }
              $$3 = $351;
              $$317 = $352;
             } else {
              HEAP32[$340 >> 2] = $342;
              HEAP32[$27 >> 2] = $342;
              HEAP32[$341 >> 2] = $342 + 4;
              HEAP32[$342 >> 2] = HEAP32[$292 >> 2];
              HEAP32[$340 >> 2] = (HEAP32[$340 >> 2] | 0) + 4;
              __THREW__ = 0;
              $348 = invoke_iiiii(6, $334 | 0, $26 | 0, $27 | 0, $210 | 0) | 0;
              $349 = __THREW__;
              __THREW__ = 0;
              if ($349 & 1) {
               $521 = ___cxa_find_matching_catch() | 0;
               $522 = tempRet0;
               $523 = HEAP32[$27 >> 2] | 0;
               if (!$523) {
                $$3 = $521;
                $$317 = $522;
                break;
               }
               $526 = HEAP32[$340 >> 2] | 0;
               if (($526 | 0) != ($523 | 0)) HEAP32[$340 >> 2] = $526 + (~(($526 + -4 - $523 | 0) >>> 2) << 2);
               __ZdlPv($523);
               $$3 = $521;
               $$317 = $522;
               break;
              }
              $362 = HEAP32[$27 >> 2] | 0;
              $364 = $362;
              if ($362) {
               $365 = HEAP32[$340 >> 2] | 0;
               if (($365 | 0) != ($362 | 0)) HEAP32[$340 >> 2] = $365 + (~(($365 + -4 - $364 | 0) >>> 2) << 2);
               __ZdlPv($362);
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
              __THREW__ = 0;
              invoke_viiii(12, $28 | 0, $this | 0, 23, 0);
              $371 = __THREW__;
              __THREW__ = 0;
              if ($371 & 1) {
               label = 116;
               break L340;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28 + 16 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28 + 4 | 0);
              __THREW__ = 0;
              $375 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
              $376 = __THREW__;
              __THREW__ = 0;
              if ($376 & 1) {
               label = 116;
               break L340;
              }
              $this$idx$val$idx$val$i108 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
              $378 = $this$idx$val$idx$val$i108 + 8 | 0;
              HEAP32[$maybe_if >> 2] = HEAP32[$378 >> 2];
              $380 = $maybe_if + 4 | 0;
              __THREW__ = 0;
              invoke_vii(40, $380 | 0, $this$idx$val$idx$val$i108 + 12 | 0);
              $382 = __THREW__;
              __THREW__ = 0;
              if ($382 & 1) {
               label = 116;
               break L340;
              }
              HEAP32[$maybe_if >> 2] = HEAP32[$378 >> 2];
              $385 = $maybe_if + 16 | 0;
              __THREW__ = 0;
              invoke_vii(40, $385 | 0, $this$idx$val$idx$val$i108 + 24 | 0);
              $387 = __THREW__;
              __THREW__ = 0;
              if ($387 & 1) {
               $389 = ___cxa_find_matching_catch() | 0;
               $390 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($380);
               $eh$lpad$body111$index26Z2D = $390;
               $eh$lpad$body111$indexZ2D = $389;
               label = 117;
               break L340;
              }
              $391 = $maybe_if + 28 | 0;
              $392 = $this$idx$val$idx$val$i108 + 36 | 0;
              HEAP32[$391 + 0 >> 2] = HEAP32[$392 + 0 >> 2];
              HEAP32[$391 + 4 >> 2] = HEAP32[$392 + 4 >> 2];
              HEAP32[$391 + 8 >> 2] = HEAP32[$392 + 8 >> 2];
              HEAP32[$391 + 12 >> 2] = HEAP32[$392 + 12 >> 2];
              HEAP32[$maybe_if >> 2] = HEAP32[$378 >> 2];
              $394 = HEAP32[$this >> 2] | 0;
              $396 = HEAP32[$394 + 4 >> 2] | 0;
              $397 = $396 + 4 | 0;
              $399 = HEAP32[$396 >> 2] | 0;
              HEAP32[$399 + 4 >> 2] = HEAP32[$397 >> 2];
              HEAP32[HEAP32[$397 >> 2] >> 2] = $399;
              $402 = $394 + 8 | 0;
              HEAP32[$402 >> 2] = (HEAP32[$402 >> 2] | 0) + -1;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($396 + 24 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($396 + 12 | 0);
              __ZdlPv($396);
              $407 = HEAP32[$maybe_if >> 2] | 0;
              L387 : do if (($407 | 0) == 3) {
               $408 = HEAP32[$286 >> 2] | 0;
               __THREW__ = 0;
               invoke_vii(40, $29 | 0, $l | 0);
               $409 = __THREW__;
               __THREW__ = 0;
               if ($409 & 1) {
                label = 128;
                break;
               }
               $411 = $29 + 12 | 0;
               HEAP32[$411 + 0 >> 2] = HEAP32[$301 + 0 >> 2];
               HEAP32[$411 + 4 >> 2] = HEAP32[$301 + 4 >> 2];
               HEAP32[$411 + 8 >> 2] = HEAP32[$301 + 8 >> 2];
               HEAP32[$411 + 12 >> 2] = HEAP32[$301 + 12 >> 2];
               __THREW__ = 0;
               $412 = invoke_iiii(30, $408 | 0, $29 | 0, 35856) | 0;
               $413 = __THREW__;
               __THREW__ = 0;
               if ($413 & 1) {
                $534 = ___cxa_find_matching_catch() | 0;
                $535 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
                $$1210 = $534;
                $$1226 = $535;
                break;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
               $415 = HEAP32[$286 >> 2] | 0;
               __THREW__ = 0;
               invoke_vii(40, $30 | 0, $l | 0);
               $416 = __THREW__;
               __THREW__ = 0;
               if ($416 & 1) {
                label = 128;
                break;
               }
               $418 = $30 + 12 | 0;
               HEAP32[$418 + 0 >> 2] = HEAP32[$301 + 0 >> 2];
               HEAP32[$418 + 4 >> 2] = HEAP32[$301 + 4 >> 2];
               HEAP32[$418 + 8 >> 2] = HEAP32[$301 + 8 >> 2];
               HEAP32[$418 + 12 >> 2] = HEAP32[$301 + 12 >> 2];
               __THREW__ = 0;
               $419 = invoke_ii(67, 56) | 0;
               $420 = __THREW__;
               __THREW__ = 0;
               do if ($420 & 1) label = 131; else {
                HEAP32[$419 >> 2] = 33968;
                __THREW__ = 0;
                invoke_vii(40, $419 + 4 | 0, $30 | 0);
                $423 = __THREW__;
                __THREW__ = 0;
                if ($423 & 1) {
                 $443 = ___cxa_find_matching_catch() | 0;
                 $444 = tempRet0;
                 __ZdlPv($419);
                 $eh$lpad$body122$index43Z2D = $444;
                 $eh$lpad$body122$indexZ2D = $443;
                 break;
                }
                $425 = $419 + 16 | 0;
                HEAP32[$425 + 0 >> 2] = HEAP32[$418 + 0 >> 2];
                HEAP32[$425 + 4 >> 2] = HEAP32[$418 + 4 >> 2];
                HEAP32[$425 + 8 >> 2] = HEAP32[$418 + 8 >> 2];
                HEAP32[$425 + 12 >> 2] = HEAP32[$418 + 12 >> 2];
                HEAP32[$419 + 32 >> 2] = 9;
                HEAP32[$419 + 36 >> 2] = 0;
                HEAP32[$419 + 40 >> 2] = 0;
                HEAP32[$419 + 44 >> 2] = 0;
                HEAP32[$419 >> 2] = 35736;
                HEAP32[$419 + 48 >> 2] = $308;
                HEAP32[$419 + 52 >> 2] = $412;
                HEAP32[$14 >> 2] = $419;
                $432 = $415 + 16 | 0;
                $433 = HEAP32[$432 >> 2] | 0;
                if ($433 >>> 0 < (HEAP32[$415 + 20 >> 2] | 0) >>> 0) {
                 if (!$433) $439 = 0; else {
                  HEAP32[$433 >> 2] = $419;
                  $439 = HEAP32[$432 >> 2] | 0;
                 }
                 HEAP32[$432 >> 2] = $439 + 4;
                } else {
                 __THREW__ = 0;
                 invoke_vii(51, $415 + 12 | 0, $14 | 0);
                 $441 = __THREW__;
                 __THREW__ = 0;
                 if ($441 & 1) {
                  label = 131;
                  break;
                 }
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
                __THREW__ = 0;
                $445 = invoke_ii(67, 8) | 0;
                $446 = __THREW__;
                __THREW__ = 0;
                if ($446 & 1) {
                 $452 = ___cxa_find_matching_catch() | 0;
                 $eh$lpad$body131$index37Z2D = tempRet0;
                 $eh$lpad$body131$indexZ2D = $452;
                 label = 129;
                 break L387;
                }
                HEAP32[$445 >> 2] = $348;
                HEAP32[$445 + 4 >> 2] = $375;
                $449 = HEAP32[$286 >> 2] | 0;
                __THREW__ = 0;
                invoke_vii(40, $31 | 0, $70 | 0);
                $450 = __THREW__;
                __THREW__ = 0;
                if ($450 & 1) {
                 $538 = ___cxa_find_matching_catch() | 0;
                 $$5 = $538;
                 $$519 = tempRet0;
                } else {
                 $456 = $76;
                 $461 = HEAP32[$456 + 4 >> 2] | 0;
                 $462 = $31 + 12 | 0;
                 HEAP32[$462 >> 2] = HEAP32[$456 >> 2];
                 HEAP32[$462 + 4 >> 2] = $461;
                 $467 = $maybe_if + 36 | 0;
                 $472 = HEAP32[$467 + 4 >> 2] | 0;
                 $473 = $31 + 20 | 0;
                 HEAP32[$473 >> 2] = HEAP32[$467 >> 2];
                 HEAP32[$473 + 4 >> 2] = $472;
                 HEAP32[$32 >> 2] = 0;
                 $477 = $32 + 4 | 0;
                 HEAP32[$477 >> 2] = 0;
                 $478 = $32 + 8 | 0;
                 HEAP32[$478 >> 2] = 0;
                 __THREW__ = 0;
                 $479 = invoke_ii(67, 8) | 0;
                 $480 = __THREW__;
                 __THREW__ = 0;
                 do if ($480 & 1) {
                  $491 = ___cxa_find_matching_catch() | 0;
                  $492 = tempRet0;
                  $493 = HEAP32[$32 >> 2] | 0;
                  $495 = $493;
                  if ($493) {
                   $496 = HEAP32[$477 >> 2] | 0;
                   if (($496 | 0) != ($493 | 0)) HEAP32[$477 >> 2] = $496 + (~(($496 + -4 - $495 | 0) >>> 2) << 2);
                   __ZdlPv($493);
                  }
                  $$4 = $491;
                  $$418 = $492;
                 } else {
                  HEAP32[$477 >> 2] = $479;
                  HEAP32[$32 >> 2] = $479;
                  HEAP32[$478 >> 2] = $479 + 8;
                  HEAP32[$479 >> 2] = HEAP32[$445 >> 2];
                  $484 = (HEAP32[$477 >> 2] | 0) + 4 | 0;
                  HEAP32[$477 >> 2] = $484;
                  HEAP32[$484 >> 2] = HEAP32[$445 + 4 >> 2];
                  HEAP32[$477 >> 2] = (HEAP32[$477 >> 2] | 0) + 4;
                  __THREW__ = 0;
                  $488 = invoke_iiiii(7, $449 | 0, $31 | 0, $419 | 0, $32 | 0) | 0;
                  $489 = __THREW__;
                  __THREW__ = 0;
                  if ($489 & 1) {
                   $540 = ___cxa_find_matching_catch() | 0;
                   $541 = tempRet0;
                   $542 = HEAP32[$32 >> 2] | 0;
                   if (!$542) {
                    $$4 = $540;
                    $$418 = $541;
                    break;
                   }
                   $545 = HEAP32[$477 >> 2] | 0;
                   if (($545 | 0) != ($542 | 0)) HEAP32[$477 >> 2] = $545 + (~(($545 + -4 - $542 | 0) >>> 2) << 2);
                   __ZdlPv($542);
                   $$4 = $540;
                   $$418 = $541;
                   break;
                  }
                  $502 = HEAP32[$32 >> 2] | 0;
                  $504 = $502;
                  if ($502) {
                   $505 = HEAP32[$477 >> 2] | 0;
                   if (($505 | 0) != ($502 | 0)) HEAP32[$477 >> 2] = $505 + (~(($505 + -4 - $504 | 0) >>> 2) << 2);
                   __ZdlPv($502);
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
                  __ZdlPv($445);
                  $$pn = $488;
                  label = 221;
                  break L387;
                 } while (0);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
                 $$5 = $$4;
                 $$519 = $$418;
                }
                __ZdlPv($445);
                $$1210 = $$5;
                $$1226 = $$519;
                break L387;
               } while (0);
               if ((label | 0) == 131) {
                $536 = ___cxa_find_matching_catch() | 0;
                $eh$lpad$body122$index43Z2D = tempRet0;
                $eh$lpad$body122$indexZ2D = $536;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
               $$1210 = $eh$lpad$body122$indexZ2D;
               $$1226 = $eh$lpad$body122$index43Z2D;
              } else if (($407 | 0) == 20) {
               __THREW__ = 0;
               $551 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
               $552 = __THREW__;
               __THREW__ = 0;
               if ($552 & 1) {
                label = 128;
                break;
               }
               __THREW__ = 0;
               invoke_viiii(12, $last | 0, $this | 0, 3, 0);
               $554 = __THREW__;
               __THREW__ = 0;
               if ($554 & 1) {
                label = 128;
                break;
               }
               $556 = HEAP32[$286 >> 2] | 0;
               __THREW__ = 0;
               invoke_vii(40, $33 | 0, $551 + 4 | 0);
               $558 = __THREW__;
               __THREW__ = 0;
               L472 : do if ($558 & 1) label = 181; else {
                $560 = $33 + 12 | 0;
                $561 = $551 + 16 | 0;
                HEAP32[$560 + 0 >> 2] = HEAP32[$561 + 0 >> 2];
                HEAP32[$560 + 4 >> 2] = HEAP32[$561 + 4 >> 2];
                HEAP32[$560 + 8 >> 2] = HEAP32[$561 + 8 >> 2];
                HEAP32[$560 + 12 >> 2] = HEAP32[$561 + 12 >> 2];
                HEAP32[$34 >> 2] = 0;
                $562 = $34 + 4 | 0;
                HEAP32[$562 >> 2] = 0;
                $563 = $34 + 8 | 0;
                HEAP32[$563 >> 2] = 0;
                __THREW__ = 0;
                $564 = invoke_ii(67, 4) | 0;
                $565 = __THREW__;
                __THREW__ = 0;
                do if ($565 & 1) {
                 $573 = ___cxa_find_matching_catch() | 0;
                 $574 = tempRet0;
                 $575 = HEAP32[$34 >> 2] | 0;
                 $577 = $575;
                 if ($575) {
                  $578 = HEAP32[$562 >> 2] | 0;
                  if (($578 | 0) != ($575 | 0)) HEAP32[$562 >> 2] = $578 + (~(($578 + -4 - $577 | 0) >>> 2) << 2);
                  __ZdlPv($575);
                 }
                 $$6 = $573;
                 $$620 = $574;
                } else {
                 HEAP32[$562 >> 2] = $564;
                 HEAP32[$34 >> 2] = $564;
                 HEAP32[$563 >> 2] = $564 + 4;
                 HEAP32[$564 >> 2] = HEAP32[$292 >> 2];
                 HEAP32[$562 >> 2] = (HEAP32[$562 >> 2] | 0) + 4;
                 __THREW__ = 0;
                 $570 = invoke_iiiii(6, $556 | 0, $33 | 0, $34 | 0, $551 | 0) | 0;
                 $571 = __THREW__;
                 __THREW__ = 0;
                 if ($571 & 1) {
                  $704 = ___cxa_find_matching_catch() | 0;
                  $705 = tempRet0;
                  $706 = HEAP32[$34 >> 2] | 0;
                  if (!$706) {
                   $$6 = $704;
                   $$620 = $705;
                   break;
                  }
                  $709 = HEAP32[$562 >> 2] | 0;
                  if (($709 | 0) != ($706 | 0)) HEAP32[$562 >> 2] = $709 + (~(($709 + -4 - $706 | 0) >>> 2) << 2);
                  __ZdlPv($706);
                  $$6 = $704;
                  $$620 = $705;
                  break;
                 }
                 $584 = HEAP32[$34 >> 2] | 0;
                 $586 = $584;
                 if ($584) {
                  $587 = HEAP32[$562 >> 2] | 0;
                  if (($587 | 0) != ($584 | 0)) HEAP32[$562 >> 2] = $587 + (~(($587 + -4 - $586 | 0) >>> 2) << 2);
                  __ZdlPv($584);
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
                 $593 = HEAP32[$286 >> 2] | 0;
                 __THREW__ = 0;
                 invoke_vii(40, $35 | 0, $l | 0);
                 $594 = __THREW__;
                 __THREW__ = 0;
                 if ($594 & 1) {
                  label = 181;
                  break L472;
                 }
                 $596 = $35 + 12 | 0;
                 HEAP32[$596 + 0 >> 2] = HEAP32[$301 + 0 >> 2];
                 HEAP32[$596 + 4 >> 2] = HEAP32[$301 + 4 >> 2];
                 HEAP32[$596 + 8 >> 2] = HEAP32[$301 + 8 >> 2];
                 HEAP32[$596 + 12 >> 2] = HEAP32[$301 + 12 >> 2];
                 __THREW__ = 0;
                 $597 = invoke_iiii(30, $593 | 0, $35 | 0, 35864) | 0;
                 $598 = __THREW__;
                 __THREW__ = 0;
                 if ($598 & 1) {
                  $715 = ___cxa_find_matching_catch() | 0;
                  $716 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
                  $$9 = $715;
                  $$923 = $716;
                  break L472;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
                 $600 = HEAP32[$286 >> 2] | 0;
                 __THREW__ = 0;
                 invoke_vii(40, $36 | 0, $l | 0);
                 $601 = __THREW__;
                 __THREW__ = 0;
                 if ($601 & 1) {
                  label = 181;
                  break L472;
                 }
                 $603 = $36 + 12 | 0;
                 HEAP32[$603 + 0 >> 2] = HEAP32[$301 + 0 >> 2];
                 HEAP32[$603 + 4 >> 2] = HEAP32[$301 + 4 >> 2];
                 HEAP32[$603 + 8 >> 2] = HEAP32[$301 + 8 >> 2];
                 HEAP32[$603 + 12 >> 2] = HEAP32[$301 + 12 >> 2];
                 __THREW__ = 0;
                 $604 = invoke_ii(67, 56) | 0;
                 $605 = __THREW__;
                 __THREW__ = 0;
                 do if ($605 & 1) label = 190; else {
                  HEAP32[$604 >> 2] = 33968;
                  __THREW__ = 0;
                  invoke_vii(40, $604 + 4 | 0, $36 | 0);
                  $608 = __THREW__;
                  __THREW__ = 0;
                  if ($608 & 1) {
                   $628 = ___cxa_find_matching_catch() | 0;
                   $629 = tempRet0;
                   __ZdlPv($604);
                   $eh$lpad$body199$index53Z2D = $629;
                   $eh$lpad$body199$indexZ2D = $628;
                   break;
                  }
                  $610 = $604 + 16 | 0;
                  HEAP32[$610 + 0 >> 2] = HEAP32[$603 + 0 >> 2];
                  HEAP32[$610 + 4 >> 2] = HEAP32[$603 + 4 >> 2];
                  HEAP32[$610 + 8 >> 2] = HEAP32[$603 + 8 >> 2];
                  HEAP32[$610 + 12 >> 2] = HEAP32[$603 + 12 >> 2];
                  HEAP32[$604 + 32 >> 2] = 9;
                  HEAP32[$604 + 36 >> 2] = 0;
                  HEAP32[$604 + 40 >> 2] = 0;
                  HEAP32[$604 + 44 >> 2] = 0;
                  HEAP32[$604 >> 2] = 35736;
                  HEAP32[$604 + 48 >> 2] = $308;
                  HEAP32[$604 + 52 >> 2] = $597;
                  HEAP32[$13 >> 2] = $604;
                  $617 = $600 + 16 | 0;
                  $618 = HEAP32[$617 >> 2] | 0;
                  if ($618 >>> 0 < (HEAP32[$600 + 20 >> 2] | 0) >>> 0) {
                   if (!$618) $624 = 0; else {
                    HEAP32[$618 >> 2] = $604;
                    $624 = HEAP32[$617 >> 2] | 0;
                   }
                   HEAP32[$617 >> 2] = $624 + 4;
                  } else {
                   __THREW__ = 0;
                   invoke_vii(51, $600 + 12 | 0, $13 | 0);
                   $626 = __THREW__;
                   __THREW__ = 0;
                   if ($626 & 1) {
                    label = 190;
                    break;
                   }
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
                  __THREW__ = 0;
                  $630 = invoke_ii(67, 12) | 0;
                  $631 = __THREW__;
                  __THREW__ = 0;
                  if ($631 & 1) {
                   $638 = ___cxa_find_matching_catch() | 0;
                   $eh$lpad$body212$index48Z2D = tempRet0;
                   $eh$lpad$body212$indexZ2D = $638;
                   label = 182;
                   break L472;
                  }
                  HEAP32[$630 >> 2] = $570;
                  HEAP32[$630 + 4 >> 2] = $348;
                  HEAP32[$630 + 8 >> 2] = $375;
                  $635 = HEAP32[$286 >> 2] | 0;
                  __THREW__ = 0;
                  invoke_vii(40, $37 | 0, $70 | 0);
                  $636 = __THREW__;
                  __THREW__ = 0;
                  if ($636 & 1) {
                   $719 = ___cxa_find_matching_catch() | 0;
                   $$8 = $719;
                   $$822 = tempRet0;
                  } else {
                   $642 = $76;
                   $647 = HEAP32[$642 + 4 >> 2] | 0;
                   $648 = $37 + 12 | 0;
                   HEAP32[$648 >> 2] = HEAP32[$642 >> 2];
                   HEAP32[$648 + 4 >> 2] = $647;
                   $653 = $last + 36 | 0;
                   $658 = HEAP32[$653 + 4 >> 2] | 0;
                   $659 = $37 + 20 | 0;
                   HEAP32[$659 >> 2] = HEAP32[$653 >> 2];
                   HEAP32[$659 + 4 >> 2] = $658;
                   HEAP32[$38 >> 2] = 0;
                   $663 = $38 + 4 | 0;
                   HEAP32[$663 >> 2] = 0;
                   $664 = $38 + 8 | 0;
                   HEAP32[$664 >> 2] = 0;
                   __THREW__ = 0;
                   $665 = invoke_ii(67, 12) | 0;
                   $666 = __THREW__;
                   __THREW__ = 0;
                   do if ($666 & 1) {
                    $680 = ___cxa_find_matching_catch() | 0;
                    $681 = tempRet0;
                    $682 = HEAP32[$38 >> 2] | 0;
                    $684 = $682;
                    if ($682) {
                     $685 = HEAP32[$663 >> 2] | 0;
                     if (($685 | 0) != ($682 | 0)) HEAP32[$663 >> 2] = $685 + (~(($685 + -4 - $684 | 0) >>> 2) << 2);
                     __ZdlPv($682);
                    }
                    $$7 = $680;
                    $$721 = $681;
                   } else {
                    HEAP32[$663 >> 2] = $665;
                    HEAP32[$38 >> 2] = $665;
                    HEAP32[$664 >> 2] = $665 + 12;
                    HEAP32[$665 >> 2] = HEAP32[$630 >> 2];
                    $670 = (HEAP32[$663 >> 2] | 0) + 4 | 0;
                    HEAP32[$663 >> 2] = $670;
                    $671 = $630 + 4 | 0;
                    HEAP32[$670 >> 2] = HEAP32[$671 >> 2];
                    $673 = (HEAP32[$663 >> 2] | 0) + 4 | 0;
                    HEAP32[$663 >> 2] = $673;
                    HEAP32[$673 >> 2] = HEAP32[$671 + 4 >> 2];
                    HEAP32[$663 >> 2] = (HEAP32[$663 >> 2] | 0) + 4;
                    __THREW__ = 0;
                    $677 = invoke_iiiii(7, $635 | 0, $37 | 0, $604 | 0, $38 | 0) | 0;
                    $678 = __THREW__;
                    __THREW__ = 0;
                    if ($678 & 1) {
                     $721 = ___cxa_find_matching_catch() | 0;
                     $722 = tempRet0;
                     $723 = HEAP32[$38 >> 2] | 0;
                     if (!$723) {
                      $$7 = $721;
                      $$721 = $722;
                      break;
                     }
                     $726 = HEAP32[$663 >> 2] | 0;
                     if (($726 | 0) != ($723 | 0)) HEAP32[$663 >> 2] = $726 + (~(($726 + -4 - $723 | 0) >>> 2) << 2);
                     __ZdlPv($723);
                     $$7 = $721;
                     $$721 = $722;
                     break;
                    }
                    $691 = HEAP32[$38 >> 2] | 0;
                    $693 = $691;
                    if ($691) {
                     $694 = HEAP32[$663 >> 2] | 0;
                     if (($694 | 0) != ($691 | 0)) HEAP32[$663 >> 2] = $694 + (~(($694 + -4 - $693 | 0) >>> 2) << 2);
                     __ZdlPv($691);
                    }
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
                    __ZdlPv($630);
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 16 | 0);
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 4 | 0);
                    $$pn = $677;
                    label = 221;
                    break L387;
                   } while (0);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
                   $$8 = $$7;
                   $$822 = $$721;
                  }
                  __ZdlPv($630);
                  $$9 = $$8;
                  $$923 = $$822;
                  break L472;
                 } while (0);
                 if ((label | 0) == 190) {
                  $717 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body199$index53Z2D = tempRet0;
                  $eh$lpad$body199$indexZ2D = $717;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
                 $$9 = $eh$lpad$body199$indexZ2D;
                 $$923 = $eh$lpad$body199$index53Z2D;
                 break L472;
                } while (0);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
                $$9 = $$6;
                $$923 = $$620;
               } while (0);
               if ((label | 0) == 181) {
                $702 = ___cxa_find_matching_catch() | 0;
                $eh$lpad$body212$index48Z2D = tempRet0;
                $eh$lpad$body212$indexZ2D = $702;
                label = 182;
               }
               if ((label | 0) == 182) {
                $$9 = $eh$lpad$body212$indexZ2D;
                $$923 = $eh$lpad$body212$index48Z2D;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 16 | 0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 4 | 0);
               $$1210 = $$9;
               $$1226 = $$923;
              } else {
               $734 = $ss + 64 | 0;
               $735 = $ss + 8 | 0;
               HEAP32[$735 >> 2] = 592;
               $736 = $ss + 12 | 0;
               HEAP32[$ss >> 2] = 740;
               HEAP32[$734 >> 2] = 760;
               HEAP32[$ss + 4 >> 2] = 0;
               __THREW__ = 0;
               invoke_vii(41, $ss + 64 | 0, $736 | 0);
               $739 = __THREW__;
               __THREW__ = 0;
               if ($739 & 1) {
                $751 = ___cxa_find_matching_catch() | 0;
                $$0$i = tempRet0;
                $$01$i = $751;
               } else {
                HEAP32[$ss + 136 >> 2] = 0;
                HEAP32[$ss + 140 >> 2] = -1;
                HEAP32[$ss >> 2] = 572;
                HEAP32[$734 >> 2] = 612;
                HEAP32[$735 >> 2] = 592;
                __THREW__ = 0;
                invoke_vi(177, $736 | 0);
                $743 = __THREW__;
                __THREW__ = 0;
                do if ($743 & 1) {
                 $753 = ___cxa_find_matching_catch() | 0;
                 $eh$lpad$body$i$index58Z2D = tempRet0;
                 $eh$lpad$body$i$indexZ2D = $753;
                } else {
                 HEAP32[$736 >> 2] = 904;
                 $745 = $ss + 44 | 0;
                 HEAP32[$745 + 0 >> 2] = 0;
                 HEAP32[$745 + 4 >> 2] = 0;
                 HEAP32[$745 + 8 >> 2] = 0;
                 HEAP32[$745 + 12 >> 2] = 0;
                 HEAP32[$ss + 60 >> 2] = 24;
                 HEAP32[$12 + 0 >> 2] = 0;
                 HEAP32[$12 + 4 >> 2] = 0;
                 HEAP32[$12 + 8 >> 2] = 0;
                 __THREW__ = 0;
                 invoke_vii(42, $736 | 0, $12 | 0);
                 $747 = __THREW__;
                 __THREW__ = 0;
                 if ($747 & 1) {
                  $749 = ___cxa_find_matching_catch() | 0;
                  $750 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($745);
                  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($736);
                  $eh$lpad$body$i$index58Z2D = $750;
                  $eh$lpad$body$i$indexZ2D = $749;
                  break;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
                 __THREW__ = 0;
                 $755 = invoke_iiii(25, $735 | 0, 35880, 40) | 0;
                 $756 = __THREW__;
                 __THREW__ = 0;
                 L396 : do if ($756 & 1) label = 216; else {
                  __THREW__ = 0;
                  invoke_vii(52, $755 | 0, $maybe_if | 0);
                  $758 = __THREW__;
                  __THREW__ = 0;
                  if ($758 & 1) {
                   label = 216;
                   break;
                  }
                  $760 = ___cxa_allocate_exception(40) | 0;
                  __THREW__ = 0;
                  invoke_vii(43, $39 | 0, $736 | 0);
                  $761 = __THREW__;
                  __THREW__ = 0;
                  L399 : do if ($761 & 1) {
                   $775 = ___cxa_find_matching_catch() | 0;
                   $$1024488 = tempRet0;
                   $$10489 = $775;
                  } else {
                   __THREW__ = 0;
                   invoke_vii(40, $760 | 0, $240 | 0);
                   $763 = __THREW__;
                   __THREW__ = 0;
                   do if ($763 & 1) $$05 = 1; else {
                    $765 = $760 + 12 | 0;
                    HEAP32[$765 + 0 >> 2] = HEAP32[$141 + 0 >> 2];
                    HEAP32[$765 + 4 >> 2] = HEAP32[$141 + 4 >> 2];
                    HEAP32[$765 + 8 >> 2] = HEAP32[$141 + 8 >> 2];
                    HEAP32[$765 + 12 >> 2] = HEAP32[$141 + 12 >> 2];
                    __THREW__ = 0;
                    invoke_vii(40, $760 + 28 | 0, $39 | 0);
                    $767 = __THREW__;
                    __THREW__ = 0;
                    if ($767 & 1) {
                     $769 = ___cxa_find_matching_catch() | 0;
                     $770 = tempRet0;
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($760);
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
                     $$1024488 = $770;
                     $$10489 = $769;
                     break L399;
                    }
                    __THREW__ = 0;
                    invoke_viii(4, $760 | 0, 48, 176);
                    $771 = __THREW__;
                    __THREW__ = 0;
                    if ($771 & 1) {
                     $$05 = 0;
                     break;
                    }
                   } while (0);
                   $777 = ___cxa_find_matching_catch() | 0;
                   $778 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
                   if ($$05) {
                    $$1024488 = $778;
                    $$10489 = $777;
                   } else {
                    $$11 = $777;
                    $$1125 = $778;
                    break L396;
                   }
                  } while (0);
                  ___cxa_free_exception($760 | 0);
                  $$11 = $$10489;
                  $$1125 = $$1024488;
                 } while (0);
                 if ((label | 0) == 216) {
                  $773 = ___cxa_find_matching_catch() | 0;
                  $$11 = $773;
                  $$1125 = tempRet0;
                 }
                 HEAP32[$ss >> 2] = 572;
                 HEAP32[$734 >> 2] = 612;
                 HEAP32[$735 >> 2] = 592;
                 HEAP32[$736 >> 2] = 904;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($745);
                 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($736);
                 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($734);
                 $$1210 = $$11;
                 $$1226 = $$1125;
                 break L387;
                } while (0);
                $$0$i = $eh$lpad$body$i$index58Z2D;
                $$01$i = $eh$lpad$body$i$indexZ2D;
               }
               __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($734);
               $eh$lpad$body131$index37Z2D = $$0$i;
               $eh$lpad$body131$indexZ2D = $$01$i;
               label = 129;
              } while (0);
              if ((label | 0) == 128) {
               $532 = ___cxa_find_matching_catch() | 0;
               $eh$lpad$body131$index37Z2D = tempRet0;
               $eh$lpad$body131$indexZ2D = $532;
               label = 129;
              } else if ((label | 0) == 221) {
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($385);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($380);
               __ZdlPv($292);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id_token + 16 | 0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($288);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
               $$12 = $$pn;
               label = 327;
               break L163;
              }
              if ((label | 0) == 129) {
               $$1210 = $eh$lpad$body131$indexZ2D;
               $$1226 = $eh$lpad$body131$index37Z2D;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($385);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($380);
              $$13 = $$1210;
              $$1327 = $$1226;
              break L340;
             } while (0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
             $$13 = $$3;
             $$1327 = $$317;
             break L340;
            } while (0);
            if ((label | 0) == 119) {
             $519 = ___cxa_find_matching_catch() | 0;
             $eh$lpad$body88$index31Z2D = tempRet0;
             $eh$lpad$body88$indexZ2D = $519;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
            $$216 = $eh$lpad$body88$index31Z2D;
            $$29 = $eh$lpad$body88$indexZ2D;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
           $$13 = $$29;
           $$1327 = $$216;
          } while (0);
          if ((label | 0) == 116) {
           $515 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body111$index26Z2D = tempRet0;
           $eh$lpad$body111$indexZ2D = $515;
           label = 117;
          }
          if ((label | 0) == 117) {
           $$13 = $eh$lpad$body111$indexZ2D;
           $$1327 = $eh$lpad$body111$index26Z2D;
          }
          __ZdlPv($292);
          $$1411 = $$13;
          $$1428 = $$1327;
         } while (0);
         if ((label | 0) == 115) {
          $$1411 = $eh$lpad$body81$indexZ2D;
          $$1428 = $eh$lpad$body81$index21Z2D;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id_token + 16 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($288);
         $$15 = $$1411;
         $$1529 = $$1428;
        }
       } while (0);
       if ((label | 0) == 112) {
        $511 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body78$index16Z2D = tempRet0;
        $eh$lpad$body78$indexZ2D = $511;
        label = 113;
       }
       if ((label | 0) == 113) {
        $$15 = $eh$lpad$body78$indexZ2D;
        $$1529 = $eh$lpad$body78$index16Z2D;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
       $$20 = $$15;
       $$2034 = $$1529;
      }
     }
    } while (0);
    if ((label | 0) == 32) {
     $206 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body60$index10Z2D = tempRet0;
     $eh$lpad$body60$indexZ2D = $206;
     label = 33;
    } else if ((label | 0) == 327) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
     $$2 = $$12;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    }
    if ((label | 0) == 33) {
     $$20 = $eh$lpad$body60$indexZ2D;
     $$2034 = $eh$lpad$body60$index10Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
    $$28 = $$20;
    $$2842 = $$2034;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 22:
  {
   __THREW__ = 0;
   invoke_viiii(12, $file3 | 0, $this | 0, 14, 0);
   $1423 = __THREW__;
   __THREW__ = 0;
   if ($1423 & 1) label = 20; else {
    $1426 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $57 | 0, $70 | 0);
    $1427 = __THREW__;
    __THREW__ = 0;
    if ($1427 & 1) {
     $1494 = ___cxa_find_matching_catch() | 0;
     $$25 = $1494;
     $$2539 = tempRet0;
     $$pre$phi519Z2D = $file3 + 4 | 0;
    } else {
     $1430 = $57 + 12 | 0;
     $1431 = $76;
     $1436 = HEAP32[$1431 + 4 >> 2] | 0;
     $1437 = $1430;
     HEAP32[$1437 >> 2] = HEAP32[$1431 >> 2];
     HEAP32[$1437 + 4 >> 2] = $1436;
     $1442 = $file3 + 36 | 0;
     $1447 = HEAP32[$1442 + 4 >> 2] | 0;
     $1448 = $57 + 20 | 0;
     HEAP32[$1448 >> 2] = HEAP32[$1442 >> 2];
     HEAP32[$1448 + 4 >> 2] = $1447;
     $1452 = $file3 + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $58 | 0, $1452 | 0);
     $1453 = __THREW__;
     __THREW__ = 0;
     if ($1453 & 1) {
      $1496 = ___cxa_find_matching_catch() | 0;
      $$24 = $1496;
      $$2438 = tempRet0;
     } else {
      __THREW__ = 0;
      $1455 = invoke_ii(67, 60) | 0;
      $1456 = __THREW__;
      __THREW__ = 0;
      L595 : do if ($1456 & 1) label = 436; else {
       HEAP32[$1455 >> 2] = 33968;
       $1458 = $1455 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $1458 | 0, $57 | 0);
       $1459 = __THREW__;
       __THREW__ = 0;
       do if ($1459 & 1) {
        $1491 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body466$index113Z2D = tempRet0;
        $eh$lpad$body466$indexZ2D = $1491;
       } else {
        $1461 = $1455 + 16 | 0;
        HEAP32[$1461 + 0 >> 2] = HEAP32[$1430 + 0 >> 2];
        HEAP32[$1461 + 4 >> 2] = HEAP32[$1430 + 4 >> 2];
        HEAP32[$1461 + 8 >> 2] = HEAP32[$1430 + 8 >> 2];
        HEAP32[$1461 + 12 >> 2] = HEAP32[$1430 + 12 >> 2];
        HEAP32[$1455 + 32 >> 2] = 8;
        $1463 = $1455 + 36 | 0;
        HEAP32[$1463 >> 2] = 0;
        $1464 = $1455 + 40 | 0;
        HEAP32[$1464 >> 2] = 0;
        HEAP32[$1455 + 44 >> 2] = 0;
        HEAP32[$1455 >> 2] = 36056;
        __THREW__ = 0;
        invoke_vii(40, $1455 + 48 | 0, $58 | 0);
        $1467 = __THREW__;
        __THREW__ = 0;
        if ($1467 & 1) {
         $1469 = ___cxa_find_matching_catch() | 0;
         $1470 = tempRet0;
         HEAP32[$1455 >> 2] = 33968;
         $1471 = HEAP32[$1463 >> 2] | 0;
         $1473 = $1471;
         if ($1471) {
          $1474 = HEAP32[$1464 >> 2] | 0;
          if (($1474 | 0) != ($1471 | 0)) HEAP32[$1464 >> 2] = $1474 + (~(($1474 + -4 - $1473 | 0) >>> 2) << 2);
          __ZdlPv($1471);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1458);
         $eh$lpad$body466$index113Z2D = $1470;
         $eh$lpad$body466$indexZ2D = $1469;
         break;
        }
        HEAP32[$5 >> 2] = $1455;
        $1480 = $1426 + 16 | 0;
        $1481 = HEAP32[$1480 >> 2] | 0;
        if ($1481 >>> 0 < (HEAP32[$1426 + 20 >> 2] | 0) >>> 0) {
         if (!$1481) $1487 = 0; else {
          HEAP32[$1481 >> 2] = $1455;
          $1487 = HEAP32[$1480 >> 2] | 0;
         }
         HEAP32[$1480 >> 2] = $1487 + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(51, $1426 + 12 | 0, $5 | 0);
         $1489 = __THREW__;
         __THREW__ = 0;
         if ($1489 & 1) {
          label = 436;
          break L595;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file3 + 16 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1452);
        $$2 = $1455;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
        STACKTOP = sp;
        return $$2 | 0;
       } while (0);
       __ZdlPv($1455);
       $eh$lpad$body408$index118Z2D = $eh$lpad$body466$index113Z2D;
       $eh$lpad$body408$indexZ2D = $eh$lpad$body466$indexZ2D;
      } while (0);
      if ((label | 0) == 436) {
       $1498 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body408$index118Z2D = tempRet0;
       $eh$lpad$body408$indexZ2D = $1498;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
      $$24 = $eh$lpad$body408$indexZ2D;
      $$2438 = $eh$lpad$body408$index118Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
     $$25 = $$24;
     $$2539 = $$2438;
     $$pre$phi519Z2D = $1452;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file3 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phi519Z2D);
    $$28 = $$25;
    $$2842 = $$2539;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 6:
  {
   if (!$obj_level) {
    $1502 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $59 | 0, 35976, 26);
    $1503 = __THREW__;
    __THREW__ = 0;
    do if ($1503 & 1) {
     $1515 = ___cxa_find_matching_catch() | 0;
     $$2640496 = tempRet0;
     $$26497 = $1515;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $1502 | 0, $70 | 0);
     $1505 = __THREW__;
     __THREW__ = 0;
     if ($1505 & 1) $$0 = 1; else {
      $1507 = $1502 + 12 | 0;
      HEAP32[$1507 + 0 >> 2] = HEAP32[$76 + 0 >> 2];
      HEAP32[$1507 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
      HEAP32[$1507 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
      HEAP32[$1507 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1502 + 28 | 0, $59 | 0);
      $1509 = __THREW__;
      __THREW__ = 0;
      if ($1509 & 1) {
       $1511 = ___cxa_find_matching_catch() | 0;
       $1512 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1502);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
       $$2640496 = $1512;
       $$26497 = $1511;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $1502 | 0, 48, 176);
      $1513 = __THREW__;
      __THREW__ = 0;
      if ($1513 & 1) $$0 = 0; else {}
     }
     $1517 = ___cxa_find_matching_catch() | 0;
     $1518 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     if ($$0) {
      $$2640496 = $1518;
      $$26497 = $1517;
     } else {
      $$28 = $1517;
      $$2842 = $1518;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
      ___resumeException($$28 | 0);
     }
    } while (0);
    ___cxa_free_exception($1502 | 0);
    $$28 = $$26497;
    $$2842 = $$2640496;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   $1519 = $this + 4 | 0;
   $1520 = HEAP32[$1519 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $60 | 0, $70 | 0);
   $1521 = __THREW__;
   __THREW__ = 0;
   if ($1521 & 1) label = 20; else {
    $1524 = $60 + 12 | 0;
    $1525 = $76;
    $1530 = HEAP32[$1525 + 4 >> 2] | 0;
    $1531 = $1524;
    HEAP32[$1531 >> 2] = HEAP32[$1525 >> 2];
    HEAP32[$1531 + 4 >> 2] = $1530;
    $1536 = $tok + 36 | 0;
    $1541 = HEAP32[$1536 + 4 >> 2] | 0;
    $1542 = $60 + 20 | 0;
    HEAP32[$1542 >> 2] = HEAP32[$1536 >> 2];
    HEAP32[$1542 + 4 >> 2] = $1541;
    $1546 = HEAP32[$1519 >> 2] | 0;
    __THREW__ = 0;
    invoke_viii(3, $61 | 0, 35360, 1);
    $1547 = __THREW__;
    __THREW__ = 0;
    if ($1547 & 1) {
     $1578 = ___cxa_find_matching_catch() | 0;
     $$27 = $1578;
     $$2741 = tempRet0;
    } else {
     __THREW__ = 0;
     $1549 = invoke_iii(23, $1546 | 0, $61 | 0) | 0;
     $1550 = __THREW__;
     __THREW__ = 0;
     do if ($1550 & 1) label = 462; else {
      __THREW__ = 0;
      $1552 = invoke_ii(67, 56) | 0;
      $1553 = __THREW__;
      __THREW__ = 0;
      if ($1553 & 1) label = 462; else {
       HEAP32[$1552 >> 2] = 33968;
       __THREW__ = 0;
       invoke_vii(40, $1552 + 4 | 0, $60 | 0);
       $1556 = __THREW__;
       __THREW__ = 0;
       if ($1556 & 1) {
        $1576 = ___cxa_find_matching_catch() | 0;
        $1577 = tempRet0;
        __ZdlPv($1552);
        $eh$lpad$body424$index123Z2D = $1577;
        $eh$lpad$body424$indexZ2D = $1576;
        break;
       }
       $1558 = $1552 + 16 | 0;
       HEAP32[$1558 + 0 >> 2] = HEAP32[$1524 + 0 >> 2];
       HEAP32[$1558 + 4 >> 2] = HEAP32[$1524 + 4 >> 2];
       HEAP32[$1558 + 8 >> 2] = HEAP32[$1524 + 8 >> 2];
       HEAP32[$1558 + 12 >> 2] = HEAP32[$1524 + 12 >> 2];
       HEAP32[$1552 + 32 >> 2] = 20;
       HEAP32[$1552 + 36 >> 2] = 0;
       HEAP32[$1552 + 40 >> 2] = 0;
       HEAP32[$1552 + 44 >> 2] = 0;
       HEAP32[$1552 >> 2] = 35336;
       HEAP32[$1552 + 48 >> 2] = $1549;
       HEAP32[$1552 + 52 >> 2] = $1549;
       HEAP32[$4 >> 2] = $1552;
       $1565 = $1520 + 16 | 0;
       $1566 = HEAP32[$1565 >> 2] | 0;
       if ($1566 >>> 0 < (HEAP32[$1520 + 20 >> 2] | 0) >>> 0) {
        if (!$1566) $1572 = 0; else {
         HEAP32[$1566 >> 2] = $1552;
         $1572 = HEAP32[$1565 >> 2] | 0;
        }
        HEAP32[$1565 >> 2] = $1572 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $1520 + 12 | 0, $4 | 0);
        $1574 = __THREW__;
        __THREW__ = 0;
        if ($1574 & 1) {
         label = 462;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
       $$2 = $1552;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
       STACKTOP = sp;
       return $$2 | 0;
      }
     } while (0);
     if ((label | 0) == 462) {
      $1580 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body424$index123Z2D = tempRet0;
      $eh$lpad$body424$indexZ2D = $1580;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     $$27 = $eh$lpad$body424$indexZ2D;
     $$2741 = $eh$lpad$body424$index123Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
    $$28 = $$27;
    $$2842 = $$2741;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 11:
  {
   $1582 = $this + 4 | 0;
   $1583 = HEAP32[$1582 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $62 | 0, $70 | 0);
   $1584 = __THREW__;
   __THREW__ = 0;
   if ($1584 & 1) label = 20; else {
    $1587 = $62 + 12 | 0;
    $1588 = $76;
    $1593 = HEAP32[$1588 + 4 >> 2] | 0;
    $1594 = $1587;
    HEAP32[$1594 >> 2] = HEAP32[$1588 >> 2];
    HEAP32[$1594 + 4 >> 2] = $1593;
    $1599 = $tok + 36 | 0;
    $1604 = HEAP32[$1599 + 4 >> 2] | 0;
    $1605 = $62 + 20 | 0;
    HEAP32[$1605 >> 2] = HEAP32[$1599 >> 2];
    HEAP32[$1605 + 4 >> 2] = $1604;
    __THREW__ = 0;
    $1610 = invoke_iii(23, HEAP32[$1582 >> 2] | 0, $67 | 0) | 0;
    $1611 = __THREW__;
    __THREW__ = 0;
    do if ($1611 & 1) label = 476; else {
     __THREW__ = 0;
     $1613 = invoke_ii(67, 56) | 0;
     $1614 = __THREW__;
     __THREW__ = 0;
     if ($1614 & 1) label = 476; else {
      HEAP32[$1613 >> 2] = 33968;
      __THREW__ = 0;
      invoke_vii(40, $1613 + 4 | 0, $62 | 0);
      $1617 = __THREW__;
      __THREW__ = 0;
      if ($1617 & 1) {
       $1637 = ___cxa_find_matching_catch() | 0;
       $1638 = tempRet0;
       __ZdlPv($1613);
       $eh$lpad$body433$index128Z2D = $1638;
       $eh$lpad$body433$indexZ2D = $1637;
       break;
      }
      $1619 = $1613 + 16 | 0;
      HEAP32[$1619 + 0 >> 2] = HEAP32[$1587 + 0 >> 2];
      HEAP32[$1619 + 4 >> 2] = HEAP32[$1587 + 4 >> 2];
      HEAP32[$1619 + 8 >> 2] = HEAP32[$1587 + 8 >> 2];
      HEAP32[$1619 + 12 >> 2] = HEAP32[$1587 + 12 >> 2];
      HEAP32[$1613 + 32 >> 2] = 20;
      HEAP32[$1613 + 36 >> 2] = 0;
      HEAP32[$1613 + 40 >> 2] = 0;
      HEAP32[$1613 + 44 >> 2] = 0;
      HEAP32[$1613 >> 2] = 35336;
      HEAP32[$1613 + 48 >> 2] = $1610;
      HEAP32[$1613 + 52 >> 2] = $1610;
      HEAP32[$3 >> 2] = $1613;
      $1626 = $1583 + 16 | 0;
      $1627 = HEAP32[$1626 >> 2] | 0;
      if ($1627 >>> 0 < (HEAP32[$1583 + 20 >> 2] | 0) >>> 0) {
       if (!$1627) $1633 = 0; else {
        HEAP32[$1627 >> 2] = $1613;
        $1633 = HEAP32[$1626 >> 2] | 0;
       }
       HEAP32[$1626 >> 2] = $1633 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1583 + 12 | 0, $3 | 0);
       $1635 = __THREW__;
       __THREW__ = 0;
       if ($1635 & 1) {
        label = 476;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
      $$2 = $1613;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
      STACKTOP = sp;
      return $$2 | 0;
     }
    } while (0);
    if ((label | 0) == 476) {
     $1639 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body433$index128Z2D = tempRet0;
     $eh$lpad$body433$indexZ2D = $1639;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
    $$28 = $eh$lpad$body433$indexZ2D;
    $$2842 = $eh$lpad$body433$index128Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 8:
  {
   __THREW__ = 0;
   $1079 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
   $1080 = __THREW__;
   __THREW__ = 0;
   if ($1080 & 1) label = 20; else {
    __THREW__ = 0;
    invoke_viiii(12, $48 | 0, $this | 0, 9, 0);
    $1082 = __THREW__;
    __THREW__ = 0;
    if ($1082 & 1) label = 20; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48 + 4 | 0);
     $$2 = $1079;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    }
   }
   break;
  }
 case 12:
  {
   $1087 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $49 | 0, $70 | 0);
   $1088 = __THREW__;
   __THREW__ = 0;
   if ($1088 & 1) label = 20; else {
    $1091 = $49 + 12 | 0;
    $1092 = $76;
    $1097 = HEAP32[$1092 + 4 >> 2] | 0;
    $1098 = $1091;
    HEAP32[$1098 >> 2] = HEAP32[$1092 >> 2];
    HEAP32[$1098 + 4 >> 2] = $1097;
    $1103 = $tok + 36 | 0;
    $1108 = HEAP32[$1103 + 4 >> 2] | 0;
    $1109 = $49 + 20 | 0;
    HEAP32[$1109 >> 2] = HEAP32[$1103 >> 2];
    HEAP32[$1109 + 4 >> 2] = $1108;
    if (!(HEAP8[$67 >> 0] & 1)) $1119 = $67 + 1 | 0; else $1119 = HEAP32[$tok + 12 >> 2] | 0;
    $1120 = +_strtod($1119, 0);
    __THREW__ = 0;
    $1121 = invoke_ii(67, 56) | 0;
    $1122 = __THREW__;
    __THREW__ = 0;
    do if ($1122 & 1) label = 345; else {
     HEAP32[$1121 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1121 + 4 | 0, $49 | 0);
     $1125 = __THREW__;
     __THREW__ = 0;
     if ($1125 & 1) {
      $1144 = ___cxa_find_matching_catch() | 0;
      $1145 = tempRet0;
      __ZdlPv($1121);
      $eh$lpad$body365$index83Z2D = $1145;
      $eh$lpad$body365$indexZ2D = $1144;
      break;
     }
     $1127 = $1121 + 16 | 0;
     HEAP32[$1127 + 0 >> 2] = HEAP32[$1091 + 0 >> 2];
     HEAP32[$1127 + 4 >> 2] = HEAP32[$1091 + 4 >> 2];
     HEAP32[$1127 + 8 >> 2] = HEAP32[$1091 + 8 >> 2];
     HEAP32[$1127 + 12 >> 2] = HEAP32[$1091 + 12 >> 2];
     HEAP32[$1121 + 32 >> 2] = 13;
     HEAP32[$1121 + 36 >> 2] = 0;
     HEAP32[$1121 + 40 >> 2] = 0;
     HEAP32[$1121 + 44 >> 2] = 0;
     HEAP32[$1121 >> 2] = 36104;
     HEAPF64[$1121 + 48 >> 3] = $1120;
     HEAP32[$10 >> 2] = $1121;
     $1133 = $1087 + 16 | 0;
     $1134 = HEAP32[$1133 >> 2] | 0;
     if ($1134 >>> 0 < (HEAP32[$1087 + 20 >> 2] | 0) >>> 0) {
      if (!$1134) $1140 = 0; else {
       HEAP32[$1134 >> 2] = $1121;
       $1140 = HEAP32[$1133 >> 2] | 0;
      }
      HEAP32[$1133 >> 2] = $1140 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1087 + 12 | 0, $10 | 0);
      $1142 = __THREW__;
      __THREW__ = 0;
      if ($1142 & 1) {
       label = 345;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
     $$2 = $1121;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 345) {
     $1146 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body365$index83Z2D = tempRet0;
     $eh$lpad$body365$indexZ2D = $1146;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
    $$28 = $eh$lpad$body365$indexZ2D;
    $$2842 = $eh$lpad$body365$index83Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 14:
  {
   $1149 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $50 | 0, $70 | 0);
   $1150 = __THREW__;
   __THREW__ = 0;
   if ($1150 & 1) label = 20; else {
    $1154 = $76;
    $1159 = HEAP32[$1154 + 4 >> 2] | 0;
    $1160 = $50 + 12 | 0;
    HEAP32[$1160 >> 2] = HEAP32[$1154 >> 2];
    HEAP32[$1160 + 4 >> 2] = $1159;
    $1165 = $tok + 36 | 0;
    $1170 = HEAP32[$1165 + 4 >> 2] | 0;
    $1171 = $50 + 20 | 0;
    HEAP32[$1171 >> 2] = HEAP32[$1165 >> 2];
    HEAP32[$1171 + 4 >> 2] = $1170;
    __THREW__ = 0;
    invoke_vii(40, $51 | 0, $67 | 0);
    $1175 = __THREW__;
    __THREW__ = 0;
    do if ($1175 & 1) {
     $1180 = ___cxa_find_matching_catch() | 0;
     $$21 = $1180;
     $$2135 = tempRet0;
    } else {
     __THREW__ = 0;
     $1177 = invoke_iiii(27, $1149 | 0, $50 | 0, $51 | 0) | 0;
     $1178 = __THREW__;
     __THREW__ = 0;
     if ($1178 & 1) {
      $1182 = ___cxa_find_matching_catch() | 0;
      $1183 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
      $$21 = $1182;
      $$2135 = $1183;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     $$2 = $1177;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
    $$28 = $$21;
    $$2842 = $$2135;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 17:
  {
   $1185 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $52 | 0, $70 | 0);
   $1186 = __THREW__;
   __THREW__ = 0;
   if ($1186 & 1) label = 20; else {
    $1189 = $52 + 12 | 0;
    $1190 = $76;
    $1195 = HEAP32[$1190 + 4 >> 2] | 0;
    $1196 = $1189;
    HEAP32[$1196 >> 2] = HEAP32[$1190 >> 2];
    HEAP32[$1196 + 4 >> 2] = $1195;
    $1201 = $tok + 36 | 0;
    $1206 = HEAP32[$1201 + 4 >> 2] | 0;
    $1207 = $52 + 20 | 0;
    HEAP32[$1207 >> 2] = HEAP32[$1201 >> 2];
    HEAP32[$1207 + 4 >> 2] = $1206;
    __THREW__ = 0;
    $1211 = invoke_ii(67, 52) | 0;
    $1212 = __THREW__;
    __THREW__ = 0;
    do if ($1212 & 1) label = 364; else {
     HEAP32[$1211 >> 2] = 33968;
     __THREW__ = 0;
     invoke_vii(40, $1211 + 4 | 0, $52 | 0);
     $1215 = __THREW__;
     __THREW__ = 0;
     if ($1215 & 1) {
      $1234 = ___cxa_find_matching_catch() | 0;
      $1235 = tempRet0;
      __ZdlPv($1211);
      $eh$lpad$body375$index88Z2D = $1235;
      $eh$lpad$body375$indexZ2D = $1234;
      break;
     }
     $1217 = $1211 + 16 | 0;
     HEAP32[$1217 + 0 >> 2] = HEAP32[$1189 + 0 >> 2];
     HEAP32[$1217 + 4 >> 2] = HEAP32[$1189 + 4 >> 2];
     HEAP32[$1217 + 8 >> 2] = HEAP32[$1189 + 8 >> 2];
     HEAP32[$1217 + 12 >> 2] = HEAP32[$1189 + 12 >> 2];
     HEAP32[$1211 + 32 >> 2] = 11;
     HEAP32[$1211 + 36 >> 2] = 0;
     HEAP32[$1211 + 40 >> 2] = 0;
     HEAP32[$1211 + 44 >> 2] = 0;
     HEAP32[$1211 >> 2] = 36088;
     HEAP8[$1211 + 48 >> 0] = 0;
     HEAP32[$9 >> 2] = $1211;
     $1223 = $1185 + 16 | 0;
     $1224 = HEAP32[$1223 >> 2] | 0;
     if ($1224 >>> 0 < (HEAP32[$1185 + 20 >> 2] | 0) >>> 0) {
      if (!$1224) $1230 = 0; else {
       HEAP32[$1224 >> 2] = $1211;
       $1230 = HEAP32[$1223 >> 2] | 0;
      }
      HEAP32[$1223 >> 2] = $1230 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1185 + 12 | 0, $9 | 0);
      $1232 = __THREW__;
      __THREW__ = 0;
      if ($1232 & 1) {
       label = 364;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$2 = $1211;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 364) {
     $1236 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body375$index88Z2D = tempRet0;
     $eh$lpad$body375$indexZ2D = $1236;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
    $$28 = $eh$lpad$body375$indexZ2D;
    $$2842 = $eh$lpad$body375$index88Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 default:
  {
   __THREW__ = 0;
   $1747 = invoke_iiii(25, 43744, 36008, 34) | 0;
   $1748 = __THREW__;
   __THREW__ = 0;
   if ($1748 & 1) label = 20; else {
    __THREW__ = 0;
    $1751 = invoke_ii(69, HEAP32[$tok >> 2] | 0) | 0;
    $1752 = __THREW__;
    __THREW__ = 0;
    if ($1752 & 1) label = 20; else {
     $1754 = _strlen($1751 | 0) | 0;
     __THREW__ = 0;
     invoke_iiii(25, $1747 | 0, $1751 | 0, $1754 | 0) | 0;
     $1755 = __THREW__;
     __THREW__ = 0;
     if ($1755 & 1) label = 20; else {
      __THREW__ = 0;
      invoke_vii(47, $0 | 0, $1747 + (HEAP32[(HEAP32[$1747 >> 2] | 0) + -12 >> 2] | 0) | 0);
      $1761 = __THREW__;
      __THREW__ = 0;
      if ($1761 & 1) label = 20; else {
       __THREW__ = 0;
       $1763 = invoke_iii(22, $0 | 0, 47968) | 0;
       $1764 = __THREW__;
       __THREW__ = 0;
       if (!($1764 & 1)) {
        __THREW__ = 0;
        $1769 = invoke_iii(HEAP32[(HEAP32[$1763 >> 2] | 0) + 28 >> 2] | 0, $1763 | 0, 10) | 0;
        $1770 = __THREW__;
        __THREW__ = 0;
        if (!($1770 & 1)) {
         __ZNSt3__16localeD2Ev($0);
         __THREW__ = 0;
         invoke_iii(25, $1747 | 0, $1769 | 0) | 0;
         $1774 = __THREW__;
         __THREW__ = 0;
         if ($1774 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_ii(68, $1747 | 0) | 0;
         $1776 = __THREW__;
         __THREW__ = 0;
         if ($1776 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_v(3);
         $1778 = __THREW__;
         __THREW__ = 0;
         if ($1778 & 1) {
          label = 20;
          break L4;
         }
        }
       }
       $1772 = ___cxa_find_matching_catch() | 0;
       $1773 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body53$index3Z2D = $1773;
       $eh$lpad$body53$indexZ2D = $1772;
      }
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 20) {
  $126 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body53$index3Z2D = tempRet0;
  $eh$lpad$body53$indexZ2D = $126;
 }
 $$28 = $eh$lpad$body53$indexZ2D;
 $$2842 = $eh$lpad$body53$index3Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
 ___resumeException($$28 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj($agg$result, $this, $obj, $tok, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $obj = $obj | 0;
 $tok = $tok | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i124 = 0, $$0$i$i$i$i$i$i124$lcssa = 0, $$0$i$i$i$i$i126 = 0, $$0$i7$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i129 = 0, $$030 = 0, $$033 = 0, $$035 = 0, $$037 = 0, $$039 = 0, $$04 = 0, $$040 = 0, $$042 = 0, $$1019338 = 0, $$10339 = 0, $$110 = 0, $$1120343 = 0, $$11344 = 0, $$12 = 0, $$1221 = 0, $$123 = 0, $$13 = 0, $$1322 = 0, $$14 = 0, $$1423 = 0, $$16 = 0, $$1625 = 0, $$1827350 = 0, $$18351 = 0, $$19 = 0, $$1928 = 0, $$2 = 0, $$20 = 0, $$2029 = 0, $$211 = 0, $$312322 = 0, $$3323 = 0, $$413326 = 0, $$4327 = 0, $$5 = 0, $$514 = 0, $$615330 = 0, $$6331 = 0, $$716334 = 0, $$7335 = 0, $$8 = 0, $$817 = 0, $$9 = 0, $$918 = 0, $$byval_copy = 0, $$byval_copy92 = 0, $$byval_copy95 = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i127$lcssa = 0, $$lcssa = 0, $$lcssa800 = 0, $$lcssa802 = 0, $$lcssa804 = 0, $$lcssa805 = 0, $$lcssa806 = 0, $$lcssa807 = 0, $$lcssa808 = 0, $$lcssa809 = 0, $$lcssa810 = 0, $$lcssa811 = 0, $$lcssa813 = 0, $$lcssa814 = 0, $$lcssa815 = 0, $$lcssa816 = 0, $$lcssa817 = 0, $$lcssa818 = 0, $$lcssa819 = 0, $$lcssa820 = 0, $$lcssa821 = 0, $$lcssa822 = 0, $$lcssa823 = 0, $$lcssa824 = 0, $$lcssa825 = 0, $$lcssa826 = 0, $$lcssa827 = 0, $$lcssa828 = 0, $$lcssa829 = 0, $$lcssa830 = 0, $$lcssa834 = 0, $$lcssa837 = 0, $$lcssa840 = 0, $$lcssa841 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1015 = 0, $1017 = 0, $1019 = 0, $102 = 0, $1021 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1034 = 0, $1036 = 0, $1037 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1042 = 0, $1044 = 0, $1046 = 0, $1047 = 0, $1049 = 0, $105 = 0, $1051 = 0, $1052 = 0, $1055 = 0, $1057 = 0, $1058 = 0, $106 = 0, $1063 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1071 = 0, $1072 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1081 = 0, $1083 = 0, $1084 = 0, $109 = 0, $1090 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1105 = 0, $1106 = 0, $1108 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1113 = 0, $1114 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $112 = 0, $1121 = 0, $1123 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1135 = 0, $1137 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1145 = 0, $1147 = 0, $115 = 0, $1154 = 0, $1155 = 0, $116 = 0, $1161 = 0, $1163 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1177 = 0, $1179 = 0, $118 = 0, $1187 = 0, $1188 = 0, $119 = 0, $1194 = 0, $1196 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1206 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1213 = 0, $1215 = 0, $1217 = 0, $122 = 0, $1222 = 0, $1224 = 0, $1226 = 0, $1227 = 0, $1229 = 0, $123 = 0, $1231 = 0, $1233 = 0, $1236 = 0, $124 = 0, $1240 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1247 = 0, $125 = 0, $1250 = 0, $1254 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $126 = 0, $1260 = 0, $1262 = 0, $1263 = 0, $1265 = 0, $1268 = 0, $127 = 0, $1273 = 0, $1276 = 0, $128 = 0, $1280 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1287 = 0, $129 = 0, $1290 = 0, $1294 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $13 = 0, $130 = 0, $1300 = 0, $1302 = 0, $1303 = 0, $1305 = 0, $1308 = 0, $131 = 0, $1313 = 0, $1314 = 0, $1316 = 0, $1317 = 0, $132 = 0, $1321 = 0, $1324 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1331 = 0, $1333 = 0, $1335 = 0, $1337 = 0, $1338 = 0, $134 = 0, $1342 = 0, $1344 = 0, $1346 = 0, $135 = 0, $1353 = 0, $1357 = 0, $1359 = 0, $136 = 0, $1361 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $183 = 0, $185 = 0, $186 = 0, $19 = 0, $191 = 0, $192 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $202 = 0, $203 = 0, $204 = 0, $207 = 0, $209 = 0, $21 = 0, $212 = 0, $213 = 0, $216 = 0, $217 = 0, $22 = 0, $223 = 0, $225 = 0, $228 = 0, $23 = 0, $232 = 0, $234 = 0, $236 = 0, $237 = 0, $238 = 0, $24 = 0, $240 = 0, $243 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $253 = 0, $255 = 0, $256 = 0, $258 = 0, $26 = 0, $261 = 0, $266 = 0, $268 = 0, $27 = 0, $271 = 0, $275 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $281 = 0, $283 = 0, $284 = 0, $286 = 0, $289 = 0, $29 = 0, $299 = 0, $3 = 0, $30 = 0, $307 = 0, $31 = 0, $311 = 0, $315 = 0, $316 = 0, $32 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $328 = 0, $33 = 0, $330 = 0, $331 = 0, $333 = 0, $334 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $344 = 0, $345 = 0, $349 = 0, $35 = 0, $350 = 0, $352 = 0, $356 = 0, $359 = 0, $36 = 0, $364 = 0, $365 = 0, $367 = 0, $37 = 0, $370 = 0, $374 = 0, $375 = 0, $376 = 0, $378 = 0, $38 = 0, $380 = 0, $381 = 0, $387 = 0, $389 = 0, $39 = 0, $391 = 0, $392 = 0, $394 = 0, $395 = 0, $4 = 0, $40 = 0, $401 = 0, $405 = 0, $41 = 0, $412 = 0, $413 = 0, $415 = 0, $418 = 0, $419 = 0, $42 = 0, $421 = 0, $426 = 0, $427 = 0, $43 = 0, $431 = 0, $436 = 0, $437 = 0, $44 = 0, $441 = 0, $444 = 0, $446 = 0, $447 = 0, $448 = 0, $45 = 0, $450 = 0, $453 = 0, $457 = 0, $458 = 0, $46 = 0, $460 = 0, $461 = 0, $463 = 0, $47 = 0, $470 = 0, $471 = 0, $473 = 0, $475 = 0, $476 = 0, $48 = 0, $482 = 0, $484 = 0, $486 = 0, $487 = 0, $49 = 0, $490 = 0, $492 = 0, $494 = 0, $5 = 0, $50 = 0, $501 = 0, $504 = 0, $506 = 0, $508 = 0, $51 = 0, $515 = 0, $519 = 0, $52 = 0, $521 = 0, $523 = 0, $53 = 0, $532 = 0, $534 = 0, $536 = 0, $54 = 0, $545 = 0, $546 = 0, $548 = 0, $55 = 0, $550 = 0, $552 = 0, $554 = 0, $555 = 0, $556 = 0, $558 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $565 = 0, $567 = 0, $569 = 0, $571 = 0, $572 = 0, $573 = 0, $575 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $581 = 0, $583 = 0, $585 = 0, $588 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $595 = 0, $596 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $606 = 0, $607 = 0, $61 = 0, $611 = 0, $612 = 0, $614 = 0, $618 = 0, $62 = 0, $621 = 0, $626 = 0, $627 = 0, $629 = 0, $63 = 0, $632 = 0, $636 = 0, $637 = 0, $639 = 0, $641 = 0, $642 = 0, $648 = 0, $65 = 0, $650 = 0, $652 = 0, $653 = 0, $655 = 0, $656 = 0, $658 = 0, $66 = 0, $662 = 0, $663 = 0, $665 = 0, $667 = 0, $669 = 0, $67 = 0, $671 = 0, $672 = 0, $673 = 0, $675 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $682 = 0, $684 = 0, $686 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $692 = 0, $694 = 0, $695 = 0, $696 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $702 = 0, $704 = 0, $705 = 0, $707 = 0, $709 = 0, $71 = 0, $710 = 0, $712 = 0, $717 = 0, $718 = 0, $72 = 0, $722 = 0, $727 = 0, $728 = 0, $73 = 0, $732 = 0, $733 = 0, $736 = 0, $738 = 0, $74 = 0, $747 = 0, $748 = 0, $75 = 0, $754 = 0, $756 = 0, $758 = 0, $759 = 0, $76 = 0, $764 = 0, $767 = 0, $768 = 0, $77 = 0, $770 = 0, $772 = 0, $774 = 0, $776 = 0, $777 = 0, $778 = 0, $78 = 0, $780 = 0, $782 = 0, $783 = 0, $784 = 0, $787 = 0, $79 = 0, $791 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $798 = 0, $8 = 0, $80 = 0, $801 = 0, $805 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $811 = 0, $813 = 0, $814 = 0, $816 = 0, $819 = 0, $82 = 0, $824 = 0, $826 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $832 = 0, $833 = 0, $834 = 0, $837 = 0, $84 = 0, $841 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $848 = 0, $85 = 0, $851 = 0, $855 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $862 = 0, $863 = 0, $866 = 0, $87 = 0, $870 = 0, $872 = 0, $873 = 0, $874 = 0, $88 = 0, $880 = 0, $884 = 0, $887 = 0, $89 = 0, $891 = 0, $893 = 0, $894 = 0, $895 = 0, $897 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $902 = 0, $905 = 0, $91 = 0, $910 = 0, $912 = 0, $914 = 0, $916 = 0, $919 = 0, $92 = 0, $923 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $93 = 0, $930 = 0, $933 = 0, $937 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $943 = 0, $945 = 0, $946 = 0, $948 = 0, $95 = 0, $951 = 0, $956 = 0, $959 = 0, $96 = 0, $963 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $97 = 0, $970 = 0, $973 = 0, $977 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $983 = 0, $985 = 0, $986 = 0, $988 = 0, $99 = 0, $991 = 0, $996 = 0, $__f$01$i$i = 0, $__f$01$i$i$i = 0, $__f$01$i$i101 = 0, $__f$01$i$i316 = 0, $__f$01$i$i319 = 0, $__f$01$i$i95 = 0, $__f$01$i$i98 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa838 = 0, $__nd$0$i$i$lcssa839 = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body$index9Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body140$index42Z2D = 0, $eh$lpad$body140$indexZ2D = 0, $eh$lpad$body161$index47Z2D = 0, $eh$lpad$body161$indexZ2D = 0, $eh$lpad$body170$index53Z2D = 0, $eh$lpad$body170$indexZ2D = 0, $eh$lpad$body185$index65Z2D = 0, $eh$lpad$body185$indexZ2D = 0, $eh$lpad$body189$index76Z2D = 0, $eh$lpad$body189$indexZ2D = 0, $eh$lpad$body263$index82Z2D = 0, $eh$lpad$body263$indexZ2D = 0, $eh$lpad$body277$index88Z2D = 0, $eh$lpad$body277$indexZ2D = 0, $eh$lpad$body63$index3Z2D = 0, $eh$lpad$body63$indexZ2D = 0, $eh$lpad$body70$index18Z2D = 0, $eh$lpad$body70$indexZ2D = 0, $eh$lpad$body82$index32Z2D = 0, $eh$lpad$body82$indexZ2D = 0, $eh$lpad$body93$index37Z2D = 0, $eh$lpad$body93$indexZ2D = 0, $fields = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $id_tok = 0, $is_method$0$off0 = 0, $last_was_local$0$off0 = 0, $last_was_local$2$off0 = 0, $let_binds = 0, $literal_fields = 0, $lpad$phi$index = 0, $lpad$phi$index27 = 0, $next = 0, $plus_loc = 0, $plus_sugar$0$off0 = 0, $r = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i174 = 0, $this$idx$val$idx$val$i200 = 0, $this$idx$val$idx$val$i212 = 0, $this$idx$val$idx$val$i224 = 0, $this$idx$val$idx$val$i296 = 0, $this$idx$val$idx$val$i308 = 0, $this$idx$val$idx$val$i67 = 0, $this$idx51$val$idx$val = 0, $this$idx52$val$idx$val = 0, $this$idx53$val$idx$val = 0, $this$idx54$val$idx$val = 0, $this$idx55$val$idx$val = 0, $this$idx56$val$idx$val = 0, $this$idx57$val$idx$val = 0, $value$0 = 0, label = 0, sp = 0, $450$looptemp = 0, $__f$01$i$i$looptemp = 0, $__f$01$i$i95$looptemp = 0, $__f$01$i$i$i$looptemp = 0, $__f$01$i$i316$looptemp = 0, $__f$01$i$i98$looptemp = 0, $__f$01$i$i101$looptemp = 0, $__f$01$i$i319$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1568 | 0;
 $$byval_copy95 = sp + 1560 | 0;
 $$byval_copy92 = sp + 1556 | 0;
 $$byval_copy = sp + 1552 | 0;
 $0 = sp + 1544 | 0;
 $1 = sp + 1536 | 0;
 $2 = sp + 1532 | 0;
 $3 = sp + 1528 | 0;
 $4 = sp + 1524 | 0;
 $5 = sp + 1520 | 0;
 $6 = sp + 1516 | 0;
 $7 = sp + 1512 | 0;
 $8 = sp + 1508 | 0;
 $__parent$i = sp + 1504 | 0;
 $9 = sp + 1500 | 0;
 $literal_fields = sp + 1488 | 0;
 $fields = sp + 1476 | 0;
 $let_binds = sp + 1464 | 0;
 $10 = sp + 1452 | 0;
 $11 = sp + 1424 | 0;
 $next = sp + 1380 | 0;
 $12 = sp + 1336 | 0;
 $r = sp + 1324 | 0;
 $13 = sp + 1296 | 0;
 $14 = sp + 1284 | 0;
 $15 = sp + 1256 | 0;
 $16 = sp + 1244 | 0;
 $17 = sp + 1232 | 0;
 $18 = sp + 1220 | 0;
 $19 = sp + 1192 | 0;
 $20 = sp + 1180 | 0;
 $21 = sp + 1168 | 0;
 $22 = sp + 1156 | 0;
 $id_tok = sp + 1112 | 0;
 $23 = sp + 1068 | 0;
 $24 = sp + 1040 | 0;
 $25 = sp + 1028 | 0;
 $26 = sp + 984 | 0;
 $27 = sp + 940 | 0;
 $28 = sp + 928 | 0;
 $29 = sp + 916 | 0;
 $plus_loc = sp + 888 | 0;
 $30 = sp + 844 | 0;
 $31 = sp + 800 | 0;
 $32 = sp + 756 | 0;
 $33 = sp + 712 | 0;
 $34 = sp + 668 | 0;
 $35 = sp + 624 | 0;
 $36 = sp + 580 | 0;
 $37 = sp + 536 | 0;
 $38 = sp + 492 | 0;
 $39 = sp + 480 | 0;
 $40 = sp + 452 | 0;
 $41 = sp + 440 | 0;
 $42 = sp + 412 | 0;
 $43 = sp + 400 | 0;
 $44 = sp + 372 | 0;
 $45 = sp + 360 | 0;
 $46 = sp + 332 | 0;
 $47 = sp + 304 | 0;
 $48 = sp + 276 | 0;
 $49 = sp + 232 | 0;
 $50 = sp + 188 | 0;
 $51 = sp + 144 | 0;
 $52 = sp + 100 | 0;
 $53 = sp + 56 | 0;
 $54 = sp + 12 | 0;
 $55 = sp;
 HEAP32[$literal_fields + 4 >> 2] = 0;
 HEAP32[$literal_fields + 8 >> 2] = 0;
 $58 = $literal_fields + 4 | 0;
 HEAP32[$literal_fields >> 2] = $58;
 HEAP32[$fields >> 2] = $fields;
 $59 = $fields + 4 | 0;
 HEAP32[$59 >> 2] = $fields;
 $60 = $fields + 8 | 0;
 HEAP32[$60 >> 2] = 0;
 $61 = $let_binds + 4 | 0;
 HEAP32[$61 >> 2] = 0;
 $62 = $let_binds + 8 | 0;
 HEAP32[$62 >> 2] = 0;
 $63 = $let_binds + 4 | 0;
 HEAP32[$let_binds >> 2] = $63;
 $65 = $this + 4 | 0;
 L1 : do if (!$obj_level) {
  $172 = HEAP32[$65 >> 2] | 0;
  __THREW__ = 0;
  invoke_viii(3, $10 | 0, 35360, 1);
  $173 = __THREW__;
  __THREW__ = 0;
  if ($173 & 1) {
   $234 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body63$index3Z2D = tempRet0;
   $eh$lpad$body63$indexZ2D = $234;
   label = 31;
   break;
  }
  __THREW__ = 0;
  $175 = invoke_iii(23, $172 | 0, $10 | 0) | 0;
  $176 = __THREW__;
  __THREW__ = 0;
  if ($176 & 1) {
   $236 = ___cxa_find_matching_catch() | 0;
   $237 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $$20 = $236;
   $$2029 = $237;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $178 = HEAP32[$65 >> 2] | 0;
  HEAP32[$11 + 0 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  HEAP32[$11 + 12 >> 2] = 0;
  HEAP32[$11 + 16 >> 2] = 0;
  HEAP32[$11 + 20 >> 2] = 0;
  HEAP32[$11 + 24 >> 2] = 0;
  __THREW__ = 0;
  $179 = invoke_ii(67, 48) | 0;
  $180 = __THREW__;
  __THREW__ = 0;
  do if ($180 & 1) label = 33; else {
   HEAP32[$179 >> 2] = 33968;
   __THREW__ = 0;
   invoke_vii(40, $179 + 4 | 0, $11 | 0);
   $183 = __THREW__;
   __THREW__ = 0;
   if ($183 & 1) {
    $202 = ___cxa_find_matching_catch() | 0;
    $203 = tempRet0;
    __ZdlPv($179);
    $$pre$phiZ2D = $11;
    $eh$lpad$body$index9Z2D = $203;
    $eh$lpad$body$indexZ2D = $202;
    break;
   }
   $185 = $179 + 16 | 0;
   $186 = $11 + 12 | 0;
   HEAP32[$185 + 0 >> 2] = HEAP32[$186 + 0 >> 2];
   HEAP32[$185 + 4 >> 2] = HEAP32[$186 + 4 >> 2];
   HEAP32[$185 + 8 >> 2] = HEAP32[$186 + 8 >> 2];
   HEAP32[$185 + 12 >> 2] = HEAP32[$186 + 12 >> 2];
   HEAP32[$179 + 32 >> 2] = 17;
   HEAP32[$179 + 36 >> 2] = 0;
   HEAP32[$179 + 40 >> 2] = 0;
   HEAP32[$179 + 44 >> 2] = 0;
   HEAP32[$179 >> 2] = 35784;
   HEAP32[$9 >> 2] = $179;
   $191 = $178 + 16 | 0;
   $192 = HEAP32[$191 >> 2] | 0;
   if ($192 >>> 0 < (HEAP32[$178 + 20 >> 2] | 0) >>> 0) {
    if (!$192) $198 = 0; else {
     HEAP32[$192 >> 2] = $179;
     $198 = HEAP32[$191 >> 2] | 0;
    }
    HEAP32[$191 >> 2] = $198 + 4;
   } else {
    __THREW__ = 0;
    invoke_vii(51, $178 + 12 | 0, $9 | 0);
    $200 = __THREW__;
    __THREW__ = 0;
    if ($200 & 1) {
     label = 33;
     break;
    }
   }
   $204 = HEAP32[$63 >> 2] | 0;
   do if (!$204) {
    HEAP32[$__parent$i >> 2] = $63;
    $$0$i7$i = $63;
    $223 = $63;
    label = 24;
   } else {
    $__nd$0$i$i = $204;
    while (1) {
     $207 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
     if ($175 >>> 0 < $207 >>> 0) {
      $209 = HEAP32[$__nd$0$i$i >> 2] | 0;
      if (!$209) {
       $$lcssa841 = $__nd$0$i$i;
       $__nd$0$i$i$lcssa839 = $__nd$0$i$i;
       label = 17;
       break;
      } else $__nd$0$be$in$i$i = $209;
     } else {
      if ($207 >>> 0 >= $175 >>> 0) {
       $__nd$0$i$i$lcssa = $__nd$0$i$i;
       label = 23;
       break;
      }
      $212 = $__nd$0$i$i + 4 | 0;
      $213 = HEAP32[$212 >> 2] | 0;
      if (!$213) {
       $$lcssa840 = $212;
       $__nd$0$i$i$lcssa838 = $__nd$0$i$i;
       label = 21;
       break;
      } else $__nd$0$be$in$i$i = $213;
     }
     $__nd$0$i$i = $__nd$0$be$in$i$i;
    }
    if ((label | 0) == 17) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa839;
     $$0$i7$i = $$lcssa841;
     $223 = $__nd$0$i$i$lcssa839;
     label = 24;
     break;
    } else if ((label | 0) == 21) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa838;
     $$0$i7$i = $$lcssa840;
     $223 = $__nd$0$i$i$lcssa838;
     label = 24;
     break;
    } else if ((label | 0) == 23) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
     if (!$__nd$0$i$i$lcssa) {
      $$0$i7$i = $__parent$i;
      $223 = 0;
      label = 24;
      break;
     } else {
      $__r$0$i = $__nd$0$i$i$lcssa;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 24) {
    __THREW__ = 0;
    $216 = invoke_ii(67, 24) | 0;
    $217 = __THREW__;
    __THREW__ = 0;
    if ($217 & 1) {
     label = 33;
     break;
    }
    HEAP32[$216 + 16 >> 2] = $175;
    HEAP32[$216 + 20 >> 2] = 0;
    HEAP32[$216 >> 2] = 0;
    HEAP32[$216 + 4 >> 2] = 0;
    HEAP32[$216 + 8 >> 2] = $223;
    HEAP32[$$0$i7$i >> 2] = $216;
    $225 = HEAP32[HEAP32[$let_binds >> 2] >> 2] | 0;
    if (!$225) $228 = $216; else {
     HEAP32[$let_binds >> 2] = $225;
     $228 = HEAP32[$$0$i7$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$61 >> 2] | 0, $228);
    HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 1;
    $__r$0$i = $216;
   }
   HEAP32[$__r$0$i + 20 >> 2] = $179;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   label = 2;
   break L1;
  } while (0);
  if ((label | 0) == 33) {
   $238 = ___cxa_find_matching_catch() | 0;
   $$pre$phiZ2D = $11;
   $eh$lpad$body$index9Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $238;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phiZ2D);
  $$20 = $eh$lpad$body$indexZ2D;
  $$2029 = $eh$lpad$body$index9Z2D;
 } else label = 2; while (0);
 L45 : do if ((label | 0) == 2) {
  $66 = $next + 4 | 0;
  $67 = $next + 16 | 0;
  $68 = $next + 28 | 0;
  $69 = $26 + 4 | 0;
  $70 = $26 + 16 | 0;
  $71 = $26 + 28 | 0;
  $72 = $27 + 4 | 0;
  $73 = $27 + 16 | 0;
  $74 = $27 + 28 | 0;
  $75 = $28 + 4 | 0;
  $76 = $28 + 8 | 0;
  $77 = $30 + 4 | 0;
  $78 = $30 + 16 | 0;
  $79 = $30 + 28 | 0;
  $80 = $31 + 4 | 0;
  $81 = $31 + 16 | 0;
  $82 = $31 + 28 | 0;
  $83 = $32 + 4 | 0;
  $84 = $32 + 16 | 0;
  $85 = $32 + 28 | 0;
  $86 = $32 + 16 | 0;
  $87 = $plus_loc + 1 | 0;
  $88 = $plus_loc + 12 | 0;
  $89 = $33 + 4 | 0;
  $90 = $33 + 16 | 0;
  $91 = $33 + 28 | 0;
  $92 = $plus_loc + 8 | 0;
  $93 = $plus_loc + 4 | 0;
  $94 = $34 + 16 | 0;
  $95 = $34 + 4 | 0;
  $96 = $35 + 4 | 0;
  $97 = $35 + 16 | 0;
  $98 = $35 + 28 | 0;
  $99 = $36 + 4 | 0;
  $100 = $36 + 16 | 0;
  $101 = $36 + 28 | 0;
  $102 = $37 + 4 | 0;
  $103 = $37 + 16 | 0;
  $104 = $37 + 28 | 0;
  $105 = $38 + 4 | 0;
  $106 = $38 + 16 | 0;
  $107 = $38 + 28 | 0;
  $108 = $0 + 4 | 0;
  $109 = $40 + 12 | 0;
  $110 = $obj_level + 1 | 0;
  $111 = $42 + 12 | 0;
  $112 = $43 + 4 | 0;
  $113 = $43 + 8 | 0;
  $114 = $44 + 12 | 0;
  $115 = $46 + 12 | 0;
  $116 = $47 + 12 | 0;
  $117 = $48 + 12 | 0;
  $118 = $49 + 16 | 0;
  $119 = $49 + 4 | 0;
  $120 = $50 + 16 | 0;
  $121 = $50 + 4 | 0;
  $122 = $51 + 4 | 0;
  $123 = $51 + 16 | 0;
  $124 = $51 + 28 | 0;
  $125 = $52 + 4 | 0;
  $126 = $52 + 16 | 0;
  $127 = $52 + 28 | 0;
  $128 = $53 + 4 | 0;
  $129 = $53 + 16 | 0;
  $130 = $53 + 28 | 0;
  $131 = $54 + 4 | 0;
  $132 = $54 + 16 | 0;
  $133 = $54 + 28 | 0;
  $134 = $r + 4 | 0;
  $135 = $r + 8 | 0;
  $136 = $tok + 16 | 0;
  $137 = $next + 36 | 0;
  $138 = $tok + 28 | 0;
  $139 = $15 + 12 | 0;
  $140 = $15 + 20 | 0;
  $141 = $16 + 4 | 0;
  $142 = $16 + 8 | 0;
  $143 = $agg$result + 4 | 0;
  $144 = $agg$result + 16 | 0;
  $145 = $next + 16 | 0;
  $146 = $agg$result + 28 | 0;
  $147 = $13 + 12 | 0;
  $148 = $14 + 4 | 0;
  $149 = $14 + 8 | 0;
  $150 = $14 + 4 | 0;
  $151 = $id_tok + 4 | 0;
  $152 = $23 + 16 | 0;
  $153 = $23 + 4 | 0;
  $154 = $agg$result + 36 | 0;
  $155 = $24 + 12 | 0;
  $156 = $24 + 20 | 0;
  $157 = $id_tok + 16 | 0;
  $158 = $19 + 12 | 0;
  $159 = $20 + 4 | 0;
  $160 = $20 + 8 | 0;
  $161 = $20 + 4 | 0;
  $162 = $12 + 4 | 0;
  $163 = $12 + 16 | 0;
  $164 = $12 + 28 | 0;
  $165 = $66 + 1 | 0;
  $166 = $12 + 16 | 0;
  $167 = $145 + 1 | 0;
  $168 = $next + 24 | 0;
  $169 = $next + 20 | 0;
  $170 = $next + 12 | 0;
  $171 = $next + 8 | 0;
  $got_comma$0$off0 = 1;
  $last_was_local$0$off0 = 0;
  L47 : while (1) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $240 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$240 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $66 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $243 = __THREW__;
   __THREW__ = 0;
   if ($243 & 1) {
    label = 29;
    break;
   }
   HEAP32[$next >> 2] = HEAP32[$240 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $67 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $247 = __THREW__;
   __THREW__ = 0;
   if ($247 & 1) {
    label = 37;
    break;
   }
   $251 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$68 + 0 >> 2] = HEAP32[$251 + 0 >> 2];
   HEAP32[$68 + 4 >> 2] = HEAP32[$251 + 4 >> 2];
   HEAP32[$68 + 8 >> 2] = HEAP32[$251 + 8 >> 2];
   HEAP32[$68 + 12 >> 2] = HEAP32[$251 + 12 >> 2];
   HEAP32[$next >> 2] = HEAP32[$240 >> 2];
   $253 = HEAP32[$this >> 2] | 0;
   $255 = HEAP32[$253 + 4 >> 2] | 0;
   $256 = $255 + 4 | 0;
   $258 = HEAP32[$255 >> 2] | 0;
   HEAP32[$258 + 4 >> 2] = HEAP32[$256 >> 2];
   HEAP32[HEAP32[$256 >> 2] >> 2] = $258;
   $261 = $253 + 8 | 0;
   HEAP32[$261 >> 2] = (HEAP32[$261 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($255 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($255 + 12 | 0);
   __ZdlPv($255);
   if ($got_comma$0$off0) label = 56; else {
    $266 = HEAP32[$next >> 2] | 0;
    if (($266 | 0) == 5) {
     $this$idx$val$idx$val$i67 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $268 = $this$idx$val$idx$val$i67 + 8 | 0;
     HEAP32[$12 >> 2] = HEAP32[$268 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $162 | 0, $this$idx$val$idx$val$i67 + 12 | 0);
     $271 = __THREW__;
     __THREW__ = 0;
     if ($271 & 1) {
      label = 54;
      break;
     }
     HEAP32[$12 >> 2] = HEAP32[$268 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $163 | 0, $this$idx$val$idx$val$i67 + 24 | 0);
     $275 = __THREW__;
     __THREW__ = 0;
     if ($275 & 1) {
      label = 42;
      break;
     }
     $279 = $this$idx$val$idx$val$i67 + 36 | 0;
     HEAP32[$164 + 0 >> 2] = HEAP32[$279 + 0 >> 2];
     HEAP32[$164 + 4 >> 2] = HEAP32[$279 + 4 >> 2];
     HEAP32[$164 + 8 >> 2] = HEAP32[$279 + 8 >> 2];
     HEAP32[$164 + 12 >> 2] = HEAP32[$279 + 12 >> 2];
     HEAP32[$12 >> 2] = HEAP32[$268 >> 2];
     $281 = HEAP32[$this >> 2] | 0;
     $283 = HEAP32[$281 + 4 >> 2] | 0;
     $284 = $283 + 4 | 0;
     $286 = HEAP32[$283 >> 2] | 0;
     HEAP32[$286 + 4 >> 2] = HEAP32[$284 >> 2];
     HEAP32[HEAP32[$284 >> 2] >> 2] = $286;
     $289 = $281 + 8 | 0;
     HEAP32[$289 >> 2] = (HEAP32[$289 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($283 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($283 + 12 | 0);
     __ZdlPv($283);
     HEAP32[$next >> 2] = HEAP32[$12 >> 2];
     if (!(HEAP8[$66 >> 0] & 1)) {
      HEAP8[$165 >> 0] = 0;
      HEAP8[$66 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$170 >> 2] >> 0] = 0;
      HEAP32[$171 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $66 | 0, 0);
     $299 = __THREW__;
     __THREW__ = 0;
     if ($299 & 1) {
      label = 47;
      break;
     };
     HEAP32[$66 + 0 >> 2] = HEAP32[$162 + 0 >> 2];
     HEAP32[$66 + 4 >> 2] = HEAP32[$162 + 4 >> 2];
     HEAP32[$66 + 8 >> 2] = HEAP32[$162 + 8 >> 2];
     HEAP32[$162 + 0 >> 2] = 0;
     HEAP32[$162 + 4 >> 2] = 0;
     HEAP32[$162 + 8 >> 2] = 0;
     if (!(HEAP8[$145 >> 0] & 1)) {
      HEAP8[$167 >> 0] = 0;
      HEAP8[$145 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$168 >> 2] >> 0] = 0;
      HEAP32[$169 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $145 | 0, 0);
     $307 = __THREW__;
     __THREW__ = 0;
     if ($307 & 1) {
      label = 52;
      break;
     };
     HEAP32[$145 + 0 >> 2] = HEAP32[$166 + 0 >> 2];
     HEAP32[$145 + 4 >> 2] = HEAP32[$166 + 4 >> 2];
     HEAP32[$145 + 8 >> 2] = HEAP32[$166 + 8 >> 2];
     HEAP32[$166 + 0 >> 2] = 0;
     HEAP32[$166 + 4 >> 2] = 0;
     HEAP32[$166 + 8 >> 2] = 0;
     HEAP32[$68 + 0 >> 2] = HEAP32[$164 + 0 >> 2];
     HEAP32[$68 + 4 >> 2] = HEAP32[$164 + 4 >> 2];
     HEAP32[$68 + 8 >> 2] = HEAP32[$164 + 8 >> 2];
     HEAP32[$68 + 12 >> 2] = HEAP32[$164 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($163);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($162);
     label = 56;
    } else {
     $1369 = $266;
     $got_comma$1$off0 = 0;
    }
   }
   if ((label | 0) == 56) {
    label = 0;
    $1369 = HEAP32[$next >> 2] | 0;
    $got_comma$1$off0 = 1;
   }
   do if (($1369 | 0) == 1) {
    HEAP32[$r >> 2] = $r;
    HEAP32[$134 >> 2] = $r;
    HEAP32[$135 >> 2] = 0;
    $315 = HEAP32[$59 >> 2] | 0;
    if (!(HEAP32[$62 >> 2] | 0)) {
     HEAP32[$5 >> 2] = $r;
     HEAP32[$6 >> 2] = $315;
     HEAP32[$7 >> 2] = $fields;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$$byval_copy92 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     HEAP32[$$byval_copy95 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
     invoke_viiiiii(18, $8 | 0, $r | 0, $$byval_copy | 0, $$byval_copy92 | 0, $$byval_copy95 | 0, 0);
     $316 = __THREW__;
     __THREW__ = 0;
     if ($316 & 1) {
      label = 62;
      break L47;
     }
    } else if (($315 | 0) != ($fields | 0)) {
     $325 = $315;
     do {
      $323 = HEAP32[$65 >> 2] | 0;
      $324 = $325 + 16 | 0;
      $326 = HEAP32[$324 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $13 | 0, $326 + 4 | 0);
      $328 = __THREW__;
      __THREW__ = 0;
      if ($328 & 1) {
       label = 61;
       break L47;
      }
      $330 = $326 + 16 | 0;
      HEAP32[$147 + 0 >> 2] = HEAP32[$330 + 0 >> 2];
      HEAP32[$147 + 4 >> 2] = HEAP32[$330 + 4 >> 2];
      HEAP32[$147 + 8 >> 2] = HEAP32[$330 + 8 >> 2];
      HEAP32[$147 + 12 >> 2] = HEAP32[$330 + 12 >> 2];
      HEAP32[$148 >> 2] = 0;
      HEAP32[$149 >> 2] = 0;
      HEAP32[$14 >> 2] = $150;
      $331 = HEAP32[$let_binds >> 2] | 0;
      if (($331 | 0) != ($63 | 0)) {
       $337 = $331;
       $364 = $331;
       while (1) {
        __THREW__ = 0;
        $333 = invoke_ii(67, 24) | 0;
        $334 = __THREW__;
        __THREW__ = 0;
        if ($334 & 1) {
         label = 95;
         break L47;
        }
        $338 = $333 + 16 | 0;
        $339 = $337 + 16 | 0;
        $344 = HEAP32[$339 + 4 >> 2] | 0;
        $345 = $338;
        HEAP32[$345 >> 2] = HEAP32[$339 >> 2];
        HEAP32[$345 + 4 >> 2] = $344;
        HEAP32[$$byval_copy >> 2] = $150;
        HEAP32[$$byval_copy95 + 0 >> 2] = HEAP32[$$byval_copy + 0 >> 2];
        $349 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($14, $$byval_copy95, $$byval_copy92, $338) | 0;
        $350 = HEAP32[$349 >> 2] | 0;
        if (!$350) {
         $352 = HEAP32[$$byval_copy92 >> 2] | 0;
         HEAP32[$333 >> 2] = 0;
         HEAP32[$333 + 4 >> 2] = 0;
         HEAP32[$333 + 8 >> 2] = $352;
         HEAP32[$349 >> 2] = $333;
         $356 = HEAP32[HEAP32[$14 >> 2] >> 2] | 0;
         if (!$356) $359 = $333; else {
          HEAP32[$14 >> 2] = $356;
          $359 = HEAP32[$349 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$148 >> 2] | 0, $359);
         HEAP32[$149 >> 2] = (HEAP32[$149 >> 2] | 0) + 1;
        } else if (($350 | 0) != ($333 | 0)) __ZdlPv($333);
        $365 = HEAP32[$364 + 4 >> 2] | 0;
        if (!$365) {
         $$0$i$i$i$i$i = $364;
         while (1) {
          $370 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$370 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
           $$cast$i$i$i$i$i$lcssa = $370;
           break;
          } else $$0$i$i$i$i$i = $370;
         }
         $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
        } else {
         $$0$i$i$i$i$i$i = $365;
         while (1) {
          $367 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
          if (!$367) {
           $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i = $367;
         }
         $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
        }
        if (($$01$i$i$i$i$i | 0) == ($63 | 0)) break; else {
         $337 = $$01$i$i$i$i$i;
         $364 = $$01$i$i$i$i$i;
        }
       }
      }
      $374 = HEAP32[$324 >> 2] | 0;
      __THREW__ = 0;
      $375 = invoke_ii(67, 64) | 0;
      $376 = __THREW__;
      __THREW__ = 0;
      if ($376 & 1) {
       label = 96;
       break L47;
      }
      __THREW__ = 0;
      invoke_viiii(11, $375 | 0, $13 | 0, $14 | 0, $374 | 0);
      $378 = __THREW__;
      __THREW__ = 0;
      if ($378 & 1) {
       $$lcssa = $375;
       label = 92;
       break L47;
      }
      HEAP32[$4 >> 2] = $375;
      $380 = $323 + 16 | 0;
      $381 = HEAP32[$380 >> 2] | 0;
      if ($381 >>> 0 < (HEAP32[$323 + 20 >> 2] | 0) >>> 0) {
       if (!$381) $387 = 0; else {
        HEAP32[$381 >> 2] = $375;
        $387 = HEAP32[$380 >> 2] | 0;
       }
       HEAP32[$380 >> 2] = $387 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $323 + 12 | 0, $4 | 0);
       $389 = __THREW__;
       __THREW__ = 0;
       if ($389 & 1) {
        label = 96;
        break L47;
       }
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($14, HEAP32[$150 >> 2] | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
      __THREW__ = 0;
      $394 = invoke_ii(67, 20) | 0;
      $395 = __THREW__;
      __THREW__ = 0;
      if ($395 & 1) {
       label = 61;
       break L47;
      }
      $401 = HEAP32[$325 + 12 >> 2] | 0;
      HEAP32[$394 + 8 >> 2] = HEAP32[$325 + 8 >> 2];
      HEAP32[$394 + 12 >> 2] = $401;
      HEAP32[$394 + 16 >> 2] = $375;
      HEAP32[$394 + 4 >> 2] = $r;
      $405 = HEAP32[$r >> 2] | 0;
      HEAP32[$394 >> 2] = $405;
      HEAP32[$405 + 4 >> 2] = $394;
      HEAP32[$r >> 2] = $394;
      HEAP32[$135 >> 2] = (HEAP32[$135 >> 2] | 0) + 1;
      $325 = HEAP32[$325 + 4 >> 2] | 0;
     } while (($325 | 0) != ($fields | 0));
    }
    $418 = HEAP32[$65 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $15 | 0, $136 | 0);
    $419 = __THREW__;
    __THREW__ = 0;
    if ($419 & 1) {
     label = 62;
     break L47;
    }
    $421 = $138;
    $426 = HEAP32[$421 + 4 >> 2] | 0;
    $427 = $139;
    HEAP32[$427 >> 2] = HEAP32[$421 >> 2];
    HEAP32[$427 + 4 >> 2] = $426;
    $431 = $137;
    $436 = HEAP32[$431 + 4 >> 2] | 0;
    $437 = $140;
    HEAP32[$437 >> 2] = HEAP32[$431 >> 2];
    HEAP32[$437 + 4 >> 2] = $436;
    HEAP32[$16 >> 2] = $16;
    HEAP32[$141 >> 2] = $16;
    HEAP32[$142 >> 2] = 0;
    $441 = HEAP32[$134 >> 2] | 0;
    if (($441 | 0) != ($r | 0)) {
     $447 = $441;
     $450 = $16;
     $453 = 0;
     do {
      __THREW__ = 0;
      $450$looptemp = $450;
      $450 = invoke_ii(67, 20) | 0;
      $444 = __THREW__;
      __THREW__ = 0;
      if ($444 & 1) {
       $$lcssa800 = $450$looptemp;
       $$lcssa802 = $453;
       label = 105;
       break L47;
      }
      $446 = $447 + 8 | 0;
      $448 = $450 + 8 | 0;
      HEAP32[$448 + 0 >> 2] = HEAP32[$446 + 0 >> 2];
      HEAP32[$448 + 4 >> 2] = HEAP32[$446 + 4 >> 2];
      HEAP32[$448 + 8 >> 2] = HEAP32[$446 + 8 >> 2];
      HEAP32[$450 + 4 >> 2] = $16;
      HEAP32[$450 >> 2] = $450$looptemp;
      HEAP32[$450$looptemp + 4 >> 2] = $450;
      HEAP32[$16 >> 2] = $450;
      $453 = $453 + 1 | 0;
      HEAP32[$142 >> 2] = $453;
      $447 = HEAP32[$447 + 4 >> 2] | 0;
     } while (($447 | 0) != ($r | 0));
    }
    __THREW__ = 0;
    $470 = invoke_ii(67, 60) | 0;
    $471 = __THREW__;
    __THREW__ = 0;
    if ($471 & 1) {
     label = 129;
     break L47;
    }
    __THREW__ = 0;
    invoke_viii(8, $470 | 0, $15 | 0, $16 | 0);
    $473 = __THREW__;
    __THREW__ = 0;
    if ($473 & 1) {
     $$lcssa806 = $470;
     label = 117;
     break L47;
    }
    HEAP32[$3 >> 2] = $470;
    $475 = $418 + 16 | 0;
    $476 = HEAP32[$475 >> 2] | 0;
    if ($476 >>> 0 < (HEAP32[$418 + 20 >> 2] | 0) >>> 0) {
     if (!$476) $482 = 0; else {
      HEAP32[$476 >> 2] = $470;
      $482 = HEAP32[$475 >> 2] | 0;
     }
     HEAP32[$475 >> 2] = $482 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(51, $418 + 12 | 0, $3 | 0);
     $484 = __THREW__;
     __THREW__ = 0;
     if ($484 & 1) {
      label = 129;
      break L47;
     }
    }
    HEAP32[$obj >> 2] = $470;
    if (HEAP32[$142 >> 2] | 0) {
     $490 = HEAP32[$141 >> 2] | 0;
     $492 = (HEAP32[$16 >> 2] | 0) + 4 | 0;
     $494 = HEAP32[$490 >> 2] | 0;
     HEAP32[$494 + 4 >> 2] = HEAP32[$492 >> 2];
     HEAP32[HEAP32[$492 >> 2] >> 2] = $494;
     HEAP32[$142 >> 2] = 0;
     if (($490 | 0) != ($16 | 0)) {
      $__f$01$i$i = $490;
      do {
       $__f$01$i$i$looptemp = $__f$01$i$i;
       $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$looptemp);
      } while (($__f$01$i$i | 0) != ($16 | 0));
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    $501 = HEAP32[$next >> 2] | 0;
    HEAP32[$143 + 0 >> 2] = HEAP32[$66 + 0 >> 2];
    HEAP32[$143 + 4 >> 2] = HEAP32[$66 + 4 >> 2];
    HEAP32[$143 + 8 >> 2] = HEAP32[$66 + 8 >> 2];
    HEAP32[$66 + 0 >> 2] = 0;
    HEAP32[$66 + 4 >> 2] = 0;
    HEAP32[$66 + 8 >> 2] = 0;
    HEAP32[$144 + 0 >> 2] = HEAP32[$145 + 0 >> 2];
    HEAP32[$144 + 4 >> 2] = HEAP32[$145 + 4 >> 2];
    HEAP32[$144 + 8 >> 2] = HEAP32[$145 + 8 >> 2];
    HEAP32[$145 + 0 >> 2] = 0;
    HEAP32[$145 + 4 >> 2] = 0;
    HEAP32[$145 + 8 >> 2] = 0;
    HEAP32[$146 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
    HEAP32[$146 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
    HEAP32[$146 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
    HEAP32[$146 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
    HEAP32[$agg$result >> 2] = $501;
    if (!(HEAP32[$135 >> 2] | 0)) {
     $$039 = 0;
     $got_comma$2$off0 = $got_comma$1$off0;
     $last_was_local$2$off0 = $last_was_local$0$off0;
    } else {
     $504 = HEAP32[$134 >> 2] | 0;
     $506 = (HEAP32[$r >> 2] | 0) + 4 | 0;
     $508 = HEAP32[$504 >> 2] | 0;
     HEAP32[$508 + 4 >> 2] = HEAP32[$506 >> 2];
     HEAP32[HEAP32[$506 >> 2] >> 2] = $508;
     HEAP32[$135 >> 2] = 0;
     if (($504 | 0) == ($r | 0)) {
      $$039 = 0;
      $got_comma$2$off0 = $got_comma$1$off0;
      $last_was_local$2$off0 = $last_was_local$0$off0;
     } else {
      $__f$01$i$i95 = $504;
      do {
       $__f$01$i$i95$looptemp = $__f$01$i$i95;
       $__f$01$i$i95 = HEAP32[$__f$01$i$i95 + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i95$looptemp);
      } while (($__f$01$i$i95 | 0) != ($r | 0));
      $$039 = 0;
      $got_comma$2$off0 = $got_comma$1$off0;
      $last_was_local$2$off0 = $last_was_local$0$off0;
     }
    }
   } else if (($1369 | 0) == 18) {
    if ((HEAP32[$60 >> 2] | 0) != 1) {
     label = 141;
     break L47;
    }
    if ($last_was_local$0$off0) {
     label = 150;
     break L47;
    }
    $579 = HEAP32[$59 >> 2] | 0;
    $581 = HEAP32[$579 + 8 >> 2] | 0;
    $583 = HEAP32[$579 + 12 >> 2] | 0;
    $585 = HEAP32[$579 + 16 >> 2] | 0;
    if (!(HEAP32[$62 >> 2] | 0)) $value$0 = $585; else {
     $588 = HEAP32[$65 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $19 | 0, $585 + 4 | 0);
     $590 = __THREW__;
     __THREW__ = 0;
     if ($590 & 1) {
      label = 54;
      break L47;
     }
     $592 = $585 + 16 | 0;
     HEAP32[$158 + 0 >> 2] = HEAP32[$592 + 0 >> 2];
     HEAP32[$158 + 4 >> 2] = HEAP32[$592 + 4 >> 2];
     HEAP32[$158 + 8 >> 2] = HEAP32[$592 + 8 >> 2];
     HEAP32[$158 + 12 >> 2] = HEAP32[$592 + 12 >> 2];
     HEAP32[$159 >> 2] = 0;
     HEAP32[$160 >> 2] = 0;
     HEAP32[$20 >> 2] = $161;
     $593 = HEAP32[$let_binds >> 2] | 0;
     if (($593 | 0) != ($63 | 0)) {
      $599 = $593;
      $626 = $593;
      while (1) {
       __THREW__ = 0;
       $595 = invoke_ii(67, 24) | 0;
       $596 = __THREW__;
       __THREW__ = 0;
       if ($596 & 1) {
        label = 187;
        break L47;
       }
       $600 = $595 + 16 | 0;
       $601 = $599 + 16 | 0;
       $606 = HEAP32[$601 + 4 >> 2] | 0;
       $607 = $600;
       HEAP32[$607 >> 2] = HEAP32[$601 >> 2];
       HEAP32[$607 + 4 >> 2] = $606;
       HEAP32[$$byval_copy >> 2] = $161;
       HEAP32[$$byval_copy95 + 0 >> 2] = HEAP32[$$byval_copy + 0 >> 2];
       $611 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($20, $$byval_copy95, $$byval_copy92, $600) | 0;
       $612 = HEAP32[$611 >> 2] | 0;
       if (!$612) {
        $614 = HEAP32[$$byval_copy92 >> 2] | 0;
        HEAP32[$595 >> 2] = 0;
        HEAP32[$595 + 4 >> 2] = 0;
        HEAP32[$595 + 8 >> 2] = $614;
        HEAP32[$611 >> 2] = $595;
        $618 = HEAP32[HEAP32[$20 >> 2] >> 2] | 0;
        if (!$618) $621 = $595; else {
         HEAP32[$20 >> 2] = $618;
         $621 = HEAP32[$611 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$159 >> 2] | 0, $621);
        HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + 1;
       } else if (($612 | 0) != ($595 | 0)) __ZdlPv($595);
       $627 = HEAP32[$626 + 4 >> 2] | 0;
       if (!$627) {
        $$0$i$i$i$i$i126 = $626;
        while (1) {
         $632 = HEAP32[$$0$i$i$i$i$i126 + 8 >> 2] | 0;
         if ((HEAP32[$632 >> 2] | 0) == ($$0$i$i$i$i$i126 | 0)) {
          $$cast$i$i$i$i$i127$lcssa = $632;
          break;
         } else $$0$i$i$i$i$i126 = $632;
        }
        $$01$i$i$i$i$i129 = $$cast$i$i$i$i$i127$lcssa;
       } else {
        $$0$i$i$i$i$i$i124 = $627;
        while (1) {
         $629 = HEAP32[$$0$i$i$i$i$i$i124 >> 2] | 0;
         if (!$629) {
          $$0$i$i$i$i$i$i124$lcssa = $$0$i$i$i$i$i$i124;
          break;
         } else $$0$i$i$i$i$i$i124 = $629;
        }
        $$01$i$i$i$i$i129 = $$0$i$i$i$i$i$i124$lcssa;
       }
       if (($$01$i$i$i$i$i129 | 0) == ($63 | 0)) break; else {
        $599 = $$01$i$i$i$i$i129;
        $626 = $$01$i$i$i$i$i129;
       }
      }
     }
     __THREW__ = 0;
     $636 = invoke_ii(67, 64) | 0;
     $637 = __THREW__;
     __THREW__ = 0;
     if ($637 & 1) {
      label = 188;
      break L47;
     }
     __THREW__ = 0;
     invoke_viiii(11, $636 | 0, $19 | 0, $20 | 0, $585 | 0);
     $639 = __THREW__;
     __THREW__ = 0;
     if ($639 & 1) {
      $$lcssa804 = $636;
      label = 185;
      break L47;
     }
     HEAP32[$2 >> 2] = $636;
     $641 = $588 + 16 | 0;
     $642 = HEAP32[$641 >> 2] | 0;
     if ($642 >>> 0 < (HEAP32[$588 + 20 >> 2] | 0) >>> 0) {
      if (!$642) $648 = 0; else {
       HEAP32[$642 >> 2] = $636;
       $648 = HEAP32[$641 >> 2] | 0;
      }
      HEAP32[$641 >> 2] = $648 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $588 + 12 | 0, $2 | 0);
      $650 = __THREW__;
      __THREW__ = 0;
      if ($650 & 1) {
       label = 188;
       break L47;
      }
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($20, HEAP32[$161 >> 2] | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     $value$0 = $636;
    }
    if ($583) {
     label = 192;
     break L47;
    }
    if ($got_comma$1$off0) {
     label = 201;
     break L47;
    }
    __THREW__ = 0;
    invoke_viiii(12, $id_tok | 0, $this | 0, 11, 0);
    $696 = __THREW__;
    __THREW__ = 0;
    if ($696 & 1) {
     label = 54;
     break L47;
    }
    __THREW__ = 0;
    $699 = invoke_iii(23, HEAP32[$65 >> 2] | 0, $151 | 0) | 0;
    $700 = __THREW__;
    __THREW__ = 0;
    if ($700 & 1) {
     label = 224;
     break L47;
    }
    __THREW__ = 0;
    invoke_viiii(12, $23 | 0, $this | 0, 23, 0);
    $702 = __THREW__;
    __THREW__ = 0;
    if ($702 & 1) {
     label = 224;
     break L47;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($152);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($153);
    __THREW__ = 0;
    $704 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $705 = __THREW__;
    __THREW__ = 0;
    if ($705 & 1) {
     label = 224;
     break L47;
    }
    __THREW__ = 0;
    invoke_viiii(12, $agg$result | 0, $this | 0, 1, 0);
    $707 = __THREW__;
    __THREW__ = 0;
    if ($707 & 1) {
     label = 224;
     break L47;
    }
    $709 = HEAP32[$65 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $24 | 0, $136 | 0);
    $710 = __THREW__;
    __THREW__ = 0;
    if ($710 & 1) {
     label = 225;
     break L47;
    }
    $712 = $138;
    $717 = HEAP32[$712 + 4 >> 2] | 0;
    $718 = $155;
    HEAP32[$718 >> 2] = HEAP32[$712 >> 2];
    HEAP32[$718 + 4 >> 2] = $717;
    $722 = $154;
    $727 = HEAP32[$722 + 4 >> 2] | 0;
    $728 = $156;
    HEAP32[$728 >> 2] = HEAP32[$722 >> 2];
    HEAP32[$728 + 4 >> 2] = $727;
    __THREW__ = 0;
    $732 = invoke_ii(67, 64) | 0;
    $733 = __THREW__;
    __THREW__ = 0;
    if ($733 & 1) {
     label = 226;
     break L47;
    }
    HEAP32[$732 >> 2] = 33968;
    __THREW__ = 0;
    invoke_vii(40, $732 + 4 | 0, $24 | 0);
    $736 = __THREW__;
    __THREW__ = 0;
    if ($736 & 1) {
     $$lcssa805 = $732;
     label = 222;
     break L47;
    }
    $738 = $732 + 16 | 0;
    HEAP32[$738 + 0 >> 2] = HEAP32[$155 + 0 >> 2];
    HEAP32[$738 + 4 >> 2] = HEAP32[$155 + 4 >> 2];
    HEAP32[$738 + 8 >> 2] = HEAP32[$155 + 8 >> 2];
    HEAP32[$738 + 12 >> 2] = HEAP32[$155 + 12 >> 2];
    HEAP32[$732 + 32 >> 2] = 16;
    HEAP32[$732 + 36 >> 2] = 0;
    HEAP32[$732 + 40 >> 2] = 0;
    HEAP32[$732 + 44 >> 2] = 0;
    HEAP32[$732 >> 2] = 35752;
    HEAP32[$732 + 48 >> 2] = $581;
    HEAP32[$732 + 52 >> 2] = $value$0;
    HEAP32[$732 + 56 >> 2] = $699;
    HEAP32[$732 + 60 >> 2] = $704;
    HEAP32[$1 >> 2] = $732;
    $747 = $709 + 16 | 0;
    $748 = HEAP32[$747 >> 2] | 0;
    if ($748 >>> 0 < (HEAP32[$709 + 20 >> 2] | 0) >>> 0) {
     if (!$748) $754 = 0; else {
      HEAP32[$748 >> 2] = $732;
      $754 = HEAP32[$747 >> 2] | 0;
     }
     HEAP32[$747 >> 2] = $754 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(51, $709 + 12 | 0, $1 | 0);
     $756 = __THREW__;
     __THREW__ = 0;
     if ($756 & 1) {
      label = 226;
      break L47;
     }
    }
    HEAP32[$obj >> 2] = $732;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($157);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
    $$039 = 0;
    $got_comma$2$off0 = 0;
    $last_was_local$2$off0 = 0;
   } else {
    if (!$got_comma$1$off0) {
     label = 231;
     break L47;
    }
    if (($1369 | 0) == 14 | ($1369 | 0) == 11) {
     $this$idx57$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $784 = $this$idx57$val$idx$val + 8 | 0;
     HEAP32[$26 >> 2] = HEAP32[$784 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $69 | 0, $this$idx57$val$idx$val + 12 | 0);
     $787 = __THREW__;
     __THREW__ = 0;
     if ($787 & 1) {
      label = 250;
      break L47;
     }
     HEAP32[$26 >> 2] = HEAP32[$784 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $70 | 0, $this$idx57$val$idx$val + 24 | 0);
     $791 = __THREW__;
     __THREW__ = 0;
     if ($791 & 1) {
      label = 242;
      break L47;
     }
     $795 = $this$idx57$val$idx$val + 36 | 0;
     HEAP32[$71 + 0 >> 2] = HEAP32[$795 + 0 >> 2];
     HEAP32[$71 + 4 >> 2] = HEAP32[$795 + 4 >> 2];
     HEAP32[$71 + 8 >> 2] = HEAP32[$795 + 8 >> 2];
     HEAP32[$71 + 12 >> 2] = HEAP32[$795 + 12 >> 2];
     $796 = HEAP32[$784 >> 2] | 0;
     HEAP32[$26 >> 2] = $796;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
     if (($796 | 0) == 8) {
      $this$idx$val$idx$val$i174 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $798 = $this$idx$val$idx$val$i174 + 8 | 0;
      HEAP32[$27 >> 2] = HEAP32[$798 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $72 | 0, $this$idx$val$idx$val$i174 + 12 | 0);
      $801 = __THREW__;
      __THREW__ = 0;
      if ($801 & 1) {
       label = 250;
       break L47;
      }
      HEAP32[$27 >> 2] = HEAP32[$798 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $73 | 0, $this$idx$val$idx$val$i174 + 24 | 0);
      $805 = __THREW__;
      __THREW__ = 0;
      if ($805 & 1) {
       label = 246;
       break L47;
      }
      $809 = $this$idx$val$idx$val$i174 + 36 | 0;
      HEAP32[$74 + 0 >> 2] = HEAP32[$809 + 0 >> 2];
      HEAP32[$74 + 4 >> 2] = HEAP32[$809 + 4 >> 2];
      HEAP32[$74 + 8 >> 2] = HEAP32[$809 + 8 >> 2];
      HEAP32[$74 + 12 >> 2] = HEAP32[$809 + 12 >> 2];
      HEAP32[$27 >> 2] = HEAP32[$798 >> 2];
      $811 = HEAP32[$this >> 2] | 0;
      $813 = HEAP32[$811 + 4 >> 2] | 0;
      $814 = $813 + 4 | 0;
      $816 = HEAP32[$813 >> 2] | 0;
      HEAP32[$816 + 4 >> 2] = HEAP32[$814 >> 2];
      HEAP32[HEAP32[$814 >> 2] >> 2] = $816;
      $819 = $811 + 8 | 0;
      HEAP32[$819 >> 2] = (HEAP32[$819 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($813 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($813 + 12 | 0);
      __ZdlPv($813);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
      __THREW__ = 0;
      invoke_viii(3, $29 | 0, 35608, 16);
      $824 = __THREW__;
      __THREW__ = 0;
      if ($824 & 1) {
       label = 250;
       break L47;
      }
      __THREW__ = 0;
      invoke_viiii(14, $28 | 0, $this | 0, $29 | 0, $obj_level | 0);
      $826 = __THREW__;
      __THREW__ = 0;
      if ($826 & 1) {
       label = 252;
       break L47;
      }
      $828 = HEAP32[$28 >> 2] | 0;
      $829 = HEAP32[$75 >> 2] | 0;
      HEAP32[$76 >> 2] = 0;
      HEAP32[$75 >> 2] = 0;
      HEAP32[$28 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      $1047 = $829;
      $1049 = $828;
      $is_method$0$off0 = 1;
     } else {
      $1047 = 0;
      $1049 = 0;
      $is_method$0$off0 = 0;
     };
     HEAP32[$plus_loc + 0 >> 2] = 0;
     HEAP32[$plus_loc + 4 >> 2] = 0;
     HEAP32[$plus_loc + 8 >> 2] = 0;
     HEAP32[$plus_loc + 12 >> 2] = 0;
     HEAP32[$plus_loc + 16 >> 2] = 0;
     HEAP32[$plus_loc + 20 >> 2] = 0;
     HEAP32[$plus_loc + 24 >> 2] = 0;
     $this$idx56$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $834 = $this$idx56$val$idx$val + 8 | 0;
     HEAP32[$30 >> 2] = HEAP32[$834 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $77 | 0, $this$idx56$val$idx$val + 12 | 0);
     $837 = __THREW__;
     __THREW__ = 0;
     if ($837 & 1) {
      $$lcssa807 = $1049;
      label = 273;
      break L47;
     }
     HEAP32[$30 >> 2] = HEAP32[$834 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $78 | 0, $this$idx56$val$idx$val + 24 | 0);
     $841 = __THREW__;
     __THREW__ = 0;
     if ($841 & 1) {
      $$lcssa808 = $1049;
      label = 255;
      break L47;
     }
     $845 = $this$idx56$val$idx$val + 36 | 0;
     HEAP32[$79 + 0 >> 2] = HEAP32[$845 + 0 >> 2];
     HEAP32[$79 + 4 >> 2] = HEAP32[$845 + 4 >> 2];
     HEAP32[$79 + 8 >> 2] = HEAP32[$845 + 8 >> 2];
     HEAP32[$79 + 12 >> 2] = HEAP32[$845 + 12 >> 2];
     $846 = HEAP32[$834 >> 2] | 0;
     HEAP32[$30 >> 2] = $846;
     if (($846 | 0) == 13) {
      $this$idx55$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $848 = $this$idx55$val$idx$val + 8 | 0;
      HEAP32[$31 >> 2] = HEAP32[$848 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $80 | 0, $this$idx55$val$idx$val + 12 | 0);
      $851 = __THREW__;
      __THREW__ = 0;
      if ($851 & 1) {
       $$lcssa809 = $1049;
       label = 275;
       break L47;
      }
      HEAP32[$31 >> 2] = HEAP32[$848 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $81 | 0, $this$idx55$val$idx$val + 24 | 0);
      $855 = __THREW__;
      __THREW__ = 0;
      if ($855 & 1) {
       $$lcssa810 = $1049;
       label = 259;
       break L47;
      }
      $859 = $this$idx55$val$idx$val + 36 | 0;
      HEAP32[$82 + 0 >> 2] = HEAP32[$859 + 0 >> 2];
      HEAP32[$82 + 4 >> 2] = HEAP32[$859 + 4 >> 2];
      HEAP32[$82 + 8 >> 2] = HEAP32[$859 + 8 >> 2];
      HEAP32[$82 + 12 >> 2] = HEAP32[$859 + 12 >> 2];
      HEAP32[$31 >> 2] = HEAP32[$848 >> 2];
      $862 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($80, 39312) | 0) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($78);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
      if ($862) {
       $this$idx54$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $863 = $this$idx54$val$idx$val + 8 | 0;
       HEAP32[$32 >> 2] = HEAP32[$863 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $83 | 0, $this$idx54$val$idx$val + 12 | 0);
       $866 = __THREW__;
       __THREW__ = 0;
       if ($866 & 1) {
        $$lcssa807 = $1049;
        label = 273;
        break L47;
       }
       HEAP32[$32 >> 2] = HEAP32[$863 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $84 | 0, $this$idx54$val$idx$val + 24 | 0);
       $870 = __THREW__;
       __THREW__ = 0;
       if ($870 & 1) {
        $$lcssa811 = $1049;
        label = 263;
        break L47;
       }
       $874 = $this$idx54$val$idx$val + 36 | 0;
       HEAP32[$85 + 0 >> 2] = HEAP32[$874 + 0 >> 2];
       HEAP32[$85 + 4 >> 2] = HEAP32[$874 + 4 >> 2];
       HEAP32[$85 + 8 >> 2] = HEAP32[$874 + 8 >> 2];
       HEAP32[$85 + 12 >> 2] = HEAP32[$874 + 12 >> 2];
       HEAP32[$32 >> 2] = HEAP32[$863 >> 2];
       if (!(HEAP8[$plus_loc >> 0] & 1)) {
        HEAP8[$87 >> 0] = 0;
        HEAP8[$plus_loc >> 0] = 0;
       } else {
        HEAP8[HEAP32[$92 >> 2] >> 0] = 0;
        HEAP32[$93 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $plus_loc | 0, 0);
       $880 = __THREW__;
       __THREW__ = 0;
       if ($880 & 1) {
        label = 268;
        break L47;
       };
       HEAP32[$plus_loc + 0 >> 2] = HEAP32[$86 + 0 >> 2];
       HEAP32[$plus_loc + 4 >> 2] = HEAP32[$86 + 4 >> 2];
       HEAP32[$plus_loc + 8 >> 2] = HEAP32[$86 + 8 >> 2];
       HEAP32[$86 + 0 >> 2] = 0;
       HEAP32[$86 + 4 >> 2] = 0;
       HEAP32[$86 + 8 >> 2] = 0;
       HEAP32[$88 + 0 >> 2] = HEAP32[$85 + 0 >> 2];
       HEAP32[$88 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
       HEAP32[$88 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
       HEAP32[$88 + 12 >> 2] = HEAP32[$85 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($83);
       $this$idx$val$idx$val$i200 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $884 = $this$idx$val$idx$val$i200 + 8 | 0;
       HEAP32[$33 >> 2] = HEAP32[$884 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $89 | 0, $this$idx$val$idx$val$i200 + 12 | 0);
       $887 = __THREW__;
       __THREW__ = 0;
       if ($887 & 1) {
        $$lcssa807 = $1049;
        label = 273;
        break L47;
       }
       HEAP32[$33 >> 2] = HEAP32[$884 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $90 | 0, $this$idx$val$idx$val$i200 + 24 | 0);
       $891 = __THREW__;
       __THREW__ = 0;
       if ($891 & 1) {
        $$lcssa813 = $1049;
        label = 271;
        break L47;
       }
       $895 = $this$idx$val$idx$val$i200 + 36 | 0;
       HEAP32[$91 + 0 >> 2] = HEAP32[$895 + 0 >> 2];
       HEAP32[$91 + 4 >> 2] = HEAP32[$895 + 4 >> 2];
       HEAP32[$91 + 8 >> 2] = HEAP32[$895 + 8 >> 2];
       HEAP32[$91 + 12 >> 2] = HEAP32[$895 + 12 >> 2];
       HEAP32[$33 >> 2] = HEAP32[$884 >> 2];
       $897 = HEAP32[$this >> 2] | 0;
       $899 = HEAP32[$897 + 4 >> 2] | 0;
       $900 = $899 + 4 | 0;
       $902 = HEAP32[$899 >> 2] | 0;
       HEAP32[$902 + 4 >> 2] = HEAP32[$900 >> 2];
       HEAP32[HEAP32[$900 >> 2] >> 2] = $902;
       $905 = $897 + 8 | 0;
       HEAP32[$905 >> 2] = (HEAP32[$905 >> 2] | 0) + -1;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($899 + 24 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($899 + 12 | 0);
       __ZdlPv($899);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($90);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
       $plus_sugar$0$off0 = 1;
      } else $plus_sugar$0$off0 = 0;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($78);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
      $plus_sugar$0$off0 = 0;
     }
     __THREW__ = 0;
     invoke_viiii(12, $34 | 0, $this | 0, 4, 0);
     $914 = __THREW__;
     __THREW__ = 0;
     if ($914 & 1) {
      $$lcssa807 = $1049;
      label = 273;
      break L47;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($94);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
     $this$idx53$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $916 = $this$idx53$val$idx$val + 8 | 0;
     HEAP32[$35 >> 2] = HEAP32[$916 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $96 | 0, $this$idx53$val$idx$val + 12 | 0);
     $919 = __THREW__;
     __THREW__ = 0;
     if ($919 & 1) {
      $$lcssa807 = $1049;
      label = 273;
      break L47;
     }
     HEAP32[$35 >> 2] = HEAP32[$916 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $97 | 0, $this$idx53$val$idx$val + 24 | 0);
     $923 = __THREW__;
     __THREW__ = 0;
     if ($923 & 1) {
      $$lcssa814 = $1049;
      label = 281;
      break L47;
     }
     $927 = $this$idx53$val$idx$val + 36 | 0;
     HEAP32[$98 + 0 >> 2] = HEAP32[$927 + 0 >> 2];
     HEAP32[$98 + 4 >> 2] = HEAP32[$927 + 4 >> 2];
     HEAP32[$98 + 8 >> 2] = HEAP32[$927 + 8 >> 2];
     HEAP32[$98 + 12 >> 2] = HEAP32[$927 + 12 >> 2];
     $928 = HEAP32[$916 >> 2] | 0;
     HEAP32[$35 >> 2] = $928;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($96);
     do if (($928 | 0) == 4) {
      $this$idx$val$idx$val$i212 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $930 = $this$idx$val$idx$val$i212 + 8 | 0;
      HEAP32[$36 >> 2] = HEAP32[$930 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $99 | 0, $this$idx$val$idx$val$i212 + 12 | 0);
      $933 = __THREW__;
      __THREW__ = 0;
      if ($933 & 1) {
       $$lcssa807 = $1049;
       label = 273;
       break L47;
      }
      HEAP32[$36 >> 2] = HEAP32[$930 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $100 | 0, $this$idx$val$idx$val$i212 + 24 | 0);
      $937 = __THREW__;
      __THREW__ = 0;
      if ($937 & 1) {
       $$lcssa815 = $1049;
       label = 285;
       break L47;
      }
      $941 = $this$idx$val$idx$val$i212 + 36 | 0;
      HEAP32[$101 + 0 >> 2] = HEAP32[$941 + 0 >> 2];
      HEAP32[$101 + 4 >> 2] = HEAP32[$941 + 4 >> 2];
      HEAP32[$101 + 8 >> 2] = HEAP32[$941 + 8 >> 2];
      HEAP32[$101 + 12 >> 2] = HEAP32[$941 + 12 >> 2];
      HEAP32[$36 >> 2] = HEAP32[$930 >> 2];
      $943 = HEAP32[$this >> 2] | 0;
      $945 = HEAP32[$943 + 4 >> 2] | 0;
      $946 = $945 + 4 | 0;
      $948 = HEAP32[$945 >> 2] | 0;
      HEAP32[$948 + 4 >> 2] = HEAP32[$946 >> 2];
      HEAP32[HEAP32[$946 >> 2] >> 2] = $948;
      $951 = $943 + 8 | 0;
      HEAP32[$951 >> 2] = (HEAP32[$951 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($945 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($945 + 12 | 0);
      __ZdlPv($945);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($100);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
      $this$idx52$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $956 = $this$idx52$val$idx$val + 8 | 0;
      HEAP32[$37 >> 2] = HEAP32[$956 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $102 | 0, $this$idx52$val$idx$val + 12 | 0);
      $959 = __THREW__;
      __THREW__ = 0;
      if ($959 & 1) {
       $$lcssa807 = $1049;
       label = 273;
       break L47;
      }
      HEAP32[$37 >> 2] = HEAP32[$956 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $103 | 0, $this$idx52$val$idx$val + 24 | 0);
      $963 = __THREW__;
      __THREW__ = 0;
      if ($963 & 1) {
       $$lcssa816 = $1049;
       label = 288;
       break L47;
      }
      $967 = $this$idx52$val$idx$val + 36 | 0;
      HEAP32[$104 + 0 >> 2] = HEAP32[$967 + 0 >> 2];
      HEAP32[$104 + 4 >> 2] = HEAP32[$967 + 4 >> 2];
      HEAP32[$104 + 8 >> 2] = HEAP32[$967 + 8 >> 2];
      HEAP32[$104 + 12 >> 2] = HEAP32[$967 + 12 >> 2];
      $968 = HEAP32[$956 >> 2] | 0;
      HEAP32[$37 >> 2] = $968;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102);
      if (($968 | 0) != 4) {
       $1213 = 1;
       break;
      }
      $this$idx$val$idx$val$i224 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $970 = $this$idx$val$idx$val$i224 + 8 | 0;
      HEAP32[$38 >> 2] = HEAP32[$970 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $105 | 0, $this$idx$val$idx$val$i224 + 12 | 0);
      $973 = __THREW__;
      __THREW__ = 0;
      if ($973 & 1) {
       $$lcssa807 = $1049;
       label = 273;
       break L47;
      }
      HEAP32[$38 >> 2] = HEAP32[$970 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $106 | 0, $this$idx$val$idx$val$i224 + 24 | 0);
      $977 = __THREW__;
      __THREW__ = 0;
      if ($977 & 1) {
       $$lcssa817 = $1049;
       label = 292;
       break L47;
      }
      $981 = $this$idx$val$idx$val$i224 + 36 | 0;
      HEAP32[$107 + 0 >> 2] = HEAP32[$981 + 0 >> 2];
      HEAP32[$107 + 4 >> 2] = HEAP32[$981 + 4 >> 2];
      HEAP32[$107 + 8 >> 2] = HEAP32[$981 + 8 >> 2];
      HEAP32[$107 + 12 >> 2] = HEAP32[$981 + 12 >> 2];
      HEAP32[$38 >> 2] = HEAP32[$970 >> 2];
      $983 = HEAP32[$this >> 2] | 0;
      $985 = HEAP32[$983 + 4 >> 2] | 0;
      $986 = $985 + 4 | 0;
      $988 = HEAP32[$985 >> 2] | 0;
      HEAP32[$988 + 4 >> 2] = HEAP32[$986 >> 2];
      HEAP32[HEAP32[$986 >> 2] >> 2] = $988;
      $991 = $983 + 8 | 0;
      HEAP32[$991 >> 2] = (HEAP32[$991 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($985 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($985 + 12 | 0);
      __ZdlPv($985);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($106);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
      $1213 = 2;
     } else $1213 = 0; while (0);
     __THREW__ = 0;
     invoke_viii(9, $0 | 0, $literal_fields | 0, $66 | 0);
     $996 = __THREW__;
     __THREW__ = 0;
     if ($996 & 1) {
      $$lcssa807 = $1049;
      label = 273;
      break L47;
     }
     if (!(HEAP8[$108 >> 0] | 0)) {
      $$lcssa818 = $1049;
      label = 296;
      break L47;
     }
     $1031 = HEAP32[$65 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $40 | 0, $67 | 0);
     $1032 = __THREW__;
     __THREW__ = 0;
     if ($1032 & 1) {
      $$lcssa807 = $1049;
      label = 273;
      break L47;
     };
     HEAP32[$109 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
     HEAP32[$109 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
     HEAP32[$109 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
     HEAP32[$109 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $41 | 0, $66 | 0);
     $1034 = __THREW__;
     __THREW__ = 0;
     if ($1034 & 1) {
      $$lcssa819 = $1049;
      label = 332;
      break L47;
     }
     __THREW__ = 0;
     $1036 = invoke_iiii(27, $1031 | 0, $40 | 0, $41 | 0) | 0;
     $1037 = __THREW__;
     __THREW__ = 0;
     if ($1037 & 1) {
      $$lcssa820 = $1049;
      label = 333;
      break L47;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
     __THREW__ = 0;
     $1039 = invoke_iiii(28, $this | 0, 15, $110 | 0) | 0;
     $1040 = __THREW__;
     __THREW__ = 0;
     if ($1040 & 1) {
      $$lcssa807 = $1049;
      label = 273;
      break L47;
     }
     if ($is_method$0$off0) {
      $1042 = HEAP32[$65 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $42 | 0, $1039 + 4 | 0);
      $1044 = __THREW__;
      __THREW__ = 0;
      if ($1044 & 1) {
       $$lcssa807 = $1049;
       label = 273;
       break L47;
      }
      $1046 = $1039 + 16 | 0;
      HEAP32[$111 + 0 >> 2] = HEAP32[$1046 + 0 >> 2];
      HEAP32[$111 + 4 >> 2] = HEAP32[$1046 + 4 >> 2];
      HEAP32[$111 + 8 >> 2] = HEAP32[$1046 + 8 >> 2];
      HEAP32[$111 + 12 >> 2] = HEAP32[$1046 + 12 >> 2];
      HEAP32[$43 >> 2] = 0;
      HEAP32[$112 >> 2] = 0;
      HEAP32[$113 >> 2] = 0;
      $1051 = $1047 - $1049 | 0;
      $1052 = $1051 >> 2;
      do if ($1052) {
       if ($1052 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(179, $43 | 0);
        $1055 = __THREW__;
        __THREW__ = 0;
        if ($1055 & 1) {
         $$lcssa821 = $1049;
         label = 321;
         break L47;
        }
       }
       __THREW__ = 0;
       $1057 = invoke_ii(67, $1051 | 0) | 0;
       $1058 = __THREW__;
       __THREW__ = 0;
       if ($1058 & 1) {
        $$lcssa821 = $1049;
        label = 321;
        break L47;
       }
       HEAP32[$112 >> 2] = $1057;
       HEAP32[$43 >> 2] = $1057;
       HEAP32[$113 >> 2] = $1057 + ($1052 << 2);
       if (($1049 | 0) == ($1047 | 0)) break;
       $$01$i$i = $1049;
       $1063 = $1057;
       do {
        HEAP32[$1063 >> 2] = HEAP32[$$01$i$i >> 2];
        $1063 = (HEAP32[$112 >> 2] | 0) + 4 | 0;
        HEAP32[$112 >> 2] = $1063;
        $$01$i$i = $$01$i$i + 4 | 0;
       } while (($$01$i$i | 0) != ($1047 | 0));
      } while (0);
      __THREW__ = 0;
      $1078 = invoke_iiiii(6, $1042 | 0, $42 | 0, $43 | 0, $1039 | 0) | 0;
      $1079 = __THREW__;
      __THREW__ = 0;
      if ($1079 & 1) {
       $$lcssa822 = $1049;
       label = 336;
       break L47;
      }
      $1081 = HEAP32[$43 >> 2] | 0;
      $1083 = $1081;
      if ($1081) {
       $1084 = HEAP32[$112 >> 2] | 0;
       if (($1084 | 0) != ($1081 | 0)) HEAP32[$112 >> 2] = $1084 + (~(($1084 + -4 - $1083 | 0) >>> 2) << 2);
       __ZdlPv($1081);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
      $1169 = $1078;
     } else $1169 = $1039;
     if ($plus_sugar$0$off0) {
      $1105 = HEAP32[$65 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $44 | 0, $plus_loc | 0);
      $1106 = __THREW__;
      __THREW__ = 0;
      if ($1106 & 1) {
       $$lcssa807 = $1049;
       label = 273;
       break L47;
      };
      HEAP32[$114 + 0 >> 2] = HEAP32[$88 + 0 >> 2];
      HEAP32[$114 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
      HEAP32[$114 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
      HEAP32[$114 + 12 >> 2] = HEAP32[$88 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $45 | 0, $66 | 0);
      $1108 = __THREW__;
      __THREW__ = 0;
      if ($1108 & 1) {
       $$lcssa823 = $1049;
       label = 372;
       break L47;
      }
      __THREW__ = 0;
      $1110 = invoke_iiii(27, $1105 | 0, $44 | 0, $45 | 0) | 0;
      $1111 = __THREW__;
      __THREW__ = 0;
      if ($1111 & 1) {
       $$lcssa824 = $1049;
       label = 373;
       break L47;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
      $1113 = HEAP32[$65 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $46 | 0, $plus_loc | 0);
      $1114 = __THREW__;
      __THREW__ = 0;
      if ($1114 & 1) {
       $$lcssa807 = $1049;
       label = 273;
       break L47;
      };
      HEAP32[$115 + 0 >> 2] = HEAP32[$88 + 0 >> 2];
      HEAP32[$115 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
      HEAP32[$115 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
      HEAP32[$115 + 12 >> 2] = HEAP32[$88 + 12 >> 2];
      $1116 = HEAP32[$65 >> 2] | 0;
      HEAP32[$47 + 0 >> 2] = 0;
      HEAP32[$47 + 4 >> 2] = 0;
      HEAP32[$47 + 8 >> 2] = 0;
      HEAP32[$47 + 12 >> 2] = 0;
      HEAP32[$47 + 16 >> 2] = 0;
      HEAP32[$47 + 20 >> 2] = 0;
      HEAP32[$47 + 24 >> 2] = 0;
      __THREW__ = 0;
      $1117 = invoke_ii(67, 48) | 0;
      $1118 = __THREW__;
      __THREW__ = 0;
      if ($1118 & 1) {
       $$lcssa825 = $1049;
       label = 375;
       break L47;
      }
      HEAP32[$1117 >> 2] = 33968;
      __THREW__ = 0;
      invoke_vii(40, $1117 + 4 | 0, $47 | 0);
      $1121 = __THREW__;
      __THREW__ = 0;
      if ($1121 & 1) {
       $$lcssa826 = $1049;
       $$lcssa830 = $1117;
       label = 353;
       break L47;
      }
      $1123 = $1117 + 16 | 0;
      HEAP32[$1123 + 0 >> 2] = HEAP32[$116 + 0 >> 2];
      HEAP32[$1123 + 4 >> 2] = HEAP32[$116 + 4 >> 2];
      HEAP32[$1123 + 8 >> 2] = HEAP32[$116 + 8 >> 2];
      HEAP32[$1123 + 12 >> 2] = HEAP32[$116 + 12 >> 2];
      HEAP32[$1117 + 32 >> 2] = 18;
      HEAP32[$1117 + 36 >> 2] = 0;
      HEAP32[$1117 + 40 >> 2] = 0;
      HEAP32[$1117 + 44 >> 2] = 0;
      HEAP32[$1117 >> 2] = 35720;
      HEAP32[$$byval_copy >> 2] = $1117;
      $1128 = $1116 + 16 | 0;
      $1129 = HEAP32[$1128 >> 2] | 0;
      if ($1129 >>> 0 < (HEAP32[$1116 + 20 >> 2] | 0) >>> 0) {
       if (!$1129) $1135 = 0; else {
        HEAP32[$1129 >> 2] = $1117;
        $1135 = HEAP32[$1128 >> 2] | 0;
       }
       HEAP32[$1128 >> 2] = $1135 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1116 + 12 | 0, $$byval_copy | 0);
       $1137 = __THREW__;
       __THREW__ = 0;
       if ($1137 & 1) {
        $$lcssa825 = $1049;
        label = 375;
        break L47;
       }
      }
      __THREW__ = 0;
      $1141 = invoke_ii(67, 56) | 0;
      $1142 = __THREW__;
      __THREW__ = 0;
      if ($1142 & 1) {
       $$lcssa825 = $1049;
       label = 375;
       break L47;
      }
      HEAP32[$1141 >> 2] = 33968;
      __THREW__ = 0;
      invoke_vii(40, $1141 + 4 | 0, $46 | 0);
      $1145 = __THREW__;
      __THREW__ = 0;
      if ($1145 & 1) {
       $$lcssa827 = $1049;
       $$lcssa834 = $1141;
       label = 361;
       break L47;
      }
      $1147 = $1141 + 16 | 0;
      HEAP32[$1147 + 0 >> 2] = HEAP32[$115 + 0 >> 2];
      HEAP32[$1147 + 4 >> 2] = HEAP32[$115 + 4 >> 2];
      HEAP32[$1147 + 8 >> 2] = HEAP32[$115 + 8 >> 2];
      HEAP32[$1147 + 12 >> 2] = HEAP32[$115 + 12 >> 2];
      HEAP32[$1141 + 32 >> 2] = 9;
      HEAP32[$1141 + 36 >> 2] = 0;
      HEAP32[$1141 + 40 >> 2] = 0;
      HEAP32[$1141 + 44 >> 2] = 0;
      HEAP32[$1141 >> 2] = 35736;
      HEAP32[$1141 + 48 >> 2] = $1117;
      HEAP32[$1141 + 52 >> 2] = $1110;
      HEAP32[$$byval_copy92 >> 2] = $1141;
      $1154 = $1113 + 16 | 0;
      $1155 = HEAP32[$1154 >> 2] | 0;
      if ($1155 >>> 0 < (HEAP32[$1113 + 20 >> 2] | 0) >>> 0) {
       if (!$1155) $1161 = 0; else {
        HEAP32[$1155 >> 2] = $1141;
        $1161 = HEAP32[$1154 >> 2] | 0;
       }
       HEAP32[$1154 >> 2] = $1161 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1113 + 12 | 0, $$byval_copy92 | 0);
       $1163 = __THREW__;
       __THREW__ = 0;
       if ($1163 & 1) {
        $$lcssa825 = $1049;
        label = 375;
        break L47;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
      $1167 = HEAP32[$65 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $48 | 0, $1169 + 4 | 0);
      $1170 = __THREW__;
      __THREW__ = 0;
      if ($1170 & 1) {
       $$lcssa807 = $1049;
       label = 273;
       break L47;
      }
      $1172 = $1169 + 16 | 0;
      HEAP32[$117 + 0 >> 2] = HEAP32[$1172 + 0 >> 2];
      HEAP32[$117 + 4 >> 2] = HEAP32[$1172 + 4 >> 2];
      HEAP32[$117 + 8 >> 2] = HEAP32[$1172 + 8 >> 2];
      HEAP32[$117 + 12 >> 2] = HEAP32[$1172 + 12 >> 2];
      __THREW__ = 0;
      $1173 = invoke_ii(67, 60) | 0;
      $1174 = __THREW__;
      __THREW__ = 0;
      if ($1174 & 1) {
       $$lcssa828 = $1049;
       label = 377;
       break L47;
      }
      HEAP32[$1173 >> 2] = 33968;
      __THREW__ = 0;
      invoke_vii(40, $1173 + 4 | 0, $48 | 0);
      $1177 = __THREW__;
      __THREW__ = 0;
      if ($1177 & 1) {
       $$lcssa829 = $1049;
       $$lcssa837 = $1173;
       label = 370;
       break L47;
      }
      $1179 = $1173 + 16 | 0;
      HEAP32[$1179 + 0 >> 2] = HEAP32[$117 + 0 >> 2];
      HEAP32[$1179 + 4 >> 2] = HEAP32[$117 + 4 >> 2];
      HEAP32[$1179 + 8 >> 2] = HEAP32[$117 + 8 >> 2];
      HEAP32[$1179 + 12 >> 2] = HEAP32[$117 + 12 >> 2];
      HEAP32[$1173 + 32 >> 2] = 2;
      HEAP32[$1173 + 36 >> 2] = 0;
      HEAP32[$1173 + 40 >> 2] = 0;
      HEAP32[$1173 + 44 >> 2] = 0;
      HEAP32[$1173 >> 2] = 35352;
      HEAP32[$1173 + 48 >> 2] = $1141;
      HEAP32[$1173 + 52 >> 2] = 2;
      HEAP32[$1173 + 56 >> 2] = $1169;
      HEAP32[$$byval_copy95 >> 2] = $1173;
      $1187 = $1167 + 16 | 0;
      $1188 = HEAP32[$1187 >> 2] | 0;
      if ($1188 >>> 0 < (HEAP32[$1167 + 20 >> 2] | 0) >>> 0) {
       if (!$1188) $1194 = 0; else {
        HEAP32[$1188 >> 2] = $1173;
        $1194 = HEAP32[$1187 >> 2] | 0;
       }
       HEAP32[$1187 >> 2] = $1194 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1167 + 12 | 0, $$byval_copy95 | 0);
       $1196 = __THREW__;
       __THREW__ = 0;
       if ($1196 & 1) {
        $$lcssa828 = $1049;
        label = 377;
        break L47;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
      $1215 = $1173;
     } else $1215 = $1169;
     __THREW__ = 0;
     $1208 = invoke_ii(67, 20) | 0;
     $1209 = __THREW__;
     __THREW__ = 0;
     if ($1209 & 1) {
      $$lcssa807 = $1049;
      label = 273;
      break L47;
     }
     HEAP32[$1208 + 8 >> 2] = $1036;
     HEAP32[$1208 + 12 >> 2] = $1213;
     HEAP32[$1208 + 16 >> 2] = $1215;
     HEAP32[$1208 + 4 >> 2] = $fields;
     $1217 = HEAP32[$fields >> 2] | 0;
     HEAP32[$1208 >> 2] = $1217;
     HEAP32[$1217 + 4 >> 2] = $1208;
     HEAP32[$fields >> 2] = $1208;
     HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($plus_loc);
     if (!$1049) {
      $$039 = 1;
      $got_comma$2$off0 = 0;
      $last_was_local$2$off0 = 0;
      break;
     }
     __ZdlPv($1049);
     $$039 = 1;
     $got_comma$2$off0 = 0;
     $last_was_local$2$off0 = 0;
     break;
    } else if (($1369 | 0) == 24) {
     __THREW__ = 0;
     invoke_viii(6, $this | 0, $let_binds | 0, $obj_level | 0);
     $1224 = __THREW__;
     __THREW__ = 0;
     if ($1224 & 1) {
      label = 54;
      break L47;
     } else {
      $$039 = 1;
      $got_comma$2$off0 = 0;
      $last_was_local$2$off0 = 1;
      break;
     }
    } else if (($1369 | 0) == 2) {
     __THREW__ = 0;
     $1226 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $1227 = __THREW__;
     __THREW__ = 0;
     if ($1227 & 1) {
      label = 54;
      break L47;
     }
     __THREW__ = 0;
     invoke_viiii(12, $49 | 0, $this | 0, 3, 0);
     $1229 = __THREW__;
     __THREW__ = 0;
     if ($1229 & 1) {
      label = 54;
      break L47;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($118);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($119);
     __THREW__ = 0;
     invoke_viiii(12, $50 | 0, $this | 0, 4, 0);
     $1231 = __THREW__;
     __THREW__ = 0;
     if ($1231 & 1) {
      label = 54;
      break L47;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($120);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($121);
     $this$idx51$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $1233 = $this$idx51$val$idx$val + 8 | 0;
     HEAP32[$51 >> 2] = HEAP32[$1233 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $122 | 0, $this$idx51$val$idx$val + 12 | 0);
     $1236 = __THREW__;
     __THREW__ = 0;
     if ($1236 & 1) {
      label = 54;
      break L47;
     }
     HEAP32[$51 >> 2] = HEAP32[$1233 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $123 | 0, $this$idx51$val$idx$val + 24 | 0);
     $1240 = __THREW__;
     __THREW__ = 0;
     if ($1240 & 1) {
      label = 390;
      break L47;
     }
     $1244 = $this$idx51$val$idx$val + 36 | 0;
     HEAP32[$124 + 0 >> 2] = HEAP32[$1244 + 0 >> 2];
     HEAP32[$124 + 4 >> 2] = HEAP32[$1244 + 4 >> 2];
     HEAP32[$124 + 8 >> 2] = HEAP32[$1244 + 8 >> 2];
     HEAP32[$124 + 12 >> 2] = HEAP32[$1244 + 12 >> 2];
     $1245 = HEAP32[$1233 >> 2] | 0;
     HEAP32[$51 >> 2] = $1245;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($122);
     do if (($1245 | 0) == 4) {
      $this$idx$val$idx$val$i296 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1247 = $this$idx$val$idx$val$i296 + 8 | 0;
      HEAP32[$52 >> 2] = HEAP32[$1247 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $125 | 0, $this$idx$val$idx$val$i296 + 12 | 0);
      $1250 = __THREW__;
      __THREW__ = 0;
      if ($1250 & 1) {
       label = 54;
       break L47;
      }
      HEAP32[$52 >> 2] = HEAP32[$1247 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $126 | 0, $this$idx$val$idx$val$i296 + 24 | 0);
      $1254 = __THREW__;
      __THREW__ = 0;
      if ($1254 & 1) {
       label = 394;
       break L47;
      }
      $1258 = $this$idx$val$idx$val$i296 + 36 | 0;
      HEAP32[$127 + 0 >> 2] = HEAP32[$1258 + 0 >> 2];
      HEAP32[$127 + 4 >> 2] = HEAP32[$1258 + 4 >> 2];
      HEAP32[$127 + 8 >> 2] = HEAP32[$1258 + 8 >> 2];
      HEAP32[$127 + 12 >> 2] = HEAP32[$1258 + 12 >> 2];
      HEAP32[$52 >> 2] = HEAP32[$1247 >> 2];
      $1260 = HEAP32[$this >> 2] | 0;
      $1262 = HEAP32[$1260 + 4 >> 2] | 0;
      $1263 = $1262 + 4 | 0;
      $1265 = HEAP32[$1262 >> 2] | 0;
      HEAP32[$1265 + 4 >> 2] = HEAP32[$1263 >> 2];
      HEAP32[HEAP32[$1263 >> 2] >> 2] = $1265;
      $1268 = $1260 + 8 | 0;
      HEAP32[$1268 >> 2] = (HEAP32[$1268 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1262 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1262 + 12 | 0);
      __ZdlPv($1262);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($126);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($125);
      $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1273 = $this$idx$val$idx$val + 8 | 0;
      HEAP32[$53 >> 2] = HEAP32[$1273 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $128 | 0, $this$idx$val$idx$val + 12 | 0);
      $1276 = __THREW__;
      __THREW__ = 0;
      if ($1276 & 1) {
       label = 54;
       break L47;
      }
      HEAP32[$53 >> 2] = HEAP32[$1273 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $129 | 0, $this$idx$val$idx$val + 24 | 0);
      $1280 = __THREW__;
      __THREW__ = 0;
      if ($1280 & 1) {
       label = 397;
       break L47;
      }
      $1284 = $this$idx$val$idx$val + 36 | 0;
      HEAP32[$130 + 0 >> 2] = HEAP32[$1284 + 0 >> 2];
      HEAP32[$130 + 4 >> 2] = HEAP32[$1284 + 4 >> 2];
      HEAP32[$130 + 8 >> 2] = HEAP32[$1284 + 8 >> 2];
      HEAP32[$130 + 12 >> 2] = HEAP32[$1284 + 12 >> 2];
      $1285 = HEAP32[$1273 >> 2] | 0;
      HEAP32[$53 >> 2] = $1285;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
      if (($1285 | 0) != 4) {
       $1321 = 1;
       break;
      }
      $this$idx$val$idx$val$i308 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1287 = $this$idx$val$idx$val$i308 + 8 | 0;
      HEAP32[$54 >> 2] = HEAP32[$1287 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $131 | 0, $this$idx$val$idx$val$i308 + 12 | 0);
      $1290 = __THREW__;
      __THREW__ = 0;
      if ($1290 & 1) {
       label = 54;
       break L47;
      }
      HEAP32[$54 >> 2] = HEAP32[$1287 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $132 | 0, $this$idx$val$idx$val$i308 + 24 | 0);
      $1294 = __THREW__;
      __THREW__ = 0;
      if ($1294 & 1) {
       label = 401;
       break L47;
      }
      $1298 = $this$idx$val$idx$val$i308 + 36 | 0;
      HEAP32[$133 + 0 >> 2] = HEAP32[$1298 + 0 >> 2];
      HEAP32[$133 + 4 >> 2] = HEAP32[$1298 + 4 >> 2];
      HEAP32[$133 + 8 >> 2] = HEAP32[$1298 + 8 >> 2];
      HEAP32[$133 + 12 >> 2] = HEAP32[$1298 + 12 >> 2];
      HEAP32[$54 >> 2] = HEAP32[$1287 >> 2];
      $1300 = HEAP32[$this >> 2] | 0;
      $1302 = HEAP32[$1300 + 4 >> 2] | 0;
      $1303 = $1302 + 4 | 0;
      $1305 = HEAP32[$1302 >> 2] | 0;
      HEAP32[$1305 + 4 >> 2] = HEAP32[$1303 >> 2];
      HEAP32[HEAP32[$1303 >> 2] >> 2] = $1305;
      $1308 = $1300 + 8 | 0;
      HEAP32[$1308 >> 2] = (HEAP32[$1308 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1302 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1302 + 12 | 0);
      __ZdlPv($1302);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($132);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($131);
      $1321 = 2;
     } else $1321 = 0; while (0);
     __THREW__ = 0;
     $1313 = invoke_iiii(28, $this | 0, 15, $110 | 0) | 0;
     $1314 = __THREW__;
     __THREW__ = 0;
     if ($1314 & 1) {
      label = 54;
      break L47;
     }
     __THREW__ = 0;
     $1316 = invoke_ii(67, 20) | 0;
     $1317 = __THREW__;
     __THREW__ = 0;
     if ($1317 & 1) {
      label = 54;
      break L47;
     }
     HEAP32[$1316 + 8 >> 2] = $1226;
     HEAP32[$1316 + 12 >> 2] = $1321;
     HEAP32[$1316 + 16 >> 2] = $1313;
     HEAP32[$1316 + 4 >> 2] = $fields;
     $1324 = HEAP32[$fields >> 2] | 0;
     HEAP32[$1316 >> 2] = $1324;
     HEAP32[$1324 + 4 >> 2] = $1316;
     HEAP32[$fields >> 2] = $1316;
     HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 1;
     $$039 = 1;
     $got_comma$2$off0 = 0;
     $last_was_local$2$off0 = 0;
     break;
    } else {
     label = 406;
     break L47;
    }
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
   if ($$039) {
    $got_comma$0$off0 = $got_comma$2$off0;
    $last_was_local$0$off0 = $last_was_local$2$off0;
   } else {
    label = 416;
    break;
   }
  }
  L332 : switch (label | 0) {
  case 29:
   {
    $232 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body63$index3Z2D = tempRet0;
    $eh$lpad$body63$indexZ2D = $232;
    label = 31;
    break L45;
    break;
   }
  case 37:
   {
    $249 = ___cxa_find_matching_catch() | 0;
    $250 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
    $eh$lpad$body63$index3Z2D = $250;
    $eh$lpad$body63$indexZ2D = $249;
    label = 31;
    break L45;
    break;
   }
  case 42:
   {
    $277 = ___cxa_find_matching_catch() | 0;
    $278 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($162);
    $eh$lpad$body70$index18Z2D = $278;
    $eh$lpad$body70$indexZ2D = $277;
    label = 55;
    break;
   }
  case 47:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 52:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 54:
   {
    $311 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body70$index18Z2D = tempRet0;
    $eh$lpad$body70$indexZ2D = $311;
    label = 55;
    break;
   }
  case 61:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index27 = tempRet0;
    label = 63;
    break;
   }
  case 62:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index27 = tempRet0;
    label = 63;
    break;
   }
  case 92:
   {
    $391 = ___cxa_find_matching_catch() | 0;
    $392 = tempRet0;
    __ZdlPv($$lcssa);
    $eh$lpad$body82$index32Z2D = $392;
    $eh$lpad$body82$indexZ2D = $391;
    label = 97;
    break;
   }
  case 95:
   {
    $412 = ___cxa_find_matching_catch() | 0;
    $413 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($14, HEAP32[$150 >> 2] | 0);
    $$01 = $412;
    $$04 = $413;
    label = 98;
    break;
   }
  case 96:
   {
    $415 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body82$index32Z2D = tempRet0;
    $eh$lpad$body82$indexZ2D = $415;
    label = 97;
    break;
   }
  case 105:
   {
    $457 = ___cxa_find_matching_catch() | 0;
    $458 = tempRet0;
    if ($$lcssa802) {
     $460 = HEAP32[$141 >> 2] | 0;
     $461 = $$lcssa800 + 4 | 0;
     $463 = HEAP32[$460 >> 2] | 0;
     HEAP32[$463 + 4 >> 2] = HEAP32[$461 >> 2];
     HEAP32[HEAP32[$461 >> 2] >> 2] = $463;
     HEAP32[$142 >> 2] = 0;
     if (($460 | 0) != ($16 | 0)) {
      $__f$01$i$i$i = $460;
      do {
       $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
       $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$i$looptemp);
      } while (($__f$01$i$i$i | 0) != ($16 | 0));
     }
    }
    $$110 = $458;
    $$12 = $457;
    label = 135;
    break;
   }
  case 117:
   {
    $486 = ___cxa_find_matching_catch() | 0;
    $487 = tempRet0;
    __ZdlPv($$lcssa806);
    $eh$lpad$body93$index37Z2D = $487;
    $eh$lpad$body93$indexZ2D = $486;
    label = 130;
    break;
   }
  case 129:
   {
    $515 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body93$index37Z2D = tempRet0;
    $eh$lpad$body93$indexZ2D = $515;
    label = 130;
    break;
   }
  case 141:
   {
    $545 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $17 | 0, 35368, 54);
    $546 = __THREW__;
    __THREW__ = 0;
    do if ($546 & 1) {
     $558 = ___cxa_find_matching_catch() | 0;
     $$312322 = tempRet0;
     $$3323 = $558;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $545 | 0, $67 | 0);
     $548 = __THREW__;
     __THREW__ = 0;
     if ($548 & 1) $$040 = 1; else {
      $550 = $545 + 12 | 0;
      HEAP32[$550 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
      HEAP32[$550 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$550 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$550 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $545 + 28 | 0, $17 | 0);
      $552 = __THREW__;
      __THREW__ = 0;
      if ($552 & 1) {
       $554 = ___cxa_find_matching_catch() | 0;
       $555 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($545);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
       $$312322 = $555;
       $$3323 = $554;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $545 | 0, 48, 176);
      $556 = __THREW__;
      __THREW__ = 0;
      if ($556 & 1) $$040 = 0; else {}
     }
     $560 = ___cxa_find_matching_catch() | 0;
     $561 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     if ($$040) {
      $$312322 = $561;
      $$3323 = $560;
     } else {
      $$19 = $560;
      $$1928 = $561;
      break L332;
     }
    } while (0);
    ___cxa_free_exception($545 | 0);
    $$19 = $$3323;
    $$1928 = $$312322;
    break;
   }
  case 150:
   {
    $562 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $18 | 0, 35424, 52);
    $563 = __THREW__;
    __THREW__ = 0;
    do if ($563 & 1) {
     $575 = ___cxa_find_matching_catch() | 0;
     $$413326 = tempRet0;
     $$4327 = $575;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $562 | 0, $67 | 0);
     $565 = __THREW__;
     __THREW__ = 0;
     if ($565 & 1) $$042 = 1; else {
      $567 = $562 + 12 | 0;
      HEAP32[$567 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
      HEAP32[$567 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$567 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$567 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $562 + 28 | 0, $18 | 0);
      $569 = __THREW__;
      __THREW__ = 0;
      if ($569 & 1) {
       $571 = ___cxa_find_matching_catch() | 0;
       $572 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($562);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
       $$413326 = $572;
       $$4327 = $571;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $562 | 0, 48, 176);
      $573 = __THREW__;
      __THREW__ = 0;
      if ($573 & 1) $$042 = 0; else {}
     }
     $577 = ___cxa_find_matching_catch() | 0;
     $578 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     if ($$042) {
      $$413326 = $578;
      $$4327 = $577;
     } else {
      $$19 = $577;
      $$1928 = $578;
      break L332;
     }
    } while (0);
    ___cxa_free_exception($562 | 0);
    $$19 = $$4327;
    $$1928 = $$413326;
    break;
   }
  case 185:
   {
    $652 = ___cxa_find_matching_catch() | 0;
    $653 = tempRet0;
    __ZdlPv($$lcssa804);
    $eh$lpad$body140$index42Z2D = $653;
    $eh$lpad$body140$indexZ2D = $652;
    label = 189;
    break;
   }
  case 187:
   {
    $655 = ___cxa_find_matching_catch() | 0;
    $656 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($20, HEAP32[$161 >> 2] | 0);
    $$5 = $655;
    $$514 = $656;
    label = 190;
    break;
   }
  case 188:
   {
    $658 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body140$index42Z2D = tempRet0;
    $eh$lpad$body140$indexZ2D = $658;
    label = 189;
    break;
   }
  case 192:
   {
    $662 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $21 | 0, 35480, 48);
    $663 = __THREW__;
    __THREW__ = 0;
    do if ($663 & 1) {
     $675 = ___cxa_find_matching_catch() | 0;
     $$615330 = tempRet0;
     $$6331 = $675;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $662 | 0, $67 | 0);
     $665 = __THREW__;
     __THREW__ = 0;
     if ($665 & 1) $$037 = 1; else {
      $667 = $662 + 12 | 0;
      HEAP32[$667 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
      HEAP32[$667 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$667 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$667 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $662 + 28 | 0, $21 | 0);
      $669 = __THREW__;
      __THREW__ = 0;
      if ($669 & 1) {
       $671 = ___cxa_find_matching_catch() | 0;
       $672 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($662);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
       $$615330 = $672;
       $$6331 = $671;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $662 | 0, 48, 176);
      $673 = __THREW__;
      __THREW__ = 0;
      if ($673 & 1) $$037 = 0; else {}
     }
     $677 = ___cxa_find_matching_catch() | 0;
     $678 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
     if ($$037) {
      $$615330 = $678;
      $$6331 = $677;
     } else {
      $$19 = $677;
      $$1928 = $678;
      break L332;
     }
    } while (0);
    ___cxa_free_exception($662 | 0);
    $$19 = $$6331;
    $$1928 = $$615330;
    break;
   }
  case 201:
   {
    $679 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $22 | 0, 35536, 28);
    $680 = __THREW__;
    __THREW__ = 0;
    do if ($680 & 1) {
     $692 = ___cxa_find_matching_catch() | 0;
     $$716334 = tempRet0;
     $$7335 = $692;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $679 | 0, $67 | 0);
     $682 = __THREW__;
     __THREW__ = 0;
     if ($682 & 1) $$035 = 1; else {
      $684 = $679 + 12 | 0;
      HEAP32[$684 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
      HEAP32[$684 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$684 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$684 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $679 + 28 | 0, $22 | 0);
      $686 = __THREW__;
      __THREW__ = 0;
      if ($686 & 1) {
       $688 = ___cxa_find_matching_catch() | 0;
       $689 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($679);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
       $$716334 = $689;
       $$7335 = $688;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $679 | 0, 48, 176);
      $690 = __THREW__;
      __THREW__ = 0;
      if ($690 & 1) $$035 = 0; else {}
     }
     $694 = ___cxa_find_matching_catch() | 0;
     $695 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     if ($$035) {
      $$716334 = $695;
      $$7335 = $694;
     } else {
      $$19 = $694;
      $$1928 = $695;
      break L332;
     }
    } while (0);
    ___cxa_free_exception($679 | 0);
    $$19 = $$7335;
    $$1928 = $$716334;
    break;
   }
  case 222:
   {
    $758 = ___cxa_find_matching_catch() | 0;
    $759 = tempRet0;
    __ZdlPv($$lcssa805);
    $eh$lpad$body161$index47Z2D = $759;
    $eh$lpad$body161$indexZ2D = $758;
    label = 227;
    break;
   }
  case 224:
   {
    $$9 = ___cxa_find_matching_catch() | 0;
    $$918 = tempRet0;
    label = 229;
    break;
   }
  case 225:
   {
    $$8 = ___cxa_find_matching_catch() | 0;
    $$817 = tempRet0;
    label = 228;
    break;
   }
  case 226:
   {
    $764 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body161$index47Z2D = tempRet0;
    $eh$lpad$body161$indexZ2D = $764;
    label = 227;
    break;
   }
  case 231:
   {
    $767 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $25 | 0, 35568, 35);
    $768 = __THREW__;
    __THREW__ = 0;
    do if ($768 & 1) {
     $780 = ___cxa_find_matching_catch() | 0;
     $$1019338 = tempRet0;
     $$10339 = $780;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $767 | 0, $67 | 0);
     $770 = __THREW__;
     __THREW__ = 0;
     if ($770 & 1) $$033 = 1; else {
      $772 = $767 + 12 | 0;
      HEAP32[$772 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
      HEAP32[$772 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$772 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$772 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $767 + 28 | 0, $25 | 0);
      $774 = __THREW__;
      __THREW__ = 0;
      if ($774 & 1) {
       $776 = ___cxa_find_matching_catch() | 0;
       $777 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($767);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
       $$1019338 = $777;
       $$10339 = $776;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $767 | 0, 48, 176);
      $778 = __THREW__;
      __THREW__ = 0;
      if ($778 & 1) $$033 = 0; else {}
     }
     $782 = ___cxa_find_matching_catch() | 0;
     $783 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
     if ($$033) {
      $$1019338 = $783;
      $$10339 = $782;
     } else {
      $$19 = $782;
      $$1928 = $783;
      break L332;
     }
    } while (0);
    ___cxa_free_exception($767 | 0);
    $$19 = $$10339;
    $$1928 = $$1019338;
    break;
   }
  case 242:
   {
    $793 = ___cxa_find_matching_catch() | 0;
    $794 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
    $eh$lpad$body170$index53Z2D = $794;
    $eh$lpad$body170$indexZ2D = $793;
    label = 251;
    break;
   }
  case 246:
   {
    $807 = ___cxa_find_matching_catch() | 0;
    $808 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
    $eh$lpad$body170$index53Z2D = $808;
    $eh$lpad$body170$indexZ2D = $807;
    label = 251;
    break;
   }
  case 250:
   {
    $830 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body170$index53Z2D = tempRet0;
    $eh$lpad$body170$indexZ2D = $830;
    label = 251;
    break;
   }
  case 252:
   {
    $832 = ___cxa_find_matching_catch() | 0;
    $833 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
    $$19 = $832;
    $$1928 = $833;
    break;
   }
  case 255:
   {
    $843 = ___cxa_find_matching_catch() | 0;
    $844 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
    $1370 = $$lcssa808;
    $eh$lpad$body185$index65Z2D = $844;
    $eh$lpad$body185$indexZ2D = $843;
    label = 274;
    break;
   }
  case 259:
   {
    $857 = ___cxa_find_matching_catch() | 0;
    $858 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
    $1371 = $$lcssa810;
    $eh$lpad$body189$index76Z2D = $858;
    $eh$lpad$body189$indexZ2D = $857;
    label = 276;
    break;
   }
  case 263:
   {
    $872 = ___cxa_find_matching_catch() | 0;
    $873 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($83);
    $1370 = $$lcssa811;
    $eh$lpad$body185$index65Z2D = $873;
    $eh$lpad$body185$indexZ2D = $872;
    label = 274;
    break;
   }
  case 268:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 271:
   {
    $893 = ___cxa_find_matching_catch() | 0;
    $894 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
    $1370 = $$lcssa813;
    $eh$lpad$body185$index65Z2D = $894;
    $eh$lpad$body185$indexZ2D = $893;
    label = 274;
    break;
   }
  case 273:
   {
    $910 = ___cxa_find_matching_catch() | 0;
    $1370 = $$lcssa807;
    $eh$lpad$body185$index65Z2D = tempRet0;
    $eh$lpad$body185$indexZ2D = $910;
    label = 274;
    break;
   }
  case 275:
   {
    $912 = ___cxa_find_matching_catch() | 0;
    $1371 = $$lcssa809;
    $eh$lpad$body189$index76Z2D = tempRet0;
    $eh$lpad$body189$indexZ2D = $912;
    label = 276;
    break;
   }
  case 281:
   {
    $925 = ___cxa_find_matching_catch() | 0;
    $926 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($96);
    $1370 = $$lcssa814;
    $eh$lpad$body185$index65Z2D = $926;
    $eh$lpad$body185$indexZ2D = $925;
    label = 274;
    break;
   }
  case 285:
   {
    $939 = ___cxa_find_matching_catch() | 0;
    $940 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
    $1370 = $$lcssa815;
    $eh$lpad$body185$index65Z2D = $940;
    $eh$lpad$body185$indexZ2D = $939;
    label = 274;
    break;
   }
  case 288:
   {
    $965 = ___cxa_find_matching_catch() | 0;
    $966 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102);
    $1370 = $$lcssa816;
    $eh$lpad$body185$index65Z2D = $966;
    $eh$lpad$body185$indexZ2D = $965;
    label = 274;
    break;
   }
  case 292:
   {
    $979 = ___cxa_find_matching_catch() | 0;
    $980 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
    $1370 = $$lcssa817;
    $eh$lpad$body185$index65Z2D = $980;
    $eh$lpad$body185$indexZ2D = $979;
    label = 274;
    break;
   }
  case 296:
   {
    $1000 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$39 + 0 >> 2] = 0;
    HEAP32[$39 + 4 >> 2] = 0;
    HEAP32[$39 + 8 >> 2] = 0;
    $1001 = HEAP8[$66 >> 0] | 0;
    if (!($1001 & 1)) $1008 = ($1001 & 255) >>> 1; else $1008 = HEAP32[$171 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(13, $39 | 0, 35632, 17, $1008 + 17 | 0);
    $1009 = __THREW__;
    __THREW__ = 0;
    do if ($1009 & 1) label = 305; else {
     __THREW__ = 0;
     invoke_iiii(31, $39 | 0, ((HEAP8[$66 >> 0] & 1) == 0 ? $165 : HEAP32[$170 >> 2] | 0) | 0, $1008 | 0) | 0;
     $1015 = __THREW__;
     __THREW__ = 0;
     if ($1015 & 1) label = 305; else {
      __THREW__ = 0;
      invoke_vii(40, $1000 | 0, $67 | 0);
      $1017 = __THREW__;
      __THREW__ = 0;
      if ($1017 & 1) $$030 = 1; else {
       $1019 = $1000 + 12 | 0;
       HEAP32[$1019 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
       HEAP32[$1019 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
       HEAP32[$1019 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
       HEAP32[$1019 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $1000 + 28 | 0, $39 | 0);
       $1021 = __THREW__;
       __THREW__ = 0;
       if ($1021 & 1) {
        $1023 = ___cxa_find_matching_catch() | 0;
        $1024 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1000);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
        $$1120343 = $1024;
        $$11344 = $1023;
        break;
       }
       __THREW__ = 0;
       invoke_viii(4, $1000 | 0, 48, 176);
       $1025 = __THREW__;
       __THREW__ = 0;
       if ($1025 & 1) $$030 = 0; else {}
      }
      $1029 = ___cxa_find_matching_catch() | 0;
      $1030 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
      if ($$030) {
       $$1120343 = $1030;
       $$11344 = $1029;
      } else {
       $$16 = $1029;
       $$1625 = $1030;
       $1222 = $$lcssa818;
       label = 382;
       break L332;
      }
     }
    } while (0);
    if ((label | 0) == 305) {
     $1027 = ___cxa_find_matching_catch() | 0;
     $1028 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
     $$1120343 = $1028;
     $$11344 = $1027;
    }
    ___cxa_free_exception($1000 | 0);
    $$16 = $$11344;
    $$1625 = $$1120343;
    $1222 = $$lcssa818;
    label = 382;
    break;
   }
  case 321:
   {
    $1067 = ___cxa_find_matching_catch() | 0;
    $1068 = tempRet0;
    $1069 = HEAP32[$43 >> 2] | 0;
    $1071 = $1069;
    if ($1069) {
     $1072 = HEAP32[$112 >> 2] | 0;
     if (($1072 | 0) != ($1069 | 0)) HEAP32[$112 >> 2] = $1072 + (~(($1072 + -4 - $1071 | 0) >>> 2) << 2);
     __ZdlPv($1069);
    }
    $$13 = $1067;
    $$1322 = $1068;
    $1373 = $$lcssa821;
    label = 340;
    break;
   }
  case 332:
   {
    $1090 = ___cxa_find_matching_catch() | 0;
    $$1221 = tempRet0;
    $$123 = $1090;
    $1372 = $$lcssa819;
    label = 334;
    break;
   }
  case 333:
   {
    $1092 = ___cxa_find_matching_catch() | 0;
    $1093 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
    $$1221 = $1093;
    $$123 = $1092;
    $1372 = $$lcssa820;
    label = 334;
    break;
   }
  case 336:
   {
    $1094 = ___cxa_find_matching_catch() | 0;
    $1095 = tempRet0;
    $1096 = HEAP32[$43 >> 2] | 0;
    $1098 = $1096;
    if (!$1096) {
     $$13 = $1094;
     $$1322 = $1095;
     $1373 = $$lcssa822;
     label = 340;
    } else {
     $1099 = HEAP32[$112 >> 2] | 0;
     if (($1099 | 0) != ($1096 | 0)) HEAP32[$112 >> 2] = $1099 + (~(($1099 + -4 - $1098 | 0) >>> 2) << 2);
     __ZdlPv($1096);
     $$13 = $1094;
     $$1322 = $1095;
     $1373 = $$lcssa822;
     label = 340;
    }
    break;
   }
  case 353:
   {
    $1139 = ___cxa_find_matching_catch() | 0;
    $1140 = tempRet0;
    __ZdlPv($$lcssa830);
    $1374 = $$lcssa826;
    $eh$lpad$body263$index82Z2D = $1140;
    $eh$lpad$body263$indexZ2D = $1139;
    label = 376;
    break;
   }
  case 361:
   {
    $1165 = ___cxa_find_matching_catch() | 0;
    $1166 = tempRet0;
    __ZdlPv($$lcssa834);
    $1374 = $$lcssa827;
    $eh$lpad$body263$index82Z2D = $1166;
    $eh$lpad$body263$indexZ2D = $1165;
    label = 376;
    break;
   }
  case 370:
   {
    $1198 = ___cxa_find_matching_catch() | 0;
    $1199 = tempRet0;
    __ZdlPv($$lcssa837);
    $1375 = $$lcssa829;
    $eh$lpad$body277$index88Z2D = $1199;
    $eh$lpad$body277$indexZ2D = $1198;
    label = 378;
    break;
   }
  case 372:
   {
    $$14 = ___cxa_find_matching_catch() | 0;
    $$1423 = tempRet0;
    $1376 = $$lcssa823;
    label = 374;
    break;
   }
  case 373:
   {
    $1202 = ___cxa_find_matching_catch() | 0;
    $1203 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
    $$14 = $1202;
    $$1423 = $1203;
    $1376 = $$lcssa824;
    label = 374;
    break;
   }
  case 375:
   {
    $1204 = ___cxa_find_matching_catch() | 0;
    $1374 = $$lcssa825;
    $eh$lpad$body263$index82Z2D = tempRet0;
    $eh$lpad$body263$indexZ2D = $1204;
    label = 376;
    break;
   }
  case 377:
   {
    $1206 = ___cxa_find_matching_catch() | 0;
    $1375 = $$lcssa828;
    $eh$lpad$body277$index88Z2D = tempRet0;
    $eh$lpad$body277$indexZ2D = $1206;
    label = 378;
    break;
   }
  case 390:
   {
    $1242 = ___cxa_find_matching_catch() | 0;
    $1243 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($122);
    $eh$lpad$body70$index18Z2D = $1243;
    $eh$lpad$body70$indexZ2D = $1242;
    label = 55;
    break;
   }
  case 394:
   {
    $1256 = ___cxa_find_matching_catch() | 0;
    $1257 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($125);
    $eh$lpad$body70$index18Z2D = $1257;
    $eh$lpad$body70$indexZ2D = $1256;
    label = 55;
    break;
   }
  case 397:
   {
    $1282 = ___cxa_find_matching_catch() | 0;
    $1283 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
    $eh$lpad$body70$index18Z2D = $1283;
    $eh$lpad$body70$indexZ2D = $1282;
    label = 55;
    break;
   }
  case 401:
   {
    $1296 = ___cxa_find_matching_catch() | 0;
    $1297 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($131);
    $eh$lpad$body70$index18Z2D = $1297;
    $eh$lpad$body70$indexZ2D = $1296;
    label = 55;
    break;
   }
  case 406:
   {
    $1328 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $55 | 0, 35656, 24);
    $1329 = __THREW__;
    __THREW__ = 0;
    if ($1329 & 1) {
     $1335 = ___cxa_find_matching_catch() | 0;
     $$1827350 = tempRet0;
     $$18351 = $1335;
    } else {
     __THREW__ = 0;
     invoke_viii(7, $1328 | 0, $next | 0, $55 | 0);
     $1331 = __THREW__;
     __THREW__ = 0;
     if ($1331 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $1328 | 0, 48, 176);
      $1333 = __THREW__;
      __THREW__ = 0;
      if ($1333 & 1) $$0 = 0; else {}
     }
     $1337 = ___cxa_find_matching_catch() | 0;
     $1338 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     if ($$0) {
      $$1827350 = $1338;
      $$18351 = $1337;
     } else {
      $$19 = $1337;
      $$1928 = $1338;
      break;
     }
    }
    ___cxa_free_exception($1328 | 0);
    $$19 = $$18351;
    $$1928 = $$1827350;
    break;
   }
  case 416:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$63 >> 2] | 0);
    if (!(HEAP32[$60 >> 2] | 0)) {
     $1353 = HEAP32[$58 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1353);
     STACKTOP = sp;
     return;
    }
    $1342 = HEAP32[$59 >> 2] | 0;
    $1344 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
    $1346 = HEAP32[$1342 >> 2] | 0;
    HEAP32[$1346 + 4 >> 2] = HEAP32[$1344 >> 2];
    HEAP32[HEAP32[$1344 >> 2] >> 2] = $1346;
    HEAP32[$60 >> 2] = 0;
    if (($1342 | 0) == ($fields | 0)) {
     $1353 = HEAP32[$58 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1353);
     STACKTOP = sp;
     return;
    }
    $__f$01$i$i316 = $1342;
    do {
     $__f$01$i$i316$looptemp = $__f$01$i$i316;
     $__f$01$i$i316 = HEAP32[$__f$01$i$i316 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i316$looptemp);
    } while (($__f$01$i$i316 | 0) != ($fields | 0));
    $1353 = HEAP32[$58 >> 2] | 0;
    __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1353);
    STACKTOP = sp;
    return;
   }
  }
  switch (label | 0) {
  case 55:
   {
    $$19 = $eh$lpad$body70$indexZ2D;
    $$1928 = $eh$lpad$body70$index18Z2D;
    break;
   }
  case 63:
   {
    $$2 = $lpad$phi$index;
    $$211 = $lpad$phi$index27;
    label = 136;
    break;
   }
  case 97:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($14, HEAP32[$150 >> 2] | 0);
    $$01 = $eh$lpad$body82$indexZ2D;
    $$04 = $eh$lpad$body82$index32Z2D;
    label = 98;
    break;
   }
  case 130:
   {
    if (!(HEAP32[$142 >> 2] | 0)) {
     $$110 = $eh$lpad$body93$index37Z2D;
     $$12 = $eh$lpad$body93$indexZ2D;
     label = 135;
    } else {
     $519 = HEAP32[$141 >> 2] | 0;
     $521 = (HEAP32[$16 >> 2] | 0) + 4 | 0;
     $523 = HEAP32[$519 >> 2] | 0;
     HEAP32[$523 + 4 >> 2] = HEAP32[$521 >> 2];
     HEAP32[HEAP32[$521 >> 2] >> 2] = $523;
     HEAP32[$142 >> 2] = 0;
     if (($519 | 0) == ($16 | 0)) {
      $$110 = $eh$lpad$body93$index37Z2D;
      $$12 = $eh$lpad$body93$indexZ2D;
      label = 135;
     } else {
      $__f$01$i$i98 = $519;
      do {
       $__f$01$i$i98$looptemp = $__f$01$i$i98;
       $__f$01$i$i98 = HEAP32[$__f$01$i$i98 + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i98$looptemp);
      } while (($__f$01$i$i98 | 0) != ($16 | 0));
      $$110 = $eh$lpad$body93$index37Z2D;
      $$12 = $eh$lpad$body93$indexZ2D;
      label = 135;
     }
    }
    break;
   }
  case 189:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($20, HEAP32[$161 >> 2] | 0);
    $$5 = $eh$lpad$body140$indexZ2D;
    $$514 = $eh$lpad$body140$index42Z2D;
    label = 190;
    break;
   }
  case 227:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    $$8 = $eh$lpad$body161$indexZ2D;
    $$817 = $eh$lpad$body161$index47Z2D;
    label = 228;
    break;
   }
  case 251:
   {
    $$19 = $eh$lpad$body170$indexZ2D;
    $$1928 = $eh$lpad$body170$index53Z2D;
    break;
   }
  case 274:
   {
    $$16 = $eh$lpad$body185$indexZ2D;
    $$1625 = $eh$lpad$body185$index65Z2D;
    $1222 = $1370;
    label = 382;
    break;
   }
  case 276:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($78);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
    $$16 = $eh$lpad$body189$indexZ2D;
    $$1625 = $eh$lpad$body189$index76Z2D;
    $1222 = $1371;
    label = 382;
    break;
   }
  case 334:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
    $$16 = $$123;
    $$1625 = $$1221;
    $1222 = $1372;
    label = 382;
    break;
   }
  case 340:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
    $$16 = $$13;
    $$1625 = $$1322;
    $1222 = $1373;
    label = 382;
    break;
   }
  case 374:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    $$16 = $$14;
    $$1625 = $$1423;
    $1222 = $1376;
    label = 382;
    break;
   }
  case 376:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
    $$16 = $eh$lpad$body263$indexZ2D;
    $$1625 = $eh$lpad$body263$index82Z2D;
    $1222 = $1374;
    label = 382;
    break;
   }
  case 378:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    $$16 = $eh$lpad$body277$indexZ2D;
    $$1625 = $eh$lpad$body277$index88Z2D;
    $1222 = $1375;
    label = 382;
    break;
   }
  }
  if ((label | 0) == 98) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   $$2 = $$01;
   $$211 = $$04;
   label = 136;
  } else if ((label | 0) == 135) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
   $$2 = $$12;
   $$211 = $$110;
   label = 136;
  } else if ((label | 0) == 190) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
   $$19 = $$5;
   $$1928 = $$514;
  } else if ((label | 0) == 228) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result + 16 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($143);
   $$9 = $$8;
   $$918 = $$817;
   label = 229;
  } else if ((label | 0) == 382) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($plus_loc);
   if (!$1222) {
    $$19 = $$16;
    $$1928 = $$1625;
   } else {
    __ZdlPv($1222);
    $$19 = $$16;
    $$1928 = $$1625;
   }
  }
  if ((label | 0) == 136) if (!(HEAP32[$135 >> 2] | 0)) {
   $$19 = $$2;
   $$1928 = $$211;
  } else {
   $532 = HEAP32[$134 >> 2] | 0;
   $534 = (HEAP32[$r >> 2] | 0) + 4 | 0;
   $536 = HEAP32[$532 >> 2] | 0;
   HEAP32[$536 + 4 >> 2] = HEAP32[$534 >> 2];
   HEAP32[HEAP32[$534 >> 2] >> 2] = $536;
   HEAP32[$135 >> 2] = 0;
   if (($532 | 0) == ($r | 0)) {
    $$19 = $$2;
    $$1928 = $$211;
   } else {
    $__f$01$i$i101 = $532;
    do {
     $__f$01$i$i101$looptemp = $__f$01$i$i101;
     $__f$01$i$i101 = HEAP32[$__f$01$i$i101 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i101$looptemp);
    } while (($__f$01$i$i101 | 0) != ($r | 0));
    $$19 = $$2;
    $$1928 = $$211;
   }
  } else if ((label | 0) == 229) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($157);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
   $$19 = $$9;
   $$1928 = $$918;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
  $$20 = $$19;
  $$2029 = $$1928;
 } while (0);
 if ((label | 0) == 31) {
  $$20 = $eh$lpad$body63$indexZ2D;
  $$2029 = $eh$lpad$body63$index3Z2D;
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$63 >> 2] | 0);
 if (!(HEAP32[$60 >> 2] | 0)) {
  $1368 = HEAP32[$58 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1368);
  ___resumeException($$20 | 0);
 }
 $1357 = HEAP32[$59 >> 2] | 0;
 $1359 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
 $1361 = HEAP32[$1357 >> 2] | 0;
 HEAP32[$1361 + 4 >> 2] = HEAP32[$1359 >> 2];
 HEAP32[HEAP32[$1359 >> 2] >> 2] = $1361;
 HEAP32[$60 >> 2] = 0;
 if (($1357 | 0) == ($fields | 0)) {
  $1368 = HEAP32[$58 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1368);
  ___resumeException($$20 | 0);
 }
 $__f$01$i$i319 = $1357;
 do {
  $__f$01$i$i319$looptemp = $__f$01$i$i319;
  $__f$01$i$i319 = HEAP32[$__f$01$i$i319 + 4 >> 2] | 0;
  __ZdlPv($__f$01$i$i319$looptemp);
 } while (($__f$01$i$i319 | 0) != ($fields | 0));
 $1368 = HEAP32[$58 >> 2] | 0;
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1368);
 ___resumeException($$20 | 0);
}
function __GLOBAL__sub_I_parser_cpp() {
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$i7$i114$i$i = 0, $$0$i7$i129$i$i = 0, $$0$i7$i144$i$i = 0, $$0$i7$i159$i$i = 0, $$0$i7$i174$i$i = 0, $$0$i7$i189$i$i = 0, $$0$i7$i204$i$i = 0, $$0$i7$i219$i$i = 0, $$0$i7$i234$i$i = 0, $$0$i7$i24$i$i = 0, $$0$i7$i39$i$i = 0, $$0$i7$i54$i$i = 0, $$0$i7$i69$i$i = 0, $$0$i7$i84$i$i = 0, $$0$i7$i9$i$i = 0, $$0$i7$i99$i$i = 0, $$01$i$i = 0, $$01$i$i25 = 0, $$lcssa = 0, $$lcssa218 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa225 = 0, $$lcssa226 = 0, $$lcssa229 = 0, $$lcssa230 = 0, $$lcssa233 = 0, $$lcssa234 = 0, $$lcssa237 = 0, $$lcssa238 = 0, $$lcssa241 = 0, $$lcssa242 = 0, $$lcssa245 = 0, $$lcssa246 = 0, $$lcssa249 = 0, $$lcssa250 = 0, $$lcssa253 = 0, $$lcssa254 = 0, $$lcssa257 = 0, $$lcssa258 = 0, $$lcssa261 = 0, $$lcssa262 = 0, $$lcssa265 = 0, $$lcssa266 = 0, $$lcssa269 = 0, $$lcssa270 = 0, $$lcssa273 = 0, $$lcssa274 = 0, $$lcssa277 = 0, $$lcssa278 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $126 = 0, $128 = 0, $13 = 0, $131 = 0, $135 = 0, $138 = 0, $14 = 0, $140 = 0, $143 = 0, $144 = 0, $147 = 0, $148 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $163 = 0, $166 = 0, $168 = 0, $17 = 0, $171 = 0, $172 = 0, $175 = 0, $176 = 0, $18 = 0, $182 = 0, $184 = 0, $187 = 0, $191 = 0, $194 = 0, $196 = 0, $199 = 0, $2 = 0, $200 = 0, $203 = 0, $204 = 0, $210 = 0, $212 = 0, $215 = 0, $219 = 0, $222 = 0, $224 = 0, $227 = 0, $228 = 0, $231 = 0, $232 = 0, $238 = 0, $240 = 0, $243 = 0, $247 = 0, $250 = 0, $252 = 0, $255 = 0, $256 = 0, $259 = 0, $26 = 0, $260 = 0, $266 = 0, $268 = 0, $271 = 0, $275 = 0, $278 = 0, $28 = 0, $280 = 0, $283 = 0, $284 = 0, $287 = 0, $288 = 0, $294 = 0, $296 = 0, $299 = 0, $3 = 0, $303 = 0, $306 = 0, $308 = 0, $31 = 0, $311 = 0, $312 = 0, $315 = 0, $316 = 0, $32 = 0, $322 = 0, $324 = 0, $327 = 0, $331 = 0, $334 = 0, $336 = 0, $339 = 0, $340 = 0, $343 = 0, $344 = 0, $35 = 0, $350 = 0, $352 = 0, $355 = 0, $359 = 0, $36 = 0, $362 = 0, $364 = 0, $367 = 0, $368 = 0, $371 = 0, $372 = 0, $378 = 0, $380 = 0, $383 = 0, $387 = 0, $390 = 0, $392 = 0, $395 = 0, $396 = 0, $399 = 0, $4 = 0, $400 = 0, $406 = 0, $408 = 0, $411 = 0, $415 = 0, $418 = 0, $42 = 0, $420 = 0, $423 = 0, $424 = 0, $427 = 0, $428 = 0, $434 = 0, $436 = 0, $439 = 0, $44 = 0, $443 = 0, $446 = 0, $448 = 0, $451 = 0, $452 = 0, $455 = 0, $456 = 0, $462 = 0, $464 = 0, $467 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $474 = 0, $476 = 0, $477 = 0, $479 = 0, $480 = 0, $482 = 0, $484 = 0, $488 = 0, $491 = 0, $495 = 0, $497 = 0, $498 = 0, $5 = 0, $500 = 0, $501 = 0, $503 = 0, $505 = 0, $509 = 0, $51 = 0, $512 = 0, $516 = 0, $518 = 0, $519 = 0, $521 = 0, $522 = 0, $524 = 0, $526 = 0, $530 = 0, $533 = 0, $537 = 0, $539 = 0, $54 = 0, $540 = 0, $542 = 0, $543 = 0, $545 = 0, $547 = 0, $551 = 0, $554 = 0, $557 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $569 = 0, $571 = 0, $572 = 0, $574 = 0, $575 = 0, $577 = 0, $579 = 0, $583 = 0, $586 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $595 = 0, $596 = 0, $598 = 0, $6 = 0, $60 = 0, $600 = 0, $604 = 0, $607 = 0, $611 = 0, $613 = 0, $614 = 0, $616 = 0, $617 = 0, $619 = 0, $621 = 0, $625 = 0, $628 = 0, $63 = 0, $632 = 0, $634 = 0, $635 = 0, $637 = 0, $638 = 0, $64 = 0, $640 = 0, $642 = 0, $646 = 0, $649 = 0, $653 = 0, $655 = 0, $656 = 0, $658 = 0, $659 = 0, $661 = 0, $663 = 0, $667 = 0, $670 = 0, $674 = 0, $676 = 0, $677 = 0, $679 = 0, $680 = 0, $682 = 0, $684 = 0, $688 = 0, $691 = 0, $695 = 0, $697 = 0, $698 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $703 = 0, $705 = 0, $709 = 0, $712 = 0, $716 = 0, $718 = 0, $719 = 0, $72 = 0, $721 = 0, $722 = 0, $724 = 0, $726 = 0, $730 = 0, $733 = 0, $737 = 0, $739 = 0, $740 = 0, $742 = 0, $743 = 0, $745 = 0, $747 = 0, $75 = 0, $751 = 0, $754 = 0, $758 = 0, $760 = 0, $761 = 0, $763 = 0, $764 = 0, $766 = 0, $768 = 0, $772 = 0, $775 = 0, $779 = 0, $781 = 0, $782 = 0, $784 = 0, $785 = 0, $787 = 0, $789 = 0, $79 = 0, $793 = 0, $796 = 0, $8 = 0, $800 = 0, $802 = 0, $803 = 0, $805 = 0, $806 = 0, $808 = 0, $810 = 0, $814 = 0, $817 = 0, $82 = 0, $821 = 0, $823 = 0, $824 = 0, $826 = 0, $827 = 0, $829 = 0, $831 = 0, $835 = 0, $838 = 0, $84 = 0, $842 = 0, $844 = 0, $845 = 0, $847 = 0, $848 = 0, $850 = 0, $852 = 0, $856 = 0, $859 = 0, $863 = 0, $865 = 0, $866 = 0, $868 = 0, $869 = 0, $87 = 0, $871 = 0, $873 = 0, $877 = 0, $88 = 0, $880 = 0, $884 = 0, $886 = 0, $887 = 0, $889 = 0, $890 = 0, $892 = 0, $894 = 0, $898 = 0, $9 = 0, $901 = 0, $905 = 0, $907 = 0, $908 = 0, $91 = 0, $910 = 0, $911 = 0, $913 = 0, $915 = 0, $919 = 0, $92 = 0, $922 = 0, $925 = 0, $927 = 0, $928 = 0, $929 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $960 = 0, $961 = 0, $962 = 0, $98 = 0, $__nd$0$be$in$i$i109$i$i = 0, $__nd$0$be$in$i$i124$i$i = 0, $__nd$0$be$in$i$i139$i$i = 0, $__nd$0$be$in$i$i154$i$i = 0, $__nd$0$be$in$i$i169$i$i = 0, $__nd$0$be$in$i$i184$i$i = 0, $__nd$0$be$in$i$i19$i$i = 0, $__nd$0$be$in$i$i199$i$i = 0, $__nd$0$be$in$i$i214$i$i = 0, $__nd$0$be$in$i$i229$i$i = 0, $__nd$0$be$in$i$i34$i$i = 0, $__nd$0$be$in$i$i4$i$i = 0, $__nd$0$be$in$i$i49$i$i = 0, $__nd$0$be$in$i$i64$i$i = 0, $__nd$0$be$in$i$i79$i$i = 0, $__nd$0$be$in$i$i94$i$i = 0, $__nd$0$i$i108$i$i = 0, $__nd$0$i$i108$i$i$lcssa = 0, $__nd$0$i$i108$i$i$lcssa247 = 0, $__nd$0$i$i108$i$i$lcssa248 = 0, $__nd$0$i$i123$i$i = 0, $__nd$0$i$i123$i$i$lcssa = 0, $__nd$0$i$i123$i$i$lcssa243 = 0, $__nd$0$i$i123$i$i$lcssa244 = 0, $__nd$0$i$i138$i$i = 0, $__nd$0$i$i138$i$i$lcssa = 0, $__nd$0$i$i138$i$i$lcssa239 = 0, $__nd$0$i$i138$i$i$lcssa240 = 0, $__nd$0$i$i153$i$i = 0, $__nd$0$i$i153$i$i$lcssa = 0, $__nd$0$i$i153$i$i$lcssa235 = 0, $__nd$0$i$i153$i$i$lcssa236 = 0, $__nd$0$i$i168$i$i = 0, $__nd$0$i$i168$i$i$lcssa = 0, $__nd$0$i$i168$i$i$lcssa231 = 0, $__nd$0$i$i168$i$i$lcssa232 = 0, $__nd$0$i$i18$i$i = 0, $__nd$0$i$i18$i$i$lcssa = 0, $__nd$0$i$i18$i$i$lcssa271 = 0, $__nd$0$i$i18$i$i$lcssa272 = 0, $__nd$0$i$i183$i$i = 0, $__nd$0$i$i183$i$i$lcssa = 0, $__nd$0$i$i183$i$i$lcssa227 = 0, $__nd$0$i$i183$i$i$lcssa228 = 0, $__nd$0$i$i198$i$i = 0, $__nd$0$i$i198$i$i$lcssa = 0, $__nd$0$i$i198$i$i$lcssa223 = 0, $__nd$0$i$i198$i$i$lcssa224 = 0, $__nd$0$i$i213$i$i = 0, $__nd$0$i$i213$i$i$lcssa = 0, $__nd$0$i$i213$i$i$lcssa219 = 0, $__nd$0$i$i213$i$i$lcssa220 = 0, $__nd$0$i$i228$i$i = 0, $__nd$0$i$i228$i$i$lcssa = 0, $__nd$0$i$i228$i$i$lcssa216 = 0, $__nd$0$i$i228$i$i$lcssa217 = 0, $__nd$0$i$i3$i$i = 0, $__nd$0$i$i3$i$i$lcssa = 0, $__nd$0$i$i3$i$i$lcssa275 = 0, $__nd$0$i$i3$i$i$lcssa276 = 0, $__nd$0$i$i33$i$i = 0, $__nd$0$i$i33$i$i$lcssa = 0, $__nd$0$i$i33$i$i$lcssa267 = 0, $__nd$0$i$i33$i$i$lcssa268 = 0, $__nd$0$i$i48$i$i = 0, $__nd$0$i$i48$i$i$lcssa = 0, $__nd$0$i$i48$i$i$lcssa263 = 0, $__nd$0$i$i48$i$i$lcssa264 = 0, $__nd$0$i$i63$i$i = 0, $__nd$0$i$i63$i$i$lcssa = 0, $__nd$0$i$i63$i$i$lcssa259 = 0, $__nd$0$i$i63$i$i$lcssa260 = 0, $__nd$0$i$i78$i$i = 0, $__nd$0$i$i78$i$i$lcssa = 0, $__nd$0$i$i78$i$i$lcssa255 = 0, $__nd$0$i$i78$i$i$lcssa256 = 0, $__nd$0$i$i93$i$i = 0, $__nd$0$i$i93$i$i$lcssa = 0, $__nd$0$i$i93$i$i$lcssa251 = 0, $__nd$0$i$i93$i$i$lcssa252 = 0, $__parent$i$i$i5 = 0, $__parent$i107$i$i = 0, $__parent$i11$i$i3 = 0, $__parent$i115$i$i = 0, $__parent$i123$i$i = 0, $__parent$i19$i$i2 = 0, $__parent$i27$i$i = 0, $__parent$i3$i$i4 = 0, $__parent$i35$i$i = 0, $__parent$i43$i$i = 0, $__parent$i51$i$i = 0, $__parent$i59$i$i = 0, $__parent$i67$i$i = 0, $__parent$i75$i$i = 0, $__parent$i83$i$i = 0, $__parent$i91$i$i1 = 0, $__parent$i99$i$i = 0, $__r$0$i$i$i = 0, $__r$0$i$i$i9 = 0, $__r$0$i102$i$i = 0, $__r$0$i103$i$i = 0, $__r$0$i110$i$i = 0, $__r$0$i118$i$i = 0, $__r$0$i118$i$i24 = 0, $__r$0$i126$i$i = 0, $__r$0$i13$i$i = 0, $__r$0$i133$i$i = 0, $__r$0$i14$i$i = 0, $__r$0$i14$i$i17 = 0, $__r$0$i148$i$i = 0, $__r$0$i163$i$i = 0, $__r$0$i178$i$i = 0, $__r$0$i193$i$i = 0, $__r$0$i208$i$i = 0, $__r$0$i22$i$i = 0, $__r$0$i22$i$i21 = 0, $__r$0$i223$i$i = 0, $__r$0$i238$i$i = 0, $__r$0$i28$i$i = 0, $__r$0$i30$i$i = 0, $__r$0$i38$i$i = 0, $__r$0$i43$i$i = 0, $__r$0$i46$i$i = 0, $__r$0$i54$i$i = 0, $__r$0$i58$i$i = 0, $__r$0$i6$i$i = 0, $__r$0$i6$i$i13 = 0, $__r$0$i62$i$i = 0, $__r$0$i70$i$i = 0, $__r$0$i73$i$i = 0, $__r$0$i78$i$i = 0, $__r$0$i86$i$i = 0, $__r$0$i88$i$i = 0, $__r$0$i94$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__parent$i123$i$i = sp + 300 | 0;
 $__parent$i115$i$i = sp + 296 | 0;
 $__parent$i107$i$i = sp + 292 | 0;
 $__parent$i99$i$i = sp + 288 | 0;
 $__parent$i91$i$i1 = sp + 276 | 0;
 $__parent$i83$i$i = sp + 264 | 0;
 $__parent$i75$i$i = sp + 252 | 0;
 $__parent$i67$i$i = sp + 240 | 0;
 $__parent$i59$i$i = sp + 236 | 0;
 $__parent$i51$i$i = sp + 232 | 0;
 $__parent$i43$i$i = sp + 228 | 0;
 $__parent$i35$i$i = sp + 224 | 0;
 $__parent$i27$i$i = sp + 220 | 0;
 $__parent$i19$i$i2 = sp + 216 | 0;
 $__parent$i11$i$i3 = sp + 212 | 0;
 $__parent$i3$i$i4 = sp + 208 | 0;
 $__parent$i$i$i5 = sp + 204 | 0;
 $0 = sp + 192 | 0;
 $1 = sp + 180 | 0;
 $2 = sp + 168 | 0;
 $3 = sp + 156 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 132 | 0;
 $6 = sp + 120 | 0;
 $7 = sp + 108 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 84 | 0;
 $10 = sp + 72 | 0;
 $11 = sp + 60 | 0;
 $12 = sp + 48 | 0;
 $13 = sp + 36 | 0;
 $14 = sp + 24 | 0;
 $15 = sp + 12 | 0;
 $16 = sp;
 HEAP32[263] = 0;
 HEAP32[264] = 0;
 HEAP32[262] = 1052;
 __THREW__ = 0;
 $17 = invoke_ii(67, 24) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 if ($18 & 1) {
  $472 = 0;
  $470 = ___cxa_find_matching_catch() | 0;
  $471 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
  ___resumeException($470 | 0);
 }
 HEAP32[$17 + 16 >> 2] = 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 1052;
 HEAP32[263] = $17;
 HEAP32[262] = $17;
 HEAP8[$17 + 12 >> 0] = 1;
 HEAP32[264] = 1;
 HEAP32[$17 + 20 >> 2] = 5;
 $__nd$0$i$i3$i$i = $17;
 while (1) {
  $26 = HEAP32[$__nd$0$i$i3$i$i + 16 >> 2] | 0;
  if (($26 | 0) > 1) {
   $28 = HEAP32[$__nd$0$i$i3$i$i >> 2] | 0;
   if (!$28) {
    $$lcssa278 = $__nd$0$i$i3$i$i;
    $__nd$0$i$i3$i$i$lcssa276 = $__nd$0$i$i3$i$i;
    label = 5;
    break;
   } else $__nd$0$be$in$i$i4$i$i = $28;
  } else {
   if (($26 | 0) >= 1) {
    $__nd$0$i$i3$i$i$lcssa = $__nd$0$i$i3$i$i;
    label = 10;
    break;
   }
   $31 = $__nd$0$i$i3$i$i + 4 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   if (!$32) {
    $$lcssa277 = $31;
    $__nd$0$i$i3$i$i$lcssa275 = $__nd$0$i$i3$i$i;
    label = 9;
    break;
   } else $__nd$0$be$in$i$i4$i$i = $32;
  }
  $__nd$0$i$i3$i$i = $__nd$0$be$in$i$i4$i$i;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent$i3$i$i4 >> 2] = $__nd$0$i$i3$i$i$lcssa276;
  $$0$i7$i9$i$i = $$lcssa278;
  $42 = $__nd$0$i$i3$i$i$lcssa276;
  label = 11;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent$i3$i$i4 >> 2] = $__nd$0$i$i3$i$i$lcssa275;
  $$0$i7$i9$i$i = $$lcssa277;
  $42 = $__nd$0$i$i3$i$i$lcssa275;
  label = 11;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent$i3$i$i4 >> 2] = $__nd$0$i$i3$i$i$lcssa;
  if (!$__nd$0$i$i3$i$i$lcssa) {
   $$0$i7$i9$i$i = $__parent$i3$i$i4;
   $42 = 0;
   label = 11;
  } else {
   $51 = $17;
   $__r$0$i13$i$i = $__nd$0$i$i3$i$i$lcssa;
  }
 }
 if ((label | 0) == 11) {
  __THREW__ = 0;
  $35 = invoke_ii(67, 24) | 0;
  $36 = __THREW__;
  __THREW__ = 0;
  if ($36 & 1) {
   $472 = $17;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$35 + 16 >> 2] = 1;
  HEAP32[$35 + 20 >> 2] = 0;
  HEAP32[$35 >> 2] = 0;
  HEAP32[$35 + 4 >> 2] = 0;
  HEAP32[$35 + 8 >> 2] = $42;
  HEAP32[$$0$i7$i9$i$i >> 2] = $35;
  $44 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$44) $47 = $35; else {
   HEAP32[262] = $44;
   $47 = HEAP32[$$0$i7$i9$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $47);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $51 = HEAP32[263] | 0;
  $__r$0$i13$i$i = $35;
 }
 HEAP32[$__r$0$i13$i$i + 20 >> 2] = 5;
 do if (!$51) {
  HEAP32[$__parent$i11$i$i3 >> 2] = 1052;
  $$0$i7$i24$i$i = 1052 | 0;
  $70 = 1052 | 0;
  label = 26;
 } else {
  $__nd$0$i$i18$i$i = $51;
  while (1) {
   $54 = HEAP32[$__nd$0$i$i18$i$i + 16 >> 2] | 0;
   if (($54 | 0) > 2) {
    $56 = HEAP32[$__nd$0$i$i18$i$i >> 2] | 0;
    if (!$56) {
     $$lcssa274 = $__nd$0$i$i18$i$i;
     $__nd$0$i$i18$i$i$lcssa272 = $__nd$0$i$i18$i$i;
     label = 19;
     break;
    } else $__nd$0$be$in$i$i19$i$i = $56;
   } else {
    if (($54 | 0) >= 2) {
     $__nd$0$i$i18$i$i$lcssa = $__nd$0$i$i18$i$i;
     label = 25;
     break;
    }
    $59 = $__nd$0$i$i18$i$i + 4 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    if (!$60) {
     $$lcssa273 = $59;
     $__nd$0$i$i18$i$i$lcssa271 = $__nd$0$i$i18$i$i;
     label = 23;
     break;
    } else $__nd$0$be$in$i$i19$i$i = $60;
   }
   $__nd$0$i$i18$i$i = $__nd$0$be$in$i$i19$i$i;
  }
  if ((label | 0) == 19) {
   HEAP32[$__parent$i11$i$i3 >> 2] = $__nd$0$i$i18$i$i$lcssa272;
   $$0$i7$i24$i$i = $$lcssa274;
   $70 = $__nd$0$i$i18$i$i$lcssa272;
   label = 26;
   break;
  } else if ((label | 0) == 23) {
   HEAP32[$__parent$i11$i$i3 >> 2] = $__nd$0$i$i18$i$i$lcssa271;
   $$0$i7$i24$i$i = $$lcssa273;
   $70 = $__nd$0$i$i18$i$i$lcssa271;
   label = 26;
   break;
  } else if ((label | 0) == 25) {
   HEAP32[$__parent$i11$i$i3 >> 2] = $__nd$0$i$i18$i$i$lcssa;
   if (!$__nd$0$i$i18$i$i$lcssa) {
    $$0$i7$i24$i$i = $__parent$i11$i$i3;
    $70 = 0;
    label = 26;
    break;
   } else {
    $79 = $51;
    $__r$0$i28$i$i = $__nd$0$i$i18$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 26) {
  __THREW__ = 0;
  $63 = invoke_ii(67, 24) | 0;
  $64 = __THREW__;
  __THREW__ = 0;
  if ($64 & 1) {
   $472 = $51;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$63 + 16 >> 2] = 2;
  HEAP32[$63 + 20 >> 2] = 0;
  HEAP32[$63 >> 2] = 0;
  HEAP32[$63 + 4 >> 2] = 0;
  HEAP32[$63 + 8 >> 2] = $70;
  HEAP32[$$0$i7$i24$i$i >> 2] = $63;
  $72 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$72) $75 = $63; else {
   HEAP32[262] = $72;
   $75 = HEAP32[$$0$i7$i24$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $75);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $79 = HEAP32[263] | 0;
  $__r$0$i28$i$i = $63;
 }
 HEAP32[$__r$0$i28$i$i + 20 >> 2] = 6;
 do if (!$79) {
  HEAP32[$__parent$i19$i$i2 >> 2] = 1052;
  $$0$i7$i39$i$i = 1052 | 0;
  $98 = 1052 | 0;
  label = 41;
 } else {
  $__nd$0$i$i33$i$i = $79;
  while (1) {
   $82 = HEAP32[$__nd$0$i$i33$i$i + 16 >> 2] | 0;
   if (($82 | 0) > 3) {
    $84 = HEAP32[$__nd$0$i$i33$i$i >> 2] | 0;
    if (!$84) {
     $$lcssa270 = $__nd$0$i$i33$i$i;
     $__nd$0$i$i33$i$i$lcssa268 = $__nd$0$i$i33$i$i;
     label = 34;
     break;
    } else $__nd$0$be$in$i$i34$i$i = $84;
   } else {
    if (($82 | 0) >= 3) {
     $__nd$0$i$i33$i$i$lcssa = $__nd$0$i$i33$i$i;
     label = 40;
     break;
    }
    $87 = $__nd$0$i$i33$i$i + 4 | 0;
    $88 = HEAP32[$87 >> 2] | 0;
    if (!$88) {
     $$lcssa269 = $87;
     $__nd$0$i$i33$i$i$lcssa267 = $__nd$0$i$i33$i$i;
     label = 38;
     break;
    } else $__nd$0$be$in$i$i34$i$i = $88;
   }
   $__nd$0$i$i33$i$i = $__nd$0$be$in$i$i34$i$i;
  }
  if ((label | 0) == 34) {
   HEAP32[$__parent$i19$i$i2 >> 2] = $__nd$0$i$i33$i$i$lcssa268;
   $$0$i7$i39$i$i = $$lcssa270;
   $98 = $__nd$0$i$i33$i$i$lcssa268;
   label = 41;
   break;
  } else if ((label | 0) == 38) {
   HEAP32[$__parent$i19$i$i2 >> 2] = $__nd$0$i$i33$i$i$lcssa267;
   $$0$i7$i39$i$i = $$lcssa269;
   $98 = $__nd$0$i$i33$i$i$lcssa267;
   label = 41;
   break;
  } else if ((label | 0) == 40) {
   HEAP32[$__parent$i19$i$i2 >> 2] = $__nd$0$i$i33$i$i$lcssa;
   if (!$__nd$0$i$i33$i$i$lcssa) {
    $$0$i7$i39$i$i = $__parent$i19$i$i2;
    $98 = 0;
    label = 41;
    break;
   } else {
    $107 = $79;
    $__r$0$i43$i$i = $__nd$0$i$i33$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 41) {
  __THREW__ = 0;
  $91 = invoke_ii(67, 24) | 0;
  $92 = __THREW__;
  __THREW__ = 0;
  if ($92 & 1) {
   $472 = $79;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$91 + 16 >> 2] = 3;
  HEAP32[$91 + 20 >> 2] = 0;
  HEAP32[$91 >> 2] = 0;
  HEAP32[$91 + 4 >> 2] = 0;
  HEAP32[$91 + 8 >> 2] = $98;
  HEAP32[$$0$i7$i39$i$i >> 2] = $91;
  $100 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$100) $103 = $91; else {
   HEAP32[262] = $100;
   $103 = HEAP32[$$0$i7$i39$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $103);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $107 = HEAP32[263] | 0;
  $__r$0$i43$i$i = $91;
 }
 HEAP32[$__r$0$i43$i$i + 20 >> 2] = 6;
 do if (!$107) {
  HEAP32[$__parent$i27$i$i >> 2] = 1052;
  $$0$i7$i54$i$i = 1052 | 0;
  $126 = 1052 | 0;
  label = 56;
 } else {
  $__nd$0$i$i48$i$i = $107;
  while (1) {
   $110 = HEAP32[$__nd$0$i$i48$i$i + 16 >> 2] | 0;
   if (($110 | 0) > 4) {
    $112 = HEAP32[$__nd$0$i$i48$i$i >> 2] | 0;
    if (!$112) {
     $$lcssa266 = $__nd$0$i$i48$i$i;
     $__nd$0$i$i48$i$i$lcssa264 = $__nd$0$i$i48$i$i;
     label = 49;
     break;
    } else $__nd$0$be$in$i$i49$i$i = $112;
   } else {
    if (($110 | 0) >= 4) {
     $__nd$0$i$i48$i$i$lcssa = $__nd$0$i$i48$i$i;
     label = 55;
     break;
    }
    $115 = $__nd$0$i$i48$i$i + 4 | 0;
    $116 = HEAP32[$115 >> 2] | 0;
    if (!$116) {
     $$lcssa265 = $115;
     $__nd$0$i$i48$i$i$lcssa263 = $__nd$0$i$i48$i$i;
     label = 53;
     break;
    } else $__nd$0$be$in$i$i49$i$i = $116;
   }
   $__nd$0$i$i48$i$i = $__nd$0$be$in$i$i49$i$i;
  }
  if ((label | 0) == 49) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i48$i$i$lcssa264;
   $$0$i7$i54$i$i = $$lcssa266;
   $126 = $__nd$0$i$i48$i$i$lcssa264;
   label = 56;
   break;
  } else if ((label | 0) == 53) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i48$i$i$lcssa263;
   $$0$i7$i54$i$i = $$lcssa265;
   $126 = $__nd$0$i$i48$i$i$lcssa263;
   label = 56;
   break;
  } else if ((label | 0) == 55) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i48$i$i$lcssa;
   if (!$__nd$0$i$i48$i$i$lcssa) {
    $$0$i7$i54$i$i = $__parent$i27$i$i;
    $126 = 0;
    label = 56;
    break;
   } else {
    $135 = $107;
    $__r$0$i58$i$i = $__nd$0$i$i48$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 56) {
  __THREW__ = 0;
  $119 = invoke_ii(67, 24) | 0;
  $120 = __THREW__;
  __THREW__ = 0;
  if ($120 & 1) {
   $472 = $107;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$119 + 16 >> 2] = 4;
  HEAP32[$119 + 20 >> 2] = 0;
  HEAP32[$119 >> 2] = 0;
  HEAP32[$119 + 4 >> 2] = 0;
  HEAP32[$119 + 8 >> 2] = $126;
  HEAP32[$$0$i7$i54$i$i >> 2] = $119;
  $128 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$128) $131 = $119; else {
   HEAP32[262] = $128;
   $131 = HEAP32[$$0$i7$i54$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $131);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $135 = HEAP32[263] | 0;
  $__r$0$i58$i$i = $119;
 }
 HEAP32[$__r$0$i58$i$i + 20 >> 2] = 7;
 do if (!$135) {
  HEAP32[$__parent$i35$i$i >> 2] = 1052;
  $$0$i7$i69$i$i = 1052 | 0;
  $154 = 1052 | 0;
  label = 71;
 } else {
  $__nd$0$i$i63$i$i = $135;
  while (1) {
   $138 = HEAP32[$__nd$0$i$i63$i$i + 16 >> 2] | 0;
   if (($138 | 0) > 5) {
    $140 = HEAP32[$__nd$0$i$i63$i$i >> 2] | 0;
    if (!$140) {
     $$lcssa262 = $__nd$0$i$i63$i$i;
     $__nd$0$i$i63$i$i$lcssa260 = $__nd$0$i$i63$i$i;
     label = 64;
     break;
    } else $__nd$0$be$in$i$i64$i$i = $140;
   } else {
    if (($138 | 0) >= 5) {
     $__nd$0$i$i63$i$i$lcssa = $__nd$0$i$i63$i$i;
     label = 70;
     break;
    }
    $143 = $__nd$0$i$i63$i$i + 4 | 0;
    $144 = HEAP32[$143 >> 2] | 0;
    if (!$144) {
     $$lcssa261 = $143;
     $__nd$0$i$i63$i$i$lcssa259 = $__nd$0$i$i63$i$i;
     label = 68;
     break;
    } else $__nd$0$be$in$i$i64$i$i = $144;
   }
   $__nd$0$i$i63$i$i = $__nd$0$be$in$i$i64$i$i;
  }
  if ((label | 0) == 64) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i63$i$i$lcssa260;
   $$0$i7$i69$i$i = $$lcssa262;
   $154 = $__nd$0$i$i63$i$i$lcssa260;
   label = 71;
   break;
  } else if ((label | 0) == 68) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i63$i$i$lcssa259;
   $$0$i7$i69$i$i = $$lcssa261;
   $154 = $__nd$0$i$i63$i$i$lcssa259;
   label = 71;
   break;
  } else if ((label | 0) == 70) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i63$i$i$lcssa;
   if (!$__nd$0$i$i63$i$i$lcssa) {
    $$0$i7$i69$i$i = $__parent$i35$i$i;
    $154 = 0;
    label = 71;
    break;
   } else {
    $163 = $135;
    $__r$0$i73$i$i = $__nd$0$i$i63$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 71) {
  __THREW__ = 0;
  $147 = invoke_ii(67, 24) | 0;
  $148 = __THREW__;
  __THREW__ = 0;
  if ($148 & 1) {
   $472 = $135;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$147 + 16 >> 2] = 5;
  HEAP32[$147 + 20 >> 2] = 0;
  HEAP32[$147 >> 2] = 0;
  HEAP32[$147 + 4 >> 2] = 0;
  HEAP32[$147 + 8 >> 2] = $154;
  HEAP32[$$0$i7$i69$i$i >> 2] = $147;
  $156 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$156) $159 = $147; else {
   HEAP32[262] = $156;
   $159 = HEAP32[$$0$i7$i69$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $159);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $163 = HEAP32[263] | 0;
  $__r$0$i73$i$i = $147;
 }
 HEAP32[$__r$0$i73$i$i + 20 >> 2] = 7;
 do if (!$163) {
  HEAP32[$__parent$i43$i$i >> 2] = 1052;
  $$0$i7$i84$i$i = 1052 | 0;
  $182 = 1052 | 0;
  label = 86;
 } else {
  $__nd$0$i$i78$i$i = $163;
  while (1) {
   $166 = HEAP32[$__nd$0$i$i78$i$i + 16 >> 2] | 0;
   if (($166 | 0) > 6) {
    $168 = HEAP32[$__nd$0$i$i78$i$i >> 2] | 0;
    if (!$168) {
     $$lcssa258 = $__nd$0$i$i78$i$i;
     $__nd$0$i$i78$i$i$lcssa256 = $__nd$0$i$i78$i$i;
     label = 79;
     break;
    } else $__nd$0$be$in$i$i79$i$i = $168;
   } else {
    if (($166 | 0) >= 6) {
     $__nd$0$i$i78$i$i$lcssa = $__nd$0$i$i78$i$i;
     label = 85;
     break;
    }
    $171 = $__nd$0$i$i78$i$i + 4 | 0;
    $172 = HEAP32[$171 >> 2] | 0;
    if (!$172) {
     $$lcssa257 = $171;
     $__nd$0$i$i78$i$i$lcssa255 = $__nd$0$i$i78$i$i;
     label = 83;
     break;
    } else $__nd$0$be$in$i$i79$i$i = $172;
   }
   $__nd$0$i$i78$i$i = $__nd$0$be$in$i$i79$i$i;
  }
  if ((label | 0) == 79) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i78$i$i$lcssa256;
   $$0$i7$i84$i$i = $$lcssa258;
   $182 = $__nd$0$i$i78$i$i$lcssa256;
   label = 86;
   break;
  } else if ((label | 0) == 83) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i78$i$i$lcssa255;
   $$0$i7$i84$i$i = $$lcssa257;
   $182 = $__nd$0$i$i78$i$i$lcssa255;
   label = 86;
   break;
  } else if ((label | 0) == 85) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i78$i$i$lcssa;
   if (!$__nd$0$i$i78$i$i$lcssa) {
    $$0$i7$i84$i$i = $__parent$i43$i$i;
    $182 = 0;
    label = 86;
    break;
   } else {
    $191 = $163;
    $__r$0$i88$i$i = $__nd$0$i$i78$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 86) {
  __THREW__ = 0;
  $175 = invoke_ii(67, 24) | 0;
  $176 = __THREW__;
  __THREW__ = 0;
  if ($176 & 1) {
   $472 = $163;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$175 + 16 >> 2] = 6;
  HEAP32[$175 + 20 >> 2] = 0;
  HEAP32[$175 >> 2] = 0;
  HEAP32[$175 + 4 >> 2] = 0;
  HEAP32[$175 + 8 >> 2] = $182;
  HEAP32[$$0$i7$i84$i$i >> 2] = $175;
  $184 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$184) $187 = $175; else {
   HEAP32[262] = $184;
   $187 = HEAP32[$$0$i7$i84$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $187);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $191 = HEAP32[263] | 0;
  $__r$0$i88$i$i = $175;
 }
 HEAP32[$__r$0$i88$i$i + 20 >> 2] = 8;
 do if (!$191) {
  HEAP32[$__parent$i51$i$i >> 2] = 1052;
  $$0$i7$i99$i$i = 1052 | 0;
  $210 = 1052 | 0;
  label = 101;
 } else {
  $__nd$0$i$i93$i$i = $191;
  while (1) {
   $194 = HEAP32[$__nd$0$i$i93$i$i + 16 >> 2] | 0;
   if (($194 | 0) > 7) {
    $196 = HEAP32[$__nd$0$i$i93$i$i >> 2] | 0;
    if (!$196) {
     $$lcssa254 = $__nd$0$i$i93$i$i;
     $__nd$0$i$i93$i$i$lcssa252 = $__nd$0$i$i93$i$i;
     label = 94;
     break;
    } else $__nd$0$be$in$i$i94$i$i = $196;
   } else {
    if (($194 | 0) >= 7) {
     $__nd$0$i$i93$i$i$lcssa = $__nd$0$i$i93$i$i;
     label = 100;
     break;
    }
    $199 = $__nd$0$i$i93$i$i + 4 | 0;
    $200 = HEAP32[$199 >> 2] | 0;
    if (!$200) {
     $$lcssa253 = $199;
     $__nd$0$i$i93$i$i$lcssa251 = $__nd$0$i$i93$i$i;
     label = 98;
     break;
    } else $__nd$0$be$in$i$i94$i$i = $200;
   }
   $__nd$0$i$i93$i$i = $__nd$0$be$in$i$i94$i$i;
  }
  if ((label | 0) == 94) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i93$i$i$lcssa252;
   $$0$i7$i99$i$i = $$lcssa254;
   $210 = $__nd$0$i$i93$i$i$lcssa252;
   label = 101;
   break;
  } else if ((label | 0) == 98) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i93$i$i$lcssa251;
   $$0$i7$i99$i$i = $$lcssa253;
   $210 = $__nd$0$i$i93$i$i$lcssa251;
   label = 101;
   break;
  } else if ((label | 0) == 100) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i93$i$i$lcssa;
   if (!$__nd$0$i$i93$i$i$lcssa) {
    $$0$i7$i99$i$i = $__parent$i51$i$i;
    $210 = 0;
    label = 101;
    break;
   } else {
    $219 = $191;
    $__r$0$i103$i$i = $__nd$0$i$i93$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 101) {
  __THREW__ = 0;
  $203 = invoke_ii(67, 24) | 0;
  $204 = __THREW__;
  __THREW__ = 0;
  if ($204 & 1) {
   $472 = $191;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$203 + 16 >> 2] = 7;
  HEAP32[$203 + 20 >> 2] = 0;
  HEAP32[$203 >> 2] = 0;
  HEAP32[$203 + 4 >> 2] = 0;
  HEAP32[$203 + 8 >> 2] = $210;
  HEAP32[$$0$i7$i99$i$i >> 2] = $203;
  $212 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$212) $215 = $203; else {
   HEAP32[262] = $212;
   $215 = HEAP32[$$0$i7$i99$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $215);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $219 = HEAP32[263] | 0;
  $__r$0$i103$i$i = $203;
 }
 HEAP32[$__r$0$i103$i$i + 20 >> 2] = 8;
 do if (!$219) {
  HEAP32[$__parent$i59$i$i >> 2] = 1052;
  $$0$i7$i114$i$i = 1052 | 0;
  $238 = 1052 | 0;
  label = 116;
 } else {
  $__nd$0$i$i108$i$i = $219;
  while (1) {
   $222 = HEAP32[$__nd$0$i$i108$i$i + 16 >> 2] | 0;
   if (($222 | 0) > 8) {
    $224 = HEAP32[$__nd$0$i$i108$i$i >> 2] | 0;
    if (!$224) {
     $$lcssa250 = $__nd$0$i$i108$i$i;
     $__nd$0$i$i108$i$i$lcssa248 = $__nd$0$i$i108$i$i;
     label = 109;
     break;
    } else $__nd$0$be$in$i$i109$i$i = $224;
   } else {
    if (($222 | 0) >= 8) {
     $__nd$0$i$i108$i$i$lcssa = $__nd$0$i$i108$i$i;
     label = 115;
     break;
    }
    $227 = $__nd$0$i$i108$i$i + 4 | 0;
    $228 = HEAP32[$227 >> 2] | 0;
    if (!$228) {
     $$lcssa249 = $227;
     $__nd$0$i$i108$i$i$lcssa247 = $__nd$0$i$i108$i$i;
     label = 113;
     break;
    } else $__nd$0$be$in$i$i109$i$i = $228;
   }
   $__nd$0$i$i108$i$i = $__nd$0$be$in$i$i109$i$i;
  }
  if ((label | 0) == 109) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i108$i$i$lcssa248;
   $$0$i7$i114$i$i = $$lcssa250;
   $238 = $__nd$0$i$i108$i$i$lcssa248;
   label = 116;
   break;
  } else if ((label | 0) == 113) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i108$i$i$lcssa247;
   $$0$i7$i114$i$i = $$lcssa249;
   $238 = $__nd$0$i$i108$i$i$lcssa247;
   label = 116;
   break;
  } else if ((label | 0) == 115) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i108$i$i$lcssa;
   if (!$__nd$0$i$i108$i$i$lcssa) {
    $$0$i7$i114$i$i = $__parent$i59$i$i;
    $238 = 0;
    label = 116;
    break;
   } else {
    $247 = $219;
    $__r$0$i118$i$i = $__nd$0$i$i108$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 116) {
  __THREW__ = 0;
  $231 = invoke_ii(67, 24) | 0;
  $232 = __THREW__;
  __THREW__ = 0;
  if ($232 & 1) {
   $472 = $219;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$231 + 16 >> 2] = 8;
  HEAP32[$231 + 20 >> 2] = 0;
  HEAP32[$231 >> 2] = 0;
  HEAP32[$231 + 4 >> 2] = 0;
  HEAP32[$231 + 8 >> 2] = $238;
  HEAP32[$$0$i7$i114$i$i >> 2] = $231;
  $240 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$240) $243 = $231; else {
   HEAP32[262] = $240;
   $243 = HEAP32[$$0$i7$i114$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $243);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $247 = HEAP32[263] | 0;
  $__r$0$i118$i$i = $231;
 }
 HEAP32[$__r$0$i118$i$i + 20 >> 2] = 8;
 do if (!$247) {
  HEAP32[$__parent$i67$i$i >> 2] = 1052;
  $$0$i7$i129$i$i = 1052 | 0;
  $266 = 1052 | 0;
  label = 131;
 } else {
  $__nd$0$i$i123$i$i = $247;
  while (1) {
   $250 = HEAP32[$__nd$0$i$i123$i$i + 16 >> 2] | 0;
   if (($250 | 0) > 9) {
    $252 = HEAP32[$__nd$0$i$i123$i$i >> 2] | 0;
    if (!$252) {
     $$lcssa246 = $__nd$0$i$i123$i$i;
     $__nd$0$i$i123$i$i$lcssa244 = $__nd$0$i$i123$i$i;
     label = 124;
     break;
    } else $__nd$0$be$in$i$i124$i$i = $252;
   } else {
    if (($250 | 0) >= 9) {
     $__nd$0$i$i123$i$i$lcssa = $__nd$0$i$i123$i$i;
     label = 130;
     break;
    }
    $255 = $__nd$0$i$i123$i$i + 4 | 0;
    $256 = HEAP32[$255 >> 2] | 0;
    if (!$256) {
     $$lcssa245 = $255;
     $__nd$0$i$i123$i$i$lcssa243 = $__nd$0$i$i123$i$i;
     label = 128;
     break;
    } else $__nd$0$be$in$i$i124$i$i = $256;
   }
   $__nd$0$i$i123$i$i = $__nd$0$be$in$i$i124$i$i;
  }
  if ((label | 0) == 124) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i123$i$i$lcssa244;
   $$0$i7$i129$i$i = $$lcssa246;
   $266 = $__nd$0$i$i123$i$i$lcssa244;
   label = 131;
   break;
  } else if ((label | 0) == 128) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i123$i$i$lcssa243;
   $$0$i7$i129$i$i = $$lcssa245;
   $266 = $__nd$0$i$i123$i$i$lcssa243;
   label = 131;
   break;
  } else if ((label | 0) == 130) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i123$i$i$lcssa;
   if (!$__nd$0$i$i123$i$i$lcssa) {
    $$0$i7$i129$i$i = $__parent$i67$i$i;
    $266 = 0;
    label = 131;
    break;
   } else {
    $275 = $247;
    $__r$0$i133$i$i = $__nd$0$i$i123$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 131) {
  __THREW__ = 0;
  $259 = invoke_ii(67, 24) | 0;
  $260 = __THREW__;
  __THREW__ = 0;
  if ($260 & 1) {
   $472 = $247;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$259 + 16 >> 2] = 9;
  HEAP32[$259 + 20 >> 2] = 0;
  HEAP32[$259 >> 2] = 0;
  HEAP32[$259 + 4 >> 2] = 0;
  HEAP32[$259 + 8 >> 2] = $266;
  HEAP32[$$0$i7$i129$i$i >> 2] = $259;
  $268 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$268) $271 = $259; else {
   HEAP32[262] = $268;
   $271 = HEAP32[$$0$i7$i129$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $271);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $275 = HEAP32[263] | 0;
  $__r$0$i133$i$i = $259;
 }
 HEAP32[$__r$0$i133$i$i + 20 >> 2] = 8;
 do if (!$275) {
  HEAP32[$__parent$i75$i$i >> 2] = 1052;
  $$0$i7$i144$i$i = 1052 | 0;
  $294 = 1052 | 0;
  label = 146;
 } else {
  $__nd$0$i$i138$i$i = $275;
  while (1) {
   $278 = HEAP32[$__nd$0$i$i138$i$i + 16 >> 2] | 0;
   if (($278 | 0) > 10) {
    $280 = HEAP32[$__nd$0$i$i138$i$i >> 2] | 0;
    if (!$280) {
     $$lcssa242 = $__nd$0$i$i138$i$i;
     $__nd$0$i$i138$i$i$lcssa240 = $__nd$0$i$i138$i$i;
     label = 139;
     break;
    } else $__nd$0$be$in$i$i139$i$i = $280;
   } else {
    if (($278 | 0) >= 10) {
     $__nd$0$i$i138$i$i$lcssa = $__nd$0$i$i138$i$i;
     label = 145;
     break;
    }
    $283 = $__nd$0$i$i138$i$i + 4 | 0;
    $284 = HEAP32[$283 >> 2] | 0;
    if (!$284) {
     $$lcssa241 = $283;
     $__nd$0$i$i138$i$i$lcssa239 = $__nd$0$i$i138$i$i;
     label = 143;
     break;
    } else $__nd$0$be$in$i$i139$i$i = $284;
   }
   $__nd$0$i$i138$i$i = $__nd$0$be$in$i$i139$i$i;
  }
  if ((label | 0) == 139) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i138$i$i$lcssa240;
   $$0$i7$i144$i$i = $$lcssa242;
   $294 = $__nd$0$i$i138$i$i$lcssa240;
   label = 146;
   break;
  } else if ((label | 0) == 143) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i138$i$i$lcssa239;
   $$0$i7$i144$i$i = $$lcssa241;
   $294 = $__nd$0$i$i138$i$i$lcssa239;
   label = 146;
   break;
  } else if ((label | 0) == 145) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i138$i$i$lcssa;
   if (!$__nd$0$i$i138$i$i$lcssa) {
    $$0$i7$i144$i$i = $__parent$i75$i$i;
    $294 = 0;
    label = 146;
    break;
   } else {
    $303 = $275;
    $__r$0$i148$i$i = $__nd$0$i$i138$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 146) {
  __THREW__ = 0;
  $287 = invoke_ii(67, 24) | 0;
  $288 = __THREW__;
  __THREW__ = 0;
  if ($288 & 1) {
   $472 = $275;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$287 + 16 >> 2] = 10;
  HEAP32[$287 + 20 >> 2] = 0;
  HEAP32[$287 >> 2] = 0;
  HEAP32[$287 + 4 >> 2] = 0;
  HEAP32[$287 + 8 >> 2] = $294;
  HEAP32[$$0$i7$i144$i$i >> 2] = $287;
  $296 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$296) $299 = $287; else {
   HEAP32[262] = $296;
   $299 = HEAP32[$$0$i7$i144$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $299);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $303 = HEAP32[263] | 0;
  $__r$0$i148$i$i = $287;
 }
 HEAP32[$__r$0$i148$i$i + 20 >> 2] = 9;
 do if (!$303) {
  HEAP32[$__parent$i83$i$i >> 2] = 1052;
  $$0$i7$i159$i$i = 1052 | 0;
  $322 = 1052 | 0;
  label = 161;
 } else {
  $__nd$0$i$i153$i$i = $303;
  while (1) {
   $306 = HEAP32[$__nd$0$i$i153$i$i + 16 >> 2] | 0;
   if (($306 | 0) > 11) {
    $308 = HEAP32[$__nd$0$i$i153$i$i >> 2] | 0;
    if (!$308) {
     $$lcssa238 = $__nd$0$i$i153$i$i;
     $__nd$0$i$i153$i$i$lcssa236 = $__nd$0$i$i153$i$i;
     label = 154;
     break;
    } else $__nd$0$be$in$i$i154$i$i = $308;
   } else {
    if (($306 | 0) >= 11) {
     $__nd$0$i$i153$i$i$lcssa = $__nd$0$i$i153$i$i;
     label = 160;
     break;
    }
    $311 = $__nd$0$i$i153$i$i + 4 | 0;
    $312 = HEAP32[$311 >> 2] | 0;
    if (!$312) {
     $$lcssa237 = $311;
     $__nd$0$i$i153$i$i$lcssa235 = $__nd$0$i$i153$i$i;
     label = 158;
     break;
    } else $__nd$0$be$in$i$i154$i$i = $312;
   }
   $__nd$0$i$i153$i$i = $__nd$0$be$in$i$i154$i$i;
  }
  if ((label | 0) == 154) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i153$i$i$lcssa236;
   $$0$i7$i159$i$i = $$lcssa238;
   $322 = $__nd$0$i$i153$i$i$lcssa236;
   label = 161;
   break;
  } else if ((label | 0) == 158) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i153$i$i$lcssa235;
   $$0$i7$i159$i$i = $$lcssa237;
   $322 = $__nd$0$i$i153$i$i$lcssa235;
   label = 161;
   break;
  } else if ((label | 0) == 160) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i153$i$i$lcssa;
   if (!$__nd$0$i$i153$i$i$lcssa) {
    $$0$i7$i159$i$i = $__parent$i83$i$i;
    $322 = 0;
    label = 161;
    break;
   } else {
    $331 = $303;
    $__r$0$i163$i$i = $__nd$0$i$i153$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 161) {
  __THREW__ = 0;
  $315 = invoke_ii(67, 24) | 0;
  $316 = __THREW__;
  __THREW__ = 0;
  if ($316 & 1) {
   $472 = $303;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$315 + 16 >> 2] = 11;
  HEAP32[$315 + 20 >> 2] = 0;
  HEAP32[$315 >> 2] = 0;
  HEAP32[$315 + 4 >> 2] = 0;
  HEAP32[$315 + 8 >> 2] = $322;
  HEAP32[$$0$i7$i159$i$i >> 2] = $315;
  $324 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$324) $327 = $315; else {
   HEAP32[262] = $324;
   $327 = HEAP32[$$0$i7$i159$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $327);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $331 = HEAP32[263] | 0;
  $__r$0$i163$i$i = $315;
 }
 HEAP32[$__r$0$i163$i$i + 20 >> 2] = 9;
 do if (!$331) {
  HEAP32[$__parent$i91$i$i1 >> 2] = 1052;
  $$0$i7$i174$i$i = 1052 | 0;
  $350 = 1052 | 0;
  label = 176;
 } else {
  $__nd$0$i$i168$i$i = $331;
  while (1) {
   $334 = HEAP32[$__nd$0$i$i168$i$i + 16 >> 2] | 0;
   if (($334 | 0) > 12) {
    $336 = HEAP32[$__nd$0$i$i168$i$i >> 2] | 0;
    if (!$336) {
     $$lcssa234 = $__nd$0$i$i168$i$i;
     $__nd$0$i$i168$i$i$lcssa232 = $__nd$0$i$i168$i$i;
     label = 169;
     break;
    } else $__nd$0$be$in$i$i169$i$i = $336;
   } else {
    if (($334 | 0) >= 12) {
     $__nd$0$i$i168$i$i$lcssa = $__nd$0$i$i168$i$i;
     label = 175;
     break;
    }
    $339 = $__nd$0$i$i168$i$i + 4 | 0;
    $340 = HEAP32[$339 >> 2] | 0;
    if (!$340) {
     $$lcssa233 = $339;
     $__nd$0$i$i168$i$i$lcssa231 = $__nd$0$i$i168$i$i;
     label = 173;
     break;
    } else $__nd$0$be$in$i$i169$i$i = $340;
   }
   $__nd$0$i$i168$i$i = $__nd$0$be$in$i$i169$i$i;
  }
  if ((label | 0) == 169) {
   HEAP32[$__parent$i91$i$i1 >> 2] = $__nd$0$i$i168$i$i$lcssa232;
   $$0$i7$i174$i$i = $$lcssa234;
   $350 = $__nd$0$i$i168$i$i$lcssa232;
   label = 176;
   break;
  } else if ((label | 0) == 173) {
   HEAP32[$__parent$i91$i$i1 >> 2] = $__nd$0$i$i168$i$i$lcssa231;
   $$0$i7$i174$i$i = $$lcssa233;
   $350 = $__nd$0$i$i168$i$i$lcssa231;
   label = 176;
   break;
  } else if ((label | 0) == 175) {
   HEAP32[$__parent$i91$i$i1 >> 2] = $__nd$0$i$i168$i$i$lcssa;
   if (!$__nd$0$i$i168$i$i$lcssa) {
    $$0$i7$i174$i$i = $__parent$i91$i$i1;
    $350 = 0;
    label = 176;
    break;
   } else {
    $359 = $331;
    $__r$0$i178$i$i = $__nd$0$i$i168$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 176) {
  __THREW__ = 0;
  $343 = invoke_ii(67, 24) | 0;
  $344 = __THREW__;
  __THREW__ = 0;
  if ($344 & 1) {
   $472 = $331;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$343 + 16 >> 2] = 12;
  HEAP32[$343 + 20 >> 2] = 0;
  HEAP32[$343 >> 2] = 0;
  HEAP32[$343 + 4 >> 2] = 0;
  HEAP32[$343 + 8 >> 2] = $350;
  HEAP32[$$0$i7$i174$i$i >> 2] = $343;
  $352 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$352) $355 = $343; else {
   HEAP32[262] = $352;
   $355 = HEAP32[$$0$i7$i174$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $355);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $359 = HEAP32[263] | 0;
  $__r$0$i178$i$i = $343;
 }
 HEAP32[$__r$0$i178$i$i + 20 >> 2] = 10;
 do if (!$359) {
  HEAP32[$__parent$i99$i$i >> 2] = 1052;
  $$0$i7$i189$i$i = 1052 | 0;
  $378 = 1052 | 0;
  label = 191;
 } else {
  $__nd$0$i$i183$i$i = $359;
  while (1) {
   $362 = HEAP32[$__nd$0$i$i183$i$i + 16 >> 2] | 0;
   if (($362 | 0) > 13) {
    $364 = HEAP32[$__nd$0$i$i183$i$i >> 2] | 0;
    if (!$364) {
     $$lcssa230 = $__nd$0$i$i183$i$i;
     $__nd$0$i$i183$i$i$lcssa228 = $__nd$0$i$i183$i$i;
     label = 184;
     break;
    } else $__nd$0$be$in$i$i184$i$i = $364;
   } else {
    if (($362 | 0) >= 13) {
     $__nd$0$i$i183$i$i$lcssa = $__nd$0$i$i183$i$i;
     label = 190;
     break;
    }
    $367 = $__nd$0$i$i183$i$i + 4 | 0;
    $368 = HEAP32[$367 >> 2] | 0;
    if (!$368) {
     $$lcssa229 = $367;
     $__nd$0$i$i183$i$i$lcssa227 = $__nd$0$i$i183$i$i;
     label = 188;
     break;
    } else $__nd$0$be$in$i$i184$i$i = $368;
   }
   $__nd$0$i$i183$i$i = $__nd$0$be$in$i$i184$i$i;
  }
  if ((label | 0) == 184) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i183$i$i$lcssa228;
   $$0$i7$i189$i$i = $$lcssa230;
   $378 = $__nd$0$i$i183$i$i$lcssa228;
   label = 191;
   break;
  } else if ((label | 0) == 188) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i183$i$i$lcssa227;
   $$0$i7$i189$i$i = $$lcssa229;
   $378 = $__nd$0$i$i183$i$i$lcssa227;
   label = 191;
   break;
  } else if ((label | 0) == 190) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i183$i$i$lcssa;
   if (!$__nd$0$i$i183$i$i$lcssa) {
    $$0$i7$i189$i$i = $__parent$i99$i$i;
    $378 = 0;
    label = 191;
    break;
   } else {
    $387 = $359;
    $__r$0$i193$i$i = $__nd$0$i$i183$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 191) {
  __THREW__ = 0;
  $371 = invoke_ii(67, 24) | 0;
  $372 = __THREW__;
  __THREW__ = 0;
  if ($372 & 1) {
   $472 = $359;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$371 + 16 >> 2] = 13;
  HEAP32[$371 + 20 >> 2] = 0;
  HEAP32[$371 >> 2] = 0;
  HEAP32[$371 + 4 >> 2] = 0;
  HEAP32[$371 + 8 >> 2] = $378;
  HEAP32[$$0$i7$i189$i$i >> 2] = $371;
  $380 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$380) $383 = $371; else {
   HEAP32[262] = $380;
   $383 = HEAP32[$$0$i7$i189$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $383);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $387 = HEAP32[263] | 0;
  $__r$0$i193$i$i = $371;
 }
 HEAP32[$__r$0$i193$i$i + 20 >> 2] = 11;
 do if (!$387) {
  HEAP32[$__parent$i107$i$i >> 2] = 1052;
  $$0$i7$i204$i$i = 1052 | 0;
  $406 = 1052 | 0;
  label = 206;
 } else {
  $__nd$0$i$i198$i$i = $387;
  while (1) {
   $390 = HEAP32[$__nd$0$i$i198$i$i + 16 >> 2] | 0;
   if (($390 | 0) > 14) {
    $392 = HEAP32[$__nd$0$i$i198$i$i >> 2] | 0;
    if (!$392) {
     $$lcssa226 = $__nd$0$i$i198$i$i;
     $__nd$0$i$i198$i$i$lcssa224 = $__nd$0$i$i198$i$i;
     label = 199;
     break;
    } else $__nd$0$be$in$i$i199$i$i = $392;
   } else {
    if (($390 | 0) >= 14) {
     $__nd$0$i$i198$i$i$lcssa = $__nd$0$i$i198$i$i;
     label = 205;
     break;
    }
    $395 = $__nd$0$i$i198$i$i + 4 | 0;
    $396 = HEAP32[$395 >> 2] | 0;
    if (!$396) {
     $$lcssa225 = $395;
     $__nd$0$i$i198$i$i$lcssa223 = $__nd$0$i$i198$i$i;
     label = 203;
     break;
    } else $__nd$0$be$in$i$i199$i$i = $396;
   }
   $__nd$0$i$i198$i$i = $__nd$0$be$in$i$i199$i$i;
  }
  if ((label | 0) == 199) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i198$i$i$lcssa224;
   $$0$i7$i204$i$i = $$lcssa226;
   $406 = $__nd$0$i$i198$i$i$lcssa224;
   label = 206;
   break;
  } else if ((label | 0) == 203) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i198$i$i$lcssa223;
   $$0$i7$i204$i$i = $$lcssa225;
   $406 = $__nd$0$i$i198$i$i$lcssa223;
   label = 206;
   break;
  } else if ((label | 0) == 205) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i198$i$i$lcssa;
   if (!$__nd$0$i$i198$i$i$lcssa) {
    $$0$i7$i204$i$i = $__parent$i107$i$i;
    $406 = 0;
    label = 206;
    break;
   } else {
    $415 = $387;
    $__r$0$i208$i$i = $__nd$0$i$i198$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 206) {
  __THREW__ = 0;
  $399 = invoke_ii(67, 24) | 0;
  $400 = __THREW__;
  __THREW__ = 0;
  if ($400 & 1) {
   $472 = $387;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$399 + 16 >> 2] = 14;
  HEAP32[$399 + 20 >> 2] = 0;
  HEAP32[$399 >> 2] = 0;
  HEAP32[$399 + 4 >> 2] = 0;
  HEAP32[$399 + 8 >> 2] = $406;
  HEAP32[$$0$i7$i204$i$i >> 2] = $399;
  $408 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$408) $411 = $399; else {
   HEAP32[262] = $408;
   $411 = HEAP32[$$0$i7$i204$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $411);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $415 = HEAP32[263] | 0;
  $__r$0$i208$i$i = $399;
 }
 HEAP32[$__r$0$i208$i$i + 20 >> 2] = 12;
 do if (!$415) {
  HEAP32[$__parent$i115$i$i >> 2] = 1052;
  $$0$i7$i219$i$i = 1052 | 0;
  $434 = 1052 | 0;
  label = 221;
 } else {
  $__nd$0$i$i213$i$i = $415;
  while (1) {
   $418 = HEAP32[$__nd$0$i$i213$i$i + 16 >> 2] | 0;
   if (($418 | 0) > 15) {
    $420 = HEAP32[$__nd$0$i$i213$i$i >> 2] | 0;
    if (!$420) {
     $$lcssa222 = $__nd$0$i$i213$i$i;
     $__nd$0$i$i213$i$i$lcssa220 = $__nd$0$i$i213$i$i;
     label = 214;
     break;
    } else $__nd$0$be$in$i$i214$i$i = $420;
   } else {
    if (($418 | 0) >= 15) {
     $__nd$0$i$i213$i$i$lcssa = $__nd$0$i$i213$i$i;
     label = 220;
     break;
    }
    $423 = $__nd$0$i$i213$i$i + 4 | 0;
    $424 = HEAP32[$423 >> 2] | 0;
    if (!$424) {
     $$lcssa221 = $423;
     $__nd$0$i$i213$i$i$lcssa219 = $__nd$0$i$i213$i$i;
     label = 218;
     break;
    } else $__nd$0$be$in$i$i214$i$i = $424;
   }
   $__nd$0$i$i213$i$i = $__nd$0$be$in$i$i214$i$i;
  }
  if ((label | 0) == 214) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i213$i$i$lcssa220;
   $$0$i7$i219$i$i = $$lcssa222;
   $434 = $__nd$0$i$i213$i$i$lcssa220;
   label = 221;
   break;
  } else if ((label | 0) == 218) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i213$i$i$lcssa219;
   $$0$i7$i219$i$i = $$lcssa221;
   $434 = $__nd$0$i$i213$i$i$lcssa219;
   label = 221;
   break;
  } else if ((label | 0) == 220) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i213$i$i$lcssa;
   if (!$__nd$0$i$i213$i$i$lcssa) {
    $$0$i7$i219$i$i = $__parent$i115$i$i;
    $434 = 0;
    label = 221;
    break;
   } else {
    $443 = $415;
    $__r$0$i223$i$i = $__nd$0$i$i213$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 221) {
  __THREW__ = 0;
  $427 = invoke_ii(67, 24) | 0;
  $428 = __THREW__;
  __THREW__ = 0;
  if ($428 & 1) {
   $472 = $415;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$427 + 16 >> 2] = 15;
  HEAP32[$427 + 20 >> 2] = 0;
  HEAP32[$427 >> 2] = 0;
  HEAP32[$427 + 4 >> 2] = 0;
  HEAP32[$427 + 8 >> 2] = $434;
  HEAP32[$$0$i7$i219$i$i >> 2] = $427;
  $436 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$436) $439 = $427; else {
   HEAP32[262] = $436;
   $439 = HEAP32[$$0$i7$i219$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $439);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $443 = HEAP32[263] | 0;
  $__r$0$i223$i$i = $427;
 }
 HEAP32[$__r$0$i223$i$i + 20 >> 2] = 13;
 do if (!$443) {
  HEAP32[$__parent$i123$i$i >> 2] = 1052;
  $$0$i7$i234$i$i = 1052 | 0;
  $462 = 1052 | 0;
  label = 236;
 } else {
  $__nd$0$i$i228$i$i = $443;
  while (1) {
   $446 = HEAP32[$__nd$0$i$i228$i$i + 16 >> 2] | 0;
   if (($446 | 0) > 16) {
    $448 = HEAP32[$__nd$0$i$i228$i$i >> 2] | 0;
    if (!$448) {
     $$lcssa218 = $__nd$0$i$i228$i$i;
     $__nd$0$i$i228$i$i$lcssa217 = $__nd$0$i$i228$i$i;
     label = 229;
     break;
    } else $__nd$0$be$in$i$i229$i$i = $448;
   } else {
    if (($446 | 0) >= 16) {
     $__nd$0$i$i228$i$i$lcssa = $__nd$0$i$i228$i$i;
     label = 235;
     break;
    }
    $451 = $__nd$0$i$i228$i$i + 4 | 0;
    $452 = HEAP32[$451 >> 2] | 0;
    if (!$452) {
     $$lcssa = $451;
     $__nd$0$i$i228$i$i$lcssa216 = $__nd$0$i$i228$i$i;
     label = 233;
     break;
    } else $__nd$0$be$in$i$i229$i$i = $452;
   }
   $__nd$0$i$i228$i$i = $__nd$0$be$in$i$i229$i$i;
  }
  if ((label | 0) == 229) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i228$i$i$lcssa217;
   $$0$i7$i234$i$i = $$lcssa218;
   $462 = $__nd$0$i$i228$i$i$lcssa217;
   label = 236;
   break;
  } else if ((label | 0) == 233) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i228$i$i$lcssa216;
   $$0$i7$i234$i$i = $$lcssa;
   $462 = $__nd$0$i$i228$i$i$lcssa216;
   label = 236;
   break;
  } else if ((label | 0) == 235) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i228$i$i$lcssa;
   if (!$__nd$0$i$i228$i$i$lcssa) {
    $$0$i7$i234$i$i = $__parent$i123$i$i;
    $462 = 0;
    label = 236;
    break;
   } else {
    $__r$0$i238$i$i = $__nd$0$i$i228$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 236) {
  __THREW__ = 0;
  $455 = invoke_ii(67, 24) | 0;
  $456 = __THREW__;
  __THREW__ = 0;
  if ($456 & 1) {
   $472 = $443;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1048, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$455 + 16 >> 2] = 16;
  HEAP32[$455 + 20 >> 2] = 0;
  HEAP32[$455 >> 2] = 0;
  HEAP32[$455 + 4 >> 2] = 0;
  HEAP32[$455 + 8 >> 2] = $462;
  HEAP32[$$0$i7$i234$i$i >> 2] = $455;
  $464 = HEAP32[HEAP32[262] >> 2] | 0;
  if (!$464) $467 = $455; else {
   HEAP32[262] = $464;
   $467 = HEAP32[$$0$i7$i234$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[263] | 0, $467);
  HEAP32[264] = (HEAP32[264] | 0) + 1;
  $__r$0$i238$i$i = $455;
 }
 HEAP32[$__r$0$i238$i$i + 20 >> 2] = 14;
 ___cxa_atexit(180, 1048, ___dso_handle | 0) | 0;
 HEAP32[267] = 0;
 HEAP32[268] = 0;
 HEAP32[266] = 1068;
 __THREW__ = 0;
 invoke_viii(3, $__parent$i91$i$i1 | 0, 39328, 1);
 $474 = __THREW__;
 __THREW__ = 0;
 do if (!($474 & 1)) {
  $476 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1064, $__parent$i99$i$i, $__parent$i91$i$i1) | 0;
  $477 = HEAP32[$476 >> 2] | 0;
  if (!$477) {
   __THREW__ = 0;
   $479 = invoke_ii(67, 32) | 0;
   $480 = __THREW__;
   __THREW__ = 0;
   if ($480 & 1) {
    $559 = ___cxa_find_matching_catch() | 0;
    $560 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i91$i$i1);
    $$0$i$i = $560;
    $$01$i$i = $559;
    $567 = HEAP32[267] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1064, $567);
    ___resumeException($$01$i$i | 0);
   }
   $482 = $479 + 16 | 0;
   HEAP32[$482 + 0 >> 2] = HEAP32[$__parent$i91$i$i1 + 0 >> 2];
   HEAP32[$482 + 4 >> 2] = HEAP32[$__parent$i91$i$i1 + 4 >> 2];
   HEAP32[$482 + 8 >> 2] = HEAP32[$__parent$i91$i$i1 + 8 >> 2];
   HEAP32[$__parent$i91$i$i1 + 0 >> 2] = 0;
   HEAP32[$__parent$i91$i$i1 + 4 >> 2] = 0;
   HEAP32[$__parent$i91$i$i1 + 8 >> 2] = 0;
   HEAP32[$479 + 28 >> 2] = 0;
   $484 = HEAP32[$__parent$i99$i$i >> 2] | 0;
   HEAP32[$479 >> 2] = 0;
   HEAP32[$479 + 4 >> 2] = 0;
   HEAP32[$479 + 8 >> 2] = $484;
   HEAP32[$476 >> 2] = $479;
   $488 = HEAP32[HEAP32[266] >> 2] | 0;
   if (!$488) $491 = $479; else {
    HEAP32[266] = $488;
    $491 = HEAP32[$476 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[267] | 0, $491);
   HEAP32[268] = (HEAP32[268] | 0) + 1;
   $__r$0$i$i$i = $479;
  } else $__r$0$i$i$i = $477;
  HEAP32[$__r$0$i$i$i + 28 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i91$i$i1);
  __THREW__ = 0;
  invoke_viii(3, $__parent$i83$i$i | 0, 39320, 1);
  $495 = __THREW__;
  __THREW__ = 0;
  if (!($495 & 1)) {
   $497 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1064, $__parent$i107$i$i, $__parent$i83$i$i) | 0;
   $498 = HEAP32[$497 >> 2] | 0;
   if (!$498) {
    __THREW__ = 0;
    $500 = invoke_ii(67, 32) | 0;
    $501 = __THREW__;
    __THREW__ = 0;
    if ($501 & 1) {
     $561 = ___cxa_find_matching_catch() | 0;
     $562 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i83$i$i);
     $$0$i$i = $562;
     $$01$i$i = $561;
     $567 = HEAP32[267] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1064, $567);
     ___resumeException($$01$i$i | 0);
    }
    $503 = $500 + 16 | 0;
    HEAP32[$503 + 0 >> 2] = HEAP32[$__parent$i83$i$i + 0 >> 2];
    HEAP32[$503 + 4 >> 2] = HEAP32[$__parent$i83$i$i + 4 >> 2];
    HEAP32[$503 + 8 >> 2] = HEAP32[$__parent$i83$i$i + 8 >> 2];
    HEAP32[$__parent$i83$i$i + 0 >> 2] = 0;
    HEAP32[$__parent$i83$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i83$i$i + 8 >> 2] = 0;
    HEAP32[$500 + 28 >> 2] = 0;
    $505 = HEAP32[$__parent$i107$i$i >> 2] | 0;
    HEAP32[$500 >> 2] = 0;
    HEAP32[$500 + 4 >> 2] = 0;
    HEAP32[$500 + 8 >> 2] = $505;
    HEAP32[$497 >> 2] = $500;
    $509 = HEAP32[HEAP32[266] >> 2] | 0;
    if (!$509) $512 = $500; else {
     HEAP32[266] = $509;
     $512 = HEAP32[$497 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[267] | 0, $512);
    HEAP32[268] = (HEAP32[268] | 0) + 1;
    $__r$0$i6$i$i = $500;
   } else $__r$0$i6$i$i = $498;
   HEAP32[$__r$0$i6$i$i + 28 >> 2] = 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i83$i$i);
   __THREW__ = 0;
   invoke_viii(3, $__parent$i75$i$i | 0, 39312, 1);
   $516 = __THREW__;
   __THREW__ = 0;
   if ($516 & 1) break;
   $518 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1064, $__parent$i115$i$i, $__parent$i75$i$i) | 0;
   $519 = HEAP32[$518 >> 2] | 0;
   if (!$519) {
    __THREW__ = 0;
    $521 = invoke_ii(67, 32) | 0;
    $522 = __THREW__;
    __THREW__ = 0;
    if ($522 & 1) {
     $563 = ___cxa_find_matching_catch() | 0;
     $564 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i75$i$i);
     $$0$i$i = $564;
     $$01$i$i = $563;
     $567 = HEAP32[267] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1064, $567);
     ___resumeException($$01$i$i | 0);
    }
    $524 = $521 + 16 | 0;
    HEAP32[$524 + 0 >> 2] = HEAP32[$__parent$i75$i$i + 0 >> 2];
    HEAP32[$524 + 4 >> 2] = HEAP32[$__parent$i75$i$i + 4 >> 2];
    HEAP32[$524 + 8 >> 2] = HEAP32[$__parent$i75$i$i + 8 >> 2];
    HEAP32[$__parent$i75$i$i + 0 >> 2] = 0;
    HEAP32[$__parent$i75$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i75$i$i + 8 >> 2] = 0;
    HEAP32[$521 + 28 >> 2] = 0;
    $526 = HEAP32[$__parent$i115$i$i >> 2] | 0;
    HEAP32[$521 >> 2] = 0;
    HEAP32[$521 + 4 >> 2] = 0;
    HEAP32[$521 + 8 >> 2] = $526;
    HEAP32[$518 >> 2] = $521;
    $530 = HEAP32[HEAP32[266] >> 2] | 0;
    if (!$530) $533 = $521; else {
     HEAP32[266] = $530;
     $533 = HEAP32[$518 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[267] | 0, $533);
    HEAP32[268] = (HEAP32[268] | 0) + 1;
    $__r$0$i14$i$i = $521;
   } else $__r$0$i14$i$i = $519;
   HEAP32[$__r$0$i14$i$i + 28 >> 2] = 2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i75$i$i);
   __THREW__ = 0;
   invoke_viii(3, $__parent$i67$i$i | 0, 40064, 1);
   $537 = __THREW__;
   __THREW__ = 0;
   if ($537 & 1) break;
   $539 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1064, $__parent$i123$i$i, $__parent$i67$i$i) | 0;
   $540 = HEAP32[$539 >> 2] | 0;
   if (!$540) {
    __THREW__ = 0;
    $542 = invoke_ii(67, 32) | 0;
    $543 = __THREW__;
    __THREW__ = 0;
    if ($543 & 1) {
     $565 = ___cxa_find_matching_catch() | 0;
     $566 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i67$i$i);
     $$0$i$i = $566;
     $$01$i$i = $565;
     $567 = HEAP32[267] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1064, $567);
     ___resumeException($$01$i$i | 0);
    }
    $545 = $542 + 16 | 0;
    HEAP32[$545 + 0 >> 2] = HEAP32[$__parent$i67$i$i + 0 >> 2];
    HEAP32[$545 + 4 >> 2] = HEAP32[$__parent$i67$i$i + 4 >> 2];
    HEAP32[$545 + 8 >> 2] = HEAP32[$__parent$i67$i$i + 8 >> 2];
    HEAP32[$__parent$i67$i$i + 0 >> 2] = 0;
    HEAP32[$__parent$i67$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i67$i$i + 8 >> 2] = 0;
    HEAP32[$542 + 28 >> 2] = 0;
    $547 = HEAP32[$__parent$i123$i$i >> 2] | 0;
    HEAP32[$542 >> 2] = 0;
    HEAP32[$542 + 4 >> 2] = 0;
    HEAP32[$542 + 8 >> 2] = $547;
    HEAP32[$539 >> 2] = $542;
    $551 = HEAP32[HEAP32[266] >> 2] | 0;
    if (!$551) $554 = $542; else {
     HEAP32[266] = $551;
     $554 = HEAP32[$539 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[267] | 0, $554);
    HEAP32[268] = (HEAP32[268] | 0) + 1;
    $__r$0$i22$i$i = $542;
   } else $__r$0$i22$i$i = $540;
   HEAP32[$__r$0$i22$i$i + 28 >> 2] = 3;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i67$i$i);
   ___cxa_atexit(181, 1064, ___dso_handle | 0) | 0;
   HEAP32[271] = 0;
   HEAP32[272] = 0;
   HEAP32[270] = 1084;
   __THREW__ = 0;
   invoke_viii(3, $0 | 0, 39632, 1);
   $569 = __THREW__;
   __THREW__ = 0;
   do if (!($569 & 1)) {
    $571 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i$i$i5, $0) | 0;
    $572 = HEAP32[$571 >> 2] | 0;
    if (!$572) {
     __THREW__ = 0;
     $574 = invoke_ii(67, 32) | 0;
     $575 = __THREW__;
     __THREW__ = 0;
     if ($575 & 1) {
      $927 = ___cxa_find_matching_catch() | 0;
      $928 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $$0$i$i26 = $928;
      $$01$i$i25 = $927;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $577 = $574 + 16 | 0;
     HEAP32[$577 + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     HEAP32[$577 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
     HEAP32[$577 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
     HEAP32[$0 + 0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     HEAP32[$574 + 28 >> 2] = 0;
     $579 = HEAP32[$__parent$i$i$i5 >> 2] | 0;
     HEAP32[$574 >> 2] = 0;
     HEAP32[$574 + 4 >> 2] = 0;
     HEAP32[$574 + 8 >> 2] = $579;
     HEAP32[$571 >> 2] = $574;
     $583 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$583) $586 = $574; else {
      HEAP32[270] = $583;
      $586 = HEAP32[$571 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $586);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i$i$i9 = $574;
    } else $__r$0$i$i$i9 = $572;
    HEAP32[$__r$0$i$i$i9 + 28 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    invoke_viii(3, $1 | 0, 39640, 1);
    $590 = __THREW__;
    __THREW__ = 0;
    if ($590 & 1) break;
    $592 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i3$i$i4, $1) | 0;
    $593 = HEAP32[$592 >> 2] | 0;
    if (!$593) {
     __THREW__ = 0;
     $595 = invoke_ii(67, 32) | 0;
     $596 = __THREW__;
     __THREW__ = 0;
     if ($596 & 1) {
      $929 = ___cxa_find_matching_catch() | 0;
      $930 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$0$i$i26 = $930;
      $$01$i$i25 = $929;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $598 = $595 + 16 | 0;
     HEAP32[$598 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
     HEAP32[$598 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$598 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$1 + 0 >> 2] = 0;
     HEAP32[$1 + 4 >> 2] = 0;
     HEAP32[$1 + 8 >> 2] = 0;
     HEAP32[$595 + 28 >> 2] = 0;
     $600 = HEAP32[$__parent$i3$i$i4 >> 2] | 0;
     HEAP32[$595 >> 2] = 0;
     HEAP32[$595 + 4 >> 2] = 0;
     HEAP32[$595 + 8 >> 2] = $600;
     HEAP32[$592 >> 2] = $595;
     $604 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$604) $607 = $595; else {
      HEAP32[270] = $604;
      $607 = HEAP32[$592 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $607);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i6$i$i13 = $595;
    } else $__r$0$i6$i$i13 = $593;
    HEAP32[$__r$0$i6$i$i13 + 28 >> 2] = 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __THREW__ = 0;
    invoke_viii(3, $2 | 0, 39312, 1);
    $611 = __THREW__;
    __THREW__ = 0;
    if ($611 & 1) break;
    $613 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i11$i$i3, $2) | 0;
    $614 = HEAP32[$613 >> 2] | 0;
    if (!$614) {
     __THREW__ = 0;
     $616 = invoke_ii(67, 32) | 0;
     $617 = __THREW__;
     __THREW__ = 0;
     if ($617 & 1) {
      $931 = ___cxa_find_matching_catch() | 0;
      $932 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      $$0$i$i26 = $932;
      $$01$i$i25 = $931;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $619 = $616 + 16 | 0;
     HEAP32[$619 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
     HEAP32[$619 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
     HEAP32[$619 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
     HEAP32[$2 + 0 >> 2] = 0;
     HEAP32[$2 + 4 >> 2] = 0;
     HEAP32[$2 + 8 >> 2] = 0;
     HEAP32[$616 + 28 >> 2] = 0;
     $621 = HEAP32[$__parent$i11$i$i3 >> 2] | 0;
     HEAP32[$616 >> 2] = 0;
     HEAP32[$616 + 4 >> 2] = 0;
     HEAP32[$616 + 8 >> 2] = $621;
     HEAP32[$613 >> 2] = $616;
     $625 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$625) $628 = $616; else {
      HEAP32[270] = $625;
      $628 = HEAP32[$613 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $628);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i14$i$i17 = $616;
    } else $__r$0$i14$i$i17 = $614;
    HEAP32[$__r$0$i14$i$i17 + 28 >> 2] = 2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 40064, 1);
    $632 = __THREW__;
    __THREW__ = 0;
    if ($632 & 1) break;
    $634 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i19$i$i2, $3) | 0;
    $635 = HEAP32[$634 >> 2] | 0;
    if (!$635) {
     __THREW__ = 0;
     $637 = invoke_ii(67, 32) | 0;
     $638 = __THREW__;
     __THREW__ = 0;
     if ($638 & 1) {
      $933 = ___cxa_find_matching_catch() | 0;
      $934 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$0$i$i26 = $934;
      $$01$i$i25 = $933;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $640 = $637 + 16 | 0;
     HEAP32[$640 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
     HEAP32[$640 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$640 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     HEAP32[$3 + 0 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     HEAP32[$637 + 28 >> 2] = 0;
     $642 = HEAP32[$__parent$i19$i$i2 >> 2] | 0;
     HEAP32[$637 >> 2] = 0;
     HEAP32[$637 + 4 >> 2] = 0;
     HEAP32[$637 + 8 >> 2] = $642;
     HEAP32[$634 >> 2] = $637;
     $646 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$646) $649 = $637; else {
      HEAP32[270] = $646;
      $649 = HEAP32[$634 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $649);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i22$i$i21 = $637;
    } else $__r$0$i22$i$i21 = $635;
    HEAP32[$__r$0$i22$i$i21 + 28 >> 2] = 3;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    invoke_viii(3, $4 | 0, 39648, 2);
    $653 = __THREW__;
    __THREW__ = 0;
    if ($653 & 1) break;
    $655 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i27$i$i, $4) | 0;
    $656 = HEAP32[$655 >> 2] | 0;
    if (!$656) {
     __THREW__ = 0;
     $658 = invoke_ii(67, 32) | 0;
     $659 = __THREW__;
     __THREW__ = 0;
     if ($659 & 1) {
      $935 = ___cxa_find_matching_catch() | 0;
      $936 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$0$i$i26 = $936;
      $$01$i$i25 = $935;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $661 = $658 + 16 | 0;
     HEAP32[$661 + 0 >> 2] = HEAP32[$4 + 0 >> 2];
     HEAP32[$661 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
     HEAP32[$661 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
     HEAP32[$4 + 0 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     HEAP32[$658 + 28 >> 2] = 0;
     $663 = HEAP32[$__parent$i27$i$i >> 2] | 0;
     HEAP32[$658 >> 2] = 0;
     HEAP32[$658 + 4 >> 2] = 0;
     HEAP32[$658 + 8 >> 2] = $663;
     HEAP32[$655 >> 2] = $658;
     $667 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$667) $670 = $658; else {
      HEAP32[270] = $667;
      $670 = HEAP32[$655 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $670);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i30$i$i = $658;
    } else $__r$0$i30$i$i = $656;
    HEAP32[$__r$0$i30$i$i + 28 >> 2] = 4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    __THREW__ = 0;
    invoke_viii(3, $5 | 0, 39656, 2);
    $674 = __THREW__;
    __THREW__ = 0;
    if ($674 & 1) break;
    $676 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i35$i$i, $5) | 0;
    $677 = HEAP32[$676 >> 2] | 0;
    if (!$677) {
     __THREW__ = 0;
     $679 = invoke_ii(67, 32) | 0;
     $680 = __THREW__;
     __THREW__ = 0;
     if ($680 & 1) {
      $937 = ___cxa_find_matching_catch() | 0;
      $938 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      $$0$i$i26 = $938;
      $$01$i$i25 = $937;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $682 = $679 + 16 | 0;
     HEAP32[$682 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$682 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$682 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     HEAP32[$679 + 28 >> 2] = 0;
     $684 = HEAP32[$__parent$i35$i$i >> 2] | 0;
     HEAP32[$679 >> 2] = 0;
     HEAP32[$679 + 4 >> 2] = 0;
     HEAP32[$679 + 8 >> 2] = $684;
     HEAP32[$676 >> 2] = $679;
     $688 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$688) $691 = $679; else {
      HEAP32[270] = $688;
      $691 = HEAP32[$676 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $691);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i38$i$i = $679;
    } else $__r$0$i38$i$i = $677;
    HEAP32[$__r$0$i38$i$i + 28 >> 2] = 5;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __THREW__ = 0;
    invoke_viii(3, $6 | 0, 37024, 1);
    $695 = __THREW__;
    __THREW__ = 0;
    if ($695 & 1) break;
    $697 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i43$i$i, $6) | 0;
    $698 = HEAP32[$697 >> 2] | 0;
    if (!$698) {
     __THREW__ = 0;
     $700 = invoke_ii(67, 32) | 0;
     $701 = __THREW__;
     __THREW__ = 0;
     if ($701 & 1) {
      $939 = ___cxa_find_matching_catch() | 0;
      $940 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      $$0$i$i26 = $940;
      $$01$i$i25 = $939;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $703 = $700 + 16 | 0;
     HEAP32[$703 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     HEAP32[$703 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$703 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     HEAP32[$6 + 0 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     HEAP32[$700 + 28 >> 2] = 0;
     $705 = HEAP32[$__parent$i43$i$i >> 2] | 0;
     HEAP32[$700 >> 2] = 0;
     HEAP32[$700 + 4 >> 2] = 0;
     HEAP32[$700 + 8 >> 2] = $705;
     HEAP32[$697 >> 2] = $700;
     $709 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$709) $712 = $700; else {
      HEAP32[270] = $709;
      $712 = HEAP32[$697 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $712);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i46$i$i = $700;
    } else $__r$0$i46$i$i = $698;
    HEAP32[$__r$0$i46$i$i + 28 >> 2] = 6;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __THREW__ = 0;
    invoke_viii(3, $7 | 0, 39664, 2);
    $716 = __THREW__;
    __THREW__ = 0;
    if ($716 & 1) break;
    $718 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i51$i$i, $7) | 0;
    $719 = HEAP32[$718 >> 2] | 0;
    if (!$719) {
     __THREW__ = 0;
     $721 = invoke_ii(67, 32) | 0;
     $722 = __THREW__;
     __THREW__ = 0;
     if ($722 & 1) {
      $941 = ___cxa_find_matching_catch() | 0;
      $942 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$0$i$i26 = $942;
      $$01$i$i25 = $941;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $724 = $721 + 16 | 0;
     HEAP32[$724 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
     HEAP32[$724 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$724 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     HEAP32[$7 + 0 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     HEAP32[$721 + 28 >> 2] = 0;
     $726 = HEAP32[$__parent$i51$i$i >> 2] | 0;
     HEAP32[$721 >> 2] = 0;
     HEAP32[$721 + 4 >> 2] = 0;
     HEAP32[$721 + 8 >> 2] = $726;
     HEAP32[$718 >> 2] = $721;
     $730 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$730) $733 = $721; else {
      HEAP32[270] = $730;
      $733 = HEAP32[$718 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $733);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i54$i$i = $721;
    } else $__r$0$i54$i$i = $719;
    HEAP32[$__r$0$i54$i$i + 28 >> 2] = 7;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    __THREW__ = 0;
    invoke_viii(3, $8 | 0, 39672, 1);
    $737 = __THREW__;
    __THREW__ = 0;
    if ($737 & 1) break;
    $739 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i59$i$i, $8) | 0;
    $740 = HEAP32[$739 >> 2] | 0;
    if (!$740) {
     __THREW__ = 0;
     $742 = invoke_ii(67, 32) | 0;
     $743 = __THREW__;
     __THREW__ = 0;
     if ($743 & 1) {
      $943 = ___cxa_find_matching_catch() | 0;
      $944 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $$0$i$i26 = $944;
      $$01$i$i25 = $943;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $745 = $742 + 16 | 0;
     HEAP32[$745 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
     HEAP32[$745 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$745 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     HEAP32[$8 + 0 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     HEAP32[$742 + 28 >> 2] = 0;
     $747 = HEAP32[$__parent$i59$i$i >> 2] | 0;
     HEAP32[$742 >> 2] = 0;
     HEAP32[$742 + 4 >> 2] = 0;
     HEAP32[$742 + 8 >> 2] = $747;
     HEAP32[$739 >> 2] = $742;
     $751 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$751) $754 = $742; else {
      HEAP32[270] = $751;
      $754 = HEAP32[$739 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $754);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i62$i$i = $742;
    } else $__r$0$i62$i$i = $740;
    HEAP32[$__r$0$i62$i$i + 28 >> 2] = 8;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    __THREW__ = 0;
    invoke_viii(3, $9 | 0, 39680, 2);
    $758 = __THREW__;
    __THREW__ = 0;
    if ($758 & 1) break;
    $760 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i67$i$i, $9) | 0;
    $761 = HEAP32[$760 >> 2] | 0;
    if (!$761) {
     __THREW__ = 0;
     $763 = invoke_ii(67, 32) | 0;
     $764 = __THREW__;
     __THREW__ = 0;
     if ($764 & 1) {
      $945 = ___cxa_find_matching_catch() | 0;
      $946 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      $$0$i$i26 = $946;
      $$01$i$i25 = $945;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $766 = $763 + 16 | 0;
     HEAP32[$766 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
     HEAP32[$766 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$766 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     HEAP32[$9 + 0 >> 2] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
     HEAP32[$9 + 8 >> 2] = 0;
     HEAP32[$763 + 28 >> 2] = 0;
     $768 = HEAP32[$__parent$i67$i$i >> 2] | 0;
     HEAP32[$763 >> 2] = 0;
     HEAP32[$763 + 4 >> 2] = 0;
     HEAP32[$763 + 8 >> 2] = $768;
     HEAP32[$760 >> 2] = $763;
     $772 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$772) $775 = $763; else {
      HEAP32[270] = $772;
      $775 = HEAP32[$760 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $775);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i70$i$i = $763;
    } else $__r$0$i70$i$i = $761;
    HEAP32[$__r$0$i70$i$i + 28 >> 2] = 9;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __THREW__ = 0;
    invoke_viii(3, $10 | 0, 39688, 2);
    $779 = __THREW__;
    __THREW__ = 0;
    if ($779 & 1) break;
    $781 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i75$i$i, $10) | 0;
    $782 = HEAP32[$781 >> 2] | 0;
    if (!$782) {
     __THREW__ = 0;
     $784 = invoke_ii(67, 32) | 0;
     $785 = __THREW__;
     __THREW__ = 0;
     if ($785 & 1) {
      $947 = ___cxa_find_matching_catch() | 0;
      $948 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
      $$0$i$i26 = $948;
      $$01$i$i25 = $947;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $787 = $784 + 16 | 0;
     HEAP32[$787 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
     HEAP32[$787 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
     HEAP32[$787 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
     HEAP32[$10 + 0 >> 2] = 0;
     HEAP32[$10 + 4 >> 2] = 0;
     HEAP32[$10 + 8 >> 2] = 0;
     HEAP32[$784 + 28 >> 2] = 0;
     $789 = HEAP32[$__parent$i75$i$i >> 2] | 0;
     HEAP32[$784 >> 2] = 0;
     HEAP32[$784 + 4 >> 2] = 0;
     HEAP32[$784 + 8 >> 2] = $789;
     HEAP32[$781 >> 2] = $784;
     $793 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$793) $796 = $784; else {
      HEAP32[270] = $793;
      $796 = HEAP32[$781 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $796);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i78$i$i = $784;
    } else $__r$0$i78$i$i = $782;
    HEAP32[$__r$0$i78$i$i + 28 >> 2] = 10;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    __THREW__ = 0;
    invoke_viii(3, $11 | 0, 39696, 2);
    $800 = __THREW__;
    __THREW__ = 0;
    if ($800 & 1) break;
    $802 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i83$i$i, $11) | 0;
    $803 = HEAP32[$802 >> 2] | 0;
    if (!$803) {
     __THREW__ = 0;
     $805 = invoke_ii(67, 32) | 0;
     $806 = __THREW__;
     __THREW__ = 0;
     if ($806 & 1) {
      $949 = ___cxa_find_matching_catch() | 0;
      $950 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
      $$0$i$i26 = $950;
      $$01$i$i25 = $949;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $808 = $805 + 16 | 0;
     HEAP32[$808 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
     HEAP32[$808 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
     HEAP32[$808 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
     HEAP32[$11 + 0 >> 2] = 0;
     HEAP32[$11 + 4 >> 2] = 0;
     HEAP32[$11 + 8 >> 2] = 0;
     HEAP32[$805 + 28 >> 2] = 0;
     $810 = HEAP32[$__parent$i83$i$i >> 2] | 0;
     HEAP32[$805 >> 2] = 0;
     HEAP32[$805 + 4 >> 2] = 0;
     HEAP32[$805 + 8 >> 2] = $810;
     HEAP32[$802 >> 2] = $805;
     $814 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$814) $817 = $805; else {
      HEAP32[270] = $814;
      $817 = HEAP32[$802 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $817);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i86$i$i = $805;
    } else $__r$0$i86$i$i = $803;
    HEAP32[$__r$0$i86$i$i + 28 >> 2] = 11;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    __THREW__ = 0;
    invoke_viii(3, $12 | 0, 39704, 1);
    $821 = __THREW__;
    __THREW__ = 0;
    if ($821 & 1) break;
    $823 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i91$i$i1, $12) | 0;
    $824 = HEAP32[$823 >> 2] | 0;
    if (!$824) {
     __THREW__ = 0;
     $826 = invoke_ii(67, 32) | 0;
     $827 = __THREW__;
     __THREW__ = 0;
     if ($827 & 1) {
      $951 = ___cxa_find_matching_catch() | 0;
      $952 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
      $$0$i$i26 = $952;
      $$01$i$i25 = $951;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $829 = $826 + 16 | 0;
     HEAP32[$829 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
     HEAP32[$829 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
     HEAP32[$829 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
     HEAP32[$12 + 0 >> 2] = 0;
     HEAP32[$12 + 4 >> 2] = 0;
     HEAP32[$12 + 8 >> 2] = 0;
     HEAP32[$826 + 28 >> 2] = 0;
     $831 = HEAP32[$__parent$i91$i$i1 >> 2] | 0;
     HEAP32[$826 >> 2] = 0;
     HEAP32[$826 + 4 >> 2] = 0;
     HEAP32[$826 + 8 >> 2] = $831;
     HEAP32[$823 >> 2] = $826;
     $835 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$835) $838 = $826; else {
      HEAP32[270] = $835;
      $838 = HEAP32[$823 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $838);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i94$i$i = $826;
    } else $__r$0$i94$i$i = $824;
    HEAP32[$__r$0$i94$i$i + 28 >> 2] = 12;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    __THREW__ = 0;
    invoke_viii(3, $13 | 0, 39712, 1);
    $842 = __THREW__;
    __THREW__ = 0;
    if ($842 & 1) break;
    $844 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i99$i$i, $13) | 0;
    $845 = HEAP32[$844 >> 2] | 0;
    if (!$845) {
     __THREW__ = 0;
     $847 = invoke_ii(67, 32) | 0;
     $848 = __THREW__;
     __THREW__ = 0;
     if ($848 & 1) {
      $953 = ___cxa_find_matching_catch() | 0;
      $954 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
      $$0$i$i26 = $954;
      $$01$i$i25 = $953;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $850 = $847 + 16 | 0;
     HEAP32[$850 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
     HEAP32[$850 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
     HEAP32[$850 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
     HEAP32[$13 + 0 >> 2] = 0;
     HEAP32[$13 + 4 >> 2] = 0;
     HEAP32[$13 + 8 >> 2] = 0;
     HEAP32[$847 + 28 >> 2] = 0;
     $852 = HEAP32[$__parent$i99$i$i >> 2] | 0;
     HEAP32[$847 >> 2] = 0;
     HEAP32[$847 + 4 >> 2] = 0;
     HEAP32[$847 + 8 >> 2] = $852;
     HEAP32[$844 >> 2] = $847;
     $856 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$856) $859 = $847; else {
      HEAP32[270] = $856;
      $859 = HEAP32[$844 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $859);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i102$i$i = $847;
    } else $__r$0$i102$i$i = $845;
    HEAP32[$__r$0$i102$i$i + 28 >> 2] = 13;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 39720, 1);
    $863 = __THREW__;
    __THREW__ = 0;
    if ($863 & 1) break;
    $865 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i107$i$i, $14) | 0;
    $866 = HEAP32[$865 >> 2] | 0;
    if (!$866) {
     __THREW__ = 0;
     $868 = invoke_ii(67, 32) | 0;
     $869 = __THREW__;
     __THREW__ = 0;
     if ($869 & 1) {
      $955 = ___cxa_find_matching_catch() | 0;
      $956 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
      $$0$i$i26 = $956;
      $$01$i$i25 = $955;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $871 = $868 + 16 | 0;
     HEAP32[$871 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
     HEAP32[$871 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
     HEAP32[$871 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
     HEAP32[$14 + 0 >> 2] = 0;
     HEAP32[$14 + 4 >> 2] = 0;
     HEAP32[$14 + 8 >> 2] = 0;
     HEAP32[$868 + 28 >> 2] = 0;
     $873 = HEAP32[$__parent$i107$i$i >> 2] | 0;
     HEAP32[$868 >> 2] = 0;
     HEAP32[$868 + 4 >> 2] = 0;
     HEAP32[$868 + 8 >> 2] = $873;
     HEAP32[$865 >> 2] = $868;
     $877 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$877) $880 = $868; else {
      HEAP32[270] = $877;
      $880 = HEAP32[$865 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $880);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i110$i$i = $868;
    } else $__r$0$i110$i$i = $866;
    HEAP32[$__r$0$i110$i$i + 28 >> 2] = 14;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
    __THREW__ = 0;
    invoke_viii(3, $15 | 0, 39728, 2);
    $884 = __THREW__;
    __THREW__ = 0;
    if ($884 & 1) break;
    $886 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i115$i$i, $15) | 0;
    $887 = HEAP32[$886 >> 2] | 0;
    if (!$887) {
     __THREW__ = 0;
     $889 = invoke_ii(67, 32) | 0;
     $890 = __THREW__;
     __THREW__ = 0;
     if ($890 & 1) {
      $957 = ___cxa_find_matching_catch() | 0;
      $958 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      $$0$i$i26 = $958;
      $$01$i$i25 = $957;
      $961 = HEAP32[271] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $892 = $889 + 16 | 0;
     HEAP32[$892 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
     HEAP32[$892 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
     HEAP32[$892 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
     HEAP32[$15 + 0 >> 2] = 0;
     HEAP32[$15 + 4 >> 2] = 0;
     HEAP32[$15 + 8 >> 2] = 0;
     HEAP32[$889 + 28 >> 2] = 0;
     $894 = HEAP32[$__parent$i115$i$i >> 2] | 0;
     HEAP32[$889 >> 2] = 0;
     HEAP32[$889 + 4 >> 2] = 0;
     HEAP32[$889 + 8 >> 2] = $894;
     HEAP32[$886 >> 2] = $889;
     $898 = HEAP32[HEAP32[270] >> 2] | 0;
     if (!$898) $901 = $889; else {
      HEAP32[270] = $898;
      $901 = HEAP32[$886 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $901);
     HEAP32[272] = (HEAP32[272] | 0) + 1;
     $__r$0$i118$i$i24 = $889;
    } else $__r$0$i118$i$i24 = $887;
    HEAP32[$__r$0$i118$i$i24 + 28 >> 2] = 15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    __THREW__ = 0;
    invoke_viii(3, $16 | 0, 39736, 2);
    $905 = __THREW__;
    __THREW__ = 0;
    if ($905 & 1) break;
    $907 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1080, $__parent$i123$i$i, $16) | 0;
    $908 = HEAP32[$907 >> 2] | 0;
    if ($908) {
     $__r$0$i126$i$i = $908;
     $962 = $__r$0$i126$i$i + 28 | 0;
     HEAP32[$962 >> 2] = 16;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     ___cxa_atexit(182, 1080, ___dso_handle | 0) | 0;
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $910 = invoke_ii(67, 32) | 0;
    $911 = __THREW__;
    __THREW__ = 0;
    if ($911 & 1) {
     $959 = ___cxa_find_matching_catch() | 0;
     $960 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     $$0$i$i26 = $960;
     $$01$i$i25 = $959;
     $961 = HEAP32[271] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
     ___resumeException($$01$i$i25 | 0);
    }
    $913 = $910 + 16 | 0;
    HEAP32[$913 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
    HEAP32[$913 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
    HEAP32[$913 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
    HEAP32[$16 + 0 >> 2] = 0;
    HEAP32[$16 + 4 >> 2] = 0;
    HEAP32[$16 + 8 >> 2] = 0;
    HEAP32[$910 + 28 >> 2] = 0;
    $915 = HEAP32[$__parent$i123$i$i >> 2] | 0;
    HEAP32[$910 >> 2] = 0;
    HEAP32[$910 + 4 >> 2] = 0;
    HEAP32[$910 + 8 >> 2] = $915;
    HEAP32[$907 >> 2] = $910;
    $919 = HEAP32[HEAP32[270] >> 2] | 0;
    if (!$919) $922 = $910; else {
     HEAP32[270] = $919;
     $922 = HEAP32[$907 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[271] | 0, $922);
    HEAP32[272] = (HEAP32[272] | 0) + 1;
    $__r$0$i126$i$i = $910;
    $962 = $__r$0$i126$i$i + 28 | 0;
    HEAP32[$962 >> 2] = 16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
    ___cxa_atexit(182, 1080, ___dso_handle | 0) | 0;
    STACKTOP = sp;
    return;
   } while (0);
   $925 = ___cxa_find_matching_catch() | 0;
   $$0$i$i26 = tempRet0;
   $$01$i$i25 = $925;
   $961 = HEAP32[271] | 0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1080, $961);
   ___resumeException($$01$i$i25 | 0);
  }
 } while (0);
 $557 = ___cxa_find_matching_catch() | 0;
 $$0$i$i = tempRet0;
 $$01$i$i = $557;
 $567 = HEAP32[267] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1064, $567);
 ___resumeException($$01$i$i | 0);
}

function __ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE($agg$result, $ast_, $in_object, $vars) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 $in_object = $in_object | 0;
 $vars = $vars | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i125 = 0, $$0$i$i$i$i$i$i125$lcssa = 0, $$0$i$i$i$i$i$i196 = 0, $$0$i$i$i$i$i$i196$lcssa = 0, $$0$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i127 = 0, $$0$i$i$i$i$i162 = 0, $$0$i$i$i$i$i162$lcssa = 0, $$0$i$i$i$i$i198 = 0, $$0$i$i$i$i$i62 = 0, $$0$i$i$i$i$i97 = 0, $$0$i$i$i$i$i97$lcssa = 0, $$0$i$i$i$i108 = 0, $$0$i$i$i$i108$lcssa = 0, $$0$i$i$i$i135 = 0, $$0$i$i$i$i135$lcssa = 0, $$0$i$i$i$i164 = 0, $$0$i$i$i$i87 = 0, $$0$i$i$i$i87$lcssa = 0, $$0$i$i$i$i99 = 0, $$0$i$i$i$lcssa = 0, $$0$i$i$i110 = 0, $$0$i$i$i137 = 0, $$0$i$i$i179 = 0, $$0$i$i$i34 = 0, $$0$i$i$i42 = 0, $$0$i$i$i80 = 0, $$0$i$i$i88 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i121 = 0, $$0$ph$lcssa$i$i$i$i192 = 0, $$0$ph$lcssa$i$i$i153 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i$lcssa480 = 0, $$0$ph6$i$i$i$i116 = 0, $$0$ph6$i$i$i$i116$lcssa474 = 0, $$0$ph6$i$i$i$i187 = 0, $$0$ph6$i$i$i$i187$lcssa469 = 0, $$0$ph6$i$i$i$lcssa482 = 0, $$0$ph6$i$i$i148 = 0, $$0$ph6$i$i$i148$lcssa467 = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i130 = 0, $$01$i$i$i$i$i201 = 0, $$01$i$i$i$i102 = 0, $$01$i$i$i$i167 = 0, $$01$i$i$i113 = 0, $$01$i$i$i140 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i$i = 0, $$01$ph5$i$i$i$i117 = 0, $$01$ph5$i$i$i$i188 = 0, $$01$ph5$i$i$i149 = 0, $$013$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$i$lcssa$lcssa = 0, $$013$i$i$i$i119 = 0, $$013$i$i$i$i119$lcssa = 0, $$013$i$i$i$i119$lcssa$lcssa = 0, $$013$i$i$i$i190 = 0, $$013$i$i$i$i190$lcssa = 0, $$013$i$i$i$i190$lcssa$lcssa = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i151 = 0, $$013$i$i$i151$lcssa = 0, $$013$i$i$i151$lcssa$lcssa = 0, $$014 = 0, $$016 = 0, $$018 = 0, $$02 = 0, $$0236 = 0, $$04235 = 0, $$1 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $$3 = 0, $$37 = 0, $$4 = 0, $$48 = 0, $$5 = 0, $$59 = 0, $$610261 = 0, $$6262 = 0, $$711267 = 0, $$7268 = 0, $$812275 = 0, $$8276 = 0, $$9 = 0, $$913 = 0, $$byval_copy34 = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i128$lcssa = 0, $$cast$i$i$i$i$i199$lcssa = 0, $$cast$i$i$i$i$lcssa = 0, $$cast$i$i$i$i100$lcssa = 0, $$cast$i$i$i$i165$lcssa = 0, $$cast$i$i$i111$lcssa = 0, $$cast$i$i$i138$lcssa = 0, $$cast$i$i$i89$lcssa = 0, $$cast$i$i$lcssa = 0, $$lcssa = 0, $$lcssa472 = 0, $$lcssa477 = 0, $$lcssa478 = 0, $$lcssa485 = 0, $$lcssa486 = 0, $$lcssa489 = 0, $$lcssa490 = 0, $$lcssa491 = 0, $$pre = 0, $$pre$phi402Z2D = 0, $$pre$phi403Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $105 = 0, $107 = 0, $11 = 0, $111 = 0, $112 = 0, $115 = 0, $116 = 0, $12 = 0, $121 = 0, $125 = 0, $127 = 0, $13 = 0, $133 = 0, $135 = 0, $14 = 0, $141 = 0, $143 = 0, $147 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $155 = 0, $156 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $169 = 0, $17 = 0, $170 = 0, $173 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $181 = 0, $182 = 0, $183 = 0, $186 = 0, $187 = 0, $19 = 0, $191 = 0, $195 = 0, $198 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $205 = 0, $208 = 0, $21 = 0, $212 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $223 = 0, $224 = 0, $225 = 0, $23 = 0, $239 = 0, $24 = 0, $240 = 0, $248 = 0, $249 = 0, $25 = 0, $257 = 0, $258 = 0, $26 = 0, $261 = 0, $263 = 0, $264 = 0, $266 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $272 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $282 = 0, $284 = 0, $287 = 0, $288 = 0, $29 = 0, $292 = 0, $293 = 0, $298 = 0, $3 = 0, $300 = 0, $303 = 0, $306 = 0, $309 = 0, $31 = 0, $311 = 0, $314 = 0, $315 = 0, $319 = 0, $320 = 0, $325 = 0, $327 = 0, $330 = 0, $333 = 0, $337 = 0, $339 = 0, $340 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $35 = 0, $361 = 0, $363 = 0, $366 = 0, $37 = 0, $375 = 0, $376 = 0, $379 = 0, $391 = 0, $395 = 0, $397 = 0, $4 = 0, $403 = 0, $405 = 0, $409 = 0, $410 = 0, $413 = 0, $414 = 0, $417 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $426 = 0, $427 = 0, $428 = 0, $430 = 0, $432 = 0, $434 = 0, $437 = 0, $438 = 0, $44 = 0, $442 = 0, $443 = 0, $449 = 0, $451 = 0, $454 = 0, $458 = 0, $46 = 0, $460 = 0, $463 = 0, $467 = 0, $469 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $475 = 0, $476 = 0, $477 = 0, $48 = 0, $480 = 0, $481 = 0, $485 = 0, $489 = 0, $49 = 0, $492 = 0, $496 = 0, $497 = 0, $499 = 0, $5 = 0, $502 = 0, $506 = 0, $507 = 0, $509 = 0, $51 = 0, $512 = 0, $513 = 0, $514 = 0, $516 = 0, $518 = 0, $520 = 0, $522 = 0, $526 = 0, $528 = 0, $531 = 0, $535 = 0, $537 = 0, $539 = 0, $541 = 0, $542 = 0, $546 = 0, $548 = 0, $552 = 0, $554 = 0, $557 = 0, $558 = 0, $56 = 0, $572 = 0, $574 = 0, $577 = 0, $58 = 0, $585 = 0, $587 = 0, $590 = 0, $594 = 0, $595 = 0, $598 = 0, $6 = 0, $60 = 0, $614 = 0, $616 = 0, $618 = 0, $62 = 0, $620 = 0, $621 = 0, $623 = 0, $626 = 0, $627 = 0, $629 = 0, $632 = 0, $634 = 0, $64 = 0, $640 = 0, $641 = 0, $643 = 0, $644 = 0, $646 = 0, $648 = 0, $649 = 0, $650 = 0, $651 = 0, $652 = 0, $655 = 0, $656 = 0, $657 = 0, $66 = 0, $660 = 0, $661 = 0, $665 = 0, $669 = 0, $67 = 0, $672 = 0, $676 = 0, $677 = 0, $679 = 0, $682 = 0, $686 = 0, $687 = 0, $689 = 0, $691 = 0, $693 = 0, $695 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $703 = 0, $704 = 0, $708 = 0, $71 = 0, $711 = 0, $713 = 0, $716 = 0, $721 = 0, $723 = 0, $729 = 0, $73 = 0, $731 = 0, $735 = 0, $737 = 0, $751 = 0, $753 = 0, $756 = 0, $76 = 0, $765 = 0, $767 = 0, $772 = 0, $774 = 0, $775 = 0, $778 = 0, $779 = 0, $78 = 0, $782 = 0, $783 = 0, $789 = 0, $790 = 0, $793 = 0, $795 = 0, $796 = 0, $798 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $804 = 0, $806 = 0, $807 = 0, $810 = 0, $811 = 0, $814 = 0, $816 = 0, $817 = 0, $819 = 0, $82 = 0, $821 = 0, $822 = 0, $823 = 0, $825 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $833 = 0, $835 = 0, $839 = 0, $840 = 0, $843 = 0, $845 = 0, $846 = 0, $847 = 0, $849 = 0, $85 = 0, $862 = 0, $863 = 0, $864 = 0, $872 = 0, $873 = 0, $881 = 0, $882 = 0, $885 = 0, $887 = 0, $888 = 0, $890 = 0, $892 = 0, $893 = 0, $894 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $902 = 0, $903 = 0, $91 = 0, $910 = 0, $913 = 0, $916 = 0, $917 = 0, $919 = 0, $920 = 0, $926 = 0, $928 = 0, $929 = 0, $93 = 0, $934 = 0, $935 = 0, $937 = 0, $938 = 0, $939 = 0, $941 = 0, $943 = 0, $945 = 0, $947 = 0, $948 = 0, $949 = 0, $951 = 0, $952 = 0, $953 = 0, $958 = 0, $959 = 0, $962 = 0, $964 = 0, $967 = 0, $97 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $99 = 0, $__nd$0$be$in$i$i$i = 0, $__nd$0$be$in$i$i$i176 = 0, $__nd$0$be$in$i$i$i39 = 0, $__nd$0$be$in$i$i$i77 = 0, $__nd$0$i$i$i = 0, $__nd$0$i$i$i$lcssa = 0, $__nd$0$i$i$i$lcssa483 = 0, $__nd$0$i$i$i$lcssa484 = 0, $__nd$0$i$i$i175 = 0, $__nd$0$i$i$i175$lcssa = 0, $__nd$0$i$i$i175$lcssa470 = 0, $__nd$0$i$i$i175$lcssa471 = 0, $__nd$0$i$i$i38 = 0, $__nd$0$i$i$i38$lcssa = 0, $__nd$0$i$i$i38$lcssa487 = 0, $__nd$0$i$i$i38$lcssa488 = 0, $__nd$0$i$i$i76 = 0, $__nd$0$i$i$i76$lcssa = 0, $__nd$0$i$i$i76$lcssa475 = 0, $__nd$0$i$i$i76$lcssa476 = 0, $__parent$i$i = 0, $__parent$i$i$i = 0, $__parent$i$i$i156 = 0, $__parent$i$i$i91 = 0, $__parent$i$i36 = 0, $__parent$i$i74 = 0, $ast_vars = 0, $eh$lpad$body$index8Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body106$index24Z2D = 0, $eh$lpad$body106$indexZ2D = 0, $fv = 0, $fvs = 0, $id = 0, $lpad$phi295$index = 0, $lpad$phi295$index29 = 0, $lpad$phi305$index = 0, $lpad$phi305$index19 = 0, $new_vars = 0, $new_vars21 = 0, $new_vars35 = 0, $params = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $$byval_copy34 = sp + 404 | 0;
 $__parent$i$i$i156 = sp + 400 | 0;
 $0 = sp + 396 | 0;
 $__parent$i$i$i91 = sp + 392 | 0;
 $1 = sp + 388 | 0;
 $__parent$i$i74 = sp + 384 | 0;
 $__parent$i$i36 = sp + 380 | 0;
 $__parent$i$i = sp + 376 | 0;
 $2 = sp + 372 | 0;
 $__parent$i$i$i = sp + 368 | 0;
 $3 = sp + 364 | 0;
 $4 = sp + 352 | 0;
 $5 = sp + 340 | 0;
 $6 = sp + 328 | 0;
 $7 = sp + 316 | 0;
 $8 = sp + 304 | 0;
 $9 = sp + 292 | 0;
 $10 = sp + 280 | 0;
 $11 = sp + 268 | 0;
 $12 = sp + 256 | 0;
 $new_vars = sp + 244 | 0;
 $params = sp + 232 | 0;
 $13 = sp + 220 | 0;
 $fv = sp + 208 | 0;
 $14 = sp + 196 | 0;
 $15 = sp + 184 | 0;
 $ast_vars = sp + 172 | 0;
 $new_vars21 = sp + 160 | 0;
 $fvs = sp + 148 | 0;
 $16 = sp + 136 | 0;
 $17 = sp + 124 | 0;
 $18 = sp + 112 | 0;
 $19 = sp + 100 | 0;
 $new_vars35 = sp + 88 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 64 | 0;
 $22 = sp + 52 | 0;
 $23 = sp + 40 | 0;
 $24 = sp + 28 | 0;
 $25 = sp + 16 | 0;
 $26 = sp + 4 | 0;
 $id = sp;
 $27 = $agg$result + 4 | 0;
 HEAP32[$27 >> 2] = 0;
 $28 = $agg$result + 8 | 0;
 HEAP32[$28 >> 2] = 0;
 $29 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $29;
 L1 : do if (!$ast_) label = 414; else {
  $31 = ___dynamic_cast($ast_, 33800, 34048, 0) | 0;
  L3 : do if (!$31) {
   $73 = ___dynamic_cast($ast_, 33800, 34080, 0) | 0;
   if ($73) {
    $76 = HEAP32[$73 + 48 >> 2] | 0;
    $78 = HEAP32[$73 + 52 >> 2] | 0;
    if (($76 | 0) == ($78 | 0)) break;
    $80 = $6 + 4 | 0;
    $82 = $76;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(15, $6 | 0, HEAP32[$82 >> 2] | 0, $in_object | 0, $vars | 0);
     $83 = __THREW__;
     __THREW__ = 0;
     if ($83 & 1) {
      label = 12;
      break;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $6 | 0);
     $85 = __THREW__;
     __THREW__ = 0;
     if ($85 & 1) {
      label = 24;
      break;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$80 >> 2] | 0);
     $82 = $82 + 4 | 0;
     if (($82 | 0) == ($78 | 0)) {
      label = 425;
      break;
     }
    }
    if ((label | 0) == 12) {
     $60 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $60;
     break L1;
    } else if ((label | 0) == 24) {
     $90 = ___cxa_find_matching_catch() | 0;
     $91 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$80 >> 2] | 0);
     $$9 = $90;
     $$913 = $91;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 425) break;
   }
   $93 = ___dynamic_cast($ast_, 33800, 34104, 0) | 0;
   if ($93) {
    __THREW__ = 0;
    invoke_viiii(15, $7 | 0, HEAP32[$93 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(59, $agg$result | 0, $7 | 0);
    $99 = __THREW__;
    __THREW__ = 0;
    if ($99 & 1) {
     $111 = ___cxa_find_matching_catch() | 0;
     $112 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$7 + 4 >> 2] | 0);
     $$9 = $111;
     $$913 = $112;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$7 + 4 >> 2] | 0);
    __THREW__ = 0;
    invoke_viiii(15, $8 | 0, HEAP32[$93 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
    $105 = __THREW__;
    __THREW__ = 0;
    if ($105 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(59, $agg$result | 0, $8 | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    if (!($107 & 1)) {
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$8 + 4 >> 2] | 0);
     break;
    }
    $115 = ___cxa_find_matching_catch() | 0;
    $116 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$8 + 4 >> 2] | 0);
    $$9 = $115;
    $$913 = $116;
    $971 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
    ___resumeException($$9 | 0);
   }
   if (!(___dynamic_cast($ast_, 33800, 33944, 0) | 0)) {
    $121 = ___dynamic_cast($ast_, 33800, 34184, 0) | 0;
    if ($121) {
     __THREW__ = 0;
     invoke_viiii(15, $9 | 0, HEAP32[$121 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $125 = __THREW__;
     __THREW__ = 0;
     if ($125 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $9 | 0);
     $127 = __THREW__;
     __THREW__ = 0;
     if ($127 & 1) {
      $147 = ___cxa_find_matching_catch() | 0;
      $148 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
      $$9 = $147;
      $$913 = $148;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(15, $10 | 0, HEAP32[$121 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
     $133 = __THREW__;
     __THREW__ = 0;
     if ($133 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $10 | 0);
     $135 = __THREW__;
     __THREW__ = 0;
     if ($135 & 1) {
      $151 = ___cxa_find_matching_catch() | 0;
      $152 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
      $$9 = $151;
      $$913 = $152;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(15, $11 | 0, HEAP32[$121 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
     $141 = __THREW__;
     __THREW__ = 0;
     if ($141 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $11 | 0);
     $143 = __THREW__;
     __THREW__ = 0;
     if (!($143 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
      break;
     }
     $155 = ___cxa_find_matching_catch() | 0;
     $156 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
     $$9 = $155;
     $$913 = $156;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    $159 = ___dynamic_cast($ast_, 33800, 34232, 0) | 0;
    if ($159) {
     __THREW__ = 0;
     invoke_viiii(15, $12 | 0, HEAP32[$159 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $12 | 0);
     $165 = __THREW__;
     __THREW__ = 0;
     if (!($165 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
      break;
     }
     $169 = ___cxa_find_matching_catch() | 0;
     $170 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
     $$9 = $169;
     $$913 = $170;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    $173 = ___dynamic_cast($ast_, 33800, 34272, 0) | 0;
    if ($173) {
     $175 = $new_vars + 4 | 0;
     HEAP32[$175 >> 2] = 0;
     $176 = $new_vars + 8 | 0;
     HEAP32[$176 >> 2] = 0;
     $177 = $new_vars + 4 | 0;
     HEAP32[$new_vars >> 2] = $177;
     $178 = HEAP32[$vars >> 2] | 0;
     $179 = $vars + 4 | 0;
     do if (($178 | 0) != ($179 | 0)) {
      $182 = $178;
      $202 = $178;
      while (1) {
       $181 = $182 + 16 | 0;
       HEAP32[$3 >> 2] = $177;
       HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
       $183 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars, $$byval_copy34, $__parent$i$i$i, $181) | 0;
       if (!(HEAP32[$183 >> 2] | 0)) {
        __THREW__ = 0;
        $186 = invoke_ii(67, 20) | 0;
        $187 = __THREW__;
        __THREW__ = 0;
        if ($187 & 1) {
         label = 66;
         break;
        }
        HEAP32[$186 + 16 >> 2] = HEAP32[$181 >> 2];
        $191 = HEAP32[$__parent$i$i$i >> 2] | 0;
        HEAP32[$186 >> 2] = 0;
        HEAP32[$186 + 4 >> 2] = 0;
        HEAP32[$186 + 8 >> 2] = $191;
        HEAP32[$183 >> 2] = $186;
        $195 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$195) $198 = $186; else {
         HEAP32[$new_vars >> 2] = $195;
         $198 = HEAP32[$183 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$175 >> 2] | 0, $198);
        HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
       }
       $203 = HEAP32[$202 + 4 >> 2] | 0;
       if (!$203) {
        $$0$i$i$i$i = $202;
        while (1) {
         $208 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$208 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
          $$cast$i$i$i$i$lcssa = $208;
          break;
         } else $$0$i$i$i$i = $208;
        }
        $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i = $203;
        while (1) {
         $205 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
         if (!$205) {
          $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i = $205;
        }
        $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
       }
       if (($$01$i$i$i$i | 0) == ($179 | 0)) {
        label = 67;
        break;
       } else {
        $182 = $$01$i$i$i$i;
        $202 = $$01$i$i$i$i;
       }
      }
      if ((label | 0) == 66) {
       $212 = ___cxa_find_matching_catch() | 0;
       $213 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
       $eh$lpad$body$index8Z2D = $213;
       $eh$lpad$body$indexZ2D = $212;
       break L1;
      } else if ((label | 0) == 67) break;
     } while (0);
     $215 = $params + 4 | 0;
     HEAP32[$215 >> 2] = 0;
     $216 = $params + 8 | 0;
     HEAP32[$216 >> 2] = 0;
     $217 = $params + 4 | 0;
     HEAP32[$params >> 2] = $217;
     $218 = $173 + 48 | 0;
     $219 = HEAP32[$218 >> 2] | 0;
     $220 = $173 + 52 | 0;
     $221 = HEAP32[$220 >> 2] | 0;
     L85 : do if (($219 | 0) == ($221 | 0)) label = 133; else {
      $224 = $219;
      $225 = 0;
      while (1) {
       $223 = HEAP32[$224 >> 2] | 0;
       if ($225) {
        $$0$ph6$i$i$i = $217;
        $$01$ph5$i$i$i = $225;
        L91 : while (1) {
         $$013$i$i$i = $$01$ph5$i$i$i;
         while (1) {
          if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $223 >>> 0) {
           $$013$i$i$i$lcssa = $$013$i$i$i;
           break;
          }
          $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
          if (!$$013$i$i$i) {
           $$0$ph6$i$i$i$lcssa482 = $$0$ph6$i$i$i;
           label = 76;
           break L91;
          }
         }
         $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i) {
          $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
          label = 77;
          break;
         } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
        }
        if ((label | 0) == 76) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa482;
        } else if ((label | 0) == 77) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i | 0) != ($217 | 0)) if ($223 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
         $$lcssa491 = $223;
         label = 80;
         break;
        }
       }
       do if (!$225) {
        HEAP32[$__parent$i$i >> 2] = $217;
        $$0$i$i$i34 = $217;
        $298 = $217;
       } else {
        $__nd$0$i$i$i = $225;
        while (1) {
         $282 = HEAP32[$__nd$0$i$i$i + 16 >> 2] | 0;
         if ($223 >>> 0 < $282 >>> 0) {
          $284 = HEAP32[$__nd$0$i$i$i >> 2] | 0;
          if (!$284) {
           $$lcssa486 = $__nd$0$i$i$i;
           $__nd$0$i$i$i$lcssa484 = $__nd$0$i$i$i;
           label = 102;
           break;
          } else $__nd$0$be$in$i$i$i = $284;
         } else {
          if ($282 >>> 0 >= $223 >>> 0) {
           $__nd$0$i$i$i$lcssa = $__nd$0$i$i$i;
           label = 107;
           break;
          }
          $287 = $__nd$0$i$i$i + 4 | 0;
          $288 = HEAP32[$287 >> 2] | 0;
          if (!$288) {
           $$lcssa485 = $287;
           $__nd$0$i$i$i$lcssa483 = $__nd$0$i$i$i;
           label = 106;
           break;
          } else $__nd$0$be$in$i$i$i = $288;
         }
         $__nd$0$i$i$i = $__nd$0$be$in$i$i$i;
        }
        if ((label | 0) == 102) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa484;
         $$0$i$i$i34 = $$lcssa486;
         $298 = $__nd$0$i$i$i$lcssa484;
         break;
        } else if ((label | 0) == 106) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa483;
         $$0$i$i$i34 = $$lcssa485;
         $298 = $__nd$0$i$i$i$lcssa483;
         break;
        } else if ((label | 0) == 107) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa;
         $$0$i$i$i34 = $__parent$i$i;
         $298 = $__nd$0$i$i$i$lcssa;
         break;
        }
       } while (0);
       if (!(HEAP32[$$0$i$i$i34 >> 2] | 0)) {
        __THREW__ = 0;
        $292 = invoke_ii(67, 20) | 0;
        $293 = __THREW__;
        __THREW__ = 0;
        if ($293 & 1) {
         label = 92;
         break;
        }
        HEAP32[$292 + 16 >> 2] = $223;
        HEAP32[$292 >> 2] = 0;
        HEAP32[$292 + 4 >> 2] = 0;
        HEAP32[$292 + 8 >> 2] = $298;
        HEAP32[$$0$i$i$i34 >> 2] = $292;
        $300 = HEAP32[HEAP32[$params >> 2] >> 2] | 0;
        if (!$300) $303 = $292; else {
         HEAP32[$params >> 2] = $300;
         $303 = HEAP32[$$0$i$i$i34 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$215 >> 2] | 0, $303);
        HEAP32[$216 >> 2] = (HEAP32[$216 >> 2] | 0) + 1;
       }
       $306 = HEAP32[$177 >> 2] | 0;
       do if (!$306) {
        HEAP32[$__parent$i$i36 >> 2] = $177;
        $$0$i$i$i42 = $177;
        $325 = $177;
       } else {
        $__nd$0$i$i$i38 = $306;
        while (1) {
         $309 = HEAP32[$__nd$0$i$i$i38 + 16 >> 2] | 0;
         if ($223 >>> 0 < $309 >>> 0) {
          $311 = HEAP32[$__nd$0$i$i$i38 >> 2] | 0;
          if (!$311) {
           $$lcssa490 = $__nd$0$i$i$i38;
           $__nd$0$i$i$i38$lcssa488 = $__nd$0$i$i$i38;
           label = 118;
           break;
          } else $__nd$0$be$in$i$i$i39 = $311;
         } else {
          if ($309 >>> 0 >= $223 >>> 0) {
           $__nd$0$i$i$i38$lcssa = $__nd$0$i$i$i38;
           label = 123;
           break;
          }
          $314 = $__nd$0$i$i$i38 + 4 | 0;
          $315 = HEAP32[$314 >> 2] | 0;
          if (!$315) {
           $$lcssa489 = $314;
           $__nd$0$i$i$i38$lcssa487 = $__nd$0$i$i$i38;
           label = 122;
           break;
          } else $__nd$0$be$in$i$i$i39 = $315;
         }
         $__nd$0$i$i$i38 = $__nd$0$be$in$i$i$i39;
        }
        if ((label | 0) == 118) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa488;
         $$0$i$i$i42 = $$lcssa490;
         $325 = $__nd$0$i$i$i38$lcssa488;
         break;
        } else if ((label | 0) == 122) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa487;
         $$0$i$i$i42 = $$lcssa489;
         $325 = $__nd$0$i$i$i38$lcssa487;
         break;
        } else if ((label | 0) == 123) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa;
         $$0$i$i$i42 = $__parent$i$i36;
         $325 = $__nd$0$i$i$i38$lcssa;
         break;
        }
       } while (0);
       if (!(HEAP32[$$0$i$i$i42 >> 2] | 0)) {
        __THREW__ = 0;
        $319 = invoke_ii(67, 20) | 0;
        $320 = __THREW__;
        __THREW__ = 0;
        if ($320 & 1) {
         label = 92;
         break;
        }
        HEAP32[$319 + 16 >> 2] = $223;
        HEAP32[$319 >> 2] = 0;
        HEAP32[$319 + 4 >> 2] = 0;
        HEAP32[$319 + 8 >> 2] = $325;
        HEAP32[$$0$i$i$i42 >> 2] = $319;
        $327 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$327) $330 = $319; else {
         HEAP32[$new_vars >> 2] = $327;
         $330 = HEAP32[$$0$i$i$i42 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$175 >> 2] | 0, $330);
        HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
       }
       $333 = $224 + 4 | 0;
       if (($333 | 0) == ($221 | 0)) {
        label = 132;
        break;
       }
       $224 = $333;
       $225 = HEAP32[$217 >> 2] | 0;
      }
      if ((label | 0) == 80) {
       $239 = ___cxa_allocate_exception(40) | 0;
       HEAP32[$13 + 0 >> 2] = 0;
       HEAP32[$13 + 4 >> 2] = 0;
       HEAP32[$13 + 8 >> 2] = 0;
       $240 = HEAP8[$$lcssa491 >> 0] | 0;
       if (!($240 & 1)) $248 = ($240 & 255) >>> 1; else $248 = HEAP32[$$lcssa491 + 4 >> 2] | 0;
       __THREW__ = 0;
       invoke_viiii(13, $13 | 0, 36328, 30, $248 + 30 | 0);
       $249 = __THREW__;
       __THREW__ = 0;
       L154 : do if ($249 & 1) label = 95; else {
        if (!(HEAP8[$$lcssa491 >> 0] & 1)) $257 = $$lcssa491 + 1 | 0; else $257 = HEAP32[$$lcssa491 + 8 >> 2] | 0;
        __THREW__ = 0;
        invoke_iiii(31, $13 | 0, $257 | 0, $248 | 0) | 0;
        $258 = __THREW__;
        __THREW__ = 0;
        if ($258 & 1) label = 95; else {
         __THREW__ = 0;
         invoke_vii(40, $239 | 0, $ast_ + 4 | 0);
         $261 = __THREW__;
         __THREW__ = 0;
         do if ($261 & 1) $$014 = 1; else {
          $263 = $239 + 12 | 0;
          $264 = $ast_ + 16 | 0;
          HEAP32[$263 + 0 >> 2] = HEAP32[$264 + 0 >> 2];
          HEAP32[$263 + 4 >> 2] = HEAP32[$264 + 4 >> 2];
          HEAP32[$263 + 8 >> 2] = HEAP32[$264 + 8 >> 2];
          HEAP32[$263 + 12 >> 2] = HEAP32[$264 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $239 + 28 | 0, $13 | 0);
          $266 = __THREW__;
          __THREW__ = 0;
          if ($266 & 1) {
           $268 = ___cxa_find_matching_catch() | 0;
           $269 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
           $$0236 = $268;
           $$04235 = $269;
           break L154;
          }
          __THREW__ = 0;
          invoke_viii(4, $239 | 0, 48, 176);
          $270 = __THREW__;
          __THREW__ = 0;
          if ($270 & 1) {
           $$014 = 0;
           break;
          }
         } while (0);
         $278 = ___cxa_find_matching_catch() | 0;
         $279 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
         if ($$014) {
          $$0236 = $278;
          $$04235 = $279;
         } else {
          $$1 = $278;
          $$15 = $279;
          break L85;
         }
        }
       } while (0);
       if ((label | 0) == 95) {
        $276 = ___cxa_find_matching_catch() | 0;
        $277 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        $$0236 = $276;
        $$04235 = $277;
       }
       ___cxa_free_exception($239 | 0);
       $$1 = $$0236;
       $$15 = $$04235;
       break;
      } else if ((label | 0) == 92) {
       $272 = ___cxa_find_matching_catch() | 0;
       $lpad$phi305$index = $272;
       $lpad$phi305$index19 = tempRet0;
       label = 94;
       break;
      } else if ((label | 0) == 132) {
       label = 133;
       break;
      }
     } while (0);
     do if ((label | 0) == 133) {
      __THREW__ = 0;
      invoke_viiii(15, $fv | 0, HEAP32[$173 + 60 >> 2] | 0, $in_object | 0, $new_vars | 0);
      $337 = __THREW__;
      __THREW__ = 0;
      if ($337 & 1) {
       $274 = ___cxa_find_matching_catch() | 0;
       $lpad$phi305$index = $274;
       $lpad$phi305$index19 = tempRet0;
       label = 94;
       break;
      }
      $339 = HEAP32[$218 >> 2] | 0;
      $340 = HEAP32[$220 >> 2] | 0;
      if (($339 | 0) != ($340 | 0)) {
       $342 = $fv + 4 | 0;
       $343 = $fv + 8 | 0;
       $345 = $339;
       do {
        $344 = HEAP32[$345 >> 2] | 0;
        $346 = HEAP32[$342 >> 2] | 0;
        do if ($346) {
         $$0$ph6$i$i$i$i = $342;
         $$01$ph5$i$i$i$i = $346;
         L184 : while (1) {
          $$013$i$i$i$i = $$01$ph5$i$i$i$i;
          while (1) {
           if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $344 >>> 0) {
            $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
            break;
           }
           $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
           if (!$$013$i$i$i$i) {
            $$0$ph6$i$i$i$i$lcssa480 = $$0$ph6$i$i$i$i;
            label = 142;
            break L184;
           }
          }
          $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i$i) {
           $$013$i$i$i$i$lcssa$lcssa = $$013$i$i$i$i$lcssa;
           label = 143;
           break;
          } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
         }
         if ((label | 0) == 142) {
          label = 0;
          $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i$lcssa480;
         } else if ((label | 0) == 143) {
          label = 0;
          $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa$lcssa;
         }
         if (($$0$ph$lcssa$i$i$i$i | 0) == ($342 | 0)) break;
         if ($344 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0) break;
         $361 = HEAP32[$$0$ph$lcssa$i$i$i$i + 4 >> 2] | 0;
         if (!$361) {
          $$0$i$i$i$i$i62 = $$0$ph$lcssa$i$i$i$i;
          while (1) {
           $366 = HEAP32[$$0$i$i$i$i$i62 + 8 >> 2] | 0;
           if ((HEAP32[$366 >> 2] | 0) == ($$0$i$i$i$i$i62 | 0)) {
            $$cast$i$i$i$i$i$lcssa = $366;
            break;
           } else $$0$i$i$i$i$i62 = $366;
          }
          $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
         } else {
          $$0$i$i$i$i$i$i = $361;
          while (1) {
           $363 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$363) {
            $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $363;
          }
          $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
         }
         if ((HEAP32[$fv >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i | 0)) HEAP32[$fv >> 2] = $$01$i$i$i$i$i;
         HEAP32[$343 >> 2] = (HEAP32[$343 >> 2] | 0) + -1;
         __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($346, $$0$ph$lcssa$i$i$i$i);
         __ZdlPv($$0$ph$lcssa$i$i$i$i);
        } while (0);
        $345 = $345 + 4 | 0;
       } while (($345 | 0) != ($340 | 0));
      }
      __THREW__ = 0;
      invoke_vii(59, $agg$result | 0, $fv | 0);
      $379 = __THREW__;
      __THREW__ = 0;
      if ($379 & 1) {
       $375 = ___cxa_find_matching_catch() | 0;
       $376 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       $$1 = $375;
       $$15 = $376;
       break;
      } else {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$217 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
       break L3;
      }
     } while (0);
     if ((label | 0) == 94) {
      $$1 = $lpad$phi305$index;
      $$15 = $lpad$phi305$index19;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$217 >> 2] | 0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
     $$9 = $$1;
     $$913 = $$15;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    if (!(___dynamic_cast($ast_, 33800, 34320, 0) | 0)) if (!(___dynamic_cast($ast_, 33800, 34360, 0) | 0)) {
     $391 = ___dynamic_cast($ast_, 33800, 34400, 0) | 0;
     if ($391) {
      __THREW__ = 0;
      invoke_viiii(15, $14 | 0, HEAP32[$391 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
      $395 = __THREW__;
      __THREW__ = 0;
      if ($395 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(59, $agg$result | 0, $14 | 0);
      $397 = __THREW__;
      __THREW__ = 0;
      if ($397 & 1) {
       $409 = ___cxa_find_matching_catch() | 0;
       $410 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
       $$9 = $409;
       $$913 = $410;
       $971 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
       ___resumeException($$9 | 0);
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
      __THREW__ = 0;
      invoke_viiii(15, $15 | 0, HEAP32[$391 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
      $403 = __THREW__;
      __THREW__ = 0;
      if ($403 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(59, $agg$result | 0, $15 | 0);
      $405 = __THREW__;
      __THREW__ = 0;
      if (!($405 & 1)) {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($15, HEAP32[$15 + 4 >> 2] | 0);
       break;
      }
      $413 = ___cxa_find_matching_catch() | 0;
      $414 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($15, HEAP32[$15 + 4 >> 2] | 0);
      $$9 = $413;
      $$913 = $414;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     $417 = ___dynamic_cast($ast_, 33800, 33816, 0) | 0;
     if ($417) {
      $419 = $ast_vars + 4 | 0;
      HEAP32[$419 >> 2] = 0;
      $420 = $ast_vars + 8 | 0;
      HEAP32[$420 >> 2] = 0;
      $421 = $ast_vars + 4 | 0;
      HEAP32[$ast_vars >> 2] = $421;
      $422 = $417 + 48 | 0;
      $423 = HEAP32[$422 >> 2] | 0;
      $424 = $417 + 52 | 0;
      do if (($423 | 0) == ($424 | 0)) label = 203; else {
       $427 = $423;
       $428 = 0;
       while (1) {
        $426 = $427 + 16 | 0;
        do if (!$428) {
         HEAP32[$__parent$i$i74 >> 2] = $421;
         $$0$i$i$i80 = $421;
         $449 = $421;
        } else {
         $430 = HEAP32[$426 >> 2] | 0;
         $__nd$0$i$i$i76 = $428;
         while (1) {
          $432 = HEAP32[$__nd$0$i$i$i76 + 16 >> 2] | 0;
          if ($430 >>> 0 < $432 >>> 0) {
           $434 = HEAP32[$__nd$0$i$i$i76 >> 2] | 0;
           if (!$434) {
            $$lcssa478 = $__nd$0$i$i$i76;
            $__nd$0$i$i$i76$lcssa476 = $__nd$0$i$i$i76;
            label = 179;
            break;
           } else $__nd$0$be$in$i$i$i77 = $434;
          } else {
           if ($432 >>> 0 >= $430 >>> 0) {
            $__nd$0$i$i$i76$lcssa = $__nd$0$i$i$i76;
            label = 184;
            break;
           }
           $437 = $__nd$0$i$i$i76 + 4 | 0;
           $438 = HEAP32[$437 >> 2] | 0;
           if (!$438) {
            $$lcssa477 = $437;
            $__nd$0$i$i$i76$lcssa475 = $__nd$0$i$i$i76;
            label = 183;
            break;
           } else $__nd$0$be$in$i$i$i77 = $438;
          }
          $__nd$0$i$i$i76 = $__nd$0$be$in$i$i$i77;
         }
         if ((label | 0) == 179) {
          label = 0;
          HEAP32[$__parent$i$i74 >> 2] = $__nd$0$i$i$i76$lcssa476;
          $$0$i$i$i80 = $$lcssa478;
          $449 = $__nd$0$i$i$i76$lcssa476;
          break;
         } else if ((label | 0) == 183) {
          label = 0;
          HEAP32[$__parent$i$i74 >> 2] = $__nd$0$i$i$i76$lcssa475;
          $$0$i$i$i80 = $$lcssa477;
          $449 = $__nd$0$i$i$i76$lcssa475;
          break;
         } else if ((label | 0) == 184) {
          label = 0;
          HEAP32[$__parent$i$i74 >> 2] = $__nd$0$i$i$i76$lcssa;
          $$0$i$i$i80 = $__parent$i$i74;
          $449 = $__nd$0$i$i$i76$lcssa;
          break;
         }
        } while (0);
        if (!(HEAP32[$$0$i$i$i80 >> 2] | 0)) {
         __THREW__ = 0;
         $442 = invoke_ii(67, 20) | 0;
         $443 = __THREW__;
         __THREW__ = 0;
         if ($443 & 1) {
          label = 200;
          break;
         }
         HEAP32[$442 + 16 >> 2] = HEAP32[$426 >> 2];
         HEAP32[$442 >> 2] = 0;
         HEAP32[$442 + 4 >> 2] = 0;
         HEAP32[$442 + 8 >> 2] = $449;
         HEAP32[$$0$i$i$i80 >> 2] = $442;
         $451 = HEAP32[HEAP32[$ast_vars >> 2] >> 2] | 0;
         if (!$451) $454 = $442; else {
          HEAP32[$ast_vars >> 2] = $451;
          $454 = HEAP32[$$0$i$i$i80 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$419 >> 2] | 0, $454);
         HEAP32[$420 >> 2] = (HEAP32[$420 >> 2] | 0) + 1;
        }
        $458 = HEAP32[$427 + 4 >> 2] | 0;
        if (!$458) {
         $$0$i$i$i88 = $427;
         while (1) {
          $463 = HEAP32[$$0$i$i$i88 + 8 >> 2] | 0;
          if ((HEAP32[$463 >> 2] | 0) == ($$0$i$i$i88 | 0)) {
           $$cast$i$i$i89$lcssa = $463;
           break;
          } else $$0$i$i$i88 = $463;
         }
         $$01$i$i$i = $$cast$i$i$i89$lcssa;
        } else {
         $$0$i$i$i$i87 = $458;
         while (1) {
          $460 = HEAP32[$$0$i$i$i$i87 >> 2] | 0;
          if (!$460) {
           $$0$i$i$i$i87$lcssa = $$0$i$i$i$i87;
           break;
          } else $$0$i$i$i$i87 = $460;
         }
         $$01$i$i$i = $$0$i$i$i$i87$lcssa;
        }
        if (($$01$i$i$i | 0) == ($424 | 0)) {
         label = 202;
         break;
        }
        $427 = $$01$i$i$i;
        $428 = HEAP32[$421 >> 2] | 0;
       }
       if ((label | 0) == 200) {
        $467 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body106$index24Z2D = tempRet0;
        $eh$lpad$body106$indexZ2D = $467;
        label = 201;
        break;
       } else if ((label | 0) == 202) {
        label = 203;
        break;
       }
      } while (0);
      L277 : do if ((label | 0) == 203) {
       $469 = $new_vars21 + 4 | 0;
       HEAP32[$469 >> 2] = 0;
       $470 = $new_vars21 + 8 | 0;
       HEAP32[$470 >> 2] = 0;
       $471 = $new_vars21 + 4 | 0;
       HEAP32[$new_vars21 >> 2] = $471;
       $472 = HEAP32[$vars >> 2] | 0;
       $473 = $vars + 4 | 0;
       do if (($472 | 0) != ($473 | 0)) {
        $476 = $472;
        $496 = $472;
        while (1) {
         $475 = $476 + 16 | 0;
         HEAP32[$1 >> 2] = $471;
         HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
         $477 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars21, $$byval_copy34, $__parent$i$i$i91, $475) | 0;
         if (!(HEAP32[$477 >> 2] | 0)) {
          __THREW__ = 0;
          $480 = invoke_ii(67, 20) | 0;
          $481 = __THREW__;
          __THREW__ = 0;
          if ($481 & 1) {
           label = 218;
           break;
          }
          HEAP32[$480 + 16 >> 2] = HEAP32[$475 >> 2];
          $485 = HEAP32[$__parent$i$i$i91 >> 2] | 0;
          HEAP32[$480 >> 2] = 0;
          HEAP32[$480 + 4 >> 2] = 0;
          HEAP32[$480 + 8 >> 2] = $485;
          HEAP32[$477 >> 2] = $480;
          $489 = HEAP32[HEAP32[$new_vars21 >> 2] >> 2] | 0;
          if (!$489) $492 = $480; else {
           HEAP32[$new_vars21 >> 2] = $489;
           $492 = HEAP32[$477 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$469 >> 2] | 0, $492);
          HEAP32[$470 >> 2] = (HEAP32[$470 >> 2] | 0) + 1;
         }
         $497 = HEAP32[$496 + 4 >> 2] | 0;
         if (!$497) {
          $$0$i$i$i$i99 = $496;
          while (1) {
           $502 = HEAP32[$$0$i$i$i$i99 + 8 >> 2] | 0;
           if ((HEAP32[$502 >> 2] | 0) == ($$0$i$i$i$i99 | 0)) {
            $$cast$i$i$i$i100$lcssa = $502;
            break;
           } else $$0$i$i$i$i99 = $502;
          }
          $$01$i$i$i$i102 = $$cast$i$i$i$i100$lcssa;
         } else {
          $$0$i$i$i$i$i97 = $497;
          while (1) {
           $499 = HEAP32[$$0$i$i$i$i$i97 >> 2] | 0;
           if (!$499) {
            $$0$i$i$i$i$i97$lcssa = $$0$i$i$i$i$i97;
            break;
           } else $$0$i$i$i$i$i97 = $499;
          }
          $$01$i$i$i$i102 = $$0$i$i$i$i$i97$lcssa;
         }
         if (($$01$i$i$i$i102 | 0) == ($473 | 0)) {
          label = 219;
          break;
         } else {
          $476 = $$01$i$i$i$i102;
          $496 = $$01$i$i$i$i102;
         }
        }
        if ((label | 0) == 218) {
         $506 = ___cxa_find_matching_catch() | 0;
         $507 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$471 >> 2] | 0);
         $eh$lpad$body106$index24Z2D = $507;
         $eh$lpad$body106$indexZ2D = $506;
         label = 201;
         break L277;
        } else if ((label | 0) == 219) break;
       } while (0);
       __THREW__ = 0;
       invoke_vii(59, $new_vars21 | 0, $ast_vars | 0);
       $509 = __THREW__;
       __THREW__ = 0;
       if ($509 & 1) {
        $535 = ___cxa_find_matching_catch() | 0;
        $$3 = $535;
        $$37 = tempRet0;
       } else {
        HEAP32[$fvs + 4 >> 2] = 0;
        $512 = $fvs + 8 | 0;
        HEAP32[$512 >> 2] = 0;
        $513 = $fvs + 4 | 0;
        HEAP32[$fvs >> 2] = $513;
        $514 = HEAP32[$422 >> 2] | 0;
        do if (($514 | 0) == ($424 | 0)) label = 239; else {
         $516 = $16 + 4 | 0;
         $518 = $514;
         while (1) {
          __THREW__ = 0;
          invoke_viiii(15, $16 | 0, HEAP32[$518 + 20 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
          $520 = __THREW__;
          __THREW__ = 0;
          if ($520 & 1) {
           label = 234;
           break;
          }
          __THREW__ = 0;
          invoke_vii(59, $fvs | 0, $16 | 0);
          $522 = __THREW__;
          __THREW__ = 0;
          if ($522 & 1) {
           label = 237;
           break;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$516 >> 2] | 0);
          $526 = HEAP32[$518 + 4 >> 2] | 0;
          if (!$526) {
           $$0$i$i$i110 = $518;
           while (1) {
            $531 = HEAP32[$$0$i$i$i110 + 8 >> 2] | 0;
            if ((HEAP32[$531 >> 2] | 0) == ($$0$i$i$i110 | 0)) {
             $$cast$i$i$i111$lcssa = $531;
             break;
            } else $$0$i$i$i110 = $531;
           }
           $$01$i$i$i113 = $$cast$i$i$i111$lcssa;
          } else {
           $$0$i$i$i$i108 = $526;
           while (1) {
            $528 = HEAP32[$$0$i$i$i$i108 >> 2] | 0;
            if (!$528) {
             $$0$i$i$i$i108$lcssa = $$0$i$i$i$i108;
             break;
            } else $$0$i$i$i$i108 = $528;
           }
           $$01$i$i$i113 = $$0$i$i$i$i108$lcssa;
          }
          if (($$01$i$i$i113 | 0) == ($424 | 0)) {
           label = 238;
           break;
          } else $518 = $$01$i$i$i113;
         }
         if ((label | 0) == 234) {
          $537 = ___cxa_find_matching_catch() | 0;
          $lpad$phi295$index = $537;
          $lpad$phi295$index29 = tempRet0;
          label = 236;
          break;
         } else if ((label | 0) == 237) {
          $541 = ___cxa_find_matching_catch() | 0;
          $542 = tempRet0;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$516 >> 2] | 0);
          $$2 = $541;
          $$26 = $542;
          break;
         } else if ((label | 0) == 238) {
          label = 239;
          break;
         }
        } while (0);
        L327 : do if ((label | 0) == 239) {
         __THREW__ = 0;
         invoke_viiii(15, $17 | 0, HEAP32[$417 + 60 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
         $546 = __THREW__;
         __THREW__ = 0;
         do if (!($546 & 1)) {
          __THREW__ = 0;
          invoke_vii(59, $fvs | 0, $17 | 0);
          $548 = __THREW__;
          __THREW__ = 0;
          if ($548 & 1) {
           $594 = ___cxa_find_matching_catch() | 0;
           $595 = tempRet0;
           __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
           $$2 = $594;
           $$26 = $595;
           break L327;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
          $552 = HEAP32[$422 >> 2] | 0;
          if (($552 | 0) != ($424 | 0)) {
           $557 = $552;
           while (1) {
            $554 = HEAP32[$513 >> 2] | 0;
            do if ($554) {
             $558 = HEAP32[$557 + 16 >> 2] | 0;
             $$0$ph6$i$i$i$i116 = $513;
             $$01$ph5$i$i$i$i117 = $554;
             L340 : while (1) {
              $$013$i$i$i$i119 = $$01$ph5$i$i$i$i117;
              while (1) {
               if ((HEAP32[$$013$i$i$i$i119 + 16 >> 2] | 0) >>> 0 >= $558 >>> 0) {
                $$013$i$i$i$i119$lcssa = $$013$i$i$i$i119;
                break;
               }
               $$013$i$i$i$i119 = HEAP32[$$013$i$i$i$i119 + 4 >> 2] | 0;
               if (!$$013$i$i$i$i119) {
                $$0$ph6$i$i$i$i116$lcssa474 = $$0$ph6$i$i$i$i116;
                label = 249;
                break L340;
               }
              }
              $$01$ph5$i$i$i$i117 = HEAP32[$$013$i$i$i$i119$lcssa >> 2] | 0;
              if (!$$01$ph5$i$i$i$i117) {
               $$013$i$i$i$i119$lcssa$lcssa = $$013$i$i$i$i119$lcssa;
               label = 250;
               break;
              } else $$0$ph6$i$i$i$i116 = $$013$i$i$i$i119$lcssa;
             }
             if ((label | 0) == 249) {
              label = 0;
              $$0$ph$lcssa$i$i$i$i121 = $$0$ph6$i$i$i$i116$lcssa474;
             } else if ((label | 0) == 250) {
              label = 0;
              $$0$ph$lcssa$i$i$i$i121 = $$013$i$i$i$i119$lcssa$lcssa;
             }
             if (($$0$ph$lcssa$i$i$i$i121 | 0) == ($513 | 0)) break;
             if ($558 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i121 + 16 >> 2] | 0) >>> 0) break;
             $572 = HEAP32[$$0$ph$lcssa$i$i$i$i121 + 4 >> 2] | 0;
             if (!$572) {
              $$0$i$i$i$i$i127 = $$0$ph$lcssa$i$i$i$i121;
              while (1) {
               $577 = HEAP32[$$0$i$i$i$i$i127 + 8 >> 2] | 0;
               if ((HEAP32[$577 >> 2] | 0) == ($$0$i$i$i$i$i127 | 0)) {
                $$cast$i$i$i$i$i128$lcssa = $577;
                break;
               } else $$0$i$i$i$i$i127 = $577;
              }
              $$01$i$i$i$i$i130 = $$cast$i$i$i$i$i128$lcssa;
             } else {
              $$0$i$i$i$i$i$i125 = $572;
              while (1) {
               $574 = HEAP32[$$0$i$i$i$i$i$i125 >> 2] | 0;
               if (!$574) {
                $$0$i$i$i$i$i$i125$lcssa = $$0$i$i$i$i$i$i125;
                break;
               } else $$0$i$i$i$i$i$i125 = $574;
              }
              $$01$i$i$i$i$i130 = $$0$i$i$i$i$i$i125$lcssa;
             }
             if ((HEAP32[$fvs >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i121 | 0)) HEAP32[$fvs >> 2] = $$01$i$i$i$i$i130;
             HEAP32[$512 >> 2] = (HEAP32[$512 >> 2] | 0) + -1;
             __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($554, $$0$ph$lcssa$i$i$i$i121);
             __ZdlPv($$0$ph$lcssa$i$i$i$i121);
            } while (0);
            $585 = HEAP32[$557 + 4 >> 2] | 0;
            if (!$585) {
             $$0$i$i$i137 = $557;
             while (1) {
              $590 = HEAP32[$$0$i$i$i137 + 8 >> 2] | 0;
              if ((HEAP32[$590 >> 2] | 0) == ($$0$i$i$i137 | 0)) {
               $$cast$i$i$i138$lcssa = $590;
               break;
              } else $$0$i$i$i137 = $590;
             }
             $$01$i$i$i140 = $$cast$i$i$i138$lcssa;
            } else {
             $$0$i$i$i$i135 = $585;
             while (1) {
              $587 = HEAP32[$$0$i$i$i$i135 >> 2] | 0;
              if (!$587) {
               $$0$i$i$i$i135$lcssa = $$0$i$i$i$i135;
               break;
              } else $$0$i$i$i$i135 = $587;
             }
             $$01$i$i$i140 = $$0$i$i$i$i135$lcssa;
            }
            if (($$01$i$i$i140 | 0) == ($424 | 0)) break; else $557 = $$01$i$i$i140;
           }
          }
          __THREW__ = 0;
          invoke_vii(59, $agg$result | 0, $fvs | 0);
          $598 = __THREW__;
          __THREW__ = 0;
          if ($598 & 1) break;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$513 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$471 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$421 >> 2] | 0);
          break L3;
         } while (0);
         $539 = ___cxa_find_matching_catch() | 0;
         $lpad$phi295$index = $539;
         $lpad$phi295$index29 = tempRet0;
         label = 236;
        } while (0);
        if ((label | 0) == 236) {
         $$2 = $lpad$phi295$index;
         $$26 = $lpad$phi295$index29;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$513 >> 2] | 0);
        $$3 = $$2;
        $$37 = $$26;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$471 >> 2] | 0);
       $$4 = $$3;
       $$48 = $$37;
      } while (0);
      if ((label | 0) == 201) {
       $$4 = $eh$lpad$body106$indexZ2D;
       $$48 = $eh$lpad$body106$index24Z2D;
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$421 >> 2] | 0);
      $$9 = $$4;
      $$913 = $$48;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     if (!(___dynamic_cast($ast_, 33800, 34464, 0) | 0)) if (!(___dynamic_cast($ast_, 33800, 34496, 0) | 0)) if (!(___dynamic_cast($ast_, 33800, 34008, 0) | 0)) if (!(___dynamic_cast($ast_, 33800, 34528, 0) | 0)) {
      $614 = ___dynamic_cast($ast_, 33800, 34552, 0) | 0;
      if ($614) {
       $616 = $614 + 48 | 0;
       $618 = HEAP32[$614 + 52 >> 2] | 0;
       if (($618 | 0) == ($616 | 0)) break;
       $620 = $18 + 4 | 0;
       $621 = $19 + 4 | 0;
       $623 = $618;
       while (1) {
        $626 = HEAP32[$623 + 16 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(15, $18 | 0, HEAP32[$623 + 8 >> 2] | 0, $in_object | 0, $vars | 0);
        $627 = __THREW__;
        __THREW__ = 0;
        if ($627 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $18 | 0);
        $629 = __THREW__;
        __THREW__ = 0;
        if ($629 & 1) {
         label = 290;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$620 >> 2] | 0);
        __THREW__ = 0;
        invoke_viiii(15, $19 | 0, $626 | 0, 1, $vars | 0);
        $632 = __THREW__;
        __THREW__ = 0;
        if ($632 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $19 | 0);
        $634 = __THREW__;
        __THREW__ = 0;
        if ($634 & 1) {
         label = 291;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$621 >> 2] | 0);
        $623 = HEAP32[$623 + 4 >> 2] | 0;
        if (($623 | 0) == ($616 | 0)) {
         label = 424;
         break;
        }
       }
       if ((label | 0) == 11) {
        $58 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$index8Z2D = tempRet0;
        $eh$lpad$body$indexZ2D = $58;
        break L1;
       } else if ((label | 0) == 290) {
        $640 = ___cxa_find_matching_catch() | 0;
        $641 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$620 >> 2] | 0);
        $$9 = $640;
        $$913 = $641;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       } else if ((label | 0) == 291) {
        $643 = ___cxa_find_matching_catch() | 0;
        $644 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$621 >> 2] | 0);
        $$9 = $643;
        $$913 = $644;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       } else if ((label | 0) == 424) break;
      }
      $646 = ___dynamic_cast($ast_, 33800, 34648, 0) | 0;
      if (!$646) {
       if (___dynamic_cast($ast_, 33800, 34704, 0) | 0) {
        if ($in_object) break;
        $789 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_viii(3, $23 | 0, 36360, 36);
        $790 = __THREW__;
        __THREW__ = 0;
        L508 : do if ($790 & 1) {
         $804 = ___cxa_find_matching_catch() | 0;
         $$610261 = tempRet0;
         $$6262 = $804;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $789 | 0, $ast_ + 4 | 0);
         $793 = __THREW__;
         __THREW__ = 0;
         do if ($793 & 1) $$018 = 1; else {
          $795 = $789 + 12 | 0;
          $796 = $ast_ + 16 | 0;
          HEAP32[$795 + 0 >> 2] = HEAP32[$796 + 0 >> 2];
          HEAP32[$795 + 4 >> 2] = HEAP32[$796 + 4 >> 2];
          HEAP32[$795 + 8 >> 2] = HEAP32[$796 + 8 >> 2];
          HEAP32[$795 + 12 >> 2] = HEAP32[$796 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $789 + 28 | 0, $23 | 0);
          $798 = __THREW__;
          __THREW__ = 0;
          if ($798 & 1) {
           $800 = ___cxa_find_matching_catch() | 0;
           $801 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($789);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
           $$610261 = $801;
           $$6262 = $800;
           break L508;
          }
          __THREW__ = 0;
          invoke_viii(4, $789 | 0, 48, 176);
          $802 = __THREW__;
          __THREW__ = 0;
          if ($802 & 1) {
           $$018 = 0;
           break;
          }
         } while (0);
         $806 = ___cxa_find_matching_catch() | 0;
         $807 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
         if ($$018) {
          $$610261 = $807;
          $$6262 = $806;
          break;
         } else {
          $$9 = $806;
          $$913 = $807;
         }
         $971 = HEAP32[$29 >> 2] | 0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
         ___resumeException($$9 | 0);
        } while (0);
        ___cxa_free_exception($789 | 0);
        $$9 = $$6262;
        $$913 = $$610261;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       }
       if (___dynamic_cast($ast_, 33800, 34736, 0) | 0) {
        if ($in_object) break;
        $810 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_viii(3, $24 | 0, 36400, 37);
        $811 = __THREW__;
        __THREW__ = 0;
        L525 : do if ($811 & 1) {
         $825 = ___cxa_find_matching_catch() | 0;
         $$711267 = tempRet0;
         $$7268 = $825;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $810 | 0, $ast_ + 4 | 0);
         $814 = __THREW__;
         __THREW__ = 0;
         do if ($814 & 1) $$016 = 1; else {
          $816 = $810 + 12 | 0;
          $817 = $ast_ + 16 | 0;
          HEAP32[$816 + 0 >> 2] = HEAP32[$817 + 0 >> 2];
          HEAP32[$816 + 4 >> 2] = HEAP32[$817 + 4 >> 2];
          HEAP32[$816 + 8 >> 2] = HEAP32[$817 + 8 >> 2];
          HEAP32[$816 + 12 >> 2] = HEAP32[$817 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $810 + 28 | 0, $24 | 0);
          $819 = __THREW__;
          __THREW__ = 0;
          if ($819 & 1) {
           $821 = ___cxa_find_matching_catch() | 0;
           $822 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($810);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
           $$711267 = $822;
           $$7268 = $821;
           break L525;
          }
          __THREW__ = 0;
          invoke_viii(4, $810 | 0, 48, 176);
          $823 = __THREW__;
          __THREW__ = 0;
          if ($823 & 1) {
           $$016 = 0;
           break;
          }
         } while (0);
         $827 = ___cxa_find_matching_catch() | 0;
         $828 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
         if ($$016) {
          $$711267 = $828;
          $$7268 = $827;
          break;
         } else {
          $$9 = $827;
          $$913 = $828;
         }
         $971 = HEAP32[$29 >> 2] | 0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
         ___resumeException($$9 | 0);
        } while (0);
        ___cxa_free_exception($810 | 0);
        $$9 = $$7268;
        $$913 = $$711267;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       }
       $829 = ___dynamic_cast($ast_, 33800, 34768, 0) | 0;
       if ($829) {
        __THREW__ = 0;
        invoke_viiii(15, $25 | 0, HEAP32[$829 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
        $833 = __THREW__;
        __THREW__ = 0;
        if ($833 & 1) {
         label = 14;
         break L1;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $25 | 0);
        $835 = __THREW__;
        __THREW__ = 0;
        if (!($835 & 1)) {
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($25, HEAP32[$25 + 4 >> 2] | 0);
         break;
        }
        $839 = ___cxa_find_matching_catch() | 0;
        $840 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($25, HEAP32[$25 + 4 >> 2] | 0);
        $$9 = $839;
        $$913 = $840;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       }
       $843 = ___dynamic_cast($ast_, 33800, 34792, 0) | 0;
       if (!$843) {
        label = 414;
        break L1;
       }
       $845 = $843 + 48 | 0;
       $846 = $vars + 4 | 0;
       $847 = HEAP32[$846 >> 2] | 0;
       do if ($847) {
        $849 = HEAP32[$845 >> 2] | 0;
        $$0$ph6$i$i$i148 = $846;
        $$01$ph5$i$i$i149 = $847;
        L550 : while (1) {
         $$013$i$i$i151 = $$01$ph5$i$i$i149;
         while (1) {
          if ((HEAP32[$$013$i$i$i151 + 16 >> 2] | 0) >>> 0 >= $849 >>> 0) {
           $$013$i$i$i151$lcssa = $$013$i$i$i151;
           break;
          }
          $$013$i$i$i151 = HEAP32[$$013$i$i$i151 + 4 >> 2] | 0;
          if (!$$013$i$i$i151) {
           $$0$ph6$i$i$i148$lcssa467 = $$0$ph6$i$i$i148;
           label = 390;
           break L550;
          }
         }
         $$01$ph5$i$i$i149 = HEAP32[$$013$i$i$i151$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i149) {
          $$013$i$i$i151$lcssa$lcssa = $$013$i$i$i151$lcssa;
          label = 391;
          break;
         } else $$0$ph6$i$i$i148 = $$013$i$i$i151$lcssa;
        }
        if ((label | 0) == 390) $$0$ph$lcssa$i$i$i153 = $$0$ph6$i$i$i148$lcssa467; else if ((label | 0) == 391) $$0$ph$lcssa$i$i$i153 = $$013$i$i$i151$lcssa$lcssa;
        if (($$0$ph$lcssa$i$i$i153 | 0) == ($846 | 0)) break;
        if ($849 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i153 + 16 >> 2] | 0) >>> 0) break;
        if (HEAP32[$29 >> 2] | 0) break L3;
        __THREW__ = 0;
        $902 = invoke_ii(67, 20) | 0;
        $903 = __THREW__;
        __THREW__ = 0;
        if ($903 & 1) {
         label = 14;
         break L1;
        }
        HEAP32[$902 + 16 >> 2] = HEAP32[$845 >> 2];
        HEAP32[$902 >> 2] = 0;
        HEAP32[$902 + 4 >> 2] = 0;
        HEAP32[$902 + 8 >> 2] = $29;
        HEAP32[$29 >> 2] = $902;
        $910 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
        if (!$910) $913 = $902; else {
         HEAP32[$agg$result >> 2] = $910;
         $913 = HEAP32[$29 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$27 >> 2] | 0, $913);
        HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
        break L3;
       } while (0);
       $862 = ___cxa_allocate_exception(40) | 0;
       $863 = HEAP32[$845 >> 2] | 0;
       HEAP32[$26 + 0 >> 2] = 0;
       HEAP32[$26 + 4 >> 2] = 0;
       HEAP32[$26 + 8 >> 2] = 0;
       $864 = HEAP8[$863 >> 0] | 0;
       if (!($864 & 1)) $872 = ($864 & 255) >>> 1; else $872 = HEAP32[$863 + 4 >> 2] | 0;
       __THREW__ = 0;
       invoke_viiii(13, $26 | 0, 36440, 18, $872 + 18 | 0);
       $873 = __THREW__;
       __THREW__ = 0;
       L572 : do if ($873 & 1) label = 406; else {
        if (!(HEAP8[$863 >> 0] & 1)) $881 = $863 + 1 | 0; else $881 = HEAP32[$863 + 8 >> 2] | 0;
        __THREW__ = 0;
        invoke_iiii(31, $26 | 0, $881 | 0, $872 | 0) | 0;
        $882 = __THREW__;
        __THREW__ = 0;
        if ($882 & 1) {
         label = 406;
         break;
        }
        __THREW__ = 0;
        invoke_vii(40, $862 | 0, $843 + 4 | 0);
        $885 = __THREW__;
        __THREW__ = 0;
        do if ($885 & 1) $$02 = 1; else {
         $887 = $862 + 12 | 0;
         $888 = $843 + 16 | 0;
         HEAP32[$887 + 0 >> 2] = HEAP32[$888 + 0 >> 2];
         HEAP32[$887 + 4 >> 2] = HEAP32[$888 + 4 >> 2];
         HEAP32[$887 + 8 >> 2] = HEAP32[$888 + 8 >> 2];
         HEAP32[$887 + 12 >> 2] = HEAP32[$888 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $862 + 28 | 0, $26 | 0);
         $890 = __THREW__;
         __THREW__ = 0;
         if ($890 & 1) {
          $892 = ___cxa_find_matching_catch() | 0;
          $893 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($862);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
          $$812275 = $893;
          $$8276 = $892;
          break L572;
         }
         __THREW__ = 0;
         invoke_viii(4, $862 | 0, 48, 176);
         $894 = __THREW__;
         __THREW__ = 0;
         if ($894 & 1) {
          $$02 = 0;
          break;
         }
        } while (0);
        $898 = ___cxa_find_matching_catch() | 0;
        $899 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        if ($$02) {
         $$812275 = $899;
         $$8276 = $898;
         break;
        } else {
         $$9 = $898;
         $$913 = $899;
        }
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       } while (0);
       if ((label | 0) == 406) {
        $896 = ___cxa_find_matching_catch() | 0;
        $897 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        $$812275 = $897;
        $$8276 = $896;
       }
       ___cxa_free_exception($862 | 0);
       $$9 = $$8276;
       $$913 = $$812275;
       $971 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
       ___resumeException($$9 | 0);
      } else {
       $648 = $new_vars35 + 4 | 0;
       HEAP32[$648 >> 2] = 0;
       $649 = $new_vars35 + 8 | 0;
       HEAP32[$649 >> 2] = 0;
       $650 = $new_vars35 + 4 | 0;
       HEAP32[$new_vars35 >> 2] = $650;
       $651 = HEAP32[$vars >> 2] | 0;
       $652 = $vars + 4 | 0;
       do if (($651 | 0) == ($652 | 0)) {
        $$pre$phi403Z2D = $650;
        $972 = $$byval_copy34;
        $973 = $646 + 56 | 0;
        label = 320;
       } else {
        $656 = $651;
        $676 = $651;
        while (1) {
         $655 = $656 + 16 | 0;
         HEAP32[$0 >> 2] = $650;
         HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$0 + 0 >> 2];
         $657 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars35, $$byval_copy34, $__parent$i$i$i156, $655) | 0;
         if (!(HEAP32[$657 >> 2] | 0)) {
          __THREW__ = 0;
          $660 = invoke_ii(67, 20) | 0;
          $661 = __THREW__;
          __THREW__ = 0;
          if ($661 & 1) {
           label = 309;
           break;
          }
          HEAP32[$660 + 16 >> 2] = HEAP32[$655 >> 2];
          $665 = HEAP32[$__parent$i$i$i156 >> 2] | 0;
          HEAP32[$660 >> 2] = 0;
          HEAP32[$660 + 4 >> 2] = 0;
          HEAP32[$660 + 8 >> 2] = $665;
          HEAP32[$657 >> 2] = $660;
          $669 = HEAP32[HEAP32[$new_vars35 >> 2] >> 2] | 0;
          if (!$669) $672 = $660; else {
           HEAP32[$new_vars35 >> 2] = $669;
           $672 = HEAP32[$657 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$648 >> 2] | 0, $672);
          HEAP32[$649 >> 2] = (HEAP32[$649 >> 2] | 0) + 1;
         }
         $677 = HEAP32[$676 + 4 >> 2] | 0;
         if (!$677) {
          $$0$i$i$i$i164 = $676;
          while (1) {
           $682 = HEAP32[$$0$i$i$i$i164 + 8 >> 2] | 0;
           if ((HEAP32[$682 >> 2] | 0) == ($$0$i$i$i$i164 | 0)) {
            $$cast$i$i$i$i165$lcssa = $682;
            break;
           } else $$0$i$i$i$i164 = $682;
          }
          $$01$i$i$i$i167 = $$cast$i$i$i$i165$lcssa;
         } else {
          $$0$i$i$i$i$i162 = $677;
          while (1) {
           $679 = HEAP32[$$0$i$i$i$i$i162 >> 2] | 0;
           if (!$679) {
            $$0$i$i$i$i$i162$lcssa = $$0$i$i$i$i$i162;
            break;
           } else $$0$i$i$i$i$i162 = $679;
          }
          $$01$i$i$i$i167 = $$0$i$i$i$i$i162$lcssa;
         }
         if (($$01$i$i$i$i167 | 0) == ($652 | 0)) break; else {
          $656 = $$01$i$i$i$i167;
          $676 = $$01$i$i$i$i167;
         }
        }
        if ((label | 0) == 309) {
         $686 = ___cxa_find_matching_catch() | 0;
         $687 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$650 >> 2] | 0);
         $eh$lpad$body$index8Z2D = $687;
         $eh$lpad$body$indexZ2D = $686;
         break L1;
        }
        $$pre = HEAP32[$650 >> 2] | 0;
        $689 = $646 + 56 | 0;
        if (!$$pre) {
         $$pre$phi403Z2D = $650;
         $972 = $$byval_copy34;
         $973 = $689;
         label = 320;
         break;
        }
        $691 = HEAP32[$689 >> 2] | 0;
        $__nd$0$i$i$i175 = $$pre;
        while (1) {
         $693 = HEAP32[$__nd$0$i$i$i175 + 16 >> 2] | 0;
         if ($691 >>> 0 < $693 >>> 0) {
          $695 = HEAP32[$__nd$0$i$i$i175 >> 2] | 0;
          if (!$695) {
           $$lcssa472 = $__nd$0$i$i$i175;
           $__nd$0$i$i$i175$lcssa471 = $__nd$0$i$i$i175;
           label = 314;
           break;
          } else $__nd$0$be$in$i$i$i176 = $695;
         } else {
          if ($693 >>> 0 >= $691 >>> 0) {
           $__nd$0$i$i$i175$lcssa = $__nd$0$i$i$i175;
           label = 319;
           break;
          }
          $698 = $__nd$0$i$i$i175 + 4 | 0;
          $699 = HEAP32[$698 >> 2] | 0;
          if (!$699) {
           $$lcssa = $698;
           $__nd$0$i$i$i175$lcssa470 = $__nd$0$i$i$i175;
           label = 318;
           break;
          } else $__nd$0$be$in$i$i$i176 = $699;
         }
         $__nd$0$i$i$i175 = $__nd$0$be$in$i$i$i176;
        }
        if ((label | 0) == 314) {
         HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i175$lcssa471;
         $$0$i$i$i179 = $$lcssa472;
         $$pre$phi402Z2D = $650;
         $708 = $689;
         $711 = $__nd$0$i$i$i175$lcssa471;
         $974 = $$byval_copy34;
         break;
        } else if ((label | 0) == 318) {
         HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i175$lcssa470;
         $$0$i$i$i179 = $$lcssa;
         $$pre$phi402Z2D = $650;
         $708 = $689;
         $711 = $__nd$0$i$i$i175$lcssa470;
         $974 = $$byval_copy34;
         break;
        } else if ((label | 0) == 319) {
         HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i175$lcssa;
         $$0$i$i$i179 = $$byval_copy34;
         $$pre$phi402Z2D = $650;
         $708 = $689;
         $711 = $__nd$0$i$i$i175$lcssa;
         $974 = $$byval_copy34;
         break;
        }
       } while (0);
       if ((label | 0) == 320) {
        HEAP32[$$byval_copy34 >> 2] = $650;
        $$0$i$i$i179 = $650;
        $$pre$phi402Z2D = $$pre$phi403Z2D;
        $708 = $973;
        $711 = $650;
        $974 = $972;
       }
       do if (!(HEAP32[$$0$i$i$i179 >> 2] | 0)) {
        __THREW__ = 0;
        $703 = invoke_ii(67, 20) | 0;
        $704 = __THREW__;
        __THREW__ = 0;
        if ($704 & 1) {
         label = 353;
         break;
        }
        HEAP32[$703 + 16 >> 2] = HEAP32[$708 >> 2];
        HEAP32[$703 >> 2] = 0;
        HEAP32[$703 + 4 >> 2] = 0;
        HEAP32[$703 + 8 >> 2] = $711;
        HEAP32[$$0$i$i$i179 >> 2] = $703;
        $713 = HEAP32[HEAP32[$new_vars35 >> 2] >> 2] | 0;
        if (!$713) $716 = $703; else {
         HEAP32[$new_vars35 >> 2] = $713;
         $716 = HEAP32[$$0$i$i$i179 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$648 >> 2] | 0, $716);
        HEAP32[$649 >> 2] = (HEAP32[$649 >> 2] | 0) + 1;
        label = 326;
       } else label = 326; while (0);
       do if ((label | 0) == 326) {
        __THREW__ = 0;
        invoke_viiii(15, $20 | 0, HEAP32[$646 + 48 >> 2] | 0, 0, $new_vars35 | 0);
        $721 = __THREW__;
        __THREW__ = 0;
        if ($721 & 1) {
         label = 353;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $20 | 0);
        $723 = __THREW__;
        __THREW__ = 0;
        if ($723 & 1) {
         $774 = ___cxa_find_matching_catch() | 0;
         $775 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$20 + 4 >> 2] | 0);
         $$5 = $774;
         $$59 = $775;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$20 + 4 >> 2] | 0);
        __THREW__ = 0;
        invoke_viiii(15, $21 | 0, HEAP32[$646 + 52 >> 2] | 0, 1, $new_vars35 | 0);
        $729 = __THREW__;
        __THREW__ = 0;
        if ($729 & 1) {
         label = 353;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $21 | 0);
        $731 = __THREW__;
        __THREW__ = 0;
        if ($731 & 1) {
         $778 = ___cxa_find_matching_catch() | 0;
         $779 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$21 + 4 >> 2] | 0);
         $$5 = $778;
         $$59 = $779;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$21 + 4 >> 2] | 0);
        $735 = HEAP32[$29 >> 2] | 0;
        do if ($735) {
         $737 = HEAP32[$708 >> 2] | 0;
         $$0$ph6$i$i$i$i187 = $29;
         $$01$ph5$i$i$i$i188 = $735;
         L470 : while (1) {
          $$013$i$i$i$i190 = $$01$ph5$i$i$i$i188;
          while (1) {
           if ((HEAP32[$$013$i$i$i$i190 + 16 >> 2] | 0) >>> 0 >= $737 >>> 0) {
            $$013$i$i$i$i190$lcssa = $$013$i$i$i$i190;
            break;
           }
           $$013$i$i$i$i190 = HEAP32[$$013$i$i$i$i190 + 4 >> 2] | 0;
           if (!$$013$i$i$i$i190) {
            $$0$ph6$i$i$i$i187$lcssa469 = $$0$ph6$i$i$i$i187;
            label = 336;
            break L470;
           }
          }
          $$01$ph5$i$i$i$i188 = HEAP32[$$013$i$i$i$i190$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i$i188) {
           $$013$i$i$i$i190$lcssa$lcssa = $$013$i$i$i$i190$lcssa;
           label = 337;
           break;
          } else $$0$ph6$i$i$i$i187 = $$013$i$i$i$i190$lcssa;
         }
         if ((label | 0) == 336) $$0$ph$lcssa$i$i$i$i192 = $$0$ph6$i$i$i$i187$lcssa469; else if ((label | 0) == 337) $$0$ph$lcssa$i$i$i$i192 = $$013$i$i$i$i190$lcssa$lcssa;
         if (($$0$ph$lcssa$i$i$i$i192 | 0) == ($29 | 0)) break;
         if ($737 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i192 + 16 >> 2] | 0) >>> 0) break;
         $751 = HEAP32[$$0$ph$lcssa$i$i$i$i192 + 4 >> 2] | 0;
         if (!$751) {
          $$0$i$i$i$i$i198 = $$0$ph$lcssa$i$i$i$i192;
          while (1) {
           $756 = HEAP32[$$0$i$i$i$i$i198 + 8 >> 2] | 0;
           if ((HEAP32[$756 >> 2] | 0) == ($$0$i$i$i$i$i198 | 0)) {
            $$cast$i$i$i$i$i199$lcssa = $756;
            break;
           } else $$0$i$i$i$i$i198 = $756;
          }
          $$01$i$i$i$i$i201 = $$cast$i$i$i$i$i199$lcssa;
         } else {
          $$0$i$i$i$i$i$i196 = $751;
          while (1) {
           $753 = HEAP32[$$0$i$i$i$i$i$i196 >> 2] | 0;
           if (!$753) {
            $$0$i$i$i$i$i$i196$lcssa = $$0$i$i$i$i$i$i196;
            break;
           } else $$0$i$i$i$i$i$i196 = $753;
          }
          $$01$i$i$i$i$i201 = $$0$i$i$i$i$i$i196$lcssa;
         }
         if ((HEAP32[$agg$result >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i192 | 0)) HEAP32[$agg$result >> 2] = $$01$i$i$i$i$i201;
         HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + -1;
         __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($735, $$0$ph$lcssa$i$i$i$i192);
         __ZdlPv($$0$ph$lcssa$i$i$i$i192);
        } while (0);
        __THREW__ = 0;
        invoke_viiii(15, $22 | 0, HEAP32[$646 + 60 >> 2] | 0, $in_object | 0, $vars | 0);
        $765 = __THREW__;
        __THREW__ = 0;
        if ($765 & 1) {
         label = 353;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $22 | 0);
        $767 = __THREW__;
        __THREW__ = 0;
        if ($767 & 1) {
         $782 = ___cxa_find_matching_catch() | 0;
         $783 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
         $$5 = $782;
         $$59 = $783;
         break;
        } else {
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$$pre$phi402Z2D >> 2] | 0);
         break L3;
        }
       } while (0);
       if ((label | 0) == 353) {
        $772 = ___cxa_find_matching_catch() | 0;
        $$5 = $772;
        $$59 = tempRet0;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$$pre$phi402Z2D >> 2] | 0);
       $$9 = $$5;
       $$913 = $$59;
       $971 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
       ___resumeException($$9 | 0);
      }
     }
    }
   }
  } else {
   __THREW__ = 0;
   invoke_viiii(15, $4 | 0, HEAP32[$31 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
   $35 = __THREW__;
   __THREW__ = 0;
   if ($35 & 1) {
    label = 14;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(59, $agg$result | 0, $4 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $66 = ___cxa_find_matching_catch() | 0;
    $67 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
    $$9 = $66;
    $$913 = $67;
    $971 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
    ___resumeException($$9 | 0);
   }
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
   $42 = HEAP32[$31 + 52 >> 2] | 0;
   $44 = HEAP32[$31 + 56 >> 2] | 0;
   if (($42 | 0) != ($44 | 0)) {
    $46 = $5 + 4 | 0;
    $48 = $42;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(15, $5 | 0, HEAP32[$48 >> 2] | 0, $in_object | 0, $vars | 0);
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) {
      label = 13;
      break;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $5 | 0);
     $51 = __THREW__;
     __THREW__ = 0;
     if ($51 & 1) {
      label = 17;
      break;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($5, HEAP32[$46 >> 2] | 0);
     $48 = $48 + 4 | 0;
     if (($48 | 0) == ($44 | 0)) {
      label = 426;
      break;
     }
    }
    if ((label | 0) == 13) {
     $62 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $62;
     break L1;
    } else if ((label | 0) == 17) {
     $70 = ___cxa_find_matching_catch() | 0;
     $71 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($5, HEAP32[$46 >> 2] | 0);
     $$9 = $70;
     $$913 = $71;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 426) break;
   }
  } while (0);
  $945 = HEAP32[$agg$result >> 2] | 0;
  if (($945 | 0) == ($29 | 0)) {
   STACKTOP = sp;
   return;
  }
  $947 = $ast_ + 40 | 0;
  $948 = $ast_ + 44 | 0;
  $949 = $ast_ + 36 | 0;
  $951 = $945;
  while (1) {
   $952 = HEAP32[$951 + 16 >> 2] | 0;
   HEAP32[$id >> 2] = $952;
   $953 = HEAP32[$947 >> 2] | 0;
   if (($953 | 0) == (HEAP32[$948 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_vii(55, $949 | 0, $id | 0);
    $959 = __THREW__;
    __THREW__ = 0;
    if ($959 & 1) {
     label = 10;
     break;
    }
   } else {
    if (!$953) $958 = 0; else {
     HEAP32[$953 >> 2] = $952;
     $958 = HEAP32[$947 >> 2] | 0;
    }
    HEAP32[$947 >> 2] = $958 + 4;
   }
   $962 = HEAP32[$951 + 4 >> 2] | 0;
   if (!$962) {
    $$0$i$i = $951;
    while (1) {
     $967 = HEAP32[$$0$i$i + 8 >> 2] | 0;
     if ((HEAP32[$967 >> 2] | 0) == ($$0$i$i | 0)) {
      $$cast$i$i$lcssa = $967;
      break;
     } else $$0$i$i = $967;
    }
    $$01$i$i = $$cast$i$i$lcssa;
   } else {
    $$0$i$i$i = $962;
    while (1) {
     $964 = HEAP32[$$0$i$i$i >> 2] | 0;
     if (!$964) {
      $$0$i$i$i$lcssa = $$0$i$i$i;
      break;
     } else $$0$i$i$i = $964;
    }
    $$01$i$i = $$0$i$i$i$lcssa;
   }
   if (($$01$i$i | 0) == ($29 | 0)) break; else $951 = $$01$i$i;
  }
  if ((label | 0) == 10) {
   $56 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index8Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $56;
   break;
  }
  STACKTOP = sp;
  return;
 } while (0);
 do if ((label | 0) == 414) {
  __THREW__ = 0;
  $916 = invoke_iiii(25, 43744, 37704, 29) | 0;
  $917 = __THREW__;
  __THREW__ = 0;
  if ($917 & 1) label = 14; else {
   __THREW__ = 0;
   $919 = invoke_iii(26, $916 | 0, $ast_ | 0) | 0;
   $920 = __THREW__;
   __THREW__ = 0;
   if ($920 & 1) label = 14; else {
    __THREW__ = 0;
    invoke_vii(47, $2 | 0, $919 + (HEAP32[(HEAP32[$919 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $926 = __THREW__;
    __THREW__ = 0;
    if ($926 & 1) label = 14; else {
     __THREW__ = 0;
     $928 = invoke_iii(22, $2 | 0, 47968) | 0;
     $929 = __THREW__;
     __THREW__ = 0;
     if (!($929 & 1)) {
      __THREW__ = 0;
      $934 = invoke_iii(HEAP32[(HEAP32[$928 >> 2] | 0) + 28 >> 2] | 0, $928 | 0, 10) | 0;
      $935 = __THREW__;
      __THREW__ = 0;
      if (!($935 & 1)) {
       __ZNSt3__16localeD2Ev($2);
       __THREW__ = 0;
       invoke_iii(25, $919 | 0, $934 | 0) | 0;
       $939 = __THREW__;
       __THREW__ = 0;
       if ($939 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_ii(68, $919 | 0) | 0;
       $941 = __THREW__;
       __THREW__ = 0;
       if ($941 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_v(3);
       $943 = __THREW__;
       __THREW__ = 0;
       if ($943 & 1) {
        label = 14;
        break;
       }
      }
     }
     $937 = ___cxa_find_matching_catch() | 0;
     $938 = tempRet0;
     __ZNSt3__16localeD2Ev($2);
     $eh$lpad$body$index8Z2D = $938;
     $eh$lpad$body$indexZ2D = $937;
    }
   }
  }
 } while (0);
 if ((label | 0) == 14) {
  $64 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index8Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $64;
 }
 $$9 = $eh$lpad$body$indexZ2D;
 $$913 = $eh$lpad$body$index8Z2D;
 $971 = HEAP32[$29 >> 2] | 0;
 __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
 ___resumeException($$9 | 0);
}

function _printf_core($f, $fmt, $ap, $nl_arg, $nl_type) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 $nl_arg = $nl_arg | 0;
 $nl_type = $nl_type | 0;
 var $$$p$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i105$i = 0, $$0$lcssa$i112$i = 0, $$0$lcssa$i136$i = 0, $$0$lcssa$i151$i = 0, $$0$lcssa$i47 = 0, $$0$lcssa$i47$i = 0, $$0$lcssa$i52 = 0, $$0$lcssa$i54 = 0, $$0$lcssa$i54$i = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i62 = 0, $$0$lcssa$i64$i = 0, $$0$lcssa$i69 = 0, $$0$lcssa$i71$i = 0, $$0$lcssa$i76 = 0, $$0$lcssa$i77$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i86 = 0, $$0$lcssa$i92$i = 0, $$0$ph = 0, $$0$ph340 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i103$i = 0, $$01$i110$i = 0, $$01$i134$i = 0, $$01$i149$i = 0, $$01$i45 = 0, $$01$i45$i = 0, $$01$i52$i = 0, $$01$i60 = 0, $$01$i62$i = 0, $$01$i67 = 0, $$01$i69$i = 0, $$01$i74 = 0, $$01$i75$i = 0, $$01$i82$i = 0, $$01$i84 = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i93$i = 0, $$012$i = 0, $$013$i = 0.0, $$019$i = 0, $$03$i49 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i87$i = 0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i120$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i118$i = 0, $$12$i127$i = 0, $$12$i142$i = 0, $$12$i142$i$lcssa = 0, $$12$i95$i = 0, $$120$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$216$i = 0, $$26$i = 0, $$26$us$i = 0, $$28$i = 0.0, $$29$i = 0, $$3$i = 0.0, $$31$i = 0, $$317$i = 0, $$39$i = 0, $$4$i = 0.0, $$418$lcssa$i = 0, $$418193$i = 0, $$5205$i = 0, $$93 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us310$i = 0, $$a$3$us310$i$lcssa = 0, $$a$3312$i = 0, $$a$3312$i$lcssa = 0, $$be = 0, $$be341 = 0, $$be342 = 0, $$fl$4 = 0, $$lcssa = 0, $$lcssa107 = 0, $$lcssa107$ph = 0, $$lcssa283$i = 0, $$lcssa344 = 0, $$lcssa345 = 0, $$lcssa346 = 0, $$lcssa347 = 0, $$lcssa348 = 0, $$lcssa350 = 0, $$lcssa352 = 0, $$lcssa353 = 0, $$lcssa354 = 0, $$lcssa355 = 0, $$lcssa356 = 0, $$lcssa357 = 0, $$lcssa358 = 0, $$lcssa359 = 0, $$lcssa360 = 0, $$lcssa361 = 0, $$lcssa362 = 0, $$lcssa363 = 0, $$lcssa364 = 0, $$lcssa365 = 0, $$lcssa367 = 0, $$lcssa368 = 0, $$lcssa369 = 0, $$lcssa370 = 0, $$lcssa371 = 0, $$lcssa372 = 0, $$lcssa373 = 0, $$lcssa374 = 0, $$lcssa375 = 0, $$lcssa376 = 0, $$lcssa377 = 0, $$lcssa378 = 0.0, $$lcssa379 = 0, $$lcssa381 = 0, $$lcssa382 = 0, $$lcssa384 = 0, $$lcssa385 = 0, $$lcssa386 = 0, $$p$5 = 0, $$p$i = 0, $$ph = 0, $$pn$i = 0, $$pr$i = 0, $$pr154$i = 0, $$pre308$i = 0, $$z$4$us$i = 0, $$z$4$us$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1009 = 0, $1011 = 0, $1013 = 0, $1015 = 0, $1016 = 0, $1024 = 0, $1032 = 0, $1040 = 0, $105 = 0, $1050 = 0, $1053 = 0, $1060 = 0, $1061 = 0, $1067 = 0, $1068 = 0, $107 = 0, $1071 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1091 = 0, $1092 = 0, $1094 = 0, $1097 = 0, $1098 = 0, $11 = 0, $110 = 0, $1107 = 0, $1108 = 0, $1110 = 0, $1113 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1133 = 0, $1134 = 0, $1136 = 0, $1139 = 0, $1148 = 0, $1149 = 0, $1150 = 0, $1159 = 0, $1160 = 0.0, $1166 = 0, $1167 = 0.0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $1190 = 0, $1191 = 0, $1193 = 0, $1195 = 0, $12 = 0, $13 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $140$phi = 0, $144 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $151 = 0, $156 = 0, $159 = 0, $16 = 0, $171 = 0, $172 = 0, $179 = 0, $180 = 0, $188 = 0, $189 = 0, $195 = 0, $196 = 0, $198 = 0, $2 = 0, $201 = 0, $207 = 0, $208 = 0, $219 = 0, $22 = 0, $220 = 0, $226 = 0, $227 = 0, $23 = 0, $238 = 0, $239 = 0, $245 = 0, $246 = 0.0, $25 = 0, $254 = 0, $255 = 0.0, $259 = 0, $26 = 0, $266 = 0, $267 = 0, $273 = 0, $28 = 0, $285 = 0, $292 = 0, $294 = 0, $298 = 0, $3 = 0, $304 = 0, $305 = 0, $31 = 0, $317 = 0, $319 = 0, $32 = 0, $322 = 0, $323 = 0, $333 = 0, $337 = 0, $339 = 0, $341 = 0, $346 = 0, $347 = 0, $348 = 0, $352 = 0, $353 = 0, $364 = 0, $369 = 0, $37 = 0, $371 = 0, $373 = 0, $379 = 0, $387 = 0, $39 = 0, $393 = 0, $395 = 0, $397 = 0, $4 = 0, $40 = 0, $402 = 0, $405 = 0, $407 = 0, $408 = 0, $416 = 0, $418 = 0, $424 = 0, $432 = 0.0, $437 = 0, $44 = 0, $441 = 0, $448 = 0, $452 = 0, $455 = 0, $456 = 0, $46 = 0, $465 = 0, $47 = 0, $473 = 0.0, $474 = 0, $477 = 0, $479 = 0, $482 = 0, $486 = 0.0, $496 = 0, $499 = 0, $5 = 0, $503 = 0, $504 = 0, $505 = 0, $509 = 0, $51 = 0, $510 = 0, $521 = 0, $533 = 0, $536 = 0, $542 = 0, $551 = 0, $557 = 0, $56 = 0, $566 = 0, $572 = 0, $584 = 0, $589 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $6 = 0, $60 = 0, $601 = 0, $608 = 0, $61 = 0, $610 = 0, $612 = 0, $621 = 0, $631 = 0, $632 = 0, $634 = 0, $635 = 0, $636 = 0, $642 = 0, $644 = 0, $647 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $653 = 0, $655 = 0, $655$phi = 0, $658 = 0, $660 = 0, $664 = 0, $669 = 0, $67 = 0, $671 = 0, $672 = 0, $691 = 0, $693 = 0, $696 = 0, $697 = 0, $7 = 0, $701 = 0, $709 = 0, $710 = 0, $711 = 0, $715 = 0, $736 = 0, $737 = 0, $740 = 0, $745 = 0, $747 = 0, $754 = 0, $755 = 0, $756 = 0, $759 = 0, $760 = 0, $761 = 0, $768 = 0, $778 = 0, $781 = 0, $783 = 0, $785 = 0, $787 = 0, $792 = 0, $793 = 0, $796 = 0, $798 = 0, $8 = 0, $800 = 0, $802 = 0, $816 = 0, $821 = 0, $830 = 0, $831 = 0, $835 = 0, $838 = 0, $841 = 0, $842 = 0, $844 = 0, $848 = 0, $852 = 0, $853 = 0, $854 = 0, $858 = 0, $859 = 0, $870 = 0, $876 = 0, $886 = 0, $891 = 0, $892 = 0, $894 = 0, $895 = 0, $9 = 0, $903 = 0, $91 = 0, $911 = 0, $912 = 0, $914 = 0, $916 = 0, $917 = 0, $92 = 0, $922 = 0, $927 = 0, $932 = 0, $941 = 0, $946 = 0, $950 = 0, $952 = 0, $954 = 0, $955 = 0, $955$phi = 0, $956 = 0, $968 = 0, $969 = 0, $974 = 0, $98 = 0, $980 = 0, $984 = 0, $986 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1261$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$2$ph$i$lcssa = 0, $a$3$lcssa$i = 0, $a$3248$i = 0, $a$3248$us$i = 0, $a$5$lcssa$i = 0, $a$5223$i = 0, $a$6$i = 0, $a$6$i$lcssa = 0, $a$7$i = 0, $a$8$ph$i = 0, $a$8$ph294$i = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0254$i = 0, $carry3$0242$i = 0, $carry3$0242$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0253$i = 0, $d$0255$i = 0, $d$1241$i = 0, $d$1241$us$i = 0, $d$2$lcssa$i = 0, $d$2222$i = 0, $d$3$i = 0, $d$4199$i = 0, $d$5192$i = 0, $d$6204$i = 0, $e$0237$i = 0, $e$1$i = 0, $e$2218$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1209$i = 0, $estr$2$i = 0, $fl$0111 = 0, $fl$0111$ph = 0, $fl$0171 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa272 = 0, $i$0176 = 0, $i$0236$i = 0, $i$03$i = 0, $i$03$i31 = 0, $i$1$lcssa$i = 0, $i$1187 = 0, $i$1230$i = 0, $i$2163 = 0, $i$2163$lcssa = 0, $i$2217$i = 0, $i$3161 = 0, $i$3213$i = 0, $isdigittmp = 0, $isdigittmp1$i = 0, $isdigittmp1$i28 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i30 = 0, $isdigittmp9 = 0, $j$0229$i = 0, $j$0231$i = 0, $j$1214$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$be = 0, $l$0$i = 0, $l$1175 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$be = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $or$cond19 = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$4271 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1187$i = 0, $round$0186$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$i$lcssa = 0, $s$1$us$us$i = 0, $s$1$us$us$i$lcssa = 0, $s1$0$i = 0, $s7$0196$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0188$i = 0, $s8$0188$i$ph = 0, $s9$0$i = 0, $s9$1200$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa351 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8109 = 0, $storemerge8109$ph = 0, $storemerge8170 = 0, $t$0 = 0, $t$1 = 0, $uglygep296$i = 0, $uglygep300301$i = 0, $umax$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $wc = 0, $ws$0177 = 0, $ws$1188 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i117$i = 0, $y$03$i126$i = 0, $y$03$i141$i = 0, $y$03$i94$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0$lcssa$ph = 0, $z$0164 = 0, $z$1$lcssa$i = 0, $z$1260$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$2$i$lcssa$lcssa = 0, $z$3$lcssa$i = 0, $z$3247$i = 0, $z$3247$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$5$i = 0, $z$5$i$lcssa = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864 | 0;
 $big$i = sp + 16 | 0;
 $e2$i = sp + 8 | 0;
 $buf$i = sp + 836 | 0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824 | 0;
 $pad$i = sp + 568 | 0;
 $buf = sp + 528 | 0;
 $wc = sp;
 $mb = sp + 520 | 0;
 $1 = ($f | 0) != 0;
 $2 = $buf + 40 | 0;
 $3 = $2;
 $4 = $buf + 39 | 0;
 $5 = $wc + 4 | 0;
 $6 = $wc;
 $7 = $ebuf0$i + 12 | 0;
 $8 = $ebuf0$i + 11 | 0;
 $9 = $7;
 $10 = $9 - $0 | 0;
 $11 = -2 - $0 | 0;
 $12 = $9 + 2 | 0;
 $13 = $big$i + 288 | 0;
 $14 = $buf$i + 9 | 0;
 $15 = $14;
 $16 = $buf$i + 8 | 0;
 $1175 = 0;
 $1176 = 0;
 $23 = $fmt;
 $cnt$0 = 0;
 $l$0 = 0;
 $l10n$0 = 0;
 L1 : while (1) {
  do if (($cnt$0 | 0) > -1) if (($l$0 | 0) > (2147483647 - $cnt$0 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $cnt$1 = -1;
   break;
  } else {
   $cnt$1 = $l$0 + $cnt$0 | 0;
   break;
  } else $cnt$1 = $cnt$0; while (0);
  $22 = HEAP8[$23 >> 0] | 0;
  if (!($22 << 24 >> 24)) {
   $cnt$1$lcssa = $cnt$1;
   $l10n$0$lcssa = $l10n$0;
   label = 429;
   break;
  }
  $1177 = $22;
  $26 = $23;
  while (1) {
   if ($1177 << 24 >> 24 == 37) {
    $$lcssa = $26;
    label = 9;
    break;
   } else if (!($1177 << 24 >> 24)) {
    $$lcssa344 = $26;
    label = 14;
    break;
   }
   $25 = $26 + 1 | 0;
   $1177 = HEAP8[$25 >> 0] | 0;
   $26 = $25;
  }
  if ((label | 0) == 9) {
   label = 0;
   $28 = $$lcssa;
   $z$0164 = $$lcssa;
   while (1) {
    if ((HEAP8[$28 + 1 >> 0] | 0) != 37) {
     $$lcssa107$ph = $28;
     $z$0$lcssa$ph = $z$0164;
     break;
    }
    $31 = $z$0164 + 1 | 0;
    $32 = $28 + 2 | 0;
    if ((HEAP8[$32 >> 0] | 0) == 37) {
     $28 = $32;
     $z$0164 = $31;
    } else {
     $$lcssa107$ph = $32;
     $z$0$lcssa$ph = $31;
     break;
    }
   }
   $$lcssa107 = $$lcssa107$ph;
   $z$0$lcssa = $z$0$lcssa$ph;
  } else if ((label | 0) == 14) {
   label = 0;
   $$lcssa107 = $$lcssa344;
   $z$0$lcssa = $$lcssa344;
  }
  $37 = $z$0$lcssa - $23 | 0;
  if ($1) ___fwritex($23, $37, $f) | 0;
  L24 : do if (($z$0$lcssa | 0) == ($23 | 0)) {
   $39 = $$lcssa107 + 1 | 0;
   $40 = HEAP8[$39 >> 0] | 0;
   $isdigittmp = ($40 << 24 >> 24) + -48 | 0;
   if ($isdigittmp >>> 0 < 10) {
    $44 = (HEAP8[$$lcssa107 + 2 >> 0] | 0) == 36;
    $$93 = $44 ? $$lcssa107 + 3 | 0 : $39;
    $47 = HEAP8[$$93 >> 0] | 0;
    $argpos$0 = $44 ? $isdigittmp : -1;
    $l10n$1 = $44 ? 1 : $l10n$0;
    $storemerge = $$93;
   } else {
    $47 = $40;
    $argpos$0 = -1;
    $l10n$1 = $l10n$0;
    $storemerge = $39;
   }
   $46 = $47 << 24 >> 24;
   if (($46 & -32 | 0) == 32) {
    $51 = $46;
    $56 = $47;
    $fl$0171 = 0;
    $storemerge8170 = $storemerge;
    while (1) {
     if (!(1 << $51 + -32 & 75913)) {
      $$ph = $56;
      $fl$0111$ph = $fl$0171;
      $storemerge8109$ph = $storemerge8170;
      break;
     }
     $59 = 1 << ($56 << 24 >> 24) + -32 | $fl$0171;
     $60 = $storemerge8170 + 1 | 0;
     $61 = HEAP8[$60 >> 0] | 0;
     $51 = $61 << 24 >> 24;
     if (($51 & -32 | 0) != 32) {
      $$ph = $61;
      $fl$0111$ph = $59;
      $storemerge8109$ph = $60;
      break;
     } else {
      $56 = $61;
      $fl$0171 = $59;
      $storemerge8170 = $60;
     }
    }
    $65 = $$ph;
    $fl$0111 = $fl$0111$ph;
    $storemerge8109 = $storemerge8109$ph;
   } else {
    $65 = $47;
    $fl$0111 = 0;
    $storemerge8109 = $storemerge;
   }
   do if ($65 << 24 >> 24 == 42) {
    $67 = $storemerge8109 + 1 | 0;
    $isdigittmp11 = (HEAP8[$67 >> 0] | 0) + -48 | 0;
    if ($isdigittmp11 >>> 0 < 10) if ((HEAP8[$storemerge8109 + 2 >> 0] | 0) == 36) {
     HEAP32[$nl_type + ($isdigittmp11 << 2) >> 2] = 10;
     $l10n$2 = 1;
     $storemerge13 = $storemerge8109 + 3 | 0;
     $w$0 = HEAP32[$nl_arg + ((HEAP8[$67 >> 0] | 0) + -48 << 3) >> 2] | 0;
    } else label = 29; else label = 29;
    if ((label | 0) == 29) {
     label = 0;
     if ($l10n$1) {
      $$0$ph340 = -1;
      label = 453;
      break L1;
     }
     if (!$1) {
      $105 = $67;
      $fl$1 = $fl$0111;
      $l10n$3 = 0;
      $w$1 = 0;
      break;
     }
     $91 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $92 = HEAP32[$91 >> 2] | 0;
     HEAP32[$ap >> 2] = $91 + 4;
     $l10n$2 = 0;
     $storemerge13 = $67;
     $w$0 = $92;
    }
    if (($w$0 | 0) < 0) {
     $105 = $storemerge13;
     $fl$1 = $fl$0111 | 8192;
     $l10n$3 = $l10n$2;
     $w$1 = 0 - $w$0 | 0;
    } else {
     $105 = $storemerge13;
     $fl$1 = $fl$0111;
     $l10n$3 = $l10n$2;
     $w$1 = $w$0;
    }
   } else {
    $isdigittmp1$i = ($65 << 24 >> 24) + -48 | 0;
    if ($isdigittmp1$i >>> 0 < 10) {
     $100 = $storemerge8109;
     $i$03$i = 0;
     $isdigittmp4$i = $isdigittmp1$i;
     while (1) {
      $98 = ($i$03$i * 10 | 0) + $isdigittmp4$i | 0;
      $99 = $100 + 1 | 0;
      $isdigittmp4$i = (HEAP8[$99 >> 0] | 0) + -48 | 0;
      if ($isdigittmp4$i >>> 0 >= 10) {
       $$lcssa345 = $98;
       $$lcssa346 = $99;
       break;
      } else {
       $100 = $99;
       $i$03$i = $98;
      }
     }
     if (($$lcssa345 | 0) < 0) {
      $$0$ph340 = -1;
      label = 453;
      break L1;
     } else {
      $105 = $$lcssa346;
      $fl$1 = $fl$0111;
      $l10n$3 = $l10n$1;
      $w$1 = $$lcssa345;
     }
    } else {
     $105 = $storemerge8109;
     $fl$1 = $fl$0111;
     $l10n$3 = $l10n$1;
     $w$1 = 0;
    }
   } while (0);
   do if ((HEAP8[$105 >> 0] | 0) == 46) {
    $107 = $105 + 1 | 0;
    $108 = HEAP8[$107 >> 0] | 0;
    if ($108 << 24 >> 24 != 42) {
     $isdigittmp1$i28 = ($108 << 24 >> 24) + -48 | 0;
     if ($isdigittmp1$i28 >>> 0 >= 10) {
      $1178 = $107;
      $p$0 = 0;
      break;
     }
     $1179 = $107;
     $140 = $105;
     $i$03$i31 = 0;
     $isdigittmp4$i30 = $isdigittmp1$i28;
     while (1) {
      $138 = ($i$03$i31 * 10 | 0) + $isdigittmp4$i30 | 0;
      $139 = $140 + 2 | 0;
      $isdigittmp4$i30 = (HEAP8[$139 >> 0] | 0) + -48 | 0;
      if ($isdigittmp4$i30 >>> 0 >= 10) {
       $$lcssa347 = $138;
       $$lcssa348 = $139;
       break;
      } else {
       $140$phi = $1179;
       $1179 = $139;
       $i$03$i31 = $138;
       $140 = $140$phi;
      }
     }
     $1178 = $$lcssa348;
     $p$0 = $$lcssa347;
     break;
    }
    $110 = $105 + 2 | 0;
    $isdigittmp9 = (HEAP8[$110 >> 0] | 0) + -48 | 0;
    if ($isdigittmp9 >>> 0 < 10) if ((HEAP8[$105 + 3 >> 0] | 0) == 36) {
     HEAP32[$nl_type + ($isdigittmp9 << 2) >> 2] = 10;
     $1178 = $105 + 4 | 0;
     $p$0 = HEAP32[$nl_arg + ((HEAP8[$110 >> 0] | 0) + -48 << 3) >> 2] | 0;
     break;
    }
    if ($l10n$3) {
     $$0$ph340 = -1;
     label = 453;
     break L1;
    }
    if ($1) {
     $134 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $135 = HEAP32[$134 >> 2] | 0;
     HEAP32[$ap >> 2] = $134 + 4;
     $1178 = $110;
     $p$0 = $135;
    } else {
     $1178 = $110;
     $p$0 = 0;
    }
   } else {
    $1178 = $105;
    $p$0 = -1;
   } while (0);
   $144 = $1178;
   $st$0 = 0;
   while (1) {
    $146 = (HEAP8[$144 >> 0] | 0) + -65 | 0;
    if ($146 >>> 0 > 57) {
     label = 452;
     break L1;
    }
    $148 = $144 + 1 | 0;
    $150 = HEAP8[42888 + ($st$0 * 58 | 0) + $146 >> 0] | 0;
    $151 = $150 & 255;
    if (($151 + -1 | 0) >>> 0 < 8) {
     $144 = $148;
     $st$0 = $151;
    } else {
     $$lcssa350 = $144;
     $$lcssa352 = $148;
     $$lcssa353 = $150;
     $$lcssa354 = $151;
     $st$0$lcssa351 = $st$0;
     break;
    }
   }
   if (!($$lcssa353 << 24 >> 24)) {
    $$0$ph340 = -1;
    label = 453;
    break L1;
   }
   $156 = ($argpos$0 | 0) > -1;
   L74 : do if ($$lcssa353 << 24 >> 24 == 19) if ($156) {
    $$0$ph340 = -1;
    label = 453;
    break L1;
   } else {
    $1180 = $1175;
    $1181 = $1176;
    label = 71;
   } else {
    if ($156) {
     HEAP32[$nl_type + ($argpos$0 << 2) >> 2] = $$lcssa354;
     $159 = $nl_arg + ($argpos$0 << 3) | 0;
     $1180 = HEAP32[$159 + 4 >> 2] | 0;
     $1181 = HEAP32[$159 >> 2] | 0;
     label = 71;
     break;
    }
    if (!$1) {
     $$0$ph340 = 0;
     label = 453;
     break L1;
    }
    if (($$lcssa353 & 255) > 20) {
     $1182 = $$lcssa352;
     $267 = $1176;
     $294 = $1175;
    } else do switch ($$lcssa354 | 0) {
    case 10:
     {
      $179 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $180 = HEAP32[$179 >> 2] | 0;
      HEAP32[$ap >> 2] = $179 + 4;
      $1182 = $$lcssa352;
      $267 = $180;
      $294 = (($180 | 0) < 0) << 31 >> 31;
      break L74;
      break;
     }
    case 9:
     {
      $171 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $172 = HEAP32[$171 >> 2] | 0;
      HEAP32[$ap >> 2] = $171 + 4;
      $1182 = $$lcssa352;
      $267 = $172;
      $294 = $1175;
      break L74;
      break;
     }
    case 15:
     {
      $226 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $227 = HEAP32[$226 >> 2] | 0;
      HEAP32[$ap >> 2] = $226 + 4;
      $1182 = $$lcssa352;
      $267 = $227 << 24 >> 24;
      $294 = ((($227 & 255) << 24 >> 24 | 0) < 0) << 31 >> 31;
      break L74;
      break;
     }
    case 13:
     {
      $207 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $208 = HEAP32[$207 >> 2] | 0;
      HEAP32[$ap >> 2] = $207 + 4;
      $1182 = $$lcssa352;
      $267 = $208 << 16 >> 16;
      $294 = ((($208 & 65535) << 16 >> 16 | 0) < 0) << 31 >> 31;
      break L74;
      break;
     }
    case 11:
     {
      $188 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $189 = HEAP32[$188 >> 2] | 0;
      HEAP32[$ap >> 2] = $188 + 4;
      $1182 = $$lcssa352;
      $267 = $189;
      $294 = 0;
      break L74;
      break;
     }
    case 17:
     {
      $245 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
      $246 = +HEAPF64[$245 >> 3];
      HEAP32[$ap >> 2] = $245 + 8;
      HEAPF64[tempDoublePtr >> 3] = $246;
      $1182 = $$lcssa352;
      $267 = HEAP32[tempDoublePtr >> 2] | 0;
      $294 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
      break L74;
      break;
     }
    case 14:
     {
      $219 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $220 = HEAP32[$219 >> 2] | 0;
      HEAP32[$ap >> 2] = $219 + 4;
      $1182 = $$lcssa352;
      $267 = $220 & 65535;
      $294 = 0;
      break L74;
      break;
     }
    case 18:
     {
      $254 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
      $255 = +HEAPF64[$254 >> 3];
      HEAP32[$ap >> 2] = $254 + 8;
      HEAPF64[tempDoublePtr >> 3] = $255;
      $1182 = $$lcssa352;
      $267 = HEAP32[tempDoublePtr >> 2] | 0;
      $294 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
      break L74;
      break;
     }
    case 12:
     {
      $195 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
      $196 = $195;
      $198 = HEAP32[$196 >> 2] | 0;
      $201 = HEAP32[$196 + 4 >> 2] | 0;
      HEAP32[$ap >> 2] = $195 + 8;
      $1182 = $$lcssa352;
      $267 = $198;
      $294 = $201;
      break L74;
      break;
     }
    case 16:
     {
      $238 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $239 = HEAP32[$238 >> 2] | 0;
      HEAP32[$ap >> 2] = $238 + 4;
      $1182 = $$lcssa352;
      $267 = $239 & 255;
      $294 = 0;
      break L74;
      break;
     }
    default:
     {
      $1182 = $$lcssa352;
      $267 = $1176;
      $294 = $1175;
      break L74;
     }
    } while (0);
   } while (0);
   if ((label | 0) == 71) {
    label = 0;
    if ($1) {
     $1182 = $$lcssa352;
     $267 = $1181;
     $294 = $1180;
    } else {
     $$be = $$lcssa352;
     $$be341 = $1180;
     $$be342 = $1181;
     $l$0$be = $37;
     $l10n$0$be = $l10n$3;
     break;
    }
   }
   $259 = HEAP8[$$lcssa350 >> 0] | 0;
   $t$0 = ($st$0$lcssa351 | 0) != 0 & ($259 & 15 | 0) == 3 ? $259 & -33 : $259;
   $266 = $fl$1 & -65537;
   $fl$1$ = ($fl$1 & 8192 | 0) == 0 ? $fl$1 : $266;
   L96 : do switch ($t$0 | 0) {
   case 99:
    {
     HEAP8[$4 >> 0] = $267;
     $1183 = $294;
     $1184 = $267;
     $a$2 = $4;
     $fl$6 = $266;
     $p$5 = 1;
     $pl$2 = 0;
     $prefix$2 = 43352;
     $z$2 = $2;
     break;
    }
   case 88:
   case 120:
    {
     $fl$3 = $fl$1$;
     $p$1 = $p$0;
     $t$1 = $t$0;
     label = 82;
     break;
    }
   case 105:
   case 100:
    {
     if (($294 | 0) < 0) {
      $333 = _i64Subtract(0, 0, $267 | 0, $294 | 0) | 0;
      $339 = tempRet0;
      $341 = $333;
      $pl$0 = 1;
      $prefix$0 = 43352;
      label = 96;
      break L96;
     }
     if (!($fl$1$ & 2048)) {
      $337 = $fl$1$ & 1;
      $339 = $294;
      $341 = $267;
      $pl$0 = $337;
      $prefix$0 = ($337 | 0) == 0 ? 43352 : 43354;
      label = 96;
     } else {
      $339 = $294;
      $341 = $267;
      $pl$0 = 1;
      $prefix$0 = 43353;
      label = 96;
     }
     break;
    }
   case 67:
    {
     HEAP32[$wc >> 2] = $267;
     HEAP32[$5 >> 2] = 0;
     $1187 = $wc;
     $1188 = $6;
     $p$4271 = -1;
     label = 114;
     break;
    }
   case 83:
    {
     $393 = $267;
     if (!$p$0) {
      $1189 = $267;
      $1190 = $393;
      $i$0$lcssa272 = 0;
      label = 119;
     } else {
      $1187 = $393;
      $1188 = $267;
      $p$4271 = $p$0;
      label = 114;
     }
     break;
    }
   case 115:
    {
     $a$1 = ($267 | 0) == 0 ? 43368 : $267;
     label = 109;
     break;
    }
   case 112:
    {
     $fl$3 = $fl$1$ | 8;
     $p$1 = $p$0 >>> 0 > 8 ? $p$0 : 8;
     $t$1 = 120;
     label = 82;
     break;
    }
   case 109:
    {
     $a$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
     label = 109;
     break;
    }
   case 65:
   case 71:
   case 70:
   case 69:
   case 97:
   case 103:
   case 102:
   case 101:
    {
     HEAP32[tempDoublePtr >> 2] = $267;
     HEAP32[tempDoublePtr + 4 >> 2] = $294;
     $432 = +HEAPF64[tempDoublePtr >> 3];
     HEAP32[$e2$i >> 2] = 0;
     if (($294 | 0) < 0) {
      $$013$i = -$432;
      $pl$0$i = 1;
      $prefix$0$i = 43376;
     } else if (!($fl$1$ & 2048)) {
      $437 = $fl$1$ & 1;
      $$013$i = $432;
      $pl$0$i = $437;
      $prefix$0$i = ($437 | 0) == 0 ? 43377 : 43382;
     } else {
      $$013$i = $432;
      $pl$0$i = 1;
      $prefix$0$i = 43379;
     }
     HEAPF64[tempDoublePtr >> 3] = $$013$i;
     $441 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
     do if ($441 >>> 0 < 2146435072 | ($441 | 0) == 2146435072 & 0 < 0) {
      $473 = +_frexpl($$013$i, $e2$i) * 2.0;
      $474 = $473 != 0.0;
      if ($474) HEAP32[$e2$i >> 2] = (HEAP32[$e2$i >> 2] | 0) + -1;
      $477 = $t$0 | 32;
      if (($477 | 0) == 97) {
       $479 = $t$0 & 32;
       $prefix$0$$i = ($479 | 0) == 0 ? $prefix$0$i : $prefix$0$i + 9 | 0;
       $482 = $pl$0$i | 2;
       do if ($p$0 >>> 0 > 11) $$1$i = $473; else {
        $re$1187$i = 12 - $p$0 | 0;
        $round$0186$i = 8.0;
        while (1) {
         $re$1187$i = $re$1187$i + -1 | 0;
         $486 = $round$0186$i * 16.0;
         if (!$re$1187$i) {
          $$lcssa378 = $486;
          break;
         } else $round$0186$i = $486;
        }
        if ((HEAP8[$prefix$0$$i >> 0] | 0) == 45) {
         $$1$i = -($$lcssa378 + (-$473 - $$lcssa378));
         break;
        } else {
         $$1$i = $473 + $$lcssa378 - $$lcssa378;
         break;
        }
       } while (0);
       $496 = HEAP32[$e2$i >> 2] | 0;
       $499 = ($496 | 0) < 0 ? 0 - $496 | 0 : $496;
       if (($499 | 0) < 0) {
        $$05$i$i = $7;
        $503 = $499;
        $504 = (($499 | 0) < 0) << 31 >> 31;
        while (1) {
         $505 = ___uremdi3($503 | 0, $504 | 0, 10, 0) | 0;
         $509 = $$05$i$i + -1 | 0;
         HEAP8[$509 >> 0] = $505 | 48;
         $510 = ___udivdi3($503 | 0, $504 | 0, 10, 0) | 0;
         if ($504 >>> 0 > 9 | ($504 | 0) == 9 & $503 >>> 0 > 4294967295) {
          $$05$i$i = $509;
          $503 = $510;
          $504 = tempRet0;
         } else {
          $$lcssa379 = $509;
          $1191 = $510;
          break;
         }
        }
        $$0$lcssa$i56$i = $$lcssa379;
        $$01$lcssa$off0$i$i = $1191;
       } else {
        $$0$lcssa$i56$i = $7;
        $$01$lcssa$off0$i$i = $499;
       }
       if (!$$01$lcssa$off0$i$i) $$1$lcssa$i$i = $$0$lcssa$i56$i; else {
        $$12$i$i = $$0$lcssa$i56$i;
        $y$03$i$i = $$01$lcssa$off0$i$i;
        while (1) {
         $521 = $$12$i$i + -1 | 0;
         HEAP8[$521 >> 0] = ($y$03$i$i >>> 0) % 10 | 0 | 48;
         if ($y$03$i$i >>> 0 < 10) {
          $$lcssa381 = $521;
          break;
         } else {
          $$12$i$i = $521;
          $y$03$i$i = ($y$03$i$i >>> 0) / 10 | 0;
         }
        }
        $$1$lcssa$i$i = $$lcssa381;
       }
       if (($$1$lcssa$i$i | 0) == ($7 | 0)) {
        HEAP8[$8 >> 0] = 48;
        $estr$0$i = $8;
       } else $estr$0$i = $$1$lcssa$i$i;
       HEAP8[$estr$0$i + -1 >> 0] = (HEAP32[$e2$i >> 2] >> 31 & 2) + 43;
       $533 = $estr$0$i + -2 | 0;
       HEAP8[$533 >> 0] = $t$0 + 15;
       do if (!($fl$1$ & 8)) if (($p$0 | 0) < 1) {
        $$2$us$us$i = $$1$i;
        $s$0$us$us$i = $buf$i;
        while (1) {
         $536 = ~~$$2$us$us$i;
         $542 = $s$0$us$us$i + 1 | 0;
         HEAP8[$s$0$us$us$i >> 0] = HEAPU8[43432 + $536 >> 0] | $479;
         $$2$us$us$i = ($$2$us$us$i - +($536 | 0)) * 16.0;
         if (($542 - $0 | 0) != 1 | $$2$us$us$i == 0.0) $s$1$us$us$i = $542; else {
          HEAP8[$542 >> 0] = 46;
          $s$1$us$us$i = $s$0$us$us$i + 2 | 0;
         }
         if (!($$2$us$us$i != 0.0)) {
          $s$1$us$us$i$lcssa = $s$1$us$us$i;
          break;
         } else $s$0$us$us$i = $s$1$us$us$i;
        }
        $s$1$lcssa$i = $s$1$us$us$i$lcssa;
        break;
       } else {
        $$2$us$i = $$1$i;
        $s$0$us$i = $buf$i;
        while (1) {
         $551 = ~~$$2$us$i;
         $557 = $s$0$us$i + 1 | 0;
         HEAP8[$s$0$us$i >> 0] = HEAPU8[43432 + $551 >> 0] | $479;
         $$2$us$i = ($$2$us$i - +($551 | 0)) * 16.0;
         if (($557 - $0 | 0) == 1) {
          HEAP8[$557 >> 0] = 46;
          $s$1$us$i = $s$0$us$i + 2 | 0;
         } else $s$1$us$i = $557;
         if (!($$2$us$i != 0.0)) {
          $s$1$us$i$lcssa = $s$1$us$i;
          break;
         } else $s$0$us$i = $s$1$us$i;
        }
        $s$1$lcssa$i = $s$1$us$i$lcssa;
        break;
       } else {
        $$2$i = $$1$i;
        $s$0$i = $buf$i;
        while (1) {
         $566 = ~~$$2$i;
         $572 = $s$0$i + 1 | 0;
         HEAP8[$s$0$i >> 0] = HEAPU8[43432 + $566 >> 0] | $479;
         $$2$i = ($$2$i - +($566 | 0)) * 16.0;
         if (($572 - $0 | 0) == 1) {
          HEAP8[$572 >> 0] = 46;
          $s$1$i = $s$0$i + 2 | 0;
         } else $s$1$i = $572;
         if (!($$2$i != 0.0)) {
          $s$1$i$lcssa = $s$1$i;
          break;
         } else $s$0$i = $s$1$i;
        }
        $s$1$lcssa$i = $s$1$i$lcssa;
       } while (0);
       $$pre308$i = $s$1$lcssa$i;
       $584 = $533;
       if (($p$0 | 0) != 0 & ($11 + $$pre308$i | 0) < ($p$0 | 0)) $l$0$i = $12 + $p$0 - $584 | 0; else $l$0$i = $10 - $584 + $$pre308$i | 0;
       $589 = $l$0$i + $482 | 0;
       $590 = $fl$1$ & 73728;
       $592 = ($w$1 | 0) > ($589 | 0);
       if (($590 | 0) == 0 & $592) {
        $593 = $w$1 - $589 | 0;
        _memset($pad$i | 0, 32, ($593 >>> 0 > 256 ? 256 : $593) | 0) | 0;
        if ($593 >>> 0 > 255) {
         $$01$i62$i = $593;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i62$i = $$01$i62$i + -256 | 0;
         } while ($$01$i62$i >>> 0 > 255);
         $$0$lcssa$i64$i = $593 & 255;
        } else $$0$lcssa$i64$i = $593;
        ___fwritex($pad$i, $$0$lcssa$i64$i, $f) | 0;
       }
       ___fwritex($prefix$0$$i, $482, $f) | 0;
       if (($590 | 0) == 65536 & $592) {
        $601 = $w$1 - $589 | 0;
        _memset($pad$i | 0, 48, ($601 >>> 0 > 256 ? 256 : $601) | 0) | 0;
        if ($601 >>> 0 > 255) {
         $$01$i69$i = $601;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i69$i = $$01$i69$i + -256 | 0;
         } while ($$01$i69$i >>> 0 > 255);
         $$0$lcssa$i71$i = $601 & 255;
        } else $$0$lcssa$i71$i = $601;
        ___fwritex($pad$i, $$0$lcssa$i71$i, $f) | 0;
       }
       $608 = $$pre308$i - $0 | 0;
       ___fwritex($buf$i, $608, $f) | 0;
       $610 = $9 - $533 | 0;
       $612 = $l$0$i - $610 - $608 | 0;
       if (($612 | 0) > 0) {
        _memset($pad$i | 0, 48, ($612 >>> 0 > 256 ? 256 : $612) | 0) | 0;
        if ($612 >>> 0 > 255) {
         $$01$i75$i = $612;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i75$i = $$01$i75$i + -256 | 0;
         } while ($$01$i75$i >>> 0 > 255);
         $$0$lcssa$i77$i = $612 & 255;
        } else $$0$lcssa$i77$i = $612;
        ___fwritex($pad$i, $$0$lcssa$i77$i, $f) | 0;
       }
       ___fwritex($533, $610, $f) | 0;
       if (($590 | 0) == 8192 & $592) {
        $621 = $w$1 - $589 | 0;
        _memset($pad$i | 0, 32, ($621 >>> 0 > 256 ? 256 : $621) | 0) | 0;
        if ($621 >>> 0 > 255) {
         $$01$i82$i = $621;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i82$i = $$01$i82$i + -256 | 0;
         } while ($$01$i82$i >>> 0 > 255);
         $$0$lcssa$i84$i = $621 & 255;
        } else $$0$lcssa$i84$i = $621;
        ___fwritex($pad$i, $$0$lcssa$i84$i, $f) | 0;
       }
       $$0$i = $592 ? $w$1 : $589;
       break;
      }
      $$p$i = ($p$0 | 0) < 0 ? 6 : $p$0;
      if ($474) {
       $631 = (HEAP32[$e2$i >> 2] | 0) + -28 | 0;
       HEAP32[$e2$i >> 2] = $631;
       $$3$i = $473 * 268435456.0;
       $632 = $631;
      } else {
       $$3$i = $473;
       $632 = HEAP32[$e2$i >> 2] | 0;
      }
      $$39$i = ($632 | 0) < 0 ? $big$i : $13;
      $634 = $$39$i;
      $$4$i = $$3$i;
      $z$0$i = $$39$i;
      while (1) {
       $635 = ~~$$4$i >>> 0;
       HEAP32[$z$0$i >> 2] = $635;
       $636 = $z$0$i + 4 | 0;
       $$4$i = ($$4$i - +($635 >>> 0)) * 1.0e9;
       if (!($$4$i != 0.0)) {
        $$lcssa355 = $636;
        break;
       } else $z$0$i = $636;
      }
      $$pr$i = HEAP32[$e2$i >> 2] | 0;
      if (($$pr$i | 0) > 0) {
       $642 = $$pr$i;
       $a$1261$i = $$39$i;
       $z$1260$i = $$lcssa355;
       while (1) {
        $644 = ($642 | 0) > 29 ? 29 : $642;
        $d$0253$i = $z$1260$i + -4 | 0;
        do if ($d$0253$i >>> 0 < $a$1261$i >>> 0) $a$2$ph$i = $a$1261$i; else {
         $655 = $z$1260$i;
         $carry$0254$i = 0;
         $d$0255$i = $d$0253$i;
         while (1) {
          $647 = _bitshift64Shl(HEAP32[$d$0255$i >> 2] | 0, 0, $644 | 0) | 0;
          $649 = _i64Add($647 | 0, tempRet0 | 0, $carry$0254$i | 0, 0) | 0;
          $650 = tempRet0;
          $651 = ___uremdi3($649 | 0, $650 | 0, 1e9, 0) | 0;
          HEAP32[$d$0255$i >> 2] = $651;
          $653 = ___udivdi3($649 | 0, $650 | 0, 1e9, 0) | 0;
          $d$0$i = $655 + -8 | 0;
          if ($d$0$i >>> 0 < $a$1261$i >>> 0) {
           $$lcssa356 = $653;
           break;
          } else {
           $655$phi = $d$0255$i;
           $carry$0254$i = $653;
           $d$0255$i = $d$0$i;
           $655 = $655$phi;
          }
         }
         if (!$$lcssa356) {
          $a$2$ph$i = $a$1261$i;
          break;
         }
         $658 = $a$1261$i + -4 | 0;
         HEAP32[$658 >> 2] = $$lcssa356;
         $a$2$ph$i = $658;
        } while (0);
        $z$2$i = $z$1260$i;
        while (1) {
         if ($z$2$i >>> 0 <= $a$2$ph$i >>> 0) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $660 = $z$2$i + -4 | 0;
         if (!(HEAP32[$660 >> 2] | 0)) $z$2$i = $660; else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $664 = (HEAP32[$e2$i >> 2] | 0) - $644 | 0;
        HEAP32[$e2$i >> 2] = $664;
        if (($664 | 0) > 0) {
         $642 = $664;
         $a$1261$i = $a$2$ph$i;
         $z$1260$i = $z$2$i$lcssa;
        } else {
         $$lcssa357 = $664;
         $a$2$ph$i$lcssa = $a$2$ph$i;
         $z$2$i$lcssa$lcssa = $z$2$i$lcssa;
         break;
        }
       }
       $$pr154$i = $$lcssa357;
       $a$1$lcssa$i = $a$2$ph$i$lcssa;
       $z$1$lcssa$i = $z$2$i$lcssa$lcssa;
      } else {
       $$pr154$i = $$pr$i;
       $a$1$lcssa$i = $$39$i;
       $z$1$lcssa$i = $$lcssa355;
      }
      do if (($$pr154$i | 0) < 0) {
       $669 = (($$p$i + 25 | 0) / 9 | 0) + 1 | 0;
       if (($477 | 0) == 102) {
        $671 = $$39$i + ($669 << 2) | 0;
        $672 = $$pr154$i;
        $a$3248$us$i = $a$1$lcssa$i;
        $z$3247$us$i = $z$1$lcssa$i;
        while (1) {
         $$26$us$i = ($672 | 0) < -9 ? 9 : 0 - $672 | 0;
         do if ($a$3248$us$i >>> 0 < $z$3247$us$i >>> 0) {
          $693 = (1 << $$26$us$i) + -1 | 0;
          $697 = 1e9 >>> $$26$us$i;
          $carry3$0242$us$i = 0;
          $d$1241$us$i = $a$3248$us$i;
          while (1) {
           $691 = HEAP32[$d$1241$us$i >> 2] | 0;
           HEAP32[$d$1241$us$i >> 2] = ($691 >>> $$26$us$i) + $carry3$0242$us$i;
           $696 = Math_imul($691 & $693, $697) | 0;
           $d$1241$us$i = $d$1241$us$i + 4 | 0;
           if ($d$1241$us$i >>> 0 >= $z$3247$us$i >>> 0) {
            $$lcssa359 = $696;
            break;
           } else $carry3$0242$us$i = $696;
          }
          $$a$3$us$i = (HEAP32[$a$3248$us$i >> 2] | 0) == 0 ? $a$3248$us$i + 4 | 0 : $a$3248$us$i;
          if (!$$lcssa359) {
           $$a$3$us310$i = $$a$3$us$i;
           $z$4$us$i = $z$3247$us$i;
           break;
          }
          HEAP32[$z$3247$us$i >> 2] = $$lcssa359;
          $$a$3$us310$i = $$a$3$us$i;
          $z$4$us$i = $z$3247$us$i + 4 | 0;
         } else {
          $$a$3$us310$i = (HEAP32[$a$3248$us$i >> 2] | 0) == 0 ? $a$3248$us$i + 4 | 0 : $a$3248$us$i;
          $z$4$us$i = $z$3247$us$i;
         } while (0);
         $$z$4$us$i = ($z$4$us$i - $634 >> 2 | 0) > ($669 | 0) ? $671 : $z$4$us$i;
         $672 = (HEAP32[$e2$i >> 2] | 0) + $$26$us$i | 0;
         HEAP32[$e2$i >> 2] = $672;
         if (($672 | 0) >= 0) {
          $$a$3$us310$i$lcssa = $$a$3$us310$i;
          $$z$4$us$i$lcssa = $$z$4$us$i;
          break;
         } else {
          $a$3248$us$i = $$a$3$us310$i;
          $z$3247$us$i = $$z$4$us$i;
         }
        }
        $a$3$lcssa$i = $$a$3$us310$i$lcssa;
        $z$3$lcssa$i = $$z$4$us$i$lcssa;
        break;
       }
       $701 = $$pr154$i;
       $a$3248$i = $a$1$lcssa$i;
       $z$3247$i = $z$1$lcssa$i;
       while (1) {
        $$26$i = ($701 | 0) < -9 ? 9 : 0 - $701 | 0;
        do if ($a$3248$i >>> 0 < $z$3247$i >>> 0) {
         $709 = (1 << $$26$i) + -1 | 0;
         $710 = 1e9 >>> $$26$i;
         $carry3$0242$i = 0;
         $d$1241$i = $a$3248$i;
         while (1) {
          $711 = HEAP32[$d$1241$i >> 2] | 0;
          HEAP32[$d$1241$i >> 2] = ($711 >>> $$26$i) + $carry3$0242$i;
          $715 = Math_imul($711 & $709, $710) | 0;
          $d$1241$i = $d$1241$i + 4 | 0;
          if ($d$1241$i >>> 0 >= $z$3247$i >>> 0) {
           $$lcssa358 = $715;
           break;
          } else $carry3$0242$i = $715;
         }
         $$a$3$i = (HEAP32[$a$3248$i >> 2] | 0) == 0 ? $a$3248$i + 4 | 0 : $a$3248$i;
         if (!$$lcssa358) {
          $$a$3312$i = $$a$3$i;
          $z$4$i = $z$3247$i;
          break;
         }
         HEAP32[$z$3247$i >> 2] = $$lcssa358;
         $$a$3312$i = $$a$3$i;
         $z$4$i = $z$3247$i + 4 | 0;
        } else {
         $$a$3312$i = (HEAP32[$a$3248$i >> 2] | 0) == 0 ? $a$3248$i + 4 | 0 : $a$3248$i;
         $z$4$i = $z$3247$i;
        } while (0);
        if (($z$4$i - $$a$3312$i >> 2 | 0) > ($669 | 0)) $z$5$i = $$a$3312$i + ($669 << 2) | 0; else $z$5$i = $z$4$i;
        $701 = (HEAP32[$e2$i >> 2] | 0) + $$26$i | 0;
        HEAP32[$e2$i >> 2] = $701;
        if (($701 | 0) >= 0) {
         $$a$3312$i$lcssa = $$a$3312$i;
         $z$5$i$lcssa = $z$5$i;
         break;
        } else {
         $a$3248$i = $$a$3312$i;
         $z$3247$i = $z$5$i;
        }
       }
       $a$3$lcssa$i = $$a$3312$i$lcssa;
       $z$3$lcssa$i = $z$5$i$lcssa;
      } else {
       $a$3$lcssa$i = $a$1$lcssa$i;
       $z$3$lcssa$i = $z$1$lcssa$i;
      } while (0);
      do if ($a$3$lcssa$i >>> 0 < $z$3$lcssa$i >>> 0) {
       $736 = ($634 - $a$3$lcssa$i >> 2) * 9 | 0;
       $737 = HEAP32[$a$3$lcssa$i >> 2] | 0;
       if ($737 >>> 0 < 10) {
        $e$1$i = $736;
        break;
       }
       $e$0237$i = $736;
       $i$0236$i = 10;
       while (1) {
        $i$0236$i = $i$0236$i * 10 | 0;
        $740 = $e$0237$i + 1 | 0;
        if ($737 >>> 0 < $i$0236$i >>> 0) {
         $$lcssa360 = $740;
         break;
        } else $e$0237$i = $740;
       }
       $e$1$i = $$lcssa360;
      } else $e$1$i = 0; while (0);
      $745 = ($477 | 0) == 103;
      $747 = $$p$i - (($477 | 0) != 102 ? $e$1$i : 0) + ((($$p$i | 0) != 0 & $745) << 31 >> 31) | 0;
      if (($747 | 0) < ((($z$3$lcssa$i - $634 >> 2) * 9 | 0) + -9 | 0)) {
       $754 = $747 + 9216 | 0;
       $755 = ($754 | 0) / 9 | 0;
       $756 = $$39$i + ($755 + -1023 << 2) | 0;
       $j$0229$i = (($754 | 0) % 9 | 0) + 1 | 0;
       if (($j$0229$i | 0) < 9) {
        $i$1230$i = 10;
        $j$0231$i = $j$0229$i;
        while (1) {
         $759 = $i$1230$i * 10 | 0;
         if (($j$0231$i | 0) == 8) {
          $$lcssa361 = $759;
          break;
         } else {
          $i$1230$i = $759;
          $j$0231$i = $j$0231$i + 1 | 0;
         }
        }
        $i$1$lcssa$i = $$lcssa361;
       } else $i$1$lcssa$i = 10;
       $760 = HEAP32[$756 >> 2] | 0;
       $761 = ($760 >>> 0) % ($i$1$lcssa$i >>> 0) | 0;
       if (!$761) if (($$39$i + ($755 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
        $a$7$i = $a$3$lcssa$i;
        $d$3$i = $756;
        $e$3$i = $e$1$i;
       } else label = 274; else label = 274;
       do if ((label | 0) == 274) {
        label = 0;
        $$28$i = ((($760 >>> 0) / ($i$1$lcssa$i >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
        $768 = ($i$1$lcssa$i | 0) / 2 | 0;
        do if ($761 >>> 0 < $768 >>> 0) $small$0$i = .5; else {
         if (($761 | 0) == ($768 | 0)) if (($$39$i + ($755 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
          $small$0$i = 1.0;
          break;
         }
         $small$0$i = 1.5;
        } while (0);
        do if (!$pl$0$i) {
         $round6$1$i = $$28$i;
         $small$1$i = $small$0$i;
        } else {
         if ((HEAP8[$prefix$0$i >> 0] | 0) != 45) {
          $round6$1$i = $$28$i;
          $small$1$i = $small$0$i;
          break;
         }
         $round6$1$i = -$$28$i;
         $small$1$i = -$small$0$i;
        } while (0);
        $778 = $760 - $761 | 0;
        HEAP32[$756 >> 2] = $778;
        if (!($round6$1$i + $small$1$i != $round6$1$i)) {
         $a$7$i = $a$3$lcssa$i;
         $d$3$i = $756;
         $e$3$i = $e$1$i;
         break;
        }
        $781 = $778 + $i$1$lcssa$i | 0;
        HEAP32[$756 >> 2] = $781;
        if ($781 >>> 0 > 999999999) {
         $a$5223$i = $a$3$lcssa$i;
         $d$2222$i = $756;
         while (1) {
          $783 = $d$2222$i + -4 | 0;
          HEAP32[$d$2222$i >> 2] = 0;
          if ($783 >>> 0 < $a$5223$i >>> 0) {
           $785 = $a$5223$i + -4 | 0;
           HEAP32[$785 >> 2] = 0;
           $a$6$i = $785;
          } else $a$6$i = $a$5223$i;
          $787 = (HEAP32[$783 >> 2] | 0) + 1 | 0;
          HEAP32[$783 >> 2] = $787;
          if ($787 >>> 0 > 999999999) {
           $a$5223$i = $a$6$i;
           $d$2222$i = $783;
          } else {
           $$lcssa362 = $783;
           $a$6$i$lcssa = $a$6$i;
           break;
          }
         }
         $a$5$lcssa$i = $a$6$i$lcssa;
         $d$2$lcssa$i = $$lcssa362;
        } else {
         $a$5$lcssa$i = $a$3$lcssa$i;
         $d$2$lcssa$i = $756;
        }
        $792 = ($634 - $a$5$lcssa$i >> 2) * 9 | 0;
        $793 = HEAP32[$a$5$lcssa$i >> 2] | 0;
        if ($793 >>> 0 < 10) {
         $a$7$i = $a$5$lcssa$i;
         $d$3$i = $d$2$lcssa$i;
         $e$3$i = $792;
         break;
        }
        $e$2218$i = $792;
        $i$2217$i = 10;
        while (1) {
         $i$2217$i = $i$2217$i * 10 | 0;
         $796 = $e$2218$i + 1 | 0;
         if ($793 >>> 0 < $i$2217$i >>> 0) {
          $$lcssa363 = $796;
          break;
         } else $e$2218$i = $796;
        }
        $a$7$i = $a$5$lcssa$i;
        $d$3$i = $d$2$lcssa$i;
        $e$3$i = $$lcssa363;
       } while (0);
       $798 = $d$3$i + 4 | 0;
       $a$8$ph$i = $a$7$i;
       $e$4$ph$i = $e$3$i;
       $z$6$ph$i = $z$3$lcssa$i >>> 0 > $798 >>> 0 ? $798 : $z$3$lcssa$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;
       $e$4$ph$i = $e$1$i;
       $z$6$ph$i = $z$3$lcssa$i;
      }
      $a$8$ph294$i = $a$8$ph$i;
      $800 = 0 - $e$4$ph$i | 0;
      $z$6$i = $z$6$ph$i;
      while (1) {
       if ($z$6$i >>> 0 <= $a$8$ph$i >>> 0) {
        $$lcssa283$i = 0;
        $z$6$i$lcssa = $z$6$i;
        break;
       }
       $802 = $z$6$i + -4 | 0;
       if (!(HEAP32[$802 >> 2] | 0)) $z$6$i = $802; else {
        $$lcssa283$i = 1;
        $z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do if ($745) {
       $$$p$i = (($$p$i | 0) == 0 & 1) + $$p$i | 0;
       if (($$$p$i | 0) > ($e$4$ph$i | 0) & ($e$4$ph$i | 0) > -5) {
        $$019$i = $t$0 + -1 | 0;
        $$216$i = $$$p$i + -1 - $e$4$ph$i | 0;
       } else {
        $$019$i = $t$0 + -2 | 0;
        $$216$i = $$$p$i + -1 | 0;
       }
       if ($fl$1$ & 8) {
        $$120$i = $$019$i;
        $$317$i = $$216$i;
        break;
       }
       do if ($$lcssa283$i) {
        $816 = HEAP32[$z$6$i$lcssa + -4 >> 2] | 0;
        if (!$816) {
         $j$2$i = 9;
         break;
        }
        if (($816 >>> 0) % 10 | 0) {
         $j$2$i = 0;
         break;
        }
        $i$3213$i = 10;
        $j$1214$i = 0;
        while (1) {
         $i$3213$i = $i$3213$i * 10 | 0;
         $821 = $j$1214$i + 1 | 0;
         if (($816 >>> 0) % ($i$3213$i >>> 0) | 0) {
          $$lcssa364 = $821;
          break;
         } else $j$1214$i = $821;
        }
        $j$2$i = $$lcssa364;
       } else $j$2$i = 9; while (0);
       $830 = (($z$6$i$lcssa - $634 >> 2) * 9 | 0) + -9 | 0;
       if (($$019$i | 32 | 0) == 102) {
        $831 = $830 - $j$2$i | 0;
        $$29$i = ($831 | 0) < 0 ? 0 : $831;
        $$120$i = $$019$i;
        $$317$i = ($$216$i | 0) < ($$29$i | 0) ? $$216$i : $$29$i;
        break;
       } else {
        $835 = $830 + $e$4$ph$i - $j$2$i | 0;
        $$31$i = ($835 | 0) < 0 ? 0 : $835;
        $$120$i = $$019$i;
        $$317$i = ($$216$i | 0) < ($$31$i | 0) ? $$216$i : $$31$i;
        break;
       }
      } else {
       $$120$i = $t$0;
       $$317$i = $$p$i;
      } while (0);
      $838 = ($$317$i | 0) != 0;
      if ($838) $842 = 1; else $842 = ($fl$1$ & 8 | 0) != 0;
      $841 = $842 & 1;
      $844 = ($$120$i | 32 | 0) == 102;
      if ($844) {
       $$pn$i = ($e$4$ph$i | 0) > 0 ? $e$4$ph$i : 0;
       $estr$2$i = 0;
      } else {
       $848 = ($e$4$ph$i | 0) < 0 ? $800 : $e$4$ph$i;
       if (($848 | 0) < 0) {
        $$05$i87$i = $7;
        $852 = $848;
        $853 = (($848 | 0) < 0) << 31 >> 31;
        while (1) {
         $854 = ___uremdi3($852 | 0, $853 | 0, 10, 0) | 0;
         $858 = $$05$i87$i + -1 | 0;
         HEAP8[$858 >> 0] = $854 | 48;
         $859 = ___udivdi3($852 | 0, $853 | 0, 10, 0) | 0;
         if ($853 >>> 0 > 9 | ($853 | 0) == 9 & $852 >>> 0 > 4294967295) {
          $$05$i87$i = $858;
          $852 = $859;
          $853 = tempRet0;
         } else {
          $$lcssa365 = $858;
          $1193 = $859;
          break;
         }
        }
        $$0$lcssa$i92$i = $$lcssa365;
        $$01$lcssa$off0$i93$i = $1193;
       } else {
        $$0$lcssa$i92$i = $7;
        $$01$lcssa$off0$i93$i = $848;
       }
       if (!$$01$lcssa$off0$i93$i) $estr$1$ph$i = $$0$lcssa$i92$i; else {
        $$12$i95$i = $$0$lcssa$i92$i;
        $y$03$i94$i = $$01$lcssa$off0$i93$i;
        while (1) {
         $870 = $$12$i95$i + -1 | 0;
         HEAP8[$870 >> 0] = ($y$03$i94$i >>> 0) % 10 | 0 | 48;
         if ($y$03$i94$i >>> 0 < 10) {
          $$lcssa367 = $870;
          break;
         } else {
          $$12$i95$i = $870;
          $y$03$i94$i = ($y$03$i94$i >>> 0) / 10 | 0;
         }
        }
        $estr$1$ph$i = $$lcssa367;
       }
       if (($9 - $estr$1$ph$i | 0) < 2) {
        $estr$1209$i = $estr$1$ph$i;
        while (1) {
         $876 = $estr$1209$i + -1 | 0;
         HEAP8[$876 >> 0] = 48;
         if (($9 - $876 | 0) < 2) $estr$1209$i = $876; else {
          $$lcssa368 = $876;
          break;
         }
        }
        $estr$1$lcssa$i = $$lcssa368;
       } else $estr$1$lcssa$i = $estr$1$ph$i;
       HEAP8[$estr$1$lcssa$i + -1 >> 0] = ($e$4$ph$i >> 31 & 2) + 43;
       $886 = $estr$1$lcssa$i + -2 | 0;
       HEAP8[$886 >> 0] = $$120$i;
       $$pn$i = $9 - $886 | 0;
       $estr$2$i = $886;
      }
      $891 = $pl$0$i + 1 + $$317$i + $841 + $$pn$i | 0;
      $892 = $fl$1$ & 73728;
      $894 = ($w$1 | 0) > ($891 | 0);
      if (($892 | 0) == 0 & $894) {
       $895 = $w$1 - $891 | 0;
       _memset($pad$i | 0, 32, ($895 >>> 0 > 256 ? 256 : $895) | 0) | 0;
       if ($895 >>> 0 > 255) {
        $$01$i103$i = $895;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i103$i = $$01$i103$i + -256 | 0;
        } while ($$01$i103$i >>> 0 > 255);
        $$0$lcssa$i105$i = $895 & 255;
       } else $$0$lcssa$i105$i = $895;
       ___fwritex($pad$i, $$0$lcssa$i105$i, $f) | 0;
      }
      ___fwritex($prefix$0$i, $pl$0$i, $f) | 0;
      if (($892 | 0) == 65536 & $894) {
       $903 = $w$1 - $891 | 0;
       _memset($pad$i | 0, 48, ($903 >>> 0 > 256 ? 256 : $903) | 0) | 0;
       if ($903 >>> 0 > 255) {
        $$01$i110$i = $903;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i110$i = $$01$i110$i + -256 | 0;
        } while ($$01$i110$i >>> 0 > 255);
        $$0$lcssa$i112$i = $903 & 255;
       } else $$0$lcssa$i112$i = $903;
       ___fwritex($pad$i, $$0$lcssa$i112$i, $f) | 0;
      }
      if ($844) {
       $r$0$a$8$i = $a$8$ph$i >>> 0 > $$39$i >>> 0 ? $$39$i : $a$8$ph$i;
       $911 = ~$634;
       $912 = ~$a$8$ph294$i;
       $umax$i = $911 >>> 0 > $912 >>> 0 ? $911 : $912;
       $914 = 3 - $umax$i | 0;
       $uglygep296$i = $$39$i + 1 | 0;
       $uglygep300301$i = ($914 >>> 0 > $uglygep296$i >>> 0 ? $914 : $uglygep296$i) + $umax$i | 0;
       $916 = ~$umax$i;
       $d$4199$i = $r$0$a$8$i;
       while (1) {
        $917 = HEAP32[$d$4199$i >> 2] | 0;
        if (!$917) $$1$lcssa$i120$i = $14; else {
         $$12$i118$i = $14;
         $y$03$i117$i = $917;
         while (1) {
          $922 = $$12$i118$i + -1 | 0;
          HEAP8[$922 >> 0] = ($y$03$i117$i >>> 0) % 10 | 0 | 48;
          if ($y$03$i117$i >>> 0 < 10) {
           $$lcssa372 = $922;
           break;
          } else {
           $$12$i118$i = $922;
           $y$03$i117$i = ($y$03$i117$i >>> 0) / 10 | 0;
          }
         }
         $$1$lcssa$i120$i = $$lcssa372;
        }
        do if (($d$4199$i | 0) == ($r$0$a$8$i | 0)) {
         if (($$1$lcssa$i120$i | 0) != ($14 | 0)) {
          $s7$1$i = $$1$lcssa$i120$i;
          break;
         }
         HEAP8[$16 >> 0] = 48;
         $s7$1$i = $16;
        } else {
         if ($$1$lcssa$i120$i >>> 0 <= $buf$i >>> 0) {
          $s7$1$i = $$1$lcssa$i120$i;
          break;
         }
         $s7$0196$i = $$1$lcssa$i120$i;
         while (1) {
          $927 = $s7$0196$i + -1 | 0;
          HEAP8[$927 >> 0] = 48;
          if ($927 >>> 0 > $buf$i >>> 0) $s7$0196$i = $927; else {
           $$lcssa373 = $927;
           break;
          }
         }
         $s7$1$i = $$lcssa373;
        } while (0);
        ___fwritex($s7$1$i, $15 - $s7$1$i | 0, $f) | 0;
        $932 = $d$4199$i + 4 | 0;
        if ($932 >>> 0 > $$39$i >>> 0) {
         $$lcssa374 = $932;
         break;
        } else $d$4199$i = $932;
       }
       if (!(($fl$1$ & 8 | 0) == 0 & ($838 ^ 1))) ___fwritex(43448, 1, $f) | 0;
       if (($$317$i | 0) > 0 & $$lcssa374 >>> 0 < $z$6$i$lcssa >>> 0) {
        $$418193$i = $$317$i;
        $955 = ($uglygep300301$i & -4) + $916 | 0;
        $d$5192$i = $$lcssa374;
        while (1) {
         $941 = HEAP32[$d$5192$i >> 2] | 0;
         if (!$941) {
          $s8$0188$i$ph = $14;
          label = 361;
         } else {
          $$12$i127$i = $14;
          $y$03$i126$i = $941;
          while (1) {
           $946 = $$12$i127$i + -1 | 0;
           HEAP8[$946 >> 0] = ($y$03$i126$i >>> 0) % 10 | 0 | 48;
           if ($y$03$i126$i >>> 0 < 10) {
            $$lcssa375 = $946;
            break;
           } else {
            $$12$i127$i = $946;
            $y$03$i126$i = ($y$03$i126$i >>> 0) / 10 | 0;
           }
          }
          if ($$lcssa375 >>> 0 > $buf$i >>> 0) {
           $s8$0188$i$ph = $$lcssa375;
           label = 361;
          } else $s8$0$lcssa$i = $$lcssa375;
         }
         if ((label | 0) == 361) {
          label = 0;
          $s8$0188$i = $s8$0188$i$ph;
          while (1) {
           $950 = $s8$0188$i + -1 | 0;
           HEAP8[$950 >> 0] = 48;
           if ($950 >>> 0 > $buf$i >>> 0) $s8$0188$i = $950; else {
            $$lcssa376 = $950;
            break;
           }
          }
          $s8$0$lcssa$i = $$lcssa376;
         }
         $952 = ($$418193$i | 0) > 9;
         ___fwritex($s8$0$lcssa$i, $952 ? 9 : $$418193$i, $f) | 0;
         $954 = $955 + 8 | 0;
         $956 = $$418193$i + -9 | 0;
         if ($952 & $954 >>> 0 < $z$6$i$lcssa >>> 0) {
          $955$phi = $d$5192$i;
          $$418193$i = $956;
          $d$5192$i = $954;
          $955 = $955$phi;
         } else {
          $$lcssa377 = $956;
          break;
         }
        }
        $$418$lcssa$i = $$lcssa377;
       } else $$418$lcssa$i = $$317$i;
       if (($$418$lcssa$i | 0) > 0) {
        _memset($pad$i | 0, 48, ($$418$lcssa$i >>> 0 > 256 ? 256 : $$418$lcssa$i) | 0) | 0;
        if ($$418$lcssa$i >>> 0 > 255) {
         $$01$i134$i = $$418$lcssa$i;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i134$i = $$01$i134$i + -256 | 0;
         } while ($$01$i134$i >>> 0 > 255);
         $$0$lcssa$i136$i = $$418$lcssa$i & 255;
        } else $$0$lcssa$i136$i = $$418$lcssa$i;
        ___fwritex($pad$i, $$0$lcssa$i136$i, $f) | 0;
       }
      } else {
       $z$6$$i = $$lcssa283$i ? $z$6$i$lcssa : $a$8$ph$i + 4 | 0;
       do if (($$317$i | 0) > -1) {
        $968 = ($fl$1$ & 8 | 0) == 0;
        $$5205$i = $$317$i;
        $d$6204$i = $a$8$ph$i;
        while (1) {
         $969 = HEAP32[$d$6204$i >> 2] | 0;
         if (!$969) label = 380; else {
          $$12$i142$i = $14;
          $y$03$i141$i = $969;
          while (1) {
           $974 = $$12$i142$i + -1 | 0;
           HEAP8[$974 >> 0] = ($y$03$i141$i >>> 0) % 10 | 0 | 48;
           if ($y$03$i141$i >>> 0 < 10) {
            $$12$i142$i$lcssa = $$12$i142$i;
            $$lcssa369 = $974;
            break;
           } else {
            $$12$i142$i = $974;
            $y$03$i141$i = ($y$03$i141$i >>> 0) / 10 | 0;
           }
          }
          if (($$lcssa369 | 0) == ($14 | 0)) label = 380; else {
           $1195 = $$12$i142$i$lcssa;
           $s9$0$i = $$lcssa369;
          }
         }
         if ((label | 0) == 380) {
          label = 0;
          HEAP8[$16 >> 0] = 48;
          $1195 = $14;
          $s9$0$i = $16;
         }
         do if (($d$6204$i | 0) == ($a$8$ph$i | 0)) {
          ___fwritex($s9$0$i, 1, $f) | 0;
          if ($968 & ($$5205$i | 0) < 1) {
           $s9$2$i = $1195;
           break;
          }
          ___fwritex(43448, 1, $f) | 0;
          $s9$2$i = $1195;
         } else {
          if ($s9$0$i >>> 0 <= $buf$i >>> 0) {
           $s9$2$i = $s9$0$i;
           break;
          }
          $s9$1200$i = $s9$0$i;
          while (1) {
           $980 = $s9$1200$i + -1 | 0;
           HEAP8[$980 >> 0] = 48;
           if ($980 >>> 0 > $buf$i >>> 0) $s9$1200$i = $980; else {
            $$lcssa370 = $980;
            break;
           }
          }
          $s9$2$i = $$lcssa370;
         } while (0);
         $984 = $15 - $s9$2$i | 0;
         ___fwritex($s9$2$i, ($$5205$i | 0) > ($984 | 0) ? $984 : $$5205$i, $f) | 0;
         $986 = $$5205$i - $984 | 0;
         $d$6204$i = $d$6204$i + 4 | 0;
         if (!($d$6204$i >>> 0 < $z$6$$i >>> 0 & ($986 | 0) > -1)) {
          $$lcssa371 = $986;
          break;
         } else $$5205$i = $986;
        }
        if (($$lcssa371 | 0) <= 0) break;
        _memset($pad$i | 0, 48, ($$lcssa371 >>> 0 > 256 ? 256 : $$lcssa371) | 0) | 0;
        if ($$lcssa371 >>> 0 > 255) {
         $$01$i149$i = $$lcssa371;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i149$i = $$01$i149$i + -256 | 0;
         } while ($$01$i149$i >>> 0 > 255);
         $$0$lcssa$i151$i = $$lcssa371 & 255;
        } else $$0$lcssa$i151$i = $$lcssa371;
        ___fwritex($pad$i, $$0$lcssa$i151$i, $f) | 0;
       } else {} while (0);
       ___fwritex($estr$2$i, $9 - $estr$2$i | 0, $f) | 0;
      }
      if (($892 | 0) == 8192 & $894) {
       $1000 = $w$1 - $891 | 0;
       _memset($pad$i | 0, 32, ($1000 >>> 0 > 256 ? 256 : $1000) | 0) | 0;
       if ($1000 >>> 0 > 255) {
        $$01$i$i = $1000;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i$i = $$01$i$i + -256 | 0;
        } while ($$01$i$i >>> 0 > 255);
        $$0$lcssa$i$i = $1000 & 255;
       } else $$0$lcssa$i$i = $1000;
       ___fwritex($pad$i, $$0$lcssa$i$i, $f) | 0;
      }
      $$0$i = $894 ? $w$1 : $891;
     } else {
      $448 = ($t$0 & 32 | 0) != 0;
      if ($$013$i != $$013$i | 0.0 != 0.0) {
       $pl$1$i = 0;
       $s1$0$i = $448 ? 43416 : 43424;
      } else {
       $pl$1$i = $pl$0$i;
       $s1$0$i = $448 ? 43400 : 43408;
      }
      $452 = $pl$1$i + 3 | 0;
      $455 = ($w$1 | 0) > ($452 | 0);
      if (($fl$1$ & 8192 | 0) == 0 & $455) {
       $456 = $w$1 - $452 | 0;
       _memset($pad$i | 0, 32, ($456 >>> 0 > 256 ? 256 : $456) | 0) | 0;
       if ($456 >>> 0 > 255) {
        $$01$i45$i = $456;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i45$i = $$01$i45$i + -256 | 0;
        } while ($$01$i45$i >>> 0 > 255);
        $$0$lcssa$i47$i = $456 & 255;
       } else $$0$lcssa$i47$i = $456;
       ___fwritex($pad$i, $$0$lcssa$i47$i, $f) | 0;
      }
      ___fwritex($prefix$0$i, $pl$1$i, $f) | 0;
      ___fwritex($s1$0$i, 3, $f) | 0;
      if (($fl$1$ & 73728 | 0) == 8192 & $455) {
       $465 = $w$1 - $452 | 0;
       _memset($pad$i | 0, 32, ($465 >>> 0 > 256 ? 256 : $465) | 0) | 0;
       if ($465 >>> 0 > 255) {
        $$01$i52$i = $465;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i52$i = $$01$i52$i + -256 | 0;
        } while ($$01$i52$i >>> 0 > 255);
        $$0$lcssa$i54$i = $465 & 255;
       } else $$0$lcssa$i54$i = $465;
       ___fwritex($pad$i, $$0$lcssa$i54$i, $f) | 0;
      }
      $$0$i = $455 ? $w$1 : $452;
     } while (0);
     $$be = $1182;
     $$be341 = $294;
     $$be342 = $267;
     $l$0$be = $$0$i;
     $l10n$0$be = $l10n$3;
     break L24;
     break;
    }
   case 110:
    {
     switch ($st$0$lcssa351 | 0) {
     case 4:
      {
       HEAP8[$267 >> 0] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 0:
      {
       HEAP32[$267 >> 2] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 1:
      {
       HEAP32[$267 >> 2] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 7:
      {
       $285 = $267;
       HEAP32[$285 >> 2] = $cnt$1;
       HEAP32[$285 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 3:
      {
       HEAP16[$267 >> 1] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 2:
      {
       $273 = $267;
       HEAP32[$273 >> 2] = $cnt$1;
       HEAP32[$273 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 6:
      {
       HEAP32[$267 >> 2] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     default:
      {
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
      }
     }
     break;
    }
   case 117:
    {
     $339 = $294;
     $341 = $267;
     $pl$0 = 0;
     $prefix$0 = 43352;
     label = 96;
     break;
    }
   case 111:
    {
     $317 = ($267 | 0) == 0 & ($294 | 0) == 0;
     if ($317) $$0$lcssa$i52 = $2; else {
      $$03$i49 = $2;
      $319 = $267;
      $323 = $294;
      while (1) {
       $322 = $$03$i49 + -1 | 0;
       HEAP8[$322 >> 0] = $319 & 7 | 48;
       $319 = _bitshift64Lshr($319 | 0, $323 | 0, 3) | 0;
       $323 = tempRet0;
       if (($319 | 0) == 0 & ($323 | 0) == 0) {
        $$lcssa385 = $322;
        break;
       } else $$03$i49 = $322;
      }
      $$0$lcssa$i52 = $$lcssa385;
     }
     $or$cond19 = ($fl$1$ & 8 | 0) == 0 | $317;
     $369 = $267;
     $371 = $294;
     $a$0 = $$0$lcssa$i52;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = $or$cond19 & 1 ^ 1;
     $prefix$1 = $or$cond19 ? 43352 : 43357;
     label = 104;
     break;
    }
   default:
    {
     $1183 = $294;
     $1184 = $267;
     $a$2 = $23;
     $fl$6 = $fl$1$;
     $p$5 = $p$0;
     $pl$2 = 0;
     $prefix$2 = 43352;
     $z$2 = $2;
    }
   } while (0);
   do if ((label | 0) == 82) {
    label = 0;
    $292 = $t$1 & 32;
    if (($267 | 0) == 0 & ($294 | 0) == 0) {
     $369 = $267;
     $371 = $294;
     $a$0 = $2;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 0;
     $prefix$1 = 43352;
     label = 104;
    } else {
     $$012$i = $2;
     $298 = $267;
     $305 = $294;
     while (1) {
      $304 = $$012$i + -1 | 0;
      HEAP8[$304 >> 0] = HEAPU8[43432 + ($298 & 15) >> 0] | $292;
      $298 = _bitshift64Lshr($298 | 0, $305 | 0, 4) | 0;
      $305 = tempRet0;
      if (($298 | 0) == 0 & ($305 | 0) == 0) {
       $$lcssa386 = $304;
       break;
      } else $$012$i = $304;
     }
     if (!($fl$3 & 8)) {
      $369 = $267;
      $371 = $294;
      $a$0 = $$lcssa386;
      $fl$4 = $fl$3;
      $p$2 = $p$1;
      $pl$1 = 0;
      $prefix$1 = 43352;
      label = 104;
     } else {
      $369 = $267;
      $371 = $294;
      $a$0 = $$lcssa386;
      $fl$4 = $fl$3;
      $p$2 = $p$1;
      $pl$1 = 2;
      $prefix$1 = 43352 + ($t$1 >> 4) | 0;
      label = 104;
     }
    }
   } else if ((label | 0) == 96) {
    label = 0;
    if ($339 >>> 0 > 0 | ($339 | 0) == 0 & $341 >>> 0 > 4294967295) {
     $$05$i = $2;
     $346 = $341;
     $347 = $339;
     while (1) {
      $348 = ___uremdi3($346 | 0, $347 | 0, 10, 0) | 0;
      $352 = $$05$i + -1 | 0;
      HEAP8[$352 >> 0] = $348 | 48;
      $353 = ___udivdi3($346 | 0, $347 | 0, 10, 0) | 0;
      if ($347 >>> 0 > 9 | ($347 | 0) == 9 & $346 >>> 0 > 4294967295) {
       $$05$i = $352;
       $346 = $353;
       $347 = tempRet0;
      } else {
       $$lcssa382 = $352;
       $1185 = $353;
       break;
      }
     }
     $$0$lcssa$i54 = $$lcssa382;
     $$01$lcssa$off0$i = $1185;
    } else {
     $$0$lcssa$i54 = $2;
     $$01$lcssa$off0$i = $341;
    }
    if (!$$01$lcssa$off0$i) {
     $369 = $341;
     $371 = $339;
     $a$0 = $$0$lcssa$i54;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = $pl$0;
     $prefix$1 = $prefix$0;
     label = 104;
    } else {
     $$12$i = $$0$lcssa$i54;
     $y$03$i = $$01$lcssa$off0$i;
     while (1) {
      $364 = $$12$i + -1 | 0;
      HEAP8[$364 >> 0] = ($y$03$i >>> 0) % 10 | 0 | 48;
      if ($y$03$i >>> 0 < 10) {
       $$lcssa384 = $364;
       break;
      } else {
       $$12$i = $364;
       $y$03$i = ($y$03$i >>> 0) / 10 | 0;
      }
     }
     $369 = $341;
     $371 = $339;
     $a$0 = $$lcssa384;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = $pl$0;
     $prefix$1 = $prefix$0;
     label = 104;
    }
   } else if ((label | 0) == 109) {
    label = 0;
    $387 = _memchr($a$1, 0, $p$0) | 0;
    if (!$387) {
     $1183 = $294;
     $1184 = $267;
     $a$2 = $a$1;
     $fl$6 = $266;
     $p$5 = $p$0;
     $pl$2 = 0;
     $prefix$2 = 43352;
     $z$2 = $a$1 + $p$0 | 0;
     break;
    } else {
     $1183 = $294;
     $1184 = $267;
     $a$2 = $a$1;
     $fl$6 = $266;
     $p$5 = $387 - $a$1 | 0;
     $pl$2 = 0;
     $prefix$2 = 43352;
     $z$2 = $387;
     break;
    }
   } else if ((label | 0) == 114) {
    label = 0;
    $i$0176 = 0;
    $l$1175 = 0;
    $ws$0177 = $1187;
    while (1) {
     $395 = HEAP32[$ws$0177 >> 2] | 0;
     if (!$395) {
      $i$0$lcssa = $i$0176;
      $l$2 = $l$1175;
      break;
     }
     $397 = _wctomb($mb, $395) | 0;
     if (($397 | 0) < 0 | $397 >>> 0 > ($p$4271 - $i$0176 | 0) >>> 0) {
      $i$0$lcssa = $i$0176;
      $l$2 = $397;
      break;
     }
     $402 = $397 + $i$0176 | 0;
     if ($p$4271 >>> 0 > $402 >>> 0) {
      $i$0176 = $402;
      $l$1175 = $397;
      $ws$0177 = $ws$0177 + 4 | 0;
     } else {
      $i$0$lcssa = $402;
      $l$2 = $397;
      break;
     }
    }
    if (($l$2 | 0) < 0) {
     $$0$ph340 = -1;
     label = 453;
     break L1;
    } else {
     $1189 = $1188;
     $1190 = $1187;
     $i$0$lcssa272 = $i$0$lcssa;
     label = 119;
    }
   } while (0);
   if ((label | 0) == 104) {
    label = 0;
    $$fl$4 = ($p$2 | 0) > -1 ? $fl$4 & -65537 : $fl$4;
    $373 = ($369 | 0) != 0 | ($371 | 0) != 0;
    if ($373 | ($p$2 | 0) != 0) {
     $379 = ($373 & 1 ^ 1) + ($3 - $a$0) | 0;
     $1183 = $371;
     $1184 = $369;
     $a$2 = $a$0;
     $fl$6 = $$fl$4;
     $p$5 = ($p$2 | 0) > ($379 | 0) ? $p$2 : $379;
     $pl$2 = $pl$1;
     $prefix$2 = $prefix$1;
     $z$2 = $2;
    } else {
     $1183 = $371;
     $1184 = $369;
     $a$2 = $2;
     $fl$6 = $$fl$4;
     $p$5 = 0;
     $pl$2 = $pl$1;
     $prefix$2 = $prefix$1;
     $z$2 = $2;
    }
   } else if ((label | 0) == 119) {
    label = 0;
    $405 = $fl$1$ & 73728;
    $407 = ($w$1 | 0) > ($i$0$lcssa272 | 0);
    if (($405 | 0) == 0 & $407) {
     $408 = $w$1 - $i$0$lcssa272 | 0;
     _memset($pad$i | 0, 32, ($408 >>> 0 > 256 ? 256 : $408) | 0) | 0;
     if ($408 >>> 0 > 255) {
      $$01$i67 = $408;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i67 = $$01$i67 + -256 | 0;
      } while ($$01$i67 >>> 0 > 255);
      $$0$lcssa$i69 = $408 & 255;
     } else $$0$lcssa$i69 = $408;
     ___fwritex($pad$i, $$0$lcssa$i69, $f) | 0;
    }
    if ($i$0$lcssa272) {
     $i$1187 = 0;
     $ws$1188 = $1190;
     while (1) {
      $416 = HEAP32[$ws$1188 >> 2] | 0;
      if (!$416) break;
      $418 = _wctomb($mb, $416) | 0;
      $i$1187 = $418 + $i$1187 | 0;
      if (($i$1187 | 0) > ($i$0$lcssa272 | 0)) break;
      ___fwritex($mb, $418, $f) | 0;
      if ($i$1187 >>> 0 >= $i$0$lcssa272 >>> 0) break; else $ws$1188 = $ws$1188 + 4 | 0;
     }
    }
    if (($405 | 0) == 8192 & $407) {
     $424 = $w$1 - $i$0$lcssa272 | 0;
     _memset($pad$i | 0, 32, ($424 >>> 0 > 256 ? 256 : $424) | 0) | 0;
     if ($424 >>> 0 > 255) {
      $$01$i74 = $424;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i74 = $$01$i74 + -256 | 0;
      } while ($$01$i74 >>> 0 > 255);
      $$0$lcssa$i76 = $424 & 255;
     } else $$0$lcssa$i76 = $424;
     ___fwritex($pad$i, $$0$lcssa$i76, $f) | 0;
    }
    $$be = $1182;
    $$be341 = $294;
    $$be342 = $1189;
    $l$0$be = $407 ? $w$1 : $i$0$lcssa272;
    $l10n$0$be = $l10n$3;
    break;
   }
   $1009 = $z$2 - $a$2 | 0;
   $$p$5 = ($p$5 | 0) < ($1009 | 0) ? $1009 : $p$5;
   $1011 = $pl$2 + $$p$5 | 0;
   $w$2 = ($w$1 | 0) < ($1011 | 0) ? $1011 : $w$1;
   $1013 = $fl$6 & 73728;
   $1015 = ($w$2 | 0) > ($1011 | 0);
   if (($1013 | 0) == 0 & $1015) {
    $1016 = $w$2 - $1011 | 0;
    _memset($pad$i | 0, 32, ($1016 >>> 0 > 256 ? 256 : $1016) | 0) | 0;
    if ($1016 >>> 0 > 255) {
     $$01$i84 = $1016;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i84 = $$01$i84 + -256 | 0;
     } while ($$01$i84 >>> 0 > 255);
     $$0$lcssa$i86 = $1016 & 255;
    } else $$0$lcssa$i86 = $1016;
    ___fwritex($pad$i, $$0$lcssa$i86, $f) | 0;
   }
   ___fwritex($prefix$2, $pl$2, $f) | 0;
   if (($1013 | 0) == 65536 & $1015) {
    $1024 = $w$2 - $1011 | 0;
    _memset($pad$i | 0, 48, ($1024 >>> 0 > 256 ? 256 : $1024) | 0) | 0;
    if ($1024 >>> 0 > 255) {
     $$01$i60 = $1024;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i60 = $$01$i60 + -256 | 0;
     } while ($$01$i60 >>> 0 > 255);
     $$0$lcssa$i62 = $1024 & 255;
    } else $$0$lcssa$i62 = $1024;
    ___fwritex($pad$i, $$0$lcssa$i62, $f) | 0;
   }
   if (($$p$5 | 0) > ($1009 | 0)) {
    $1032 = $$p$5 - $1009 | 0;
    _memset($pad$i | 0, 48, ($1032 >>> 0 > 256 ? 256 : $1032) | 0) | 0;
    if ($1032 >>> 0 > 255) {
     $$01$i45 = $1032;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i45 = $$01$i45 + -256 | 0;
     } while ($$01$i45 >>> 0 > 255);
     $$0$lcssa$i47 = $1032 & 255;
    } else $$0$lcssa$i47 = $1032;
    ___fwritex($pad$i, $$0$lcssa$i47, $f) | 0;
   }
   ___fwritex($a$2, $1009, $f) | 0;
   if (($1013 | 0) == 8192 & $1015) {
    $1040 = $w$2 - $1011 | 0;
    _memset($pad$i | 0, 32, ($1040 >>> 0 > 256 ? 256 : $1040) | 0) | 0;
    if ($1040 >>> 0 > 255) {
     $$01$i = $1040;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i = $$01$i + -256 | 0;
     } while ($$01$i >>> 0 > 255);
     $$0$lcssa$i = $1040 & 255;
    } else $$0$lcssa$i = $1040;
    ___fwritex($pad$i, $$0$lcssa$i, $f) | 0;
   }
   $$be = $1182;
   $$be341 = $1183;
   $$be342 = $1184;
   $l$0$be = $w$2;
   $l10n$0$be = $l10n$3;
  } else {
   $$be = $$lcssa107;
   $$be341 = $1175;
   $$be342 = $1176;
   $l$0$be = $37;
   $l10n$0$be = $l10n$0;
  } while (0);
  $1175 = $$be341;
  $1176 = $$be342;
  $23 = $$be;
  $cnt$0 = $cnt$1;
  $l$0 = $l$0$be;
  $l10n$0 = $l10n$0$be;
 }
 if ((label | 0) == 429) {
  if ($f) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (!$l10n$0$lcssa) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $i$2163 = 1;
  while (1) {
   $1050 = HEAP32[$nl_type + ($i$2163 << 2) >> 2] | 0;
   if (!$1050) {
    $i$2163$lcssa = $i$2163;
    break;
   }
   $1053 = $nl_arg + ($i$2163 << 3) | 0;
   L614 : do if ($1050 >>> 0 <= 20) do switch ($1050 | 0) {
   case 16:
    {
     $1148 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1149 = HEAP32[$1148 >> 2] | 0;
     HEAP32[$ap >> 2] = $1148 + 4;
     $1150 = $1053;
     HEAP32[$1150 >> 2] = $1149 & 255;
     HEAP32[$1150 + 4 >> 2] = 0;
     break L614;
     break;
    }
   case 13:
    {
     $1107 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1108 = HEAP32[$1107 >> 2] | 0;
     HEAP32[$ap >> 2] = $1107 + 4;
     $1110 = ($1108 & 65535) << 16 >> 16;
     $1113 = $1053;
     HEAP32[$1113 >> 2] = $1110;
     HEAP32[$1113 + 4 >> 2] = (($1110 | 0) < 0) << 31 >> 31;
     break L614;
     break;
    }
   case 18:
    {
     $1166 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1167 = +HEAPF64[$1166 >> 3];
     HEAP32[$ap >> 2] = $1166 + 8;
     HEAPF64[$1053 >> 3] = $1167;
     break L614;
     break;
    }
   case 9:
    {
     $1060 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1061 = HEAP32[$1060 >> 2] | 0;
     HEAP32[$ap >> 2] = $1060 + 4;
     HEAP32[$1053 >> 2] = $1061;
     break L614;
     break;
    }
   case 15:
    {
     $1133 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1134 = HEAP32[$1133 >> 2] | 0;
     HEAP32[$ap >> 2] = $1133 + 4;
     $1136 = ($1134 & 255) << 24 >> 24;
     $1139 = $1053;
     HEAP32[$1139 >> 2] = $1136;
     HEAP32[$1139 + 4 >> 2] = (($1136 | 0) < 0) << 31 >> 31;
     break L614;
     break;
    }
   case 10:
    {
     $1067 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1068 = HEAP32[$1067 >> 2] | 0;
     HEAP32[$ap >> 2] = $1067 + 4;
     $1071 = $1053;
     HEAP32[$1071 >> 2] = $1068;
     HEAP32[$1071 + 4 >> 2] = (($1068 | 0) < 0) << 31 >> 31;
     break L614;
     break;
    }
   case 12:
    {
     $1091 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1092 = $1091;
     $1094 = HEAP32[$1092 >> 2] | 0;
     $1097 = HEAP32[$1092 + 4 >> 2] | 0;
     HEAP32[$ap >> 2] = $1091 + 8;
     $1098 = $1053;
     HEAP32[$1098 >> 2] = $1094;
     HEAP32[$1098 + 4 >> 2] = $1097;
     break L614;
     break;
    }
   case 17:
    {
     $1159 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1160 = +HEAPF64[$1159 >> 3];
     HEAP32[$ap >> 2] = $1159 + 8;
     HEAPF64[$1053 >> 3] = $1160;
     break L614;
     break;
    }
   case 11:
    {
     $1080 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1081 = HEAP32[$1080 >> 2] | 0;
     HEAP32[$ap >> 2] = $1080 + 4;
     $1082 = $1053;
     HEAP32[$1082 >> 2] = $1081;
     HEAP32[$1082 + 4 >> 2] = 0;
     break L614;
     break;
    }
   case 14:
    {
     $1122 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1123 = HEAP32[$1122 >> 2] | 0;
     HEAP32[$ap >> 2] = $1122 + 4;
     $1124 = $1053;
     HEAP32[$1124 >> 2] = $1123 & 65535;
     HEAP32[$1124 + 4 >> 2] = 0;
     break L614;
     break;
    }
   default:
    break L614;
   } while (0); while (0);
   $i$2163 = $i$2163 + 1 | 0;
   if (($i$2163 | 0) >= 10) {
    label = 451;
    break;
   }
  }
  if ((label | 0) == 451) {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (($i$2163$lcssa | 0) >= 10) {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $i$3161 = $i$2163$lcssa;
  while (1) {
   if (HEAP32[$nl_type + ($i$3161 << 2) >> 2] | 0) {
    $$0$ph = -1;
    break;
   }
   $i$3161 = $i$3161 + 1 | 0;
   if (($i$3161 | 0) >= 10) {
    $$0$ph = 1;
    break;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 452) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 453) {
  $$0 = $$0$ph340;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __Z20jsonnet_builtin_declm($agg$result, $builtin) {
 $agg$result = $agg$result | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$03 = 0, $$035 = 0, $$036 = 0, $$037 = 0, $$1 = 0, $$10 = 0, $$11 = 0, $$110 = 0, $$12 = 0, $$1221 = 0, $$13 = 0, $$1322 = 0, $$14 = 0, $$15 = 0, $$16 = 0, $$17 = 0, $$18 = 0, $$19 = 0, $$2 = 0, $$20 = 0, $$21 = 0, $$22 = 0, $$2231 = 0, $$23 = 0, $$24 = 0, $$25 = 0, $$2534 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$pre = 0, $$pre728 = 0, $$pre729 = 0, $$pre730 = 0, $$pre731 = 0, $$pre732 = 0, $$pre733 = 0, $$pre734 = 0, $$pre735 = 0, $$pre736 = 0, $$pre737 = 0, $$pre738 = 0, $$pre739 = 0, $$pre740 = 0, $$pre741 = 0, $$pre742 = 0, $$pre743 = 0, $$pre744 = 0, $$pre745 = 0, $$pre746 = 0, $$pre747 = 0, $$pre748 = 0, $$pre749 = 0, $$pre750 = 0, $$pre751 = 0, $$sink$index23 = 0, $$sink801$index35 = 0, $$sink802$index47 = 0, $$sink803$index59 = 0, $$sink804$index71 = 0, $$sink805$index83 = 0, $$sink806$index95 = 0, $$sink807$index107 = 0, $$sink808$index119 = 0, $$sink809$index131 = 0, $$sink810$index157 = 0, $$sink811$index169 = 0, $$sink812$index181 = 0, $$sink813$index193 = 0, $$sink814$index205 = 0, $$sink815$index217 = 0, $$sink816$index229 = 0, $$sink817$index241 = 0, $$sink818$index260 = 0, $$sink819$index272 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $11 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $123 = 0, $124 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $138 = 0, $14 = 0, $140 = 0, $141 = 0, $143 = 0, $145 = 0, $146 = 0, $149 = 0, $15 = 0, $150 = 0, $152 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $161 = 0, $164 = 0, $166 = 0, $167 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $187 = 0, $19 = 0, $190 = 0, $192 = 0, $193 = 0, $195 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $201 = 0, $202 = 0, $204 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $213 = 0, $216 = 0, $218 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $224 = 0, $227 = 0, $228 = 0, $23 = 0, $230 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $239 = 0, $24 = 0, $242 = 0, $244 = 0, $245 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $253 = 0, $254 = 0, $256 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $265 = 0, $268 = 0, $27 = 0, $270 = 0, $271 = 0, $273 = 0, $275 = 0, $276 = 0, $279 = 0, $280 = 0, $282 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $29 = 0, $291 = 0, $294 = 0, $296 = 0, $297 = 0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $302 = 0, $305 = 0, $306 = 0, $308 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $317 = 0, $32 = 0, $320 = 0, $322 = 0, $323 = 0, $325 = 0, $327 = 0, $328 = 0, $33 = 0, $331 = 0, $332 = 0, $334 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $343 = 0, $346 = 0, $348 = 0, $349 = 0, $35 = 0, $351 = 0, $353 = 0, $354 = 0, $357 = 0, $358 = 0, $360 = 0, $361 = 0, $363 = 0, $364 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $372 = 0, $374 = 0, $376 = 0, $378 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $385 = 0, $386 = 0, $389 = 0, $390 = 0, $391 = 0, $394 = 0, $397 = 0, $398 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $409 = 0, $411 = 0, $413 = 0, $415 = 0, $417 = 0, $418 = 0, $42 = 0, $420 = 0, $422 = 0, $423 = 0, $426 = 0, $427 = 0, $428 = 0, $431 = 0, $434 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $443 = 0, $446 = 0, $448 = 0, $449 = 0, $451 = 0, $453 = 0, $454 = 0, $457 = 0, $458 = 0, $46 = 0, $460 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $469 = 0, $47 = 0, $472 = 0, $474 = 0, $475 = 0, $477 = 0, $479 = 0, $480 = 0, $483 = 0, $484 = 0, $486 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $495 = 0, $498 = 0, $5 = 0, $500 = 0, $501 = 0, $503 = 0, $505 = 0, $506 = 0, $509 = 0, $51 = 0, $510 = 0, $512 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $52 = 0, $521 = 0, $524 = 0, $526 = 0, $527 = 0, $529 = 0, $531 = 0, $532 = 0, $535 = 0, $536 = 0, $538 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $547 = 0, $55 = 0, $550 = 0, $552 = 0, $553 = 0, $555 = 0, $557 = 0, $558 = 0, $56 = 0, $561 = 0, $562 = 0, $564 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $573 = 0, $576 = 0, $578 = 0, $579 = 0, $581 = 0, $583 = 0, $584 = 0, $587 = 0, $588 = 0, $590 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $599 = 0, $6 = 0, $60 = 0, $602 = 0, $604 = 0, $605 = 0, $607 = 0, $609 = 0, $610 = 0, $613 = 0, $614 = 0, $616 = 0, $618 = 0, $619 = 0, $620 = 0, $621 = 0, $622 = 0, $625 = 0, $628 = 0, $63 = 0, $630 = 0, $631 = 0, $633 = 0, $635 = 0, $636 = 0, $639 = 0, $64 = 0, $640 = 0, $642 = 0, $643 = 0, $645 = 0, $646 = 0, $648 = 0, $649 = 0, $650 = 0, $651 = 0, $654 = 0, $656 = 0, $658 = 0, $66 = 0, $660 = 0, $662 = 0, $663 = 0, $665 = 0, $667 = 0, $668 = 0, $67 = 0, $671 = 0, $672 = 0, $673 = 0, $676 = 0, $679 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $688 = 0, $69 = 0, $691 = 0, $693 = 0, $694 = 0, $696 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $702 = 0, $703 = 0, $705 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $714 = 0, $717 = 0, $719 = 0, $72 = 0, $720 = 0, $722 = 0, $724 = 0, $725 = 0, $728 = 0, $729 = 0, $732 = 0, $737 = 0, $738 = 0, $743 = 0, $744 = 0, $746 = 0, $747 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $84 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0, $lpad$phi$i110760$index = 0, $lpad$phi$i110760$index41 = 0, $lpad$phi$i130762$index = 0, $lpad$phi$i130762$index53 = 0, $lpad$phi$i150764$index = 0, $lpad$phi$i150764$index65 = 0, $lpad$phi$i170766$index = 0, $lpad$phi$i170766$index77 = 0, $lpad$phi$i190768$index = 0, $lpad$phi$i190768$index89 = 0, $lpad$phi$i210770$index = 0, $lpad$phi$i210770$index101 = 0, $lpad$phi$i230772$index = 0, $lpad$phi$i230772$index113 = 0, $lpad$phi$i250774$index = 0, $lpad$phi$i250774$index125 = 0, $lpad$phi$i271776$index = 0, $lpad$phi$i271776$index137 = 0, $lpad$phi$i292778$index = 0, $lpad$phi$i292778$index144 = 0, $lpad$phi$i312780$index = 0, $lpad$phi$i312780$index151 = 0, $lpad$phi$i332782$index = 0, $lpad$phi$i332782$index163 = 0, $lpad$phi$i352784$index = 0, $lpad$phi$i352784$index175 = 0, $lpad$phi$i372786$index = 0, $lpad$phi$i372786$index187 = 0, $lpad$phi$i392788$index = 0, $lpad$phi$i392788$index199 = 0, $lpad$phi$i412790$index = 0, $lpad$phi$i412790$index211 = 0, $lpad$phi$i432792$index = 0, $lpad$phi$i432792$index223 = 0, $lpad$phi$i452794$index = 0, $lpad$phi$i452794$index235 = 0, $lpad$phi$i473796$index = 0, $lpad$phi$i473796$index247 = 0, $lpad$phi$i493798$index = 0, $lpad$phi$i493798$index254 = 0, $lpad$phi$i50754$index = 0, $lpad$phi$i50754$index10 = 0, $lpad$phi$i513800$index = 0, $lpad$phi$i513800$index266 = 0, $lpad$phi$i70756$index = 0, $lpad$phi$i70756$index17 = 0, $lpad$phi$i752$index = 0, $lpad$phi$i752$index3 = 0, $lpad$phi$i90758$index = 0, $lpad$phi$i90758$index29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368 | 0;
 $0 = sp + 360 | 0;
 $1 = sp + 336 | 0;
 $2 = sp + 312 | 0;
 $3 = sp + 300 | 0;
 $4 = sp + 288 | 0;
 $5 = sp + 276 | 0;
 $6 = sp + 264 | 0;
 $7 = sp + 252 | 0;
 $8 = sp + 240 | 0;
 $9 = sp + 228 | 0;
 $10 = sp + 216 | 0;
 $11 = sp + 204 | 0;
 $12 = sp + 192 | 0;
 $13 = sp + 168 | 0;
 $14 = sp + 144 | 0;
 $15 = sp + 132 | 0;
 $16 = sp + 120 | 0;
 $17 = sp + 108 | 0;
 $18 = sp + 96 | 0;
 $19 = sp + 84 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 60 | 0;
 $22 = sp + 48 | 0;
 $23 = sp + 24 | 0;
 $24 = sp + 12 | 0;
 $25 = sp;
 do switch ($builtin | 0) {
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1152, 5);
   __THREW__ = 0;
   invoke_viii(3, $3 | 0, 1136, 1);
   $100 = __THREW__;
   __THREW__ = 0;
   if ($100 & 1) {
    $124 = ___cxa_find_matching_catch() | 0;
    $$2 = $124;
    $$sink$index23 = tempRet0;
   } else {
    $102 = $agg$result + 12 | 0;
    HEAP32[$102 >> 2] = 0;
    $103 = $agg$result + 16 | 0;
    HEAP32[$103 >> 2] = 0;
    $104 = $agg$result + 20 | 0;
    HEAP32[$104 >> 2] = 0;
    __THREW__ = 0;
    $105 = invoke_ii(67, 12) | 0;
    $106 = __THREW__;
    __THREW__ = 0;
    if ($106 & 1) {
     $112 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i70756$index = $112;
     $lpad$phi$i70756$index17 = tempRet0;
    } else {
     HEAP32[$103 >> 2] = $105;
     HEAP32[$102 >> 2] = $105;
     HEAP32[$104 >> 2] = $105 + 12;
     __THREW__ = 0;
     invoke_vii(40, $105 | 0, $3 | 0);
     $109 = __THREW__;
     __THREW__ = 0;
     if (!($109 & 1)) {
      HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      STACKTOP = sp;
      return;
     }
     $114 = ___cxa_find_matching_catch() | 0;
     $115 = tempRet0;
     $$pre729 = HEAP32[$102 >> 2] | 0;
     if (!$$pre729) {
      $lpad$phi$i70756$index = $114;
      $lpad$phi$i70756$index17 = $115;
     } else {
      $117 = HEAP32[$103 >> 2] | 0;
      if (($117 | 0) == ($$pre729 | 0)) $123 = $$pre729; else {
       $120 = $117;
       do {
        $119 = $120 + -12 | 0;
        HEAP32[$103 >> 2] = $119;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($119);
        $120 = HEAP32[$103 >> 2] | 0;
       } while (($120 | 0) != ($$pre729 | 0));
       $123 = HEAP32[$102 >> 2] | 0;
      }
      __ZdlPv($123);
      $lpad$phi$i70756$index = $114;
      $lpad$phi$i70756$index17 = $115;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$2 = $lpad$phi$i70756$index;
    $$sink$index23 = $lpad$phi$i70756$index17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$2;
   $$2534 = $$sink$index23;
   ___resumeException($$25 | 0);
   break;
  }
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1232, 6);
   $360 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $13 | 0, 1120, 4);
   $361 = __THREW__;
   __THREW__ = 0;
   if ($361 & 1) {
    $$037 = $13;
    label = 190;
   } else {
    $363 = $13 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $363 | 0, 1240, 3);
    $364 = __THREW__;
    __THREW__ = 0;
    if ($364 & 1) {
     $$037 = $363;
     label = 190;
    } else {
     HEAP32[$360 >> 2] = 0;
     $366 = $agg$result + 16 | 0;
     HEAP32[$366 >> 2] = 0;
     $367 = $agg$result + 20 | 0;
     HEAP32[$367 >> 2] = 0;
     __THREW__ = 0;
     $368 = invoke_ii(67, 24) | 0;
     $369 = __THREW__;
     __THREW__ = 0;
     if ($369 & 1) {
      $378 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i271776$index = $378;
      $lpad$phi$i271776$index137 = tempRet0;
     } else {
      HEAP32[$366 >> 2] = $368;
      HEAP32[$360 >> 2] = $368;
      HEAP32[$367 >> 2] = $368 + 24;
      __THREW__ = 0;
      invoke_vii(40, $368 | 0, $13 | 0);
      $372 = __THREW__;
      __THREW__ = 0;
      if (!($372 & 1)) {
       $374 = (HEAP32[$366 >> 2] | 0) + 12 | 0;
       HEAP32[$366 >> 2] = $374;
       __THREW__ = 0;
       invoke_vii(40, $374 | 0, $13 + 12 | 0);
       $376 = __THREW__;
       __THREW__ = 0;
       if (!($376 & 1)) {
        HEAP32[$366 >> 2] = (HEAP32[$366 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        STACKTOP = sp;
        return;
       }
      }
      $380 = ___cxa_find_matching_catch() | 0;
      $381 = tempRet0;
      $$pre739 = HEAP32[$360 >> 2] | 0;
      if (!$$pre739) {
       $lpad$phi$i271776$index = $380;
       $lpad$phi$i271776$index137 = $381;
      } else {
       $383 = HEAP32[$366 >> 2] | 0;
       if (($383 | 0) == ($$pre739 | 0)) $389 = $$pre739; else {
        $386 = $383;
        do {
         $385 = $386 + -12 | 0;
         HEAP32[$366 >> 2] = $385;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($385);
         $386 = HEAP32[$366 >> 2] | 0;
        } while (($386 | 0) != ($$pre739 | 0));
        $389 = HEAP32[$360 >> 2] | 0;
       }
       __ZdlPv($389);
       $lpad$phi$i271776$index = $380;
       $lpad$phi$i271776$index137 = $381;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     $$12 = $lpad$phi$i271776$index;
     $$1221 = $lpad$phi$i271776$index137;
    }
   }
   if ((label | 0) == 190) {
    $390 = ___cxa_find_matching_catch() | 0;
    $391 = tempRet0;
    if (($13 | 0) == ($$037 | 0)) {
     $$12 = $390;
     $$1221 = $391;
    } else {
     $394 = $$037;
     do {
      $394 = $394 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($394);
     } while (($394 | 0) != ($13 | 0));
     $$12 = $390;
     $$1221 = $391;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$12;
   $$2534 = $$1221;
   ___resumeException($$25 | 0);
   break;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1128, 3);
   $63 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $2 | 0, 1136, 1);
   $64 = __THREW__;
   __THREW__ = 0;
   if ($64 & 1) {
    $$035 = $2;
    label = 32;
   } else {
    $66 = $2 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $66 | 0, 1144, 1);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     $$035 = $66;
     label = 32;
    } else {
     HEAP32[$63 >> 2] = 0;
     $69 = $agg$result + 16 | 0;
     HEAP32[$69 >> 2] = 0;
     $70 = $agg$result + 20 | 0;
     HEAP32[$70 >> 2] = 0;
     __THREW__ = 0;
     $71 = invoke_ii(67, 24) | 0;
     $72 = __THREW__;
     __THREW__ = 0;
     if ($72 & 1) {
      $81 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i50754$index = $81;
      $lpad$phi$i50754$index10 = tempRet0;
     } else {
      HEAP32[$69 >> 2] = $71;
      HEAP32[$63 >> 2] = $71;
      HEAP32[$70 >> 2] = $71 + 24;
      __THREW__ = 0;
      invoke_vii(40, $71 | 0, $2 | 0);
      $75 = __THREW__;
      __THREW__ = 0;
      if (!($75 & 1)) {
       $77 = (HEAP32[$69 >> 2] | 0) + 12 | 0;
       HEAP32[$69 >> 2] = $77;
       __THREW__ = 0;
       invoke_vii(40, $77 | 0, $2 + 12 | 0);
       $79 = __THREW__;
       __THREW__ = 0;
       if (!($79 & 1)) {
        HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        STACKTOP = sp;
        return;
       }
      }
      $83 = ___cxa_find_matching_catch() | 0;
      $84 = tempRet0;
      $$pre728 = HEAP32[$63 >> 2] | 0;
      if (!$$pre728) {
       $lpad$phi$i50754$index = $83;
       $lpad$phi$i50754$index10 = $84;
      } else {
       $86 = HEAP32[$69 >> 2] | 0;
       if (($86 | 0) == ($$pre728 | 0)) $92 = $$pre728; else {
        $89 = $86;
        do {
         $88 = $89 + -12 | 0;
         HEAP32[$69 >> 2] = $88;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($88);
         $89 = HEAP32[$69 >> 2] | 0;
        } while (($89 | 0) != ($$pre728 | 0));
        $92 = HEAP32[$63 >> 2] | 0;
       }
       __ZdlPv($92);
       $lpad$phi$i50754$index = $83;
       $lpad$phi$i50754$index10 = $84;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     $$1 = $lpad$phi$i50754$index;
     $$110 = $lpad$phi$i50754$index10;
    }
   }
   if ((label | 0) == 32) {
    $93 = ___cxa_find_matching_catch() | 0;
    $94 = tempRet0;
    if (($2 | 0) == ($$035 | 0)) {
     $$1 = $93;
     $$110 = $94;
    } else {
     $97 = $$035;
     do {
      $97 = $97 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
     } while (($97 | 0) != ($2 | 0));
     $$1 = $93;
     $$110 = $94;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$1;
   $$2534 = $$110;
   ___resumeException($$25 | 0);
   break;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1200, 4);
   __THREW__ = 0;
   invoke_viii(3, $9 | 0, 1136, 1);
   $256 = __THREW__;
   __THREW__ = 0;
   if ($256 & 1) {
    $280 = ___cxa_find_matching_catch() | 0;
    $$8 = $280;
    $$sink806$index95 = tempRet0;
   } else {
    $258 = $agg$result + 12 | 0;
    HEAP32[$258 >> 2] = 0;
    $259 = $agg$result + 16 | 0;
    HEAP32[$259 >> 2] = 0;
    $260 = $agg$result + 20 | 0;
    HEAP32[$260 >> 2] = 0;
    __THREW__ = 0;
    $261 = invoke_ii(67, 12) | 0;
    $262 = __THREW__;
    __THREW__ = 0;
    if ($262 & 1) {
     $268 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i190768$index = $268;
     $lpad$phi$i190768$index89 = tempRet0;
    } else {
     HEAP32[$259 >> 2] = $261;
     HEAP32[$258 >> 2] = $261;
     HEAP32[$260 >> 2] = $261 + 12;
     __THREW__ = 0;
     invoke_vii(40, $261 | 0, $9 | 0);
     $265 = __THREW__;
     __THREW__ = 0;
     if (!($265 & 1)) {
      HEAP32[$259 >> 2] = (HEAP32[$259 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      STACKTOP = sp;
      return;
     }
     $270 = ___cxa_find_matching_catch() | 0;
     $271 = tempRet0;
     $$pre735 = HEAP32[$258 >> 2] | 0;
     if (!$$pre735) {
      $lpad$phi$i190768$index = $270;
      $lpad$phi$i190768$index89 = $271;
     } else {
      $273 = HEAP32[$259 >> 2] | 0;
      if (($273 | 0) == ($$pre735 | 0)) $279 = $$pre735; else {
       $276 = $273;
       do {
        $275 = $276 + -12 | 0;
        HEAP32[$259 >> 2] = $275;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($275);
        $276 = HEAP32[$259 >> 2] | 0;
       } while (($276 | 0) != ($$pre735 | 0));
       $279 = HEAP32[$258 >> 2] | 0;
      }
      __ZdlPv($279);
      $lpad$phi$i190768$index = $270;
      $lpad$phi$i190768$index89 = $271;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    $$8 = $lpad$phi$i190768$index;
    $$sink806$index95 = $lpad$phi$i190768$index89;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$8;
   $$2534 = $$sink806$index95;
   ___resumeException($$25 | 0);
   break;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1184, 3);
   __THREW__ = 0;
   invoke_viii(3, $7 | 0, 1136, 1);
   $204 = __THREW__;
   __THREW__ = 0;
   if ($204 & 1) {
    $228 = ___cxa_find_matching_catch() | 0;
    $$6 = $228;
    $$sink804$index71 = tempRet0;
   } else {
    $206 = $agg$result + 12 | 0;
    HEAP32[$206 >> 2] = 0;
    $207 = $agg$result + 16 | 0;
    HEAP32[$207 >> 2] = 0;
    $208 = $agg$result + 20 | 0;
    HEAP32[$208 >> 2] = 0;
    __THREW__ = 0;
    $209 = invoke_ii(67, 12) | 0;
    $210 = __THREW__;
    __THREW__ = 0;
    if ($210 & 1) {
     $216 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i150764$index = $216;
     $lpad$phi$i150764$index65 = tempRet0;
    } else {
     HEAP32[$207 >> 2] = $209;
     HEAP32[$206 >> 2] = $209;
     HEAP32[$208 >> 2] = $209 + 12;
     __THREW__ = 0;
     invoke_vii(40, $209 | 0, $7 | 0);
     $213 = __THREW__;
     __THREW__ = 0;
     if (!($213 & 1)) {
      HEAP32[$207 >> 2] = (HEAP32[$207 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      STACKTOP = sp;
      return;
     }
     $218 = ___cxa_find_matching_catch() | 0;
     $219 = tempRet0;
     $$pre733 = HEAP32[$206 >> 2] | 0;
     if (!$$pre733) {
      $lpad$phi$i150764$index = $218;
      $lpad$phi$i150764$index65 = $219;
     } else {
      $221 = HEAP32[$207 >> 2] | 0;
      if (($221 | 0) == ($$pre733 | 0)) $227 = $$pre733; else {
       $224 = $221;
       do {
        $223 = $224 + -12 | 0;
        HEAP32[$207 >> 2] = $223;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($223);
        $224 = HEAP32[$207 >> 2] | 0;
       } while (($224 | 0) != ($$pre733 | 0));
       $227 = HEAP32[$206 >> 2] | 0;
      }
      __ZdlPv($227);
      $lpad$phi$i150764$index = $218;
      $lpad$phi$i150764$index65 = $219;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    $$6 = $lpad$phi$i150764$index;
    $$sink804$index71 = $lpad$phi$i150764$index65;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$6;
   $$2534 = $$sink804$index71;
   ___resumeException($$25 | 0);
   break;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1168, 4);
   __THREW__ = 0;
   invoke_viii(3, $5 | 0, 1136, 1);
   $152 = __THREW__;
   __THREW__ = 0;
   if ($152 & 1) {
    $176 = ___cxa_find_matching_catch() | 0;
    $$4 = $176;
    $$sink802$index47 = tempRet0;
   } else {
    $154 = $agg$result + 12 | 0;
    HEAP32[$154 >> 2] = 0;
    $155 = $agg$result + 16 | 0;
    HEAP32[$155 >> 2] = 0;
    $156 = $agg$result + 20 | 0;
    HEAP32[$156 >> 2] = 0;
    __THREW__ = 0;
    $157 = invoke_ii(67, 12) | 0;
    $158 = __THREW__;
    __THREW__ = 0;
    if ($158 & 1) {
     $164 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i110760$index = $164;
     $lpad$phi$i110760$index41 = tempRet0;
    } else {
     HEAP32[$155 >> 2] = $157;
     HEAP32[$154 >> 2] = $157;
     HEAP32[$156 >> 2] = $157 + 12;
     __THREW__ = 0;
     invoke_vii(40, $157 | 0, $5 | 0);
     $161 = __THREW__;
     __THREW__ = 0;
     if (!($161 & 1)) {
      HEAP32[$155 >> 2] = (HEAP32[$155 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      STACKTOP = sp;
      return;
     }
     $166 = ___cxa_find_matching_catch() | 0;
     $167 = tempRet0;
     $$pre731 = HEAP32[$154 >> 2] | 0;
     if (!$$pre731) {
      $lpad$phi$i110760$index = $166;
      $lpad$phi$i110760$index41 = $167;
     } else {
      $169 = HEAP32[$155 >> 2] | 0;
      if (($169 | 0) == ($$pre731 | 0)) $175 = $$pre731; else {
       $172 = $169;
       do {
        $171 = $172 + -12 | 0;
        HEAP32[$155 >> 2] = $171;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($171);
        $172 = HEAP32[$155 >> 2] | 0;
       } while (($172 | 0) != ($$pre731 | 0));
       $175 = HEAP32[$154 >> 2] | 0;
      }
      __ZdlPv($175);
      $lpad$phi$i110760$index = $166;
      $lpad$phi$i110760$index41 = $167;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $$4 = $lpad$phi$i110760$index;
    $$sink802$index47 = $lpad$phi$i110760$index41;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$4;
   $$2534 = $$sink802$index47;
   ___resumeException($$25 | 0);
   break;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1160, 4);
   __THREW__ = 0;
   invoke_viii(3, $4 | 0, 1136, 1);
   $126 = __THREW__;
   __THREW__ = 0;
   if ($126 & 1) {
    $150 = ___cxa_find_matching_catch() | 0;
    $$3 = $150;
    $$sink801$index35 = tempRet0;
   } else {
    $128 = $agg$result + 12 | 0;
    HEAP32[$128 >> 2] = 0;
    $129 = $agg$result + 16 | 0;
    HEAP32[$129 >> 2] = 0;
    $130 = $agg$result + 20 | 0;
    HEAP32[$130 >> 2] = 0;
    __THREW__ = 0;
    $131 = invoke_ii(67, 12) | 0;
    $132 = __THREW__;
    __THREW__ = 0;
    if ($132 & 1) {
     $138 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i90758$index = $138;
     $lpad$phi$i90758$index29 = tempRet0;
    } else {
     HEAP32[$129 >> 2] = $131;
     HEAP32[$128 >> 2] = $131;
     HEAP32[$130 >> 2] = $131 + 12;
     __THREW__ = 0;
     invoke_vii(40, $131 | 0, $4 | 0);
     $135 = __THREW__;
     __THREW__ = 0;
     if (!($135 & 1)) {
      HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      STACKTOP = sp;
      return;
     }
     $140 = ___cxa_find_matching_catch() | 0;
     $141 = tempRet0;
     $$pre730 = HEAP32[$128 >> 2] | 0;
     if (!$$pre730) {
      $lpad$phi$i90758$index = $140;
      $lpad$phi$i90758$index29 = $141;
     } else {
      $143 = HEAP32[$129 >> 2] | 0;
      if (($143 | 0) == ($$pre730 | 0)) $149 = $$pre730; else {
       $146 = $143;
       do {
        $145 = $146 + -12 | 0;
        HEAP32[$129 >> 2] = $145;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($145);
        $146 = HEAP32[$129 >> 2] | 0;
       } while (($146 | 0) != ($$pre730 | 0));
       $149 = HEAP32[$128 >> 2] | 0;
      }
      __ZdlPv($149);
      $lpad$phi$i90758$index = $140;
      $lpad$phi$i90758$index29 = $141;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    $$3 = $lpad$phi$i90758$index;
    $$sink801$index35 = $lpad$phi$i90758$index29;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$3;
   $$2534 = $$sink801$index35;
   ___resumeException($$25 | 0);
   break;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1248, 9);
   $397 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $14 | 0, 1264, 3);
   $398 = __THREW__;
   __THREW__ = 0;
   if ($398 & 1) {
    $$036 = $14;
    label = 208;
   } else {
    $400 = $14 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $400 | 0, 1272, 1);
    $401 = __THREW__;
    __THREW__ = 0;
    if ($401 & 1) {
     $$036 = $400;
     label = 208;
    } else {
     HEAP32[$397 >> 2] = 0;
     $403 = $agg$result + 16 | 0;
     HEAP32[$403 >> 2] = 0;
     $404 = $agg$result + 20 | 0;
     HEAP32[$404 >> 2] = 0;
     __THREW__ = 0;
     $405 = invoke_ii(67, 24) | 0;
     $406 = __THREW__;
     __THREW__ = 0;
     if ($406 & 1) {
      $415 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i292778$index = $415;
      $lpad$phi$i292778$index144 = tempRet0;
     } else {
      HEAP32[$403 >> 2] = $405;
      HEAP32[$397 >> 2] = $405;
      HEAP32[$404 >> 2] = $405 + 24;
      __THREW__ = 0;
      invoke_vii(40, $405 | 0, $14 | 0);
      $409 = __THREW__;
      __THREW__ = 0;
      if (!($409 & 1)) {
       $411 = (HEAP32[$403 >> 2] | 0) + 12 | 0;
       HEAP32[$403 >> 2] = $411;
       __THREW__ = 0;
       invoke_vii(40, $411 | 0, $14 + 12 | 0);
       $413 = __THREW__;
       __THREW__ = 0;
       if (!($413 & 1)) {
        HEAP32[$403 >> 2] = (HEAP32[$403 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
        STACKTOP = sp;
        return;
       }
      }
      $417 = ___cxa_find_matching_catch() | 0;
      $418 = tempRet0;
      $$pre740 = HEAP32[$397 >> 2] | 0;
      if (!$$pre740) {
       $lpad$phi$i292778$index = $417;
       $lpad$phi$i292778$index144 = $418;
      } else {
       $420 = HEAP32[$403 >> 2] | 0;
       if (($420 | 0) == ($$pre740 | 0)) $426 = $$pre740; else {
        $423 = $420;
        do {
         $422 = $423 + -12 | 0;
         HEAP32[$403 >> 2] = $422;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($422);
         $423 = HEAP32[$403 >> 2] | 0;
        } while (($423 | 0) != ($$pre740 | 0));
        $426 = HEAP32[$397 >> 2] | 0;
       }
       __ZdlPv($426);
       $lpad$phi$i292778$index = $417;
       $lpad$phi$i292778$index144 = $418;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     $$13 = $lpad$phi$i292778$index;
     $$1322 = $lpad$phi$i292778$index144;
    }
   }
   if ((label | 0) == 208) {
    $427 = ___cxa_find_matching_catch() | 0;
    $428 = tempRet0;
    if (($14 | 0) == ($$036 | 0)) {
     $$13 = $427;
     $$1322 = $428;
    } else {
     $431 = $$036;
     do {
      $431 = $431 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($431);
     } while (($431 | 0) != ($14 | 0));
     $$13 = $427;
     $$1322 = $428;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$13;
   $$2534 = $$1322;
   ___resumeException($$25 | 0);
   break;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1280, 6);
   __THREW__ = 0;
   invoke_viii(3, $15 | 0, 1136, 1);
   $434 = __THREW__;
   __THREW__ = 0;
   if ($434 & 1) {
    $458 = ___cxa_find_matching_catch() | 0;
    $$14 = $458;
    $$sink810$index157 = tempRet0;
   } else {
    $436 = $agg$result + 12 | 0;
    HEAP32[$436 >> 2] = 0;
    $437 = $agg$result + 16 | 0;
    HEAP32[$437 >> 2] = 0;
    $438 = $agg$result + 20 | 0;
    HEAP32[$438 >> 2] = 0;
    __THREW__ = 0;
    $439 = invoke_ii(67, 12) | 0;
    $440 = __THREW__;
    __THREW__ = 0;
    if ($440 & 1) {
     $446 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i312780$index = $446;
     $lpad$phi$i312780$index151 = tempRet0;
    } else {
     HEAP32[$437 >> 2] = $439;
     HEAP32[$436 >> 2] = $439;
     HEAP32[$438 >> 2] = $439 + 12;
     __THREW__ = 0;
     invoke_vii(40, $439 | 0, $15 | 0);
     $443 = __THREW__;
     __THREW__ = 0;
     if (!($443 & 1)) {
      HEAP32[$437 >> 2] = (HEAP32[$437 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      STACKTOP = sp;
      return;
     }
     $448 = ___cxa_find_matching_catch() | 0;
     $449 = tempRet0;
     $$pre741 = HEAP32[$436 >> 2] | 0;
     if (!$$pre741) {
      $lpad$phi$i312780$index = $448;
      $lpad$phi$i312780$index151 = $449;
     } else {
      $451 = HEAP32[$437 >> 2] | 0;
      if (($451 | 0) == ($$pre741 | 0)) $457 = $$pre741; else {
       $454 = $451;
       do {
        $453 = $454 + -12 | 0;
        HEAP32[$437 >> 2] = $453;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($453);
        $454 = HEAP32[$437 >> 2] | 0;
       } while (($454 | 0) != ($$pre741 | 0));
       $457 = HEAP32[$436 >> 2] | 0;
      }
      __ZdlPv($457);
      $lpad$phi$i312780$index = $448;
      $lpad$phi$i312780$index151 = $449;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    $$14 = $lpad$phi$i312780$index;
    $$sink810$index157 = $lpad$phi$i312780$index151;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$14;
   $$2534 = $$sink810$index157;
   ___resumeException($$25 | 0);
   break;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1288, 12);
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 1264, 3);
   $460 = __THREW__;
   __THREW__ = 0;
   if ($460 & 1) {
    $484 = ___cxa_find_matching_catch() | 0;
    $$15 = $484;
    $$sink811$index169 = tempRet0;
   } else {
    $462 = $agg$result + 12 | 0;
    HEAP32[$462 >> 2] = 0;
    $463 = $agg$result + 16 | 0;
    HEAP32[$463 >> 2] = 0;
    $464 = $agg$result + 20 | 0;
    HEAP32[$464 >> 2] = 0;
    __THREW__ = 0;
    $465 = invoke_ii(67, 12) | 0;
    $466 = __THREW__;
    __THREW__ = 0;
    if ($466 & 1) {
     $472 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i332782$index = $472;
     $lpad$phi$i332782$index163 = tempRet0;
    } else {
     HEAP32[$463 >> 2] = $465;
     HEAP32[$462 >> 2] = $465;
     HEAP32[$464 >> 2] = $465 + 12;
     __THREW__ = 0;
     invoke_vii(40, $465 | 0, $16 | 0);
     $469 = __THREW__;
     __THREW__ = 0;
     if (!($469 & 1)) {
      HEAP32[$463 >> 2] = (HEAP32[$463 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
      STACKTOP = sp;
      return;
     }
     $474 = ___cxa_find_matching_catch() | 0;
     $475 = tempRet0;
     $$pre742 = HEAP32[$462 >> 2] | 0;
     if (!$$pre742) {
      $lpad$phi$i332782$index = $474;
      $lpad$phi$i332782$index163 = $475;
     } else {
      $477 = HEAP32[$463 >> 2] | 0;
      if (($477 | 0) == ($$pre742 | 0)) $483 = $$pre742; else {
       $480 = $477;
       do {
        $479 = $480 + -12 | 0;
        HEAP32[$463 >> 2] = $479;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($479);
        $480 = HEAP32[$463 >> 2] | 0;
       } while (($480 | 0) != ($$pre742 | 0));
       $483 = HEAP32[$462 >> 2] | 0;
      }
      __ZdlPv($483);
      $lpad$phi$i332782$index = $474;
      $lpad$phi$i332782$index163 = $475;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
    $$15 = $lpad$phi$i332782$index;
    $$sink811$index169 = $lpad$phi$i332782$index163;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$15;
   $$2534 = $$sink811$index169;
   ___resumeException($$25 | 0);
   break;
  }
 case 24:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1416, 6);
   __THREW__ = 0;
   invoke_viii(3, $25 | 0, 1136, 1);
   $705 = __THREW__;
   __THREW__ = 0;
   if ($705 & 1) {
    $729 = ___cxa_find_matching_catch() | 0;
    $$24 = $729;
    $$sink819$index272 = tempRet0;
   } else {
    $707 = $agg$result + 12 | 0;
    HEAP32[$707 >> 2] = 0;
    $708 = $agg$result + 16 | 0;
    HEAP32[$708 >> 2] = 0;
    $709 = $agg$result + 20 | 0;
    HEAP32[$709 >> 2] = 0;
    __THREW__ = 0;
    $710 = invoke_ii(67, 12) | 0;
    $711 = __THREW__;
    __THREW__ = 0;
    if ($711 & 1) {
     $717 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i513800$index = $717;
     $lpad$phi$i513800$index266 = tempRet0;
    } else {
     HEAP32[$708 >> 2] = $710;
     HEAP32[$707 >> 2] = $710;
     HEAP32[$709 >> 2] = $710 + 12;
     __THREW__ = 0;
     invoke_vii(40, $710 | 0, $25 | 0);
     $714 = __THREW__;
     __THREW__ = 0;
     if (!($714 & 1)) {
      HEAP32[$708 >> 2] = (HEAP32[$708 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
      STACKTOP = sp;
      return;
     }
     $719 = ___cxa_find_matching_catch() | 0;
     $720 = tempRet0;
     $$pre751 = HEAP32[$707 >> 2] | 0;
     if (!$$pre751) {
      $lpad$phi$i513800$index = $719;
      $lpad$phi$i513800$index266 = $720;
     } else {
      $722 = HEAP32[$708 >> 2] | 0;
      if (($722 | 0) == ($$pre751 | 0)) $728 = $$pre751; else {
       $725 = $722;
       do {
        $724 = $725 + -12 | 0;
        HEAP32[$708 >> 2] = $724;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($724);
        $725 = HEAP32[$708 >> 2] | 0;
       } while (($725 | 0) != ($$pre751 | 0));
       $728 = HEAP32[$707 >> 2] | 0;
      }
      __ZdlPv($728);
      $lpad$phi$i513800$index = $719;
      $lpad$phi$i513800$index266 = $720;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
    $$24 = $lpad$phi$i513800$index;
    $$sink819$index272 = $lpad$phi$i513800$index266;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$24;
   $$2534 = $$sink819$index272;
   ___resumeException($$25 | 0);
   break;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1304, 9);
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 1320, 3);
   $486 = __THREW__;
   __THREW__ = 0;
   if ($486 & 1) {
    $510 = ___cxa_find_matching_catch() | 0;
    $$16 = $510;
    $$sink812$index181 = tempRet0;
   } else {
    $488 = $agg$result + 12 | 0;
    HEAP32[$488 >> 2] = 0;
    $489 = $agg$result + 16 | 0;
    HEAP32[$489 >> 2] = 0;
    $490 = $agg$result + 20 | 0;
    HEAP32[$490 >> 2] = 0;
    __THREW__ = 0;
    $491 = invoke_ii(67, 12) | 0;
    $492 = __THREW__;
    __THREW__ = 0;
    if ($492 & 1) {
     $498 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i352784$index = $498;
     $lpad$phi$i352784$index175 = tempRet0;
    } else {
     HEAP32[$489 >> 2] = $491;
     HEAP32[$488 >> 2] = $491;
     HEAP32[$490 >> 2] = $491 + 12;
     __THREW__ = 0;
     invoke_vii(40, $491 | 0, $17 | 0);
     $495 = __THREW__;
     __THREW__ = 0;
     if (!($495 & 1)) {
      HEAP32[$489 >> 2] = (HEAP32[$489 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      STACKTOP = sp;
      return;
     }
     $500 = ___cxa_find_matching_catch() | 0;
     $501 = tempRet0;
     $$pre743 = HEAP32[$488 >> 2] | 0;
     if (!$$pre743) {
      $lpad$phi$i352784$index = $500;
      $lpad$phi$i352784$index175 = $501;
     } else {
      $503 = HEAP32[$489 >> 2] | 0;
      if (($503 | 0) == ($$pre743 | 0)) $509 = $$pre743; else {
       $506 = $503;
       do {
        $505 = $506 + -12 | 0;
        HEAP32[$489 >> 2] = $505;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($505);
        $506 = HEAP32[$489 >> 2] | 0;
       } while (($506 | 0) != ($$pre743 | 0));
       $509 = HEAP32[$488 >> 2] | 0;
      }
      __ZdlPv($509);
      $lpad$phi$i352784$index = $500;
      $lpad$phi$i352784$index175 = $501;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    $$16 = $lpad$phi$i352784$index;
    $$sink812$index181 = $lpad$phi$i352784$index175;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$16;
   $$2534 = $$sink812$index181;
   ___resumeException($$25 | 0);
   break;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1328, 4);
   __THREW__ = 0;
   invoke_viii(3, $18 | 0, 1144, 1);
   $512 = __THREW__;
   __THREW__ = 0;
   if ($512 & 1) {
    $536 = ___cxa_find_matching_catch() | 0;
    $$17 = $536;
    $$sink813$index193 = tempRet0;
   } else {
    $514 = $agg$result + 12 | 0;
    HEAP32[$514 >> 2] = 0;
    $515 = $agg$result + 16 | 0;
    HEAP32[$515 >> 2] = 0;
    $516 = $agg$result + 20 | 0;
    HEAP32[$516 >> 2] = 0;
    __THREW__ = 0;
    $517 = invoke_ii(67, 12) | 0;
    $518 = __THREW__;
    __THREW__ = 0;
    if ($518 & 1) {
     $524 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i372786$index = $524;
     $lpad$phi$i372786$index187 = tempRet0;
    } else {
     HEAP32[$515 >> 2] = $517;
     HEAP32[$514 >> 2] = $517;
     HEAP32[$516 >> 2] = $517 + 12;
     __THREW__ = 0;
     invoke_vii(40, $517 | 0, $18 | 0);
     $521 = __THREW__;
     __THREW__ = 0;
     if (!($521 & 1)) {
      HEAP32[$515 >> 2] = (HEAP32[$515 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
      STACKTOP = sp;
      return;
     }
     $526 = ___cxa_find_matching_catch() | 0;
     $527 = tempRet0;
     $$pre744 = HEAP32[$514 >> 2] | 0;
     if (!$$pre744) {
      $lpad$phi$i372786$index = $526;
      $lpad$phi$i372786$index187 = $527;
     } else {
      $529 = HEAP32[$515 >> 2] | 0;
      if (($529 | 0) == ($$pre744 | 0)) $535 = $$pre744; else {
       $532 = $529;
       do {
        $531 = $532 + -12 | 0;
        HEAP32[$515 >> 2] = $531;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($531);
        $532 = HEAP32[$515 >> 2] | 0;
       } while (($532 | 0) != ($$pre744 | 0));
       $535 = HEAP32[$514 >> 2] | 0;
      }
      __ZdlPv($535);
      $lpad$phi$i372786$index = $526;
      $lpad$phi$i372786$index187 = $527;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    $$17 = $lpad$phi$i372786$index;
    $$sink813$index193 = $lpad$phi$i372786$index187;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$17;
   $$2534 = $$sink813$index193;
   ___resumeException($$25 | 0);
   break;
  }
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1336, 3);
   __THREW__ = 0;
   invoke_viii(3, $19 | 0, 1144, 1);
   $538 = __THREW__;
   __THREW__ = 0;
   if ($538 & 1) {
    $562 = ___cxa_find_matching_catch() | 0;
    $$18 = $562;
    $$sink814$index205 = tempRet0;
   } else {
    $540 = $agg$result + 12 | 0;
    HEAP32[$540 >> 2] = 0;
    $541 = $agg$result + 16 | 0;
    HEAP32[$541 >> 2] = 0;
    $542 = $agg$result + 20 | 0;
    HEAP32[$542 >> 2] = 0;
    __THREW__ = 0;
    $543 = invoke_ii(67, 12) | 0;
    $544 = __THREW__;
    __THREW__ = 0;
    if ($544 & 1) {
     $550 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i392788$index = $550;
     $lpad$phi$i392788$index199 = tempRet0;
    } else {
     HEAP32[$541 >> 2] = $543;
     HEAP32[$540 >> 2] = $543;
     HEAP32[$542 >> 2] = $543 + 12;
     __THREW__ = 0;
     invoke_vii(40, $543 | 0, $19 | 0);
     $547 = __THREW__;
     __THREW__ = 0;
     if (!($547 & 1)) {
      HEAP32[$541 >> 2] = (HEAP32[$541 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
      STACKTOP = sp;
      return;
     }
     $552 = ___cxa_find_matching_catch() | 0;
     $553 = tempRet0;
     $$pre745 = HEAP32[$540 >> 2] | 0;
     if (!$$pre745) {
      $lpad$phi$i392788$index = $552;
      $lpad$phi$i392788$index199 = $553;
     } else {
      $555 = HEAP32[$541 >> 2] | 0;
      if (($555 | 0) == ($$pre745 | 0)) $561 = $$pre745; else {
       $558 = $555;
       do {
        $557 = $558 + -12 | 0;
        HEAP32[$541 >> 2] = $557;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($557);
        $558 = HEAP32[$541 >> 2] | 0;
       } while (($558 | 0) != ($$pre745 | 0));
       $561 = HEAP32[$540 >> 2] | 0;
      }
      __ZdlPv($561);
      $lpad$phi$i392788$index = $552;
      $lpad$phi$i392788$index199 = $553;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
    $$18 = $lpad$phi$i392788$index;
    $$sink814$index205 = $lpad$phi$i392788$index199;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$18;
   $$2534 = $$sink814$index205;
   ___resumeException($$25 | 0);
   break;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1344, 3);
   __THREW__ = 0;
   invoke_viii(3, $20 | 0, 1144, 1);
   $564 = __THREW__;
   __THREW__ = 0;
   if ($564 & 1) {
    $588 = ___cxa_find_matching_catch() | 0;
    $$19 = $588;
    $$sink815$index217 = tempRet0;
   } else {
    $566 = $agg$result + 12 | 0;
    HEAP32[$566 >> 2] = 0;
    $567 = $agg$result + 16 | 0;
    HEAP32[$567 >> 2] = 0;
    $568 = $agg$result + 20 | 0;
    HEAP32[$568 >> 2] = 0;
    __THREW__ = 0;
    $569 = invoke_ii(67, 12) | 0;
    $570 = __THREW__;
    __THREW__ = 0;
    if ($570 & 1) {
     $576 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i412790$index = $576;
     $lpad$phi$i412790$index211 = tempRet0;
    } else {
     HEAP32[$567 >> 2] = $569;
     HEAP32[$566 >> 2] = $569;
     HEAP32[$568 >> 2] = $569 + 12;
     __THREW__ = 0;
     invoke_vii(40, $569 | 0, $20 | 0);
     $573 = __THREW__;
     __THREW__ = 0;
     if (!($573 & 1)) {
      HEAP32[$567 >> 2] = (HEAP32[$567 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
      STACKTOP = sp;
      return;
     }
     $578 = ___cxa_find_matching_catch() | 0;
     $579 = tempRet0;
     $$pre746 = HEAP32[$566 >> 2] | 0;
     if (!$$pre746) {
      $lpad$phi$i412790$index = $578;
      $lpad$phi$i412790$index211 = $579;
     } else {
      $581 = HEAP32[$567 >> 2] | 0;
      if (($581 | 0) == ($$pre746 | 0)) $587 = $$pre746; else {
       $584 = $581;
       do {
        $583 = $584 + -12 | 0;
        HEAP32[$567 >> 2] = $583;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($583);
        $584 = HEAP32[$567 >> 2] | 0;
       } while (($584 | 0) != ($$pre746 | 0));
       $587 = HEAP32[$566 >> 2] | 0;
      }
      __ZdlPv($587);
      $lpad$phi$i412790$index = $578;
      $lpad$phi$i412790$index211 = $579;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
    $$19 = $lpad$phi$i412790$index;
    $$sink815$index217 = $lpad$phi$i412790$index211;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$19;
   $$2534 = $$sink815$index217;
   ___resumeException($$25 | 0);
   break;
  }
 case 20:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1352, 8);
   __THREW__ = 0;
   invoke_viii(3, $21 | 0, 1144, 1);
   $590 = __THREW__;
   __THREW__ = 0;
   if ($590 & 1) {
    $614 = ___cxa_find_matching_catch() | 0;
    $$20 = $614;
    $$sink816$index229 = tempRet0;
   } else {
    $592 = $agg$result + 12 | 0;
    HEAP32[$592 >> 2] = 0;
    $593 = $agg$result + 16 | 0;
    HEAP32[$593 >> 2] = 0;
    $594 = $agg$result + 20 | 0;
    HEAP32[$594 >> 2] = 0;
    __THREW__ = 0;
    $595 = invoke_ii(67, 12) | 0;
    $596 = __THREW__;
    __THREW__ = 0;
    if ($596 & 1) {
     $602 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i432792$index = $602;
     $lpad$phi$i432792$index223 = tempRet0;
    } else {
     HEAP32[$593 >> 2] = $595;
     HEAP32[$592 >> 2] = $595;
     HEAP32[$594 >> 2] = $595 + 12;
     __THREW__ = 0;
     invoke_vii(40, $595 | 0, $21 | 0);
     $599 = __THREW__;
     __THREW__ = 0;
     if (!($599 & 1)) {
      HEAP32[$593 >> 2] = (HEAP32[$593 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
      STACKTOP = sp;
      return;
     }
     $604 = ___cxa_find_matching_catch() | 0;
     $605 = tempRet0;
     $$pre747 = HEAP32[$592 >> 2] | 0;
     if (!$$pre747) {
      $lpad$phi$i432792$index = $604;
      $lpad$phi$i432792$index223 = $605;
     } else {
      $607 = HEAP32[$593 >> 2] | 0;
      if (($607 | 0) == ($$pre747 | 0)) $613 = $$pre747; else {
       $610 = $607;
       do {
        $609 = $610 + -12 | 0;
        HEAP32[$593 >> 2] = $609;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($609);
        $610 = HEAP32[$593 >> 2] | 0;
       } while (($610 | 0) != ($$pre747 | 0));
       $613 = HEAP32[$592 >> 2] | 0;
      }
      __ZdlPv($613);
      $lpad$phi$i432792$index = $604;
      $lpad$phi$i432792$index223 = $605;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
    $$20 = $lpad$phi$i432792$index;
    $$sink816$index229 = $lpad$phi$i432792$index223;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$20;
   $$2534 = $$sink816$index229;
   ___resumeException($$25 | 0);
   break;
  }
 case 21:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1368, 8);
   __THREW__ = 0;
   invoke_viii(3, $22 | 0, 1144, 1);
   $616 = __THREW__;
   __THREW__ = 0;
   if ($616 & 1) {
    $640 = ___cxa_find_matching_catch() | 0;
    $$21 = $640;
    $$sink817$index241 = tempRet0;
   } else {
    $618 = $agg$result + 12 | 0;
    HEAP32[$618 >> 2] = 0;
    $619 = $agg$result + 16 | 0;
    HEAP32[$619 >> 2] = 0;
    $620 = $agg$result + 20 | 0;
    HEAP32[$620 >> 2] = 0;
    __THREW__ = 0;
    $621 = invoke_ii(67, 12) | 0;
    $622 = __THREW__;
    __THREW__ = 0;
    if ($622 & 1) {
     $628 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i452794$index = $628;
     $lpad$phi$i452794$index235 = tempRet0;
    } else {
     HEAP32[$619 >> 2] = $621;
     HEAP32[$618 >> 2] = $621;
     HEAP32[$620 >> 2] = $621 + 12;
     __THREW__ = 0;
     invoke_vii(40, $621 | 0, $22 | 0);
     $625 = __THREW__;
     __THREW__ = 0;
     if (!($625 & 1)) {
      HEAP32[$619 >> 2] = (HEAP32[$619 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
      STACKTOP = sp;
      return;
     }
     $630 = ___cxa_find_matching_catch() | 0;
     $631 = tempRet0;
     $$pre748 = HEAP32[$618 >> 2] | 0;
     if (!$$pre748) {
      $lpad$phi$i452794$index = $630;
      $lpad$phi$i452794$index235 = $631;
     } else {
      $633 = HEAP32[$619 >> 2] | 0;
      if (($633 | 0) == ($$pre748 | 0)) $639 = $$pre748; else {
       $636 = $633;
       do {
        $635 = $636 + -12 | 0;
        HEAP32[$619 >> 2] = $635;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($635);
        $636 = HEAP32[$619 >> 2] | 0;
       } while (($636 | 0) != ($$pre748 | 0));
       $639 = HEAP32[$618 >> 2] | 0;
      }
      __ZdlPv($639);
      $lpad$phi$i452794$index = $630;
      $lpad$phi$i452794$index235 = $631;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
    $$21 = $lpad$phi$i452794$index;
    $$sink817$index241 = $lpad$phi$i452794$index235;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$21;
   $$2534 = $$sink817$index241;
   ___resumeException($$25 | 0);
   break;
  }
 case 23:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1408, 5);
   __THREW__ = 0;
   invoke_viii(3, $24 | 0, 1136, 1);
   $679 = __THREW__;
   __THREW__ = 0;
   if ($679 & 1) {
    $703 = ___cxa_find_matching_catch() | 0;
    $$23 = $703;
    $$sink818$index260 = tempRet0;
   } else {
    $681 = $agg$result + 12 | 0;
    HEAP32[$681 >> 2] = 0;
    $682 = $agg$result + 16 | 0;
    HEAP32[$682 >> 2] = 0;
    $683 = $agg$result + 20 | 0;
    HEAP32[$683 >> 2] = 0;
    __THREW__ = 0;
    $684 = invoke_ii(67, 12) | 0;
    $685 = __THREW__;
    __THREW__ = 0;
    if ($685 & 1) {
     $691 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i493798$index = $691;
     $lpad$phi$i493798$index254 = tempRet0;
    } else {
     HEAP32[$682 >> 2] = $684;
     HEAP32[$681 >> 2] = $684;
     HEAP32[$683 >> 2] = $684 + 12;
     __THREW__ = 0;
     invoke_vii(40, $684 | 0, $24 | 0);
     $688 = __THREW__;
     __THREW__ = 0;
     if (!($688 & 1)) {
      HEAP32[$682 >> 2] = (HEAP32[$682 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
      STACKTOP = sp;
      return;
     }
     $693 = ___cxa_find_matching_catch() | 0;
     $694 = tempRet0;
     $$pre750 = HEAP32[$681 >> 2] | 0;
     if (!$$pre750) {
      $lpad$phi$i493798$index = $693;
      $lpad$phi$i493798$index254 = $694;
     } else {
      $696 = HEAP32[$682 >> 2] | 0;
      if (($696 | 0) == ($$pre750 | 0)) $702 = $$pre750; else {
       $699 = $696;
       do {
        $698 = $699 + -12 | 0;
        HEAP32[$682 >> 2] = $698;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($698);
        $699 = HEAP32[$682 >> 2] | 0;
       } while (($699 | 0) != ($$pre750 | 0));
       $702 = HEAP32[$681 >> 2] | 0;
      }
      __ZdlPv($702);
      $lpad$phi$i493798$index = $693;
      $lpad$phi$i493798$index254 = $694;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    $$23 = $lpad$phi$i493798$index;
    $$sink818$index260 = $lpad$phi$i493798$index254;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$23;
   $$2534 = $$sink818$index260;
   ___resumeException($$25 | 0);
   break;
  }
 case 22:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1384, 6);
   $642 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $23 | 0, 1392, 1);
   $643 = __THREW__;
   __THREW__ = 0;
   if ($643 & 1) {
    $$02 = $23;
    label = 338;
   } else {
    $645 = $23 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $645 | 0, 1400, 1);
    $646 = __THREW__;
    __THREW__ = 0;
    if ($646 & 1) {
     $$02 = $645;
     label = 338;
    } else {
     HEAP32[$642 >> 2] = 0;
     $648 = $agg$result + 16 | 0;
     HEAP32[$648 >> 2] = 0;
     $649 = $agg$result + 20 | 0;
     HEAP32[$649 >> 2] = 0;
     __THREW__ = 0;
     $650 = invoke_ii(67, 24) | 0;
     $651 = __THREW__;
     __THREW__ = 0;
     if ($651 & 1) {
      $660 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i473796$index = $660;
      $lpad$phi$i473796$index247 = tempRet0;
     } else {
      HEAP32[$648 >> 2] = $650;
      HEAP32[$642 >> 2] = $650;
      HEAP32[$649 >> 2] = $650 + 24;
      __THREW__ = 0;
      invoke_vii(40, $650 | 0, $23 | 0);
      $654 = __THREW__;
      __THREW__ = 0;
      if (!($654 & 1)) {
       $656 = (HEAP32[$648 >> 2] | 0) + 12 | 0;
       HEAP32[$648 >> 2] = $656;
       __THREW__ = 0;
       invoke_vii(40, $656 | 0, $23 + 12 | 0);
       $658 = __THREW__;
       __THREW__ = 0;
       if (!($658 & 1)) {
        HEAP32[$648 >> 2] = (HEAP32[$648 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
        STACKTOP = sp;
        return;
       }
      }
      $662 = ___cxa_find_matching_catch() | 0;
      $663 = tempRet0;
      $$pre749 = HEAP32[$642 >> 2] | 0;
      if (!$$pre749) {
       $lpad$phi$i473796$index = $662;
       $lpad$phi$i473796$index247 = $663;
      } else {
       $665 = HEAP32[$648 >> 2] | 0;
       if (($665 | 0) == ($$pre749 | 0)) $671 = $$pre749; else {
        $668 = $665;
        do {
         $667 = $668 + -12 | 0;
         HEAP32[$648 >> 2] = $667;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($667);
         $668 = HEAP32[$648 >> 2] | 0;
        } while (($668 | 0) != ($$pre749 | 0));
        $671 = HEAP32[$642 >> 2] | 0;
       }
       __ZdlPv($671);
       $lpad$phi$i473796$index = $662;
       $lpad$phi$i473796$index247 = $663;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
     $$22 = $lpad$phi$i473796$index;
     $$2231 = $lpad$phi$i473796$index247;
    }
   }
   if ((label | 0) == 338) {
    $672 = ___cxa_find_matching_catch() | 0;
    $673 = tempRet0;
    if (($23 | 0) == ($$02 | 0)) {
     $$22 = $672;
     $$2231 = $673;
    } else {
     $676 = $$02;
     do {
      $676 = $676 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($676);
     } while (($676 | 0) != ($23 | 0));
     $$22 = $672;
     $$2231 = $673;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$22;
   $$2534 = $$2231;
   ___resumeException($$25 | 0);
   break;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1176, 3);
   __THREW__ = 0;
   invoke_viii(3, $6 | 0, 1136, 1);
   $178 = __THREW__;
   __THREW__ = 0;
   if ($178 & 1) {
    $202 = ___cxa_find_matching_catch() | 0;
    $$5 = $202;
    $$sink803$index59 = tempRet0;
   } else {
    $180 = $agg$result + 12 | 0;
    HEAP32[$180 >> 2] = 0;
    $181 = $agg$result + 16 | 0;
    HEAP32[$181 >> 2] = 0;
    $182 = $agg$result + 20 | 0;
    HEAP32[$182 >> 2] = 0;
    __THREW__ = 0;
    $183 = invoke_ii(67, 12) | 0;
    $184 = __THREW__;
    __THREW__ = 0;
    if ($184 & 1) {
     $190 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i130762$index = $190;
     $lpad$phi$i130762$index53 = tempRet0;
    } else {
     HEAP32[$181 >> 2] = $183;
     HEAP32[$180 >> 2] = $183;
     HEAP32[$182 >> 2] = $183 + 12;
     __THREW__ = 0;
     invoke_vii(40, $183 | 0, $6 | 0);
     $187 = __THREW__;
     __THREW__ = 0;
     if (!($187 & 1)) {
      HEAP32[$181 >> 2] = (HEAP32[$181 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      STACKTOP = sp;
      return;
     }
     $192 = ___cxa_find_matching_catch() | 0;
     $193 = tempRet0;
     $$pre732 = HEAP32[$180 >> 2] | 0;
     if (!$$pre732) {
      $lpad$phi$i130762$index = $192;
      $lpad$phi$i130762$index53 = $193;
     } else {
      $195 = HEAP32[$181 >> 2] | 0;
      if (($195 | 0) == ($$pre732 | 0)) $201 = $$pre732; else {
       $198 = $195;
       do {
        $197 = $198 + -12 | 0;
        HEAP32[$181 >> 2] = $197;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($197);
        $198 = HEAP32[$181 >> 2] | 0;
       } while (($198 | 0) != ($$pre732 | 0));
       $201 = HEAP32[$180 >> 2] | 0;
      }
      __ZdlPv($201);
      $lpad$phi$i130762$index = $192;
      $lpad$phi$i130762$index53 = $193;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    $$5 = $lpad$phi$i130762$index;
    $$sink803$index59 = $lpad$phi$i130762$index53;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$5;
   $$2534 = $$sink803$index59;
   ___resumeException($$25 | 0);
   break;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1096, 9);
   $26 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 1112, 2);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) {
    $$0 = $1;
    label = 14;
   } else {
    $29 = $1 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $29 | 0, 1120, 4);
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     $$0 = $29;
     label = 14;
    } else {
     HEAP32[$26 >> 2] = 0;
     $32 = $agg$result + 16 | 0;
     HEAP32[$32 >> 2] = 0;
     $33 = $agg$result + 20 | 0;
     HEAP32[$33 >> 2] = 0;
     __THREW__ = 0;
     $34 = invoke_ii(67, 24) | 0;
     $35 = __THREW__;
     __THREW__ = 0;
     if ($35 & 1) {
      $44 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i752$index = $44;
      $lpad$phi$i752$index3 = tempRet0;
     } else {
      HEAP32[$32 >> 2] = $34;
      HEAP32[$26 >> 2] = $34;
      HEAP32[$33 >> 2] = $34 + 24;
      __THREW__ = 0;
      invoke_vii(40, $34 | 0, $1 | 0);
      $38 = __THREW__;
      __THREW__ = 0;
      if (!($38 & 1)) {
       $40 = (HEAP32[$32 >> 2] | 0) + 12 | 0;
       HEAP32[$32 >> 2] = $40;
       __THREW__ = 0;
       invoke_vii(40, $40 | 0, $1 + 12 | 0);
       $42 = __THREW__;
       __THREW__ = 0;
       if (!($42 & 1)) {
        HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        STACKTOP = sp;
        return;
       }
      }
      $46 = ___cxa_find_matching_catch() | 0;
      $47 = tempRet0;
      $$pre = HEAP32[$26 >> 2] | 0;
      if (!$$pre) {
       $lpad$phi$i752$index = $46;
       $lpad$phi$i752$index3 = $47;
      } else {
       $49 = HEAP32[$32 >> 2] | 0;
       if (($49 | 0) == ($$pre | 0)) $55 = $$pre; else {
        $52 = $49;
        do {
         $51 = $52 + -12 | 0;
         HEAP32[$32 >> 2] = $51;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
         $52 = HEAP32[$32 >> 2] | 0;
        } while (($52 | 0) != ($$pre | 0));
        $55 = HEAP32[$26 >> 2] | 0;
       }
       __ZdlPv($55);
       $lpad$phi$i752$index = $46;
       $lpad$phi$i752$index3 = $47;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     $$01 = $lpad$phi$i752$index;
     $$03 = $lpad$phi$i752$index3;
    }
   }
   if ((label | 0) == 14) {
    $56 = ___cxa_find_matching_catch() | 0;
    $57 = tempRet0;
    if (($1 | 0) == ($$0 | 0)) {
     $$01 = $56;
     $$03 = $57;
    } else {
     $60 = $$0;
     do {
      $60 = $60 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
     } while (($60 | 0) != ($1 | 0));
     $$01 = $56;
     $$03 = $57;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$01;
   $$2534 = $$03;
   ___resumeException($$25 | 0);
   break;
  }
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1224, 4);
   __THREW__ = 0;
   invoke_viii(3, $12 | 0, 1136, 1);
   $334 = __THREW__;
   __THREW__ = 0;
   if ($334 & 1) {
    $358 = ___cxa_find_matching_catch() | 0;
    $$11 = $358;
    $$sink809$index131 = tempRet0;
   } else {
    $336 = $agg$result + 12 | 0;
    HEAP32[$336 >> 2] = 0;
    $337 = $agg$result + 16 | 0;
    HEAP32[$337 >> 2] = 0;
    $338 = $agg$result + 20 | 0;
    HEAP32[$338 >> 2] = 0;
    __THREW__ = 0;
    $339 = invoke_ii(67, 12) | 0;
    $340 = __THREW__;
    __THREW__ = 0;
    if ($340 & 1) {
     $346 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i250774$index = $346;
     $lpad$phi$i250774$index125 = tempRet0;
    } else {
     HEAP32[$337 >> 2] = $339;
     HEAP32[$336 >> 2] = $339;
     HEAP32[$338 >> 2] = $339 + 12;
     __THREW__ = 0;
     invoke_vii(40, $339 | 0, $12 | 0);
     $343 = __THREW__;
     __THREW__ = 0;
     if (!($343 & 1)) {
      HEAP32[$337 >> 2] = (HEAP32[$337 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
      STACKTOP = sp;
      return;
     }
     $348 = ___cxa_find_matching_catch() | 0;
     $349 = tempRet0;
     $$pre738 = HEAP32[$336 >> 2] | 0;
     if (!$$pre738) {
      $lpad$phi$i250774$index = $348;
      $lpad$phi$i250774$index125 = $349;
     } else {
      $351 = HEAP32[$337 >> 2] | 0;
      if (($351 | 0) == ($$pre738 | 0)) $357 = $$pre738; else {
       $354 = $351;
       do {
        $353 = $354 + -12 | 0;
        HEAP32[$337 >> 2] = $353;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($353);
        $354 = HEAP32[$337 >> 2] | 0;
       } while (($354 | 0) != ($$pre738 | 0));
       $357 = HEAP32[$336 >> 2] | 0;
      }
      __ZdlPv($357);
      $lpad$phi$i250774$index = $348;
      $lpad$phi$i250774$index125 = $349;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    $$11 = $lpad$phi$i250774$index;
    $$sink809$index131 = $lpad$phi$i250774$index125;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$11;
   $$2534 = $$sink809$index131;
   ___resumeException($$25 | 0);
   break;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1216, 4);
   __THREW__ = 0;
   invoke_viii(3, $11 | 0, 1136, 1);
   $308 = __THREW__;
   __THREW__ = 0;
   if ($308 & 1) {
    $332 = ___cxa_find_matching_catch() | 0;
    $$10 = $332;
    $$sink808$index119 = tempRet0;
   } else {
    $310 = $agg$result + 12 | 0;
    HEAP32[$310 >> 2] = 0;
    $311 = $agg$result + 16 | 0;
    HEAP32[$311 >> 2] = 0;
    $312 = $agg$result + 20 | 0;
    HEAP32[$312 >> 2] = 0;
    __THREW__ = 0;
    $313 = invoke_ii(67, 12) | 0;
    $314 = __THREW__;
    __THREW__ = 0;
    if ($314 & 1) {
     $320 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i230772$index = $320;
     $lpad$phi$i230772$index113 = tempRet0;
    } else {
     HEAP32[$311 >> 2] = $313;
     HEAP32[$310 >> 2] = $313;
     HEAP32[$312 >> 2] = $313 + 12;
     __THREW__ = 0;
     invoke_vii(40, $313 | 0, $11 | 0);
     $317 = __THREW__;
     __THREW__ = 0;
     if (!($317 & 1)) {
      HEAP32[$311 >> 2] = (HEAP32[$311 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
      STACKTOP = sp;
      return;
     }
     $322 = ___cxa_find_matching_catch() | 0;
     $323 = tempRet0;
     $$pre737 = HEAP32[$310 >> 2] | 0;
     if (!$$pre737) {
      $lpad$phi$i230772$index = $322;
      $lpad$phi$i230772$index113 = $323;
     } else {
      $325 = HEAP32[$311 >> 2] | 0;
      if (($325 | 0) == ($$pre737 | 0)) $331 = $$pre737; else {
       $328 = $325;
       do {
        $327 = $328 + -12 | 0;
        HEAP32[$311 >> 2] = $327;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($327);
        $328 = HEAP32[$311 >> 2] | 0;
       } while (($328 | 0) != ($$pre737 | 0));
       $331 = HEAP32[$310 >> 2] | 0;
      }
      __ZdlPv($331);
      $lpad$phi$i230772$index = $322;
      $lpad$phi$i230772$index113 = $323;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    $$10 = $lpad$phi$i230772$index;
    $$sink808$index119 = $lpad$phi$i230772$index113;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$10;
   $$2534 = $$sink808$index119;
   ___resumeException($$25 | 0);
   break;
  }
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1192, 3);
   __THREW__ = 0;
   invoke_viii(3, $8 | 0, 1136, 1);
   $230 = __THREW__;
   __THREW__ = 0;
   if ($230 & 1) {
    $254 = ___cxa_find_matching_catch() | 0;
    $$7 = $254;
    $$sink805$index83 = tempRet0;
   } else {
    $232 = $agg$result + 12 | 0;
    HEAP32[$232 >> 2] = 0;
    $233 = $agg$result + 16 | 0;
    HEAP32[$233 >> 2] = 0;
    $234 = $agg$result + 20 | 0;
    HEAP32[$234 >> 2] = 0;
    __THREW__ = 0;
    $235 = invoke_ii(67, 12) | 0;
    $236 = __THREW__;
    __THREW__ = 0;
    if ($236 & 1) {
     $242 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i170766$index = $242;
     $lpad$phi$i170766$index77 = tempRet0;
    } else {
     HEAP32[$233 >> 2] = $235;
     HEAP32[$232 >> 2] = $235;
     HEAP32[$234 >> 2] = $235 + 12;
     __THREW__ = 0;
     invoke_vii(40, $235 | 0, $8 | 0);
     $239 = __THREW__;
     __THREW__ = 0;
     if (!($239 & 1)) {
      HEAP32[$233 >> 2] = (HEAP32[$233 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      STACKTOP = sp;
      return;
     }
     $244 = ___cxa_find_matching_catch() | 0;
     $245 = tempRet0;
     $$pre734 = HEAP32[$232 >> 2] | 0;
     if (!$$pre734) {
      $lpad$phi$i170766$index = $244;
      $lpad$phi$i170766$index77 = $245;
     } else {
      $247 = HEAP32[$233 >> 2] | 0;
      if (($247 | 0) == ($$pre734 | 0)) $253 = $$pre734; else {
       $250 = $247;
       do {
        $249 = $250 + -12 | 0;
        HEAP32[$233 >> 2] = $249;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($249);
        $250 = HEAP32[$233 >> 2] | 0;
       } while (($250 | 0) != ($$pre734 | 0));
       $253 = HEAP32[$232 >> 2] | 0;
      }
      __ZdlPv($253);
      $lpad$phi$i170766$index = $244;
      $lpad$phi$i170766$index77 = $245;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    $$7 = $lpad$phi$i170766$index;
    $$sink805$index83 = $lpad$phi$i170766$index77;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$7;
   $$2534 = $$sink805$index83;
   ___resumeException($$25 | 0);
   break;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1208, 4);
   __THREW__ = 0;
   invoke_viii(3, $10 | 0, 1136, 1);
   $282 = __THREW__;
   __THREW__ = 0;
   if ($282 & 1) {
    $306 = ___cxa_find_matching_catch() | 0;
    $$9 = $306;
    $$sink807$index107 = tempRet0;
   } else {
    $284 = $agg$result + 12 | 0;
    HEAP32[$284 >> 2] = 0;
    $285 = $agg$result + 16 | 0;
    HEAP32[$285 >> 2] = 0;
    $286 = $agg$result + 20 | 0;
    HEAP32[$286 >> 2] = 0;
    __THREW__ = 0;
    $287 = invoke_ii(67, 12) | 0;
    $288 = __THREW__;
    __THREW__ = 0;
    if ($288 & 1) {
     $294 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i210770$index = $294;
     $lpad$phi$i210770$index101 = tempRet0;
    } else {
     HEAP32[$285 >> 2] = $287;
     HEAP32[$284 >> 2] = $287;
     HEAP32[$286 >> 2] = $287 + 12;
     __THREW__ = 0;
     invoke_vii(40, $287 | 0, $10 | 0);
     $291 = __THREW__;
     __THREW__ = 0;
     if (!($291 & 1)) {
      HEAP32[$285 >> 2] = (HEAP32[$285 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
      STACKTOP = sp;
      return;
     }
     $296 = ___cxa_find_matching_catch() | 0;
     $297 = tempRet0;
     $$pre736 = HEAP32[$284 >> 2] | 0;
     if (!$$pre736) {
      $lpad$phi$i210770$index = $296;
      $lpad$phi$i210770$index101 = $297;
     } else {
      $299 = HEAP32[$285 >> 2] | 0;
      if (($299 | 0) == ($$pre736 | 0)) $305 = $$pre736; else {
       $302 = $299;
       do {
        $301 = $302 + -12 | 0;
        HEAP32[$285 >> 2] = $301;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($301);
        $302 = HEAP32[$285 >> 2] | 0;
       } while (($302 | 0) != ($$pre736 | 0));
       $305 = HEAP32[$284 >> 2] | 0;
      }
      __ZdlPv($305);
      $lpad$phi$i210770$index = $296;
      $lpad$phi$i210770$index101 = $297;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    $$9 = $lpad$phi$i210770$index;
    $$sink807$index107 = $lpad$phi$i210770$index101;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$25 = $$9;
   $$2534 = $$sink807$index107;
   ___resumeException($$25 | 0);
   break;
  }
 default:
  {
   $732 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 1424, 47) | 0, $builtin) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $732 + (HEAP32[(HEAP32[$732 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $737 = invoke_iii(22, $0 | 0, 47968) | 0;
   $738 = __THREW__;
   __THREW__ = 0;
   if ($738 & 1) {
    $746 = ___cxa_find_matching_catch() | 0;
    $747 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($746 | 0);
   }
   __THREW__ = 0;
   $743 = invoke_iii(HEAP32[(HEAP32[$737 >> 2] | 0) + 28 >> 2] | 0, $737 | 0, 10) | 0;
   $744 = __THREW__;
   __THREW__ = 0;
   if ($744 & 1) {
    $746 = ___cxa_find_matching_catch() | 0;
    $747 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($746 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($732, $743) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($732) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZL7unparsePK3AST($agg$result, $ast_) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $$4 = 0, $$45 = 0, $$5 = 0, $$56 = 0, $$6 = 0, $$67 = 0, $$7 = 0, $$78 = 0, $$8 = 0, $$89 = 0, $$9 = 0, $$910 = 0, $$cast$i$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1002 = 0, $1004 = 0, $1005 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1017 = 0, $1019 = 0, $102 = 0, $1021 = 0, $1023 = 0, $1024 = 0, $1026 = 0, $1027 = 0, $1029 = 0, $1031 = 0, $1032 = 0, $104 = 0, $106 = 0, $11 = 0, $113 = 0, $114 = 0, $115 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $127 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $139 = 0, $14 = 0, $140 = 0, $142 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $155 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $17 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $184 = 0, $185 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $195 = 0, $197 = 0, $199 = 0, $2 = 0, $20 = 0, $201 = 0, $203 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $229 = 0, $23 = 0, $231 = 0, $232 = 0, $237 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $244 = 0, $246 = 0, $248 = 0, $25 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $263 = 0, $264 = 0, $268 = 0, $27 = 0, $270 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $284 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $292 = 0, $293 = 0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $302 = 0, $307 = 0, $308 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $314 = 0, $316 = 0, $318 = 0, $32 = 0, $320 = 0, $321 = 0, $325 = 0, $327 = 0, $33 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $342 = 0, $343 = 0, $347 = 0, $349 = 0, $359 = 0, $360 = 0, $361 = 0, $362 = 0, $364 = 0, $365 = 0, $369 = 0, $37 = 0, $371 = 0, $381 = 0, $382 = 0, $383 = 0, $385 = 0, $387 = 0, $389 = 0, $390 = 0, $391 = 0, $393 = 0, $394 = 0, $398 = 0, $4 = 0, $400 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $414 = 0, $415 = 0, $416 = 0, $418 = 0, $421 = 0, $423 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $431 = 0, $441 = 0, $442 = 0, $443 = 0, $447 = 0, $448 = 0, $45 = 0, $452 = 0, $454 = 0, $464 = 0, $465 = 0, $466 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $472 = 0, $473 = 0, $476 = 0, $478 = 0, $48 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $492 = 0, $493 = 0, $494 = 0, $496 = 0, $497 = 0, $5 = 0, $500 = 0, $502 = 0, $51 = 0, $512 = 0, $513 = 0, $514 = 0, $516 = 0, $517 = 0, $518 = 0, $522 = 0, $524 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $539 = 0, $54 = 0, $540 = 0, $544 = 0, $546 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $561 = 0, $563 = 0, $565 = 0, $566 = 0, $567 = 0, $570 = 0, $571 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $58 = 0, $581 = 0, $582 = 0, $583 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $603 = 0, $605 = 0, $612 = 0, $613 = 0, $614 = 0, $617 = 0, $619 = 0, $622 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $633 = 0, $635 = 0, $645 = 0, $646 = 0, $647 = 0, $649 = 0, $650 = 0, $651 = 0, $655 = 0, $658 = 0, $660 = 0, $664 = 0, $666 = 0, $669 = 0, $671 = 0, $681 = 0, $682 = 0, $683 = 0, $685 = 0, $686 = 0, $689 = 0, $691 = 0, $696 = 0, $698 = 0, $7 = 0, $70 = 0, $700 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $718 = 0, $719 = 0, $72 = 0, $725 = 0, $727 = 0, $728 = 0, $733 = 0, $734 = 0, $736 = 0, $737 = 0, $738 = 0, $740 = 0, $742 = 0, $743 = 0, $747 = 0, $749 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $761 = 0, $762 = 0, $764 = 0, $765 = 0, $766 = 0, $768 = 0, $769 = 0, $77 = 0, $773 = 0, $775 = 0, $782 = 0, $783 = 0, $784 = 0, $789 = 0, $79 = 0, $791 = 0, $792 = 0, $793 = 0, $795 = 0, $797 = 0, $798 = 0, $8 = 0, $80 = 0, $802 = 0, $804 = 0, $81 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $819 = 0, $82 = 0, $820 = 0, $824 = 0, $826 = 0, $836 = 0, $837 = 0, $838 = 0, $84 = 0, $840 = 0, $841 = 0, $844 = 0, $845 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $86 = 0, $860 = 0, $861 = 0, $865 = 0, $867 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $881 = 0, $883 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $891 = 0, $894 = 0, $896 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $902 = 0, $904 = 0, $906 = 0, $908 = 0, $909 = 0, $911 = 0, $912 = 0, $918 = 0, $92 = 0, $920 = 0, $921 = 0, $926 = 0, $927 = 0, $929 = 0, $930 = 0, $931 = 0, $933 = 0, $935 = 0, $937 = 0, $94 = 0, $947 = 0, $948 = 0, $949 = 0, $950 = 0, $954 = 0, $956 = 0, $96 = 0, $966 = 0, $967 = 0, $968 = 0, $97 = 0, $970 = 0, $972 = 0, $973 = 0, $974 = 0, $977 = 0, $978 = 0, $98 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $992 = 0, $993 = 0, $995 = 0, $996 = 0, $colons$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index28Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body60$index15Z2D = 0, $eh$lpad$body60$indexZ2D = 0, $prefix$0299 = 0, $prefix10$0292 = 0, $prefix19$0287 = 0, $prefix2$0295 = 0, $prefix27$0286 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 488 | 0;
 $1 = sp + 484 | 0;
 $2 = sp + 480 | 0;
 $3 = sp + 476 | 0;
 $4 = sp + 472 | 0;
 $ss = sp + 328 | 0;
 $5 = sp + 312 | 0;
 $6 = sp + 300 | 0;
 $7 = sp + 288 | 0;
 $8 = sp + 276 | 0;
 $9 = sp + 264 | 0;
 $10 = sp + 252 | 0;
 $11 = sp + 240 | 0;
 $12 = sp + 228 | 0;
 $13 = sp + 216 | 0;
 $14 = sp + 204 | 0;
 $15 = sp + 192 | 0;
 $16 = sp + 180 | 0;
 $17 = sp + 168 | 0;
 $18 = sp + 156 | 0;
 $19 = sp + 144 | 0;
 $20 = sp + 132 | 0;
 $21 = sp + 120 | 0;
 $22 = sp + 108 | 0;
 $23 = sp + 96 | 0;
 $24 = sp + 84 | 0;
 $25 = sp + 72 | 0;
 $26 = sp + 60 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 36 | 0;
 $29 = sp + 24 | 0;
 $30 = sp + 12 | 0;
 $31 = sp;
 $32 = $ss + 64 | 0;
 $33 = $ss + 8 | 0;
 HEAP32[$33 >> 2] = 592;
 $34 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$32 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $34 | 0);
 $37 = __THREW__;
 __THREW__ = 0;
 if ($37 & 1) {
  $49 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $49;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 572;
 HEAP32[$32 >> 2] = 612;
 HEAP32[$33 >> 2] = 592;
 __THREW__ = 0;
 invoke_vi(177, $34 | 0);
 $41 = __THREW__;
 __THREW__ = 0;
 do if ($41 & 1) {
  $51 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $51;
 } else {
  HEAP32[$34 >> 2] = 904;
  $43 = $ss + 44 | 0;
  HEAP32[$43 + 0 >> 2] = 0;
  HEAP32[$43 + 4 >> 2] = 0;
  HEAP32[$43 + 8 >> 2] = 0;
  HEAP32[$43 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $34 | 0, $0 | 0);
  $45 = __THREW__;
  __THREW__ = 0;
  if ($45 & 1) {
   $47 = ___cxa_find_matching_catch() | 0;
   $48 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
   $eh$lpad$body$i$index2Z2D = $48;
   $eh$lpad$body$i$indexZ2D = $47;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  L10 : do if (!$ast_) label = 349; else {
   $54 = ___dynamic_cast($ast_, 33800, 34048, 0) | 0;
   L12 : do if (!$54) {
    $123 = ___dynamic_cast($ast_, 33800, 34080, 0) | 0;
    if ($123) {
     $127 = HEAP32[$123 + 52 >> 2] | 0;
     $128 = HEAP32[$123 + 48 >> 2] | 0;
     if (($127 | 0) == ($128 | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, 37424, 3) | 0;
      $133 = __THREW__;
      __THREW__ = 0;
      if ($133 & 1) {
       label = 24;
       break L10;
      } else break;
     }
     $130 = $7 + 1 | 0;
     $131 = $7 + 8 | 0;
     $132 = $7 + 4 | 0;
     $139 = $128;
     $prefix2$0295 = 37440;
     while (1) {
      $135 = _strlen($prefix2$0295 | 0) | 0;
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, $prefix2$0295 | 0, $135 | 0) | 0;
      $136 = __THREW__;
      __THREW__ = 0;
      if ($136 & 1) {
       label = 22;
       break;
      }
      __THREW__ = 0;
      invoke_vii(53, $7 | 0, HEAP32[$139 >> 2] | 0);
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) {
       label = 22;
       break;
      }
      $142 = HEAP8[$7 >> 0] | 0;
      if (!($142 & 1)) {
       $149 = $130;
       $150 = ($142 & 255) >>> 1;
      } else {
       $149 = HEAP32[$131 >> 2] | 0;
       $150 = HEAP32[$132 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, $149 | 0, $150 | 0) | 0;
      $151 = __THREW__;
      __THREW__ = 0;
      if ($151 & 1) {
       label = 47;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $139 = $139 + 4 | 0;
      if (($139 | 0) == ($127 | 0)) {
       label = 48;
       break;
      } else $prefix2$0295 = 36528;
     }
     if ((label | 0) == 22) {
      $90 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body60$index15Z2D = tempRet0;
      $eh$lpad$body60$indexZ2D = $90;
      break L10;
     } else if ((label | 0) == 47) {
      $155 = ___cxa_find_matching_catch() | 0;
      $156 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$9 = $155;
      $$910 = $156;
      HEAP32[$ss >> 2] = 572;
      HEAP32[$32 >> 2] = 612;
      HEAP32[$33 >> 2] = 592;
      HEAP32[$34 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } else if ((label | 0) == 48) {
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, 37464, 1) | 0;
      $157 = __THREW__;
      __THREW__ = 0;
      if ($157 & 1) {
       label = 24;
       break L10;
      } else break;
     }
    }
    $159 = ___dynamic_cast($ast_, 33800, 34104, 0) | 0;
    if ($159) {
     __THREW__ = 0;
     invoke_vii(53, $8 | 0, HEAP32[$159 + 48 >> 2] | 0);
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 24;
      break L10;
     }
     $165 = HEAP8[$8 >> 0] | 0;
     if (!($165 & 1)) {
      $175 = $8 + 1 | 0;
      $176 = ($165 & 255) >>> 1;
     } else {
      $175 = HEAP32[$8 + 8 >> 2] | 0;
      $176 = HEAP32[$8 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $177 = invoke_iiii(25, $33 | 0, $175 | 0, $176 | 0) | 0;
     $178 = __THREW__;
     __THREW__ = 0;
     L41 : do if ($178 & 1) label = 95; else {
      __THREW__ = 0;
      $180 = invoke_iiii(25, $177 | 0, 40056, 1) | 0;
      $181 = __THREW__;
      __THREW__ = 0;
      if ($181 & 1) label = 95; else {
       $184 = HEAP32[$159 + 52 >> 2] | 0;
       do switch ($184 | 0) {
       case 11:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39696, 2);
         $207 = __THREW__;
         __THREW__ = 0;
         if ($207 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 12:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39704, 1);
         $209 = __THREW__;
         __THREW__ = 0;
         if ($209 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 13:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39712, 1);
         $211 = __THREW__;
         __THREW__ = 0;
         if ($211 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 8:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39672, 1);
         $201 = __THREW__;
         __THREW__ = 0;
         if ($201 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 9:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39680, 2);
         $203 = __THREW__;
         __THREW__ = 0;
         if ($203 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 10:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39688, 2);
         $205 = __THREW__;
         __THREW__ = 0;
         if ($205 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 14:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39720, 1);
         $213 = __THREW__;
         __THREW__ = 0;
         if ($213 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 15:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39728, 2);
         $215 = __THREW__;
         __THREW__ = 0;
         if ($215 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 16:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39736, 2);
         $217 = __THREW__;
         __THREW__ = 0;
         if ($217 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 0:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39632, 1);
         $185 = __THREW__;
         __THREW__ = 0;
         if ($185 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 1:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39640, 1);
         $187 = __THREW__;
         __THREW__ = 0;
         if ($187 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 2:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39312, 1);
         $189 = __THREW__;
         __THREW__ = 0;
         if ($189 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 3:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 40064, 1);
         $191 = __THREW__;
         __THREW__ = 0;
         if ($191 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 4:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39648, 2);
         $193 = __THREW__;
         __THREW__ = 0;
         if ($193 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 5:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39656, 2);
         $195 = __THREW__;
         __THREW__ = 0;
         if ($195 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 6:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 37024, 1);
         $197 = __THREW__;
         __THREW__ = 0;
         if ($197 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 7:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39664, 2);
         $199 = __THREW__;
         __THREW__ = 0;
         if ($199 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       default:
        {
         __THREW__ = 0;
         $219 = invoke_iiii(25, 43744, 39744, 46) | 0;
         $220 = __THREW__;
         __THREW__ = 0;
         if ($220 & 1) {
          label = 95;
          break L41;
         }
         __THREW__ = 0;
         $222 = invoke_iii(21, $219 | 0, $184 | 0) | 0;
         $223 = __THREW__;
         __THREW__ = 0;
         if ($223 & 1) {
          label = 95;
          break L41;
         }
         __THREW__ = 0;
         invoke_vii(47, $4 | 0, $222 + (HEAP32[(HEAP32[$222 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $229 = __THREW__;
         __THREW__ = 0;
         if ($229 & 1) {
          label = 95;
          break L41;
         }
         __THREW__ = 0;
         $231 = invoke_iii(22, $4 | 0, 47968) | 0;
         $232 = __THREW__;
         __THREW__ = 0;
         do if (!($232 & 1)) {
          __THREW__ = 0;
          $237 = invoke_iii(HEAP32[(HEAP32[$231 >> 2] | 0) + 28 >> 2] | 0, $231 | 0, 10) | 0;
          $238 = __THREW__;
          __THREW__ = 0;
          if ($238 & 1) break;
          __ZNSt3__16localeD2Ev($4);
          __THREW__ = 0;
          invoke_iii(25, $222 | 0, $237 | 0) | 0;
          $242 = __THREW__;
          __THREW__ = 0;
          if ($242 & 1) {
           label = 95;
           break L41;
          }
          __THREW__ = 0;
          invoke_ii(68, $222 | 0) | 0;
          $244 = __THREW__;
          __THREW__ = 0;
          if ($244 & 1) {
           label = 95;
           break L41;
          }
          __THREW__ = 0;
          invoke_v(3);
          $246 = __THREW__;
          __THREW__ = 0;
          if ($246 & 1) {
           label = 95;
           break L41;
          }
         } while (0);
         $240 = ___cxa_find_matching_catch() | 0;
         $241 = tempRet0;
         __ZNSt3__16localeD2Ev($4);
         $eh$lpad$body$index28Z2D = $241;
         $eh$lpad$body$indexZ2D = $240;
         label = 96;
         break L41;
        }
       } while (0);
       $248 = HEAP8[$9 >> 0] | 0;
       if (!($248 & 1)) {
        $258 = $9 + 1 | 0;
        $259 = ($248 & 255) >>> 1;
       } else {
        $258 = HEAP32[$9 + 8 >> 2] | 0;
        $259 = HEAP32[$9 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $260 = invoke_iiii(25, $180 | 0, $258 | 0, $259 | 0) | 0;
       $261 = __THREW__;
       __THREW__ = 0;
       do if ($261 & 1) label = 97; else {
        __THREW__ = 0;
        $263 = invoke_iiii(25, $260 | 0, 40056, 1) | 0;
        $264 = __THREW__;
        __THREW__ = 0;
        if ($264 & 1) label = 97; else {
         __THREW__ = 0;
         invoke_vii(53, $10 | 0, HEAP32[$159 + 56 >> 2] | 0);
         $268 = __THREW__;
         __THREW__ = 0;
         if ($268 & 1) {
          label = 97;
          break;
         }
         $270 = HEAP8[$10 >> 0] | 0;
         if (!($270 & 1)) {
          $280 = $10 + 1 | 0;
          $281 = ($270 & 255) >>> 1;
         } else {
          $280 = HEAP32[$10 + 8 >> 2] | 0;
          $281 = HEAP32[$10 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $263 | 0, $280 | 0, $281 | 0) | 0;
         $282 = __THREW__;
         __THREW__ = 0;
         if ($282 & 1) {
          $288 = ___cxa_find_matching_catch() | 0;
          $289 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
          $$0 = $288;
          $$01 = $289;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
          break L12;
         }
        }
       } while (0);
       if ((label | 0) == 97) {
        $286 = ___cxa_find_matching_catch() | 0;
        $$0 = $286;
        $$01 = tempRet0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       $$1 = $$0;
       $$12 = $$01;
      }
     } while (0);
     if ((label | 0) == 95) {
      $284 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index28Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $284;
      label = 96;
     }
     if ((label | 0) == 96) {
      $$1 = $eh$lpad$body$indexZ2D;
      $$12 = $eh$lpad$body$index28Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     $$9 = $$1;
     $$910 = $$12;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 33800, 33944, 0) | 0) {
     __THREW__ = 0;
     $292 = invoke_iiii(25, 43744, 34120, 43) | 0;
     $293 = __THREW__;
     __THREW__ = 0;
     if ($293 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(47, $3 | 0, $292 + (HEAP32[(HEAP32[$292 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $299 = __THREW__;
     __THREW__ = 0;
     if ($299 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     $301 = invoke_iii(22, $3 | 0, 47968) | 0;
     $302 = __THREW__;
     __THREW__ = 0;
     if (!($302 & 1)) {
      __THREW__ = 0;
      $307 = invoke_iii(HEAP32[(HEAP32[$301 >> 2] | 0) + 28 >> 2] | 0, $301 | 0, 10) | 0;
      $308 = __THREW__;
      __THREW__ = 0;
      if (!($308 & 1)) {
       __ZNSt3__16localeD2Ev($3);
       __THREW__ = 0;
       invoke_iii(25, $292 | 0, $307 | 0) | 0;
       $312 = __THREW__;
       __THREW__ = 0;
       if ($312 & 1) {
        label = 24;
        break L10;
       }
       __THREW__ = 0;
       invoke_ii(68, $292 | 0) | 0;
       $314 = __THREW__;
       __THREW__ = 0;
       if ($314 & 1) {
        label = 24;
        break L10;
       }
       __THREW__ = 0;
       invoke_v(3);
       $316 = __THREW__;
       __THREW__ = 0;
       if ($316 & 1) {
        label = 24;
        break L10;
       }
      }
     }
     $310 = ___cxa_find_matching_catch() | 0;
     $311 = tempRet0;
     __ZNSt3__16localeD2Ev($3);
     $eh$lpad$body60$index15Z2D = $311;
     $eh$lpad$body60$indexZ2D = $310;
     break L10;
    }
    $318 = ___dynamic_cast($ast_, 33800, 34184, 0) | 0;
    if ($318) {
     __THREW__ = 0;
     $320 = invoke_iiii(25, $33 | 0, 34200, 3) | 0;
     $321 = __THREW__;
     __THREW__ = 0;
     if ($321 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $11 | 0, HEAP32[$318 + 48 >> 2] | 0);
     $325 = __THREW__;
     __THREW__ = 0;
     if ($325 & 1) {
      label = 24;
      break L10;
     }
     $327 = HEAP8[$11 >> 0] | 0;
     if (!($327 & 1)) {
      $337 = $11 + 1 | 0;
      $338 = ($327 & 255) >>> 1;
     } else {
      $337 = HEAP32[$11 + 8 >> 2] | 0;
      $338 = HEAP32[$11 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $339 = invoke_iiii(25, $320 | 0, $337 | 0, $338 | 0) | 0;
     $340 = __THREW__;
     __THREW__ = 0;
     if ($340 & 1) label = 131; else {
      __THREW__ = 0;
      $342 = invoke_iiii(25, $339 | 0, 34208, 6) | 0;
      $343 = __THREW__;
      __THREW__ = 0;
      if ($343 & 1) label = 131; else {
       __THREW__ = 0;
       invoke_vii(53, $12 | 0, HEAP32[$318 + 52 >> 2] | 0);
       $347 = __THREW__;
       __THREW__ = 0;
       if ($347 & 1) label = 131; else {
        $349 = HEAP8[$12 >> 0] | 0;
        if (!($349 & 1)) {
         $359 = $12 + 1 | 0;
         $360 = ($349 & 255) >>> 1;
        } else {
         $359 = HEAP32[$12 + 8 >> 2] | 0;
         $360 = HEAP32[$12 + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        $361 = invoke_iiii(25, $342 | 0, $359 | 0, $360 | 0) | 0;
        $362 = __THREW__;
        __THREW__ = 0;
        do if ($362 & 1) label = 132; else {
         __THREW__ = 0;
         $364 = invoke_iiii(25, $361 | 0, 34216, 6) | 0;
         $365 = __THREW__;
         __THREW__ = 0;
         if ($365 & 1) {
          label = 132;
          break;
         }
         __THREW__ = 0;
         invoke_vii(53, $13 | 0, HEAP32[$318 + 56 >> 2] | 0);
         $369 = __THREW__;
         __THREW__ = 0;
         if ($369 & 1) {
          label = 132;
          break;
         }
         $371 = HEAP8[$13 >> 0] | 0;
         if (!($371 & 1)) {
          $381 = $13 + 1 | 0;
          $382 = ($371 & 255) >>> 1;
         } else {
          $381 = HEAP32[$13 + 8 >> 2] | 0;
          $382 = HEAP32[$13 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $364 | 0, $381 | 0, $382 | 0) | 0;
         $383 = __THREW__;
         __THREW__ = 0;
         if ($383 & 1) {
          $389 = ___cxa_find_matching_catch() | 0;
          $390 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          $$2 = $389;
          $$23 = $390;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
          break L12;
         }
        } while (0);
        if ((label | 0) == 132) {
         $387 = ___cxa_find_matching_catch() | 0;
         $$2 = $387;
         $$23 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
        $$3 = $$2;
        $$34 = $$23;
       }
      }
     }
     if ((label | 0) == 131) {
      $385 = ___cxa_find_matching_catch() | 0;
      $$3 = $385;
      $$34 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     $$9 = $$3;
     $$910 = $$34;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $391 = ___dynamic_cast($ast_, 33800, 34232, 0) | 0;
    if ($391) {
     __THREW__ = 0;
     $393 = invoke_iiii(25, $33 | 0, 34248, 6) | 0;
     $394 = __THREW__;
     __THREW__ = 0;
     if ($394 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $14 | 0, HEAP32[$391 + 48 >> 2] | 0);
     $398 = __THREW__;
     __THREW__ = 0;
     if ($398 & 1) {
      label = 24;
      break L10;
     }
     $400 = HEAP8[$14 >> 0] | 0;
     if (!($400 & 1)) {
      $410 = $14 + 1 | 0;
      $411 = ($400 & 255) >>> 1;
     } else {
      $410 = HEAP32[$14 + 8 >> 2] | 0;
      $411 = HEAP32[$14 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $393 | 0, $410 | 0, $411 | 0) | 0;
     $412 = __THREW__;
     __THREW__ = 0;
     if (!($412 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
      break;
     }
     $414 = ___cxa_find_matching_catch() | 0;
     $415 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     $$9 = $414;
     $$910 = $415;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $416 = ___dynamic_cast($ast_, 33800, 34272, 0) | 0;
    if ($416) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 34288, 9) | 0;
     $418 = __THREW__;
     __THREW__ = 0;
     if ($418 & 1) {
      label = 24;
      break L10;
     }
     $421 = HEAP32[$416 + 48 >> 2] | 0;
     $423 = HEAP32[$416 + 52 >> 2] | 0;
     do if (($421 | 0) != ($423 | 0)) {
      $426 = $421;
      $prefix10$0292 = 40072;
      while (1) {
       $425 = HEAP32[$426 >> 2] | 0;
       $427 = _strlen($prefix10$0292 | 0) | 0;
       __THREW__ = 0;
       $428 = invoke_iiii(25, $33 | 0, $prefix10$0292 | 0, $427 | 0) | 0;
       $429 = __THREW__;
       __THREW__ = 0;
       if ($429 & 1) {
        label = 21;
        break;
       }
       $431 = HEAP8[$425 >> 0] | 0;
       if (!($431 & 1)) {
        $441 = $425 + 1 | 0;
        $442 = ($431 & 255) >>> 1;
       } else {
        $441 = HEAP32[$425 + 8 >> 2] | 0;
        $442 = HEAP32[$425 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $428 | 0, $441 | 0, $442 | 0) | 0;
       $443 = __THREW__;
       __THREW__ = 0;
       if ($443 & 1) {
        label = 21;
        break;
       }
       $426 = $426 + 4 | 0;
       if (($426 | 0) == ($423 | 0)) {
        label = 155;
        break;
       } else $prefix10$0292 = 36528;
      }
      if ((label | 0) == 21) {
       $88 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body60$index15Z2D = tempRet0;
       $eh$lpad$body60$indexZ2D = $88;
       break L10;
      } else if ((label | 0) == 155) break;
     } while (0);
     __THREW__ = 0;
     $447 = invoke_iiii(25, $33 | 0, 34304, 2) | 0;
     $448 = __THREW__;
     __THREW__ = 0;
     if ($448 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $15 | 0, HEAP32[$416 + 60 >> 2] | 0);
     $452 = __THREW__;
     __THREW__ = 0;
     if ($452 & 1) {
      label = 24;
      break L10;
     }
     $454 = HEAP8[$15 >> 0] | 0;
     if (!($454 & 1)) {
      $464 = $15 + 1 | 0;
      $465 = ($454 & 255) >>> 1;
     } else {
      $464 = HEAP32[$15 + 8 >> 2] | 0;
      $465 = HEAP32[$15 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $447 | 0, $464 | 0, $465 | 0) | 0;
     $466 = __THREW__;
     __THREW__ = 0;
     if (!($466 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      break;
     }
     $468 = ___cxa_find_matching_catch() | 0;
     $469 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
     $$9 = $468;
     $$910 = $469;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $470 = ___dynamic_cast($ast_, 33800, 34320, 0) | 0;
    if ($470) {
     __THREW__ = 0;
     $472 = invoke_iiii(25, $33 | 0, 34336, 7) | 0;
     $473 = __THREW__;
     __THREW__ = 0;
     if ($473 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(54, $16 | 0, $470 + 48 | 0);
     $476 = __THREW__;
     __THREW__ = 0;
     if ($476 & 1) {
      label = 24;
      break L10;
     }
     $478 = HEAP8[$16 >> 0] | 0;
     if (!($478 & 1)) {
      $488 = $16 + 1 | 0;
      $489 = ($478 & 255) >>> 1;
     } else {
      $488 = HEAP32[$16 + 8 >> 2] | 0;
      $489 = HEAP32[$16 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $472 | 0, $488 | 0, $489 | 0) | 0;
     $490 = __THREW__;
     __THREW__ = 0;
     if (!($490 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
      break;
     }
     $492 = ___cxa_find_matching_catch() | 0;
     $493 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     $$9 = $492;
     $$910 = $493;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $494 = ___dynamic_cast($ast_, 33800, 34360, 0) | 0;
    if ($494) {
     __THREW__ = 0;
     $496 = invoke_iiii(25, $33 | 0, 34376, 10) | 0;
     $497 = __THREW__;
     __THREW__ = 0;
     if ($497 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(54, $17 | 0, $494 + 48 | 0);
     $500 = __THREW__;
     __THREW__ = 0;
     if ($500 & 1) {
      label = 24;
      break L10;
     }
     $502 = HEAP8[$17 >> 0] | 0;
     if (!($502 & 1)) {
      $512 = $17 + 1 | 0;
      $513 = ($502 & 255) >>> 1;
     } else {
      $512 = HEAP32[$17 + 8 >> 2] | 0;
      $513 = HEAP32[$17 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $496 | 0, $512 | 0, $513 | 0) | 0;
     $514 = __THREW__;
     __THREW__ = 0;
     if (!($514 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      break;
     }
     $516 = ___cxa_find_matching_catch() | 0;
     $517 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     $$9 = $516;
     $$910 = $517;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $518 = ___dynamic_cast($ast_, 33800, 34400, 0) | 0;
    if ($518) {
     __THREW__ = 0;
     invoke_vii(53, $18 | 0, HEAP32[$518 + 48 >> 2] | 0);
     $522 = __THREW__;
     __THREW__ = 0;
     if ($522 & 1) {
      label = 24;
      break L10;
     }
     $524 = HEAP8[$18 >> 0] | 0;
     if (!($524 & 1)) {
      $534 = $18 + 1 | 0;
      $535 = ($524 & 255) >>> 1;
     } else {
      $534 = HEAP32[$18 + 8 >> 2] | 0;
      $535 = HEAP32[$18 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $536 = invoke_iiii(25, $33 | 0, $534 | 0, $535 | 0) | 0;
     $537 = __THREW__;
     __THREW__ = 0;
     do if ($537 & 1) label = 196; else {
      __THREW__ = 0;
      $539 = invoke_iiii(25, $536 | 0, 37440, 1) | 0;
      $540 = __THREW__;
      __THREW__ = 0;
      if ($540 & 1) {
       label = 196;
       break;
      }
      __THREW__ = 0;
      invoke_vii(53, $19 | 0, HEAP32[$518 + 52 >> 2] | 0);
      $544 = __THREW__;
      __THREW__ = 0;
      if ($544 & 1) {
       label = 196;
       break;
      }
      $546 = HEAP8[$19 >> 0] | 0;
      if (!($546 & 1)) {
       $556 = $19 + 1 | 0;
       $557 = ($546 & 255) >>> 1;
      } else {
       $556 = HEAP32[$19 + 8 >> 2] | 0;
       $557 = HEAP32[$19 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $558 = invoke_iiii(25, $539 | 0, $556 | 0, $557 | 0) | 0;
      $559 = __THREW__;
      __THREW__ = 0;
      do if (!($559 & 1)) {
       __THREW__ = 0;
       invoke_iiii(25, $558 | 0, 37464, 1) | 0;
       $561 = __THREW__;
       __THREW__ = 0;
       if ($561 & 1) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
       break L12;
      } while (0);
      $565 = ___cxa_find_matching_catch() | 0;
      $566 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
      $$4 = $565;
      $$45 = $566;
     } while (0);
     if ((label | 0) == 196) {
      $563 = ___cxa_find_matching_catch() | 0;
      $$4 = $563;
      $$45 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     $$9 = $$4;
     $$910 = $$45;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $567 = ___dynamic_cast($ast_, 33800, 33816, 0) | 0;
    if ($567) {
     $570 = HEAP32[$567 + 48 >> 2] | 0;
     $571 = $567 + 52 | 0;
     do if (($570 | 0) != ($571 | 0)) {
      $573 = $20 + 1 | 0;
      $574 = $20 + 8 | 0;
      $575 = $20 + 4 | 0;
      $581 = $570;
      $prefix19$0287 = 34416;
      while (1) {
       $576 = _strlen($prefix19$0287 | 0) | 0;
       __THREW__ = 0;
       $577 = invoke_iiii(25, $33 | 0, $prefix19$0287 | 0, $576 | 0) | 0;
       $578 = __THREW__;
       __THREW__ = 0;
       if ($578 & 1) {
        label = 20;
        break;
       }
       $582 = HEAP32[$581 + 16 >> 2] | 0;
       $583 = HEAP8[$582 >> 0] | 0;
       if (!($583 & 1)) {
        $593 = $582 + 1 | 0;
        $594 = ($583 & 255) >>> 1;
       } else {
        $593 = HEAP32[$582 + 8 >> 2] | 0;
        $594 = HEAP32[$582 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $595 = invoke_iiii(25, $577 | 0, $593 | 0, $594 | 0) | 0;
       $596 = __THREW__;
       __THREW__ = 0;
       if ($596 & 1) {
        label = 20;
        break;
       }
       __THREW__ = 0;
       $598 = invoke_iiii(25, $595 | 0, 34424, 3) | 0;
       $599 = __THREW__;
       __THREW__ = 0;
       if ($599 & 1) {
        label = 20;
        break;
       }
       __THREW__ = 0;
       invoke_vii(53, $20 | 0, HEAP32[$581 + 20 >> 2] | 0);
       $603 = __THREW__;
       __THREW__ = 0;
       if ($603 & 1) {
        label = 20;
        break;
       }
       $605 = HEAP8[$20 >> 0] | 0;
       if (!($605 & 1)) {
        $612 = $573;
        $613 = ($605 & 255) >>> 1;
       } else {
        $612 = HEAP32[$574 >> 2] | 0;
        $613 = HEAP32[$575 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $598 | 0, $612 | 0, $613 | 0) | 0;
       $614 = __THREW__;
       __THREW__ = 0;
       if ($614 & 1) {
        label = 221;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
       $617 = HEAP32[$581 + 4 >> 2] | 0;
       if (!$617) {
        $$0$i$i$i = $581;
        while (1) {
         $622 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$622 >> 2] | 0) == ($$0$i$i$i | 0)) {
          $$cast$i$i$i$lcssa = $622;
          break;
         } else $$0$i$i$i = $622;
        }
        $$01$i$i$i = $$cast$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i = $617;
        while (1) {
         $619 = HEAP32[$$0$i$i$i$i >> 2] | 0;
         if (!$619) {
          $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
          break;
         } else $$0$i$i$i$i = $619;
        }
        $$01$i$i$i = $$0$i$i$i$i$lcssa;
       }
       if (($$01$i$i$i | 0) == ($571 | 0)) {
        label = 222;
        break;
       } else {
        $581 = $$01$i$i$i;
        $prefix19$0287 = 36528;
       }
      }
      if ((label | 0) == 20) {
       $86 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body60$index15Z2D = tempRet0;
       $eh$lpad$body60$indexZ2D = $86;
       break L10;
      } else if ((label | 0) == 221) {
       $626 = ___cxa_find_matching_catch() | 0;
       $627 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
       $$9 = $626;
       $$910 = $627;
       HEAP32[$ss >> 2] = 572;
       HEAP32[$32 >> 2] = 612;
       HEAP32[$33 >> 2] = 592;
       HEAP32[$34 >> 2] = 904;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
       ___resumeException($$9 | 0);
      } else if ((label | 0) == 222) break;
     } while (0);
     __THREW__ = 0;
     $628 = invoke_iiii(25, $33 | 0, 34432, 2) | 0;
     $629 = __THREW__;
     __THREW__ = 0;
     if ($629 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $21 | 0, HEAP32[$567 + 60 >> 2] | 0);
     $633 = __THREW__;
     __THREW__ = 0;
     if ($633 & 1) {
      label = 24;
      break L10;
     }
     $635 = HEAP8[$21 >> 0] | 0;
     if (!($635 & 1)) {
      $645 = $21 + 1 | 0;
      $646 = ($635 & 255) >>> 1;
     } else {
      $645 = HEAP32[$21 + 8 >> 2] | 0;
      $646 = HEAP32[$21 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $628 | 0, $645 | 0, $646 | 0) | 0;
     $647 = __THREW__;
     __THREW__ = 0;
     if (!($647 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
      break;
     }
     $649 = ___cxa_find_matching_catch() | 0;
     $650 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
     $$9 = $649;
     $$910 = $650;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $651 = ___dynamic_cast($ast_, 33800, 34464, 0) | 0;
    if ($651) {
     $655 = (HEAP8[$651 + 48 >> 0] | 0) != 0;
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, ($655 ? 48208 : 48240) | 0, ($655 ? 4 : 5) | 0) | 0;
     $658 = __THREW__;
     __THREW__ = 0;
     if ($658 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $660 = ___dynamic_cast($ast_, 33800, 34496, 0) | 0;
    if ($660) {
     __THREW__ = 0;
     invoke_iid(1, $33 | 0, +(+HEAPF64[$660 + 48 >> 3])) | 0;
     $664 = __THREW__;
     __THREW__ = 0;
     if ($664 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $666 = ___dynamic_cast($ast_, 33800, 34008, 0) | 0;
    if ($666) {
     __THREW__ = 0;
     invoke_vii(54, $22 | 0, $666 + 48 | 0);
     $669 = __THREW__;
     __THREW__ = 0;
     if ($669 & 1) {
      label = 24;
      break L10;
     }
     $671 = HEAP8[$22 >> 0] | 0;
     if (!($671 & 1)) {
      $681 = $22 + 1 | 0;
      $682 = ($671 & 255) >>> 1;
     } else {
      $681 = HEAP32[$22 + 8 >> 2] | 0;
      $682 = HEAP32[$22 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, $681 | 0, $682 | 0) | 0;
     $683 = __THREW__;
     __THREW__ = 0;
     if (!($683 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
      break;
     }
     $685 = ___cxa_find_matching_catch() | 0;
     $686 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     $$9 = $685;
     $$910 = $686;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 33800, 34528, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 37256, 4) | 0;
     $689 = __THREW__;
     __THREW__ = 0;
     if ($689 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $691 = ___dynamic_cast($ast_, 33800, 34552, 0) | 0;
    if ($691) {
     if (!(HEAP32[$691 + 56 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, 37520, 3) | 0;
      $696 = __THREW__;
      __THREW__ = 0;
      if ($696 & 1) {
       label = 24;
       break L10;
      } else break;
     }
     $698 = $691 + 48 | 0;
     $700 = HEAP32[$691 + 52 >> 2] | 0;
     do if (($700 | 0) != ($698 | 0)) {
      $702 = $23 + 1 | 0;
      $703 = $24 + 1 | 0;
      $704 = $24 + 8 | 0;
      $705 = $24 + 4 | 0;
      $706 = $23 + 8 | 0;
      $707 = $23 + 4 | 0;
      $712 = $700;
      $prefix27$0286 = 37536;
      while (1) {
       $708 = _strlen($prefix27$0286 | 0) | 0;
       __THREW__ = 0;
       invoke_iiii(25, $33 | 0, $prefix27$0286 | 0, $708 | 0) | 0;
       $709 = __THREW__;
       __THREW__ = 0;
       if ($709 & 1) {
        label = 19;
        break;
       }
       $711 = $712 + 12 | 0;
       $713 = HEAP32[$711 >> 2] | 0;
       if (($713 | 0) == 1) $colons$0 = 34568; else if (($713 | 0) == 2) $colons$0 = 34576; else if (!$713) $colons$0 = 40048; else {
        __THREW__ = 0;
        $714 = invoke_iiii(25, 43744, 34584, 35) | 0;
        $715 = __THREW__;
        __THREW__ = 0;
        if ($715 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        $718 = invoke_iii(21, $714 | 0, HEAP32[$711 >> 2] | 0) | 0;
        $719 = __THREW__;
        __THREW__ = 0;
        if ($719 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        invoke_vii(47, $0 | 0, $718 + (HEAP32[(HEAP32[$718 >> 2] | 0) + -12 >> 2] | 0) | 0);
        $725 = __THREW__;
        __THREW__ = 0;
        if ($725 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        $727 = invoke_iii(22, $0 | 0, 47968) | 0;
        $728 = __THREW__;
        __THREW__ = 0;
        if ($728 & 1) {
         label = 259;
         break;
        }
        __THREW__ = 0;
        $733 = invoke_iii(HEAP32[(HEAP32[$727 >> 2] | 0) + 28 >> 2] | 0, $727 | 0, 10) | 0;
        $734 = __THREW__;
        __THREW__ = 0;
        if ($734 & 1) {
         label = 259;
         break;
        }
        __ZNSt3__16localeD2Ev($0);
        __THREW__ = 0;
        invoke_iii(25, $718 | 0, $733 | 0) | 0;
        $738 = __THREW__;
        __THREW__ = 0;
        if ($738 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $718 | 0) | 0;
        $740 = __THREW__;
        __THREW__ = 0;
        if ($740 & 1) {
         label = 19;
         break;
        } else $colons$0 = 0;
       }
       __THREW__ = 0;
       $742 = invoke_iiii(25, $33 | 0, 37440, 1) | 0;
       $743 = __THREW__;
       __THREW__ = 0;
       if ($743 & 1) {
        label = 19;
        break;
       }
       __THREW__ = 0;
       invoke_vii(53, $23 | 0, HEAP32[$712 + 8 >> 2] | 0);
       $747 = __THREW__;
       __THREW__ = 0;
       if ($747 & 1) {
        label = 19;
        break;
       }
       $749 = HEAP8[$23 >> 0] | 0;
       if (!($749 & 1)) {
        $756 = $702;
        $757 = ($749 & 255) >>> 1;
       } else {
        $756 = HEAP32[$706 >> 2] | 0;
        $757 = HEAP32[$707 >> 2] | 0;
       }
       __THREW__ = 0;
       $758 = invoke_iiii(25, $742 | 0, $756 | 0, $757 | 0) | 0;
       $759 = __THREW__;
       __THREW__ = 0;
       if ($759 & 1) {
        label = 277;
        break;
       }
       __THREW__ = 0;
       $761 = invoke_iiii(25, $758 | 0, 37464, 1) | 0;
       $762 = __THREW__;
       __THREW__ = 0;
       if ($762 & 1) {
        label = 277;
        break;
       }
       $764 = _strlen($colons$0 | 0) | 0;
       __THREW__ = 0;
       $765 = invoke_iiii(25, $761 | 0, $colons$0 | 0, $764 | 0) | 0;
       $766 = __THREW__;
       __THREW__ = 0;
       if ($766 & 1) {
        label = 277;
        break;
       }
       __THREW__ = 0;
       $768 = invoke_iiii(25, $765 | 0, 40056, 1) | 0;
       $769 = __THREW__;
       __THREW__ = 0;
       if ($769 & 1) {
        label = 277;
        break;
       }
       __THREW__ = 0;
       invoke_vii(53, $24 | 0, HEAP32[$712 + 16 >> 2] | 0);
       $773 = __THREW__;
       __THREW__ = 0;
       if ($773 & 1) {
        label = 277;
        break;
       }
       $775 = HEAP8[$24 >> 0] | 0;
       if (!($775 & 1)) {
        $782 = $703;
        $783 = ($775 & 255) >>> 1;
       } else {
        $782 = HEAP32[$704 >> 2] | 0;
        $783 = HEAP32[$705 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $768 | 0, $782 | 0, $783 | 0) | 0;
       $784 = __THREW__;
       __THREW__ = 0;
       if ($784 & 1) {
        label = 278;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
       $712 = HEAP32[$712 + 4 >> 2] | 0;
       if (($712 | 0) == ($698 | 0)) {
        label = 280;
        break;
       } else $prefix27$0286 = 36528;
      }
      if ((label | 0) == 19) {
       $84 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body60$index15Z2D = tempRet0;
       $eh$lpad$body60$indexZ2D = $84;
       break L10;
      } else if ((label | 0) == 259) {
       $736 = ___cxa_find_matching_catch() | 0;
       $737 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body60$index15Z2D = $737;
       $eh$lpad$body60$indexZ2D = $736;
       break L10;
      } else if ((label | 0) == 277) {
       $789 = ___cxa_find_matching_catch() | 0;
       $$5 = $789;
       $$56 = tempRet0;
      } else if ((label | 0) == 278) {
       $791 = ___cxa_find_matching_catch() | 0;
       $792 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
       $$5 = $791;
       $$56 = $792;
      } else if ((label | 0) == 280) break;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
      $$9 = $$5;
      $$910 = $$56;
      HEAP32[$ss >> 2] = 572;
      HEAP32[$32 >> 2] = 612;
      HEAP32[$33 >> 2] = 592;
      HEAP32[$34 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 37560, 1) | 0;
     $793 = __THREW__;
     __THREW__ = 0;
     if ($793 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $795 = ___dynamic_cast($ast_, 33800, 34648, 0) | 0;
    if ($795) {
     __THREW__ = 0;
     $797 = invoke_iiii(25, $33 | 0, 34664, 2) | 0;
     $798 = __THREW__;
     __THREW__ = 0;
     if ($798 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $25 | 0, HEAP32[$795 + 48 >> 2] | 0);
     $802 = __THREW__;
     __THREW__ = 0;
     if ($802 & 1) {
      label = 24;
      break L10;
     }
     $804 = HEAP8[$25 >> 0] | 0;
     if (!($804 & 1)) {
      $814 = $25 + 1 | 0;
      $815 = ($804 & 255) >>> 1;
     } else {
      $814 = HEAP32[$25 + 8 >> 2] | 0;
      $815 = HEAP32[$25 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $816 = invoke_iiii(25, $797 | 0, $814 | 0, $815 | 0) | 0;
     $817 = __THREW__;
     __THREW__ = 0;
     do if ($817 & 1) label = 307; else {
      __THREW__ = 0;
      $819 = invoke_iiii(25, $816 | 0, 34672, 3) | 0;
      $820 = __THREW__;
      __THREW__ = 0;
      if ($820 & 1) {
       label = 307;
       break;
      }
      __THREW__ = 0;
      invoke_vii(53, $26 | 0, HEAP32[$795 + 52 >> 2] | 0);
      $824 = __THREW__;
      __THREW__ = 0;
      if ($824 & 1) {
       label = 307;
       break;
      }
      $826 = HEAP8[$26 >> 0] | 0;
      if (!($826 & 1)) {
       $836 = $26 + 1 | 0;
       $837 = ($826 & 255) >>> 1;
      } else {
       $836 = HEAP32[$26 + 8 >> 2] | 0;
       $837 = HEAP32[$26 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $819 | 0, $836 | 0, $837 | 0) | 0;
      $838 = __THREW__;
      __THREW__ = 0;
      if ($838 & 1) {
       $885 = ___cxa_find_matching_catch() | 0;
       $886 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
       $$6 = $885;
       $$67 = $886;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
      __THREW__ = 0;
      $840 = invoke_iiii(25, $33 | 0, 34680, 5) | 0;
      $841 = __THREW__;
      __THREW__ = 0;
      if ($841 & 1) {
       label = 24;
       break L10;
      }
      $844 = HEAP32[$795 + 56 >> 2] | 0;
      $845 = HEAP8[$844 >> 0] | 0;
      if (!($845 & 1)) {
       $855 = $844 + 1 | 0;
       $856 = ($845 & 255) >>> 1;
      } else {
       $855 = HEAP32[$844 + 8 >> 2] | 0;
       $856 = HEAP32[$844 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $857 = invoke_iiii(25, $840 | 0, $855 | 0, $856 | 0) | 0;
      $858 = __THREW__;
      __THREW__ = 0;
      if ($858 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      $860 = invoke_iiii(25, $857 | 0, 34688, 4) | 0;
      $861 = __THREW__;
      __THREW__ = 0;
      if ($861 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      invoke_vii(53, $27 | 0, HEAP32[$795 + 60 >> 2] | 0);
      $865 = __THREW__;
      __THREW__ = 0;
      if ($865 & 1) {
       label = 24;
       break L10;
      }
      $867 = HEAP8[$27 >> 0] | 0;
      if (!($867 & 1)) {
       $877 = $27 + 1 | 0;
       $878 = ($867 & 255) >>> 1;
      } else {
       $877 = HEAP32[$27 + 8 >> 2] | 0;
       $878 = HEAP32[$27 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $860 | 0, $877 | 0, $878 | 0) | 0;
      $879 = __THREW__;
      __THREW__ = 0;
      if (!($879 & 1)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
       __THREW__ = 0;
       invoke_iiii(25, $33 | 0, 37560, 1) | 0;
       $881 = __THREW__;
       __THREW__ = 0;
       if ($881 & 1) {
        label = 24;
        break L10;
       } else break L12;
      }
      $887 = ___cxa_find_matching_catch() | 0;
      $888 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
      $$9 = $887;
      $$910 = $888;
      HEAP32[$ss >> 2] = 572;
      HEAP32[$32 >> 2] = 612;
      HEAP32[$33 >> 2] = 592;
      HEAP32[$34 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     if ((label | 0) == 307) {
      $883 = ___cxa_find_matching_catch() | 0;
      $$6 = $883;
      $$67 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
     $$9 = $$6;
     $$910 = $$67;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 33800, 34704, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 34720, 4) | 0;
     $891 = __THREW__;
     __THREW__ = 0;
     if ($891 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    if (___dynamic_cast($ast_, 33800, 34736, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 34752, 5) | 0;
     $894 = __THREW__;
     __THREW__ = 0;
     if ($894 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $896 = ___dynamic_cast($ast_, 33800, 34768, 0) | 0;
    if (!$896) {
     $974 = ___dynamic_cast($ast_, 33800, 34792, 0) | 0;
     if (!$974) {
      label = 349;
      break L10;
     }
     $977 = HEAP32[$974 + 48 >> 2] | 0;
     $978 = HEAP8[$977 >> 0] | 0;
     if (!($978 & 1)) {
      $988 = $977 + 1 | 0;
      $989 = ($978 & 255) >>> 1;
     } else {
      $988 = HEAP32[$977 + 8 >> 2] | 0;
      $989 = HEAP32[$977 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, $988 | 0, $989 | 0) | 0;
     $990 = __THREW__;
     __THREW__ = 0;
     if ($990 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $899 = HEAP32[$896 + 48 >> 2] | 0;
    if (($899 | 0) == 2) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 39312, 1);
     $900 = __THREW__;
     __THREW__ = 0;
     if ($900 & 1) {
      label = 24;
      break L10;
     }
    } else if (($899 | 0) == 3) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 40064, 1);
     $902 = __THREW__;
     __THREW__ = 0;
     if ($902 & 1) {
      label = 24;
      break L10;
     }
    } else if (($899 | 0) == 1) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 39320, 1);
     $904 = __THREW__;
     __THREW__ = 0;
     if ($904 & 1) {
      label = 24;
      break L10;
     }
    } else if (!$899) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 39328, 1);
     $906 = __THREW__;
     __THREW__ = 0;
     if ($906 & 1) {
      label = 24;
      break L10;
     }
    } else {
     __THREW__ = 0;
     $908 = invoke_iiii(25, 43744, 39336, 45) | 0;
     $909 = __THREW__;
     __THREW__ = 0;
     if ($909 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     $911 = invoke_iii(21, $908 | 0, $899 | 0) | 0;
     $912 = __THREW__;
     __THREW__ = 0;
     if ($912 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(47, $1 | 0, $911 + (HEAP32[(HEAP32[$911 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $918 = __THREW__;
     __THREW__ = 0;
     if ($918 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     $920 = invoke_iii(22, $1 | 0, 47968) | 0;
     $921 = __THREW__;
     __THREW__ = 0;
     do if (!($921 & 1)) {
      __THREW__ = 0;
      $926 = invoke_iii(HEAP32[(HEAP32[$920 >> 2] | 0) + 28 >> 2] | 0, $920 | 0, 10) | 0;
      $927 = __THREW__;
      __THREW__ = 0;
      if ($927 & 1) break;
      __ZNSt3__16localeD2Ev($1);
      __THREW__ = 0;
      invoke_iii(25, $911 | 0, $926 | 0) | 0;
      $931 = __THREW__;
      __THREW__ = 0;
      if ($931 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      invoke_ii(68, $911 | 0) | 0;
      $933 = __THREW__;
      __THREW__ = 0;
      if ($933 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      invoke_v(3);
      $935 = __THREW__;
      __THREW__ = 0;
      if ($935 & 1) {
       label = 24;
       break L10;
      }
     } while (0);
     $929 = ___cxa_find_matching_catch() | 0;
     $930 = tempRet0;
     __ZNSt3__16localeD2Ev($1);
     $eh$lpad$body60$index15Z2D = $930;
     $eh$lpad$body60$indexZ2D = $929;
     break L10;
    }
    $937 = HEAP8[$28 >> 0] | 0;
    if (!($937 & 1)) {
     $947 = $28 + 1 | 0;
     $948 = ($937 & 255) >>> 1;
    } else {
     $947 = HEAP32[$28 + 8 >> 2] | 0;
     $948 = HEAP32[$28 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    $949 = invoke_iiii(25, $33 | 0, $947 | 0, $948 | 0) | 0;
    $950 = __THREW__;
    __THREW__ = 0;
    do if ($950 & 1) label = 341; else {
     __THREW__ = 0;
     invoke_vii(53, $29 | 0, HEAP32[$896 + 52 >> 2] | 0);
     $954 = __THREW__;
     __THREW__ = 0;
     if ($954 & 1) {
      label = 341;
      break;
     }
     $956 = HEAP8[$29 >> 0] | 0;
     if (!($956 & 1)) {
      $966 = $29 + 1 | 0;
      $967 = ($956 & 255) >>> 1;
     } else {
      $966 = HEAP32[$29 + 8 >> 2] | 0;
      $967 = HEAP32[$29 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $949 | 0, $966 | 0, $967 | 0) | 0;
     $968 = __THREW__;
     __THREW__ = 0;
     if ($968 & 1) {
      $972 = ___cxa_find_matching_catch() | 0;
      $973 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      $$7 = $972;
      $$78 = $973;
      break;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
      break L12;
     }
    } while (0);
    if ((label | 0) == 341) {
     $970 = ___cxa_find_matching_catch() | 0;
     $$7 = $970;
     $$78 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $$9 = $$7;
    $$910 = $$78;
    HEAP32[$ss >> 2] = 572;
    HEAP32[$32 >> 2] = 612;
    HEAP32[$33 >> 2] = 592;
    HEAP32[$34 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   } else {
    __THREW__ = 0;
    invoke_vii(53, $5 | 0, HEAP32[$54 + 48 >> 2] | 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 24;
     break L10;
    }
    $60 = HEAP8[$5 >> 0] | 0;
    if (!($60 & 1)) {
     $70 = $5 + 1 | 0;
     $71 = ($60 & 255) >>> 1;
    } else {
     $70 = HEAP32[$5 + 8 >> 2] | 0;
     $71 = HEAP32[$5 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_iiii(25, $33 | 0, $70 | 0, $71 | 0) | 0;
    $72 = __THREW__;
    __THREW__ = 0;
    if ($72 & 1) {
     $96 = ___cxa_find_matching_catch() | 0;
     $97 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$9 = $96;
     $$910 = $97;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $76 = HEAP32[$54 + 56 >> 2] | 0;
    $77 = HEAP32[$54 + 52 >> 2] | 0;
    if (($76 | 0) == ($77 | 0)) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 34064, 2) | 0;
     $82 = __THREW__;
     __THREW__ = 0;
     if ($82 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $79 = $6 + 1 | 0;
    $80 = $6 + 8 | 0;
    $81 = $6 + 4 | 0;
    $99 = $77;
    $prefix$0299 = 40072;
    while (1) {
     $98 = HEAP32[$99 >> 2] | 0;
     $100 = _strlen($prefix$0299 | 0) | 0;
     __THREW__ = 0;
     $101 = invoke_iiii(25, $33 | 0, $prefix$0299 | 0, $100 | 0) | 0;
     $102 = __THREW__;
     __THREW__ = 0;
     if ($102 & 1) {
      label = 23;
      break;
     }
     __THREW__ = 0;
     invoke_vii(53, $6 | 0, $98 | 0);
     $104 = __THREW__;
     __THREW__ = 0;
     if ($104 & 1) {
      label = 23;
      break;
     }
     $106 = HEAP8[$6 >> 0] | 0;
     if (!($106 & 1)) {
      $113 = $79;
      $114 = ($106 & 255) >>> 1;
     } else {
      $113 = HEAP32[$80 >> 2] | 0;
      $114 = HEAP32[$81 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $101 | 0, $113 | 0, $114 | 0) | 0;
     $115 = __THREW__;
     __THREW__ = 0;
     if ($115 & 1) {
      label = 34;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $99 = $99 + 4 | 0;
     if (($99 | 0) == ($76 | 0)) {
      label = 35;
      break;
     } else $prefix$0299 = 36528;
    }
    if ((label | 0) == 23) {
     $92 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body60$index15Z2D = tempRet0;
     $eh$lpad$body60$indexZ2D = $92;
     break L10;
    } else if ((label | 0) == 34) {
     $119 = ___cxa_find_matching_catch() | 0;
     $120 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $$9 = $119;
     $$910 = $120;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$32 >> 2] = 612;
     HEAP32[$33 >> 2] = 592;
     HEAP32[$34 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 35) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 40088, 1) | 0;
     $121 = __THREW__;
     __THREW__ = 0;
     if ($121 & 1) {
      label = 24;
      break L10;
     } else break;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(43, $31 | 0, $34 | 0);
   $1021 = __THREW__;
   __THREW__ = 0;
   if ($1021 & 1) label = 24; else {
    __THREW__ = 0;
    $1023 = invoke_iiii(29, $31 | 0, 0, 40072) | 0;
    $1024 = __THREW__;
    __THREW__ = 0;
    do if ($1024 & 1) {
     $1029 = ___cxa_find_matching_catch() | 0;
     $$8 = $1029;
     $$89 = tempRet0;
    } else {
     HEAP32[$30 + 0 >> 2] = HEAP32[$1023 + 0 >> 2];
     HEAP32[$30 + 4 >> 2] = HEAP32[$1023 + 4 >> 2];
     HEAP32[$30 + 8 >> 2] = HEAP32[$1023 + 8 >> 2];
     HEAP32[$1023 + 0 >> 2] = 0;
     HEAP32[$1023 + 4 >> 2] = 0;
     HEAP32[$1023 + 8 >> 2] = 0;
     __THREW__ = 0;
     $1026 = invoke_iii(27, $30 | 0, 40088) | 0;
     $1027 = __THREW__;
     __THREW__ = 0;
     if ($1027 & 1) {
      $1031 = ___cxa_find_matching_catch() | 0;
      $1032 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      $$8 = $1031;
      $$89 = $1032;
      break;
     } else {
      HEAP32[$agg$result + 0 >> 2] = HEAP32[$1026 + 0 >> 2];
      HEAP32[$agg$result + 4 >> 2] = HEAP32[$1026 + 4 >> 2];
      HEAP32[$agg$result + 8 >> 2] = HEAP32[$1026 + 8 >> 2];
      HEAP32[$1026 + 0 >> 2] = 0;
      HEAP32[$1026 + 4 >> 2] = 0;
      HEAP32[$1026 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
      HEAP32[$ss >> 2] = 572;
      HEAP32[$32 >> 2] = 612;
      HEAP32[$33 >> 2] = 592;
      HEAP32[$34 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      STACKTOP = sp;
      return;
     }
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
    $$9 = $$8;
    $$910 = $$89;
    HEAP32[$ss >> 2] = 572;
    HEAP32[$32 >> 2] = 612;
    HEAP32[$33 >> 2] = 592;
    HEAP32[$34 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   }
  } while (0);
  do if ((label | 0) == 349) {
   __THREW__ = 0;
   $992 = invoke_iiii(25, 43744, 37704, 29) | 0;
   $993 = __THREW__;
   __THREW__ = 0;
   if ($993 & 1) label = 24; else {
    __THREW__ = 0;
    $995 = invoke_iii(26, $992 | 0, $ast_ | 0) | 0;
    $996 = __THREW__;
    __THREW__ = 0;
    if ($996 & 1) label = 24; else {
     __THREW__ = 0;
     invoke_vii(47, $2 | 0, $995 + (HEAP32[(HEAP32[$995 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $1002 = __THREW__;
     __THREW__ = 0;
     if ($1002 & 1) label = 24; else {
      __THREW__ = 0;
      $1004 = invoke_iii(22, $2 | 0, 47968) | 0;
      $1005 = __THREW__;
      __THREW__ = 0;
      if (!($1005 & 1)) {
       __THREW__ = 0;
       $1010 = invoke_iii(HEAP32[(HEAP32[$1004 >> 2] | 0) + 28 >> 2] | 0, $1004 | 0, 10) | 0;
       $1011 = __THREW__;
       __THREW__ = 0;
       if (!($1011 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(25, $995 | 0, $1010 | 0) | 0;
        $1015 = __THREW__;
        __THREW__ = 0;
        if ($1015 & 1) {
         label = 24;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $995 | 0) | 0;
        $1017 = __THREW__;
        __THREW__ = 0;
        if ($1017 & 1) {
         label = 24;
         break;
        }
        __THREW__ = 0;
        invoke_v(3);
        $1019 = __THREW__;
        __THREW__ = 0;
        if ($1019 & 1) {
         label = 24;
         break;
        }
       }
      }
      $1013 = ___cxa_find_matching_catch() | 0;
      $1014 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body60$index15Z2D = $1014;
      $eh$lpad$body60$indexZ2D = $1013;
     }
    }
   }
  } while (0);
  if ((label | 0) == 24) {
   $94 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body60$index15Z2D = tempRet0;
   $eh$lpad$body60$indexZ2D = $94;
  }
  $$9 = $eh$lpad$body60$indexZ2D;
  $$910 = $eh$lpad$body60$index15Z2D;
  HEAP32[$ss >> 2] = 572;
  HEAP32[$32 >> 2] = 612;
  HEAP32[$33 >> 2] = 592;
  HEAP32[$34 >> 2] = 904;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$9 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
 ___resumeException($$01$i | 0);
}

function __Z11jsonnet_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($agg$result, $filename, $input) {
 $agg$result = $agg$result | 0;
 $filename = $filename | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i = 0, $$0$i106 = 0, $$0$i144 = 0, $$01 = 0, $$01$i = 0, $$01$i105 = 0, $$01$i143 = 0, $$011 = 0, $$013180 = 0, $$018 = 0, $$020179 = 0, $$03 = 0, $$037 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$10214 = 0, $$1030213 = 0, $$11 = 0, $$1131 = 0, $$114184 = 0, $$121183 = 0, $$1215 = 0, $$1232 = 0, $$13 = 0, $$1333 = 0, $$1416 = 0, $$1434 = 0, $$15 = 0, $$1535 = 0, $$1617 = 0, $$1636 = 0, $$2188 = 0, $$222187 = 0, $$3192 = 0, $$323191 = 0, $$4 = 0, $$424 = 0, $$5196 = 0, $$525195 = 0, $$6200 = 0, $$626199 = 0, $$7204 = 0, $$727203 = 0, $$8 = 0, $$828 = 0, $$9210 = 0, $$929209 = 0, $$lcssa = 0, $$lcssa318 = 0, $$lcssa394 = 0, $$lcssa395 = 0, $$lcssa398 = 0, $$lcssa399 = 0, $$ph = 0, $$ph351 = 0, $$ph375 = 0, $$ph376 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $137 = 0, $14 = 0, $140 = 0, $145 = 0, $146 = 0, $15 = 0, $151 = 0, $156 = 0, $157 = 0, $16 = 0, $162 = 0, $164 = 0, $165 = 0, $166 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $175 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $189 = 0, $19 = 0, $194 = 0, $195 = 0, $2 = 0, $20 = 0, $200 = 0, $202 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $216 = 0, $217 = 0, $218 = 0, $22 = 0, $221 = 0, $225 = 0, $227 = 0, $229 = 0, $231 = 0, $232 = 0, $233 = 0, $235 = 0, $237 = 0, $238 = 0, $240 = 0, $241 = 0, $243 = 0, $244 = 0, $246 = 0, $248 = 0, $249 = 0, $25 = 0, $251 = 0, $254 = 0, $259 = 0, $26 = 0, $260 = 0, $265 = 0, $27 = 0, $270 = 0, $271 = 0, $276 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $282 = 0, $284 = 0, $286 = 0, $287 = 0, $289 = 0, $29 = 0, $290 = 0, $292 = 0, $293 = 0, $295 = 0, $296 = 0, $298 = 0, $3 = 0, $30 = 0, $301 = 0, $306 = 0, $307 = 0, $31 = 0, $312 = 0, $317 = 0, $318 = 0, $32 = 0, $323 = 0, $325 = 0, $326 = 0, $327 = 0, $329 = 0, $33 = 0, $331 = 0, $332 = 0, $335 = 0, $336 = 0, $338 = 0, $34 = 0, $341 = 0, $346 = 0, $347 = 0, $35 = 0, $352 = 0, $357 = 0, $358 = 0, $36 = 0, $363 = 0, $365 = 0, $366 = 0, $367 = 0, $369 = 0, $37 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $378 = 0, $38 = 0, $382 = 0, $384 = 0, $386 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $392 = 0, $394 = 0, $395 = 0, $399 = 0, $4 = 0, $400 = 0, $402 = 0, $404 = 0, $405 = 0, $407 = 0, $410 = 0, $415 = 0, $416 = 0, $421 = 0, $426 = 0, $427 = 0, $43 = 0, $432 = 0, $434 = 0, $435 = 0, $436 = 0, $438 = 0, $440 = 0, $442 = 0, $443 = 0, $446 = 0, $448 = 0, $454 = 0, $456 = 0, $46 = 0, $465 = 0, $468 = 0, $472 = 0, $48 = 0, $5 = 0, $50 = 0, $505 = 0, $510 = 0, $511 = 0, $513 = 0, $514 = 0, $52 = 0, $520 = 0, $521 = 0, $526 = 0, $527 = 0, $528 = 0, $530 = 0, $533 = 0, $538 = 0, $539 = 0, $54 = 0, $544 = 0, $549 = 0, $550 = 0, $555 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $561 = 0, $563 = 0, $564 = 0, $567 = 0, $568 = 0, $571 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $58 = 0, $581 = 0, $585 = 0, $587 = 0, $589 = 0, $591 = 0, $592 = 0, $593 = 0, $595 = 0, $597 = 0, $6 = 0, $60 = 0, $602 = 0, $603 = 0, $608 = 0, $610 = 0, $612 = 0, $613 = 0, $617 = 0, $618 = 0, $62 = 0, $620 = 0, $622 = 0, $623 = 0, $625 = 0, $628 = 0, $633 = 0, $634 = 0, $639 = 0, $644 = 0, $645 = 0, $650 = 0, $652 = 0, $653 = 0, $654 = 0, $656 = 0, $658 = 0, $659 = 0, $660 = 0, $661 = 0, $667 = 0, $672 = 0, $673 = 0, $677 = 0, $68 = 0, $681 = 0, $683 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $696 = 0, $7 = 0, $707 = 0, $708 = 0, $710 = 0, $711 = 0, $712 = 0, $714 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $723 = 0, $725 = 0, $729 = 0, $73 = 0, $730 = 0, $732 = 0, $733 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $748 = 0, $752 = 0, $754 = 0, $756 = 0, $757 = 0, $76 = 0, $760 = 0, $762 = 0, $764 = 0, $780 = 0, $782 = 0, $783 = 0, $79 = 0, $791 = 0, $793 = 0, $794 = 0, $8 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $84 = 0, $85 = 0, $9 = 0, $90 = 0, $95 = 0, $96 = 0, $__f$01$i$i = 0, $begin = 0, $c = 0, $data = 0, $digit$0 = 0, $digit$0$1 = 0, $digit$0$2 = 0, $digit$0$3 = 0, $eh$lpad$body$i$index15Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i103$index20Z2D = 0, $eh$lpad$body$i103$indexZ2D = 0, $eh$lpad$body$i141$index30Z2D = 0, $eh$lpad$body$i141$indexZ2D = 0, $eh$lpad$body167$index35Z2D = 0, $eh$lpad$body167$indexZ2D = 0, $eh$lpad$body175$index40Z2D = 0, $eh$lpad$body175$indexZ2D = 0, $eh$lpad$body76$index6Z2D = 0, $eh$lpad$body76$indexZ2D = 0, $id = 0, $kind$0 = 0, $kind$1 = 0, $line_number$0$lcssa = 0, $line_number$0311 = 0, $line_number$1 = 0, $line_number$1$lcssa385 = 0, $line_number$2 = 0, $line_number$3$ph = 0, $line_number$3$ph$lcssa397 = 0, $line_number$5 = 0, $line_number$6 = 0, $line_number$6$lcssa = 0, $line_start$0310 = 0, $line_start$1 = 0, $line_start$1$lcssa377 = 0, $line_start$2 = 0, $line_start$3$ph = 0, $line_start$3$ph$lcssa396 = 0, $line_start$5 = 0, $line_start$6 = 0, $lpad$phi$index = 0, $lpad$phi$index25 = 0, $ss = 0, $ss4 = 0, $ss6 = 0, $storemerge39 = 0, label = 0, sp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 800 | 0;
 $0 = sp + 790 | 0;
 $1 = sp + 776 | 0;
 $2 = sp + 789 | 0;
 $3 = sp + 764 | 0;
 $4 = sp + 788 | 0;
 $5 = sp + 752 | 0;
 $c = sp + 748 | 0;
 $begin = sp;
 $data = sp + 736 | 0;
 $6 = sp + 724 | 0;
 $7 = sp + 712 | 0;
 $8 = sp + 700 | 0;
 $9 = sp + 688 | 0;
 $ss = sp + 544 | 0;
 $10 = sp + 528 | 0;
 $11 = sp + 516 | 0;
 $12 = sp + 504 | 0;
 $ss4 = sp + 360 | 0;
 $13 = sp + 344 | 0;
 $id = sp + 332 | 0;
 $14 = sp + 320 | 0;
 $ss6 = sp + 176 | 0;
 $15 = sp + 164 | 0;
 $16 = sp + 120 | 0;
 $17 = sp + 92 | 0;
 $18 = sp + 48 | 0;
 $19 = sp + 36 | 0;
 $20 = sp + 8 | 0;
 HEAP32[$agg$result >> 2] = $agg$result;
 $21 = $agg$result + 4 | 0;
 HEAP32[$21 >> 2] = $agg$result;
 $22 = $agg$result + 8 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$c >> 2] = $input;
 L1 : do if (!(HEAP8[$input >> 0] | 0)) {
  $718 = 0;
  $723 = 1;
  $line_number$0$lcssa = 1;
  label = 243;
 } else {
  $25 = $begin + 4 | 0;
  $26 = $17 + 12 | 0;
  $27 = $17 + 20 | 0;
  $28 = $16 + 4 | 0;
  $29 = $16 + 16 | 0;
  $30 = $16 + 28 | 0;
  $31 = $16 + 16 | 0;
  $32 = $data + 1 | 0;
  $33 = $data + 8 | 0;
  $34 = $data + 4 | 0;
  $35 = 1;
  $37 = $input;
  $line_number$0311 = 1;
  $line_start$0310 = $input;
  L3 : while (1) {
   HEAP32[$begin >> 2] = $line_number$0311;
   HEAP32[$25 >> 2] = $35;
   HEAP32[$data + 0 >> 2] = 0;
   HEAP32[$data + 4 >> 2] = 0;
   HEAP32[$data + 8 >> 2] = 0;
   $36 = HEAP8[$37 >> 0] | 0;
   $38 = $36 << 24 >> 24;
   L5 : do switch ($38 | 0) {
   case 36:
    {
     $kind$1 = 6;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 46:
    {
     $kind$1 = 7;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 40:
    {
     $kind$1 = 8;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 41:
    {
     $kind$1 = 9;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 57:
   case 56:
   case 55:
   case 54:
   case 53:
   case 52:
   case 51:
   case 50:
   case 49:
   case 48:
    {
     __THREW__ = 0;
     invoke_viiii(10, $6 | 0, $c | 0, $filename | 0, $begin | 0);
     $62 = __THREW__;
     __THREW__ = 0;
     if ($62 & 1) {
      label = 21;
      break L3;
     }
     if (!(HEAP8[$data >> 0] & 1)) {
      HEAP8[$32 >> 0] = 0;
      HEAP8[$data >> 0] = 0;
     } else {
      HEAP8[HEAP32[$33 >> 2] >> 0] = 0;
      HEAP32[$34 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $data | 0, 0);
     $68 = __THREW__;
     __THREW__ = 0;
     if ($68 & 1) {
      label = 32;
      break L3;
     };
     HEAP32[$data + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     HEAP32[$data + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$data + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     HEAP32[$6 + 0 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $kind$1 = 12;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 91:
    {
     $kind$1 = 2;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 93:
    {
     $kind$1 = 3;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 58:
    {
     $kind$1 = 4;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 44:
    {
     $kind$1 = 5;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 10:
    {
     $line_number$6 = $line_number$0311 + 1 | 0;
     $line_start$6 = $37 + 1 | 0;
     break;
    }
   case 125:
    {
     $kind$1 = 1;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 59:
    {
     $kind$1 = 10;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 33:
    {
     $43 = $37 + 1 | 0;
     if ((HEAP8[$43 >> 0] | 0) == 61) {
      HEAP32[$c >> 2] = $43;
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 39696) | 0;
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) {
       label = 21;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$5 = $line_number$0311;
       $line_start$5 = $line_start$0310;
       label = 230;
       break L5;
      }
     } else {
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 39328) | 0;
      $54 = __THREW__;
      __THREW__ = 0;
      if ($54 & 1) {
       label = 21;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$5 = $line_number$0311;
       $line_start$5 = $line_start$0310;
       label = 230;
       break L5;
      }
     }
     break;
    }
   case 126:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 39320) | 0;
     $56 = __THREW__;
     __THREW__ = 0;
     if ($56 & 1) {
      label = 21;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0311;
      $line_start$5 = $line_start$0310;
      label = 230;
     }
     break;
    }
   case 43:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 39312) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 21;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0311;
      $line_start$5 = $line_start$0310;
      label = 230;
     }
     break;
    }
   case 45:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 40064) | 0;
     $60 = __THREW__;
     __THREW__ = 0;
     if ($60 & 1) {
      label = 21;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0311;
      $line_start$5 = $line_start$0310;
      label = 230;
     }
     break;
    }
   case 34:
    {
     $$pn = $37;
     $line_number$1 = $line_number$0311;
     $line_start$1 = $line_start$0310;
     while (1) {
      $storemerge39 = $$pn + 1 | 0;
      HEAP32[$c >> 2] = $storemerge39;
      $72 = HEAP8[$storemerge39 >> 0] | 0;
      if (!($72 << 24 >> 24)) {
       label = 35;
       break L3;
      } else if ($72 << 24 >> 24 == 34) {
       $line_number$1$lcssa385 = $line_number$1;
       $line_start$1$lcssa377 = $line_start$1;
       break;
      }
      $111 = $72 << 24 >> 24;
      L102 : do if (($111 | 0) == 10) {
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $72 | 0);
       $446 = __THREW__;
       __THREW__ = 0;
       if ($446 & 1) {
        label = 20;
        break L3;
       } else {
        $line_number$2 = $line_number$1 + 1 | 0;
        $line_start$2 = $$pn + 2 | 0;
       }
      } else if (($111 | 0) == 92) {
       $112 = $$pn + 2 | 0;
       HEAP32[$c >> 2] = $112;
       $113 = HEAP8[$112 >> 0] | 0;
       switch ($113 << 24 >> 24 | 0) {
       case 117:
        {
         $131 = $$pn + 3 | 0;
         HEAP32[$c >> 2] = $131;
         $132 = HEAP8[$131 >> 0] | 0;
         $133 = $132 & 255;
         if ($132 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         } else if (!($132 << 24 >> 24)) {
          label = 54;
          break L3;
         }
         do if (($132 + -48 & 255) < 10) $digit$0 = $133 + -48 | 0; else {
          if (($132 + -97 & 255) < 6) {
           $digit$0 = $133 + -87 | 0;
           break;
          }
          if (($132 + -65 & 255) >= 6) {
           $$lcssa318 = $132;
           label = 76;
           break L3;
          }
          $digit$0 = $133 + -55 | 0;
         } while (0);
         $289 = HEAP8[$$pn + 4 >> 0] | 0;
         $290 = $289 & 255;
         if ($289 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         } else if (!($289 << 24 >> 24)) {
          label = 54;
          break L3;
         }
         do if (($289 + -48 & 255) < 10) $digit$0$1 = $290 + -48 | 0; else {
          if (($289 + -97 & 255) < 6) {
           $digit$0$1 = $290 + -87 | 0;
           break;
          }
          if (($289 + -65 & 255) >= 6) {
           $$lcssa318 = $289;
           label = 76;
           break L3;
          }
          $digit$0$1 = $290 + -55 | 0;
         } while (0);
         $780 = $digit$0$1 + ($digit$0 << 4) | 0;
         $782 = HEAP8[$$pn + 5 >> 0] | 0;
         $783 = $782 & 255;
         if ($782 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         } else if (!($782 << 24 >> 24)) {
          label = 54;
          break L3;
         }
         do if (($782 + -48 & 255) < 10) $digit$0$2 = $783 + -48 | 0; else {
          if (($782 + -97 & 255) < 6) {
           $digit$0$2 = $783 + -87 | 0;
           break;
          }
          if (($782 + -65 & 255) >= 6) {
           $$lcssa318 = $782;
           label = 76;
           break L3;
          }
          $digit$0$2 = $783 + -55 | 0;
         } while (0);
         $791 = $digit$0$2 + ($780 << 4) | 0;
         $793 = HEAP8[$$pn + 6 >> 0] | 0;
         $794 = $793 & 255;
         if ($793 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         } else if (!($793 << 24 >> 24)) {
          label = 54;
          break L3;
         }
         do if (($793 + -48 & 255) < 10) $digit$0$3 = $794 + -48 | 0; else {
          if (($793 + -97 & 255) < 6) {
           $digit$0$3 = $794 + -87 | 0;
           break;
          }
          if (($793 + -65 & 255) >= 6) {
           $$lcssa318 = $793;
           label = 76;
           break L3;
          }
          $digit$0$3 = $794 + -55 | 0;
         } while (0);
         $292 = $digit$0$3 + ($791 << 4) | 0;
         if ($292 >>> 0 >= 128) {
          label = 100;
          break L3;
         }
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $292 & 255 | 0);
         $293 = __THREW__;
         __THREW__ = 0;
         if ($293 & 1) {
          label = 20;
          break L3;
         }
         HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 3;
         $line_number$2 = $line_number$1;
         $line_start$2 = $line_start$1;
         break L102;
         break;
        }
       case 92:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $113 | 0);
         $117 = __THREW__;
         __THREW__ = 0;
         if ($117 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 47:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $113 | 0);
         $119 = __THREW__;
         __THREW__ = 0;
         if ($119 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 98:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 8);
         $121 = __THREW__;
         __THREW__ = 0;
         if ($121 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 102:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 12);
         $123 = __THREW__;
         __THREW__ = 0;
         if ($123 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 110:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 10);
         $125 = __THREW__;
         __THREW__ = 0;
         if ($125 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 114:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 13);
         $127 = __THREW__;
         __THREW__ = 0;
         if ($127 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 116:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 9);
         $129 = __THREW__;
         __THREW__ = 0;
         if ($129 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 34:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $113 | 0);
         $115 = __THREW__;
         __THREW__ = 0;
         if ($115 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L102;
         }
         break;
        }
       case 0:
        {
         label = 109;
         break L3;
         break;
        }
       default:
        {
         label = 117;
         break L3;
        }
       }
      } else {
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $72 | 0);
       $448 = __THREW__;
       __THREW__ = 0;
       if ($448 & 1) {
        label = 20;
        break L3;
       } else {
        $line_number$2 = $line_number$1;
        $line_start$2 = $line_start$1;
       }
      } while (0);
      $$pn = HEAP32[$c >> 2] | 0;
      $line_number$1 = $line_number$2;
      $line_start$1 = $line_start$2;
     }
     $kind$1 = 14;
     $line_number$5 = $line_number$1$lcssa385;
     $line_start$5 = $line_start$1$lcssa377;
     label = 230;
     break;
    }
   case 123:
    {
     $kind$1 = 0;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
     break;
    }
   case 13:
   case 9:
   case 32:
    {
     $line_number$6 = $line_number$0311;
     $line_start$6 = $line_start$0310;
     break;
    }
   default:
    {
     if (($36 + -65 & 255) >= 26) if (!($36 << 24 >> 24 == 95 | ($36 + -97 & 255) < 26)) {
      switch ($38 | 0) {
      case 35:
      case 37:
      case 47:
      case 42:
      case 62:
      case 60:
      case 61:
      case 94:
      case 124:
      case 38:
       break;
      default:
       {
        label = 204;
        break L3;
       }
      }
      if ($36 << 24 >> 24 == 35) {
       $514 = $37;
       $804 = 35;
       while (1) {
        if ($804 << 24 >> 24 == 0 | $804 << 24 >> 24 == 10) {
         $$lcssa = $514;
         break;
        }
        $513 = $514 + 1 | 0;
        HEAP32[$c >> 2] = $513;
        $514 = $513;
        $804 = HEAP8[$513 >> 0] | 0;
       }
       HEAP32[$c >> 2] = $$lcssa + -1;
       $line_number$6 = $line_number$0311;
       $line_start$6 = $line_start$0310;
       break L5;
      } else if ($36 << 24 >> 24 == 47) label = 175; else if (!($36 << 24 >> 24)) $575 = $37; else {
       $$ph375 = $36;
       label = 174;
      }
      if ((label | 0) == 175) {
       label = 0;
       if ((HEAP8[$37 + 1 >> 0] | 0) == 47) {
        $511 = $37;
        $806 = 47;
        while (1) {
         if ($806 << 24 >> 24 == 0 | $806 << 24 >> 24 == 10) {
          $$lcssa398 = $511;
          break;
         }
         $510 = $511 + 1 | 0;
         HEAP32[$c >> 2] = $510;
         $511 = $510;
         $806 = HEAP8[$510 >> 0] | 0;
        }
        HEAP32[$c >> 2] = $$lcssa398 + -1;
        $line_number$6 = $line_number$0311;
        $line_start$6 = $line_start$0310;
        break L5;
       }
       if ((HEAP8[$37 + 1 >> 0] | 0) == 42) {
        $$ph351 = $37 + 2 | 0;
        $line_number$3$ph = $line_number$0311;
        $line_start$3$ph = $line_start$0310;
        L42 : while (1) {
         $520 = $$ph351;
         while (1) {
          HEAP32[$c >> 2] = $520;
          $521 = HEAP8[$520 >> 0] | 0;
          if ($521 << 24 >> 24 == 42) {
           if ((HEAP8[$520 + 1 >> 0] | 0) == 47) {
            $$lcssa395 = $520;
            $line_number$3$ph$lcssa397 = $line_number$3$ph;
            $line_start$3$ph$lcssa396 = $line_start$3$ph;
            break L42;
           }
          } else if ($521 << 24 >> 24 == 10) {
           $$lcssa394 = $520;
           break;
          } else if (!($521 << 24 >> 24)) {
           label = 190;
           break L3;
          }
          $520 = $520 + 1 | 0;
         }
         $526 = $$lcssa394 + 1 | 0;
         $$ph351 = $526;
         $line_number$3$ph = $line_number$3$ph + 1 | 0;
         $line_start$3$ph = $526;
        }
        HEAP32[$c >> 2] = $$lcssa395 + 1;
        $line_number$6 = $line_number$3$ph$lcssa397;
        $line_start$6 = $line_start$3$ph$lcssa396;
        break L5;
       } else {
        $$ph375 = 47;
        label = 174;
       }
      }
      if ((label | 0) == 174) {
       label = 0;
       $567 = $$ph375;
       $805 = $37;
       L53 : while (1) {
        switch ($567 << 24 >> 24 | 0) {
        case 35:
        case 37:
        case 47:
        case 42:
        case 62:
        case 60:
        case 61:
        case 94:
        case 124:
        case 38:
         break;
        default:
         {
          $$ph376 = $805;
          break L53;
         }
        }
        __THREW__ = 0;
        invoke_vii(44, $data | 0, $567 | 0);
        $568 = __THREW__;
        __THREW__ = 0;
        if ($568 & 1) {
         label = 19;
         break L3;
        }
        $571 = (HEAP32[$c >> 2] | 0) + 1 | 0;
        HEAP32[$c >> 2] = $571;
        $567 = HEAP8[$571 >> 0] | 0;
        if (!($567 << 24 >> 24)) {
         $$ph376 = $571;
         break;
        } else $805 = $571;
       }
       $575 = $$ph376;
      }
      HEAP32[$c >> 2] = $575 + -1;
      $kind$1 = 13;
      $line_number$5 = $line_number$0311;
      $line_start$5 = $line_start$0310;
      label = 230;
      break L5;
     };
     HEAP32[$id + 0 >> 2] = 0;
     HEAP32[$id + 4 >> 2] = 0;
     HEAP32[$id + 8 >> 2] = 0;
     $454 = HEAP8[$37 >> 0] | 0;
     if (!($454 << 24 >> 24)) $472 = $37; else {
      $456 = $454;
      $803 = $37;
      while (1) {
       if (($456 + -65 & 255) >= 26) if (!(($456 + -48 & 255) < 10 | ($456 << 24 >> 24 == 95 | ($456 + -97 & 255) < 26))) {
        $$ph = $803;
        break;
       }
       __THREW__ = 0;
       invoke_vii(44, $id | 0, $456 | 0);
       $465 = __THREW__;
       __THREW__ = 0;
       if ($465 & 1) {
        label = 147;
        break L3;
       }
       $468 = (HEAP32[$c >> 2] | 0) + 1 | 0;
       HEAP32[$c >> 2] = $468;
       $456 = HEAP8[$468 >> 0] | 0;
       if (!($456 << 24 >> 24)) {
        $$ph = $468;
        break;
       } else $803 = $468;
      }
      $472 = $$ph;
     }
     HEAP32[$c >> 2] = $472 + -1;
     do if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 34984) | 0)) $kind$0 = 15; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 34992) | 0)) $kind$0 = 16; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 48240) | 0)) $kind$0 = 17; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35e3) | 0)) $kind$0 = 18; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 37288) | 0)) $kind$0 = 19; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35008) | 0)) $kind$0 = 20; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35016) | 0)) $kind$0 = 21; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35024) | 0)) $kind$0 = 22; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35040) | 0)) $kind$0 = 23; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35048) | 0)) $kind$0 = 24; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 37256) | 0)) $kind$0 = 25; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 34720) | 0)) $kind$0 = 28; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 34752) | 0)) $kind$0 = 29; else {
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35056) | 0)) {
       $kind$0 = 26;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 35072) | 0)) {
       $kind$0 = 27;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 48208) | 0)) {
       $kind$0 = 30;
       break;
      }
      __THREW__ = 0;
      invoke_iii(20, $data | 0, $id | 0) | 0;
      $505 = __THREW__;
      __THREW__ = 0;
      if ($505 & 1) {
       label = 148;
       break L3;
      } else $kind$0 = 11;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id);
     $kind$1 = $kind$0;
     $line_number$5 = $line_number$0311;
     $line_start$5 = $line_start$0310;
     label = 230;
    }
   } while (0);
   if ((label | 0) == 230) {
    label = 0;
    $660 = HEAP32[$c >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $17 | 0, $filename | 0);
    $661 = __THREW__;
    __THREW__ = 0;
    if ($661 & 1) {
     label = 21;
     break;
    }
    $667 = $begin;
    $672 = HEAP32[$667 + 4 >> 2] | 0;
    $673 = $26;
    HEAP32[$673 >> 2] = HEAP32[$667 >> 2];
    HEAP32[$673 + 4 >> 2] = $672;
    $677 = $27;
    HEAP32[$677 >> 2] = $line_number$5;
    HEAP32[$677 + 4 >> 2] = 1 - $line_start$5 + $660;
    HEAP32[$16 >> 2] = $kind$1;
    __THREW__ = 0;
    invoke_vii(40, $28 | 0, $data | 0);
    $681 = __THREW__;
    __THREW__ = 0;
    if ($681 & 1) {
     label = 237;
     break;
    }
    __THREW__ = 0;
    invoke_vii(40, $29 | 0, $17 | 0);
    $683 = __THREW__;
    __THREW__ = 0;
    if ($683 & 1) {
     label = 233;
     break;
    };
    HEAP32[$30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
    HEAP32[$30 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
    HEAP32[$30 + 8 >> 2] = HEAP32[$26 + 8 >> 2];
    HEAP32[$30 + 12 >> 2] = HEAP32[$26 + 12 >> 2];
    __THREW__ = 0;
    $687 = invoke_ii(67, 52) | 0;
    $688 = __THREW__;
    __THREW__ = 0;
    if ($688 & 1) {
     label = 239;
     break;
    }
    $691 = HEAP32[$16 >> 2] | 0;
    $692 = $687 + 12 | 0;
    HEAP32[$692 + 0 >> 2] = HEAP32[$28 + 0 >> 2];
    HEAP32[$692 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
    HEAP32[$692 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
    HEAP32[$28 + 0 >> 2] = 0;
    HEAP32[$28 + 4 >> 2] = 0;
    HEAP32[$28 + 8 >> 2] = 0;
    $693 = $687 + 24 | 0;
    HEAP32[$693 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
    HEAP32[$693 + 4 >> 2] = HEAP32[$31 + 4 >> 2];
    HEAP32[$693 + 8 >> 2] = HEAP32[$31 + 8 >> 2];
    HEAP32[$31 + 0 >> 2] = 0;
    HEAP32[$31 + 4 >> 2] = 0;
    HEAP32[$31 + 8 >> 2] = 0;
    $694 = $687 + 36 | 0;
    HEAP32[$694 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
    HEAP32[$694 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
    HEAP32[$694 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
    HEAP32[$694 + 12 >> 2] = HEAP32[$30 + 12 >> 2];
    HEAP32[$687 + 8 >> 2] = $691;
    HEAP32[$687 + 4 >> 2] = $agg$result;
    $696 = HEAP32[$agg$result >> 2] | 0;
    HEAP32[$687 >> 2] = $696;
    HEAP32[$696 + 4 >> 2] = $687;
    HEAP32[$agg$result >> 2] = $687;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    $line_number$6 = $line_number$5;
    $line_start$6 = $line_start$5;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($data);
   $37 = (HEAP32[$c >> 2] | 0) + 1 | 0;
   HEAP32[$c >> 2] = $37;
   $707 = $37 - $line_start$6 + 1 | 0;
   if (!(HEAP8[$37 >> 0] | 0)) {
    $$lcssa399 = $707;
    $line_number$6$lcssa = $line_number$6;
    label = 242;
    break;
   } else {
    $35 = $707;
    $line_number$0311 = $line_number$6;
    $line_start$0310 = $line_start$6;
   }
  }
  L163 : switch (label | 0) {
  case 19:
   {
    $48 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body76$index6Z2D = tempRet0;
    $eh$lpad$body76$indexZ2D = $48;
    label = 22;
    break;
   }
  case 20:
   {
    $50 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body76$index6Z2D = tempRet0;
    $eh$lpad$body76$indexZ2D = $50;
    label = 22;
    break;
   }
  case 21:
   {
    $52 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body76$index6Z2D = tempRet0;
    $eh$lpad$body76$indexZ2D = $52;
    label = 22;
    break;
   }
  case 32:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 35:
   {
    $73 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $7 | 0, 192, 19);
    $74 = __THREW__;
    __THREW__ = 0;
    do if ($74 & 1) {
     $107 = ___cxa_find_matching_catch() | 0;
     $$013180 = $107;
     $$020179 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $73 | 0, $filename | 0);
     $76 = __THREW__;
     __THREW__ = 0;
     if ($76 & 1) $$037 = 1; else {
      $79 = $begin;
      $84 = HEAP32[$79 + 4 >> 2] | 0;
      $85 = $73 + 12 | 0;
      HEAP32[$85 >> 2] = HEAP32[$79 >> 2];
      HEAP32[$85 + 4 >> 2] = $84;
      $90 = $begin;
      $95 = HEAP32[$90 + 4 >> 2] | 0;
      $96 = $73 + 20 | 0;
      HEAP32[$96 >> 2] = HEAP32[$90 >> 2];
      HEAP32[$96 + 4 >> 2] = $95;
      __THREW__ = 0;
      invoke_vii(40, $73 + 28 | 0, $7 | 0);
      $101 = __THREW__;
      __THREW__ = 0;
      if ($101 & 1) {
       $103 = ___cxa_find_matching_catch() | 0;
       $104 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
       $$013180 = $103;
       $$020179 = $104;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $73 | 0, 48, 176);
      $105 = __THREW__;
      __THREW__ = 0;
      if ($105 & 1) $$037 = 0; else {}
     }
     $109 = ___cxa_find_matching_catch() | 0;
     $110 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     if ($$037) {
      $$013180 = $109;
      $$020179 = $110;
     } else {
      $$13 = $109;
      $$1333 = $110;
      break L163;
     }
    } while (0);
    ___cxa_free_exception($73 | 0);
    $$13 = $$013180;
    $$1333 = $$020179;
    break;
   }
  case 54:
   {
    $134 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $8 | 0, 192, 19);
    $135 = __THREW__;
    __THREW__ = 0;
    do if ($135 & 1) {
     $168 = ___cxa_find_matching_catch() | 0;
     $$114184 = $168;
     $$121183 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $134 | 0, $filename | 0);
     $137 = __THREW__;
     __THREW__ = 0;
     if ($137 & 1) $$018 = 1; else {
      $140 = $begin;
      $145 = HEAP32[$140 + 4 >> 2] | 0;
      $146 = $134 + 12 | 0;
      HEAP32[$146 >> 2] = HEAP32[$140 >> 2];
      HEAP32[$146 + 4 >> 2] = $145;
      $151 = $begin;
      $156 = HEAP32[$151 + 4 >> 2] | 0;
      $157 = $134 + 20 | 0;
      HEAP32[$157 >> 2] = HEAP32[$151 >> 2];
      HEAP32[$157 + 4 >> 2] = $156;
      __THREW__ = 0;
      invoke_vii(40, $134 + 28 | 0, $8 | 0);
      $162 = __THREW__;
      __THREW__ = 0;
      if ($162 & 1) {
       $164 = ___cxa_find_matching_catch() | 0;
       $165 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       $$114184 = $164;
       $$121183 = $165;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $134 | 0, 48, 176);
      $166 = __THREW__;
      __THREW__ = 0;
      if ($166 & 1) $$018 = 0; else {}
     }
     $170 = ___cxa_find_matching_catch() | 0;
     $171 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     if ($$018) {
      $$114184 = $170;
      $$121183 = $171;
     } else {
      $$13 = $170;
      $$1333 = $171;
      break L163;
     }
    } while (0);
    ___cxa_free_exception($134 | 0);
    $$13 = $$114184;
    $$1333 = $$121183;
    break;
   }
  case 62:
   {
    $172 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $9 | 0, 216, 52);
    $173 = __THREW__;
    __THREW__ = 0;
    do if ($173 & 1) {
     $206 = ___cxa_find_matching_catch() | 0;
     $$2188 = $206;
     $$222187 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $172 | 0, $filename | 0);
     $175 = __THREW__;
     __THREW__ = 0;
     if ($175 & 1) $$011 = 1; else {
      $178 = $begin;
      $183 = HEAP32[$178 + 4 >> 2] | 0;
      $184 = $172 + 12 | 0;
      HEAP32[$184 >> 2] = HEAP32[$178 >> 2];
      HEAP32[$184 + 4 >> 2] = $183;
      $189 = $begin;
      $194 = HEAP32[$189 + 4 >> 2] | 0;
      $195 = $172 + 20 | 0;
      HEAP32[$195 >> 2] = HEAP32[$189 >> 2];
      HEAP32[$195 + 4 >> 2] = $194;
      __THREW__ = 0;
      invoke_vii(40, $172 + 28 | 0, $9 | 0);
      $200 = __THREW__;
      __THREW__ = 0;
      if ($200 & 1) {
       $202 = ___cxa_find_matching_catch() | 0;
       $203 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($172);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       $$2188 = $202;
       $$222187 = $203;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $172 | 0, 48, 176);
      $204 = __THREW__;
      __THREW__ = 0;
      if ($204 & 1) $$011 = 0; else {}
     }
     $208 = ___cxa_find_matching_catch() | 0;
     $209 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     if ($$011) {
      $$2188 = $208;
      $$222187 = $209;
     } else {
      $$13 = $208;
      $$1333 = $209;
      break L163;
     }
    } while (0);
    ___cxa_free_exception($172 | 0);
    $$13 = $$2188;
    $$1333 = $$222187;
    break;
   }
  case 76:
   {
    $216 = $ss + 64 | 0;
    $217 = $ss + 8 | 0;
    HEAP32[$217 >> 2] = 592;
    $218 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 740;
    HEAP32[$216 >> 2] = 760;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $218 | 0);
    $221 = __THREW__;
    __THREW__ = 0;
    if ($221 & 1) {
     $233 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $233;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$216 >> 2] = 612;
     HEAP32[$217 >> 2] = 592;
     __THREW__ = 0;
     invoke_vi(177, $218 | 0);
     $225 = __THREW__;
     __THREW__ = 0;
     do if ($225 & 1) {
      $235 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index15Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $235;
     } else {
      HEAP32[$218 >> 2] = 904;
      $227 = $ss + 44 | 0;
      HEAP32[$227 + 0 >> 2] = 0;
      HEAP32[$227 + 4 >> 2] = 0;
      HEAP32[$227 + 8 >> 2] = 0;
      HEAP32[$227 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$5 + 0 >> 2] = 0;
      HEAP32[$5 + 4 >> 2] = 0;
      HEAP32[$5 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $218 | 0, $5 | 0);
      $229 = __THREW__;
      __THREW__ = 0;
      if ($229 & 1) {
       $231 = ___cxa_find_matching_catch() | 0;
       $232 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($227);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($218);
       $eh$lpad$body$i$index15Z2D = $232;
       $eh$lpad$body$i$indexZ2D = $231;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      __THREW__ = 0;
      $237 = invoke_iiii(25, $217 | 0, 272, 36) | 0;
      $238 = __THREW__;
      __THREW__ = 0;
      L268 : do if ($238 & 1) label = 93; else {
       __THREW__ = 0;
       $240 = invoke_iiii(25, $237 | 0, 312, 16) | 0;
       $241 = __THREW__;
       __THREW__ = 0;
       if ($241 & 1) label = 93; else {
        HEAP8[$4 >> 0] = $$lcssa318;
        __THREW__ = 0;
        $243 = invoke_iiii(25, $240 | 0, $4 | 0, 1) | 0;
        $244 = __THREW__;
        __THREW__ = 0;
        if ($244 & 1) label = 93; else {
         __THREW__ = 0;
         invoke_iiii(25, $243 | 0, 336, 1) | 0;
         $246 = __THREW__;
         __THREW__ = 0;
         if ($246 & 1) label = 93; else {
          $248 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $10 | 0, $218 | 0);
          $249 = __THREW__;
          __THREW__ = 0;
          do if ($249 & 1) {
           $284 = ___cxa_find_matching_catch() | 0;
           $$3192 = $284;
           $$323191 = tempRet0;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $248 | 0, $filename | 0);
           $251 = __THREW__;
           __THREW__ = 0;
           if ($251 & 1) $$09 = 1; else {
            $254 = $begin;
            $259 = HEAP32[$254 + 4 >> 2] | 0;
            $260 = $248 + 12 | 0;
            HEAP32[$260 >> 2] = HEAP32[$254 >> 2];
            HEAP32[$260 + 4 >> 2] = $259;
            $265 = $begin;
            $270 = HEAP32[$265 + 4 >> 2] | 0;
            $271 = $248 + 20 | 0;
            HEAP32[$271 >> 2] = HEAP32[$265 >> 2];
            HEAP32[$271 + 4 >> 2] = $270;
            __THREW__ = 0;
            invoke_vii(40, $248 + 28 | 0, $10 | 0);
            $276 = __THREW__;
            __THREW__ = 0;
            if ($276 & 1) {
             $278 = ___cxa_find_matching_catch() | 0;
             $279 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($248);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
             $$3192 = $278;
             $$323191 = $279;
             break;
            }
            __THREW__ = 0;
            invoke_viii(4, $248 | 0, 48, 176);
            $280 = __THREW__;
            __THREW__ = 0;
            if ($280 & 1) $$09 = 0; else {}
           }
           $286 = ___cxa_find_matching_catch() | 0;
           $287 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
           if ($$09) {
            $$3192 = $286;
            $$323191 = $287;
           } else {
            $$4 = $286;
            $$424 = $287;
            break L268;
           }
          } while (0);
          ___cxa_free_exception($248 | 0);
          $$4 = $$3192;
          $$424 = $$323191;
         }
        }
       }
      } while (0);
      if ((label | 0) == 93) {
       $282 = ___cxa_find_matching_catch() | 0;
       $$4 = $282;
       $$424 = tempRet0;
      }
      HEAP32[$ss >> 2] = 572;
      HEAP32[$216 >> 2] = 612;
      HEAP32[$217 >> 2] = 592;
      HEAP32[$218 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($227);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($218);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($216);
      $$13 = $$4;
      $$1333 = $$424;
      break L163;
     } while (0);
     $$0$i = $eh$lpad$body$i$index15Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($216);
    $eh$lpad$body76$index6Z2D = $$0$i;
    $eh$lpad$body76$indexZ2D = $$01$i;
    label = 22;
    break;
   }
  case 100:
   {
    $295 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $11 | 0, 344, 29);
    $296 = __THREW__;
    __THREW__ = 0;
    do if ($296 & 1) {
     $329 = ___cxa_find_matching_catch() | 0;
     $$5196 = $329;
     $$525195 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $295 | 0, $filename | 0);
     $298 = __THREW__;
     __THREW__ = 0;
     if ($298 & 1) $$07 = 1; else {
      $301 = $begin;
      $306 = HEAP32[$301 + 4 >> 2] | 0;
      $307 = $295 + 12 | 0;
      HEAP32[$307 >> 2] = HEAP32[$301 >> 2];
      HEAP32[$307 + 4 >> 2] = $306;
      $312 = $begin;
      $317 = HEAP32[$312 + 4 >> 2] | 0;
      $318 = $295 + 20 | 0;
      HEAP32[$318 >> 2] = HEAP32[$312 >> 2];
      HEAP32[$318 + 4 >> 2] = $317;
      __THREW__ = 0;
      invoke_vii(40, $295 + 28 | 0, $11 | 0);
      $323 = __THREW__;
      __THREW__ = 0;
      if ($323 & 1) {
       $325 = ___cxa_find_matching_catch() | 0;
       $326 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($295);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
       $$5196 = $325;
       $$525195 = $326;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $295 | 0, 48, 176);
      $327 = __THREW__;
      __THREW__ = 0;
      if ($327 & 1) $$07 = 0; else {}
     }
     $331 = ___cxa_find_matching_catch() | 0;
     $332 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     if ($$07) {
      $$5196 = $331;
      $$525195 = $332;
     } else {
      $$13 = $331;
      $$1333 = $332;
      break L163;
     }
    } while (0);
    ___cxa_free_exception($295 | 0);
    $$13 = $$5196;
    $$1333 = $$525195;
    break;
   }
  case 109:
   {
    $335 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $12 | 0, 376, 44);
    $336 = __THREW__;
    __THREW__ = 0;
    do if ($336 & 1) {
     $369 = ___cxa_find_matching_catch() | 0;
     $$6200 = $369;
     $$626199 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $335 | 0, $filename | 0);
     $338 = __THREW__;
     __THREW__ = 0;
     if ($338 & 1) $$05 = 1; else {
      $341 = $begin;
      $346 = HEAP32[$341 + 4 >> 2] | 0;
      $347 = $335 + 12 | 0;
      HEAP32[$347 >> 2] = HEAP32[$341 >> 2];
      HEAP32[$347 + 4 >> 2] = $346;
      $352 = $begin;
      $357 = HEAP32[$352 + 4 >> 2] | 0;
      $358 = $335 + 20 | 0;
      HEAP32[$358 >> 2] = HEAP32[$352 >> 2];
      HEAP32[$358 + 4 >> 2] = $357;
      __THREW__ = 0;
      invoke_vii(40, $335 + 28 | 0, $12 | 0);
      $363 = __THREW__;
      __THREW__ = 0;
      if ($363 & 1) {
       $365 = ___cxa_find_matching_catch() | 0;
       $366 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($335);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
       $$6200 = $365;
       $$626199 = $366;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $335 | 0, 48, 176);
      $367 = __THREW__;
      __THREW__ = 0;
      if ($367 & 1) $$05 = 0; else {}
     }
     $371 = ___cxa_find_matching_catch() | 0;
     $372 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
     if ($$05) {
      $$6200 = $371;
      $$626199 = $372;
     } else {
      $$13 = $371;
      $$1333 = $372;
      break L163;
     }
    } while (0);
    ___cxa_free_exception($335 | 0);
    $$13 = $$6200;
    $$1333 = $$626199;
    break;
   }
  case 117:
   {
    $373 = $ss4 + 64 | 0;
    $374 = $ss4 + 8 | 0;
    HEAP32[$374 >> 2] = 592;
    $375 = $ss4 + 12 | 0;
    HEAP32[$ss4 >> 2] = 740;
    HEAP32[$373 >> 2] = 760;
    HEAP32[$ss4 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss4 + 64 | 0, $375 | 0);
    $378 = __THREW__;
    __THREW__ = 0;
    if ($378 & 1) {
     $390 = ___cxa_find_matching_catch() | 0;
     $$0$i106 = tempRet0;
     $$01$i105 = $390;
    } else {
     HEAP32[$ss4 + 136 >> 2] = 0;
     HEAP32[$ss4 + 140 >> 2] = -1;
     HEAP32[$ss4 >> 2] = 572;
     HEAP32[$373 >> 2] = 612;
     HEAP32[$374 >> 2] = 592;
     __THREW__ = 0;
     invoke_vi(177, $375 | 0);
     $382 = __THREW__;
     __THREW__ = 0;
     do if ($382 & 1) {
      $392 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i103$index20Z2D = tempRet0;
      $eh$lpad$body$i103$indexZ2D = $392;
     } else {
      HEAP32[$375 >> 2] = 904;
      $384 = $ss4 + 44 | 0;
      HEAP32[$384 + 0 >> 2] = 0;
      HEAP32[$384 + 4 >> 2] = 0;
      HEAP32[$384 + 8 >> 2] = 0;
      HEAP32[$384 + 12 >> 2] = 0;
      HEAP32[$ss4 + 60 >> 2] = 24;
      HEAP32[$3 + 0 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $375 | 0, $3 | 0);
      $386 = __THREW__;
      __THREW__ = 0;
      if ($386 & 1) {
       $388 = ___cxa_find_matching_catch() | 0;
       $389 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($384);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($375);
       $eh$lpad$body$i103$index20Z2D = $389;
       $eh$lpad$body$i103$indexZ2D = $388;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      __THREW__ = 0;
      $394 = invoke_iiii(25, $374 | 0, 424, 44) | 0;
      $395 = __THREW__;
      __THREW__ = 0;
      L197 : do if ($395 & 1) label = 133; else {
       HEAP8[$2 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
       __THREW__ = 0;
       $399 = invoke_iiii(25, $394 | 0, $2 | 0, 1) | 0;
       $400 = __THREW__;
       __THREW__ = 0;
       if ($400 & 1) label = 133; else {
        __THREW__ = 0;
        invoke_iiii(25, $399 | 0, 336, 1) | 0;
        $402 = __THREW__;
        __THREW__ = 0;
        if ($402 & 1) label = 133; else {
         $404 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $13 | 0, $375 | 0);
         $405 = __THREW__;
         __THREW__ = 0;
         do if ($405 & 1) {
          $440 = ___cxa_find_matching_catch() | 0;
          $$7204 = $440;
          $$727203 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $404 | 0, $filename | 0);
          $407 = __THREW__;
          __THREW__ = 0;
          if ($407 & 1) $$03 = 1; else {
           $410 = $begin;
           $415 = HEAP32[$410 + 4 >> 2] | 0;
           $416 = $404 + 12 | 0;
           HEAP32[$416 >> 2] = HEAP32[$410 >> 2];
           HEAP32[$416 + 4 >> 2] = $415;
           $421 = $begin;
           $426 = HEAP32[$421 + 4 >> 2] | 0;
           $427 = $404 + 20 | 0;
           HEAP32[$427 >> 2] = HEAP32[$421 >> 2];
           HEAP32[$427 + 4 >> 2] = $426;
           __THREW__ = 0;
           invoke_vii(40, $404 + 28 | 0, $13 | 0);
           $432 = __THREW__;
           __THREW__ = 0;
           if ($432 & 1) {
            $434 = ___cxa_find_matching_catch() | 0;
            $435 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($404);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
            $$7204 = $434;
            $$727203 = $435;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $404 | 0, 48, 176);
           $436 = __THREW__;
           __THREW__ = 0;
           if ($436 & 1) $$03 = 0; else {}
          }
          $442 = ___cxa_find_matching_catch() | 0;
          $443 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          if ($$03) {
           $$7204 = $442;
           $$727203 = $443;
          } else {
           $$8 = $442;
           $$828 = $443;
           break L197;
          }
         } while (0);
         ___cxa_free_exception($404 | 0);
         $$8 = $$7204;
         $$828 = $$727203;
        }
       }
      } while (0);
      if ((label | 0) == 133) {
       $438 = ___cxa_find_matching_catch() | 0;
       $$8 = $438;
       $$828 = tempRet0;
      }
      HEAP32[$ss4 >> 2] = 572;
      HEAP32[$373 >> 2] = 612;
      HEAP32[$374 >> 2] = 592;
      HEAP32[$375 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($384);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($375);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($373);
      $$13 = $$8;
      $$1333 = $$828;
      break L163;
     } while (0);
     $$0$i106 = $eh$lpad$body$i103$index20Z2D;
     $$01$i105 = $eh$lpad$body$i103$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($373);
    $eh$lpad$body76$index6Z2D = $$0$i106;
    $eh$lpad$body76$indexZ2D = $$01$i105;
    label = 22;
    break;
   }
  case 147:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index25 = tempRet0;
    label = 149;
    break;
   }
  case 148:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index25 = tempRet0;
    label = 149;
    break;
   }
  case 190:
   {
    $527 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 472, 41);
    $528 = __THREW__;
    __THREW__ = 0;
    do if ($528 & 1) {
     $561 = ___cxa_find_matching_catch() | 0;
     $$9210 = $561;
     $$929209 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $527 | 0, $filename | 0);
     $530 = __THREW__;
     __THREW__ = 0;
     if ($530 & 1) $$01 = 1; else {
      $533 = $begin;
      $538 = HEAP32[$533 + 4 >> 2] | 0;
      $539 = $527 + 12 | 0;
      HEAP32[$539 >> 2] = HEAP32[$533 >> 2];
      HEAP32[$539 + 4 >> 2] = $538;
      $544 = $begin;
      $549 = HEAP32[$544 + 4 >> 2] | 0;
      $550 = $527 + 20 | 0;
      HEAP32[$550 >> 2] = HEAP32[$544 >> 2];
      HEAP32[$550 + 4 >> 2] = $549;
      __THREW__ = 0;
      invoke_vii(40, $527 + 28 | 0, $14 | 0);
      $555 = __THREW__;
      __THREW__ = 0;
      if ($555 & 1) {
       $557 = ___cxa_find_matching_catch() | 0;
       $558 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($527);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
       $$9210 = $557;
       $$929209 = $558;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $527 | 0, 48, 176);
      $559 = __THREW__;
      __THREW__ = 0;
      if ($559 & 1) $$01 = 0; else {}
     }
     $563 = ___cxa_find_matching_catch() | 0;
     $564 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     if ($$01) {
      $$9210 = $563;
      $$929209 = $564;
     } else {
      $$13 = $563;
      $$1333 = $564;
      break L163;
     }
    } while (0);
    ___cxa_free_exception($527 | 0);
    $$13 = $$9210;
    $$1333 = $$929209;
    break;
   }
  case 204:
   {
    $576 = $ss6 + 64 | 0;
    $577 = $ss6 + 8 | 0;
    HEAP32[$577 >> 2] = 592;
    $578 = $ss6 + 12 | 0;
    HEAP32[$ss6 >> 2] = 740;
    HEAP32[$576 >> 2] = 760;
    HEAP32[$ss6 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss6 + 64 | 0, $578 | 0);
    $581 = __THREW__;
    __THREW__ = 0;
    if ($581 & 1) {
     $593 = ___cxa_find_matching_catch() | 0;
     $$0$i144 = tempRet0;
     $$01$i143 = $593;
    } else {
     HEAP32[$ss6 + 136 >> 2] = 0;
     HEAP32[$ss6 + 140 >> 2] = -1;
     HEAP32[$ss6 >> 2] = 572;
     HEAP32[$576 >> 2] = 612;
     HEAP32[$577 >> 2] = 592;
     __THREW__ = 0;
     invoke_vi(177, $578 | 0);
     $585 = __THREW__;
     __THREW__ = 0;
     do if ($585 & 1) {
      $595 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i141$index30Z2D = tempRet0;
      $eh$lpad$body$i141$indexZ2D = $595;
     } else {
      HEAP32[$578 >> 2] = 904;
      $587 = $ss6 + 44 | 0;
      HEAP32[$587 + 0 >> 2] = 0;
      HEAP32[$587 + 4 >> 2] = 0;
      HEAP32[$587 + 8 >> 2] = 0;
      HEAP32[$587 + 12 >> 2] = 0;
      HEAP32[$ss6 + 60 >> 2] = 24;
      HEAP32[$1 + 0 >> 2] = 0;
      HEAP32[$1 + 4 >> 2] = 0;
      HEAP32[$1 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $578 | 0, $1 | 0);
      $589 = __THREW__;
      __THREW__ = 0;
      if ($589 & 1) {
       $591 = ___cxa_find_matching_catch() | 0;
       $592 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($587);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($578);
       $eh$lpad$body$i141$index30Z2D = $592;
       $eh$lpad$body$i141$indexZ2D = $591;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      __THREW__ = 0;
      invoke_iiii(25, $577 | 0, 520, 28) | 0;
      $597 = __THREW__;
      __THREW__ = 0;
      L311 : do if ($597 & 1) label = 216; else {
       if ((HEAP8[HEAP32[$c >> 2] >> 0] | 0) < 32) {
        __THREW__ = 0;
        $602 = invoke_iiii(25, $577 | 0, 552, 5) | 0;
        $603 = __THREW__;
        __THREW__ = 0;
        if ($603 & 1) {
         label = 216;
         break;
        }
        __THREW__ = 0;
        invoke_iii(21, $602 | 0, HEAP8[HEAP32[$c >> 2] >> 0] | 0) | 0;
        $608 = __THREW__;
        __THREW__ = 0;
        if ($608 & 1) {
         label = 216;
         break;
        }
       } else {
        __THREW__ = 0;
        $612 = invoke_iiii(25, $577 | 0, 336, 1) | 0;
        $613 = __THREW__;
        __THREW__ = 0;
        if ($613 & 1) {
         label = 216;
         break;
        }
        HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
        __THREW__ = 0;
        $617 = invoke_iiii(25, $612 | 0, $0 | 0, 1) | 0;
        $618 = __THREW__;
        __THREW__ = 0;
        if ($618 & 1) {
         label = 216;
         break;
        }
        __THREW__ = 0;
        invoke_iiii(25, $617 | 0, 336, 1) | 0;
        $620 = __THREW__;
        __THREW__ = 0;
        if ($620 & 1) {
         label = 216;
         break;
        }
       }
       $622 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $15 | 0, $578 | 0);
       $623 = __THREW__;
       __THREW__ = 0;
       do if ($623 & 1) {
        $656 = ___cxa_find_matching_catch() | 0;
        $$10214 = $656;
        $$1030213 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $622 | 0, $filename | 0);
        $625 = __THREW__;
        __THREW__ = 0;
        if ($625 & 1) $$0 = 1; else {
         $628 = $begin;
         $633 = HEAP32[$628 + 4 >> 2] | 0;
         $634 = $622 + 12 | 0;
         HEAP32[$634 >> 2] = HEAP32[$628 >> 2];
         HEAP32[$634 + 4 >> 2] = $633;
         $639 = $begin;
         $644 = HEAP32[$639 + 4 >> 2] | 0;
         $645 = $622 + 20 | 0;
         HEAP32[$645 >> 2] = HEAP32[$639 >> 2];
         HEAP32[$645 + 4 >> 2] = $644;
         __THREW__ = 0;
         invoke_vii(40, $622 + 28 | 0, $15 | 0);
         $650 = __THREW__;
         __THREW__ = 0;
         if ($650 & 1) {
          $652 = ___cxa_find_matching_catch() | 0;
          $653 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($622);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
          $$10214 = $652;
          $$1030213 = $653;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $622 | 0, 48, 176);
         $654 = __THREW__;
         __THREW__ = 0;
         if ($654 & 1) $$0 = 0; else {}
        }
        $658 = ___cxa_find_matching_catch() | 0;
        $659 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
        if ($$0) {
         $$10214 = $658;
         $$1030213 = $659;
        } else {
         $$11 = $658;
         $$1131 = $659;
         break L311;
        }
       } while (0);
       ___cxa_free_exception($622 | 0);
       $$11 = $$10214;
       $$1131 = $$1030213;
      } while (0);
      if ((label | 0) == 216) {
       $610 = ___cxa_find_matching_catch() | 0;
       $$11 = $610;
       $$1131 = tempRet0;
      }
      HEAP32[$ss6 >> 2] = 572;
      HEAP32[$576 >> 2] = 612;
      HEAP32[$577 >> 2] = 592;
      HEAP32[$578 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($587);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($578);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($576);
      $$13 = $$11;
      $$1333 = $$1131;
      break L163;
     } while (0);
     $$0$i144 = $eh$lpad$body$i141$index30Z2D;
     $$01$i143 = $eh$lpad$body$i141$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($576);
    $eh$lpad$body76$index6Z2D = $$0$i144;
    $eh$lpad$body76$indexZ2D = $$01$i143;
    label = 22;
    break;
   }
  case 233:
   {
    $685 = ___cxa_find_matching_catch() | 0;
    $686 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $eh$lpad$body167$index35Z2D = $686;
    $eh$lpad$body167$indexZ2D = $685;
    label = 238;
    break;
   }
  case 237:
   {
    $708 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body167$index35Z2D = tempRet0;
    $eh$lpad$body167$indexZ2D = $708;
    label = 238;
    break;
   }
  case 239:
   {
    $710 = ___cxa_find_matching_catch() | 0;
    $711 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $$1215 = $710;
    $$1232 = $711;
    label = 240;
    break;
   }
  case 242:
   {
    $718 = 0;
    $723 = $$lcssa399;
    $line_number$0$lcssa = $line_number$6$lcssa;
    label = 243;
    break L1;
    break;
   }
  }
  if ((label | 0) == 22) {
   $$13 = $eh$lpad$body76$indexZ2D;
   $$1333 = $eh$lpad$body76$index6Z2D;
  } else if ((label | 0) == 149) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id);
   $$13 = $lpad$phi$index;
   $$1333 = $lpad$phi$index25;
  } else if ((label | 0) == 238) {
   $$1215 = $eh$lpad$body167$indexZ2D;
   $$1232 = $eh$lpad$body167$index35Z2D;
   label = 240;
  }
  if ((label | 0) == 240) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   $$13 = $$1215;
   $$1333 = $$1232;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($data);
  $$1617 = $$13;
  $$1636 = $$1333;
 } while (0);
 do if ((label | 0) == 243) {
  __THREW__ = 0;
  invoke_viii(3, $19 | 0, 46680, 0);
  $712 = __THREW__;
  __THREW__ = 0;
  if ($712 & 1) {
   $39 = ___cxa_find_matching_catch() | 0;
   $$1617 = $39;
   $$1636 = tempRet0;
   break;
  }
  __THREW__ = 0;
  invoke_vii(40, $20 | 0, $filename | 0);
  $714 = __THREW__;
  __THREW__ = 0;
  if ($714 & 1) {
   $752 = ___cxa_find_matching_catch() | 0;
   $$15 = $752;
   $$1535 = tempRet0;
  } else {
   $716 = $20 + 12 | 0;
   $717 = $718 | $line_number$0$lcssa;
   $719 = $716;
   HEAP32[$719 >> 2] = $717;
   HEAP32[$719 + 4 >> 2] = $723;
   $725 = $20 + 20 | 0;
   HEAP32[$725 >> 2] = $717;
   HEAP32[$725 + 4 >> 2] = $723;
   HEAP32[$18 >> 2] = 31;
   $729 = $18 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $729 | 0, $19 | 0);
   $730 = __THREW__;
   __THREW__ = 0;
   do if ($730 & 1) {
    $754 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body175$index40Z2D = tempRet0;
    $eh$lpad$body175$indexZ2D = $754;
    label = 252;
   } else {
    $732 = $18 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $732 | 0, $20 | 0);
    $733 = __THREW__;
    __THREW__ = 0;
    if ($733 & 1) {
     $735 = ___cxa_find_matching_catch() | 0;
     $736 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($729);
     $eh$lpad$body175$index40Z2D = $736;
     $eh$lpad$body175$indexZ2D = $735;
     label = 252;
     break;
    }
    $737 = $18 + 28 | 0;
    HEAP32[$737 + 0 >> 2] = HEAP32[$716 + 0 >> 2];
    HEAP32[$737 + 4 >> 2] = HEAP32[$716 + 4 >> 2];
    HEAP32[$737 + 8 >> 2] = HEAP32[$716 + 8 >> 2];
    HEAP32[$737 + 12 >> 2] = HEAP32[$716 + 12 >> 2];
    __THREW__ = 0;
    $738 = invoke_ii(67, 52) | 0;
    $739 = __THREW__;
    __THREW__ = 0;
    if ($739 & 1) {
     $756 = ___cxa_find_matching_catch() | 0;
     $757 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($732);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($729);
     $$1416 = $756;
     $$1434 = $757;
     break;
    } else {
     $742 = HEAP32[$18 >> 2] | 0;
     $743 = $738 + 12 | 0;
     HEAP32[$743 + 0 >> 2] = HEAP32[$729 + 0 >> 2];
     HEAP32[$743 + 4 >> 2] = HEAP32[$729 + 4 >> 2];
     HEAP32[$743 + 8 >> 2] = HEAP32[$729 + 8 >> 2];
     HEAP32[$729 + 0 >> 2] = 0;
     HEAP32[$729 + 4 >> 2] = 0;
     HEAP32[$729 + 8 >> 2] = 0;
     $744 = $738 + 24 | 0;
     $745 = $18 + 16 | 0;
     HEAP32[$744 + 0 >> 2] = HEAP32[$745 + 0 >> 2];
     HEAP32[$744 + 4 >> 2] = HEAP32[$745 + 4 >> 2];
     HEAP32[$744 + 8 >> 2] = HEAP32[$745 + 8 >> 2];
     HEAP32[$745 + 0 >> 2] = 0;
     HEAP32[$745 + 4 >> 2] = 0;
     HEAP32[$745 + 8 >> 2] = 0;
     $746 = $738 + 36 | 0;
     HEAP32[$746 + 0 >> 2] = HEAP32[$737 + 0 >> 2];
     HEAP32[$746 + 4 >> 2] = HEAP32[$737 + 4 >> 2];
     HEAP32[$746 + 8 >> 2] = HEAP32[$737 + 8 >> 2];
     HEAP32[$746 + 12 >> 2] = HEAP32[$737 + 12 >> 2];
     HEAP32[$738 + 8 >> 2] = $742;
     HEAP32[$738 + 4 >> 2] = $agg$result;
     $748 = HEAP32[$agg$result >> 2] | 0;
     HEAP32[$738 >> 2] = $748;
     HEAP32[$748 + 4 >> 2] = $738;
     HEAP32[$agg$result >> 2] = $738;
     HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($732);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($729);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 252) {
    $$1416 = $eh$lpad$body175$indexZ2D;
    $$1434 = $eh$lpad$body175$index40Z2D;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
   $$15 = $$1416;
   $$1535 = $$1434;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
  $$1617 = $$15;
  $$1636 = $$1535;
 } while (0);
 if (!(HEAP32[$22 >> 2] | 0)) ___resumeException($$1617 | 0);
 $760 = HEAP32[$21 >> 2] | 0;
 $762 = (HEAP32[$agg$result >> 2] | 0) + 4 | 0;
 $764 = HEAP32[$760 >> 2] | 0;
 HEAP32[$764 + 4 >> 2] = HEAP32[$762 >> 2];
 HEAP32[HEAP32[$762 >> 2] >> 2] = $764;
 HEAP32[$22 >> 2] = 0;
 if (($760 | 0) == ($agg$result | 0)) ___resumeException($$1617 | 0);
 $__f$01$i$i = $760;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($agg$result | 0));
 ___resumeException($$1617 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_($agg$result, $this, $args, $args1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10 = 0, $$0$i$i$i$i$i$i$i$i$i10$i = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i3$i$i = 0, $$0$i$i$i$i$i$i$i$i$i33 = 0, $$0$i$i$i$i$i$i$i$i$i33$i = 0, $$0$i$i$i$i$i$i$i$i12 = 0, $$0$i$i$i$i$i$i$i$i12$i = 0, $$0$i$i$i$i$i$i$i$i12$i$i$i = 0, $$0$i$i$i$i$i$i$i$i35$i = 0, $$0$i$i$i$i$i$i$i$i35$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i36 = 0, $$0$i$i$i$i$i$i$i$i36$lcssa = 0, $$0$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i27 = 0, $$0$i$i$i$i$i$i27$i = 0, $$0$i$i$i$i$i$i27$i$i$i = 0, $$0$i$i$i$i$i$i27$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i27$i$lcssa = 0, $$0$i$i$i$i$i$i27$lcssa = 0, $$0$i$i$i$i$i$i34 = 0, $$0$i$i$i$i$i$i34$i = 0, $$0$i$i$i$i$i$i4$i$i = 0, $$0$i$i$i$i$i29 = 0, $$0$i$i$i$i$i29$i = 0, $$0$i$i$i$i$i29$i$i$i = 0, $$0$i$i$i$i119$i$i = 0, $$0$i$i$i$i119$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i$ph = 0, $$0$i$i$i$i119$i$i$i$i$ph = 0, $$0$i$i$i$i119$i$i$i$ph = 0, $$0$i$i$i$i119$i$i$ph = 0, $$0$i$i$i$i119$i$i24 = 0, $$0$i$i$i$i119$i$i24$i = 0, $$0$i$i$i$i119$i$i24$i$i$i = 0, $$0$i$i$i$i119$i$i24$i$i$i$ph = 0, $$0$i$i$i$i119$i$i24$i$ph = 0, $$0$i$i$i$i119$i$i24$ph = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i15 = 0, $$01$i$i$i$i$i$i$i$i15$i = 0, $$01$i$i$i$i$i$i$i$i15$i$i$i = 0, $$01$i$i$i$i$i$i$i$i40 = 0, $$01$i$i$i$i$i32 = 0, $$01$i$i$i$i$i32$i = 0, $$01$i$i$i$i$i32$i$i$i = 0, $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$lcssa = 0, $$cast$i$i$i$i$i$i$i$i38$lcssa = 0, $$cast$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i30$i$i$i$lcssa = 0, $$cast$i$i$i$i$i30$i$lcssa = 0, $$cast$i$i$i$i$i30$lcssa = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i3 = 0, $$idx$val$i$i3$i = 0, $$idx$val$i$i3$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i21 = 0, $$idx2$val$i22$i$i$i$i$i$i21$i = 0, $$idx2$val$i22$i$i$i$i$i$i21$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i8 = 0, $$pre$i$i$i$i$i$i8$i = 0, $$pre$i$i$i$i$i$i8$i$i$i = 0, $$pre$i$i23 = 0, $$pre$i$i23$i = 0, $$pre$i$i23$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $11 = 0, $110 = 0, $112 = 0, $115 = 0, $118 = 0, $121 = 0, $122 = 0, $124 = 0, $127 = 0, $131 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $139 = 0, $14 = 0, $141 = 0, $143 = 0, $146 = 0, $147 = 0, $151 = 0, $153 = 0, $155 = 0, $158 = 0, $16 = 0, $165 = 0, $168 = 0, $169 = 0, $171 = 0, $172 = 0, $176 = 0, $178 = 0, $18 = 0, $181 = 0, $184 = 0, $187 = 0, $188 = 0, $190 = 0, $193 = 0, $197 = 0, $198 = 0, $2 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $205 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $211 = 0, $213 = 0, $216 = 0, $22 = 0, $223 = 0, $226 = 0, $227 = 0, $229 = 0, $230 = 0, $234 = 0, $236 = 0, $239 = 0, $242 = 0, $245 = 0, $246 = 0, $248 = 0, $251 = 0, $255 = 0, $256 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $262 = 0, $263 = 0, $265 = 0, $266 = 0, $267 = 0, $269 = 0, $271 = 0, $274 = 0, $28 = 0, $281 = 0, $284 = 0, $285 = 0, $287 = 0, $288 = 0, $292 = 0, $294 = 0, $297 = 0, $3 = 0, $30 = 0, $300 = 0, $303 = 0, $304 = 0, $306 = 0, $309 = 0, $313 = 0, $314 = 0, $315 = 0, $317 = 0, $318 = 0, $321 = 0, $323 = 0, $325 = 0, $328 = 0, $329 = 0, $33 = 0, $333 = 0, $335 = 0, $337 = 0, $340 = 0, $347 = 0, $350 = 0, $351 = 0, $353 = 0, $354 = 0, $358 = 0, $360 = 0, $363 = 0, $366 = 0, $369 = 0, $370 = 0, $372 = 0, $375 = 0, $379 = 0, $380 = 0, $381 = 0, $383 = 0, $384 = 0, $386 = 0, $387 = 0, $388 = 0, $390 = 0, $392 = 0, $395 = 0, $4 = 0, $40 = 0, $402 = 0, $405 = 0, $406 = 0, $408 = 0, $409 = 0, $413 = 0, $415 = 0, $418 = 0, $421 = 0, $424 = 0, $425 = 0, $427 = 0, $43 = 0, $430 = 0, $434 = 0, $435 = 0, $437 = 0, $438 = 0, $44 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $449 = 0, $450 = 0, $455 = 0, $457 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $466 = 0, $468 = 0, $47 = 0, $470 = 0, $472 = 0, $473 = 0, $476 = 0, $477 = 0, $479 = 0, $480 = 0, $481 = 0, $484 = 0, $485 = 0, $487 = 0, $488 = 0, $491 = 0, $498 = 0, $5 = 0, $501 = 0, $507 = 0, $51 = 0, $512 = 0, $515 = 0, $523 = 0, $526 = 0, $529 = 0, $53 = 0, $533 = 0, $542 = 0, $547 = 0, $549 = 0, $553 = 0, $555 = 0, $556 = 0, $558 = 0, $56 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $568 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $580 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $89 = 0, $92 = 0, $99 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa112 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa113 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa115 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa117 = 0, $__nd$0$i20$i$i$i$i$in$i$i19 = 0, $__nd$0$i20$i$i$i$i$in$i$i19$be = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa111 = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$lcssa114 = 0, $__nd$0$i20$i$i$i$i$in$i$i19$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i19$lcssa116 = 0, $__v$idx14$val$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i$i$i = 0, $eh$lpad$body40$i$index2Z2D = 0, $eh$lpad$body40$i$indexZ2D = 0, $eh$lpad$body45$index8Z2D = 0, $eh$lpad$body45$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 36 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 HEAP32[$agg$result >> 2] = 18;
 $5 = $3 + 4 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $3 + 8 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $3 + 4 | 0;
 HEAP32[$3 >> 2] = $7;
 $$idx$val$i$i = HEAP32[$args >> 2] | 0;
 $8 = $args + 4 | 0;
 do if (($$idx$val$i$i | 0) != ($8 | 0)) {
  $14 = $$idx$val$i$i;
  $572 = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $10 = invoke_ii(67, 24) | 0;
   $11 = __THREW__;
   __THREW__ = 0;
   if ($11 & 1) {
    label = 37;
    break;
   }
   $16 = $14 + 16 | 0;
   $18 = HEAP32[$16 >> 2] | 0;
   $21 = HEAP32[$16 + 4 >> 2] | 0;
   $22 = $10 + 16 | 0;
   HEAP32[$22 >> 2] = $18;
   HEAP32[$22 + 4 >> 2] = $21;
   $26 = $18;
   $$pre$i$i$i$i$i$i = HEAP32[$7 >> 2] | 0;
   do if ((HEAP32[$3 >> 2] | 0) == ($7 | 0)) {
    $47 = $7;
    label = 13;
   } else {
    $28 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($28) {
     $$0$i$i$i$i$i$i$i$i = $7;
     while (1) {
      $33 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$33 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $33; else {
       $$cast$i$i$i$i$i$i$i$i$lcssa = $33;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $30 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$30) {
       $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $30;
     }
     $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $26 >>> 0) {
     $47 = $$01$i$i$i$i$i$i$i$i;
     label = 13;
    } else if ($28) {
     $$0$i$i$i$i119$i$i = $7;
     $51 = $7;
     label = 23;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $26 >>> 0) {
       $40 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$40) {
        $$0$i$i$i$i119$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa117 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $40;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $26 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 26;
        break;
       }
       $43 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
       $44 = HEAP32[$43 >> 2] | 0;
       if (!$44) {
        $$0$i$i$i$i119$i$i$ph = $43;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa117 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $44;
      }
      $__nd$0$i20$i$i$i$i$in$i$i = $__nd$0$i20$i$i$i$i$in$i$i$be;
     }
     if ((label | 0) == 22) {
      label = 0;
      $$0$i$i$i$i119$i$i = $$0$i$i$i$i119$i$i$ph;
      $51 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa117;
      label = 23;
      break;
     } else if ((label | 0) == 26) {
      label = 0;
      $59 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      label = 27;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 13) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i = $7;
     $51 = $7;
     label = 23;
    } else {
     $46 = $47 + 4 | 0;
     $$pre$i$i = HEAP32[$46 >> 2] | 0;
     if (!$$pre$i$i) {
      $$0$i$i$i$i119$i$i = $46;
      $51 = $47;
      label = 23;
     } else {
      $59 = $$pre$i$i;
      label = 27;
     }
    }
   }
   if ((label | 0) == 23) {
    label = 0;
    HEAP32[$10 >> 2] = 0;
    HEAP32[$10 + 4 >> 2] = 0;
    HEAP32[$10 + 8 >> 2] = $51;
    HEAP32[$$0$i$i$i$i119$i$i >> 2] = $10;
    $53 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
    if (!$53) $56 = $10; else {
     HEAP32[$3 >> 2] = $53;
     $56 = HEAP32[$$0$i$i$i$i119$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$5 >> 2] | 0, $56);
    HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
    $62 = $14;
   } else if ((label | 0) == 27) {
    label = 0;
    if (($59 | 0) == ($10 | 0)) $62 = $572; else {
     __ZdlPv($10);
     $62 = $572;
    }
   }
   $63 = HEAP32[$62 + 4 >> 2] | 0;
   if (!$63) {
    $$0$i$i$i$i$i = $62;
    while (1) {
     $68 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$68 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $68;
      break;
     } else $$0$i$i$i$i$i = $68;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $63;
    while (1) {
     $65 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$65) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $65;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($8 | 0)) {
    label = 38;
    break;
   } else {
    $14 = $$01$i$i$i$i$i;
    $572 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 37) {
   $72 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$7 >> 2] | 0);
   ___resumeException($72 | 0);
  } else if ((label | 0) == 38) break;
 } while (0);
 $75 = $4 + 4 | 0;
 HEAP32[$75 >> 2] = 0;
 $76 = $4 + 8 | 0;
 HEAP32[$76 >> 2] = 0;
 $77 = $4 + 4 | 0;
 HEAP32[$4 >> 2] = $77;
 $$idx$val$i$i3 = HEAP32[$args1 >> 2] | 0;
 $78 = $args1 + 4 | 0;
 do if (($$idx$val$i$i3 | 0) != ($78 | 0)) {
  $573 = $$idx$val$i$i3;
  $84 = $$idx$val$i$i3;
  while (1) {
   __THREW__ = 0;
   $80 = invoke_ii(67, 28) | 0;
   $81 = __THREW__;
   __THREW__ = 0;
   if ($81 & 1) break;
   $83 = $84 + 16 | 0;
   $85 = $80 + 16 | 0;
   HEAP32[$85 + 0 >> 2] = HEAP32[$83 + 0 >> 2];
   HEAP32[$85 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
   HEAP32[$85 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
   $$pre$i$i$i$i$i$i8 = HEAP32[$77 >> 2] | 0;
   do if ((HEAP32[$4 >> 2] | 0) == ($77 | 0)) {
    $106 = $77;
    label = 51;
   } else {
    $87 = ($$pre$i$i$i$i$i$i8 | 0) == 0;
    if ($87) {
     $$0$i$i$i$i$i$i$i$i12 = $77;
     while (1) {
      $92 = HEAP32[$$0$i$i$i$i$i$i$i$i12 + 8 >> 2] | 0;
      if ((HEAP32[$92 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12 | 0)) $$0$i$i$i$i$i$i$i$i12 = $92; else {
       $$cast$i$i$i$i$i$i$i$i13$lcssa = $92;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i15 = $$cast$i$i$i$i$i$i$i$i13$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i10 = $$pre$i$i$i$i$i$i8;
     while (1) {
      $89 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10 + 4 >> 2] | 0;
      if (!$89) {
       $$0$i$i$i$i$i$i$i$i$i10$lcssa = $$0$i$i$i$i$i$i$i$i$i10;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i10 = $89;
     }
     $$01$i$i$i$i$i$i$i$i15 = $$0$i$i$i$i$i$i$i$i$i10$lcssa;
    }
    $__v$idx14$val$i$i$i$i$i$i = HEAP32[$85 >> 2] | 0;
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i15 + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i >>> 0) {
     $106 = $$01$i$i$i$i$i$i$i$i15;
     label = 51;
    } else if ($87) {
     $$0$i$i$i$i119$i$i24 = $77;
     $110 = $77;
     label = 61;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i19 = $$pre$i$i$i$i$i$i8;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i21 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19 + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i21 >>> 0 > $__v$idx14$val$i$i$i$i$i$i >>> 0) {
       $99 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19 >> 2] | 0;
       if (!$99) {
        $$0$i$i$i$i119$i$i24$ph = $__nd$0$i20$i$i$i$i$in$i$i19;
        $__nd$0$i20$i$i$i$i$in$i$i19$lcssa116 = $__nd$0$i20$i$i$i$i$in$i$i19;
        label = 60;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i19$be = $99;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i21 >>> 0 >= $__v$idx14$val$i$i$i$i$i$i >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i19$lcssa = $__nd$0$i20$i$i$i$i$in$i$i19;
        label = 64;
        break;
       }
       $102 = $__nd$0$i20$i$i$i$i$in$i$i19 + 4 | 0;
       $103 = HEAP32[$102 >> 2] | 0;
       if (!$103) {
        $$0$i$i$i$i119$i$i24$ph = $102;
        $__nd$0$i20$i$i$i$i$in$i$i19$lcssa116 = $__nd$0$i20$i$i$i$i$in$i$i19;
        label = 60;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i19$be = $103;
      }
      $__nd$0$i20$i$i$i$i$in$i$i19 = $__nd$0$i20$i$i$i$i$in$i$i19$be;
     }
     if ((label | 0) == 60) {
      label = 0;
      $$0$i$i$i$i119$i$i24 = $$0$i$i$i$i119$i$i24$ph;
      $110 = $__nd$0$i20$i$i$i$i$in$i$i19$lcssa116;
      label = 61;
      break;
     } else if ((label | 0) == 64) {
      label = 0;
      $118 = $__nd$0$i20$i$i$i$i$in$i$i19$lcssa;
      label = 65;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 51) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i8) {
     $$0$i$i$i$i119$i$i24 = $77;
     $110 = $77;
     label = 61;
    } else {
     $105 = $106 + 4 | 0;
     $$pre$i$i23 = HEAP32[$105 >> 2] | 0;
     if (!$$pre$i$i23) {
      $$0$i$i$i$i119$i$i24 = $105;
      $110 = $106;
      label = 61;
     } else {
      $118 = $$pre$i$i23;
      label = 65;
     }
    }
   }
   if ((label | 0) == 61) {
    label = 0;
    HEAP32[$80 >> 2] = 0;
    HEAP32[$80 + 4 >> 2] = 0;
    HEAP32[$80 + 8 >> 2] = $110;
    HEAP32[$$0$i$i$i$i119$i$i24 >> 2] = $80;
    $112 = HEAP32[HEAP32[$4 >> 2] >> 2] | 0;
    if (!$112) $115 = $80; else {
     HEAP32[$4 >> 2] = $112;
     $115 = HEAP32[$$0$i$i$i$i119$i$i24 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$75 >> 2] | 0, $115);
    HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 1;
    $121 = $84;
   } else if ((label | 0) == 65) {
    label = 0;
    if (($118 | 0) == ($80 | 0)) $121 = $573; else {
     __ZdlPv($80);
     $121 = $573;
    }
   }
   $122 = HEAP32[$121 + 4 >> 2] | 0;
   if (!$122) {
    $$0$i$i$i$i$i29 = $121;
    while (1) {
     $127 = HEAP32[$$0$i$i$i$i$i29 + 8 >> 2] | 0;
     if ((HEAP32[$127 >> 2] | 0) == ($$0$i$i$i$i$i29 | 0)) {
      $$cast$i$i$i$i$i30$lcssa = $127;
      break;
     } else $$0$i$i$i$i$i29 = $127;
    }
    $$01$i$i$i$i$i32 = $$cast$i$i$i$i$i30$lcssa;
   } else {
    $$0$i$i$i$i$i$i27 = $122;
    while (1) {
     $124 = HEAP32[$$0$i$i$i$i$i$i27 >> 2] | 0;
     if (!$124) {
      $$0$i$i$i$i$i$i27$lcssa = $$0$i$i$i$i$i$i27;
      break;
     } else $$0$i$i$i$i$i$i27 = $124;
    }
    $$01$i$i$i$i$i32 = $$0$i$i$i$i$i$i27$lcssa;
   }
   if (($$01$i$i$i$i$i32 | 0) == ($78 | 0)) {
    label = 75;
    break;
   } else {
    $573 = $$01$i$i$i$i$i32;
    $84 = $$01$i$i$i$i$i32;
   }
  }
  if ((label | 0) == 75) break;
  $565 = ___cxa_find_matching_catch() | 0;
  $566 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, HEAP32[$77 >> 2] | 0);
  $$0 = $566;
  $$01 = $565;
  $571 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $571);
  ___resumeException($$01 | 0);
 } while (0);
 $131 = $1 + 4 | 0;
 HEAP32[$131 >> 2] = 0;
 $132 = $1 + 8 | 0;
 HEAP32[$132 >> 2] = 0;
 $133 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $133;
 $$idx$val$i$i$i = HEAP32[$3 >> 2] | 0;
 do if (($$idx$val$i$i$i | 0) == ($7 | 0)) label = 114; else {
  $139 = $$idx$val$i$i$i;
  $574 = $$idx$val$i$i$i;
  while (1) {
   __THREW__ = 0;
   $135 = invoke_ii(67, 24) | 0;
   $136 = __THREW__;
   __THREW__ = 0;
   if ($136 & 1) {
    label = 112;
    break;
   }
   $141 = $139 + 16 | 0;
   $143 = HEAP32[$141 >> 2] | 0;
   $146 = HEAP32[$141 + 4 >> 2] | 0;
   $147 = $135 + 16 | 0;
   HEAP32[$147 >> 2] = $143;
   HEAP32[$147 + 4 >> 2] = $146;
   $151 = $143;
   $$pre$i$i$i$i$i$i$i = HEAP32[$133 >> 2] | 0;
   do if ((HEAP32[$1 >> 2] | 0) == ($133 | 0)) {
    $172 = $133;
    label = 88;
   } else {
    $153 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
    if ($153) {
     $$0$i$i$i$i$i$i$i$i$i33 = $133;
     while (1) {
      $158 = HEAP32[$$0$i$i$i$i$i$i$i$i$i33 + 8 >> 2] | 0;
      if ((HEAP32[$158 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i33 | 0)) $$0$i$i$i$i$i$i$i$i$i33 = $158; else {
       $$cast$i$i$i$i$i$i$i$i$i$lcssa = $158;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $155 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$155) {
       $$0$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i = $155;
     }
     $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $151 >>> 0) {
     $172 = $$01$i$i$i$i$i$i$i$i$i;
     label = 88;
    } else if ($153) {
     $$0$i$i$i$i119$i$i$i = $133;
     $176 = $133;
     label = 98;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 > $151 >>> 0) {
       $165 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i >> 2] | 0;
       if (!$165) {
        $$0$i$i$i$i119$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa115 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 97;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$be = $165;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 >= $151 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 101;
        break;
       }
       $168 = $__nd$0$i20$i$i$i$i$in$i$i$i + 4 | 0;
       $169 = HEAP32[$168 >> 2] | 0;
       if (!$169) {
        $$0$i$i$i$i119$i$i$i$ph = $168;
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa115 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 97;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$be = $169;
      }
      $__nd$0$i20$i$i$i$i$in$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$be;
     }
     if ((label | 0) == 97) {
      label = 0;
      $$0$i$i$i$i119$i$i$i = $$0$i$i$i$i119$i$i$i$ph;
      $176 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa115;
      label = 98;
      break;
     } else if ((label | 0) == 101) {
      label = 0;
      $184 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa;
      label = 102;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 88) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i$i = $133;
     $176 = $133;
     label = 98;
    } else {
     $171 = $172 + 4 | 0;
     $$pre$i$i$i = HEAP32[$171 >> 2] | 0;
     if (!$$pre$i$i$i) {
      $$0$i$i$i$i119$i$i$i = $171;
      $176 = $172;
      label = 98;
     } else {
      $184 = $$pre$i$i$i;
      label = 102;
     }
    }
   }
   if ((label | 0) == 98) {
    label = 0;
    HEAP32[$135 >> 2] = 0;
    HEAP32[$135 + 4 >> 2] = 0;
    HEAP32[$135 + 8 >> 2] = $176;
    HEAP32[$$0$i$i$i$i119$i$i$i >> 2] = $135;
    $178 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
    if (!$178) $181 = $135; else {
     HEAP32[$1 >> 2] = $178;
     $181 = HEAP32[$$0$i$i$i$i119$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$131 >> 2] | 0, $181);
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + 1;
    $187 = $139;
   } else if ((label | 0) == 102) {
    label = 0;
    if (($184 | 0) == ($135 | 0)) $187 = $574; else {
     __ZdlPv($135);
     $187 = $574;
    }
   }
   $188 = HEAP32[$187 + 4 >> 2] | 0;
   if (!$188) {
    $$0$i$i$i$i$i$i34 = $187;
    while (1) {
     $193 = HEAP32[$$0$i$i$i$i$i$i34 + 8 >> 2] | 0;
     if ((HEAP32[$193 >> 2] | 0) == ($$0$i$i$i$i$i$i34 | 0)) {
      $$cast$i$i$i$i$i$i$lcssa = $193;
      break;
     } else $$0$i$i$i$i$i$i34 = $193;
    }
    $$01$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i$i = $188;
    while (1) {
     $190 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
     if (!$190) {
      $$0$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i = $190;
    }
    $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i$i | 0) == ($7 | 0)) {
    label = 113;
    break;
   } else {
    $139 = $$01$i$i$i$i$i$i;
    $574 = $$01$i$i$i$i$i$i;
   }
  }
  if ((label | 0) == 112) {
   $197 = ___cxa_find_matching_catch() | 0;
   $198 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$133 >> 2] | 0);
   $eh$lpad$body45$index8Z2D = $198;
   $eh$lpad$body45$indexZ2D = $197;
   break;
  } else if ((label | 0) == 113) {
   label = 114;
   break;
  }
 } while (0);
 L163 : do if ((label | 0) == 114) {
  $200 = $2 + 4 | 0;
  HEAP32[$200 >> 2] = 0;
  $201 = $2 + 8 | 0;
  HEAP32[$201 >> 2] = 0;
  $202 = $2 + 4 | 0;
  HEAP32[$2 >> 2] = $202;
  $$idx$val$i$i3$i = HEAP32[$4 >> 2] | 0;
  do if (($$idx$val$i$i3$i | 0) == ($77 | 0)) label = 151; else {
   $208 = $$idx$val$i$i3$i;
   $575 = $$idx$val$i$i3$i;
   while (1) {
    __THREW__ = 0;
    $204 = invoke_ii(67, 28) | 0;
    $205 = __THREW__;
    __THREW__ = 0;
    if ($205 & 1) {
     label = 302;
     break;
    }
    $207 = $208 + 16 | 0;
    $209 = $204 + 16 | 0;
    HEAP32[$209 + 0 >> 2] = HEAP32[$207 + 0 >> 2];
    HEAP32[$209 + 4 >> 2] = HEAP32[$207 + 4 >> 2];
    HEAP32[$209 + 8 >> 2] = HEAP32[$207 + 8 >> 2];
    $$pre$i$i$i$i$i$i8$i = HEAP32[$202 >> 2] | 0;
    do if ((HEAP32[$2 >> 2] | 0) == ($202 | 0)) {
     $230 = $202;
     label = 126;
    } else {
     $211 = ($$pre$i$i$i$i$i$i8$i | 0) == 0;
     if ($211) {
      $$0$i$i$i$i$i$i$i$i12$i = $202;
      while (1) {
       $216 = HEAP32[$$0$i$i$i$i$i$i$i$i12$i + 8 >> 2] | 0;
       if ((HEAP32[$216 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12$i | 0)) $$0$i$i$i$i$i$i$i$i12$i = $216; else {
        $$cast$i$i$i$i$i$i$i$i13$i$lcssa = $216;
        break;
       }
      }
      $$01$i$i$i$i$i$i$i$i15$i = $$cast$i$i$i$i$i$i$i$i13$i$lcssa;
     } else {
      $$0$i$i$i$i$i$i$i$i$i10$i = $$pre$i$i$i$i$i$i8$i;
      while (1) {
       $213 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10$i + 4 >> 2] | 0;
       if (!$213) {
        $$0$i$i$i$i$i$i$i$i$i10$i$lcssa = $$0$i$i$i$i$i$i$i$i$i10$i;
        break;
       } else $$0$i$i$i$i$i$i$i$i$i10$i = $213;
      }
      $$01$i$i$i$i$i$i$i$i15$i = $$0$i$i$i$i$i$i$i$i$i10$i$lcssa;
     }
     $__v$idx14$val$i$i$i$i$i$i$i = HEAP32[$209 >> 2] | 0;
     if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
      $230 = $$01$i$i$i$i$i$i$i$i15$i;
      label = 126;
     } else if ($211) {
      $$0$i$i$i$i119$i$i24$i = $202;
      $234 = $202;
      label = 136;
     } else {
      $__nd$0$i20$i$i$i$i$in$i$i19$i = $$pre$i$i$i$i$i$i8$i;
      while (1) {
       $$idx2$val$i22$i$i$i$i$i$i21$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19$i + 16 >> 2] | 0;
       if ($$idx2$val$i22$i$i$i$i$i$i21$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
        $223 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19$i >> 2] | 0;
        if (!$223) {
         $$0$i$i$i$i119$i$i24$i$ph = $__nd$0$i20$i$i$i$i$in$i$i19$i;
         $__nd$0$i20$i$i$i$i$in$i$i19$i$lcssa114 = $__nd$0$i20$i$i$i$i$in$i$i19$i;
         label = 135;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i19$i$be = $223;
       } else {
        if ($$idx2$val$i22$i$i$i$i$i$i21$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
         $__nd$0$i20$i$i$i$i$in$i$i19$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i19$i;
         label = 139;
         break;
        }
        $226 = $__nd$0$i20$i$i$i$i$in$i$i19$i + 4 | 0;
        $227 = HEAP32[$226 >> 2] | 0;
        if (!$227) {
         $$0$i$i$i$i119$i$i24$i$ph = $226;
         $__nd$0$i20$i$i$i$i$in$i$i19$i$lcssa114 = $__nd$0$i20$i$i$i$i$in$i$i19$i;
         label = 135;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i19$i$be = $227;
       }
       $__nd$0$i20$i$i$i$i$in$i$i19$i = $__nd$0$i20$i$i$i$i$in$i$i19$i$be;
      }
      if ((label | 0) == 135) {
       label = 0;
       $$0$i$i$i$i119$i$i24$i = $$0$i$i$i$i119$i$i24$i$ph;
       $234 = $__nd$0$i20$i$i$i$i$in$i$i19$i$lcssa114;
       label = 136;
       break;
      } else if ((label | 0) == 139) {
       label = 0;
       $242 = $__nd$0$i20$i$i$i$i$in$i$i19$i$lcssa;
       label = 140;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 126) {
     label = 0;
     if (!$$pre$i$i$i$i$i$i8$i) {
      $$0$i$i$i$i119$i$i24$i = $202;
      $234 = $202;
      label = 136;
     } else {
      $229 = $230 + 4 | 0;
      $$pre$i$i23$i = HEAP32[$229 >> 2] | 0;
      if (!$$pre$i$i23$i) {
       $$0$i$i$i$i119$i$i24$i = $229;
       $234 = $230;
       label = 136;
      } else {
       $242 = $$pre$i$i23$i;
       label = 140;
      }
     }
    }
    if ((label | 0) == 136) {
     label = 0;
     HEAP32[$204 >> 2] = 0;
     HEAP32[$204 + 4 >> 2] = 0;
     HEAP32[$204 + 8 >> 2] = $234;
     HEAP32[$$0$i$i$i$i119$i$i24$i >> 2] = $204;
     $236 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
     if (!$236) $239 = $204; else {
      HEAP32[$2 >> 2] = $236;
      $239 = HEAP32[$$0$i$i$i$i119$i$i24$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$200 >> 2] | 0, $239);
     HEAP32[$201 >> 2] = (HEAP32[$201 >> 2] | 0) + 1;
     $245 = $208;
    } else if ((label | 0) == 140) {
     label = 0;
     if (($242 | 0) == ($204 | 0)) $245 = $575; else {
      __ZdlPv($204);
      $245 = $575;
     }
    }
    $246 = HEAP32[$245 + 4 >> 2] | 0;
    if (!$246) {
     $$0$i$i$i$i$i29$i = $245;
     while (1) {
      $251 = HEAP32[$$0$i$i$i$i$i29$i + 8 >> 2] | 0;
      if ((HEAP32[$251 >> 2] | 0) == ($$0$i$i$i$i$i29$i | 0)) {
       $$cast$i$i$i$i$i30$i$lcssa = $251;
       break;
      } else $$0$i$i$i$i$i29$i = $251;
     }
     $$01$i$i$i$i$i32$i = $$cast$i$i$i$i$i30$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i27$i = $246;
     while (1) {
      $248 = HEAP32[$$0$i$i$i$i$i$i27$i >> 2] | 0;
      if (!$248) {
       $$0$i$i$i$i$i$i27$i$lcssa = $$0$i$i$i$i$i$i27$i;
       break;
      } else $$0$i$i$i$i$i$i27$i = $248;
     }
     $$01$i$i$i$i$i32$i = $$0$i$i$i$i$i$i27$i$lcssa;
    }
    if (($$01$i$i$i$i$i32$i | 0) == ($77 | 0)) {
     label = 150;
     break;
    } else {
     $208 = $$01$i$i$i$i$i32$i;
     $575 = $$01$i$i$i$i$i32$i;
    }
   }
   if ((label | 0) == 150) {
    label = 151;
    break;
   } else if ((label | 0) == 302) {
    $555 = ___cxa_find_matching_catch() | 0;
    $556 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$202 >> 2] | 0);
    $$0$i = $556;
    $$01$i = $555;
    break;
   }
  } while (0);
  if ((label | 0) == 151) {
   __THREW__ = 0;
   $255 = invoke_ii(67, 32) | 0;
   $256 = __THREW__;
   __THREW__ = 0;
   L220 : do if ($256 & 1) label = 303; else {
    $258 = $0 + 4 | 0;
    HEAP32[$258 >> 2] = 0;
    $259 = $0 + 8 | 0;
    HEAP32[$259 >> 2] = 0;
    $260 = $0 + 4 | 0;
    HEAP32[$0 >> 2] = $260;
    $$idx$val$i$i$i$i = HEAP32[$2 >> 2] | 0;
    do if (($$idx$val$i$i$i$i | 0) == ($202 | 0)) label = 189; else {
     $266 = $$idx$val$i$i$i$i;
     $576 = $$idx$val$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $262 = invoke_ii(67, 28) | 0;
      $263 = __THREW__;
      __THREW__ = 0;
      if ($263 & 1) {
       label = 281;
       break;
      }
      $265 = $266 + 16 | 0;
      $267 = $262 + 16 | 0;
      HEAP32[$267 + 0 >> 2] = HEAP32[$265 + 0 >> 2];
      HEAP32[$267 + 4 >> 2] = HEAP32[$265 + 4 >> 2];
      HEAP32[$267 + 8 >> 2] = HEAP32[$265 + 8 >> 2];
      $$pre$i$i$i$i$i$i$i$i = HEAP32[$260 >> 2] | 0;
      do if ((HEAP32[$0 >> 2] | 0) == ($260 | 0)) {
       $288 = $260;
       label = 164;
      } else {
       $269 = ($$pre$i$i$i$i$i$i$i$i | 0) == 0;
       if ($269) {
        $$0$i$i$i$i$i$i$i$i$i33$i = $260;
        while (1) {
         $274 = HEAP32[$$0$i$i$i$i$i$i$i$i$i33$i + 8 >> 2] | 0;
         if ((HEAP32[$274 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i33$i | 0)) $$0$i$i$i$i$i$i$i$i$i33$i = $274; else {
          $$cast$i$i$i$i$i$i$i$i$i$i$lcssa = $274;
          break;
         }
        }
        $$01$i$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $271 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$271) {
          $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i = $271;
        }
        $$01$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa;
       }
       $__v$idx14$val$i$i$i$i$i$i$i$i = HEAP32[$267 >> 2] | 0;
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
        $288 = $$01$i$i$i$i$i$i$i$i$i$i;
        label = 164;
       } else if ($269) {
        $$0$i$i$i$i119$i$i$i$i = $260;
        $292 = $260;
        label = 174;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
          $281 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i >> 2] | 0;
          if (!$281) {
           $$0$i$i$i$i119$i$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa113 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 173;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = $281;
         } else {
          if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 177;
           break;
          }
          $284 = $__nd$0$i20$i$i$i$i$in$i$i$i$i + 4 | 0;
          $285 = HEAP32[$284 >> 2] | 0;
          if (!$285) {
           $$0$i$i$i$i119$i$i$i$i$ph = $284;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa113 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 173;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = $285;
         }
         $__nd$0$i20$i$i$i$i$in$i$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$i$be;
        }
        if ((label | 0) == 173) {
         label = 0;
         $$0$i$i$i$i119$i$i$i$i = $$0$i$i$i$i119$i$i$i$i$ph;
         $292 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa113;
         label = 174;
         break;
        } else if ((label | 0) == 177) {
         label = 0;
         $300 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa;
         label = 178;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 164) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i) {
        $$0$i$i$i$i119$i$i$i$i = $260;
        $292 = $260;
        label = 174;
       } else {
        $287 = $288 + 4 | 0;
        $$pre$i$i$i$i = HEAP32[$287 >> 2] | 0;
        if (!$$pre$i$i$i$i) {
         $$0$i$i$i$i119$i$i$i$i = $287;
         $292 = $288;
         label = 174;
        } else {
         $300 = $$pre$i$i$i$i;
         label = 178;
        }
       }
      }
      if ((label | 0) == 174) {
       label = 0;
       HEAP32[$262 >> 2] = 0;
       HEAP32[$262 + 4 >> 2] = 0;
       HEAP32[$262 + 8 >> 2] = $292;
       HEAP32[$$0$i$i$i$i119$i$i$i$i >> 2] = $262;
       $294 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
       if (!$294) $297 = $262; else {
        HEAP32[$0 >> 2] = $294;
        $297 = HEAP32[$$0$i$i$i$i119$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$258 >> 2] | 0, $297);
       HEAP32[$259 >> 2] = (HEAP32[$259 >> 2] | 0) + 1;
       $303 = $266;
      } else if ((label | 0) == 178) {
       label = 0;
       if (($300 | 0) == ($262 | 0)) $303 = $576; else {
        __ZdlPv($262);
        $303 = $576;
       }
      }
      $304 = HEAP32[$303 + 4 >> 2] | 0;
      if (!$304) {
       $$0$i$i$i$i$i$i34$i = $303;
       while (1) {
        $309 = HEAP32[$$0$i$i$i$i$i$i34$i + 8 >> 2] | 0;
        if ((HEAP32[$309 >> 2] | 0) == ($$0$i$i$i$i$i$i34$i | 0)) {
         $$cast$i$i$i$i$i$i$i$lcssa = $309;
         break;
        } else $$0$i$i$i$i$i$i34$i = $309;
       }
       $$01$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i$i$i$i$i36 = $304;
       while (1) {
        $306 = HEAP32[$$0$i$i$i$i$i$i$i$i36 >> 2] | 0;
        if (!$306) {
         $$0$i$i$i$i$i$i$i$i36$lcssa = $$0$i$i$i$i$i$i$i$i36;
         break;
        } else $$0$i$i$i$i$i$i$i$i36 = $306;
       }
       $$01$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i36$lcssa;
      }
      if (($$01$i$i$i$i$i$i$i | 0) == ($202 | 0)) {
       label = 188;
       break;
      } else {
       $266 = $$01$i$i$i$i$i$i$i;
       $576 = $$01$i$i$i$i$i$i$i;
      }
     }
     if ((label | 0) == 188) {
      label = 189;
      break;
     } else if ((label | 0) == 281) {
      $487 = ___cxa_find_matching_catch() | 0;
      $488 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$260 >> 2] | 0);
      $$0$i$i = $488;
      $$01$i$i = $487;
      break;
     }
    } while (0);
    if ((label | 0) == 189) {
     HEAP32[$255 >> 2] = 39816;
     $313 = $255 + 8 | 0;
     $314 = $255 + 12 | 0;
     HEAP32[$314 >> 2] = 0;
     $315 = $255 + 16 | 0;
     HEAP32[$315 >> 2] = 0;
     HEAP32[$313 >> 2] = $314;
     $$idx$val$i$i$i$i$i = HEAP32[$1 >> 2] | 0;
     do if (($$idx$val$i$i$i$i$i | 0) == ($133 | 0)) label = 226; else {
      $321 = $$idx$val$i$i$i$i$i;
      $577 = $$idx$val$i$i$i$i$i;
      while (1) {
       __THREW__ = 0;
       $317 = invoke_ii(67, 24) | 0;
       $318 = __THREW__;
       __THREW__ = 0;
       if ($318 & 1) {
        label = 262;
        break;
       }
       $323 = $321 + 16 | 0;
       $325 = HEAP32[$323 >> 2] | 0;
       $328 = HEAP32[$323 + 4 >> 2] | 0;
       $329 = $317 + 16 | 0;
       HEAP32[$329 >> 2] = $325;
       HEAP32[$329 + 4 >> 2] = $328;
       $333 = $325;
       $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$314 >> 2] | 0;
       do if ((HEAP32[$313 >> 2] | 0) == ($314 | 0)) {
        $354 = $314;
        label = 201;
       } else {
        $335 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
        if ($335) {
         $$0$i$i$i$i$i$i$i$i$i3$i$i = $314;
         while (1) {
          $340 = HEAP32[$$0$i$i$i$i$i$i$i$i$i3$i$i + 8 >> 2] | 0;
          if ((HEAP32[$340 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i3$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i3$i$i = $340; else {
           $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = $340;
           break;
          }
         }
         $$01$i$i$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa;
        } else {
         $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
         while (1) {
          $337 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
          if (!$337) {
           $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $337;
         }
         $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa;
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $333 >>> 0) {
         $354 = $$01$i$i$i$i$i$i$i$i$i$i$i;
         label = 201;
        } else if ($335) {
         $$0$i$i$i$i119$i$i$i$i$i = $314;
         $358 = $314;
         label = 211;
        } else {
         $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 > $333 >>> 0) {
           $347 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i >> 2] | 0;
           if (!$347) {
            $$0$i$i$i$i119$i$i$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
            $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa112 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
            label = 210;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $347;
          } else {
           if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 >= $333 >>> 0) {
            $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
            label = 214;
            break;
           }
           $350 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 4 | 0;
           $351 = HEAP32[$350 >> 2] | 0;
           if (!$351) {
            $$0$i$i$i$i119$i$i$i$i$i$ph = $350;
            $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa112 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
            label = 210;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $351;
          }
          $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be;
         }
         if ((label | 0) == 210) {
          label = 0;
          $$0$i$i$i$i119$i$i$i$i$i = $$0$i$i$i$i119$i$i$i$i$i$ph;
          $358 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa112;
          label = 211;
          break;
         } else if ((label | 0) == 214) {
          label = 0;
          $366 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa;
          label = 215;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 201) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i$i$i$i) {
         $$0$i$i$i$i119$i$i$i$i$i = $314;
         $358 = $314;
         label = 211;
        } else {
         $353 = $354 + 4 | 0;
         $$pre$i$i$i$i$i = HEAP32[$353 >> 2] | 0;
         if (!$$pre$i$i$i$i$i) {
          $$0$i$i$i$i119$i$i$i$i$i = $353;
          $358 = $354;
          label = 211;
         } else {
          $366 = $$pre$i$i$i$i$i;
          label = 215;
         }
        }
       }
       if ((label | 0) == 211) {
        label = 0;
        HEAP32[$317 >> 2] = 0;
        HEAP32[$317 + 4 >> 2] = 0;
        HEAP32[$317 + 8 >> 2] = $358;
        HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] = $317;
        $360 = HEAP32[HEAP32[$313 >> 2] >> 2] | 0;
        if (!$360) $363 = $317; else {
         HEAP32[$313 >> 2] = $360;
         $363 = HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$314 >> 2] | 0, $363);
        HEAP32[$315 >> 2] = (HEAP32[$315 >> 2] | 0) + 1;
        $369 = $321;
       } else if ((label | 0) == 215) {
        label = 0;
        if (($366 | 0) == ($317 | 0)) $369 = $577; else {
         __ZdlPv($317);
         $369 = $577;
        }
       }
       $370 = HEAP32[$369 + 4 >> 2] | 0;
       if (!$370) {
        $$0$i$i$i$i$i$i4$i$i = $369;
        while (1) {
         $375 = HEAP32[$$0$i$i$i$i$i$i4$i$i + 8 >> 2] | 0;
         if ((HEAP32[$375 >> 2] | 0) == ($$0$i$i$i$i$i$i4$i$i | 0)) {
          $$cast$i$i$i$i$i$i$i$i38$lcssa = $375;
          break;
         } else $$0$i$i$i$i$i$i4$i$i = $375;
        }
        $$01$i$i$i$i$i$i$i$i40 = $$cast$i$i$i$i$i$i$i$i38$lcssa;
       } else {
        $$0$i$i$i$i$i$i$i$i35$i = $370;
        while (1) {
         $372 = HEAP32[$$0$i$i$i$i$i$i$i$i35$i >> 2] | 0;
         if (!$372) {
          $$0$i$i$i$i$i$i$i$i35$i$lcssa = $$0$i$i$i$i$i$i$i$i35$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i35$i = $372;
        }
        $$01$i$i$i$i$i$i$i$i40 = $$0$i$i$i$i$i$i$i$i35$i$lcssa;
       }
       if (($$01$i$i$i$i$i$i$i$i40 | 0) == ($133 | 0)) {
        label = 225;
        break;
       } else {
        $321 = $$01$i$i$i$i$i$i$i$i40;
        $577 = $$01$i$i$i$i$i$i$i$i40;
       }
      }
      if ((label | 0) == 225) {
       label = 226;
       break;
      } else if ((label | 0) == 262) {
       $434 = ___cxa_find_matching_catch() | 0;
       $435 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($313, HEAP32[$314 >> 2] | 0);
       $$0$i$i$i = $435;
       $$01$i$i$i = $434;
       break;
      }
     } while (0);
     L330 : do if ((label | 0) == 226) {
      $379 = $255 + 20 | 0;
      $380 = $255 + 24 | 0;
      HEAP32[$380 >> 2] = 0;
      $381 = $255 + 28 | 0;
      HEAP32[$381 >> 2] = 0;
      HEAP32[$379 >> 2] = $380;
      $$idx$val$i$i3$i$i$i = HEAP32[$0 >> 2] | 0;
      do if (($$idx$val$i$i3$i$i$i | 0) != ($260 | 0)) {
       $387 = $$idx$val$i$i3$i$i$i;
       $578 = $$idx$val$i$i3$i$i$i;
       while (1) {
        __THREW__ = 0;
        $383 = invoke_ii(67, 28) | 0;
        $384 = __THREW__;
        __THREW__ = 0;
        if ($384 & 1) {
         label = 263;
         break;
        }
        $386 = $387 + 16 | 0;
        $388 = $383 + 16 | 0;
        HEAP32[$388 + 0 >> 2] = HEAP32[$386 + 0 >> 2];
        HEAP32[$388 + 4 >> 2] = HEAP32[$386 + 4 >> 2];
        HEAP32[$388 + 8 >> 2] = HEAP32[$386 + 8 >> 2];
        $$pre$i$i$i$i$i$i8$i$i$i = HEAP32[$380 >> 2] | 0;
        do if ((HEAP32[$379 >> 2] | 0) == ($380 | 0)) {
         $409 = $380;
         label = 238;
        } else {
         $390 = ($$pre$i$i$i$i$i$i8$i$i$i | 0) == 0;
         if ($390) {
          $$0$i$i$i$i$i$i$i$i12$i$i$i = $380;
          while (1) {
           $395 = HEAP32[$$0$i$i$i$i$i$i$i$i12$i$i$i + 8 >> 2] | 0;
           if ((HEAP32[$395 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i12$i$i$i = $395; else {
            $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = $395;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i15$i$i$i = $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
          while (1) {
           $392 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10$i$i$i + 4 >> 2] | 0;
           if (!$392) {
            $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i10$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $392;
          }
          $$01$i$i$i$i$i$i$i$i15$i$i$i = $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa;
         }
         $__v$idx14$val$i$i$i$i$i$i$i$i$i = HEAP32[$388 >> 2] | 0;
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
          $409 = $$01$i$i$i$i$i$i$i$i15$i$i$i;
          label = 238;
         } else {
          if ($390) {
           $$0$i$i$i$i119$i$i24$i$i$i = $380;
           $413 = $380;
           label = 248;
           break;
          }
          $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i21$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19$i$i$i + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i21$i$i$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
            $402 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19$i$i$i >> 2] | 0;
            if (!$402) {
             $$0$i$i$i$i119$i$i24$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
             $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa111 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
             label = 247;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be = $402;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i21$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
             label = 251;
             break;
            }
            $405 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i + 4 | 0;
            $406 = HEAP32[$405 >> 2] | 0;
            if (!$406) {
             $$0$i$i$i$i119$i$i24$i$i$i$ph = $405;
             $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa111 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
             label = 247;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be = $406;
           }
           $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be;
          }
          if ((label | 0) == 247) {
           label = 0;
           $$0$i$i$i$i119$i$i24$i$i$i = $$0$i$i$i$i119$i$i24$i$i$i$ph;
           $413 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa111;
           label = 248;
           break;
          } else if ((label | 0) == 251) {
           label = 0;
           $421 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa;
           label = 252;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 238) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i8$i$i$i) {
          $$0$i$i$i$i119$i$i24$i$i$i = $380;
          $413 = $380;
          label = 248;
         } else {
          $408 = $409 + 4 | 0;
          $$pre$i$i23$i$i$i = HEAP32[$408 >> 2] | 0;
          if (!$$pre$i$i23$i$i$i) {
           $$0$i$i$i$i119$i$i24$i$i$i = $408;
           $413 = $409;
           label = 248;
          } else {
           $421 = $$pre$i$i23$i$i$i;
           label = 252;
          }
         }
        }
        if ((label | 0) == 248) {
         label = 0;
         HEAP32[$383 >> 2] = 0;
         HEAP32[$383 + 4 >> 2] = 0;
         HEAP32[$383 + 8 >> 2] = $413;
         HEAP32[$$0$i$i$i$i119$i$i24$i$i$i >> 2] = $383;
         $415 = HEAP32[HEAP32[$379 >> 2] >> 2] | 0;
         if (!$415) $418 = $383; else {
          HEAP32[$379 >> 2] = $415;
          $418 = HEAP32[$$0$i$i$i$i119$i$i24$i$i$i >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$380 >> 2] | 0, $418);
         HEAP32[$381 >> 2] = (HEAP32[$381 >> 2] | 0) + 1;
         $424 = $387;
        } else if ((label | 0) == 252) {
         label = 0;
         if (($421 | 0) == ($383 | 0)) $424 = $578; else {
          __ZdlPv($383);
          $424 = $578;
         }
        }
        $425 = HEAP32[$424 + 4 >> 2] | 0;
        if (!$425) {
         $$0$i$i$i$i$i29$i$i$i = $424;
         while (1) {
          $430 = HEAP32[$$0$i$i$i$i$i29$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$430 >> 2] | 0) == ($$0$i$i$i$i$i29$i$i$i | 0)) {
           $$cast$i$i$i$i$i30$i$i$i$lcssa = $430;
           break;
          } else $$0$i$i$i$i$i29$i$i$i = $430;
         }
         $$01$i$i$i$i$i32$i$i$i = $$cast$i$i$i$i$i30$i$i$i$lcssa;
        } else {
         $$0$i$i$i$i$i$i27$i$i$i = $425;
         while (1) {
          $427 = HEAP32[$$0$i$i$i$i$i$i27$i$i$i >> 2] | 0;
          if (!$427) {
           $$0$i$i$i$i$i$i27$i$i$i$lcssa = $$0$i$i$i$i$i$i27$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i27$i$i$i = $427;
         }
         $$01$i$i$i$i$i32$i$i$i = $$0$i$i$i$i$i$i27$i$i$i$lcssa;
        }
        if (($$01$i$i$i$i$i32$i$i$i | 0) == ($260 | 0)) {
         label = 264;
         break;
        } else {
         $387 = $$01$i$i$i$i$i32$i$i$i;
         $578 = $$01$i$i$i$i$i32$i$i$i;
        }
       }
       if ((label | 0) == 263) {
        $437 = ___cxa_find_matching_catch() | 0;
        $438 = tempRet0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($379, HEAP32[$380 >> 2] | 0);
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($313, HEAP32[$314 >> 2] | 0);
        $$0$i$i$i = $438;
        $$01$i$i$i = $437;
        break L330;
       } else if ((label | 0) == 264) break;
      } while (0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$260 >> 2] | 0);
      $442 = $this + 20 | 0;
      $443 = $this + 24 | 0;
      $444 = HEAP32[$443 >> 2] | 0;
      $445 = $this + 28 | 0;
      $446 = HEAP32[$445 >> 2] | 0;
      if ($444 >>> 0 < $446 >>> 0) {
       if (!$444) $450 = 0; else {
        HEAP32[$444 >> 2] = $255;
        $450 = HEAP32[$443 >> 2] | 0;
       }
       $449 = $450 + 4 | 0;
       HEAP32[$443 >> 2] = $449;
       $$idx$pre$phi$i$iZZ2D = $442;
       $$idx2$val$i$i = $449;
      } else {
       $this$idx2$val$i$i$i$i = HEAP32[$442 >> 2] | 0;
       $455 = ($444 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
       if ($455 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(179, $442 | 0);
        $457 = __THREW__;
        __THREW__ = 0;
        if ($457 & 1) {
         label = 303;
         break L220;
        }
        $$idx1$val$i$i$i$i$i$i = HEAP32[$445 >> 2] | 0;
        $460 = HEAP32[$442 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i$i$i = $446;
        $460 = $this$idx2$val$i$i$i$i;
       }
       $461 = $460;
       $462 = $$idx1$val$i$i$i$i$i$i - $461 | 0;
       if ($462 >> 2 >>> 0 < 536870911) {
        $468 = $462 >> 1;
        $470 = $468 >>> 0 < $455 >>> 0 ? $455 : $468;
        $472 = (HEAP32[$443 >> 2] | 0) - $461 | 0;
        $473 = $472 >> 2;
        if (!$470) {
         $$0$i8$i$i$i$i = 0;
         $480 = 0;
         $481 = $473;
         $485 = $472;
        } else {
         $$0$i7$i$i$i$i = $470;
         $579 = $473;
         $580 = $472;
         label = 275;
        }
       } else {
        $466 = (HEAP32[$443 >> 2] | 0) - $461 | 0;
        $$0$i7$i$i$i$i = 1073741823;
        $579 = $466 >> 2;
        $580 = $466;
        label = 275;
       }
       if ((label | 0) == 275) {
        __THREW__ = 0;
        $476 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
        $477 = __THREW__;
        __THREW__ = 0;
        if ($477 & 1) {
         label = 303;
         break L220;
        }
        $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
        $480 = $476;
        $481 = $579;
        $485 = $580;
       }
       $479 = $480 + ($481 << 2) | 0;
       if ($479) HEAP32[$479 >> 2] = $255;
       $484 = $480 + ($481 + 1 << 2) | 0;
       _memcpy($480 | 0, $460 | 0, $485 | 0) | 0;
       HEAP32[$442 >> 2] = $480;
       HEAP32[$443 >> 2] = $484;
       HEAP32[$445 >> 2] = $480 + ($$0$i8$i$i$i$i << 2);
       if (!$460) {
        $$idx$pre$phi$i$iZZ2D = $442;
        $$idx2$val$i$i = $484;
       } else {
        __ZdlPv($460);
        $$idx$pre$phi$i$iZZ2D = $442;
        $$idx2$val$i$i = HEAP32[$443 >> 2] | 0;
       }
      }
      $491 = $this + 16 | 0;
      HEAP8[$255 + 4 >> 0] = HEAP8[$491 >> 0] | 0;
      $498 = $this + 48 | 0;
      HEAP32[$498 >> 2] = $$idx2$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$202 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$133 >> 2] | 0);
      $501 = HEAP32[$498 >> 2] | 0;
      if ($501 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
       $562 = $agg$result + 8 | 0;
       HEAP32[$562 >> 2] = $255;
       $563 = HEAP32[$77 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $563);
       $564 = HEAP32[$7 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $564);
       STACKTOP = sp;
       return;
      }
      $507 = $this + 44 | 0;
      if (!(+($501 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$507 >> 2] | 0) >>> 0))) {
       $562 = $agg$result + 8 | 0;
       HEAP32[$562 >> 2] = $255;
       $563 = HEAP32[$77 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $563);
       $564 = HEAP32[$7 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $564);
       STACKTOP = sp;
       return;
      }
      __THREW__ = 0;
      invoke_vii(63, $this | 0, $255 | 0);
      $512 = __THREW__;
      __THREW__ = 0;
      do if (!($512 & 1)) {
       __THREW__ = 0;
       invoke_vii(64, $this + 72 | 0, $this | 0);
       $515 = __THREW__;
       __THREW__ = 0;
       if (!($515 & 1)) {
        if (HEAP32[$this + 56 >> 2] & 16) {
         __THREW__ = 0;
         invoke_vii(63, $this | 0, HEAP32[$this + 64 >> 2] | 0);
         $523 = __THREW__;
         __THREW__ = 0;
         if ($523 & 1) break;
        }
        $526 = (HEAP8[$491 >> 0] | 0) + 1 << 24 >> 24;
        HEAP8[$491 >> 0] = $526;
        $$idx6$i$i = $this + 20 | 0;
        $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
        $$idx7$val12$i$i = HEAP32[$443 >> 2] | 0;
        if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
         $$idx6$val14$i$i = $$idx6$val11$i$i;
         $$idx7$val18$i$i = $$idx7$val12$i$i;
         $533 = $526;
         $i$013$i$i = 0;
         while (1) {
          $529 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
          if ((HEAP8[$529 + 4 >> 0] | 0) == $533 << 24 >> 24) {
           $$idx6$val$i$i = $$idx6$val14$i$i;
           $$idx7$val$i$i = $$idx7$val18$i$i;
           $i$1$i$i = $i$013$i$i;
          } else {
           if (!$529) {
            $$idx4$val$i$i = $$idx6$val14$i$i;
            $$idx5$val$i$i = $$idx7$val18$i$i;
           } else {
            FUNCTION_TABLE_vi[HEAP32[(HEAP32[$529 >> 2] | 0) + 4 >> 2] & 255]($529);
            $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
            $$idx5$val$i$i = HEAP32[$443 >> 2] | 0;
           }
           $542 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
           if (($i$013$i$i | 0) == ($542 | 0)) {
            $$idx6$val$pre$i$i = $$idx4$val$i$i;
            $547 = $$idx5$val$i$i;
           } else {
            HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($542 << 2) >> 2];
            $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
            $547 = HEAP32[$443 >> 2] | 0;
           }
           $scevgep4$i$i$i$i$i = $547 + -4 | 0;
           HEAP32[$443 >> 2] = $scevgep4$i$i$i$i$i;
           $$idx6$val$i$i = $$idx6$val$pre$i$i;
           $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
           $i$1$i$i = $i$013$i$i + -1 | 0;
          }
          $549 = $i$1$i$i + 1 | 0;
          $553 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
          if ($549 >>> 0 >= $553 >>> 0) {
           $$lcssa = $553;
           break;
          }
          $$idx6$val14$i$i = $$idx6$val$i$i;
          $$idx7$val18$i$i = $$idx7$val$i$i;
          $533 = HEAP8[$491 >> 0] | 0;
          $i$013$i$i = $549;
         }
         $$lcssa$i$i = $$lcssa;
        }
        HEAP32[$498 >> 2] = $$lcssa$i$i;
        HEAP32[$507 >> 2] = $$lcssa$i$i;
        $562 = $agg$result + 8 | 0;
        HEAP32[$562 >> 2] = $255;
        $563 = HEAP32[$77 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $563);
        $564 = HEAP32[$7 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $564);
        STACKTOP = sp;
        return;
       }
      } while (0);
      $568 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body45$index8Z2D = tempRet0;
      $eh$lpad$body45$indexZ2D = $568;
      break L163;
     } while (0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$260 >> 2] | 0);
     $$0$i$i = $$0$i$i$i;
     $$01$i$i = $$01$i$i$i;
    }
    __ZdlPv($255);
    $eh$lpad$body40$i$index2Z2D = $$0$i$i;
    $eh$lpad$body40$i$indexZ2D = $$01$i$i;
   } while (0);
   if ((label | 0) == 303) {
    $558 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body40$i$index2Z2D = tempRet0;
    $eh$lpad$body40$i$indexZ2D = $558;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$202 >> 2] | 0);
   $$0$i = $eh$lpad$body40$i$index2Z2D;
   $$01$i = $eh$lpad$body40$i$indexZ2D;
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$133 >> 2] | 0);
  $eh$lpad$body45$index8Z2D = $$0$i;
  $eh$lpad$body45$indexZ2D = $$01$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, HEAP32[$77 >> 2] | 0);
 $$0 = $eh$lpad$body45$index8Z2D;
 $$01 = $eh$lpad$body45$indexZ2D;
 $571 = HEAP32[$7 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $571);
 ___resumeException($$01 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_($agg$result, $this, $args, $args1, $args2, $args3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10 = 0, $$0$i$i$i$i$i$i$i$i$i10$i = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i41 = 0, $$0$i$i$i$i$i$i$i$i12 = 0, $$0$i$i$i$i$i$i$i$i12$i = 0, $$0$i$i$i$i$i$i$i$i12$i$i$i = 0, $$0$i$i$i$i$i$i$i$i41$i = 0, $$0$i$i$i$i$i$i$i$i41$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i45 = 0, $$0$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i33 = 0, $$0$i$i$i$i$i$i33$i = 0, $$0$i$i$i$i$i$i33$i$i$i = 0, $$0$i$i$i$i$i$i33$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i33$i$lcssa = 0, $$0$i$i$i$i$i$i33$lcssa = 0, $$0$i$i$i$i$i$i42 = 0, $$0$i$i$i$i$i35 = 0, $$0$i$i$i$i$i35$i = 0, $$0$i$i$i$i$i35$i$i$i = 0, $$0$i$i$i$i119$i$i = 0, $$0$i$i$i$i119$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i$ph = 0, $$0$i$i$i$i119$i$i$i$ph = 0, $$0$i$i$i$i119$i$i$ph = 0, $$0$i$i$i$i119$i$i26 = 0, $$0$i$i$i$i119$i$i26$i = 0, $$0$i$i$i$i119$i$i26$i$i$i = 0, $$0$i$i$i$i119$i$i26$i$i$i$ph = 0, $$0$i$i$i$i119$i$i26$i$ph = 0, $$0$i$i$i$i119$i$i26$ph = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i15 = 0, $$01$i$i$i$i$i$i$i$i15$i = 0, $$01$i$i$i$i$i$i$i$i15$i$i$i = 0, $$01$i$i$i$i$i$i$i$i48 = 0, $$01$i$i$i$i$i38 = 0, $$01$i$i$i$i$i38$i = 0, $$01$i$i$i$i$i38$i$i$i = 0, $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$lcssa = 0, $$cast$i$i$i$i$i$i$i$i46$lcssa = 0, $$cast$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i36$i$i$i$lcssa = 0, $$cast$i$i$i$i$i36$i$lcssa = 0, $$cast$i$i$i$i$i36$lcssa = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i3 = 0, $$idx$val$i$i3$i = 0, $$idx$val$i$i3$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i22 = 0, $$idx2$val$i22$i$i$i$i$i$i22$i = 0, $$idx2$val$i22$i$i$i$i$i$i22$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i8 = 0, $$pre$i$i$i$i$i$i8$i = 0, $$pre$i$i$i$i$i$i8$i$i$i = 0, $$pre$i$i24 = 0, $$pre$i$i24$i = 0, $$pre$i$i24$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $109 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $120 = 0, $122 = 0, $125 = 0, $128 = 0, $13 = 0, $131 = 0, $132 = 0, $134 = 0, $137 = 0, $141 = 0, $142 = 0, $143 = 0, $145 = 0, $146 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $156 = 0, $157 = 0, $161 = 0, $163 = 0, $165 = 0, $168 = 0, $17 = 0, $175 = 0, $178 = 0, $179 = 0, $181 = 0, $182 = 0, $186 = 0, $188 = 0, $191 = 0, $194 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $203 = 0, $207 = 0, $208 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $214 = 0, $215 = 0, $218 = 0, $220 = 0, $222 = 0, $225 = 0, $226 = 0, $230 = 0, $232 = 0, $234 = 0, $237 = 0, $244 = 0, $247 = 0, $248 = 0, $25 = 0, $250 = 0, $251 = 0, $255 = 0, $257 = 0, $260 = 0, $263 = 0, $266 = 0, $267 = 0, $269 = 0, $27 = 0, $272 = 0, $276 = 0, $277 = 0, $279 = 0, $280 = 0, $281 = 0, $283 = 0, $284 = 0, $287 = 0, $289 = 0, $29 = 0, $291 = 0, $294 = 0, $295 = 0, $299 = 0, $3 = 0, $301 = 0, $303 = 0, $306 = 0, $313 = 0, $316 = 0, $317 = 0, $319 = 0, $32 = 0, $320 = 0, $324 = 0, $326 = 0, $329 = 0, $332 = 0, $335 = 0, $336 = 0, $338 = 0, $341 = 0, $347 = 0, $348 = 0, $349 = 0, $351 = 0, $352 = 0, $355 = 0, $357 = 0, $359 = 0, $362 = 0, $363 = 0, $367 = 0, $369 = 0, $371 = 0, $374 = 0, $381 = 0, $384 = 0, $385 = 0, $387 = 0, $388 = 0, $39 = 0, $392 = 0, $394 = 0, $397 = 0, $4 = 0, $400 = 0, $403 = 0, $404 = 0, $406 = 0, $409 = 0, $413 = 0, $414 = 0, $416 = 0, $417 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $427 = 0, $428 = 0, $43 = 0, $433 = 0, $435 = 0, $438 = 0, $439 = 0, $440 = 0, $444 = 0, $446 = 0, $448 = 0, $45 = 0, $450 = 0, $451 = 0, $454 = 0, $455 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $462 = 0, $463 = 0, $465 = 0, $472 = 0, $475 = 0, $481 = 0, $486 = 0, $489 = 0, $497 = 0, $5 = 0, $50 = 0, $500 = 0, $503 = 0, $507 = 0, $516 = 0, $52 = 0, $521 = 0, $523 = 0, $527 = 0, $529 = 0, $530 = 0, $532 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $540 = 0, $542 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $67 = 0, $7 = 0, $71 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $80 = 0, $83 = 0, $85 = 0, $87 = 0, $9 = 0, $90 = 0, $91 = 0, $95 = 0, $97 = 0, $99 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa111 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa113 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa115 = 0, $__nd$0$i20$i$i$i$i$in$i$i20 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$be = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa110 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa112 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i20$lcssa114 = 0, $eh$lpad$body46$i$index2Z2D = 0, $eh$lpad$body46$i$indexZ2D = 0, $eh$lpad$body53$index8Z2D = 0, $eh$lpad$body53$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 36 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 HEAP32[$agg$result >> 2] = 18;
 $4 = $2 + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $2 + 8 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $2 + 4 | 0;
 HEAP32[$2 >> 2] = $6;
 $$idx$val$i$i = HEAP32[$args >> 2] | 0;
 $7 = $args + 4 | 0;
 do if (($$idx$val$i$i | 0) != ($7 | 0)) {
  $13 = $$idx$val$i$i;
  $546 = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $9 = invoke_ii(67, 24) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if ($10 & 1) {
    label = 37;
    break;
   }
   $15 = $13 + 16 | 0;
   $17 = HEAP32[$15 >> 2] | 0;
   $20 = HEAP32[$15 + 4 >> 2] | 0;
   $21 = $9 + 16 | 0;
   HEAP32[$21 >> 2] = $17;
   HEAP32[$21 + 4 >> 2] = $20;
   $25 = $17;
   $$pre$i$i$i$i$i$i = HEAP32[$6 >> 2] | 0;
   do if ((HEAP32[$2 >> 2] | 0) == ($6 | 0)) {
    $46 = $6;
    label = 13;
   } else {
    $27 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($27) {
     $$0$i$i$i$i$i$i$i$i = $6;
     while (1) {
      $32 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$32 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $32; else {
       $$cast$i$i$i$i$i$i$i$i$lcssa = $32;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $29 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$29) {
       $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $29;
     }
     $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $25 >>> 0) {
     $46 = $$01$i$i$i$i$i$i$i$i;
     label = 13;
    } else if ($27) {
     $$0$i$i$i$i119$i$i = $6;
     $50 = $6;
     label = 23;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $25 >>> 0) {
       $39 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$39) {
        $$0$i$i$i$i119$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa115 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $39;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $25 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 26;
        break;
       }
       $42 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
       $43 = HEAP32[$42 >> 2] | 0;
       if (!$43) {
        $$0$i$i$i$i119$i$i$ph = $42;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa115 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $43;
      }
      $__nd$0$i20$i$i$i$i$in$i$i = $__nd$0$i20$i$i$i$i$in$i$i$be;
     }
     if ((label | 0) == 22) {
      label = 0;
      $$0$i$i$i$i119$i$i = $$0$i$i$i$i119$i$i$ph;
      $50 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa115;
      label = 23;
      break;
     } else if ((label | 0) == 26) {
      label = 0;
      $58 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      label = 27;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 13) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i = $6;
     $50 = $6;
     label = 23;
    } else {
     $45 = $46 + 4 | 0;
     $$pre$i$i = HEAP32[$45 >> 2] | 0;
     if (!$$pre$i$i) {
      $$0$i$i$i$i119$i$i = $45;
      $50 = $46;
      label = 23;
     } else {
      $58 = $$pre$i$i;
      label = 27;
     }
    }
   }
   if ((label | 0) == 23) {
    label = 0;
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = $50;
    HEAP32[$$0$i$i$i$i119$i$i >> 2] = $9;
    $52 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
    if (!$52) $55 = $9; else {
     HEAP32[$2 >> 2] = $52;
     $55 = HEAP32[$$0$i$i$i$i119$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$4 >> 2] | 0, $55);
    HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
    $61 = $13;
   } else if ((label | 0) == 27) {
    label = 0;
    if (($58 | 0) == ($9 | 0)) $61 = $546; else {
     __ZdlPv($9);
     $61 = $546;
    }
   }
   $62 = HEAP32[$61 + 4 >> 2] | 0;
   if (!$62) {
    $$0$i$i$i$i$i = $61;
    while (1) {
     $67 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$67 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $67;
      break;
     } else $$0$i$i$i$i$i = $67;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $62;
    while (1) {
     $64 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$64) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $64;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($7 | 0)) {
    label = 38;
    break;
   } else {
    $13 = $$01$i$i$i$i$i;
    $546 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 37) {
   $71 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$6 >> 2] | 0);
   ___resumeException($71 | 0);
  } else if ((label | 0) == 38) break;
 } while (0);
 $74 = $3 + 4 | 0;
 HEAP32[$74 >> 2] = 0;
 $75 = $3 + 8 | 0;
 HEAP32[$75 >> 2] = 0;
 $76 = $3 + 4 | 0;
 HEAP32[$3 >> 2] = $76;
 $$idx$val$i$i3 = HEAP32[$args3 >> 2] | 0;
 $77 = $args3 + 4 | 0;
 do if (($$idx$val$i$i3 | 0) != ($77 | 0)) {
  $547 = $$idx$val$i$i3;
  $83 = $$idx$val$i$i3;
  while (1) {
   __THREW__ = 0;
   $79 = invoke_ii(67, 24) | 0;
   $80 = __THREW__;
   __THREW__ = 0;
   if ($80 & 1) break;
   $85 = $83 + 16 | 0;
   $87 = HEAP32[$85 >> 2] | 0;
   $90 = HEAP32[$85 + 4 >> 2] | 0;
   $91 = $79 + 16 | 0;
   HEAP32[$91 >> 2] = $87;
   HEAP32[$91 + 4 >> 2] = $90;
   $95 = $87;
   $$pre$i$i$i$i$i$i8 = HEAP32[$76 >> 2] | 0;
   do if ((HEAP32[$3 >> 2] | 0) == ($76 | 0)) {
    $116 = $76;
    label = 51;
   } else {
    $97 = ($$pre$i$i$i$i$i$i8 | 0) == 0;
    if ($97) {
     $$0$i$i$i$i$i$i$i$i12 = $76;
     while (1) {
      $102 = HEAP32[$$0$i$i$i$i$i$i$i$i12 + 8 >> 2] | 0;
      if ((HEAP32[$102 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12 | 0)) $$0$i$i$i$i$i$i$i$i12 = $102; else {
       $$cast$i$i$i$i$i$i$i$i13$lcssa = $102;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i15 = $$cast$i$i$i$i$i$i$i$i13$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i10 = $$pre$i$i$i$i$i$i8;
     while (1) {
      $99 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10 + 4 >> 2] | 0;
      if (!$99) {
       $$0$i$i$i$i$i$i$i$i$i10$lcssa = $$0$i$i$i$i$i$i$i$i$i10;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i10 = $99;
     }
     $$01$i$i$i$i$i$i$i$i15 = $$0$i$i$i$i$i$i$i$i$i10$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i15 + 16 >> 2] | 0) >>> 0 < $95 >>> 0) {
     $116 = $$01$i$i$i$i$i$i$i$i15;
     label = 51;
    } else if ($97) {
     $$0$i$i$i$i119$i$i26 = $76;
     $120 = $76;
     label = 61;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i20 = $$pre$i$i$i$i$i$i8;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i22 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20 + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i22 >>> 0 > $95 >>> 0) {
       $109 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20 >> 2] | 0;
       if (!$109) {
        $$0$i$i$i$i119$i$i26$ph = $__nd$0$i20$i$i$i$i$in$i$i20;
        $__nd$0$i20$i$i$i$i$in$i$i20$lcssa114 = $__nd$0$i20$i$i$i$i$in$i$i20;
        label = 60;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i20$be = $109;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i22 >>> 0 >= $95 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i20$lcssa = $__nd$0$i20$i$i$i$i$in$i$i20;
        label = 64;
        break;
       }
       $112 = $__nd$0$i20$i$i$i$i$in$i$i20 + 4 | 0;
       $113 = HEAP32[$112 >> 2] | 0;
       if (!$113) {
        $$0$i$i$i$i119$i$i26$ph = $112;
        $__nd$0$i20$i$i$i$i$in$i$i20$lcssa114 = $__nd$0$i20$i$i$i$i$in$i$i20;
        label = 60;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i20$be = $113;
      }
      $__nd$0$i20$i$i$i$i$in$i$i20 = $__nd$0$i20$i$i$i$i$in$i$i20$be;
     }
     if ((label | 0) == 60) {
      label = 0;
      $$0$i$i$i$i119$i$i26 = $$0$i$i$i$i119$i$i26$ph;
      $120 = $__nd$0$i20$i$i$i$i$in$i$i20$lcssa114;
      label = 61;
      break;
     } else if ((label | 0) == 64) {
      label = 0;
      $128 = $__nd$0$i20$i$i$i$i$in$i$i20$lcssa;
      label = 65;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 51) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i8) {
     $$0$i$i$i$i119$i$i26 = $76;
     $120 = $76;
     label = 61;
    } else {
     $115 = $116 + 4 | 0;
     $$pre$i$i24 = HEAP32[$115 >> 2] | 0;
     if (!$$pre$i$i24) {
      $$0$i$i$i$i119$i$i26 = $115;
      $120 = $116;
      label = 61;
     } else {
      $128 = $$pre$i$i24;
      label = 65;
     }
    }
   }
   if ((label | 0) == 61) {
    label = 0;
    HEAP32[$79 >> 2] = 0;
    HEAP32[$79 + 4 >> 2] = 0;
    HEAP32[$79 + 8 >> 2] = $120;
    HEAP32[$$0$i$i$i$i119$i$i26 >> 2] = $79;
    $122 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
    if (!$122) $125 = $79; else {
     HEAP32[$3 >> 2] = $122;
     $125 = HEAP32[$$0$i$i$i$i119$i$i26 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$74 >> 2] | 0, $125);
    HEAP32[$75 >> 2] = (HEAP32[$75 >> 2] | 0) + 1;
    $131 = $83;
   } else if ((label | 0) == 65) {
    label = 0;
    if (($128 | 0) == ($79 | 0)) $131 = $547; else {
     __ZdlPv($79);
     $131 = $547;
    }
   }
   $132 = HEAP32[$131 + 4 >> 2] | 0;
   if (!$132) {
    $$0$i$i$i$i$i35 = $131;
    while (1) {
     $137 = HEAP32[$$0$i$i$i$i$i35 + 8 >> 2] | 0;
     if ((HEAP32[$137 >> 2] | 0) == ($$0$i$i$i$i$i35 | 0)) {
      $$cast$i$i$i$i$i36$lcssa = $137;
      break;
     } else $$0$i$i$i$i$i35 = $137;
    }
    $$01$i$i$i$i$i38 = $$cast$i$i$i$i$i36$lcssa;
   } else {
    $$0$i$i$i$i$i$i33 = $132;
    while (1) {
     $134 = HEAP32[$$0$i$i$i$i$i$i33 >> 2] | 0;
     if (!$134) {
      $$0$i$i$i$i$i$i33$lcssa = $$0$i$i$i$i$i$i33;
      break;
     } else $$0$i$i$i$i$i$i33 = $134;
    }
    $$01$i$i$i$i$i38 = $$0$i$i$i$i$i$i33$lcssa;
   }
   if (($$01$i$i$i$i$i38 | 0) == ($77 | 0)) {
    label = 75;
    break;
   } else {
    $547 = $$01$i$i$i$i$i38;
    $83 = $$01$i$i$i$i$i38;
   }
  }
  if ((label | 0) == 75) break;
  $539 = ___cxa_find_matching_catch() | 0;
  $540 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$76 >> 2] | 0);
  $$0 = $540;
  $$01 = $539;
  $545 = HEAP32[$6 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $545);
  ___resumeException($$01 | 0);
 } while (0);
 $141 = $0 + 4 | 0;
 HEAP32[$141 >> 2] = 0;
 $142 = $0 + 8 | 0;
 HEAP32[$142 >> 2] = 0;
 $143 = $0 + 4 | 0;
 HEAP32[$0 >> 2] = $143;
 $$idx$val$i$i$i = HEAP32[$2 >> 2] | 0;
 do if (($$idx$val$i$i$i | 0) == ($6 | 0)) label = 114; else {
  $149 = $$idx$val$i$i$i;
  $548 = $$idx$val$i$i$i;
  while (1) {
   __THREW__ = 0;
   $145 = invoke_ii(67, 24) | 0;
   $146 = __THREW__;
   __THREW__ = 0;
   if ($146 & 1) {
    label = 112;
    break;
   }
   $151 = $149 + 16 | 0;
   $153 = HEAP32[$151 >> 2] | 0;
   $156 = HEAP32[$151 + 4 >> 2] | 0;
   $157 = $145 + 16 | 0;
   HEAP32[$157 >> 2] = $153;
   HEAP32[$157 + 4 >> 2] = $156;
   $161 = $153;
   $$pre$i$i$i$i$i$i$i = HEAP32[$143 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($143 | 0)) {
    $182 = $143;
    label = 88;
   } else {
    $163 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
    if ($163) {
     $$0$i$i$i$i$i$i$i$i$i41 = $143;
     while (1) {
      $168 = HEAP32[$$0$i$i$i$i$i$i$i$i$i41 + 8 >> 2] | 0;
      if ((HEAP32[$168 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i41 | 0)) $$0$i$i$i$i$i$i$i$i$i41 = $168; else {
       $$cast$i$i$i$i$i$i$i$i$i$lcssa = $168;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $165 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$165) {
       $$0$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i = $165;
     }
     $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $161 >>> 0) {
     $182 = $$01$i$i$i$i$i$i$i$i$i;
     label = 88;
    } else if ($163) {
     $$0$i$i$i$i119$i$i$i = $143;
     $186 = $143;
     label = 98;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 > $161 >>> 0) {
       $175 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i >> 2] | 0;
       if (!$175) {
        $$0$i$i$i$i119$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa113 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 97;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$be = $175;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 >= $161 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 101;
        break;
       }
       $178 = $__nd$0$i20$i$i$i$i$in$i$i$i + 4 | 0;
       $179 = HEAP32[$178 >> 2] | 0;
       if (!$179) {
        $$0$i$i$i$i119$i$i$i$ph = $178;
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa113 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 97;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$be = $179;
      }
      $__nd$0$i20$i$i$i$i$in$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$be;
     }
     if ((label | 0) == 97) {
      label = 0;
      $$0$i$i$i$i119$i$i$i = $$0$i$i$i$i119$i$i$i$ph;
      $186 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa113;
      label = 98;
      break;
     } else if ((label | 0) == 101) {
      label = 0;
      $194 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa;
      label = 102;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 88) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i$i = $143;
     $186 = $143;
     label = 98;
    } else {
     $181 = $182 + 4 | 0;
     $$pre$i$i$i = HEAP32[$181 >> 2] | 0;
     if (!$$pre$i$i$i) {
      $$0$i$i$i$i119$i$i$i = $181;
      $186 = $182;
      label = 98;
     } else {
      $194 = $$pre$i$i$i;
      label = 102;
     }
    }
   }
   if ((label | 0) == 98) {
    label = 0;
    HEAP32[$145 >> 2] = 0;
    HEAP32[$145 + 4 >> 2] = 0;
    HEAP32[$145 + 8 >> 2] = $186;
    HEAP32[$$0$i$i$i$i119$i$i$i >> 2] = $145;
    $188 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$188) $191 = $145; else {
     HEAP32[$0 >> 2] = $188;
     $191 = HEAP32[$$0$i$i$i$i119$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$141 >> 2] | 0, $191);
    HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + 1;
    $197 = $149;
   } else if ((label | 0) == 102) {
    label = 0;
    if (($194 | 0) == ($145 | 0)) $197 = $548; else {
     __ZdlPv($145);
     $197 = $548;
    }
   }
   $198 = HEAP32[$197 + 4 >> 2] | 0;
   if (!$198) {
    $$0$i$i$i$i$i$i42 = $197;
    while (1) {
     $203 = HEAP32[$$0$i$i$i$i$i$i42 + 8 >> 2] | 0;
     if ((HEAP32[$203 >> 2] | 0) == ($$0$i$i$i$i$i$i42 | 0)) {
      $$cast$i$i$i$i$i$i$lcssa = $203;
      break;
     } else $$0$i$i$i$i$i$i42 = $203;
    }
    $$01$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i$i = $198;
    while (1) {
     $200 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
     if (!$200) {
      $$0$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i = $200;
    }
    $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i$i | 0) == ($6 | 0)) {
    label = 113;
    break;
   } else {
    $149 = $$01$i$i$i$i$i$i;
    $548 = $$01$i$i$i$i$i$i;
   }
  }
  if ((label | 0) == 112) {
   $207 = ___cxa_find_matching_catch() | 0;
   $208 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$143 >> 2] | 0);
   $eh$lpad$body53$index8Z2D = $208;
   $eh$lpad$body53$indexZ2D = $207;
   break;
  } else if ((label | 0) == 113) {
   label = 114;
   break;
  }
 } while (0);
 L163 : do if ((label | 0) == 114) {
  $210 = $1 + 4 | 0;
  HEAP32[$210 >> 2] = 0;
  $211 = $1 + 8 | 0;
  HEAP32[$211 >> 2] = 0;
  $212 = $1 + 4 | 0;
  HEAP32[$1 >> 2] = $212;
  $$idx$val$i$i3$i = HEAP32[$3 >> 2] | 0;
  do if (($$idx$val$i$i3$i | 0) == ($76 | 0)) label = 151; else {
   $218 = $$idx$val$i$i3$i;
   $549 = $$idx$val$i$i3$i;
   while (1) {
    __THREW__ = 0;
    $214 = invoke_ii(67, 24) | 0;
    $215 = __THREW__;
    __THREW__ = 0;
    if ($215 & 1) {
     label = 263;
     break;
    }
    $220 = $218 + 16 | 0;
    $222 = HEAP32[$220 >> 2] | 0;
    $225 = HEAP32[$220 + 4 >> 2] | 0;
    $226 = $214 + 16 | 0;
    HEAP32[$226 >> 2] = $222;
    HEAP32[$226 + 4 >> 2] = $225;
    $230 = $222;
    $$pre$i$i$i$i$i$i8$i = HEAP32[$212 >> 2] | 0;
    do if ((HEAP32[$1 >> 2] | 0) == ($212 | 0)) {
     $251 = $212;
     label = 126;
    } else {
     $232 = ($$pre$i$i$i$i$i$i8$i | 0) == 0;
     if ($232) {
      $$0$i$i$i$i$i$i$i$i12$i = $212;
      while (1) {
       $237 = HEAP32[$$0$i$i$i$i$i$i$i$i12$i + 8 >> 2] | 0;
       if ((HEAP32[$237 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12$i | 0)) $$0$i$i$i$i$i$i$i$i12$i = $237; else {
        $$cast$i$i$i$i$i$i$i$i13$i$lcssa = $237;
        break;
       }
      }
      $$01$i$i$i$i$i$i$i$i15$i = $$cast$i$i$i$i$i$i$i$i13$i$lcssa;
     } else {
      $$0$i$i$i$i$i$i$i$i$i10$i = $$pre$i$i$i$i$i$i8$i;
      while (1) {
       $234 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10$i + 4 >> 2] | 0;
       if (!$234) {
        $$0$i$i$i$i$i$i$i$i$i10$i$lcssa = $$0$i$i$i$i$i$i$i$i$i10$i;
        break;
       } else $$0$i$i$i$i$i$i$i$i$i10$i = $234;
      }
      $$01$i$i$i$i$i$i$i$i15$i = $$0$i$i$i$i$i$i$i$i$i10$i$lcssa;
     }
     if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i + 16 >> 2] | 0) >>> 0 < $230 >>> 0) {
      $251 = $$01$i$i$i$i$i$i$i$i15$i;
      label = 126;
     } else if ($232) {
      $$0$i$i$i$i119$i$i26$i = $212;
      $255 = $212;
      label = 136;
     } else {
      $__nd$0$i20$i$i$i$i$in$i$i20$i = $$pre$i$i$i$i$i$i8$i;
      while (1) {
       $$idx2$val$i22$i$i$i$i$i$i22$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i + 16 >> 2] | 0;
       if ($$idx2$val$i22$i$i$i$i$i$i22$i >>> 0 > $230 >>> 0) {
        $244 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i >> 2] | 0;
        if (!$244) {
         $$0$i$i$i$i119$i$i26$i$ph = $__nd$0$i20$i$i$i$i$in$i$i20$i;
         $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa112 = $__nd$0$i20$i$i$i$i$in$i$i20$i;
         label = 135;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i20$i$be = $244;
       } else {
        if ($$idx2$val$i22$i$i$i$i$i$i22$i >>> 0 >= $230 >>> 0) {
         $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i20$i;
         label = 139;
         break;
        }
        $247 = $__nd$0$i20$i$i$i$i$in$i$i20$i + 4 | 0;
        $248 = HEAP32[$247 >> 2] | 0;
        if (!$248) {
         $$0$i$i$i$i119$i$i26$i$ph = $247;
         $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa112 = $__nd$0$i20$i$i$i$i$in$i$i20$i;
         label = 135;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i20$i$be = $248;
       }
       $__nd$0$i20$i$i$i$i$in$i$i20$i = $__nd$0$i20$i$i$i$i$in$i$i20$i$be;
      }
      if ((label | 0) == 135) {
       label = 0;
       $$0$i$i$i$i119$i$i26$i = $$0$i$i$i$i119$i$i26$i$ph;
       $255 = $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa112;
       label = 136;
       break;
      } else if ((label | 0) == 139) {
       label = 0;
       $263 = $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa;
       label = 140;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 126) {
     label = 0;
     if (!$$pre$i$i$i$i$i$i8$i) {
      $$0$i$i$i$i119$i$i26$i = $212;
      $255 = $212;
      label = 136;
     } else {
      $250 = $251 + 4 | 0;
      $$pre$i$i24$i = HEAP32[$250 >> 2] | 0;
      if (!$$pre$i$i24$i) {
       $$0$i$i$i$i119$i$i26$i = $250;
       $255 = $251;
       label = 136;
      } else {
       $263 = $$pre$i$i24$i;
       label = 140;
      }
     }
    }
    if ((label | 0) == 136) {
     label = 0;
     HEAP32[$214 >> 2] = 0;
     HEAP32[$214 + 4 >> 2] = 0;
     HEAP32[$214 + 8 >> 2] = $255;
     HEAP32[$$0$i$i$i$i119$i$i26$i >> 2] = $214;
     $257 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
     if (!$257) $260 = $214; else {
      HEAP32[$1 >> 2] = $257;
      $260 = HEAP32[$$0$i$i$i$i119$i$i26$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$210 >> 2] | 0, $260);
     HEAP32[$211 >> 2] = (HEAP32[$211 >> 2] | 0) + 1;
     $266 = $218;
    } else if ((label | 0) == 140) {
     label = 0;
     if (($263 | 0) == ($214 | 0)) $266 = $549; else {
      __ZdlPv($214);
      $266 = $549;
     }
    }
    $267 = HEAP32[$266 + 4 >> 2] | 0;
    if (!$267) {
     $$0$i$i$i$i$i35$i = $266;
     while (1) {
      $272 = HEAP32[$$0$i$i$i$i$i35$i + 8 >> 2] | 0;
      if ((HEAP32[$272 >> 2] | 0) == ($$0$i$i$i$i$i35$i | 0)) {
       $$cast$i$i$i$i$i36$i$lcssa = $272;
       break;
      } else $$0$i$i$i$i$i35$i = $272;
     }
     $$01$i$i$i$i$i38$i = $$cast$i$i$i$i$i36$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i33$i = $267;
     while (1) {
      $269 = HEAP32[$$0$i$i$i$i$i$i33$i >> 2] | 0;
      if (!$269) {
       $$0$i$i$i$i$i$i33$i$lcssa = $$0$i$i$i$i$i$i33$i;
       break;
      } else $$0$i$i$i$i$i$i33$i = $269;
     }
     $$01$i$i$i$i$i38$i = $$0$i$i$i$i$i$i33$i$lcssa;
    }
    if (($$01$i$i$i$i$i38$i | 0) == ($76 | 0)) {
     label = 150;
     break;
    } else {
     $218 = $$01$i$i$i$i$i38$i;
     $549 = $$01$i$i$i$i$i38$i;
    }
   }
   if ((label | 0) == 150) {
    label = 151;
    break;
   } else if ((label | 0) == 263) {
    $529 = ___cxa_find_matching_catch() | 0;
    $530 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$212 >> 2] | 0);
    $$0$i = $530;
    $$01$i = $529;
    break;
   }
  } while (0);
  if ((label | 0) == 151) {
   __THREW__ = 0;
   $276 = invoke_ii(67, 40) | 0;
   $277 = __THREW__;
   __THREW__ = 0;
   L220 : do if ($277 & 1) label = 264; else {
    HEAP32[$276 >> 2] = 39536;
    $279 = $276 + 8 | 0;
    $280 = $276 + 12 | 0;
    HEAP32[$280 >> 2] = 0;
    $281 = $276 + 16 | 0;
    HEAP32[$281 >> 2] = 0;
    HEAP32[$279 >> 2] = $280;
    $$idx$val$i$i$i$i$i = HEAP32[$0 >> 2] | 0;
    do if (($$idx$val$i$i$i$i$i | 0) == ($143 | 0)) label = 189; else {
     $287 = $$idx$val$i$i$i$i$i;
     $550 = $$idx$val$i$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $283 = invoke_ii(67, 24) | 0;
      $284 = __THREW__;
      __THREW__ = 0;
      if ($284 & 1) {
       label = 225;
       break;
      }
      $289 = $287 + 16 | 0;
      $291 = HEAP32[$289 >> 2] | 0;
      $294 = HEAP32[$289 + 4 >> 2] | 0;
      $295 = $283 + 16 | 0;
      HEAP32[$295 >> 2] = $291;
      HEAP32[$295 + 4 >> 2] = $294;
      $299 = $291;
      $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$280 >> 2] | 0;
      do if ((HEAP32[$279 >> 2] | 0) == ($280 | 0)) {
       $320 = $280;
       label = 164;
      } else {
       $301 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
       if ($301) {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $280;
        while (1) {
         $306 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$306 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i$i = $306; else {
          $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = $306;
          break;
         }
        }
        $$01$i$i$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
        while (1) {
         $303 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$303) {
          $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $303;
        }
        $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa;
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $299 >>> 0) {
        $320 = $$01$i$i$i$i$i$i$i$i$i$i$i;
        label = 164;
       } else if ($301) {
        $$0$i$i$i$i119$i$i$i$i$i = $280;
        $324 = $280;
        label = 174;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 > $299 >>> 0) {
          $313 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i >> 2] | 0;
          if (!$313) {
           $$0$i$i$i$i119$i$i$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa111 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           label = 173;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $313;
         } else {
          if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 >= $299 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           label = 177;
           break;
          }
          $316 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 4 | 0;
          $317 = HEAP32[$316 >> 2] | 0;
          if (!$317) {
           $$0$i$i$i$i119$i$i$i$i$i$ph = $316;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa111 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           label = 173;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $317;
         }
         $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be;
        }
        if ((label | 0) == 173) {
         label = 0;
         $$0$i$i$i$i119$i$i$i$i$i = $$0$i$i$i$i119$i$i$i$i$i$ph;
         $324 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa111;
         label = 174;
         break;
        } else if ((label | 0) == 177) {
         label = 0;
         $332 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa;
         label = 178;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 164) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i$i) {
        $$0$i$i$i$i119$i$i$i$i$i = $280;
        $324 = $280;
        label = 174;
       } else {
        $319 = $320 + 4 | 0;
        $$pre$i$i$i$i$i = HEAP32[$319 >> 2] | 0;
        if (!$$pre$i$i$i$i$i) {
         $$0$i$i$i$i119$i$i$i$i$i = $319;
         $324 = $320;
         label = 174;
        } else {
         $332 = $$pre$i$i$i$i$i;
         label = 178;
        }
       }
      }
      if ((label | 0) == 174) {
       label = 0;
       HEAP32[$283 >> 2] = 0;
       HEAP32[$283 + 4 >> 2] = 0;
       HEAP32[$283 + 8 >> 2] = $324;
       HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] = $283;
       $326 = HEAP32[HEAP32[$279 >> 2] >> 2] | 0;
       if (!$326) $329 = $283; else {
        HEAP32[$279 >> 2] = $326;
        $329 = HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$280 >> 2] | 0, $329);
       HEAP32[$281 >> 2] = (HEAP32[$281 >> 2] | 0) + 1;
       $335 = $287;
      } else if ((label | 0) == 178) {
       label = 0;
       if (($332 | 0) == ($283 | 0)) $335 = $550; else {
        __ZdlPv($283);
        $335 = $550;
       }
      }
      $336 = HEAP32[$335 + 4 >> 2] | 0;
      if (!$336) {
       $$0$i$i$i$i$i$i$i$i45 = $335;
       while (1) {
        $341 = HEAP32[$$0$i$i$i$i$i$i$i$i45 + 8 >> 2] | 0;
        if ((HEAP32[$341 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i45 | 0)) {
         $$cast$i$i$i$i$i$i$i$i46$lcssa = $341;
         break;
        } else $$0$i$i$i$i$i$i$i$i45 = $341;
       }
       $$01$i$i$i$i$i$i$i$i48 = $$cast$i$i$i$i$i$i$i$i46$lcssa;
      } else {
       $$0$i$i$i$i$i$i$i$i41$i = $336;
       while (1) {
        $338 = HEAP32[$$0$i$i$i$i$i$i$i$i41$i >> 2] | 0;
        if (!$338) {
         $$0$i$i$i$i$i$i$i$i41$i$lcssa = $$0$i$i$i$i$i$i$i$i41$i;
         break;
        } else $$0$i$i$i$i$i$i$i$i41$i = $338;
       }
       $$01$i$i$i$i$i$i$i$i48 = $$0$i$i$i$i$i$i$i$i41$i$lcssa;
      }
      if (($$01$i$i$i$i$i$i$i$i48 | 0) == ($143 | 0)) {
       label = 188;
       break;
      } else {
       $287 = $$01$i$i$i$i$i$i$i$i48;
       $550 = $$01$i$i$i$i$i$i$i$i48;
      }
     }
     if ((label | 0) == 188) {
      label = 189;
      break;
     } else if ((label | 0) == 225) {
      $413 = ___cxa_find_matching_catch() | 0;
      $414 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($279, HEAP32[$280 >> 2] | 0);
      $$0$i$i$i = $414;
      $$01$i$i$i = $413;
      break;
     }
    } while (0);
    L275 : do if ((label | 0) == 189) {
     HEAP32[$276 + 20 >> 2] = $args1;
     HEAP32[$276 + 24 >> 2] = $args2;
     $347 = $276 + 28 | 0;
     $348 = $276 + 32 | 0;
     HEAP32[$348 >> 2] = 0;
     $349 = $276 + 36 | 0;
     HEAP32[$349 >> 2] = 0;
     HEAP32[$347 >> 2] = $348;
     $$idx$val$i$i3$i$i$i = HEAP32[$1 >> 2] | 0;
     do if (($$idx$val$i$i3$i$i$i | 0) != ($212 | 0)) {
      $355 = $$idx$val$i$i3$i$i$i;
      $551 = $$idx$val$i$i3$i$i$i;
      while (1) {
       __THREW__ = 0;
       $351 = invoke_ii(67, 24) | 0;
       $352 = __THREW__;
       __THREW__ = 0;
       if ($352 & 1) {
        label = 226;
        break;
       }
       $357 = $355 + 16 | 0;
       $359 = HEAP32[$357 >> 2] | 0;
       $362 = HEAP32[$357 + 4 >> 2] | 0;
       $363 = $351 + 16 | 0;
       HEAP32[$363 >> 2] = $359;
       HEAP32[$363 + 4 >> 2] = $362;
       $367 = $359;
       $$pre$i$i$i$i$i$i8$i$i$i = HEAP32[$348 >> 2] | 0;
       do if ((HEAP32[$347 >> 2] | 0) == ($348 | 0)) {
        $388 = $348;
        label = 201;
       } else {
        $369 = ($$pre$i$i$i$i$i$i8$i$i$i | 0) == 0;
        if ($369) {
         $$0$i$i$i$i$i$i$i$i12$i$i$i = $348;
         while (1) {
          $374 = HEAP32[$$0$i$i$i$i$i$i$i$i12$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$374 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i12$i$i$i = $374; else {
           $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = $374;
           break;
          }
         }
         $$01$i$i$i$i$i$i$i$i15$i$i$i = $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa;
        } else {
         $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
         while (1) {
          $371 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10$i$i$i + 4 >> 2] | 0;
          if (!$371) {
           $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i10$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $371;
         }
         $$01$i$i$i$i$i$i$i$i15$i$i$i = $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa;
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i$i$i + 16 >> 2] | 0) >>> 0 < $367 >>> 0) {
         $388 = $$01$i$i$i$i$i$i$i$i15$i$i$i;
         label = 201;
        } else if ($369) {
         $$0$i$i$i$i119$i$i26$i$i$i = $348;
         $392 = $348;
         label = 211;
        } else {
         $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i22$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i$i$i + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i22$i$i$i >>> 0 > $367 >>> 0) {
           $381 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i$i$i >> 2] | 0;
           if (!$381) {
            $$0$i$i$i$i119$i$i26$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
            $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa110 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
            label = 210;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be = $381;
          } else {
           if ($$idx2$val$i22$i$i$i$i$i$i22$i$i$i >>> 0 >= $367 >>> 0) {
            $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
            label = 214;
            break;
           }
           $384 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i + 4 | 0;
           $385 = HEAP32[$384 >> 2] | 0;
           if (!$385) {
            $$0$i$i$i$i119$i$i26$i$i$i$ph = $384;
            $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa110 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
            label = 210;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be = $385;
          }
          $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be;
         }
         if ((label | 0) == 210) {
          label = 0;
          $$0$i$i$i$i119$i$i26$i$i$i = $$0$i$i$i$i119$i$i26$i$i$i$ph;
          $392 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa110;
          label = 211;
          break;
         } else if ((label | 0) == 214) {
          label = 0;
          $400 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa;
          label = 215;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 201) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i8$i$i$i) {
         $$0$i$i$i$i119$i$i26$i$i$i = $348;
         $392 = $348;
         label = 211;
        } else {
         $387 = $388 + 4 | 0;
         $$pre$i$i24$i$i$i = HEAP32[$387 >> 2] | 0;
         if (!$$pre$i$i24$i$i$i) {
          $$0$i$i$i$i119$i$i26$i$i$i = $387;
          $392 = $388;
          label = 211;
         } else {
          $400 = $$pre$i$i24$i$i$i;
          label = 215;
         }
        }
       }
       if ((label | 0) == 211) {
        label = 0;
        HEAP32[$351 >> 2] = 0;
        HEAP32[$351 + 4 >> 2] = 0;
        HEAP32[$351 + 8 >> 2] = $392;
        HEAP32[$$0$i$i$i$i119$i$i26$i$i$i >> 2] = $351;
        $394 = HEAP32[HEAP32[$347 >> 2] >> 2] | 0;
        if (!$394) $397 = $351; else {
         HEAP32[$347 >> 2] = $394;
         $397 = HEAP32[$$0$i$i$i$i119$i$i26$i$i$i >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$348 >> 2] | 0, $397);
        HEAP32[$349 >> 2] = (HEAP32[$349 >> 2] | 0) + 1;
        $403 = $355;
       } else if ((label | 0) == 215) {
        label = 0;
        if (($400 | 0) == ($351 | 0)) $403 = $551; else {
         __ZdlPv($351);
         $403 = $551;
        }
       }
       $404 = HEAP32[$403 + 4 >> 2] | 0;
       if (!$404) {
        $$0$i$i$i$i$i35$i$i$i = $403;
        while (1) {
         $409 = HEAP32[$$0$i$i$i$i$i35$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$409 >> 2] | 0) == ($$0$i$i$i$i$i35$i$i$i | 0)) {
          $$cast$i$i$i$i$i36$i$i$i$lcssa = $409;
          break;
         } else $$0$i$i$i$i$i35$i$i$i = $409;
        }
        $$01$i$i$i$i$i38$i$i$i = $$cast$i$i$i$i$i36$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i$i33$i$i$i = $404;
        while (1) {
         $406 = HEAP32[$$0$i$i$i$i$i$i33$i$i$i >> 2] | 0;
         if (!$406) {
          $$0$i$i$i$i$i$i33$i$i$i$lcssa = $$0$i$i$i$i$i$i33$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i33$i$i$i = $406;
        }
        $$01$i$i$i$i$i38$i$i$i = $$0$i$i$i$i$i$i33$i$i$i$lcssa;
       }
       if (($$01$i$i$i$i$i38$i$i$i | 0) == ($212 | 0)) {
        label = 227;
        break;
       } else {
        $355 = $$01$i$i$i$i$i38$i$i$i;
        $551 = $$01$i$i$i$i$i38$i$i$i;
       }
      }
      if ((label | 0) == 226) {
       $416 = ___cxa_find_matching_catch() | 0;
       $417 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($347, HEAP32[$348 >> 2] | 0);
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($279, HEAP32[$280 >> 2] | 0);
       $$0$i$i$i = $417;
       $$01$i$i$i = $416;
       break L275;
      } else if ((label | 0) == 227) break;
     } while (0);
     $420 = $this + 20 | 0;
     $421 = $this + 24 | 0;
     $422 = HEAP32[$421 >> 2] | 0;
     $423 = $this + 28 | 0;
     $424 = HEAP32[$423 >> 2] | 0;
     if ($422 >>> 0 < $424 >>> 0) {
      if (!$422) $428 = 0; else {
       HEAP32[$422 >> 2] = $276;
       $428 = HEAP32[$421 >> 2] | 0;
      }
      $427 = $428 + 4 | 0;
      HEAP32[$421 >> 2] = $427;
      $$idx$pre$phi$i$iZZ2D = $420;
      $$idx1$val$i$i = $427;
     } else {
      $this$idx2$val$i$i$i$i = HEAP32[$420 >> 2] | 0;
      $433 = ($422 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
      if ($433 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(179, $420 | 0);
       $435 = __THREW__;
       __THREW__ = 0;
       if ($435 & 1) {
        label = 264;
        break L220;
       }
       $$idx1$val$i$i$i$i$i$i = HEAP32[$423 >> 2] | 0;
       $438 = HEAP32[$420 >> 2] | 0;
      } else {
       $$idx1$val$i$i$i$i$i$i = $424;
       $438 = $this$idx2$val$i$i$i$i;
      }
      $439 = $438;
      $440 = $$idx1$val$i$i$i$i$i$i - $439 | 0;
      if ($440 >> 2 >>> 0 < 536870911) {
       $446 = $440 >> 1;
       $448 = $446 >>> 0 < $433 >>> 0 ? $433 : $446;
       $450 = (HEAP32[$421 >> 2] | 0) - $439 | 0;
       $451 = $450 >> 2;
       if (!$448) {
        $$0$i8$i$i$i$i = 0;
        $458 = 0;
        $459 = $451;
        $463 = $450;
       } else {
        $$0$i7$i$i$i$i = $448;
        $552 = $451;
        $553 = $450;
        label = 238;
       }
      } else {
       $444 = (HEAP32[$421 >> 2] | 0) - $439 | 0;
       $$0$i7$i$i$i$i = 1073741823;
       $552 = $444 >> 2;
       $553 = $444;
       label = 238;
      }
      if ((label | 0) == 238) {
       __THREW__ = 0;
       $454 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
       $455 = __THREW__;
       __THREW__ = 0;
       if ($455 & 1) {
        label = 264;
        break L220;
       }
       $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
       $458 = $454;
       $459 = $552;
       $463 = $553;
      }
      $457 = $458 + ($459 << 2) | 0;
      if ($457) HEAP32[$457 >> 2] = $276;
      $462 = $458 + ($459 + 1 << 2) | 0;
      _memcpy($458 | 0, $438 | 0, $463 | 0) | 0;
      HEAP32[$420 >> 2] = $458;
      HEAP32[$421 >> 2] = $462;
      HEAP32[$423 >> 2] = $458 + ($$0$i8$i$i$i$i << 2);
      if (!$438) {
       $$idx$pre$phi$i$iZZ2D = $420;
       $$idx1$val$i$i = $462;
      } else {
       __ZdlPv($438);
       $$idx$pre$phi$i$iZZ2D = $420;
       $$idx1$val$i$i = HEAP32[$421 >> 2] | 0;
      }
     }
     $465 = $this + 16 | 0;
     HEAP8[$276 + 4 >> 0] = HEAP8[$465 >> 0] | 0;
     $472 = $this + 48 | 0;
     HEAP32[$472 >> 2] = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$212 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$143 >> 2] | 0);
     $475 = HEAP32[$472 >> 2] | 0;
     if ($475 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
      $536 = $agg$result + 8 | 0;
      HEAP32[$536 >> 2] = $276;
      $537 = HEAP32[$76 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $537);
      $538 = HEAP32[$6 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $538);
      STACKTOP = sp;
      return;
     }
     $481 = $this + 44 | 0;
     if (!(+($475 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$481 >> 2] | 0) >>> 0))) {
      $536 = $agg$result + 8 | 0;
      HEAP32[$536 >> 2] = $276;
      $537 = HEAP32[$76 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $537);
      $538 = HEAP32[$6 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $538);
      STACKTOP = sp;
      return;
     }
     __THREW__ = 0;
     invoke_vii(63, $this | 0, $276 | 0);
     $486 = __THREW__;
     __THREW__ = 0;
     do if (!($486 & 1)) {
      __THREW__ = 0;
      invoke_vii(64, $this + 72 | 0, $this | 0);
      $489 = __THREW__;
      __THREW__ = 0;
      if (!($489 & 1)) {
       if (HEAP32[$this + 56 >> 2] & 16) {
        __THREW__ = 0;
        invoke_vii(63, $this | 0, HEAP32[$this + 64 >> 2] | 0);
        $497 = __THREW__;
        __THREW__ = 0;
        if ($497 & 1) break;
       }
       $500 = (HEAP8[$465 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$465 >> 0] = $500;
       $$idx6$i$i = $this + 20 | 0;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$421 >> 2] | 0;
       if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $$idx7$val18$i$i = $$idx7$val12$i$i;
        $507 = $500;
        $i$013$i$i = 0;
        while (1) {
         $503 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$503 + 4 >> 0] | 0) == $507 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx7$val18$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$503) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx7$val18$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$503 >> 2] | 0) + 4 >> 2] & 255]($503);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$421 >> 2] | 0;
          }
          $516 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($516 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $521 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($516 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $521 = HEAP32[$421 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i = $521 + -4 | 0;
          HEAP32[$421 >> 2] = $scevgep4$i$i$i$i$i;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $523 = $i$1$i$i + 1 | 0;
         $527 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($523 >>> 0 >= $527 >>> 0) {
          $$lcssa = $527;
          break;
         }
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $$idx7$val18$i$i = $$idx7$val$i$i;
         $507 = HEAP8[$465 >> 0] | 0;
         $i$013$i$i = $523;
        }
        $$lcssa$i$i = $$lcssa;
       }
       HEAP32[$472 >> 2] = $$lcssa$i$i;
       HEAP32[$481 >> 2] = $$lcssa$i$i;
       $536 = $agg$result + 8 | 0;
       HEAP32[$536 >> 2] = $276;
       $537 = HEAP32[$76 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $537);
       $538 = HEAP32[$6 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $538);
       STACKTOP = sp;
       return;
      }
     } while (0);
     $542 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body53$index8Z2D = tempRet0;
     $eh$lpad$body53$indexZ2D = $542;
     break L163;
    } while (0);
    __ZdlPv($276);
    $eh$lpad$body46$i$index2Z2D = $$0$i$i$i;
    $eh$lpad$body46$i$indexZ2D = $$01$i$i$i;
   } while (0);
   if ((label | 0) == 264) {
    $532 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body46$i$index2Z2D = tempRet0;
    $eh$lpad$body46$i$indexZ2D = $532;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$212 >> 2] | 0);
   $$0$i = $eh$lpad$body46$i$index2Z2D;
   $$01$i = $eh$lpad$body46$i$indexZ2D;
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$143 >> 2] | 0);
  $eh$lpad$body53$index8Z2D = $$0$i;
  $eh$lpad$body53$indexZ2D = $$01$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$76 >> 2] | 0);
 $$0 = $eh$lpad$body53$index8Z2D;
 $$01 = $eh$lpad$body53$indexZ2D;
 $545 = HEAP32[$6 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $545);
 ___resumeException($$01 | 0);
}

function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$lcssa = 0, $$lcssa146 = 0, $$lcssa148 = 0, $$lcssa151 = 0, $$lcssa152 = 0, $$lcssa153 = 0, $$lcssa154 = 0, $$lcssa156 = 0, $$lcssa159 = 0, $$lcssa161 = 0, $$lcssa163 = 0, $$lcssa165 = 0, $$lcssa167 = 0, $$lcssa169 = 0, $$lcssa172 = 0, $$lcssa174 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$rsize$3$i = 0, $$rsize$3$i$lcssa = 0, $$sum$i19$i = 0, $$sum2$i21$i = 0, $$sum3132$i$i = 0, $$sum67$i$i = 0, $100 = 0, $1000 = 0, $1002 = 0, $1005 = 0, $1010 = 0, $1016 = 0, $1019 = 0, $1020 = 0, $1027 = 0, $1036 = 0, $1039 = 0, $1044 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $106 = 0, $1060 = 0, $1062 = 0, $1063 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $13 = 0, $132 = 0, $138 = 0, $14 = 0, $141 = 0, $144 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $201 = 0, $207 = 0, $214 = 0, $217 = 0, $225 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $276 = 0, $28 = 0, $282 = 0, $285 = 0, $286 = 0, $290 = 0, $300 = 0, $303 = 0, $307 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $314 = 0, $316 = 0, $318 = 0, $320 = 0, $322 = 0, $324 = 0, $334 = 0, $335 = 0, $337 = 0, $34 = 0, $340 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $38 = 0, $380 = 0, $389 = 0, $394 = 0, $398 = 0, $4 = 0, $404 = 0, $41 = 0, $411 = 0, $414 = 0, $422 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $46 = 0, $463 = 0, $467 = 0, $468 = 0, $47 = 0, $475 = 0, $484 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $5 = 0, $500 = 0, $501 = 0, $509 = 0, $51 = 0, $511 = 0, $512 = 0, $522 = 0, $526 = 0, $528 = 0, $529 = 0, $53 = 0, $538 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $552 = 0, $554 = 0, $555 = 0, $561 = 0, $563 = 0, $565 = 0, $57 = 0, $572 = 0, $574 = 0, $575 = 0, $576 = 0, $584 = 0, $585 = 0, $588 = 0, $59 = 0, $592 = 0, $596 = 0, $598 = 0, $6 = 0, $604 = 0, $608 = 0, $61 = 0, $612 = 0, $621 = 0, $622 = 0, $628 = 0, $630 = 0, $632 = 0, $635 = 0, $637 = 0, $64 = 0, $641 = 0, $642 = 0, $648 = 0, $65 = 0, $654 = 0, $655 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $67 = 0, $676 = 0, $678 = 0, $68 = 0, $684 = 0, $685 = 0, $69 = 0, $690 = 0, $692 = 0, $7 = 0, $70 = 0, $702 = 0, $706 = 0, $712 = 0, $714 = 0, $719 = 0, $720 = 0, $724 = 0, $725 = 0, $730 = 0, $736 = 0, $741 = 0, $744 = 0, $745 = 0, $748 = 0, $750 = 0, $752 = 0, $755 = 0, $766 = 0, $77 = 0, $771 = 0, $773 = 0, $776 = 0, $778 = 0, $781 = 0, $784 = 0, $785 = 0, $787 = 0, $788 = 0, $790 = 0, $791 = 0, $793 = 0, $794 = 0, $799 = 0, $80 = 0, $800 = 0, $809 = 0, $81 = 0, $814 = 0, $818 = 0, $824 = 0, $832 = 0, $838 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $847 = 0, $848 = 0, $854 = 0, $859 = 0, $860 = 0, $863 = 0, $865 = 0, $868 = 0, $873 = 0, $879 = 0, $88 = 0, $883 = 0, $884 = 0, $891 = 0, $90 = 0, $900 = 0, $903 = 0, $908 = 0, $91 = 0, $915 = 0, $916 = 0, $917 = 0, $92 = 0, $925 = 0, $928 = 0, $929 = 0, $93 = 0, $934 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $943 = 0, $944 = 0, $947 = 0, $95 = 0, $953 = 0, $954 = 0, $959 = 0, $960 = 0, $964 = 0, $970 = 0, $975 = 0, $977 = 0, $978 = 0, $979 = 0, $980 = 0, $984 = 0, $985 = 0, $99 = 0, $991 = 0, $996 = 0, $997 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$08$i$i = 0, $K8$053$i$i = 0, $R$0$i = 0, $R$0$i$be = 0, $R$0$i$i = 0, $R$0$i$i$be = 0, $R$0$i$i$lcssa = 0, $R$0$i$i$ph = 0, $R$0$i$lcssa = 0, $R$0$i$ph = 0, $R$0$i18 = 0, $R$0$i18$be = 0, $R$0$i18$lcssa = 0, $R$0$i18$ph = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$be = 0, $RP$0$i$i = 0, $RP$0$i$i$be = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$i$ph = 0, $RP$0$i$lcssa = 0, $RP$0$i$ph = 0, $RP$0$i17 = 0, $RP$0$i17$be = 0, $RP$0$i17$lcssa = 0, $RP$0$i17$ph = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$052$i$i = 0, $T$052$i$i$lcssa = 0, $T$07$i$i = 0, $T$07$i$i$lcssa = 0, $br$0$ph$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$1$i$lcssa = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rsize$331$i$ph = 0, $rst$0$i = 0, $rst$1$i = 0, $rst$1$i$lcssa = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$082$i = 0, $sp$082$i$lcssa = 0, $sp$181$i = 0, $sp$181$i$lcssa = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$0$i14$lcssa = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$2$v$3$i$lcssa = 0, $t$230$i = 0, $t$230$i$be = 0, $t$230$i$ph = 0, $tbase$253$i = 0, $tsize$0313843$i = 0, $tsize$1$i = 0, $tsize$252$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$1$i$lcssa = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, $v$332$i$ph = 0, label = 0, $964$looptemp = 0;
 do if ($bytes >>> 0 < 245) {
  if ($bytes >>> 0 < 11) $5 = 16; else $5 = $bytes + 11 & -8;
  $4 = $5 >>> 3;
  $6 = HEAP32[10516] | 0;
  $7 = $6 >>> $4;
  if ($7 & 3) {
   $12 = ($7 & 1 ^ 1) + $4 | 0;
   $13 = $12 << 1;
   $14 = 42104 + ($13 << 2) | 0;
   $15 = 42104 + ($13 + 2 << 2) | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($14 | 0) == ($18 | 0)) HEAP32[10516] = $6 & ~(1 << $12); else {
    if ($18 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
    $25 = $18 + 12 | 0;
    if ((HEAP32[$25 >> 2] | 0) == ($16 | 0)) {
     HEAP32[$25 >> 2] = $14;
     HEAP32[$15 >> 2] = $18;
     break;
    } else _abort();
   } while (0);
   $28 = $12 << 3;
   HEAP32[$16 + 4 >> 2] = $28 | 3;
   $31 = $16 + ($28 | 4) | 0;
   HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
   $mem$0 = $17;
   return $mem$0 | 0;
  }
  $34 = HEAP32[10518] | 0;
  if ($5 >>> 0 > $34 >>> 0) {
   if ($7) {
    $38 = 2 << $4;
    $41 = $7 << $4 & ($38 | 0 - $38);
    $44 = ($41 & 0 - $41) + -1 | 0;
    $46 = $44 >>> 12 & 16;
    $47 = $44 >>> $46;
    $49 = $47 >>> 5 & 8;
    $51 = $47 >>> $49;
    $53 = $51 >>> 2 & 4;
    $55 = $51 >>> $53;
    $57 = $55 >>> 1 & 2;
    $59 = $55 >>> $57;
    $61 = $59 >>> 1 & 1;
    $64 = ($49 | $46 | $53 | $57 | $61) + ($59 >>> $61) | 0;
    $65 = $64 << 1;
    $66 = 42104 + ($65 << 2) | 0;
    $67 = 42104 + ($65 + 2 << 2) | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    $69 = $68 + 8 | 0;
    $70 = HEAP32[$69 >> 2] | 0;
    do if (($66 | 0) == ($70 | 0)) {
     HEAP32[10516] = $6 & ~(1 << $64);
     $88 = $34;
    } else {
     if ($70 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
     $77 = $70 + 12 | 0;
     if ((HEAP32[$77 >> 2] | 0) == ($68 | 0)) {
      HEAP32[$77 >> 2] = $66;
      HEAP32[$67 >> 2] = $70;
      $88 = HEAP32[10518] | 0;
      break;
     } else _abort();
    } while (0);
    $80 = $64 << 3;
    $81 = $80 - $5 | 0;
    HEAP32[$68 + 4 >> 2] = $5 | 3;
    $84 = $68 + $5 | 0;
    HEAP32[$68 + ($5 | 4) >> 2] = $81 | 1;
    HEAP32[$68 + $80 >> 2] = $81;
    if ($88) {
     $90 = HEAP32[10521] | 0;
     $91 = $88 >>> 3;
     $92 = $91 << 1;
     $93 = 42104 + ($92 << 2) | 0;
     $94 = HEAP32[10516] | 0;
     $95 = 1 << $91;
     if (!($94 & $95)) {
      HEAP32[10516] = $94 | $95;
      $$pre$phiZ2D = 42104 + ($92 + 2 << 2) | 0;
      $F4$0 = $93;
     } else {
      $99 = 42104 + ($92 + 2 << 2) | 0;
      $100 = HEAP32[$99 >> 2] | 0;
      if ($100 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
       $$pre$phiZ2D = $99;
       $F4$0 = $100;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $90;
     HEAP32[$F4$0 + 12 >> 2] = $90;
     HEAP32[$90 + 8 >> 2] = $F4$0;
     HEAP32[$90 + 12 >> 2] = $93;
    }
    HEAP32[10518] = $81;
    HEAP32[10521] = $84;
    $mem$0 = $69;
    return $mem$0 | 0;
   }
   $106 = HEAP32[10517] | 0;
   if (!$106) $nb$0 = $5; else {
    $110 = ($106 & 0 - $106) + -1 | 0;
    $112 = $110 >>> 12 & 16;
    $113 = $110 >>> $112;
    $115 = $113 >>> 5 & 8;
    $117 = $113 >>> $115;
    $119 = $117 >>> 2 & 4;
    $121 = $117 >>> $119;
    $123 = $121 >>> 1 & 2;
    $125 = $121 >>> $123;
    $127 = $125 >>> 1 & 1;
    $132 = HEAP32[42368 + (($115 | $112 | $119 | $123 | $127) + ($125 >>> $127) << 2) >> 2] | 0;
    $rsize$0$i = (HEAP32[$132 + 4 >> 2] & -8) - $5 | 0;
    $t$0$i = $132;
    $v$0$i = $132;
    while (1) {
     $138 = HEAP32[$t$0$i + 16 >> 2] | 0;
     if (!$138) {
      $141 = HEAP32[$t$0$i + 20 >> 2] | 0;
      if (!$141) {
       $rsize$0$i$lcssa = $rsize$0$i;
       $v$0$i$lcssa = $v$0$i;
       break;
      } else $144 = $141;
     } else $144 = $138;
     $147 = (HEAP32[$144 + 4 >> 2] & -8) - $5 | 0;
     $148 = $147 >>> 0 < $rsize$0$i >>> 0;
     $rsize$0$i = $148 ? $147 : $rsize$0$i;
     $t$0$i = $144;
     $v$0$i = $148 ? $144 : $v$0$i;
    }
    $149 = HEAP32[10520] | 0;
    if ($v$0$i$lcssa >>> 0 < $149 >>> 0) _abort();
    $151 = $v$0$i$lcssa + $5 | 0;
    if ($v$0$i$lcssa >>> 0 >= $151 >>> 0) _abort();
    $154 = HEAP32[$v$0$i$lcssa + 24 >> 2] | 0;
    $156 = HEAP32[$v$0$i$lcssa + 12 >> 2] | 0;
    do if (($156 | 0) == ($v$0$i$lcssa | 0)) {
     $167 = $v$0$i$lcssa + 20 | 0;
     $168 = HEAP32[$167 >> 2] | 0;
     if (!$168) {
      $170 = $v$0$i$lcssa + 16 | 0;
      $171 = HEAP32[$170 >> 2] | 0;
      if (!$171) {
       $R$1$i = 0;
       break;
      } else {
       $R$0$i$ph = $171;
       $RP$0$i$ph = $170;
      }
     } else {
      $R$0$i$ph = $168;
      $RP$0$i$ph = $167;
     }
     $R$0$i = $R$0$i$ph;
     $RP$0$i = $RP$0$i$ph;
     while (1) {
      $173 = $R$0$i + 20 | 0;
      $174 = HEAP32[$173 >> 2] | 0;
      if (!$174) {
       $176 = $R$0$i + 16 | 0;
       $177 = HEAP32[$176 >> 2] | 0;
       if (!$177) {
        $R$0$i$lcssa = $R$0$i;
        $RP$0$i$lcssa = $RP$0$i;
        break;
       } else {
        $R$0$i$be = $177;
        $RP$0$i$be = $176;
       }
      } else {
       $R$0$i$be = $174;
       $RP$0$i$be = $173;
      }
      $R$0$i = $R$0$i$be;
      $RP$0$i = $RP$0$i$be;
     }
     if ($RP$0$i$lcssa >>> 0 < $149 >>> 0) _abort(); else {
      HEAP32[$RP$0$i$lcssa >> 2] = 0;
      $R$1$i = $R$0$i$lcssa;
      break;
     }
    } else {
     $159 = HEAP32[$v$0$i$lcssa + 8 >> 2] | 0;
     if ($159 >>> 0 < $149 >>> 0) _abort();
     $161 = $159 + 12 | 0;
     if ((HEAP32[$161 >> 2] | 0) != ($v$0$i$lcssa | 0)) _abort();
     $164 = $156 + 8 | 0;
     if ((HEAP32[$164 >> 2] | 0) == ($v$0$i$lcssa | 0)) {
      HEAP32[$161 >> 2] = $156;
      HEAP32[$164 >> 2] = $159;
      $R$1$i = $156;
      break;
     } else _abort();
    } while (0);
    do if ($154) {
     $182 = HEAP32[$v$0$i$lcssa + 28 >> 2] | 0;
     $183 = 42368 + ($182 << 2) | 0;
     if (($v$0$i$lcssa | 0) == (HEAP32[$183 >> 2] | 0)) {
      HEAP32[$183 >> 2] = $R$1$i;
      if (!$R$1$i) {
       HEAP32[10517] = HEAP32[10517] & ~(1 << $182);
       break;
      }
     } else {
      if ($154 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
      $192 = $154 + 16 | 0;
      if ((HEAP32[$192 >> 2] | 0) == ($v$0$i$lcssa | 0)) HEAP32[$192 >> 2] = $R$1$i; else HEAP32[$154 + 20 >> 2] = $R$1$i;
      if (!$R$1$i) break;
     }
     $197 = HEAP32[10520] | 0;
     if ($R$1$i >>> 0 < $197 >>> 0) _abort();
     HEAP32[$R$1$i + 24 >> 2] = $154;
     $201 = HEAP32[$v$0$i$lcssa + 16 >> 2] | 0;
     do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
      HEAP32[$R$1$i + 16 >> 2] = $201;
      HEAP32[$201 + 24 >> 2] = $R$1$i;
      break;
     } while (0);
     $207 = HEAP32[$v$0$i$lcssa + 20 >> 2] | 0;
     if ($207) if ($207 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i + 20 >> 2] = $207;
      HEAP32[$207 + 24 >> 2] = $R$1$i;
      break;
     }
    } while (0);
    if ($rsize$0$i$lcssa >>> 0 < 16) {
     $214 = $rsize$0$i$lcssa + $5 | 0;
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $214 | 3;
     $217 = $v$0$i$lcssa + ($214 + 4) | 0;
     HEAP32[$217 >> 2] = HEAP32[$217 >> 2] | 1;
    } else {
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $5 | 3;
     HEAP32[$v$0$i$lcssa + ($5 | 4) >> 2] = $rsize$0$i$lcssa | 1;
     HEAP32[$v$0$i$lcssa + ($rsize$0$i$lcssa + $5) >> 2] = $rsize$0$i$lcssa;
     $225 = HEAP32[10518] | 0;
     if ($225) {
      $227 = HEAP32[10521] | 0;
      $228 = $225 >>> 3;
      $229 = $228 << 1;
      $230 = 42104 + ($229 << 2) | 0;
      $231 = HEAP32[10516] | 0;
      $232 = 1 << $228;
      if (!($231 & $232)) {
       HEAP32[10516] = $231 | $232;
       $$pre$phi$iZ2D = 42104 + ($229 + 2 << 2) | 0;
       $F1$0$i = $230;
      } else {
       $236 = 42104 + ($229 + 2 << 2) | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ($237 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
        $$pre$phi$iZ2D = $236;
        $F1$0$i = $237;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $227;
      HEAP32[$F1$0$i + 12 >> 2] = $227;
      HEAP32[$227 + 8 >> 2] = $F1$0$i;
      HEAP32[$227 + 12 >> 2] = $230;
     }
     HEAP32[10518] = $rsize$0$i$lcssa;
     HEAP32[10521] = $151;
    }
    $mem$0 = $v$0$i$lcssa + 8 | 0;
    return $mem$0 | 0;
   }
  } else $nb$0 = $5;
 } else if ($bytes >>> 0 > 4294967231) $nb$0 = -1; else {
  $245 = $bytes + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[10517] | 0;
  if (!$247) $nb$0 = $246; else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $idx$0$i = 0; else if ($246 >>> 0 > 16777215) $idx$0$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $idx$0$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[42368 + ($idx$0$i << 2) >> 2] | 0;
   do if (!$276) {
    $rsize$2$i = $249;
    $t$1$i = 0;
    $v$2$i = 0;
    label = 93;
   } else {
    if (($idx$0$i | 0) == 31) $282 = 0; else $282 = 25 - ($idx$0$i >>> 1) | 0;
    $rsize$0$i15 = $249;
    $rst$0$i = 0;
    $sizebits$0$i = $246 << $282;
    $t$0$i14 = $276;
    $v$0$i16 = 0;
    while (1) {
     $285 = HEAP32[$t$0$i14 + 4 >> 2] & -8;
     $286 = $285 - $246 | 0;
     if ($286 >>> 0 < $rsize$0$i15 >>> 0) if (($285 | 0) == ($246 | 0)) {
      $$lcssa174 = $286;
      $t$0$i14$lcssa = $t$0$i14;
      label = 97;
      break;
     } else {
      $rsize$1$i = $286;
      $v$1$i = $t$0$i14;
     } else {
      $rsize$1$i = $rsize$0$i15;
      $v$1$i = $v$0$i16;
     }
     $290 = HEAP32[$t$0$i14 + 20 >> 2] | 0;
     $t$0$i14 = HEAP32[$t$0$i14 + ($sizebits$0$i >>> 31 << 2) + 16 >> 2] | 0;
     $rst$1$i = ($290 | 0) == 0 | ($290 | 0) == ($t$0$i14 | 0) ? $rst$0$i : $290;
     if (!$t$0$i14) {
      $rsize$1$i$lcssa = $rsize$1$i;
      $rst$1$i$lcssa = $rst$1$i;
      $v$1$i$lcssa = $v$1$i;
      label = 92;
      break;
     } else {
      $rsize$0$i15 = $rsize$1$i;
      $rst$0$i = $rst$1$i;
      $sizebits$0$i = $sizebits$0$i << 1;
      $v$0$i16 = $v$1$i;
     }
    }
    if ((label | 0) == 92) {
     $rsize$2$i = $rsize$1$i$lcssa;
     $t$1$i = $rst$1$i$lcssa;
     $v$2$i = $v$1$i$lcssa;
     label = 93;
     break;
    } else if ((label | 0) == 97) {
     $rsize$331$i$ph = $$lcssa174;
     $t$230$i$ph = $t$0$i14$lcssa;
     $v$332$i$ph = $t$0$i14$lcssa;
     label = 98;
     break;
    }
   } while (0);
   if ((label | 0) == 93) {
    if (($t$1$i | 0) == 0 & ($v$2$i | 0) == 0) {
     $300 = 2 << $idx$0$i;
     $303 = $247 & ($300 | 0 - $300);
     if (!$303) {
      $nb$0 = $246;
      break;
     }
     $307 = ($303 & 0 - $303) + -1 | 0;
     $309 = $307 >>> 12 & 16;
     $310 = $307 >>> $309;
     $312 = $310 >>> 5 & 8;
     $314 = $310 >>> $312;
     $316 = $314 >>> 2 & 4;
     $318 = $314 >>> $316;
     $320 = $318 >>> 1 & 2;
     $322 = $318 >>> $320;
     $324 = $322 >>> 1 & 1;
     $t$2$ph$i = HEAP32[42368 + (($312 | $309 | $316 | $320 | $324) + ($322 >>> $324) << 2) >> 2] | 0;
    } else $t$2$ph$i = $t$1$i;
    if (!$t$2$ph$i) {
     $rsize$3$lcssa$i = $rsize$2$i;
     $v$3$lcssa$i = $v$2$i;
    } else {
     $rsize$331$i$ph = $rsize$2$i;
     $t$230$i$ph = $t$2$ph$i;
     $v$332$i$ph = $v$2$i;
     label = 98;
    }
   }
   if ((label | 0) == 98) {
    $rsize$331$i = $rsize$331$i$ph;
    $t$230$i = $t$230$i$ph;
    $v$332$i = $v$332$i$ph;
    while (1) {
     $334 = (HEAP32[$t$230$i + 4 >> 2] & -8) - $246 | 0;
     $335 = $334 >>> 0 < $rsize$331$i >>> 0;
     $$rsize$3$i = $335 ? $334 : $rsize$331$i;
     $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
     $337 = HEAP32[$t$230$i + 16 >> 2] | 0;
     if (!$337) {
      $340 = HEAP32[$t$230$i + 20 >> 2] | 0;
      if (!$340) {
       $$rsize$3$i$lcssa = $$rsize$3$i;
       $t$2$v$3$i$lcssa = $t$2$v$3$i;
       break;
      } else $t$230$i$be = $340;
     } else $t$230$i$be = $337;
     $rsize$331$i = $$rsize$3$i;
     $t$230$i = $t$230$i$be;
     $v$332$i = $t$2$v$3$i;
    }
    $rsize$3$lcssa$i = $$rsize$3$i$lcssa;
    $v$3$lcssa$i = $t$2$v$3$i$lcssa;
   }
   if (!$v$3$lcssa$i) $nb$0 = $246; else if ($rsize$3$lcssa$i >>> 0 < ((HEAP32[10518] | 0) - $246 | 0) >>> 0) {
    $346 = HEAP32[10520] | 0;
    if ($v$3$lcssa$i >>> 0 < $346 >>> 0) _abort();
    $348 = $v$3$lcssa$i + $246 | 0;
    if ($v$3$lcssa$i >>> 0 >= $348 >>> 0) _abort();
    $351 = HEAP32[$v$3$lcssa$i + 24 >> 2] | 0;
    $353 = HEAP32[$v$3$lcssa$i + 12 >> 2] | 0;
    do if (($353 | 0) == ($v$3$lcssa$i | 0)) {
     $364 = $v$3$lcssa$i + 20 | 0;
     $365 = HEAP32[$364 >> 2] | 0;
     if (!$365) {
      $367 = $v$3$lcssa$i + 16 | 0;
      $368 = HEAP32[$367 >> 2] | 0;
      if (!$368) {
       $R$1$i20 = 0;
       break;
      } else {
       $R$0$i18$ph = $368;
       $RP$0$i17$ph = $367;
      }
     } else {
      $R$0$i18$ph = $365;
      $RP$0$i17$ph = $364;
     }
     $R$0$i18 = $R$0$i18$ph;
     $RP$0$i17 = $RP$0$i17$ph;
     while (1) {
      $370 = $R$0$i18 + 20 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if (!$371) {
       $373 = $R$0$i18 + 16 | 0;
       $374 = HEAP32[$373 >> 2] | 0;
       if (!$374) {
        $R$0$i18$lcssa = $R$0$i18;
        $RP$0$i17$lcssa = $RP$0$i17;
        break;
       } else {
        $R$0$i18$be = $374;
        $RP$0$i17$be = $373;
       }
      } else {
       $R$0$i18$be = $371;
       $RP$0$i17$be = $370;
      }
      $R$0$i18 = $R$0$i18$be;
      $RP$0$i17 = $RP$0$i17$be;
     }
     if ($RP$0$i17$lcssa >>> 0 < $346 >>> 0) _abort(); else {
      HEAP32[$RP$0$i17$lcssa >> 2] = 0;
      $R$1$i20 = $R$0$i18$lcssa;
      break;
     }
    } else {
     $356 = HEAP32[$v$3$lcssa$i + 8 >> 2] | 0;
     if ($356 >>> 0 < $346 >>> 0) _abort();
     $358 = $356 + 12 | 0;
     if ((HEAP32[$358 >> 2] | 0) != ($v$3$lcssa$i | 0)) _abort();
     $361 = $353 + 8 | 0;
     if ((HEAP32[$361 >> 2] | 0) == ($v$3$lcssa$i | 0)) {
      HEAP32[$358 >> 2] = $353;
      HEAP32[$361 >> 2] = $356;
      $R$1$i20 = $353;
      break;
     } else _abort();
    } while (0);
    do if ($351) {
     $379 = HEAP32[$v$3$lcssa$i + 28 >> 2] | 0;
     $380 = 42368 + ($379 << 2) | 0;
     if (($v$3$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
      HEAP32[$380 >> 2] = $R$1$i20;
      if (!$R$1$i20) {
       HEAP32[10517] = HEAP32[10517] & ~(1 << $379);
       break;
      }
     } else {
      if ($351 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
      $389 = $351 + 16 | 0;
      if ((HEAP32[$389 >> 2] | 0) == ($v$3$lcssa$i | 0)) HEAP32[$389 >> 2] = $R$1$i20; else HEAP32[$351 + 20 >> 2] = $R$1$i20;
      if (!$R$1$i20) break;
     }
     $394 = HEAP32[10520] | 0;
     if ($R$1$i20 >>> 0 < $394 >>> 0) _abort();
     HEAP32[$R$1$i20 + 24 >> 2] = $351;
     $398 = HEAP32[$v$3$lcssa$i + 16 >> 2] | 0;
     do if ($398) if ($398 >>> 0 < $394 >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 16 >> 2] = $398;
      HEAP32[$398 + 24 >> 2] = $R$1$i20;
      break;
     } while (0);
     $404 = HEAP32[$v$3$lcssa$i + 20 >> 2] | 0;
     if ($404) if ($404 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 20 >> 2] = $404;
      HEAP32[$404 + 24 >> 2] = $R$1$i20;
      break;
     }
    } while (0);
    L98 : do if ($rsize$3$lcssa$i >>> 0 < 16) {
     $411 = $rsize$3$lcssa$i + $246 | 0;
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $411 | 3;
     $414 = $v$3$lcssa$i + ($411 + 4) | 0;
     HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
    } else {
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$v$3$lcssa$i + ($246 | 4) >> 2] = $rsize$3$lcssa$i | 1;
     HEAP32[$v$3$lcssa$i + ($rsize$3$lcssa$i + $246) >> 2] = $rsize$3$lcssa$i;
     $422 = $rsize$3$lcssa$i >>> 3;
     if ($rsize$3$lcssa$i >>> 0 < 256) {
      $424 = $422 << 1;
      $425 = 42104 + ($424 << 2) | 0;
      $426 = HEAP32[10516] | 0;
      $427 = 1 << $422;
      if (!($426 & $427)) {
       HEAP32[10516] = $426 | $427;
       $$pre$phi$i26Z2D = 42104 + ($424 + 2 << 2) | 0;
       $F5$0$i = $425;
      } else {
       $431 = 42104 + ($424 + 2 << 2) | 0;
       $432 = HEAP32[$431 >> 2] | 0;
       if ($432 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
        $$pre$phi$i26Z2D = $431;
        $F5$0$i = $432;
       }
      }
      HEAP32[$$pre$phi$i26Z2D >> 2] = $348;
      HEAP32[$F5$0$i + 12 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $F5$0$i;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $425;
      break;
     }
     $438 = $rsize$3$lcssa$i >>> 8;
     if (!$438) $I7$0$i = 0; else if ($rsize$3$lcssa$i >>> 0 > 16777215) $I7$0$i = 31; else {
      $443 = ($438 + 1048320 | 0) >>> 16 & 8;
      $444 = $438 << $443;
      $447 = ($444 + 520192 | 0) >>> 16 & 4;
      $449 = $444 << $447;
      $452 = ($449 + 245760 | 0) >>> 16 & 2;
      $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
      $I7$0$i = $rsize$3$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
     }
     $463 = 42368 + ($I7$0$i << 2) | 0;
     HEAP32[$v$3$lcssa$i + ($246 + 28) >> 2] = $I7$0$i;
     HEAP32[$v$3$lcssa$i + ($246 + 20) >> 2] = 0;
     HEAP32[$v$3$lcssa$i + ($246 + 16) >> 2] = 0;
     $467 = HEAP32[10517] | 0;
     $468 = 1 << $I7$0$i;
     if (!($467 & $468)) {
      HEAP32[10517] = $467 | $468;
      HEAP32[$463 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $463;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
      break;
     }
     $475 = HEAP32[$463 >> 2] | 0;
     if (($I7$0$i | 0) == 31) $484 = 0; else $484 = 25 - ($I7$0$i >>> 1) | 0;
     do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) $T$0$lcssa$i = $475; else {
      $K12$029$i = $rsize$3$lcssa$i << $484;
      $T$028$i = $475;
      while (1) {
       $492 = $T$028$i + ($K12$029$i >>> 31 << 2) + 16 | 0;
       $487 = HEAP32[$492 >> 2] | 0;
       if (!$487) {
        $$lcssa169 = $492;
        $T$028$i$lcssa = $T$028$i;
        break;
       }
       if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) {
        $$lcssa172 = $487;
        label = 164;
        break;
       } else {
        $K12$029$i = $K12$029$i << 1;
        $T$028$i = $487;
       }
      }
      if ((label | 0) == 164) {
       $T$0$lcssa$i = $$lcssa172;
       break;
      }
      if ($$lcssa169 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
       HEAP32[$$lcssa169 >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $T$028$i$lcssa;
       HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
       break L98;
      }
     } while (0);
     $499 = $T$0$lcssa$i + 8 | 0;
     $500 = HEAP32[$499 >> 2] | 0;
     $501 = HEAP32[10520] | 0;
     if ($T$0$lcssa$i >>> 0 >= $501 >>> 0 & $500 >>> 0 >= $501 >>> 0) {
      HEAP32[$500 + 12 >> 2] = $348;
      HEAP32[$499 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $500;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $T$0$lcssa$i;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $mem$0 = $v$3$lcssa$i + 8 | 0;
    return $mem$0 | 0;
   } else $nb$0 = $246;
  }
 } while (0);
 $509 = HEAP32[10518] | 0;
 if ($509 >>> 0 >= $nb$0 >>> 0) {
  $511 = $509 - $nb$0 | 0;
  $512 = HEAP32[10521] | 0;
  if ($511 >>> 0 > 15) {
   HEAP32[10521] = $512 + $nb$0;
   HEAP32[10518] = $511;
   HEAP32[$512 + ($nb$0 + 4) >> 2] = $511 | 1;
   HEAP32[$512 + $509 >> 2] = $511;
   HEAP32[$512 + 4 >> 2] = $nb$0 | 3;
  } else {
   HEAP32[10518] = 0;
   HEAP32[10521] = 0;
   HEAP32[$512 + 4 >> 2] = $509 | 3;
   $522 = $512 + ($509 + 4) | 0;
   HEAP32[$522 >> 2] = HEAP32[$522 >> 2] | 1;
  }
  $mem$0 = $512 + 8 | 0;
  return $mem$0 | 0;
 }
 $526 = HEAP32[10519] | 0;
 if ($526 >>> 0 > $nb$0 >>> 0) {
  $528 = $526 - $nb$0 | 0;
  HEAP32[10519] = $528;
  $529 = HEAP32[10522] | 0;
  HEAP32[10522] = $529 + $nb$0;
  HEAP32[$529 + ($nb$0 + 4) >> 2] = $528 | 1;
  HEAP32[$529 + 4 >> 2] = $nb$0 | 3;
  $mem$0 = $529 + 8 | 0;
  return $mem$0 | 0;
 }
 do if (!(HEAP32[10634] | 0)) {
  $538 = _sysconf(30) | 0;
  if (!($538 + -1 & $538)) {
   HEAP32[10636] = $538;
   HEAP32[10635] = $538;
   HEAP32[10637] = -1;
   HEAP32[10638] = -1;
   HEAP32[10639] = 0;
   HEAP32[10627] = 0;
   HEAP32[10634] = (_time(0) | 0) & -16 ^ 1431655768;
   break;
  } else _abort();
 } while (0);
 $545 = $nb$0 + 48 | 0;
 $546 = HEAP32[10636] | 0;
 $547 = $nb$0 + 47 | 0;
 $548 = $546 + $547 | 0;
 $549 = 0 - $546 | 0;
 $550 = $548 & $549;
 if ($550 >>> 0 <= $nb$0 >>> 0) {
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $552 = HEAP32[10626] | 0;
 if ($552) {
  $554 = HEAP32[10624] | 0;
  $555 = $554 + $550 | 0;
  if ($555 >>> 0 <= $554 >>> 0 | $555 >>> 0 > $552 >>> 0) {
   $mem$0 = 0;
   return $mem$0 | 0;
  }
 }
 L282 : do if (!(HEAP32[10627] & 4)) {
  $561 = HEAP32[10522] | 0;
  do if (!$561) label = 191; else {
   $sp$0$i$i = 42512 | 0;
   while (1) {
    $563 = HEAP32[$sp$0$i$i >> 2] | 0;
    if ($563 >>> 0 <= $561 >>> 0) {
     $565 = $sp$0$i$i + 4 | 0;
     if (($563 + (HEAP32[$565 >> 2] | 0) | 0) >>> 0 > $561 >>> 0) {
      $$lcssa165 = $sp$0$i$i;
      $$lcssa167 = $565;
      break;
     }
    }
    $sp$0$i$i = HEAP32[$sp$0$i$i + 8 >> 2] | 0;
    if (!$sp$0$i$i) {
     label = 190;
     break;
    }
   }
   if ((label | 0) == 190) {
    label = 191;
    break;
   }
   $596 = $548 - (HEAP32[10519] | 0) & $549;
   if ($596 >>> 0 < 2147483647) {
    $598 = _sbrk($596 | 0) | 0;
    if (($598 | 0) == ((HEAP32[$$lcssa165 >> 2] | 0) + (HEAP32[$$lcssa167 >> 2] | 0) | 0)) if (($598 | 0) == (-1 | 0)) $tsize$0313843$i = $596; else {
     $tbase$253$i = $598;
     $tsize$252$i = $596;
     label = 211;
     break L282;
    } else {
     $br$0$ph$i = $598;
     $ssize$1$ph$i = $596;
     label = 201;
    }
   } else $tsize$0313843$i = 0;
  } while (0);
  do if ((label | 0) == 191) {
   $572 = _sbrk(0) | 0;
   if (($572 | 0) == (-1 | 0)) $tsize$0313843$i = 0; else {
    $574 = $572;
    $575 = HEAP32[10635] | 0;
    $576 = $575 + -1 | 0;
    if (!($576 & $574)) $ssize$0$i = $550; else $ssize$0$i = $550 - $574 + ($576 + $574 & 0 - $575) | 0;
    $584 = HEAP32[10624] | 0;
    $585 = $584 + $ssize$0$i | 0;
    if ($ssize$0$i >>> 0 > $nb$0 >>> 0 & $ssize$0$i >>> 0 < 2147483647) {
     $588 = HEAP32[10626] | 0;
     if ($588) if ($585 >>> 0 <= $584 >>> 0 | $585 >>> 0 > $588 >>> 0) {
      $tsize$0313843$i = 0;
      break;
     }
     $592 = _sbrk($ssize$0$i | 0) | 0;
     if (($592 | 0) == ($572 | 0)) {
      $tbase$253$i = $572;
      $tsize$252$i = $ssize$0$i;
      label = 211;
      break L282;
     } else {
      $br$0$ph$i = $592;
      $ssize$1$ph$i = $ssize$0$i;
      label = 201;
     }
    } else $tsize$0313843$i = 0;
   }
  } while (0);
  L306 : do if ((label | 0) == 201) {
   $604 = 0 - $ssize$1$ph$i | 0;
   do if ($545 >>> 0 > $ssize$1$ph$i >>> 0 & ($ssize$1$ph$i >>> 0 < 2147483647 & ($br$0$ph$i | 0) != (-1 | 0))) {
    $608 = HEAP32[10636] | 0;
    $612 = $547 - $ssize$1$ph$i + $608 & 0 - $608;
    if ($612 >>> 0 < 2147483647) if ((_sbrk($612 | 0) | 0) == (-1 | 0)) {
     _sbrk($604 | 0) | 0;
     $tsize$0313843$i = 0;
     break L306;
    } else {
     $ssize$2$i = $612 + $ssize$1$ph$i | 0;
     break;
    } else $ssize$2$i = $ssize$1$ph$i;
   } else $ssize$2$i = $ssize$1$ph$i; while (0);
   if (($br$0$ph$i | 0) == (-1 | 0)) $tsize$0313843$i = 0; else {
    $tbase$253$i = $br$0$ph$i;
    $tsize$252$i = $ssize$2$i;
    label = 211;
    break L282;
   }
  } while (0);
  HEAP32[10627] = HEAP32[10627] | 4;
  $tsize$1$i = $tsize$0313843$i;
  label = 208;
 } else {
  $tsize$1$i = 0;
  label = 208;
 } while (0);
 if ((label | 0) == 208) if ($550 >>> 0 < 2147483647) {
  $621 = _sbrk($550 | 0) | 0;
  $622 = _sbrk(0) | 0;
  if ($621 >>> 0 < $622 >>> 0 & (($621 | 0) != (-1 | 0) & ($622 | 0) != (-1 | 0))) {
   $628 = $622 - $621 | 0;
   $630 = $628 >>> 0 > ($nb$0 + 40 | 0) >>> 0;
   if ($630) {
    $tbase$253$i = $621;
    $tsize$252$i = $630 ? $628 : $tsize$1$i;
    label = 211;
   }
  }
 }
 if ((label | 0) == 211) {
  $632 = (HEAP32[10624] | 0) + $tsize$252$i | 0;
  HEAP32[10624] = $632;
  if ($632 >>> 0 > (HEAP32[10625] | 0) >>> 0) HEAP32[10625] = $632;
  $635 = HEAP32[10522] | 0;
  L325 : do if (!$635) {
   $637 = HEAP32[10520] | 0;
   if (($637 | 0) == 0 | $tbase$253$i >>> 0 < $637 >>> 0) HEAP32[10520] = $tbase$253$i;
   HEAP32[10628] = $tbase$253$i;
   HEAP32[10629] = $tsize$252$i;
   HEAP32[10631] = 0;
   HEAP32[10525] = HEAP32[10634];
   HEAP32[10524] = -1;
   $i$02$i$i = 0;
   do {
    $641 = $i$02$i$i << 1;
    $642 = 42104 + ($641 << 2) | 0;
    HEAP32[42104 + ($641 + 3 << 2) >> 2] = $642;
    HEAP32[42104 + ($641 + 2 << 2) >> 2] = $642;
    $i$02$i$i = $i$02$i$i + 1 | 0;
   } while (($i$02$i$i | 0) != 32);
   $648 = $tbase$253$i + 8 | 0;
   if (!($648 & 7)) $654 = 0; else $654 = 0 - $648 & 7;
   $655 = $tsize$252$i + -40 - $654 | 0;
   HEAP32[10522] = $tbase$253$i + $654;
   HEAP32[10519] = $655;
   HEAP32[$tbase$253$i + ($654 + 4) >> 2] = $655 | 1;
   HEAP32[$tbase$253$i + ($tsize$252$i + -36) >> 2] = 40;
   HEAP32[10523] = HEAP32[10638];
  } else {
   $sp$082$i = 42512 | 0;
   while (1) {
    $660 = HEAP32[$sp$082$i >> 2] | 0;
    $661 = $sp$082$i + 4 | 0;
    $662 = HEAP32[$661 >> 2] | 0;
    if (($tbase$253$i | 0) == ($660 + $662 | 0)) {
     $$lcssa159 = $660;
     $$lcssa161 = $661;
     $$lcssa163 = $662;
     $sp$082$i$lcssa = $sp$082$i;
     label = 224;
     break;
    }
    $sp$082$i = HEAP32[$sp$082$i + 8 >> 2] | 0;
    if (!$sp$082$i) {
     label = 229;
     break;
    }
   }
   if ((label | 0) == 224) {
    if (!(HEAP32[$sp$082$i$lcssa + 12 >> 2] & 8)) if ($635 >>> 0 < $tbase$253$i >>> 0 & $635 >>> 0 >= $$lcssa159 >>> 0) {
     HEAP32[$$lcssa161 >> 2] = $$lcssa163 + $tsize$252$i;
     $676 = (HEAP32[10519] | 0) + $tsize$252$i | 0;
     $678 = $635 + 8 | 0;
     if (!($678 & 7)) $684 = 0; else $684 = 0 - $678 & 7;
     $685 = $676 - $684 | 0;
     HEAP32[10522] = $635 + $684;
     HEAP32[10519] = $685;
     HEAP32[$635 + ($684 + 4) >> 2] = $685 | 1;
     HEAP32[$635 + ($676 + 4) >> 2] = 40;
     HEAP32[10523] = HEAP32[10638];
     break;
    }
   } else if ((label | 0) == 229) {}
   $690 = HEAP32[10520] | 0;
   if ($tbase$253$i >>> 0 < $690 >>> 0) {
    HEAP32[10520] = $tbase$253$i;
    $755 = $tbase$253$i;
   } else $755 = $690;
   $692 = $tbase$253$i + $tsize$252$i | 0;
   $sp$181$i = 42512 | 0;
   while (1) {
    if ((HEAP32[$sp$181$i >> 2] | 0) == ($692 | 0)) {
     $$lcssa156 = $sp$181$i;
     $sp$181$i$lcssa = $sp$181$i;
     label = 235;
     break;
    }
    $sp$181$i = HEAP32[$sp$181$i + 8 >> 2] | 0;
    if (!$sp$181$i) {
     label = 236;
     break;
    }
   }
   if ((label | 0) == 235) {
    if (!(HEAP32[$sp$181$i$lcssa + 12 >> 2] & 8)) {
     HEAP32[$$lcssa156 >> 2] = $tbase$253$i;
     $702 = $sp$181$i$lcssa + 4 | 0;
     HEAP32[$702 >> 2] = (HEAP32[$702 >> 2] | 0) + $tsize$252$i;
     $706 = $tbase$253$i + 8 | 0;
     if (!($706 & 7)) $712 = 0; else $712 = 0 - $706 & 7;
     $714 = $tbase$253$i + ($tsize$252$i + 8) | 0;
     if (!($714 & 7)) $719 = 0; else $719 = 0 - $714 & 7;
     $720 = $tbase$253$i + ($719 + $tsize$252$i) | 0;
     $$sum$i19$i = $712 + $nb$0 | 0;
     $724 = $tbase$253$i + $$sum$i19$i | 0;
     $725 = $720 - ($tbase$253$i + $712) - $nb$0 | 0;
     HEAP32[$tbase$253$i + ($712 + 4) >> 2] = $nb$0 | 3;
     L364 : do if (($720 | 0) == ($635 | 0)) {
      $730 = (HEAP32[10519] | 0) + $725 | 0;
      HEAP32[10519] = $730;
      HEAP32[10522] = $724;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 4) >> 2] = $730 | 1;
     } else {
      if (($720 | 0) == (HEAP32[10521] | 0)) {
       $736 = (HEAP32[10518] | 0) + $725 | 0;
       HEAP32[10518] = $736;
       HEAP32[10521] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 4) >> 2] = $736 | 1;
       HEAP32[$tbase$253$i + ($736 + $$sum$i19$i) >> 2] = $736;
       break;
      }
      $$sum2$i21$i = $tsize$252$i + 4 | 0;
      $741 = HEAP32[$tbase$253$i + ($$sum2$i21$i + $719) >> 2] | 0;
      if (($741 & 3 | 0) == 1) {
       $744 = $741 & -8;
       $745 = $741 >>> 3;
       L372 : do if ($741 >>> 0 < 256) {
        $748 = HEAP32[$tbase$253$i + (($719 | 8) + $tsize$252$i) >> 2] | 0;
        $750 = HEAP32[$tbase$253$i + ($tsize$252$i + 12 + $719) >> 2] | 0;
        $752 = 42104 + ($745 << 1 << 2) | 0;
        do if (($748 | 0) != ($752 | 0)) {
         if ($748 >>> 0 < $755 >>> 0) _abort();
         if ((HEAP32[$748 + 12 >> 2] | 0) == ($720 | 0)) break;
         _abort();
        } while (0);
        if (($750 | 0) == ($748 | 0)) {
         HEAP32[10516] = HEAP32[10516] & ~(1 << $745);
         break;
        }
        do if (($750 | 0) == ($752 | 0)) $$pre$phi59$i$iZ2D = $750 + 8 | 0; else {
         if ($750 >>> 0 < $755 >>> 0) _abort();
         $766 = $750 + 8 | 0;
         if ((HEAP32[$766 >> 2] | 0) == ($720 | 0)) {
          $$pre$phi59$i$iZ2D = $766;
          break;
         }
         _abort();
        } while (0);
        HEAP32[$748 + 12 >> 2] = $750;
        HEAP32[$$pre$phi59$i$iZ2D >> 2] = $748;
       } else {
        $771 = HEAP32[$tbase$253$i + (($719 | 24) + $tsize$252$i) >> 2] | 0;
        $773 = HEAP32[$tbase$253$i + ($tsize$252$i + 12 + $719) >> 2] | 0;
        do if (($773 | 0) == ($720 | 0)) {
         $$sum67$i$i = $719 | 16;
         $784 = $tbase$253$i + ($$sum2$i21$i + $$sum67$i$i) | 0;
         $785 = HEAP32[$784 >> 2] | 0;
         if (!$785) {
          $787 = $tbase$253$i + ($$sum67$i$i + $tsize$252$i) | 0;
          $788 = HEAP32[$787 >> 2] | 0;
          if (!$788) {
           $R$1$i$i = 0;
           break;
          } else {
           $R$0$i$i$ph = $788;
           $RP$0$i$i$ph = $787;
          }
         } else {
          $R$0$i$i$ph = $785;
          $RP$0$i$i$ph = $784;
         }
         $R$0$i$i = $R$0$i$i$ph;
         $RP$0$i$i = $RP$0$i$i$ph;
         while (1) {
          $790 = $R$0$i$i + 20 | 0;
          $791 = HEAP32[$790 >> 2] | 0;
          if (!$791) {
           $793 = $R$0$i$i + 16 | 0;
           $794 = HEAP32[$793 >> 2] | 0;
           if (!$794) {
            $R$0$i$i$lcssa = $R$0$i$i;
            $RP$0$i$i$lcssa = $RP$0$i$i;
            break;
           } else {
            $R$0$i$i$be = $794;
            $RP$0$i$i$be = $793;
           }
          } else {
           $R$0$i$i$be = $791;
           $RP$0$i$i$be = $790;
          }
          $R$0$i$i = $R$0$i$i$be;
          $RP$0$i$i = $RP$0$i$i$be;
         }
         if ($RP$0$i$i$lcssa >>> 0 < $755 >>> 0) _abort(); else {
          HEAP32[$RP$0$i$i$lcssa >> 2] = 0;
          $R$1$i$i = $R$0$i$i$lcssa;
          break;
         }
        } else {
         $776 = HEAP32[$tbase$253$i + (($719 | 8) + $tsize$252$i) >> 2] | 0;
         if ($776 >>> 0 < $755 >>> 0) _abort();
         $778 = $776 + 12 | 0;
         if ((HEAP32[$778 >> 2] | 0) != ($720 | 0)) _abort();
         $781 = $773 + 8 | 0;
         if ((HEAP32[$781 >> 2] | 0) == ($720 | 0)) {
          HEAP32[$778 >> 2] = $773;
          HEAP32[$781 >> 2] = $776;
          $R$1$i$i = $773;
          break;
         } else _abort();
        } while (0);
        if (!$771) break;
        $799 = HEAP32[$tbase$253$i + ($tsize$252$i + 28 + $719) >> 2] | 0;
        $800 = 42368 + ($799 << 2) | 0;
        do if (($720 | 0) == (HEAP32[$800 >> 2] | 0)) {
         HEAP32[$800 >> 2] = $R$1$i$i;
         if ($R$1$i$i) break;
         HEAP32[10517] = HEAP32[10517] & ~(1 << $799);
         break L372;
        } else {
         if ($771 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
         $809 = $771 + 16 | 0;
         if ((HEAP32[$809 >> 2] | 0) == ($720 | 0)) HEAP32[$809 >> 2] = $R$1$i$i; else HEAP32[$771 + 20 >> 2] = $R$1$i$i;
         if (!$R$1$i$i) break L372;
        } while (0);
        $814 = HEAP32[10520] | 0;
        if ($R$1$i$i >>> 0 < $814 >>> 0) _abort();
        HEAP32[$R$1$i$i + 24 >> 2] = $771;
        $$sum3132$i$i = $719 | 16;
        $818 = HEAP32[$tbase$253$i + ($$sum3132$i$i + $tsize$252$i) >> 2] | 0;
        do if ($818) if ($818 >>> 0 < $814 >>> 0) _abort(); else {
         HEAP32[$R$1$i$i + 16 >> 2] = $818;
         HEAP32[$818 + 24 >> 2] = $R$1$i$i;
         break;
        } while (0);
        $824 = HEAP32[$tbase$253$i + ($$sum2$i21$i + $$sum3132$i$i) >> 2] | 0;
        if (!$824) break;
        if ($824 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
         HEAP32[$R$1$i$i + 20 >> 2] = $824;
         HEAP32[$824 + 24 >> 2] = $R$1$i$i;
         break;
        }
       } while (0);
       $oldfirst$0$i$i = $tbase$253$i + (($744 | $719) + $tsize$252$i) | 0;
       $qsize$0$i$i = $744 + $725 | 0;
      } else {
       $oldfirst$0$i$i = $720;
       $qsize$0$i$i = $725;
      }
      $832 = $oldfirst$0$i$i + 4 | 0;
      HEAP32[$832 >> 2] = HEAP32[$832 >> 2] & -2;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 4) >> 2] = $qsize$0$i$i | 1;
      HEAP32[$tbase$253$i + ($qsize$0$i$i + $$sum$i19$i) >> 2] = $qsize$0$i$i;
      $838 = $qsize$0$i$i >>> 3;
      if ($qsize$0$i$i >>> 0 < 256) {
       $840 = $838 << 1;
       $841 = 42104 + ($840 << 2) | 0;
       $842 = HEAP32[10516] | 0;
       $843 = 1 << $838;
       do if (!($842 & $843)) {
        HEAP32[10516] = $842 | $843;
        $$pre$phi$i23$iZ2D = 42104 + ($840 + 2 << 2) | 0;
        $F4$0$i$i = $841;
       } else {
        $847 = 42104 + ($840 + 2 << 2) | 0;
        $848 = HEAP32[$847 >> 2] | 0;
        if ($848 >>> 0 >= (HEAP32[10520] | 0) >>> 0) {
         $$pre$phi$i23$iZ2D = $847;
         $F4$0$i$i = $848;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$$pre$phi$i23$iZ2D >> 2] = $724;
       HEAP32[$F4$0$i$i + 12 >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $F4$0$i$i;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $841;
       break;
      }
      $854 = $qsize$0$i$i >>> 8;
      do if (!$854) $I7$0$i$i = 0; else {
       if ($qsize$0$i$i >>> 0 > 16777215) {
        $I7$0$i$i = 31;
        break;
       }
       $859 = ($854 + 1048320 | 0) >>> 16 & 8;
       $860 = $854 << $859;
       $863 = ($860 + 520192 | 0) >>> 16 & 4;
       $865 = $860 << $863;
       $868 = ($865 + 245760 | 0) >>> 16 & 2;
       $873 = 14 - ($863 | $859 | $868) + ($865 << $868 >>> 15) | 0;
       $I7$0$i$i = $qsize$0$i$i >>> ($873 + 7 | 0) & 1 | $873 << 1;
      } while (0);
      $879 = 42368 + ($I7$0$i$i << 2) | 0;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 28) >> 2] = $I7$0$i$i;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 20) >> 2] = 0;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 16) >> 2] = 0;
      $883 = HEAP32[10517] | 0;
      $884 = 1 << $I7$0$i$i;
      if (!($883 & $884)) {
       HEAP32[10517] = $883 | $884;
       HEAP32[$879 >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 24) >> 2] = $879;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $724;
       break;
      }
      $891 = HEAP32[$879 >> 2] | 0;
      if (($I7$0$i$i | 0) == 31) $900 = 0; else $900 = 25 - ($I7$0$i$i >>> 1) | 0;
      do if ((HEAP32[$891 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) $T$0$lcssa$i25$i = $891; else {
       $K8$053$i$i = $qsize$0$i$i << $900;
       $T$052$i$i = $891;
       while (1) {
        $908 = $T$052$i$i + ($K8$053$i$i >>> 31 << 2) + 16 | 0;
        $903 = HEAP32[$908 >> 2] | 0;
        if (!$903) {
         $$lcssa = $908;
         $T$052$i$i$lcssa = $T$052$i$i;
         break;
        }
        if ((HEAP32[$903 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) {
         $$lcssa146 = $903;
         label = 316;
         break;
        } else {
         $K8$053$i$i = $K8$053$i$i << 1;
         $T$052$i$i = $903;
        }
       }
       if ((label | 0) == 316) {
        $T$0$lcssa$i25$i = $$lcssa146;
        break;
       }
       if ($$lcssa >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
        HEAP32[$$lcssa >> 2] = $724;
        HEAP32[$tbase$253$i + ($$sum$i19$i + 24) >> 2] = $T$052$i$i$lcssa;
        HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $724;
        HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $724;
        break L364;
       }
      } while (0);
      $915 = $T$0$lcssa$i25$i + 8 | 0;
      $916 = HEAP32[$915 >> 2] | 0;
      $917 = HEAP32[10520] | 0;
      if ($T$0$lcssa$i25$i >>> 0 >= $917 >>> 0 & $916 >>> 0 >= $917 >>> 0) {
       HEAP32[$916 + 12 >> 2] = $724;
       HEAP32[$915 >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $916;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $T$0$lcssa$i25$i;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 24) >> 2] = 0;
       break;
      } else _abort();
     } while (0);
     $mem$0 = $tbase$253$i + ($712 | 8) | 0;
     return $mem$0 | 0;
    }
   } else if ((label | 0) == 236) {}
   $sp$0$i$i$i = 42512 | 0;
   while (1) {
    $925 = HEAP32[$sp$0$i$i$i >> 2] | 0;
    if ($925 >>> 0 <= $635 >>> 0) {
     $928 = HEAP32[$sp$0$i$i$i + 4 >> 2] | 0;
     $929 = $925 + $928 | 0;
     if ($929 >>> 0 > $635 >>> 0) {
      $$lcssa152 = $925;
      $$lcssa153 = $928;
      $$lcssa154 = $929;
      break;
     }
    }
    $sp$0$i$i$i = HEAP32[$sp$0$i$i$i + 8 >> 2] | 0;
   }
   $934 = $$lcssa152 + ($$lcssa153 + -39) | 0;
   if (!($934 & 7)) $939 = 0; else $939 = 0 - $934 & 7;
   $940 = $$lcssa152 + ($$lcssa153 + -47 + $939) | 0;
   $941 = $635 + 16 | 0;
   $943 = $940 >>> 0 < $941 >>> 0 ? $635 : $940;
   $944 = $943 + 8 | 0;
   $947 = $tbase$253$i + 8 | 0;
   if (!($947 & 7)) $953 = 0; else $953 = 0 - $947 & 7;
   $954 = $tsize$252$i + -40 - $953 | 0;
   HEAP32[10522] = $tbase$253$i + $953;
   HEAP32[10519] = $954;
   HEAP32[$tbase$253$i + ($953 + 4) >> 2] = $954 | 1;
   HEAP32[$tbase$253$i + ($tsize$252$i + -36) >> 2] = 40;
   HEAP32[10523] = HEAP32[10638];
   $959 = $943 + 4 | 0;
   HEAP32[$959 >> 2] = 27;
   HEAP32[$944 + 0 >> 2] = HEAP32[10628];
   HEAP32[$944 + 4 >> 2] = HEAP32[10629];
   HEAP32[$944 + 8 >> 2] = HEAP32[10630];
   HEAP32[$944 + 12 >> 2] = HEAP32[10631];
   HEAP32[10628] = $tbase$253$i;
   HEAP32[10629] = $tsize$252$i;
   HEAP32[10631] = 0;
   HEAP32[10630] = $944;
   $960 = $943 + 28 | 0;
   HEAP32[$960 >> 2] = 7;
   if (($943 + 32 | 0) >>> 0 < $$lcssa154 >>> 0) {
    $964 = $960;
    do {
     $964$looptemp = $964;
     $964 = $964 + 4 | 0;
     HEAP32[$964 >> 2] = 7;
    } while (($964$looptemp + 8 | 0) >>> 0 < $$lcssa154 >>> 0);
   }
   if (($943 | 0) != ($635 | 0)) {
    $970 = $943 - $635 | 0;
    HEAP32[$959 >> 2] = HEAP32[$959 >> 2] & -2;
    HEAP32[$635 + 4 >> 2] = $970 | 1;
    HEAP32[$943 >> 2] = $970;
    $975 = $970 >>> 3;
    if ($970 >>> 0 < 256) {
     $977 = $975 << 1;
     $978 = 42104 + ($977 << 2) | 0;
     $979 = HEAP32[10516] | 0;
     $980 = 1 << $975;
     do if (!($979 & $980)) {
      HEAP32[10516] = $979 | $980;
      $$pre$phi$i$iZ2D = 42104 + ($977 + 2 << 2) | 0;
      $F$0$i$i = $978;
     } else {
      $984 = 42104 + ($977 + 2 << 2) | 0;
      $985 = HEAP32[$984 >> 2] | 0;
      if ($985 >>> 0 >= (HEAP32[10520] | 0) >>> 0) {
       $$pre$phi$i$iZ2D = $984;
       $F$0$i$i = $985;
       break;
      }
      _abort();
     } while (0);
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $635;
     HEAP32[$F$0$i$i + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $F$0$i$i;
     HEAP32[$635 + 12 >> 2] = $978;
     break;
    }
    $991 = $970 >>> 8;
    if (!$991) $I1$0$i$i = 0; else if ($970 >>> 0 > 16777215) $I1$0$i$i = 31; else {
     $996 = ($991 + 1048320 | 0) >>> 16 & 8;
     $997 = $991 << $996;
     $1000 = ($997 + 520192 | 0) >>> 16 & 4;
     $1002 = $997 << $1000;
     $1005 = ($1002 + 245760 | 0) >>> 16 & 2;
     $1010 = 14 - ($1000 | $996 | $1005) + ($1002 << $1005 >>> 15) | 0;
     $I1$0$i$i = $970 >>> ($1010 + 7 | 0) & 1 | $1010 << 1;
    }
    $1016 = 42368 + ($I1$0$i$i << 2) | 0;
    HEAP32[$635 + 28 >> 2] = $I1$0$i$i;
    HEAP32[$635 + 20 >> 2] = 0;
    HEAP32[$941 >> 2] = 0;
    $1019 = HEAP32[10517] | 0;
    $1020 = 1 << $I1$0$i$i;
    if (!($1019 & $1020)) {
     HEAP32[10517] = $1019 | $1020;
     HEAP32[$1016 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $1016;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    }
    $1027 = HEAP32[$1016 >> 2] | 0;
    if (($I1$0$i$i | 0) == 31) $1036 = 0; else $1036 = 25 - ($I1$0$i$i >>> 1) | 0;
    do if ((HEAP32[$1027 + 4 >> 2] & -8 | 0) == ($970 | 0)) $T$0$lcssa$i$i = $1027; else {
     $K2$08$i$i = $970 << $1036;
     $T$07$i$i = $1027;
     while (1) {
      $1044 = $T$07$i$i + ($K2$08$i$i >>> 31 << 2) + 16 | 0;
      $1039 = HEAP32[$1044 >> 2] | 0;
      if (!$1039) {
       $$lcssa148 = $1044;
       $T$07$i$i$lcssa = $T$07$i$i;
       break;
      }
      if ((HEAP32[$1039 + 4 >> 2] & -8 | 0) == ($970 | 0)) {
       $$lcssa151 = $1039;
       label = 353;
       break;
      } else {
       $K2$08$i$i = $K2$08$i$i << 1;
       $T$07$i$i = $1039;
      }
     }
     if ((label | 0) == 353) {
      $T$0$lcssa$i$i = $$lcssa151;
      break;
     }
     if ($$lcssa148 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
      HEAP32[$$lcssa148 >> 2] = $635;
      HEAP32[$635 + 24 >> 2] = $T$07$i$i$lcssa;
      HEAP32[$635 + 12 >> 2] = $635;
      HEAP32[$635 + 8 >> 2] = $635;
      break L325;
     }
    } while (0);
    $1051 = $T$0$lcssa$i$i + 8 | 0;
    $1052 = HEAP32[$1051 >> 2] | 0;
    $1053 = HEAP32[10520] | 0;
    if ($T$0$lcssa$i$i >>> 0 >= $1053 >>> 0 & $1052 >>> 0 >= $1053 >>> 0) {
     HEAP32[$1052 + 12 >> 2] = $635;
     HEAP32[$1051 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $1052;
     HEAP32[$635 + 12 >> 2] = $T$0$lcssa$i$i;
     HEAP32[$635 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } while (0);
  $1060 = HEAP32[10519] | 0;
  if ($1060 >>> 0 > $nb$0 >>> 0) {
   $1062 = $1060 - $nb$0 | 0;
   HEAP32[10519] = $1062;
   $1063 = HEAP32[10522] | 0;
   HEAP32[10522] = $1063 + $nb$0;
   HEAP32[$1063 + ($nb$0 + 4) >> 2] = $1062 | 1;
   HEAP32[$1063 + 4 >> 2] = $nb$0 | 3;
   $mem$0 = $1063 + 8 | 0;
   return $mem$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $mem$0 = 0;
 return $mem$0 | 0;
}

function ___floatscan($f, $prec, $pok) {
 $f = $f | 0;
 $prec = $prec | 0;
 $pok = $pok | 0;
 var $$0 = 0.0, $$0$i27 = 0.0, $$012$i = 0, $$012$i$be = 0, $$012$i$lcssa = 0, $$013$i = 0, $$01335$i = 0, $$01336$i = 0, $$07$i = 0, $$0711$i = 0, $$0712$i = 0, $$1$be$i = 0, $$1$be$i$lcssa = 0, $$1$ph$i = 0, $$2$i = 0, $$21$i = 0, $$3$be$i = 0, $$3$be$i$lcssa = 0, $$3$lcssa$i = 0, $$3131$i = 0, $$in = 0, $$lcssa = 0, $$lcssa190 = 0, $$lcssa191 = 0, $$lcssa201 = 0, $$lcssa202 = 0, $$lcssa205 = 0, $$lcssa207 = 0, $$lcssa207$lcssa = 0, $$lcssa208 = 0, $$lcssa208$lcssa = 0, $$lcssa211 = 0, $$lcssa214 = 0, $$lcssa215 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa232 = 0, $$lcssa59$i = 0, $$old$i = 0, $$pn$i = 0.0, $$pre$i18 = 0, $$pre$phi$iZ2D = 0.0, $$sink$off0$us$i = 0, $$sink$off0$us102$i = 0, $0 = 0, $1 = 0, $109 = 0, $117 = 0, $119 = 0, $126 = 0, $133 = 0, $141 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $178 = 0.0, $185 = 0, $187 = 0, $196 = 0, $2 = 0, $200 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $218 = 0, $219 = 0, $220 = 0, $230 = 0, $231 = 0, $244 = 0, $246 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $265 = 0, $267 = 0, $279 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $289 = 0, $29 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $304 = 0.0, $316 = 0.0, $324 = 0, $325 = 0, $332 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $352 = 0, $354 = 0, $355 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $364 = 0, $369 = 0, $370 = 0, $374 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $394 = 0, $395 = 0, $404 = 0, $405 = 0, $406 = 0, $414 = 0, $418 = 0, $42 = 0, $420 = 0, $421 = 0, $423 = 0, $436 = 0, $438 = 0, $448 = 0, $450 = 0, $462 = 0, $463 = 0, $464 = 0, $486 = 0, $498 = 0, $502 = 0, $505 = 0, $507 = 0, $508 = 0, $509 = 0, $512 = 0, $513 = 0, $526 = 0, $529 = 0, $531 = 0, $533 = 0, $534 = 0, $54 = 0, $540 = 0, $542 = 0, $547 = 0, $550 = 0, $555 = 0, $557 = 0, $559 = 0, $560 = 0, $566 = 0, $568 = 0, $573 = 0, $576 = 0, $580 = 0, $583 = 0, $588 = 0, $592 = 0, $593 = 0, $595 = 0, $599 = 0, $601 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $610 = 0, $611 = 0, $619 = 0, $625 = 0, $63 = 0, $632 = 0, $634 = 0.0, $636 = 0, $638 = 0, $643 = 0.0, $644 = 0.0, $647 = 0.0, $651 = 0, $654 = 0, $661 = 0.0, $679 = 0.0, $681 = 0, $697 = 0, $70 = 0, $707 = 0, $710 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $84 = 0, $9 = 0, $93 = 0, $a$0$lcssa186$i = 0, $a$0110$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph47$i = 0, $a$2$ph47$i$lcssa = 0, $a$2$ph47$i$lcssa219 = 0, $a$2$ph47$i$ph = 0, $a$2$ph47$i220 = 0, $a$3$i = 0, $a$3$i$lcssa = 0, $a$3$i$lcssa198 = 0, $a$3$i$lcssa199 = 0, $a$3$i$ph = 0, $a$3$i200 = 0, $a$3$ph$i = 0, $a$487$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i24 = 0.0, $bits$0$ph = 0, $c$0 = 0, $c$0$i = 0, $c$0$i$be = 0, $c$0$i$lcssa = 0, $c$0$i$ph = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$186 = 0, $c$2 = 0, $c$2$i = 0, $c$2$i$be = 0, $c$2$i$ph = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0112$i = 0, $carry1$0$us$i = 0, $carry1$0$us98$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us$i$lcssa$lcssa = 0, $carry1$1$us103$i = 0, $carry1$1$us103$i$lcssa = 0, $carry1$1$us103$i$lcssa$lcssa = 0, $carry3$090$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$033$i = 0, $denormal$034$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$ph$i$lcssa = 0, $e2$0$us$i = 0, $e2$0$us93$i = 0, $e2$0$us93$i$lcssa = 0, $e2$1$i = 0, $e2$1$i$lcssa = 0, $e2$1$i$lcssa195 = 0, $e2$1$i$ph = 0, $e2$1$i197 = 0, $e2$1$ph$i = 0, $e2$1$ph$i$ph = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa = 0, $gotdig$0$i$lcssa193 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa = 0, $gotdig$0$i12$lcssa230 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i$ph = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3127$i = 0, $gotdig$3127$i$lcssa = 0, $gotdig$4$i = 0, $gotdig$4$i$lcssa = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i$ph = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1128$i = 0, $gotrad$2$i = 0, $gotrad$2$i$lcssa = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$085 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0130$i = 0, $j$0130$i$lcssa = 0, $j$076$i = 0, $j$077$i = 0, $j$078$i = 0, $j$2$i = 0, $j$2$i$lcssa = 0, $j$3119$i = 0, $k$0$lcssa$i = 0, $k$0129$i = 0, $k$0129$i$lcssa = 0, $k$072$i = 0, $k$073$i = 0, $k$074$i = 0, $k$2$i = 0, $k$2$i$lcssa = 0, $k$3$i = 0, $k$4111$i = 0, $k$5$in$us$i = 0, $k$5$in$us97$i = 0, $k$5$us$i = 0, $k$5$us99$i = 0, $k$688$i = 0, $lnz$0$lcssa$i = 0, $lnz$0126$i = 0, $lnz$0126$i$lcssa = 0, $lnz$066$i = 0, $lnz$067$i = 0, $lnz$068$i = 0, $lnz$2$i = 0, $lnz$2$i$lcssa = 0, $or$cond22$i = 0, $or$cond9$i = 0, $rp$0$lcssa187$i = 0, $rp$0109$i = 0, $rp$1$i19 = 0, $rp$1$i19$lcssa = 0, $rp$2$ph45$i = 0, $rp$2$ph45$i$lcssa = 0, $rp$2$ph45$i$ph = 0, $rp$3$i$ph = 0, $rp$3$ph43$i = 0, $rp$3$ph43$i$ph = 0, $rp$486$i = 0, $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$325$i = 0, $x$4$lcssa$i = 0, $x$420$i = 0, $x$5$i = 0, $x$5$i$lcssa = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i23 = 0.0, $y$2$i = 0.0, $y$2$i25 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$321$i = 0.0, $y$4$i = 0.0, $y$4$i$lcssa = 0.0, $z$0$i = 0, $z$1$ph46$i = 0, $z$1$ph46$i$lcssa = 0, $z$1$ph46$i$ph = 0, $z$1$us$i = 0, $z$1$us94$i = 0, $z$1$us94$i$lcssa = 0, $z$2$us$i = 0, $z$2$us96$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0, $z$3$us$i$lcssa$lcssa = 0, $z$3$us106$i = 0, $z$3$us106$i$lcssa = 0, $z$3$us106$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$5$ph$i$lcssa = 0, $z$5$ph$i$lcssa209 = 0, $z$5$ph$i$ph = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0, $k$4111$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x$i = sp;
 if (($prec | 0) == 1) {
  $bits$0$ph = 53;
  $emin$0$ph = -1074;
 } else if (!$prec) {
  $bits$0$ph = 24;
  $emin$0$ph = -149;
 } else if (($prec | 0) == 2) {
  $bits$0$ph = 53;
  $emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;
  return +$$0;
 }
 $0 = $f + 4 | 0;
 $1 = $f + 100 | 0;
 do {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $2 + 1;
   $9 = HEAPU8[$2 >> 0] | 0;
  } else $9 = ___shgetc($f) | 0;
 } while ((_isspace($9) | 0) != 0);
 $$lcssa232 = $9;
 do if (($$lcssa232 | 0) == 43 | ($$lcssa232 | 0) == 45) {
  $15 = 1 - ((($$lcssa232 | 0) == 45 & 1) << 1) | 0;
  $16 = HEAP32[$0 >> 2] | 0;
  if ($16 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $16 + 1;
   $c$0 = HEAPU8[$16 >> 0] | 0;
   $sign$0 = $15;
   break;
  } else {
   $c$0 = ___shgetc($f) | 0;
   $sign$0 = $15;
   break;
  }
 } else {
  $c$0 = $$lcssa232;
  $sign$0 = 1;
 } while (0);
 $c$186 = $c$0;
 $i$085 = 0;
 while (1) {
  if (($c$186 | 32 | 0) != (HEAP8[42840 + $i$085 >> 0] | 0)) {
   $c$1$lcssa = $c$186;
   $i$0$lcssa = $i$085;
   break;
  }
  do if ($i$085 >>> 0 < 7) {
   $29 = HEAP32[$0 >> 2] | 0;
   if ($29 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $29 + 1;
    $c$2 = HEAPU8[$29 >> 0] | 0;
    break;
   } else {
    $c$2 = ___shgetc($f) | 0;
    break;
   }
  } else $c$2 = $c$186; while (0);
  $36 = $i$085 + 1 | 0;
  if ($36 >>> 0 < 8) {
   $c$186 = $c$2;
   $i$085 = $36;
  } else {
   $c$1$lcssa = $c$2;
   $i$0$lcssa = $36;
   break;
  }
 }
 do if (($i$0$lcssa | 0) == 3) label = 23; else if (($i$0$lcssa | 0) != 8) {
  $39 = ($pok | 0) != 0;
  if ($39 & $i$0$lcssa >>> 0 > 3) if (($i$0$lcssa | 0) == 8) break; else {
   label = 23;
   break;
  }
  do if (!$i$0$lcssa) {
   if (($c$1$lcssa | 32 | 0) == 110) {
    $54 = HEAP32[$0 >> 2] | 0;
    if ($54 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $54 + 1;
     $c$4 = HEAPU8[$54 >> 0] | 0;
    } else $c$4 = ___shgetc($f) | 0;
    if (($c$4 | 32 | 0) != 97) break;
    $710 = HEAP32[$0 >> 2] | 0;
    if ($710 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $710 + 1;
     $c$4$1 = HEAPU8[$710 >> 0] | 0;
    } else $c$4$1 = ___shgetc($f) | 0;
    if (($c$4$1 | 32 | 0) != 110) break;
    $63 = HEAP32[$0 >> 2] | 0;
    if ($63 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $63 + 1;
     $70 = HEAPU8[$63 >> 0] | 0;
    } else $70 = ___shgetc($f) | 0;
    if (($70 | 0) != 40) {
     if (!(HEAP32[$1 >> 2] | 0)) {
      $$0 = nan;
      STACKTOP = sp;
      return +$$0;
     }
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    $i$4 = 1;
    while (1) {
     $76 = HEAP32[$0 >> 2] | 0;
     if ($76 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $76 + 1;
      $84 = HEAPU8[$76 >> 0] | 0;
     } else $84 = ___shgetc($f) | 0;
     if (!(($84 + -48 | 0) >>> 0 < 10 | ($84 + -65 | 0) >>> 0 < 26)) if (!(($84 | 0) == 95 | ($84 + -97 | 0) >>> 0 < 26)) {
      $$lcssa = $84;
      $i$4$lcssa = $i$4;
      break;
     }
     $i$4 = $i$4 + 1 | 0;
    }
    if (($$lcssa | 0) == 41) {
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    $93 = (HEAP32[$1 >> 2] | 0) == 0;
    if (!$93) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    if (!$39) {
     HEAP32[(___errno_location() | 0) >> 2] = 22;
     ___shlim($f, 0);
     $$0 = 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    if (($i$4$lcssa | 0) == 0 | $93) {
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    $$in = $i$4$lcssa;
    do {
     $$in = $$in + -1 | 0;
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    } while (($$in | 0) != 0);
    $$0 = nan;
    STACKTOP = sp;
    return +$$0;
   }
   do if (($c$1$lcssa | 0) == 48) {
    $109 = HEAP32[$0 >> 2] | 0;
    if ($109 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $109 + 1;
     $117 = HEAPU8[$109 >> 0] | 0;
    } else $117 = ___shgetc($f) | 0;
    if (($117 | 32 | 0) != 120) {
     if (!(HEAP32[$1 >> 2] | 0)) {
      $c$6 = 48;
      break;
     }
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $c$6 = 48;
     break;
    }
    $119 = HEAP32[$0 >> 2] | 0;
    if ($119 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $119 + 1;
     $c$0$i$ph = HEAPU8[$119 >> 0] | 0;
    } else $c$0$i$ph = ___shgetc($f) | 0;
    $c$0$i = $c$0$i$ph;
    $gotdig$0$i = 0;
    while (1) {
     if (($c$0$i | 0) == 46) {
      $gotdig$0$i$lcssa193 = $gotdig$0$i;
      label = 74;
      break;
     } else if (($c$0$i | 0) != 48) {
      $c$0$i$lcssa = $c$0$i;
      $gotdig$0$i$lcssa = $gotdig$0$i;
      label = 84;
      break;
     }
     $126 = HEAP32[$0 >> 2] | 0;
     if ($126 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $126 + 1;
      $c$0$i$be = HEAPU8[$126 >> 0] | 0;
     } else $c$0$i$be = ___shgetc($f) | 0;
     $c$0$i = $c$0$i$be;
     $gotdig$0$i = 1;
    }
    if ((label | 0) == 74) {
     $133 = HEAP32[$0 >> 2] | 0;
     if ($133 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $133 + 1;
      $c$1$ph$i = HEAPU8[$133 >> 0] | 0;
     } else $c$1$ph$i = ___shgetc($f) | 0;
     if (($c$1$ph$i | 0) == 48) {
      $148 = 0;
      $149 = 0;
      while (1) {
       $141 = HEAP32[$0 >> 2] | 0;
       if ($141 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $141 + 1;
        $152 = HEAPU8[$141 >> 0] | 0;
       } else $152 = ___shgetc($f) | 0;
       $150 = _i64Add($148 | 0, $149 | 0, -1, -1) | 0;
       $151 = tempRet0;
       if (($152 | 0) == 48) {
        $148 = $150;
        $149 = $151;
       } else {
        $$lcssa191 = $152;
        $721 = $150;
        $722 = $151;
        break;
       }
      }
      $719 = $721;
      $720 = $722;
      $c$2$i$ph = $$lcssa191;
      $gotdig$2$i$ph = 1;
      $gotrad$0$i$ph = 1;
     } else {
      $719 = 0;
      $720 = 0;
      $c$2$i$ph = $c$1$ph$i;
      $gotdig$2$i$ph = $gotdig$0$i$lcssa193;
      $gotrad$0$i$ph = 1;
     }
    } else if ((label | 0) == 84) {
     $719 = 0;
     $720 = 0;
     $c$2$i$ph = $c$0$i$lcssa;
     $gotdig$2$i$ph = $gotdig$0$i$lcssa;
     $gotrad$0$i$ph = 0;
    }
    $163 = 0;
    $165 = 0;
    $723 = $719;
    $724 = $720;
    $c$2$i = $c$2$i$ph;
    $gotdig$2$i = $gotdig$2$i$ph;
    $gotrad$0$i = $gotrad$0$i$ph;
    $gottail$0$i = 0;
    $scale$0$i = 1.0;
    $x$0$i = 0;
    $y$0$i = 0.0;
    L124 : while (1) {
     $154 = $c$2$i + -48 | 0;
     do if ($154 >>> 0 < 10) {
      $d$0$i = $154;
      label = 91;
     } else {
      $156 = $c$2$i | 32;
      $159 = ($c$2$i | 0) == 46;
      if (!($159 | ($156 + -97 | 0) >>> 0 < 6)) {
       $207 = $723;
       $208 = $165;
       $210 = $724;
       $211 = $163;
       $c$2$lcssa$i = $c$2$i;
       $gotdig$2$i$lcssa = $gotdig$2$i;
       $gotrad$0$i$lcssa = $gotrad$0$i;
       $x$0$i$lcssa = $x$0$i;
       $y$0$i$lcssa = $y$0$i;
       break L124;
      }
      if ($159) if (!$gotrad$0$i) {
       $725 = $165;
       $726 = $163;
       $727 = $165;
       $728 = $163;
       $gotdig$3$i = $gotdig$2$i;
       $gotrad$1$i = 1;
       $gottail$2$i = $gottail$0$i;
       $scale$2$i = $scale$0$i;
       $x$2$i = $x$0$i;
       $y$2$i = $y$0$i;
       break;
      } else {
       $207 = $723;
       $208 = $165;
       $210 = $724;
       $211 = $163;
       $c$2$lcssa$i = 46;
       $gotdig$2$i$lcssa = $gotdig$2$i;
       $gotrad$0$i$lcssa = $gotrad$0$i;
       $x$0$i$lcssa = $x$0$i;
       $y$0$i$lcssa = $y$0$i;
       break L124;
      } else {
       $d$0$i = ($c$2$i | 0) > 57 ? $156 + -87 | 0 : $154;
       label = 91;
       break;
      }
     } while (0);
     if ((label | 0) == 91) {
      label = 0;
      do if (($163 | 0) < 0 | ($163 | 0) == 0 & $165 >>> 0 < 8) {
       $gottail$1$i = $gottail$0$i;
       $scale$1$i = $scale$0$i;
       $x$1$i = $d$0$i + ($x$0$i << 4) | 0;
       $y$1$i = $y$0$i;
      } else {
       if (($163 | 0) < 0 | ($163 | 0) == 0 & $165 >>> 0 < 14) {
        $178 = $scale$0$i * .0625;
        $gottail$1$i = $gottail$0$i;
        $scale$1$i = $178;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i + $178 * +($d$0$i | 0);
        break;
       }
       if (($gottail$0$i | 0) != 0 | ($d$0$i | 0) == 0) {
        $gottail$1$i = $gottail$0$i;
        $scale$1$i = $scale$0$i;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i;
       } else {
        $gottail$1$i = 1;
        $scale$1$i = $scale$0$i;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i + $scale$0$i * .5;
       }
      } while (0);
      $185 = _i64Add($165 | 0, $163 | 0, 1, 0) | 0;
      $725 = $723;
      $726 = $724;
      $727 = $185;
      $728 = tempRet0;
      $gotdig$3$i = 1;
      $gotrad$1$i = $gotrad$0$i;
      $gottail$2$i = $gottail$1$i;
      $scale$2$i = $scale$1$i;
      $x$2$i = $x$1$i;
      $y$2$i = $y$1$i;
     }
     $187 = HEAP32[$0 >> 2] | 0;
     if ($187 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $187 + 1;
      $c$2$i$be = HEAPU8[$187 >> 0] | 0;
     } else $c$2$i$be = ___shgetc($f) | 0;
     $163 = $728;
     $165 = $727;
     $723 = $725;
     $724 = $726;
     $c$2$i = $c$2$i$be;
     $gotdig$2$i = $gotdig$3$i;
     $gotrad$0$i = $gotrad$1$i;
     $gottail$0$i = $gottail$2$i;
     $scale$0$i = $scale$2$i;
     $x$0$i = $x$2$i;
     $y$0$i = $y$2$i;
    }
    if (!$gotdig$2$i$lcssa) {
     $196 = (HEAP32[$1 >> 2] | 0) == 0;
     if (!$196) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     if (!$pok) ___shlim($f, 0); else if (!$196) {
      $200 = HEAP32[$0 >> 2] | 0;
      HEAP32[$0 >> 2] = $200 + -1;
      if ($gotrad$0$i$lcssa) HEAP32[$0 >> 2] = $200 + -2;
     }
     $$0 = +($sign$0 | 0) * 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    $206 = ($gotrad$0$i$lcssa | 0) == 0;
    $209 = $206 ? $208 : $207;
    $212 = $206 ? $211 : $210;
    if (($211 | 0) < 0 | ($211 | 0) == 0 & $208 >>> 0 < 8) {
     $219 = $208;
     $220 = $211;
     $x$325$i = $x$0$i$lcssa;
     while (1) {
      $218 = $x$325$i << 4;
      $219 = _i64Add($219 | 0, $220 | 0, 1, 0) | 0;
      $220 = tempRet0;
      if (!(($220 | 0) < 0 | ($220 | 0) == 0 & $219 >>> 0 < 8)) {
       $$lcssa190 = $218;
       break;
      } else $x$325$i = $218;
     }
     $x$3$lcssa$i = $$lcssa190;
    } else $x$3$lcssa$i = $x$0$i$lcssa;
    do if (($c$2$lcssa$i | 32 | 0) == 112) {
     $230 = _scanexp($f, $pok) | 0;
     $231 = tempRet0;
     if (($230 | 0) == 0 & ($231 | 0) == -2147483648) if (!$pok) {
      ___shlim($f, 0);
      $$0 = 0.0;
      STACKTOP = sp;
      return +$$0;
     } else {
      if (!(HEAP32[$1 >> 2] | 0)) {
       $248 = 0;
       $249 = 0;
       break;
      }
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $248 = 0;
      $249 = 0;
      break;
     } else {
      $248 = $230;
      $249 = $231;
     }
    } else if (!(HEAP32[$1 >> 2] | 0)) {
     $248 = 0;
     $249 = 0;
    } else {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $248 = 0;
     $249 = 0;
    } while (0);
    $244 = _bitshift64Shl($209 | 0, $212 | 0, 2) | 0;
    $246 = _i64Add($244 | 0, tempRet0 | 0, -32, -1) | 0;
    $250 = _i64Add($246 | 0, tempRet0 | 0, $248 | 0, $249 | 0) | 0;
    $251 = tempRet0;
    if (!$x$3$lcssa$i) {
     $$0 = +($sign$0 | 0) * 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    if (($251 | 0) > 0 | ($251 | 0) == 0 & $250 >>> 0 > (0 - $emin$0$ph | 0) >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
     STACKTOP = sp;
     return +$$0;
    }
    $265 = $emin$0$ph + -106 | 0;
    $267 = (($265 | 0) < 0) << 31 >> 31;
    if (($251 | 0) < ($267 | 0) | ($251 | 0) == ($267 | 0) & $250 >>> 0 < $265 >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
     STACKTOP = sp;
     return +$$0;
    }
    if (($x$3$lcssa$i | 0) > -1) {
     $282 = $250;
     $283 = $251;
     $x$420$i = $x$3$lcssa$i;
     $y$321$i = $y$0$i$lcssa;
     while (1) {
      $279 = $x$420$i << 1;
      if (!($y$321$i >= .5)) {
       $$pn$i = $y$321$i;
       $x$5$i = $279;
      } else {
       $$pn$i = $y$321$i + -1.0;
       $x$5$i = $279 | 1;
      }
      $y$4$i = $y$321$i + $$pn$i;
      $284 = _i64Add($282 | 0, $283 | 0, -1, -1) | 0;
      $285 = tempRet0;
      if (($x$5$i | 0) > -1) {
       $282 = $284;
       $283 = $285;
       $x$420$i = $x$5$i;
       $y$321$i = $y$4$i;
      } else {
       $729 = $284;
       $730 = $285;
       $x$5$i$lcssa = $x$5$i;
       $y$4$i$lcssa = $y$4$i;
       break;
      }
     }
     $291 = $729;
     $292 = $730;
     $x$4$lcssa$i = $x$5$i$lcssa;
     $y$3$lcssa$i = $y$4$i$lcssa;
    } else {
     $291 = $250;
     $292 = $251;
     $x$4$lcssa$i = $x$3$lcssa$i;
     $y$3$lcssa$i = $y$0$i$lcssa;
    }
    $289 = _i64Subtract(32, 0, $emin$0$ph | 0, (($emin$0$ph | 0) < 0) << 31 >> 31 | 0) | 0;
    $293 = _i64Add($291 | 0, $292 | 0, $289 | 0, tempRet0 | 0) | 0;
    $294 = tempRet0;
    if (0 > ($294 | 0) | 0 == ($294 | 0) & $bits$0$ph >>> 0 > $293 >>> 0) if (($293 | 0) < 0) {
     $$0711$i = 0;
     label = 139;
    } else {
     $$07$i = $293;
     label = 137;
    } else {
     $$07$i = $bits$0$ph;
     label = 137;
    }
    do if ((label | 0) == 137) {
     if (($$07$i | 0) < 53) {
      $$0711$i = $$07$i;
      label = 139;
      break;
     }
     $$0712$i = $$07$i;
     $$pre$phi$iZ2D = +($sign$0 | 0);
     $bias$0$i = 0.0;
    } while (0);
    if ((label | 0) == 139) {
     $304 = +($sign$0 | 0);
     $$0712$i = $$0711$i;
     $$pre$phi$iZ2D = $304;
     $bias$0$i = +_copysignl(+_scalbn(1.0, 84 - $$0711$i | 0), $304);
    }
    $or$cond9$i = ($x$4$lcssa$i & 1 | 0) == 0 & ($y$3$lcssa$i != 0.0 & ($$0712$i | 0) < 32);
    $316 = $$pre$phi$iZ2D * ($or$cond9$i ? 0.0 : $y$3$lcssa$i) + ($bias$0$i + $$pre$phi$iZ2D * +((($or$cond9$i & 1) + $x$4$lcssa$i | 0) >>> 0)) - $bias$0$i;
    if (!($316 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
    $$0 = +_scalbnl($316, $291);
    STACKTOP = sp;
    return +$$0;
   } else $c$6 = $c$1$lcssa; while (0);
   $sum$i = $emin$0$ph + $bits$0$ph | 0;
   $324 = 0 - $sum$i | 0;
   $$012$i = $c$6;
   $gotdig$0$i12 = 0;
   while (1) {
    if (($$012$i | 0) == 46) {
     $gotdig$0$i12$lcssa230 = $gotdig$0$i12;
     label = 151;
     break;
    } else if (($$012$i | 0) != 48) {
     $$012$i$lcssa = $$012$i;
     $gotdig$0$i12$lcssa = $gotdig$0$i12;
     label = 161;
     break;
    }
    $325 = HEAP32[$0 >> 2] | 0;
    if ($325 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $325 + 1;
     $$012$i$be = HEAPU8[$325 >> 0] | 0;
    } else $$012$i$be = ___shgetc($f) | 0;
    $$012$i = $$012$i$be;
    $gotdig$0$i12 = 1;
   }
   if ((label | 0) == 151) {
    $332 = HEAP32[$0 >> 2] | 0;
    if ($332 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $332 + 1;
     $$1$ph$i = HEAPU8[$332 >> 0] | 0;
    } else $$1$ph$i = ___shgetc($f) | 0;
    if (($$1$ph$i | 0) == 48) {
     $340 = 0;
     $341 = 0;
     while (1) {
      $342 = _i64Add($340 | 0, $341 | 0, -1, -1) | 0;
      $343 = tempRet0;
      $344 = HEAP32[$0 >> 2] | 0;
      if ($344 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $344 + 1;
       $$1$be$i = HEAPU8[$344 >> 0] | 0;
      } else $$1$be$i = ___shgetc($f) | 0;
      if (($$1$be$i | 0) == 48) {
       $340 = $342;
       $341 = $343;
      } else {
       $$1$be$i$lcssa = $$1$be$i;
       $733 = $342;
       $734 = $343;
       break;
      }
     }
     $$2$i = $$1$be$i$lcssa;
     $731 = $733;
     $732 = $734;
     $gotdig$2$i13 = 1;
     $gotrad$0$i14 = 1;
    } else {
     $$2$i = $$1$ph$i;
     $731 = 0;
     $732 = 0;
     $gotdig$2$i13 = $gotdig$0$i12$lcssa230;
     $gotrad$0$i14 = 1;
    }
   } else if ((label | 0) == 161) {
    $$2$i = $$012$i$lcssa;
    $731 = 0;
    $732 = 0;
    $gotdig$2$i13 = $gotdig$0$i12$lcssa;
    $gotrad$0$i14 = 0;
   }
   HEAP32[$x$i >> 2] = 0;
   $352 = $$2$i + -48 | 0;
   $354 = ($$2$i | 0) == 46;
   do if ($354 | $352 >>> 0 < 10) {
    $355 = $x$i + 496 | 0;
    $$3131$i = $$2$i;
    $358 = 0;
    $359 = 0;
    $735 = $354;
    $736 = $352;
    $737 = $731;
    $738 = $732;
    $gotdig$3127$i = $gotdig$2$i13;
    $gotrad$1128$i = $gotrad$0$i14;
    $j$0130$i = 0;
    $k$0129$i = 0;
    $lnz$0126$i = 0;
    L237 : while (1) {
     do if ($735) if (!$gotrad$1128$i) {
      $739 = $358;
      $740 = $359;
      $741 = $358;
      $742 = $359;
      $gotdig$4$i = $gotdig$3127$i;
      $gotrad$2$i = 1;
      $j$2$i = $j$0130$i;
      $k$2$i = $k$0129$i;
      $lnz$2$i = $lnz$0126$i;
     } else {
      $743 = $737;
      $744 = $738;
      $745 = $358;
      $746 = $359;
      $gotdig$3127$i$lcssa = $gotdig$3127$i;
      $j$0130$i$lcssa = $j$0130$i;
      $k$0129$i$lcssa = $k$0129$i;
      $lnz$0126$i$lcssa = $lnz$0126$i;
      label = 166;
      break L237;
     } else {
      $360 = _i64Add($358 | 0, $359 | 0, 1, 0) | 0;
      $361 = tempRet0;
      $362 = ($$3131$i | 0) != 48;
      if (($k$0129$i | 0) >= 125) {
       if (!$362) {
        $739 = $737;
        $740 = $738;
        $741 = $360;
        $742 = $361;
        $gotdig$4$i = $gotdig$3127$i;
        $gotrad$2$i = $gotrad$1128$i;
        $j$2$i = $j$0130$i;
        $k$2$i = $k$0129$i;
        $lnz$2$i = $lnz$0126$i;
        break;
       }
       HEAP32[$355 >> 2] = HEAP32[$355 >> 2] | 1;
       $739 = $737;
       $740 = $738;
       $741 = $360;
       $742 = $361;
       $gotdig$4$i = $gotdig$3127$i;
       $gotrad$2$i = $gotrad$1128$i;
       $j$2$i = $j$0130$i;
       $k$2$i = $k$0129$i;
       $lnz$2$i = $lnz$0126$i;
       break;
      }
      $364 = $x$i + ($k$0129$i << 2) | 0;
      if (!$j$0130$i) $storemerge$i = $736; else $storemerge$i = $$3131$i + -48 + ((HEAP32[$364 >> 2] | 0) * 10 | 0) | 0;
      HEAP32[$364 >> 2] = $storemerge$i;
      $369 = $j$0130$i + 1 | 0;
      $370 = ($369 | 0) == 9;
      $739 = $737;
      $740 = $738;
      $741 = $360;
      $742 = $361;
      $gotdig$4$i = 1;
      $gotrad$2$i = $gotrad$1128$i;
      $j$2$i = $370 ? 0 : $369;
      $k$2$i = ($370 & 1) + $k$0129$i | 0;
      $lnz$2$i = $362 ? $360 : $lnz$0126$i;
     } while (0);
     $374 = HEAP32[$0 >> 2] | 0;
     if ($374 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $374 + 1;
      $$3$be$i = HEAPU8[$374 >> 0] | 0;
     } else $$3$be$i = ___shgetc($f) | 0;
     $736 = $$3$be$i + -48 | 0;
     $735 = ($$3$be$i | 0) == 46;
     if (!($735 | $736 >>> 0 < 10)) {
      $$3$be$i$lcssa = $$3$be$i;
      $752 = $741;
      $753 = $742;
      $754 = $739;
      $755 = $740;
      $gotdig$4$i$lcssa = $gotdig$4$i;
      $gotrad$2$i$lcssa = $gotrad$2$i;
      $j$2$i$lcssa = $j$2$i;
      $k$2$i$lcssa = $k$2$i;
      $lnz$2$i$lcssa = $lnz$2$i;
      label = 177;
      break;
     } else {
      $$3131$i = $$3$be$i;
      $358 = $741;
      $359 = $742;
      $737 = $739;
      $738 = $740;
      $gotdig$3127$i = $gotdig$4$i;
      $gotrad$1128$i = $gotrad$2$i;
      $j$0130$i = $j$2$i;
      $k$0129$i = $k$2$i;
      $lnz$0126$i = $lnz$2$i;
     }
    }
    if ((label | 0) == 166) {
     $747 = $745;
     $748 = $746;
     $749 = $743;
     $750 = $744;
     $751 = ($gotdig$3127$i$lcssa | 0) != 0;
     $j$078$i = $j$0130$i$lcssa;
     $k$074$i = $k$0129$i$lcssa;
     $lnz$068$i = $lnz$0126$i$lcssa;
     label = 186;
     break;
    } else if ((label | 0) == 177) {
     $$3$lcssa$i = $$3$be$i$lcssa;
     $385 = $754;
     $386 = $752;
     $388 = $755;
     $389 = $753;
     $gotdig$3$lcssa$i = $gotdig$4$i$lcssa;
     $gotrad$1$lcssa$i = $gotrad$2$i$lcssa;
     $j$0$lcssa$i = $j$2$i$lcssa;
     $k$0$lcssa$i = $k$2$i$lcssa;
     $lnz$0$lcssa$i = $lnz$2$i$lcssa;
     label = 178;
     break;
    }
   } else {
    $$3$lcssa$i = $$2$i;
    $385 = $731;
    $386 = 0;
    $388 = $732;
    $389 = 0;
    $gotdig$3$lcssa$i = $gotdig$2$i13;
    $gotrad$1$lcssa$i = $gotrad$0$i14;
    $j$0$lcssa$i = 0;
    $k$0$lcssa$i = 0;
    $lnz$0$lcssa$i = 0;
    label = 178;
   } while (0);
   do if ((label | 0) == 178) {
    $384 = ($gotrad$1$lcssa$i | 0) == 0;
    $387 = $384 ? $386 : $385;
    $390 = $384 ? $389 : $388;
    $391 = ($gotdig$3$lcssa$i | 0) != 0;
    if (!(($$3$lcssa$i | 32 | 0) == 101 & $391)) if (($$3$lcssa$i | 0) > -1) {
     $747 = $386;
     $748 = $389;
     $749 = $387;
     $750 = $390;
     $751 = $391;
     $j$078$i = $j$0$lcssa$i;
     $k$074$i = $k$0$lcssa$i;
     $lnz$068$i = $lnz$0$lcssa$i;
     label = 186;
     break;
    } else {
     $756 = $386;
     $757 = $389;
     $758 = $391;
     $759 = $387;
     $760 = $390;
     $j$077$i = $j$0$lcssa$i;
     $k$073$i = $k$0$lcssa$i;
     $lnz$067$i = $lnz$0$lcssa$i;
     label = 188;
     break;
    }
    $394 = _scanexp($f, $pok) | 0;
    $395 = tempRet0;
    if (($394 | 0) == 0 & ($395 | 0) == -2147483648) {
     if (!$pok) {
      ___shlim($f, 0);
      $$0$i27 = 0.0;
      break;
     }
     if (!(HEAP32[$1 >> 2] | 0)) {
      $404 = 0;
      $405 = 0;
     } else {
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $404 = 0;
      $405 = 0;
     }
    } else {
     $404 = $394;
     $405 = $395;
    }
    $406 = _i64Add($404 | 0, $405 | 0, $387 | 0, $390 | 0) | 0;
    $418 = $406;
    $420 = $386;
    $421 = tempRet0;
    $423 = $389;
    $j$076$i = $j$0$lcssa$i;
    $k$072$i = $k$0$lcssa$i;
    $lnz$066$i = $lnz$0$lcssa$i;
    label = 190;
   } while (0);
   if ((label | 0) == 186) if (!(HEAP32[$1 >> 2] | 0)) {
    $756 = $747;
    $757 = $748;
    $758 = $751;
    $759 = $749;
    $760 = $750;
    $j$077$i = $j$078$i;
    $k$073$i = $k$074$i;
    $lnz$067$i = $lnz$068$i;
    label = 188;
   } else {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    if ($751) {
     $418 = $749;
     $420 = $747;
     $421 = $750;
     $423 = $748;
     $j$076$i = $j$078$i;
     $k$072$i = $k$074$i;
     $lnz$066$i = $lnz$068$i;
     label = 190;
    } else label = 189;
   }
   if ((label | 0) == 188) if ($758) {
    $418 = $759;
    $420 = $756;
    $421 = $760;
    $423 = $757;
    $j$076$i = $j$077$i;
    $k$072$i = $k$073$i;
    $lnz$066$i = $lnz$067$i;
    label = 190;
   } else label = 189;
   do if ((label | 0) == 189) {
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    ___shlim($f, 0);
    $$0$i27 = 0.0;
   } else if ((label | 0) == 190) {
    $414 = HEAP32[$x$i >> 2] | 0;
    if (!$414) {
     $$0$i27 = +($sign$0 | 0) * 0.0;
     break;
    }
    if ((($423 | 0) < 0 | ($423 | 0) == 0 & $420 >>> 0 < 10) & (($418 | 0) == ($420 | 0) & ($421 | 0) == ($423 | 0))) if ($bits$0$ph >>> 0 > 30 | ($414 >>> $bits$0$ph | 0) == 0) {
     $$0$i27 = +($sign$0 | 0) * +($414 >>> 0);
     break;
    }
    $436 = ($emin$0$ph | 0) / -2 | 0;
    $438 = (($436 | 0) < 0) << 31 >> 31;
    if (($421 | 0) > ($438 | 0) | ($421 | 0) == ($438 | 0) & $418 >>> 0 > $436 >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0$i27 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
     break;
    }
    $448 = $emin$0$ph + -106 | 0;
    $450 = (($448 | 0) < 0) << 31 >> 31;
    if (($421 | 0) < ($450 | 0) | ($421 | 0) == ($450 | 0) & $418 >>> 0 < $448 >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0$i27 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
     break;
    }
    if (!$j$076$i) $k$3$i = $k$072$i; else {
     if (($j$076$i | 0) < 9) {
      $462 = $x$i + ($k$072$i << 2) | 0;
      $464 = HEAP32[$462 >> 2] | 0;
      $j$3119$i = $j$076$i;
      while (1) {
       $463 = $464 * 10 | 0;
       if (($j$3119$i | 0) == 8) {
        $$lcssa222 = $463;
        break;
       } else {
        $464 = $463;
        $j$3119$i = $j$3119$i + 1 | 0;
       }
      }
      HEAP32[$462 >> 2] = $$lcssa222;
     }
     $k$3$i = $k$072$i + 1 | 0;
    }
    if (($lnz$066$i | 0) < 9) if (($lnz$066$i | 0) <= ($418 | 0) & ($418 | 0) < 18) {
     if (($418 | 0) == 9) {
      $$0$i27 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0);
      break;
     }
     if (($418 | 0) < 9) {
      $$0$i27 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0) / +(HEAP32[42856 + (8 - $418 << 2) >> 2] | 0);
      break;
     }
     $486 = $bits$0$ph + 27 + (Math_imul($418, -3) | 0) | 0;
     $$pre$i18 = HEAP32[$x$i >> 2] | 0;
     if (($486 | 0) > 30 | ($$pre$i18 >>> $486 | 0) == 0) {
      $$0$i27 = +($sign$0 | 0) * +($$pre$i18 >>> 0) * +(HEAP32[42856 + ($418 + -10 << 2) >> 2] | 0);
      break;
     }
    }
    $498 = ($418 | 0) % 9 | 0;
    if (!$498) {
     $a$2$ph47$i$ph = 0;
     $rp$2$ph45$i$ph = $418;
     $z$1$ph46$i$ph = $k$3$i;
    } else {
     $502 = ($418 | 0) > -1 ? $498 : $498 + 9 | 0;
     $505 = HEAP32[42856 + (8 - $502 << 2) >> 2] | 0;
     if (!$k$3$i) {
      $a$0$lcssa186$i = 0;
      $rp$0$lcssa187$i = $418;
      $z$0$i = 0;
     } else {
      $507 = 1e9 / ($505 | 0) | 0;
      $a$0110$i = 0;
      $carry$0112$i = 0;
      $k$4111$i = 0;
      $rp$0109$i = $418;
      while (1) {
       $508 = $x$i + ($k$4111$i << 2) | 0;
       $509 = HEAP32[$508 >> 2] | 0;
       $512 = (($509 >>> 0) / ($505 >>> 0) | 0) + $carry$0112$i | 0;
       HEAP32[$508 >> 2] = $512;
       $513 = Math_imul(($509 >>> 0) % ($505 >>> 0) | 0, $507) | 0;
       $k$4111$i$looptemp = $k$4111$i;
       $k$4111$i = $k$4111$i + 1 | 0;
       if (($k$4111$i$looptemp | 0) == ($a$0110$i | 0) & ($512 | 0) == 0) {
        $a$1$i = $k$4111$i & 127;
        $rp$1$i19 = $rp$0109$i + -9 | 0;
       } else {
        $a$1$i = $a$0110$i;
        $rp$1$i19 = $rp$0109$i;
       }
       if (($k$4111$i | 0) == ($k$3$i | 0)) {
        $$lcssa221 = $513;
        $a$1$i$lcssa = $a$1$i;
        $rp$1$i19$lcssa = $rp$1$i19;
        break;
       } else {
        $a$0110$i = $a$1$i;
        $carry$0112$i = $513;
        $rp$0109$i = $rp$1$i19;
       }
      }
      if (!$$lcssa221) {
       $a$0$lcssa186$i = $a$1$i$lcssa;
       $rp$0$lcssa187$i = $rp$1$i19$lcssa;
       $z$0$i = $k$3$i;
      } else {
       HEAP32[$x$i + ($k$3$i << 2) >> 2] = $$lcssa221;
       $a$0$lcssa186$i = $a$1$i$lcssa;
       $rp$0$lcssa187$i = $rp$1$i19$lcssa;
       $z$0$i = $k$3$i + 1 | 0;
      }
     }
     $a$2$ph47$i$ph = $a$0$lcssa186$i;
     $rp$2$ph45$i$ph = 9 - $502 + $rp$0$lcssa187$i | 0;
     $z$1$ph46$i$ph = $z$0$i;
    }
    $a$2$ph47$i = $a$2$ph47$i$ph;
    $e2$0$ph$i = 0;
    $rp$2$ph45$i = $rp$2$ph45$i$ph;
    $z$1$ph46$i = $z$1$ph46$i$ph;
    L323 : while (1) {
     $526 = $x$i + ($a$2$ph47$i << 2) | 0;
     if (($rp$2$ph45$i | 0) < 18) {
      $e2$0$us$i = $e2$0$ph$i;
      $z$1$us$i = $z$1$ph46$i;
      while (1) {
       $carry1$0$us$i = 0;
       $k$5$in$us$i = $z$1$us$i + 127 | 0;
       $z$2$us$i = $z$1$us$i;
       while (1) {
        $k$5$us$i = $k$5$in$us$i & 127;
        $529 = $x$i + ($k$5$us$i << 2) | 0;
        $531 = _bitshift64Shl(HEAP32[$529 >> 2] | 0, 0, 29) | 0;
        $533 = _i64Add($531 | 0, tempRet0 | 0, $carry1$0$us$i | 0, 0) | 0;
        $534 = tempRet0;
        if ($534 >>> 0 > 0 | ($534 | 0) == 0 & $533 >>> 0 > 1e9) {
         $540 = ___udivdi3($533 | 0, $534 | 0, 1e9, 0) | 0;
         $542 = ___uremdi3($533 | 0, $534 | 0, 1e9, 0) | 0;
         $$sink$off0$us$i = $542;
         $carry1$1$us$i = $540;
        } else {
         $$sink$off0$us$i = $533;
         $carry1$1$us$i = 0;
        }
        HEAP32[$529 >> 2] = $$sink$off0$us$i;
        $547 = ($k$5$us$i | 0) == ($a$2$ph47$i | 0);
        if (($k$5$us$i | 0) != ($z$2$us$i + 127 & 127 | 0) | $547) $z$3$us$i = $z$2$us$i; else $z$3$us$i = ($$sink$off0$us$i | 0) == 0 ? $k$5$us$i : $z$2$us$i;
        if ($547) {
         $carry1$1$us$i$lcssa = $carry1$1$us$i;
         $z$3$us$i$lcssa = $z$3$us$i;
         break;
        } else {
         $carry1$0$us$i = $carry1$1$us$i;
         $k$5$in$us$i = $k$5$us$i + -1 | 0;
         $z$2$us$i = $z$3$us$i;
        }
       }
       $550 = $e2$0$us$i + -29 | 0;
       if (!$carry1$1$us$i$lcssa) {
        $e2$0$us$i = $550;
        $z$1$us$i = $z$3$us$i$lcssa;
       } else {
        $$lcssa215 = $550;
        $carry1$1$us$i$lcssa$lcssa = $carry1$1$us$i$lcssa;
        $z$3$us$i$lcssa$lcssa = $z$3$us$i$lcssa;
        break;
       }
      }
      $$lcssa59$i = $$lcssa215;
      $carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa$lcssa;
      $z$3$lcssa$lcssa$i = $z$3$us$i$lcssa$lcssa;
     } else {
      if (($rp$2$ph45$i | 0) != 18) {
       $a$2$ph47$i$lcssa = $a$2$ph47$i;
       $e2$0$ph$i$lcssa = $e2$0$ph$i;
       $rp$2$ph45$i$lcssa = $rp$2$ph45$i;
       $z$1$ph46$i$lcssa = $z$1$ph46$i;
       label = 236;
       break;
      }
      $e2$0$us93$i = $e2$0$ph$i;
      $z$1$us94$i = $z$1$ph46$i;
      while (1) {
       if ((HEAP32[$526 >> 2] | 0) >>> 0 >= 9007199) {
        $a$2$ph47$i$lcssa219 = $a$2$ph47$i;
        $e2$0$us93$i$lcssa = $e2$0$us93$i;
        $z$1$us94$i$lcssa = $z$1$us94$i;
        label = 235;
        break L323;
       }
       $carry1$0$us98$i = 0;
       $k$5$in$us97$i = $z$1$us94$i + 127 | 0;
       $z$2$us96$i = $z$1$us94$i;
       while (1) {
        $k$5$us99$i = $k$5$in$us97$i & 127;
        $555 = $x$i + ($k$5$us99$i << 2) | 0;
        $557 = _bitshift64Shl(HEAP32[$555 >> 2] | 0, 0, 29) | 0;
        $559 = _i64Add($557 | 0, tempRet0 | 0, $carry1$0$us98$i | 0, 0) | 0;
        $560 = tempRet0;
        if ($560 >>> 0 > 0 | ($560 | 0) == 0 & $559 >>> 0 > 1e9) {
         $566 = ___udivdi3($559 | 0, $560 | 0, 1e9, 0) | 0;
         $568 = ___uremdi3($559 | 0, $560 | 0, 1e9, 0) | 0;
         $$sink$off0$us102$i = $568;
         $carry1$1$us103$i = $566;
        } else {
         $$sink$off0$us102$i = $559;
         $carry1$1$us103$i = 0;
        }
        HEAP32[$555 >> 2] = $$sink$off0$us102$i;
        $573 = ($k$5$us99$i | 0) == ($a$2$ph47$i | 0);
        if (($k$5$us99$i | 0) != ($z$2$us96$i + 127 & 127 | 0) | $573) $z$3$us106$i = $z$2$us96$i; else $z$3$us106$i = ($$sink$off0$us102$i | 0) == 0 ? $k$5$us99$i : $z$2$us96$i;
        if ($573) {
         $carry1$1$us103$i$lcssa = $carry1$1$us103$i;
         $z$3$us106$i$lcssa = $z$3$us106$i;
         break;
        } else {
         $carry1$0$us98$i = $carry1$1$us103$i;
         $k$5$in$us97$i = $k$5$us99$i + -1 | 0;
         $z$2$us96$i = $z$3$us106$i;
        }
       }
       $576 = $e2$0$us93$i + -29 | 0;
       if (!$carry1$1$us103$i$lcssa) {
        $e2$0$us93$i = $576;
        $z$1$us94$i = $z$3$us106$i$lcssa;
       } else {
        $$lcssa214 = $576;
        $carry1$1$us103$i$lcssa$lcssa = $carry1$1$us103$i$lcssa;
        $z$3$us106$i$lcssa$lcssa = $z$3$us106$i$lcssa;
        break;
       }
      }
      $$lcssa59$i = $$lcssa214;
      $carry1$1$lcssa$lcssa$i = $carry1$1$us103$i$lcssa$lcssa;
      $z$3$lcssa$lcssa$i = $z$3$us106$i$lcssa$lcssa;
     }
     $580 = $a$2$ph47$i + 127 & 127;
     if (($580 | 0) == ($z$3$lcssa$lcssa$i | 0)) {
      $583 = $z$3$lcssa$lcssa$i + 127 & 127;
      $588 = $x$i + (($z$3$lcssa$lcssa$i + 126 & 127) << 2) | 0;
      HEAP32[$588 >> 2] = HEAP32[$588 >> 2] | HEAP32[$x$i + ($583 << 2) >> 2];
      $z$4$i = $583;
     } else $z$4$i = $z$3$lcssa$lcssa$i;
     HEAP32[$x$i + ($580 << 2) >> 2] = $carry1$1$lcssa$lcssa$i;
     $a$2$ph47$i = $580;
     $e2$0$ph$i = $$lcssa59$i;
     $rp$2$ph45$i = $rp$2$ph45$i + 9 | 0;
     $z$1$ph46$i = $z$4$i;
    }
    if ((label | 0) == 235) {
     $a$2$ph47$i220 = $a$2$ph47$i$lcssa219;
     $e2$1$ph$i$ph = $e2$0$us93$i$lcssa;
     $rp$3$ph43$i$ph = 18;
     $z$5$ph$i$ph = $z$1$us94$i$lcssa;
    } else if ((label | 0) == 236) {
     $a$2$ph47$i220 = $a$2$ph47$i$lcssa;
     $e2$1$ph$i$ph = $e2$0$ph$i$lcssa;
     $rp$3$ph43$i$ph = $rp$2$ph45$i$lcssa;
     $z$5$ph$i$ph = $z$1$ph46$i$lcssa;
    }
    $a$3$ph$i = $a$2$ph47$i220;
    $e2$1$ph$i = $e2$1$ph$i$ph;
    $rp$3$ph43$i = $rp$3$ph43$i$ph;
    $z$5$ph$i = $z$5$ph$i$ph;
    L362 : while (1) {
     $619 = $z$5$ph$i + 1 & 127;
     $625 = $x$i + (($z$5$ph$i + 127 & 127) << 2) | 0;
     $a$3$i$ph = $a$3$ph$i;
     $e2$1$i$ph = $e2$1$ph$i;
     $rp$3$i$ph = $rp$3$ph43$i;
     while (1) {
      $$old$i = ($rp$3$i$ph | 0) == 18;
      $$21$i = ($rp$3$i$ph | 0) > 27 ? 9 : 1;
      $a$3$i = $a$3$i$ph;
      $e2$1$i = $e2$1$i$ph;
      while (1) {
       $592 = $a$3$i & 127;
       $593 = ($592 | 0) == ($z$5$ph$i | 0);
       do if ($593) label = 254; else {
        $595 = HEAP32[$x$i + ($592 << 2) >> 2] | 0;
        if ($595 >>> 0 < 9007199) {
         label = 254;
         break;
        }
        if ($595 >>> 0 > 9007199) break;
        $599 = $a$3$i + 1 & 127;
        if (($599 | 0) == ($z$5$ph$i | 0)) {
         label = 254;
         break;
        }
        $707 = HEAP32[$x$i + ($599 << 2) >> 2] | 0;
        if ($707 >>> 0 < 254740991) {
         label = 254;
         break;
        }
        if ($$old$i & $707 >>> 0 < 254740992) {
         $$lcssa201 = $592;
         $a$3$i$lcssa = $a$3$i;
         $e2$1$i$lcssa = $e2$1$i;
         $z$5$ph$i$lcssa = $z$5$ph$i;
         label = 267;
         break L362;
        }
       } while (0);
       if ((label | 0) == 254) {
        label = 0;
        if ($$old$i) {
         $$lcssa202 = $592;
         $$lcssa205 = $593;
         $$lcssa211 = $619;
         $a$3$i$lcssa198 = $a$3$i;
         $e2$1$i$lcssa195 = $e2$1$i;
         $z$5$ph$i$lcssa209 = $z$5$ph$i;
         label = 255;
         break L362;
        }
       }
       $601 = $$21$i + $e2$1$i | 0;
       if (($a$3$i | 0) == ($z$5$ph$i | 0)) {
        $a$3$i = $z$5$ph$i;
        $e2$1$i = $601;
       } else {
        $$lcssa207 = $601;
        $a$3$i$lcssa199 = $a$3$i;
        break;
       }
      }
      $604 = (1 << $$21$i) + -1 | 0;
      $605 = 1e9 >>> $$21$i;
      $a$487$i = $a$3$i$lcssa199;
      $carry3$090$i = 0;
      $k$688$i = $a$3$i$lcssa199;
      $rp$486$i = $rp$3$i$ph;
      while (1) {
       $606 = $x$i + ($k$688$i << 2) | 0;
       $607 = HEAP32[$606 >> 2] | 0;
       $610 = ($607 >>> $$21$i) + $carry3$090$i | 0;
       HEAP32[$606 >> 2] = $610;
       $611 = Math_imul($607 & $604, $605) | 0;
       $or$cond22$i = ($k$688$i | 0) == ($a$487$i | 0) & ($610 | 0) == 0;
       $k$688$i = $k$688$i + 1 & 127;
       $rp$5$i = $or$cond22$i ? $rp$486$i + -9 | 0 : $rp$486$i;
       $a$5$i = $or$cond22$i ? $k$688$i : $a$487$i;
       if (($k$688$i | 0) == ($z$5$ph$i | 0)) {
        $$lcssa208 = $611;
        $a$5$i$lcssa = $a$5$i;
        $rp$5$i$lcssa = $rp$5$i;
        break;
       } else {
        $a$487$i = $a$5$i;
        $carry3$090$i = $611;
        $rp$486$i = $rp$5$i;
       }
      }
      if ($$lcssa208) {
       if (($619 | 0) != ($a$5$i$lcssa | 0)) {
        $$lcssa207$lcssa = $$lcssa207;
        $$lcssa208$lcssa = $$lcssa208;
        $a$5$i$lcssa$lcssa = $a$5$i$lcssa;
        $rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
        break;
       }
       HEAP32[$625 >> 2] = HEAP32[$625 >> 2] | 1;
      }
      $a$3$i$ph = $a$5$i$lcssa;
      $e2$1$i$ph = $$lcssa207;
      $rp$3$i$ph = $rp$5$i$lcssa;
     }
     HEAP32[$x$i + ($z$5$ph$i << 2) >> 2] = $$lcssa208$lcssa;
     $a$3$ph$i = $a$5$i$lcssa$lcssa;
     $e2$1$ph$i = $$lcssa207$lcssa;
     $rp$3$ph43$i = $rp$5$i$lcssa$lcssa;
     $z$5$ph$i = $619;
    }
    if ((label | 0) == 255) if ($$lcssa205) {
     HEAP32[$x$i + ($$lcssa211 + -1 << 2) >> 2] = 0;
     $632 = $z$5$ph$i$lcssa209;
     $a$3$i200 = $a$3$i$lcssa198;
     $e2$1$i197 = $e2$1$i$lcssa195;
     $z$7$i = $$lcssa211;
    } else {
     $632 = $$lcssa202;
     $a$3$i200 = $a$3$i$lcssa198;
     $e2$1$i197 = $e2$1$i$lcssa195;
     $z$7$i = $z$5$ph$i$lcssa209;
    } else if ((label | 0) == 267) {
     $632 = $$lcssa201;
     $a$3$i200 = $a$3$i$lcssa;
     $e2$1$i197 = $e2$1$i$lcssa;
     $z$7$i = $z$5$ph$i$lcssa;
    }
    $634 = +((HEAP32[$x$i + ($632 << 2) >> 2] | 0) >>> 0);
    $636 = $a$3$i200 + 1 & 127;
    if (($636 | 0) == ($z$7$i | 0)) {
     $697 = $z$7$i + 1 & 127;
     HEAP32[$x$i + ($697 + -1 << 2) >> 2] = 0;
     $z$7$1$i = $697;
    } else $z$7$1$i = $z$7$i;
    $661 = +($sign$0 | 0);
    $643 = $661 * ($634 * 1.0e9 + +((HEAP32[$x$i + ($636 << 2) >> 2] | 0) >>> 0));
    $681 = $e2$1$i197 + 53 | 0;
    $638 = $681 - $emin$0$ph | 0;
    if (($638 | 0) < ($bits$0$ph | 0)) if (($638 | 0) < 0) {
     $$01335$i = 0;
     $denormal$034$i = 1;
     label = 271;
    } else {
     $$013$i = $638;
     $denormal$0$i = 1;
     label = 270;
    } else {
     $$013$i = $bits$0$ph;
     $denormal$0$i = 0;
     label = 270;
    }
    if ((label | 0) == 270) if (($$013$i | 0) < 53) {
     $$01335$i = $$013$i;
     $denormal$034$i = $denormal$0$i;
     label = 271;
    } else {
     $$01336$i = $$013$i;
     $bias$0$i24 = 0.0;
     $denormal$033$i = $denormal$0$i;
     $frac$0$i = 0.0;
     $y$1$i23 = $643;
    }
    if ((label | 0) == 271) {
     $644 = +_copysignl(+_scalbn(1.0, 105 - $$01335$i | 0), $643);
     $647 = +_fmodl($643, +_scalbn(1.0, 53 - $$01335$i | 0));
     $$01336$i = $$01335$i;
     $bias$0$i24 = $644;
     $denormal$033$i = $denormal$034$i;
     $frac$0$i = $647;
     $y$1$i23 = $644 + ($643 - $647);
    }
    $651 = $a$3$i200 + 2 & 127;
    do if (($651 | 0) == ($z$7$1$i | 0)) $frac$2$i = $frac$0$i; else {
     $654 = HEAP32[$x$i + ($651 << 2) >> 2] | 0;
     do if ($654 >>> 0 < 5e8) {
      if (!$654) if (($a$3$i200 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
       $frac$1$i = $frac$0$i;
       break;
      }
      $frac$1$i = $661 * .25 + $frac$0$i;
     } else {
      if ($654 >>> 0 > 5e8) {
       $frac$1$i = $661 * .75 + $frac$0$i;
       break;
      }
      if (($a$3$i200 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
       $frac$1$i = $661 * .5 + $frac$0$i;
       break;
      } else {
       $frac$1$i = $661 * .75 + $frac$0$i;
       break;
      }
     } while (0);
     if ((53 - $$01336$i | 0) <= 1) {
      $frac$2$i = $frac$1$i;
      break;
     }
     if (+_fmodl($frac$1$i, 1.0) != 0.0) {
      $frac$2$i = $frac$1$i;
      break;
     }
     $frac$2$i = $frac$1$i + 1.0;
    } while (0);
    $679 = $y$1$i23 + $frac$2$i - $bias$0$i24;
    do if (($681 & 2147483647 | 0) > (-2 - $sum$i | 0)) {
     if (!(+Math_abs(+$679) >= 9007199254740992.0)) {
      $denormal$2$i = $denormal$033$i;
      $e2$2$i = $e2$1$i197;
      $y$2$i25 = $679;
     } else {
      $denormal$2$i = ($$01336$i | 0) == ($638 | 0) & ($denormal$033$i | 0) != 0 ? 0 : $denormal$033$i;
      $e2$2$i = $e2$1$i197 + 1 | 0;
      $y$2$i25 = $679 * .5;
     }
     if (($e2$2$i + 50 | 0) <= ($324 | 0)) if (!($frac$2$i != 0.0 & ($denormal$2$i | 0) != 0)) {
      $e2$3$i = $e2$2$i;
      $y$3$i = $y$2$i25;
      break;
     }
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $e2$3$i = $e2$2$i;
     $y$3$i = $y$2$i25;
    } else {
     $e2$3$i = $e2$1$i197;
     $y$3$i = $679;
    } while (0);
    $$0$i27 = +_scalbnl($y$3$i, $e2$3$i);
   } while (0);
   $$0 = $$0$i27;
   STACKTOP = sp;
   return +$$0;
  } while (0);
  if (HEAP32[$1 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  ___shlim($f, 0);
  $$0 = 0.0;
  STACKTOP = sp;
  return +$$0;
 } while (0);
 if ((label | 0) == 23) {
  $42 = (HEAP32[$1 >> 2] | 0) == 0;
  if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  if (!($i$0$lcssa >>> 0 < 4 | ($pok | 0) == 0 | $42)) {
   $i$1 = $i$0$lcssa;
   do {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    $i$1 = $i$1 + -1 | 0;
   } while ($i$1 >>> 0 > 3);
  }
 }
 $$0 = +($sign$0 | 0) * inf;
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i125 = 0, $$0$i$i$i$i157 = 0, $$0$i$i$i$i182 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i91 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i131 = 0, $$0$i$i1$i$i163 = 0, $$0$i$i1$i$i188 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i97 = 0, $$0$i$i109 = 0, $$0$i$i118 = 0, $$0$i$i121 = 0, $$0$i$i143 = 0, $$0$i$i154 = 0, $$0$i$i178 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i72 = 0, $$0$i$i77 = 0, $$0$i$i85 = 0, $$0$i$i88 = 0, $$302 = 0, $$lcssa = 0, $$lcssa342 = 0, $$lcssa346 = 0, $$lcssa348 = 0, $$lcssa349 = 0, $$lcssa351 = 0, $$ph = 0, $$ph341 = 0, $$pre$i3$i$i133 = 0, $$pre$i3$i$i165 = 0, $$pre$i3$i$i190 = 0, $$pre$i3$i$i190281 = 0, $$pre$i3$i$i190282 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59275 = 0, $$pre$i3$i$i59277 = 0, $$pre$i3$i$i99 = 0, $$pre$i3$i$i99287$ph = 0, $$pre$i3$i$i99287297 = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $114 = 0, $115 = 0, $119 = 0, $124 = 0, $127 = 0, $13 = 0, $134 = 0, $135 = 0, $139 = 0, $142 = 0, $149 = 0, $150 = 0, $154 = 0, $155 = 0, $157 = 0, $16 = 0, $164 = 0, $165 = 0, $17 = 0, $171 = 0, $172 = 0, $174 = 0, $175 = 0, $176 = 0, $18 = 0, $183 = 0, $184 = 0, $188 = 0, $19 = 0, $190 = 0, $192 = 0, $196 = 0, $198 = 0, $203 = 0, $204 = 0, $209 = 0, $21 = 0, $214 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $226 = 0, $23 = 0, $230 = 0, $231 = 0, $235 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $249 = 0, $25 = 0, $252 = 0, $258 = 0, $26 = 0, $263 = 0, $264 = 0, $268 = 0, $27 = 0, $273 = 0, $274 = 0, $275 = 0, $282 = 0, $285 = 0, $29 = 0, $291 = 0, $293 = 0, $295 = 0, $302 = 0, $303 = 0, $307 = 0, $312 = 0, $313 = 0, $314 = 0, $317 = 0, $32 = 0, $321 = 0, $324 = 0, $330 = 0, $335 = 0, $336 = 0, $345 = 0, $346 = 0, $347 = 0, $354 = 0, $357 = 0, $363 = 0, $372 = 0, $373 = 0, $382 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $397 = 0, $398 = 0, $40 = 0, $402 = 0, $403 = 0, $405 = 0, $409 = 0, $410 = 0, $412 = 0, $417 = 0, $418 = 0, $419 = 0, $426 = 0, $427 = 0, $428 = 0, $430 = 0, $434 = 0, $44 = 0, $440 = 0, $447 = 0, $448 = 0, $449 = 0, $451 = 0, $454 = 0, $461 = 0, $462 = 0, $466 = 0, $469 = 0, $47 = 0, $476 = 0, $477 = 0, $481 = 0, $482 = 0, $484 = 0, $491 = 0, $492 = 0, $497 = 0, $498 = 0, $499 = 0, $506 = 0, $510 = 0, $518 = 0, $519 = 0, $523 = 0, $526 = 0, $533 = 0, $534 = 0, $538 = 0, $54 = 0, $541 = 0, $548 = 0, $549 = 0, $55 = 0, $553 = 0, $554 = 0, $556 = 0, $563 = 0, $564 = 0, $570 = 0, $571 = 0, $573 = 0, $576 = 0, $579 = 0, $581 = 0, $587 = 0, $592 = 0, $594 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $600 = 0, $607 = 0, $615 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $621 = 0, $624 = 0, $63 = 0, $631 = 0, $632 = 0, $638 = 0, $645 = 0, $646 = 0, $650 = 0, $652 = 0, $659 = 0, $660 = 0, $667 = 0, $668 = 0, $669 = 0, $676 = 0, $679 = 0, $681 = 0, $684 = 0, $691 = 0, $692 = 0, $696 = 0, $699 = 0, $706 = 0, $707 = 0, $711 = 0, $712 = 0, $714 = 0, $721 = 0, $722 = 0, $728 = 0, $729 = 0, $736 = 0, $738 = 0, $740 = 0, $747 = 0, $748 = 0, $751 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $763 = 0, $77 = 0, $773 = 0, $774 = 0, $775 = 0, $782 = 0, $783 = 0, $786 = 0, $79 = 0, $793 = 0, $794 = 0, $798 = 0, $801 = 0, $808 = 0, $809 = 0, $813 = 0, $815 = 0, $82 = 0, $822 = 0, $823 = 0, $831 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $846 = 0, $849 = 0, $855 = 0, $858 = 0, $86 = 0, $860 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $88 = 0, $95 = 0, $96 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i16 = 0, $__i$0$i$i20 = 0, $__i$0$i$i25 = 0, $__ng$0 = 0, $__ng$0$lcssa343 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 496 | 0;
 $__gbuf = sp + 96 | 0;
 $__gb = sp + 88 | 0;
 $__gn = sp + 80 | 0;
 $__ge = sp + 76 | 0;
 $__pat = sp + 500 | 0;
 $__dp = sp + 72 | 0;
 $__ts = sp + 68 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $1 = $__gb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 $__i$0$i$i14 = 0;
 while (1) {
  if (($__i$0$i$i14 | 0) == 3) break;
  HEAP32[$__sym + ($__i$0$i$i14 << 2) >> 2] = 0;
  $__i$0$i$i14 = $__i$0$i$i14 + 1 | 0;
 }
 $__i$0$i$i16 = 0;
 while (1) {
  if (($__i$0$i$i16 | 0) == 3) break;
  HEAP32[$__psn + ($__i$0$i$i16 << 2) >> 2] = 0;
  $__i$0$i$i16 = $__i$0$i$i16 + 1 | 0;
 }
 $__i$0$i$i20 = 0;
 while (1) {
  if (($__i$0$i$i20 | 0) == 3) break;
  HEAP32[$__nsn + ($__i$0$i$i20 << 2) >> 2] = 0;
  $__i$0$i$i20 = $__i$0$i$i20 + 1 | 0;
 }
 $__i$0$i$i25 = 0;
 while (1) {
  if (($__i$0$i$i25 | 0) == 3) break;
  HEAP32[$__spaces + ($__i$0$i$i25 << 2) >> 2] = 0;
  $__i$0$i$i25 = $__i$0$i$i25 + 1 | 0;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(2, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L21 : do if ($13 & 1) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index8 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $16 = $__nsn + 4 | 0;
  $17 = $__nsn + 8 | 0;
  $18 = $__psn + 4 | 0;
  $19 = $__psn + 8 | 0;
  $21 = ($__flags & 512 | 0) != 0;
  $22 = $__sym + 4 | 0;
  $23 = $__sym + 8 | 0;
  $24 = $__spaces + 4 | 0;
  $25 = $__spaces + 8 | 0;
  $26 = $__pat + 3 | 0;
  $27 = $__grp + 4 | 0;
  $862 = $__gbuf;
  $__p$0 = 0;
  $__trailing_sign$0 = 0;
  L23 : while (1) {
   if ($__p$0 >>> 0 >= 4) {
    $$lcssa351 = $862;
    $__trailing_sign$0$lcssa = $__trailing_sign$0;
    label = 319;
    break;
   }
   $29 = HEAP32[$__b >> 2] | 0;
   do if (!$29) $863 = 1; else {
    $32 = HEAP32[$29 + 12 >> 2] | 0;
    if (($32 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $39 = invoke_ii(HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] | 0, $29 | 0) | 0;
     $40 = __THREW__;
     __THREW__ = 0;
     if ($40 & 1) {
      label = 42;
      break L23;
     } else $$0$i$i$i$i30 = $39;
    } else $$0$i$i$i$i30 = HEAP32[$32 >> 2] | 0;
    if (($$0$i$i$i$i30 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $863 = 1;
     break;
    } else {
     $863 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   $44 = HEAP32[$__e >> 2] | 0;
   do if (!$44) label = 32; else {
    $47 = HEAP32[$44 + 12 >> 2] | 0;
    if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $54 = invoke_ii(HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] | 0, $44 | 0) | 0;
     $55 = __THREW__;
     __THREW__ = 0;
     if ($55 & 1) {
      label = 42;
      break L23;
     } else $$0$i$i1$i$i36 = $54;
    } else $$0$i$i1$i$i36 = HEAP32[$47 >> 2] | 0;
    if (($$0$i$i1$i$i36 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 32;
     break;
    } else if ($863) {
     $864 = $44;
     break;
    } else {
     $$lcssa351 = $862;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 319;
     break L23;
    }
   } while (0);
   if ((label | 0) == 32) {
    label = 0;
    if ($863) {
     $$lcssa351 = $862;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 319;
     break;
    } else $864 = 0;
   }
   L48 : do switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
   case 0:
    {
     if (($__p$0 | 0) == 3) {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else label = 60;
     break;
    }
   case 4:
    {
     $62 = HEAP32[$__ts >> 2] | 0;
     $$pre$i3$i$i165 = $864;
     $538 = $864;
     $592 = $862;
     $__ng$0 = 0;
     L51 : while (1) {
      $523 = HEAP32[$__b >> 2] | 0;
      do if (!$523) $553 = 1; else {
       $526 = HEAP32[$523 + 12 >> 2] | 0;
       if (($526 | 0) == (HEAP32[$523 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $533 = invoke_ii(HEAP32[(HEAP32[$523 >> 2] | 0) + 36 >> 2] | 0, $523 | 0) | 0;
        $534 = __THREW__;
        __THREW__ = 0;
        if ($534 & 1) {
         label = 41;
         break L23;
        } else $$0$i$i$i$i157 = $533;
       } else $$0$i$i$i$i157 = HEAP32[$526 >> 2] | 0;
       if (($$0$i$i$i$i157 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $553 = 1;
        break;
       } else {
        $553 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$538) {
       $869 = $$pre$i3$i$i165;
       label = 230;
      } else {
       $541 = HEAP32[$538 + 12 >> 2] | 0;
       if (($541 | 0) == (HEAP32[$538 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $548 = invoke_ii(HEAP32[(HEAP32[$538 >> 2] | 0) + 36 >> 2] | 0, $538 | 0) | 0;
        $549 = __THREW__;
        __THREW__ = 0;
        if ($549 & 1) {
         label = 41;
         break L23;
        } else $$0$i$i1$i$i163 = $548;
       } else $$0$i$i1$i$i163 = HEAP32[$541 >> 2] | 0;
       if (($$0$i$i1$i$i163 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $869 = 0;
        label = 230;
        break;
       } else if ($553 ^ ($$pre$i3$i$i165 | 0) == 0) {
        $870 = $$pre$i3$i$i165;
        $871 = $$pre$i3$i$i165;
        break;
       } else {
        $$lcssa342 = $592;
        $$pre$i3$i$i133 = $$pre$i3$i$i165;
        $__ng$0$lcssa343 = $__ng$0;
        break L51;
       }
      } while (0);
      if ((label | 0) == 230) {
       label = 0;
       if ($553) {
        $$lcssa342 = $592;
        $$pre$i3$i$i133 = $869;
        $__ng$0$lcssa343 = $__ng$0;
        break;
       } else {
        $870 = $869;
        $871 = 0;
       }
      }
      $554 = HEAP32[$__b >> 2] | 0;
      $556 = HEAP32[$554 + 12 >> 2] | 0;
      if (($556 | 0) == (HEAP32[$554 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $563 = invoke_ii(HEAP32[(HEAP32[$554 >> 2] | 0) + 36 >> 2] | 0, $554 | 0) | 0;
       $564 = __THREW__;
       __THREW__ = 0;
       if ($564 & 1) {
        label = 41;
        break L23;
       } else $$0$i$i154 = $563;
      } else $$0$i$i154 = HEAP32[$556 >> 2] | 0;
      __THREW__ = 0;
      $570 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i154 | 0) | 0;
      $571 = __THREW__;
      __THREW__ = 0;
      if ($571 & 1) {
       label = 41;
       break L23;
      }
      if ($570) {
       $573 = HEAP32[$__wn >> 2] | 0;
       if (($573 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(17, $__wb | 0, $__wn | 0, $0 | 0);
        $576 = __THREW__;
        __THREW__ = 0;
        if ($576 & 1) {
         label = 41;
         break L23;
        }
        $579 = HEAP32[$__wn >> 2] | 0;
       } else $579 = $573;
       HEAP32[$__wn >> 2] = $579 + 4;
       HEAP32[$579 >> 2] = $$0$i$i154;
       $872 = $592;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else {
       $581 = HEAP8[$__grp >> 0] | 0;
       if (!($581 & 1)) $587 = ($581 & 255) >>> 1; else $587 = HEAP32[$27 >> 2] | 0;
       if (!(($__ng$0 | 0) != 0 & ($587 | 0) != 0 & ($$0$i$i154 | 0) == ($62 | 0))) {
        $$lcssa342 = $592;
        $$pre$i3$i$i133 = $870;
        $__ng$0$lcssa343 = $__ng$0;
        break;
       }
       if (($592 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
        $594 = __THREW__;
        __THREW__ = 0;
        if ($594 & 1) {
         label = 41;
         break L23;
        }
        $597 = HEAP32[$__gn >> 2] | 0;
       } else $597 = $592;
       $596 = $597 + 4 | 0;
       HEAP32[$__gn >> 2] = $596;
       HEAP32[$597 >> 2] = $__ng$0;
       $872 = $596;
       $__ng$1 = 0;
      }
      $598 = HEAP32[$__b >> 2] | 0;
      $599 = $598 + 12 | 0;
      $600 = HEAP32[$599 >> 2] | 0;
      if (($600 | 0) == (HEAP32[$598 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$598 >> 2] | 0) + 40 >> 2] | 0, $598 | 0) | 0;
       $607 = __THREW__;
       __THREW__ = 0;
       if ($607 & 1) {
        label = 41;
        break L23;
       }
      } else HEAP32[$599 >> 2] = $600 + 4;
      $$pre$i3$i$i165 = $870;
      $538 = $871;
      $592 = $872;
      $__ng$0 = $__ng$1;
     }
     if (($__ng$0$lcssa343 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa342 | 0) : 0) {
      if (($$lcssa342 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
       $615 = __THREW__;
       __THREW__ = 0;
       if ($615 & 1) {
        label = 42;
        break L23;
       }
       $618 = HEAP32[$__gn >> 2] | 0;
      } else $618 = $$lcssa342;
      $617 = $618 + 4 | 0;
      HEAP32[$__gn >> 2] = $617;
      HEAP32[$618 >> 2] = $__ng$0$lcssa343;
      $873 = $617;
     } else $873 = $$lcssa342;
     $619 = HEAP32[$__fd >> 2] | 0;
     if (($619 | 0) > 0) {
      $621 = HEAP32[$__b >> 2] | 0;
      do if (!$621) $874 = 1; else {
       $624 = HEAP32[$621 + 12 >> 2] | 0;
       if (($624 | 0) == (HEAP32[$621 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $631 = invoke_ii(HEAP32[(HEAP32[$621 >> 2] | 0) + 36 >> 2] | 0, $621 | 0) | 0;
        $632 = __THREW__;
        __THREW__ = 0;
        if ($632 & 1) {
         label = 42;
         break L23;
        } else $$0$i$i$i$i125 = $631;
       } else $$0$i$i$i$i125 = HEAP32[$624 >> 2] | 0;
       if (($$0$i$i$i$i125 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $874 = 1;
        break;
       } else {
        $874 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$$pre$i3$i$i133) label = 272; else {
       $638 = HEAP32[$$pre$i3$i$i133 + 12 >> 2] | 0;
       if (($638 | 0) == (HEAP32[$$pre$i3$i$i133 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $645 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i133 >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i133 | 0) | 0;
        $646 = __THREW__;
        __THREW__ = 0;
        if ($646 & 1) {
         label = 42;
         break L23;
        } else $$0$i$i1$i$i131 = $645;
       } else $$0$i$i1$i$i131 = HEAP32[$638 >> 2] | 0;
       if (($$0$i$i1$i$i131 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 272;
        break;
       } else if ($874) {
        $875 = $$pre$i3$i$i133;
        break;
       } else {
        label = 278;
        break L23;
       }
      } while (0);
      if ((label | 0) == 272) {
       label = 0;
       if ($874) {
        label = 278;
        break L23;
       } else $875 = 0;
      }
      $650 = HEAP32[$__b >> 2] | 0;
      $652 = HEAP32[$650 + 12 >> 2] | 0;
      if (($652 | 0) == (HEAP32[$650 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $659 = invoke_ii(HEAP32[(HEAP32[$650 >> 2] | 0) + 36 >> 2] | 0, $650 | 0) | 0;
       $660 = __THREW__;
       __THREW__ = 0;
       if ($660 & 1) {
        label = 42;
        break L23;
       } else $$0$i$i118 = $659;
      } else $$0$i$i118 = HEAP32[$652 >> 2] | 0;
      if (($$0$i$i118 | 0) != (HEAP32[$__dp >> 2] | 0)) {
       label = 278;
       break L23;
      }
      $667 = HEAP32[$__b >> 2] | 0;
      $668 = $667 + 12 | 0;
      $669 = HEAP32[$668 >> 2] | 0;
      if (($669 | 0) == (HEAP32[$667 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$667 >> 2] | 0) + 40 >> 2] | 0, $667 | 0) | 0;
       $676 = __THREW__;
       __THREW__ = 0;
       if ($676 & 1) {
        label = 42;
        break L23;
       }
      } else HEAP32[$668 >> 2] = $669 + 4;
      $$pre$i3$i$i99 = $875;
      $679 = $619;
      $696 = $875;
      while (1) {
       if (($679 | 0) <= 0) break;
       $681 = HEAP32[$__b >> 2] | 0;
       do if (!$681) $711 = 1; else {
        $684 = HEAP32[$681 + 12 >> 2] | 0;
        if (($684 | 0) == (HEAP32[$681 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $691 = invoke_ii(HEAP32[(HEAP32[$681 >> 2] | 0) + 36 >> 2] | 0, $681 | 0) | 0;
         $692 = __THREW__;
         __THREW__ = 0;
         if ($692 & 1) {
          label = 40;
          break L23;
         } else $$0$i$i$i$i91 = $691;
        } else $$0$i$i$i$i91 = HEAP32[$684 >> 2] | 0;
        if (($$0$i$i$i$i91 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $711 = 1;
         break;
        } else {
         $711 = (HEAP32[$__b >> 2] | 0) == 0;
         break;
        }
       } while (0);
       do if (!$696) {
        $$pre$i3$i$i99287$ph = $$pre$i3$i$i99;
        label = 297;
       } else {
        $699 = HEAP32[$696 + 12 >> 2] | 0;
        if (($699 | 0) == (HEAP32[$696 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $706 = invoke_ii(HEAP32[(HEAP32[$696 >> 2] | 0) + 36 >> 2] | 0, $696 | 0) | 0;
         $707 = __THREW__;
         __THREW__ = 0;
         if ($707 & 1) {
          label = 40;
          break L23;
         } else $$0$i$i1$i$i97 = $706;
        } else $$0$i$i1$i$i97 = HEAP32[$699 >> 2] | 0;
        if (($$0$i$i1$i$i97 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i3$i$i99287$ph = 0;
         label = 297;
         break;
        } else if ($711 ^ ($$pre$i3$i$i99 | 0) == 0) {
         $$pre$i3$i$i99287297 = $$pre$i3$i$i99;
         $876 = $$pre$i3$i$i99;
         break;
        } else {
         label = 304;
         break L23;
        }
       } while (0);
       if ((label | 0) == 297) {
        label = 0;
        if ($711) {
         label = 304;
         break L23;
        } else {
         $$pre$i3$i$i99287297 = $$pre$i3$i$i99287$ph;
         $876 = 0;
        }
       }
       $712 = HEAP32[$__b >> 2] | 0;
       $714 = HEAP32[$712 + 12 >> 2] | 0;
       if (($714 | 0) == (HEAP32[$712 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $721 = invoke_ii(HEAP32[(HEAP32[$712 >> 2] | 0) + 36 >> 2] | 0, $712 | 0) | 0;
        $722 = __THREW__;
        __THREW__ = 0;
        if ($722 & 1) {
         label = 40;
         break L23;
        } else $$0$i$i85 = $721;
       } else $$0$i$i85 = HEAP32[$714 >> 2] | 0;
       __THREW__ = 0;
       $728 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i85 | 0) | 0;
       $729 = __THREW__;
       __THREW__ = 0;
       if ($729 & 1) {
        label = 40;
        break L23;
       }
       if (!$728) {
        label = 304;
        break L23;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(17, $__wb | 0, $__wn | 0, $0 | 0);
        $736 = __THREW__;
        __THREW__ = 0;
        if ($736 & 1) {
         label = 40;
         break L23;
        }
       }
       $738 = HEAP32[$__b >> 2] | 0;
       $740 = HEAP32[$738 + 12 >> 2] | 0;
       if (($740 | 0) == (HEAP32[$738 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $747 = invoke_ii(HEAP32[(HEAP32[$738 >> 2] | 0) + 36 >> 2] | 0, $738 | 0) | 0;
        $748 = __THREW__;
        __THREW__ = 0;
        if ($748 & 1) {
         label = 40;
         break L23;
        } else $$0$i$i77 = $747;
       } else $$0$i$i77 = HEAP32[$740 >> 2] | 0;
       $751 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $751 + 4;
       HEAP32[$751 >> 2] = $$0$i$i77;
       $753 = $679 + -1 | 0;
       HEAP32[$__fd >> 2] = $753;
       $754 = HEAP32[$__b >> 2] | 0;
       $755 = $754 + 12 | 0;
       $756 = HEAP32[$755 >> 2] | 0;
       if (($756 | 0) == (HEAP32[$754 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$754 >> 2] | 0) + 40 >> 2] | 0, $754 | 0) | 0;
        $763 = __THREW__;
        __THREW__ = 0;
        if ($763 & 1) {
         label = 40;
         break L23;
        }
       } else HEAP32[$755 >> 2] = $756 + 4;
       $$pre$i3$i$i99 = $$pre$i3$i$i99287297;
       $679 = $753;
       $696 = $876;
      }
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 316;
      break L23;
     } else {
      $865 = $873;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   case 3:
    {
     $190 = HEAP8[$__psn >> 0] | 0;
     $192 = ($190 & 1) == 0;
     if ($192) $204 = ($190 & 255) >>> 1; else $204 = HEAP32[$18 >> 2] | 0;
     $196 = HEAP8[$__nsn >> 0] | 0;
     $198 = ($196 & 1) == 0;
     if ($198) $203 = ($196 & 255) >>> 1; else $203 = HEAP32[$16 >> 2] | 0;
     if (($204 | 0) == (0 - $203 | 0)) {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      if ($192) $209 = ($190 & 255) >>> 1; else $209 = HEAP32[$18 >> 2] | 0;
      if ($209) {
       if ($198) $214 = ($196 & 255) >>> 1; else $214 = HEAP32[$16 >> 2] | 0;
       if ($214) {
        $293 = HEAP32[$__b >> 2] | 0;
        $295 = HEAP32[$293 + 12 >> 2] | 0;
        if (($295 | 0) == (HEAP32[$293 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $302 = invoke_ii(HEAP32[(HEAP32[$293 >> 2] | 0) + 36 >> 2] | 0, $293 | 0) | 0;
         $303 = __THREW__;
         __THREW__ = 0;
         if ($303 & 1) {
          label = 42;
          break L23;
         }
         $$0$i$i121 = $302;
         $307 = HEAP8[$__psn >> 0] | 0;
        } else {
         $$0$i$i121 = HEAP32[$295 >> 2] | 0;
         $307 = $190;
        }
        $312 = HEAP32[$__b >> 2] | 0;
        $313 = $312 + 12 | 0;
        $314 = HEAP32[$313 >> 2] | 0;
        $317 = ($314 | 0) == (HEAP32[$312 + 16 >> 2] | 0);
        if (($$0$i$i121 | 0) == (HEAP32[(($307 & 1) == 0 ? $18 : HEAP32[$19 >> 2] | 0) >> 2] | 0)) {
         if ($317) {
          __THREW__ = 0;
          invoke_ii(HEAP32[(HEAP32[$312 >> 2] | 0) + 40 >> 2] | 0, $312 | 0) | 0;
          $321 = __THREW__;
          __THREW__ = 0;
          if ($321 & 1) {
           label = 42;
           break L23;
          }
         } else HEAP32[$313 >> 2] = $314 + 4;
         $324 = HEAP8[$__psn >> 0] | 0;
         if (!($324 & 1)) $330 = ($324 & 255) >>> 1; else $330 = HEAP32[$18 >> 2] | 0;
         $865 = $862;
         $__trailing_sign$1 = $330 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
         break L48;
        }
        if ($317) {
         __THREW__ = 0;
         $335 = invoke_ii(HEAP32[(HEAP32[$312 >> 2] | 0) + 36 >> 2] | 0, $312 | 0) | 0;
         $336 = __THREW__;
         __THREW__ = 0;
         if ($336 & 1) {
          label = 42;
          break L23;
         } else $$0$i$i143 = $335;
        } else $$0$i$i143 = HEAP32[$314 >> 2] | 0;
        if (($$0$i$i143 | 0) != (HEAP32[((HEAP8[$__nsn >> 0] & 1) == 0 ? $16 : HEAP32[$17 >> 2] | 0) >> 2] | 0)) {
         label = 152;
         break L23;
        }
        $345 = HEAP32[$__b >> 2] | 0;
        $346 = $345 + 12 | 0;
        $347 = HEAP32[$346 >> 2] | 0;
        if (($347 | 0) == (HEAP32[$345 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$345 >> 2] | 0) + 40 >> 2] | 0, $345 | 0) | 0;
         $354 = __THREW__;
         __THREW__ = 0;
         if ($354 & 1) {
          label = 42;
          break L23;
         }
        } else HEAP32[$346 >> 2] = $347 + 4;
        HEAP8[$__neg >> 0] = 1;
        $357 = HEAP8[$__nsn >> 0] | 0;
        if (!($357 & 1)) $363 = ($357 & 255) >>> 1; else $363 = HEAP32[$16 >> 2] | 0;
        $865 = $862;
        $__trailing_sign$1 = $363 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
        break L48;
       }
      }
      if ($192) $219 = ($190 & 255) >>> 1; else $219 = HEAP32[$18 >> 2] | 0;
      $221 = HEAP32[$__b >> 2] | 0;
      $223 = HEAP32[$221 + 12 >> 2] | 0;
      $226 = ($223 | 0) == (HEAP32[$221 + 16 >> 2] | 0);
      if (!$219) {
       if ($226) {
        __THREW__ = 0;
        $263 = invoke_ii(HEAP32[(HEAP32[$221 >> 2] | 0) + 36 >> 2] | 0, $221 | 0) | 0;
        $264 = __THREW__;
        __THREW__ = 0;
        if ($264 & 1) {
         label = 42;
         break L23;
        }
        $$0$i$i109 = $263;
        $268 = HEAP8[$__nsn >> 0] | 0;
       } else {
        $$0$i$i109 = HEAP32[$223 >> 2] | 0;
        $268 = $196;
       }
       if (($$0$i$i109 | 0) != (HEAP32[(($268 & 1) == 0 ? $16 : HEAP32[$17 >> 2] | 0) >> 2] | 0)) {
        $865 = $862;
        $__trailing_sign$1 = $__trailing_sign$0;
        break L48;
       }
       $273 = HEAP32[$__b >> 2] | 0;
       $274 = $273 + 12 | 0;
       $275 = HEAP32[$274 >> 2] | 0;
       if (($275 | 0) == (HEAP32[$273 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$273 >> 2] | 0) + 40 >> 2] | 0, $273 | 0) | 0;
        $282 = __THREW__;
        __THREW__ = 0;
        if ($282 & 1) {
         label = 42;
         break L23;
        }
       } else HEAP32[$274 >> 2] = $275 + 4;
       HEAP8[$__neg >> 0] = 1;
       $285 = HEAP8[$__nsn >> 0] | 0;
       if (!($285 & 1)) $291 = ($285 & 255) >>> 1; else $291 = HEAP32[$16 >> 2] | 0;
       $865 = $862;
       $__trailing_sign$1 = $291 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
       break L48;
      }
      if ($226) {
       __THREW__ = 0;
       $230 = invoke_ii(HEAP32[(HEAP32[$221 >> 2] | 0) + 36 >> 2] | 0, $221 | 0) | 0;
       $231 = __THREW__;
       __THREW__ = 0;
       if ($231 & 1) {
        label = 42;
        break L23;
       }
       $$0$i$i88 = $230;
       $235 = HEAP8[$__psn >> 0] | 0;
      } else {
       $$0$i$i88 = HEAP32[$223 >> 2] | 0;
       $235 = $190;
      }
      if (($$0$i$i88 | 0) != (HEAP32[(($235 & 1) == 0 ? $18 : HEAP32[$19 >> 2] | 0) >> 2] | 0)) {
       HEAP8[$__neg >> 0] = 1;
       $865 = $862;
       $__trailing_sign$1 = $__trailing_sign$0;
       break L48;
      }
      $240 = HEAP32[$__b >> 2] | 0;
      $241 = $240 + 12 | 0;
      $242 = HEAP32[$241 >> 2] | 0;
      if (($242 | 0) == (HEAP32[$240 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$240 >> 2] | 0) + 40 >> 2] | 0, $240 | 0) | 0;
       $249 = __THREW__;
       __THREW__ = 0;
       if ($249 & 1) {
        label = 42;
        break L23;
       }
      } else HEAP32[$241 >> 2] = $242 + 4;
      $252 = HEAP8[$__psn >> 0] | 0;
      if (!($252 & 1)) $258 = ($252 & 255) >>> 1; else $258 = HEAP32[$18 >> 2] | 0;
      $865 = $862;
      $__trailing_sign$1 = $258 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
     }
     break;
    }
   case 1:
    {
     if (($__p$0 | 0) == 3) {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      $86 = HEAP32[$__b >> 2] | 0;
      $88 = HEAP32[$86 + 12 >> 2] | 0;
      if (($88 | 0) == (HEAP32[$86 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $95 = invoke_ii(HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] | 0, $86 | 0) | 0;
       $96 = __THREW__;
       __THREW__ = 0;
       if ($96 & 1) {
        label = 42;
        break L23;
       } else $$0$i$i45 = $95;
      } else $$0$i$i45 = HEAP32[$88 >> 2] | 0;
      __THREW__ = 0;
      $102 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i45 | 0) | 0;
      $103 = __THREW__;
      __THREW__ = 0;
      if ($103 & 1) {
       label = 42;
       break L23;
      }
      if (!$102) {
       label = 58;
       break L23;
      }
      $105 = HEAP32[$__b >> 2] | 0;
      $106 = $105 + 12 | 0;
      $107 = HEAP32[$106 >> 2] | 0;
      if (($107 | 0) == (HEAP32[$105 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $114 = invoke_ii(HEAP32[(HEAP32[$105 >> 2] | 0) + 40 >> 2] | 0, $105 | 0) | 0;
       $115 = __THREW__;
       __THREW__ = 0;
       if ($115 & 1) {
        label = 42;
        break L23;
       } else $$0$i$i49 = $114;
      } else {
       HEAP32[$106 >> 2] = $107 + 4;
       $$0$i$i49 = HEAP32[$107 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_vii(75, $__spaces | 0, $$0$i$i49 | 0);
      $119 = __THREW__;
      __THREW__ = 0;
      if ($119 & 1) {
       label = 42;
       break L23;
      } else label = 60;
     }
     break;
    }
   case 2:
    {
     if (!($__p$0 >>> 0 < 2 | ($__trailing_sign$0 | 0) != 0)) {
      if (($__p$0 | 0) == 2) $372 = (HEAP8[$26 >> 0] | 0) != 0; else $372 = 0;
      if (!($21 | $372)) {
       $865 = $862;
       $__trailing_sign$1 = 0;
       break L48;
      }
     }
     $373 = HEAP8[$__sym >> 0] | 0;
     $$302 = ($373 & 1) == 0 ? $22 : HEAP32[$23 >> 2] | 0;
     L293 : do if (!$__p$0) {
      $$ph = $373;
      $$ph341 = $$302;
     } else if ((HEAPU8[$__pat + ($__p$0 + -1) >> 0] | 0) < 2) {
      $382 = $373;
      $391 = $$302;
      while (1) {
       if (!($382 & 1)) {
        $389 = $22;
        $390 = ($382 & 255) >>> 1;
       } else {
        $389 = HEAP32[$23 >> 2] | 0;
        $390 = HEAP32[$22 >> 2] | 0;
       }
       if (($391 | 0) == ($389 + ($390 << 2) | 0)) {
        $$lcssa = $382;
        $$lcssa346 = $391;
        label = 168;
        break;
       }
       __THREW__ = 0;
       $397 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, HEAP32[$391 >> 2] | 0) | 0;
       $398 = __THREW__;
       __THREW__ = 0;
       if ($398 & 1) {
        label = 39;
        break L23;
       }
       if (!$397) {
        $$lcssa348 = $391;
        label = 166;
        break;
       }
       $382 = HEAP8[$__sym >> 0] | 0;
       $391 = $391 + 4 | 0;
      }
      if ((label | 0) == 166) {
       label = 0;
       $402 = HEAP8[$__sym >> 0] | 0;
       $405 = $$lcssa348;
      } else if ((label | 0) == 168) {
       label = 0;
       $402 = $$lcssa;
       $405 = $$lcssa346;
      }
      $403 = ($402 & 1) == 0;
      $409 = $405 - ($403 ? $22 : HEAP32[$23 >> 2] | 0) >> 2;
      $410 = HEAP8[$__spaces >> 0] | 0;
      $412 = ($410 & 1) == 0;
      if ($412) $417 = ($410 & 255) >>> 1; else $417 = HEAP32[$24 >> 2] | 0;
      do if ($409 >>> 0 <= $417 >>> 0) {
       if ($412) {
        $427 = $24;
        $428 = ($410 & 255) >>> 1;
        $867 = $24 + ((($410 & 255) >>> 1) - $409 << 2) | 0;
       } else {
        $418 = HEAP32[$25 >> 2] | 0;
        $419 = HEAP32[$24 >> 2] | 0;
        $427 = $418;
        $428 = $419;
        $867 = $418 + ($419 - $409 << 2) | 0;
       }
       $426 = $427 + ($428 << 2) | 0;
       $430 = $867;
       $434 = $403 ? $22 : HEAP32[$23 >> 2] | 0;
       while (1) {
        if (($430 | 0) == ($426 | 0)) {
         label = 182;
         break;
        }
        if ((HEAP32[$430 >> 2] | 0) != (HEAP32[$434 >> 2] | 0)) {
         label = 180;
         break;
        }
        $430 = $430 + 4 | 0;
        $434 = $434 + 4 | 0;
       }
       if ((label | 0) == 180) {
        label = 0;
        break;
       } else if ((label | 0) == 182) {
        label = 0;
        $$ph = $402;
        $$ph341 = $405;
        break L293;
       }
      } while (0);
      $$ph = $402;
      $$ph341 = $403 ? $22 : HEAP32[$23 >> 2] | 0;
     } else {
      $$ph = $373;
      $$ph341 = $$302;
     } while (0);
     $$pre$i3$i$i190 = $864;
     $440 = $$ph;
     $449 = $$ph341;
     $466 = $864;
     L328 : while (1) {
      if (!($440 & 1)) {
       $447 = $22;
       $448 = ($440 & 255) >>> 1;
      } else {
       $447 = HEAP32[$23 >> 2] | 0;
       $448 = HEAP32[$22 >> 2] | 0;
      }
      if (($449 | 0) == ($447 + ($448 << 2) | 0)) {
       $$lcssa349 = $449;
       break;
      }
      $451 = HEAP32[$__b >> 2] | 0;
      do if (!$451) $481 = 1; else {
       $454 = HEAP32[$451 + 12 >> 2] | 0;
       if (($454 | 0) == (HEAP32[$451 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $461 = invoke_ii(HEAP32[(HEAP32[$451 >> 2] | 0) + 36 >> 2] | 0, $451 | 0) | 0;
        $462 = __THREW__;
        __THREW__ = 0;
        if ($462 & 1) {
         label = 38;
         break L23;
        } else $$0$i$i$i$i182 = $461;
       } else $$0$i$i$i$i182 = HEAP32[$454 >> 2] | 0;
       if (($$0$i$i$i$i182 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $481 = 1;
        break;
       } else {
        $481 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$466) {
       $$pre$i3$i$i190282 = $$pre$i3$i$i190;
       label = 201;
      } else {
       $469 = HEAP32[$466 + 12 >> 2] | 0;
       if (($469 | 0) == (HEAP32[$466 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $476 = invoke_ii(HEAP32[(HEAP32[$466 >> 2] | 0) + 36 >> 2] | 0, $466 | 0) | 0;
        $477 = __THREW__;
        __THREW__ = 0;
        if ($477 & 1) {
         label = 38;
         break L23;
        } else $$0$i$i1$i$i188 = $476;
       } else $$0$i$i1$i$i188 = HEAP32[$469 >> 2] | 0;
       if (($$0$i$i1$i$i188 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i3$i$i190282 = 0;
        label = 201;
        break;
       } else if ($481 ^ ($$pre$i3$i$i190 | 0) == 0) {
        $$pre$i3$i$i190281 = $$pre$i3$i$i190;
        $868 = $$pre$i3$i$i190;
        break;
       } else {
        $$lcssa349 = $449;
        break L328;
       }
      } while (0);
      if ((label | 0) == 201) {
       label = 0;
       if ($481) {
        $$lcssa349 = $449;
        break;
       } else {
        $$pre$i3$i$i190281 = $$pre$i3$i$i190282;
        $868 = 0;
       }
      }
      $482 = HEAP32[$__b >> 2] | 0;
      $484 = HEAP32[$482 + 12 >> 2] | 0;
      if (($484 | 0) == (HEAP32[$482 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $491 = invoke_ii(HEAP32[(HEAP32[$482 >> 2] | 0) + 36 >> 2] | 0, $482 | 0) | 0;
       $492 = __THREW__;
       __THREW__ = 0;
       if ($492 & 1) {
        label = 38;
        break L23;
       } else $$0$i$i178 = $491;
      } else $$0$i$i178 = HEAP32[$484 >> 2] | 0;
      if (($$0$i$i178 | 0) != (HEAP32[$449 >> 2] | 0)) {
       $$lcssa349 = $449;
       break;
      }
      $497 = HEAP32[$__b >> 2] | 0;
      $498 = $497 + 12 | 0;
      $499 = HEAP32[$498 >> 2] | 0;
      if (($499 | 0) == (HEAP32[$497 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$497 >> 2] | 0) + 40 >> 2] | 0, $497 | 0) | 0;
       $506 = __THREW__;
       __THREW__ = 0;
       if ($506 & 1) {
        label = 38;
        break L23;
       }
      } else HEAP32[$498 >> 2] = $499 + 4;
      $$pre$i3$i$i190 = $$pre$i3$i$i190281;
      $440 = HEAP8[$__sym >> 0] | 0;
      $449 = $449 + 4 | 0;
      $466 = $868;
     }
     if ($21) {
      $510 = HEAP8[$__sym >> 0] | 0;
      if (!($510 & 1)) {
       $518 = $22;
       $519 = ($510 & 255) >>> 1;
      } else {
       $518 = HEAP32[$23 >> 2] | 0;
       $519 = HEAP32[$22 >> 2] | 0;
      }
      if (($$lcssa349 | 0) == ($518 + ($519 << 2) | 0)) {
       $865 = $862;
       $__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 216;
       break L23;
      }
     } else {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   default:
    {
     $865 = $862;
     $__trailing_sign$1 = $__trailing_sign$0;
    }
   } while (0);
   if ((label | 0) == 60) {
    label = 0;
    $$pre$i3$i$i59 = $864;
    $139 = $864;
    L374 : while (1) {
     $124 = HEAP32[$__b >> 2] | 0;
     do if (!$124) $154 = 1; else {
      $127 = HEAP32[$124 + 12 >> 2] | 0;
      if (($127 | 0) == (HEAP32[$124 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $134 = invoke_ii(HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] | 0, $124 | 0) | 0;
       $135 = __THREW__;
       __THREW__ = 0;
       if ($135 & 1) {
        label = 37;
        break L23;
       } else $$0$i$i$i$i51 = $134;
      } else $$0$i$i$i$i51 = HEAP32[$127 >> 2] | 0;
      if (($$0$i$i$i$i51 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $154 = 1;
       break;
      } else {
       $154 = (HEAP32[$__b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$139) {
      $$pre$i3$i$i59275 = $$pre$i3$i$i59;
      label = 74;
     } else {
      $142 = HEAP32[$139 + 12 >> 2] | 0;
      if (($142 | 0) == (HEAP32[$139 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $149 = invoke_ii(HEAP32[(HEAP32[$139 >> 2] | 0) + 36 >> 2] | 0, $139 | 0) | 0;
       $150 = __THREW__;
       __THREW__ = 0;
       if ($150 & 1) {
        label = 37;
        break L23;
       } else $$0$i$i1$i$i57 = $149;
      } else $$0$i$i1$i$i57 = HEAP32[$142 >> 2] | 0;
      if (($$0$i$i1$i$i57 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i3$i$i59275 = 0;
       label = 74;
       break;
      } else if ($154 ^ ($$pre$i3$i$i59 | 0) == 0) {
       $$pre$i3$i$i59277 = $$pre$i3$i$i59;
       $866 = $$pre$i3$i$i59;
       break;
      } else break L374;
     } while (0);
     if ((label | 0) == 74) {
      label = 0;
      if ($154) break; else {
       $$pre$i3$i$i59277 = $$pre$i3$i$i59275;
       $866 = 0;
      }
     }
     $155 = HEAP32[$__b >> 2] | 0;
     $157 = HEAP32[$155 + 12 >> 2] | 0;
     if (($157 | 0) == (HEAP32[$155 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $164 = invoke_ii(HEAP32[(HEAP32[$155 >> 2] | 0) + 36 >> 2] | 0, $155 | 0) | 0;
      $165 = __THREW__;
      __THREW__ = 0;
      if ($165 & 1) {
       label = 37;
       break L23;
      } else $$0$i$i66 = $164;
     } else $$0$i$i66 = HEAP32[$157 >> 2] | 0;
     __THREW__ = 0;
     $171 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i66 | 0) | 0;
     $172 = __THREW__;
     __THREW__ = 0;
     if ($172 & 1) {
      label = 37;
      break L23;
     }
     if (!$171) break;
     $174 = HEAP32[$__b >> 2] | 0;
     $175 = $174 + 12 | 0;
     $176 = HEAP32[$175 >> 2] | 0;
     if (($176 | 0) == (HEAP32[$174 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $183 = invoke_ii(HEAP32[(HEAP32[$174 >> 2] | 0) + 40 >> 2] | 0, $174 | 0) | 0;
      $184 = __THREW__;
      __THREW__ = 0;
      if ($184 & 1) {
       label = 37;
       break L23;
      } else $$0$i$i72 = $183;
     } else {
      HEAP32[$175 >> 2] = $176 + 4;
      $$0$i$i72 = HEAP32[$176 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_vii(75, $__spaces | 0, $$0$i$i72 | 0);
     $188 = __THREW__;
     __THREW__ = 0;
     if ($188 & 1) {
      label = 37;
      break L23;
     } else {
      $$pre$i3$i$i59 = $$pre$i3$i$i59277;
      $139 = $866;
     }
    }
    $865 = $862;
    $__trailing_sign$1 = $__trailing_sign$0;
   }
   $862 = $865;
   $__p$0 = $__p$0 + 1 | 0;
   $__trailing_sign$0 = $__trailing_sign$1;
  }
  L410 : switch (label | 0) {
  case 37:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 38:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 39:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 40:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 41:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 42:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 58:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 152:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 216:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 278:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 304:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 316:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 319:
   {
    do if ($__trailing_sign$0$lcssa) {
     $773 = $__trailing_sign$0$lcssa + 4 | 0;
     $774 = $__trailing_sign$0$lcssa + 8 | 0;
     $__i$0 = 1;
     L421 : while (1) {
      $775 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($775 & 1)) $782 = ($775 & 255) >>> 1; else $782 = HEAP32[$773 >> 2] | 0;
      if ($__i$0 >>> 0 >= $782 >>> 0) {
       label = 351;
       break;
      }
      $783 = HEAP32[$__b >> 2] | 0;
      do if (!$783) $877 = 1; else {
       $786 = HEAP32[$783 + 12 >> 2] | 0;
       if (($786 | 0) == (HEAP32[$783 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $793 = invoke_ii(HEAP32[(HEAP32[$783 >> 2] | 0) + 36 >> 2] | 0, $783 | 0) | 0;
        $794 = __THREW__;
        __THREW__ = 0;
        if ($794 & 1) {
         label = 36;
         break L421;
        } else $$0$i$i$i$i = $793;
       } else $$0$i$i$i$i = HEAP32[$786 >> 2] | 0;
       if (($$0$i$i$i$i | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $877 = 1;
        break;
       } else {
        $877 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      $798 = HEAP32[$__e >> 2] | 0;
      do if (!$798) label = 338; else {
       $801 = HEAP32[$798 + 12 >> 2] | 0;
       if (($801 | 0) == (HEAP32[$798 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $808 = invoke_ii(HEAP32[(HEAP32[$798 >> 2] | 0) + 36 >> 2] | 0, $798 | 0) | 0;
        $809 = __THREW__;
        __THREW__ = 0;
        if ($809 & 1) {
         label = 36;
         break L421;
        } else $$0$i$i1$i$i = $808;
       } else $$0$i$i1$i$i = HEAP32[$801 >> 2] | 0;
       if (($$0$i$i1$i$i | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 338;
        break;
       } else if ($877) break; else {
        label = 346;
        break L421;
       }
      } while (0);
      if ((label | 0) == 338) {
       label = 0;
       if ($877) {
        label = 346;
        break;
       }
      }
      $813 = HEAP32[$__b >> 2] | 0;
      $815 = HEAP32[$813 + 12 >> 2] | 0;
      if (($815 | 0) == (HEAP32[$813 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $822 = invoke_ii(HEAP32[(HEAP32[$813 >> 2] | 0) + 36 >> 2] | 0, $813 | 0) | 0;
       $823 = __THREW__;
       __THREW__ = 0;
       if ($823 & 1) {
        label = 36;
        break;
       } else $$0$i$i = $822;
      } else $$0$i$i = HEAP32[$815 >> 2] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $831 = $773; else $831 = HEAP32[$774 >> 2] | 0;
      if (($$0$i$i | 0) != (HEAP32[$831 + ($__i$0 << 2) >> 2] | 0)) {
       label = 346;
       break;
      }
      $836 = $__i$0 + 1 | 0;
      $837 = HEAP32[$__b >> 2] | 0;
      $838 = $837 + 12 | 0;
      $839 = HEAP32[$838 >> 2] | 0;
      if (($839 | 0) == (HEAP32[$837 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$837 >> 2] | 0) + 40 >> 2] | 0, $837 | 0) | 0;
       $846 = __THREW__;
       __THREW__ = 0;
       if ($846 & 1) {
        label = 36;
        break;
       }
      } else HEAP32[$838 >> 2] = $839 + 4;
      $__i$0 = $836;
     }
     if ((label | 0) == 36) {
      $63 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $63;
      $lpad$phi$index8 = tempRet0;
      break L21;
     } else if ((label | 0) == 346) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L410;
     } else if ((label | 0) == 351) break;
    } while (0);
    $849 = HEAP32[$__gb >> 2] | 0;
    if (($849 | 0) == ($$lcssa351 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $849, $$lcssa351, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $855 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if ($855) {
   __THREW__ = 0;
   invoke_vi(HEAP32[$1 >> 2] | 0, $855 | 0);
   $858 = __THREW__;
   __THREW__ = 0;
   if ($858 & 1) {
    $860 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($860);
   }
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($79) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $79 | 0);
  $82 = __THREW__;
  __THREW__ = 0;
  if ($82 & 1) {
   $84 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($84);
  }
 }
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i113 = 0, $$0$i$i120 = 0, $$0$i$i129 = 0, $$0$i$i139 = 0, $$0$i$i156 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i64 = 0, $$0$i$i67 = 0, $$0$i$i74 = 0, $$0$i$i93 = 0, $$0$i$i96 = 0, $$lcssa = 0, $$lcssa322 = 0, $$lcssa324 = 0, $$lcssa326 = 0, $$ph = 0, $$pre = 0, $$pre$i2$i$i107 = 0, $$pre$i2$i$i147 = 0, $$pre$i2$i$i164 = 0, $$pre$i2$i$i164269 = 0, $$pre$i2$i$i164270 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52256 = 0, $$pre$i2$i$i52258 = 0, $$pre$i2$i$i83 = 0, $$pre$i2$i$i83274$ph = 0, $$pre$i2$i$i83274287 = 0, $$pre262 = 0, $$pre265 = 0, $0 = 0, $1 = 0, $108 = 0, $109 = 0, $110 = 0, $117 = 0, $118 = 0, $124 = 0, $129 = 0, $13 = 0, $139 = 0, $140 = 0, $143 = 0, $144 = 0, $145 = 0, $155 = 0, $156 = 0, $16 = 0, $160 = 0, $162 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $181 = 0, $182 = 0, $183 = 0, $19 = 0, $190 = 0, $191 = 0, $197 = 0, $199 = 0, $20 = 0, $200 = 0, $202 = 0, $204 = 0, $208 = 0, $209 = 0, $211 = 0, $213 = 0, $218 = 0, $219 = 0, $22 = 0, $224 = 0, $229 = 0, $23 = 0, $234 = 0, $236 = 0, $238 = 0, $24 = 0, $241 = 0, $245 = 0, $246 = 0, $25 = 0, $255 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $269 = 0, $27 = 0, $272 = 0, $278 = 0, $28 = 0, $283 = 0, $284 = 0, $29 = 0, $293 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $307 = 0, $310 = 0, $316 = 0, $318 = 0, $32 = 0, $320 = 0, $327 = 0, $328 = 0, $337 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $347 = 0, $351 = 0, $354 = 0, $360 = 0, $365 = 0, $366 = 0, $371 = 0, $378 = 0, $379 = 0, $380 = 0, $381 = 0, $388 = 0, $391 = 0, $397 = 0, $406 = 0, $407 = 0, $409 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $421 = 0, $423 = 0, $43 = 0, $432 = 0, $433 = 0, $435 = 0, $440 = 0, $441 = 0, $442 = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $456 = 0, $46 = 0, $461 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $472 = 0, $48 = 0, $482 = 0, $483 = 0, $486 = 0, $487 = 0, $488 = 0, $498 = 0, $499 = 0, $503 = 0, $505 = 0, $512 = 0, $513 = 0, $520 = 0, $521 = 0, $522 = 0, $529 = 0, $533 = 0, $541 = 0, $542 = 0, $546 = 0, $556 = 0, $557 = 0, $560 = 0, $561 = 0, $562 = 0, $572 = 0, $573 = 0, $577 = 0, $579 = 0, $58 = 0, $586 = 0, $587 = 0, $59 = 0, $591 = 0, $598 = 0, $601 = 0, $604 = 0, $606 = 0, $612 = 0, $617 = 0, $619 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $632 = 0, $640 = 0, $642 = 0, $643 = 0, $644 = 0, $646 = 0, $65 = 0, $656 = 0, $657 = 0, $66 = 0, $660 = 0, $661 = 0, $671 = 0, $672 = 0, $675 = 0, $677 = 0, $684 = 0, $685 = 0, $694 = 0, $695 = 0, $696 = 0, $703 = 0, $706 = 0, $708 = 0, $718 = 0, $719 = 0, $722 = 0, $723 = 0, $724 = 0, $734 = 0, $735 = 0, $739 = 0, $741 = 0, $748 = 0, $749 = 0, $765 = 0, $767 = 0, $769 = 0, $776 = 0, $777 = 0, $78 = 0, $782 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $794 = 0, $80 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $814 = 0, $815 = 0, $825 = 0, $826 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $841 = 0, $842 = 0, $845 = 0, $847 = 0, $85 = 0, $854 = 0, $855 = 0, $865 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $880 = 0, $883 = 0, $889 = 0, $89 = 0, $892 = 0, $894 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $910 = 0, $911 = 0, $96 = 0, $97 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i17 = 0, $__i$0$i$i21 = 0, $__i$0$i$i26 = 0, $__ng$0 = 0, $__ng$0$lcssa323 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 488 | 0;
 $__gbuf = sp + 88 | 0;
 $__gb = sp + 80 | 0;
 $__gn = sp + 72 | 0;
 $__ge = sp + 68 | 0;
 $__pat = sp + 496 | 0;
 $__dp = sp + 493 | 0;
 $__ts = sp + 492 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $1 = $__gb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 $__i$0$i$i14 = 0;
 while (1) {
  if (($__i$0$i$i14 | 0) == 3) break;
  HEAP32[$__sym + ($__i$0$i$i14 << 2) >> 2] = 0;
  $__i$0$i$i14 = $__i$0$i$i14 + 1 | 0;
 }
 $__i$0$i$i17 = 0;
 while (1) {
  if (($__i$0$i$i17 | 0) == 3) break;
  HEAP32[$__psn + ($__i$0$i$i17 << 2) >> 2] = 0;
  $__i$0$i$i17 = $__i$0$i$i17 + 1 | 0;
 }
 $__i$0$i$i21 = 0;
 while (1) {
  if (($__i$0$i$i21 | 0) == 3) break;
  HEAP32[$__nsn + ($__i$0$i$i21 << 2) >> 2] = 0;
  $__i$0$i$i21 = $__i$0$i$i21 + 1 | 0;
 }
 $__i$0$i$i26 = 0;
 while (1) {
  if (($__i$0$i$i26 | 0) == 3) break;
  HEAP32[$__spaces + ($__i$0$i$i26 << 2) >> 2] = 0;
  $__i$0$i$i26 = $__i$0$i$i26 + 1 | 0;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(1, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L21 : do if ($13 & 1) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index7 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $16 = $__ct + 8 | 0;
  $17 = $__nsn + 4 | 0;
  $18 = $__nsn + 8 | 0;
  $19 = $__psn + 4 | 0;
  $20 = $__psn + 8 | 0;
  $22 = ($__flags & 512 | 0) != 0;
  $23 = $__sym + 1 | 0;
  $24 = $__sym + 8 | 0;
  $25 = $__sym + 4 | 0;
  $26 = $__spaces + 1 | 0;
  $27 = $__spaces + 8 | 0;
  $28 = $__spaces + 4 | 0;
  $29 = $__pat + 3 | 0;
  $30 = $__grp + 4 | 0;
  $896 = $__gbuf;
  $__p$0 = 0;
  $__trailing_sign$0 = 0;
  L23 : while (1) {
   if ($__p$0 >>> 0 >= 4) {
    $$lcssa326 = $896;
    $__trailing_sign$0$lcssa = $__trailing_sign$0;
    label = 315;
    break;
   }
   $32 = HEAP32[$__b >> 2] | 0;
   do if (!$32) $46 = 0; else if ((HEAP32[$32 + 12 >> 2] | 0) == (HEAP32[$32 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $42 = invoke_ii(HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] | 0, $32 | 0) | 0;
    $43 = __THREW__;
    __THREW__ = 0;
    if ($43 & 1) {
     label = 40;
     break L23;
    }
    if (($42 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $46 = 0;
     break;
    } else {
     $46 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $46 = $32; while (0);
   $47 = ($46 | 0) == 0;
   $48 = HEAP32[$__e >> 2] | 0;
   do if (!$48) label = 31; else {
    if ((HEAP32[$48 + 12 >> 2] | 0) != (HEAP32[$48 + 16 >> 2] | 0)) if ($47) {
     $897 = $48;
     break;
    } else {
     $$lcssa326 = $896;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break L23;
    }
    __THREW__ = 0;
    $58 = invoke_ii(HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] | 0, $48 | 0) | 0;
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 40;
     break L23;
    }
    if (($58 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 31;
     break;
    } else if ($47) {
     $897 = $48;
     break;
    } else {
     $$lcssa326 = $896;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break L23;
    }
   } while (0);
   if ((label | 0) == 31) {
    label = 0;
    if ($47) {
     $$lcssa326 = $896;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break;
    } else $897 = 0;
   }
   L46 : do switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
   case 3:
    {
     $199 = HEAP16[$__psn >> 1] | 0;
     $200 = $199 & 255;
     $202 = ($200 & 1) == 0;
     $204 = ($199 & 65535) >>> 8 & 255;
     if ($202) $219 = ($199 & 254) >>> 1; else $219 = HEAP32[$19 >> 2] | 0;
     $208 = HEAP16[$__nsn >> 1] | 0;
     $209 = $208 & 255;
     $211 = ($209 & 1) == 0;
     $213 = ($208 & 65535) >>> 8 & 255;
     if ($211) $218 = ($208 & 254) >>> 1; else $218 = HEAP32[$17 >> 2] | 0;
     if (($219 | 0) == (0 - $218 | 0)) {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      if ($202) $224 = ($199 & 254) >>> 1; else $224 = HEAP32[$19 >> 2] | 0;
      if ($224) {
       if ($211) $229 = ($208 & 254) >>> 1; else $229 = HEAP32[$17 >> 2] | 0;
       if ($229) {
        $318 = HEAP32[$__b >> 2] | 0;
        $320 = HEAP32[$318 + 12 >> 2] | 0;
        if (($320 | 0) == (HEAP32[$318 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $327 = invoke_ii(HEAP32[(HEAP32[$318 >> 2] | 0) + 36 >> 2] | 0, $318 | 0) | 0;
         $328 = __THREW__;
         __THREW__ = 0;
         if ($328 & 1) {
          label = 40;
          break L23;
         }
         $$pre265 = HEAP16[$__psn >> 1] | 0;
         $$0$i$i120 = $327;
         $337 = $$pre265 & 255;
         $902 = ($$pre265 & 65535) >>> 8 & 255;
        } else {
         $$0$i$i120 = HEAPU8[$320 >> 0] | 0;
         $337 = $200;
         $902 = $204;
        }
        if (!($337 & 1)) $341 = $902; else $341 = HEAP8[HEAP32[$20 >> 2] >> 0] | 0;
        $342 = HEAP32[$__b >> 2] | 0;
        $343 = $342 + 12 | 0;
        $344 = HEAP32[$343 >> 2] | 0;
        $347 = ($344 | 0) == (HEAP32[$342 + 16 >> 2] | 0);
        if (($$0$i$i120 & 255) << 24 >> 24 == $341 << 24 >> 24) {
         if ($347) {
          __THREW__ = 0;
          invoke_ii(HEAP32[(HEAP32[$342 >> 2] | 0) + 40 >> 2] | 0, $342 | 0) | 0;
          $351 = __THREW__;
          __THREW__ = 0;
          if ($351 & 1) {
           label = 40;
           break L23;
          }
         } else HEAP32[$343 >> 2] = $344 + 1;
         $354 = HEAP8[$__psn >> 0] | 0;
         if (!($354 & 1)) $360 = ($354 & 255) >>> 1; else $360 = HEAP32[$19 >> 2] | 0;
         $898 = $896;
         $__trailing_sign$1 = $360 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
         break L46;
        }
        if ($347) {
         __THREW__ = 0;
         $365 = invoke_ii(HEAP32[(HEAP32[$342 >> 2] | 0) + 36 >> 2] | 0, $342 | 0) | 0;
         $366 = __THREW__;
         __THREW__ = 0;
         if ($366 & 1) {
          label = 40;
          break L23;
         } else $$0$i$i129 = $365;
        } else $$0$i$i129 = HEAPU8[$344 >> 0] | 0;
        $371 = HEAP16[$__nsn >> 1] | 0;
        if (!($371 & 1)) $378 = ($371 & 65535) >>> 8 & 255; else $378 = HEAP8[HEAP32[$18 >> 2] >> 0] | 0;
        if (($$0$i$i129 & 255) << 24 >> 24 != $378 << 24 >> 24) {
         label = 158;
         break L23;
        }
        $379 = HEAP32[$__b >> 2] | 0;
        $380 = $379 + 12 | 0;
        $381 = HEAP32[$380 >> 2] | 0;
        if (($381 | 0) == (HEAP32[$379 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$379 >> 2] | 0) + 40 >> 2] | 0, $379 | 0) | 0;
         $388 = __THREW__;
         __THREW__ = 0;
         if ($388 & 1) {
          label = 40;
          break L23;
         }
        } else HEAP32[$380 >> 2] = $381 + 1;
        HEAP8[$__neg >> 0] = 1;
        $391 = HEAP8[$__nsn >> 0] | 0;
        if (!($391 & 1)) $397 = ($391 & 255) >>> 1; else $397 = HEAP32[$17 >> 2] | 0;
        $898 = $896;
        $__trailing_sign$1 = $397 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
        break L46;
       }
      }
      if ($202) $234 = ($199 & 254) >>> 1; else $234 = HEAP32[$19 >> 2] | 0;
      $236 = HEAP32[$__b >> 2] | 0;
      $238 = HEAP32[$236 + 12 >> 2] | 0;
      $241 = ($238 | 0) == (HEAP32[$236 + 16 >> 2] | 0);
      if (!$234) {
       if ($241) {
        __THREW__ = 0;
        $283 = invoke_ii(HEAP32[(HEAP32[$236 >> 2] | 0) + 36 >> 2] | 0, $236 | 0) | 0;
        $284 = __THREW__;
        __THREW__ = 0;
        if ($284 & 1) {
         label = 40;
         break L23;
        }
        $$pre = HEAP16[$__nsn >> 1] | 0;
        $$0$i$i113 = $283;
        $293 = $$pre & 255;
        $901 = ($$pre & 65535) >>> 8 & 255;
       } else {
        $$0$i$i113 = HEAPU8[$238 >> 0] | 0;
        $293 = $209;
        $901 = $213;
       }
       if (!($293 & 1)) $297 = $901; else $297 = HEAP8[HEAP32[$18 >> 2] >> 0] | 0;
       if (($$0$i$i113 & 255) << 24 >> 24 != $297 << 24 >> 24) {
        $898 = $896;
        $__trailing_sign$1 = $__trailing_sign$0;
        break L46;
       }
       $298 = HEAP32[$__b >> 2] | 0;
       $299 = $298 + 12 | 0;
       $300 = HEAP32[$299 >> 2] | 0;
       if (($300 | 0) == (HEAP32[$298 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$298 >> 2] | 0) + 40 >> 2] | 0, $298 | 0) | 0;
        $307 = __THREW__;
        __THREW__ = 0;
        if ($307 & 1) {
         label = 40;
         break L23;
        }
       } else HEAP32[$299 >> 2] = $300 + 1;
       HEAP8[$__neg >> 0] = 1;
       $310 = HEAP8[$__nsn >> 0] | 0;
       if (!($310 & 1)) $316 = ($310 & 255) >>> 1; else $316 = HEAP32[$17 >> 2] | 0;
       $898 = $896;
       $__trailing_sign$1 = $316 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
       break L46;
      }
      if ($241) {
       __THREW__ = 0;
       $245 = invoke_ii(HEAP32[(HEAP32[$236 >> 2] | 0) + 36 >> 2] | 0, $236 | 0) | 0;
       $246 = __THREW__;
       __THREW__ = 0;
       if ($246 & 1) {
        label = 40;
        break L23;
       }
       $$pre262 = HEAP16[$__psn >> 1] | 0;
       $$0$i$i93 = $245;
       $255 = $$pre262 & 255;
       $900 = ($$pre262 & 65535) >>> 8 & 255;
      } else {
       $$0$i$i93 = HEAPU8[$238 >> 0] | 0;
       $255 = $200;
       $900 = $204;
      }
      if (!($255 & 1)) $259 = $900; else $259 = HEAP8[HEAP32[$20 >> 2] >> 0] | 0;
      if (($$0$i$i93 & 255) << 24 >> 24 != $259 << 24 >> 24) {
       HEAP8[$__neg >> 0] = 1;
       $898 = $896;
       $__trailing_sign$1 = $__trailing_sign$0;
       break L46;
      }
      $260 = HEAP32[$__b >> 2] | 0;
      $261 = $260 + 12 | 0;
      $262 = HEAP32[$261 >> 2] | 0;
      if (($262 | 0) == (HEAP32[$260 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$260 >> 2] | 0) + 40 >> 2] | 0, $260 | 0) | 0;
       $269 = __THREW__;
       __THREW__ = 0;
       if ($269 & 1) {
        label = 40;
        break L23;
       }
      } else HEAP32[$261 >> 2] = $262 + 1;
      $272 = HEAP8[$__psn >> 0] | 0;
      if (!($272 & 1)) $278 = ($272 & 255) >>> 1; else $278 = HEAP32[$19 >> 2] | 0;
      $898 = $896;
      $__trailing_sign$1 = $278 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
     }
     break;
    }
   case 0:
    {
     if (($__p$0 | 0) == 3) {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else label = 58;
     break;
    }
   case 4:
    {
     $65 = HEAP8[$__ts >> 0] | 0;
     $$pre$i2$i$i147 = $897;
     $562 = $897;
     $617 = $896;
     $__ng$0 = 0;
     L150 : while (1) {
      $546 = HEAP32[$__b >> 2] | 0;
      do if (!$546) $560 = 0; else if ((HEAP32[$546 + 12 >> 2] | 0) == (HEAP32[$546 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $556 = invoke_ii(HEAP32[(HEAP32[$546 >> 2] | 0) + 36 >> 2] | 0, $546 | 0) | 0;
       $557 = __THREW__;
       __THREW__ = 0;
       if ($557 & 1) {
        label = 39;
        break L23;
       }
       if (($556 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $560 = 0;
        break;
       } else {
        $560 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $560 = $546; while (0);
      $561 = ($560 | 0) == 0;
      do if (!$562) {
       $905 = $$pre$i2$i$i147;
       label = 229;
      } else {
       if ((HEAP32[$562 + 12 >> 2] | 0) != (HEAP32[$562 + 16 >> 2] | 0)) if ($561) {
        $906 = $$pre$i2$i$i147;
        $907 = $562;
        break;
       } else {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $$pre$i2$i$i147;
        $__ng$0$lcssa323 = $__ng$0;
        break L150;
       }
       __THREW__ = 0;
       $572 = invoke_ii(HEAP32[(HEAP32[$562 >> 2] | 0) + 36 >> 2] | 0, $562 | 0) | 0;
       $573 = __THREW__;
       __THREW__ = 0;
       if ($573 & 1) {
        label = 39;
        break L23;
       }
       if (($572 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $905 = 0;
        label = 229;
        break;
       } else if ($561 ^ ($$pre$i2$i$i147 | 0) == 0) {
        $906 = $$pre$i2$i$i147;
        $907 = $$pre$i2$i$i147;
        break;
       } else {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $$pre$i2$i$i147;
        $__ng$0$lcssa323 = $__ng$0;
        break L150;
       }
      } while (0);
      if ((label | 0) == 229) {
       label = 0;
       if ($561) {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $905;
        $__ng$0$lcssa323 = $__ng$0;
        break;
       } else {
        $906 = $905;
        $907 = 0;
       }
      }
      $577 = HEAP32[$__b >> 2] | 0;
      $579 = HEAP32[$577 + 12 >> 2] | 0;
      if (($579 | 0) == (HEAP32[$577 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $586 = invoke_ii(HEAP32[(HEAP32[$577 >> 2] | 0) + 36 >> 2] | 0, $577 | 0) | 0;
       $587 = __THREW__;
       __THREW__ = 0;
       if ($587 & 1) {
        label = 39;
        break L23;
       } else $$0$i$i139 = $586;
      } else $$0$i$i139 = HEAPU8[$579 >> 0] | 0;
      $591 = $$0$i$i139 & 255;
      if ($591 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i139 << 24 >> 24 << 1) >> 1] & 2048)) label = 240; else {
       $598 = HEAP32[$__wn >> 2] | 0;
       if (($598 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(15, $__wb | 0, $__wn | 0, $0 | 0);
        $601 = __THREW__;
        __THREW__ = 0;
        if ($601 & 1) {
         label = 39;
         break L23;
        }
        $604 = HEAP32[$__wn >> 2] | 0;
       } else $604 = $598;
       HEAP32[$__wn >> 2] = $604 + 1;
       HEAP8[$604 >> 0] = $591;
       $908 = $617;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else label = 240;
      if ((label | 0) == 240) {
       label = 0;
       $606 = HEAP8[$__grp >> 0] | 0;
       if (!($606 & 1)) $612 = ($606 & 255) >>> 1; else $612 = HEAP32[$30 >> 2] | 0;
       if (!(($__ng$0 | 0) != 0 & ($612 | 0) != 0 & $591 << 24 >> 24 == $65 << 24 >> 24)) {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $906;
        $__ng$0$lcssa323 = $__ng$0;
        break;
       }
       if (($617 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
        $619 = __THREW__;
        __THREW__ = 0;
        if ($619 & 1) {
         label = 39;
         break L23;
        }
        $622 = HEAP32[$__gn >> 2] | 0;
       } else $622 = $617;
       $621 = $622 + 4 | 0;
       HEAP32[$__gn >> 2] = $621;
       HEAP32[$622 >> 2] = $__ng$0;
       $908 = $621;
       $__ng$1 = 0;
      }
      $623 = HEAP32[$__b >> 2] | 0;
      $624 = $623 + 12 | 0;
      $625 = HEAP32[$624 >> 2] | 0;
      if (($625 | 0) == (HEAP32[$623 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$623 >> 2] | 0) + 40 >> 2] | 0, $623 | 0) | 0;
       $632 = __THREW__;
       __THREW__ = 0;
       if ($632 & 1) {
        label = 39;
        break L23;
       }
      } else HEAP32[$624 >> 2] = $625 + 1;
      $$pre$i2$i$i147 = $906;
      $562 = $907;
      $617 = $908;
      $__ng$0 = $__ng$1;
     }
     if (($__ng$0$lcssa323 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa322 | 0) : 0) {
      if (($$lcssa322 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
       $640 = __THREW__;
       __THREW__ = 0;
       if ($640 & 1) {
        label = 40;
        break L23;
       }
       $643 = HEAP32[$__gn >> 2] | 0;
      } else $643 = $$lcssa322;
      $642 = $643 + 4 | 0;
      HEAP32[$__gn >> 2] = $642;
      HEAP32[$643 >> 2] = $__ng$0$lcssa323;
      $909 = $642;
     } else $909 = $$lcssa322;
     $644 = HEAP32[$__fd >> 2] | 0;
     if (($644 | 0) > 0) {
      $646 = HEAP32[$__b >> 2] | 0;
      do if (!$646) $660 = 0; else if ((HEAP32[$646 + 12 >> 2] | 0) == (HEAP32[$646 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $656 = invoke_ii(HEAP32[(HEAP32[$646 >> 2] | 0) + 36 >> 2] | 0, $646 | 0) | 0;
       $657 = __THREW__;
       __THREW__ = 0;
       if ($657 & 1) {
        label = 40;
        break L23;
       }
       if (($656 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $660 = 0;
        break;
       } else {
        $660 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $660 = $646; while (0);
      $661 = ($660 | 0) == 0;
      do if (!$$pre$i2$i$i107) label = 270; else {
       if ((HEAP32[$$pre$i2$i$i107 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i107 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $671 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i107 >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i107 | 0) | 0;
        $672 = __THREW__;
        __THREW__ = 0;
        if ($672 & 1) {
         label = 40;
         break L23;
        }
        if (($671 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 270;
         break;
        }
       }
       if ($661) $910 = $$pre$i2$i$i107; else {
        label = 275;
        break L23;
       }
      } while (0);
      if ((label | 0) == 270) {
       label = 0;
       if ($661) {
        label = 275;
        break L23;
       } else $910 = 0;
      }
      $675 = HEAP32[$__b >> 2] | 0;
      $677 = HEAP32[$675 + 12 >> 2] | 0;
      if (($677 | 0) == (HEAP32[$675 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $684 = invoke_ii(HEAP32[(HEAP32[$675 >> 2] | 0) + 36 >> 2] | 0, $675 | 0) | 0;
       $685 = __THREW__;
       __THREW__ = 0;
       if ($685 & 1) {
        label = 40;
        break L23;
       } else $$0$i$i96 = $684;
      } else $$0$i$i96 = HEAPU8[$677 >> 0] | 0;
      if (($$0$i$i96 & 255) << 24 >> 24 != (HEAP8[$__dp >> 0] | 0)) {
       label = 275;
       break L23;
      }
      $694 = HEAP32[$__b >> 2] | 0;
      $695 = $694 + 12 | 0;
      $696 = HEAP32[$695 >> 2] | 0;
      if (($696 | 0) == (HEAP32[$694 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$694 >> 2] | 0) + 40 >> 2] | 0, $694 | 0) | 0;
       $703 = __THREW__;
       __THREW__ = 0;
       if ($703 & 1) {
        label = 40;
        break L23;
       }
      } else HEAP32[$695 >> 2] = $696 + 1;
      $$pre$i2$i$i83 = $910;
      $706 = $644;
      $724 = $910;
      while (1) {
       if (($706 | 0) <= 0) break;
       $708 = HEAP32[$__b >> 2] | 0;
       do if (!$708) $722 = 0; else if ((HEAP32[$708 + 12 >> 2] | 0) == (HEAP32[$708 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $718 = invoke_ii(HEAP32[(HEAP32[$708 >> 2] | 0) + 36 >> 2] | 0, $708 | 0) | 0;
        $719 = __THREW__;
        __THREW__ = 0;
        if ($719 & 1) {
         label = 38;
         break L23;
        }
        if (($718 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $722 = 0;
         break;
        } else {
         $722 = HEAP32[$__b >> 2] | 0;
         break;
        }
       } else $722 = $708; while (0);
       $723 = ($722 | 0) == 0;
       do if (!$724) {
        $$pre$i2$i$i83274$ph = $$pre$i2$i$i83;
        label = 293;
       } else {
        if ((HEAP32[$724 + 12 >> 2] | 0) != (HEAP32[$724 + 16 >> 2] | 0)) if ($723) {
         $$pre$i2$i$i83274287 = $$pre$i2$i$i83;
         $911 = $724;
         break;
        } else {
         label = 300;
         break L23;
        }
        __THREW__ = 0;
        $734 = invoke_ii(HEAP32[(HEAP32[$724 >> 2] | 0) + 36 >> 2] | 0, $724 | 0) | 0;
        $735 = __THREW__;
        __THREW__ = 0;
        if ($735 & 1) {
         label = 38;
         break L23;
        }
        if (($734 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i2$i$i83274$ph = 0;
         label = 293;
         break;
        } else if ($723 ^ ($$pre$i2$i$i83 | 0) == 0) {
         $$pre$i2$i$i83274287 = $$pre$i2$i$i83;
         $911 = $$pre$i2$i$i83;
         break;
        } else {
         label = 300;
         break L23;
        }
       } while (0);
       if ((label | 0) == 293) {
        label = 0;
        if ($723) {
         label = 300;
         break L23;
        } else {
         $$pre$i2$i$i83274287 = $$pre$i2$i$i83274$ph;
         $911 = 0;
        }
       }
       $739 = HEAP32[$__b >> 2] | 0;
       $741 = HEAP32[$739 + 12 >> 2] | 0;
       if (($741 | 0) == (HEAP32[$739 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $748 = invoke_ii(HEAP32[(HEAP32[$739 >> 2] | 0) + 36 >> 2] | 0, $739 | 0) | 0;
        $749 = __THREW__;
        __THREW__ = 0;
        if ($749 & 1) {
         label = 38;
         break L23;
        } else $$0$i$i74 = $748;
       } else $$0$i$i74 = HEAPU8[$741 >> 0] | 0;
       if (($$0$i$i74 & 255) << 24 >> 24 <= -1) {
        label = 300;
        break L23;
       }
       if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i74 << 24 >> 24 << 1) >> 1] & 2048)) {
        label = 300;
        break L23;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(15, $__wb | 0, $__wn | 0, $0 | 0);
        $765 = __THREW__;
        __THREW__ = 0;
        if ($765 & 1) {
         label = 38;
         break L23;
        }
       }
       $767 = HEAP32[$__b >> 2] | 0;
       $769 = HEAP32[$767 + 12 >> 2] | 0;
       if (($769 | 0) == (HEAP32[$767 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $776 = invoke_ii(HEAP32[(HEAP32[$767 >> 2] | 0) + 36 >> 2] | 0, $767 | 0) | 0;
        $777 = __THREW__;
        __THREW__ = 0;
        if ($777 & 1) {
         label = 38;
         break L23;
        } else $$0$i$i67 = $776;
       } else $$0$i$i67 = HEAPU8[$769 >> 0] | 0;
       $782 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $782 + 1;
       HEAP8[$782 >> 0] = $$0$i$i67;
       $784 = $706 + -1 | 0;
       HEAP32[$__fd >> 2] = $784;
       $785 = HEAP32[$__b >> 2] | 0;
       $786 = $785 + 12 | 0;
       $787 = HEAP32[$786 >> 2] | 0;
       if (($787 | 0) == (HEAP32[$785 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$785 >> 2] | 0) + 40 >> 2] | 0, $785 | 0) | 0;
        $794 = __THREW__;
        __THREW__ = 0;
        if ($794 & 1) {
         label = 38;
         break L23;
        }
       } else HEAP32[$786 >> 2] = $787 + 1;
       $$pre$i2$i$i83 = $$pre$i2$i$i83274287;
       $706 = $784;
       $724 = $911;
      }
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 312;
      break L23;
     } else {
      $898 = $909;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   case 2:
    {
     if (!($__p$0 >>> 0 < 2 | ($__trailing_sign$0 | 0) != 0)) {
      if (($__p$0 | 0) == 2) $406 = (HEAP8[$29 >> 0] | 0) != 0; else $406 = 0;
      if (!($22 | $406)) {
       $898 = $896;
       $__trailing_sign$1 = 0;
       break L46;
      }
     }
     $407 = HEAP8[$__sym >> 0] | 0;
     $409 = ($407 & 1) == 0;
     $$ = $409 ? $23 : HEAP32[$24 >> 2] | 0;
     L285 : do if (!$__p$0) $$ph = $$; else if ((HEAPU8[$__pat + ($__p$0 + -1) >> 0] | 0) < 2) {
      $416 = ($407 & 255) >>> 1;
      $417 = HEAP32[$16 >> 2] | 0;
      $418 = HEAP32[$24 >> 2] | 0;
      $419 = HEAP32[$25 >> 2] | 0;
      $421 = $$;
      while (1) {
       if (($421 | 0) == (($409 ? $23 : $418) + ($409 ? $416 : $419) | 0)) {
        $$lcssa = $421;
        break;
       }
       $423 = HEAP8[$421 >> 0] | 0;
       if ($423 << 24 >> 24 <= -1) {
        $$lcssa = $421;
        break;
       }
       if (!(HEAP16[$417 + ($423 << 24 >> 24 << 1) >> 1] & 8192)) {
        $$lcssa = $421;
        break;
       }
       $421 = $421 + 1 | 0;
      }
      $432 = $$lcssa - ($409 ? $23 : $418) | 0;
      $433 = HEAP8[$__spaces >> 0] | 0;
      $435 = ($433 & 1) == 0;
      if ($435) $440 = ($433 & 255) >>> 1; else $440 = HEAP32[$28 >> 2] | 0;
      do if ($432 >>> 0 <= $440 >>> 0) {
       if ($435) {
        $450 = $26;
        $451 = ($433 & 255) >>> 1;
        $903 = $__spaces + ((($433 & 255) >>> 1) - $432) + 1 | 0;
       } else {
        $441 = HEAP32[$27 >> 2] | 0;
        $442 = HEAP32[$28 >> 2] | 0;
        $450 = $441;
        $451 = $442;
        $903 = $441 + ($442 - $432) | 0;
       }
       $449 = $450 + $451 | 0;
       $452 = $903;
       $456 = $409 ? $23 : $418;
       while (1) {
        if (($452 | 0) == ($449 | 0)) {
         label = 183;
         break;
        }
        if ((HEAP8[$452 >> 0] | 0) != (HEAP8[$456 >> 0] | 0)) {
         label = 181;
         break;
        }
        $452 = $452 + 1 | 0;
        $456 = $456 + 1 | 0;
       }
       if ((label | 0) == 181) {
        label = 0;
        break;
       } else if ((label | 0) == 183) {
        label = 0;
        $$ph = $$lcssa;
        break L285;
       }
      } while (0);
      $$ph = $409 ? $23 : $418;
     } else $$ph = $$; while (0);
     $$pre$i2$i$i164 = $897;
     $461 = $407;
     $470 = $$ph;
     $488 = $897;
     L313 : while (1) {
      if (!($461 & 1)) {
       $468 = $23;
       $469 = ($461 & 255) >>> 1;
      } else {
       $468 = HEAP32[$24 >> 2] | 0;
       $469 = HEAP32[$25 >> 2] | 0;
      }
      if (($470 | 0) == ($468 + $469 | 0)) {
       $$lcssa324 = $470;
       break;
      }
      $472 = HEAP32[$__b >> 2] | 0;
      do if (!$472) $486 = 0; else if ((HEAP32[$472 + 12 >> 2] | 0) == (HEAP32[$472 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $482 = invoke_ii(HEAP32[(HEAP32[$472 >> 2] | 0) + 36 >> 2] | 0, $472 | 0) | 0;
       $483 = __THREW__;
       __THREW__ = 0;
       if ($483 & 1) {
        label = 37;
        break L23;
       }
       if (($482 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $486 = 0;
        break;
       } else {
        $486 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $486 = $472; while (0);
      $487 = ($486 | 0) == 0;
      do if (!$488) {
       $$pre$i2$i$i164270 = $$pre$i2$i$i164;
       label = 201;
      } else {
       if ((HEAP32[$488 + 12 >> 2] | 0) != (HEAP32[$488 + 16 >> 2] | 0)) if ($487) {
        $$pre$i2$i$i164269 = $$pre$i2$i$i164;
        $904 = $488;
        break;
       } else {
        $$lcssa324 = $470;
        break L313;
       }
       __THREW__ = 0;
       $498 = invoke_ii(HEAP32[(HEAP32[$488 >> 2] | 0) + 36 >> 2] | 0, $488 | 0) | 0;
       $499 = __THREW__;
       __THREW__ = 0;
       if ($499 & 1) {
        label = 37;
        break L23;
       }
       if (($498 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i2$i$i164270 = 0;
        label = 201;
        break;
       } else if ($487 ^ ($$pre$i2$i$i164 | 0) == 0) {
        $$pre$i2$i$i164269 = $$pre$i2$i$i164;
        $904 = $$pre$i2$i$i164;
        break;
       } else {
        $$lcssa324 = $470;
        break L313;
       }
      } while (0);
      if ((label | 0) == 201) {
       label = 0;
       if ($487) {
        $$lcssa324 = $470;
        break;
       } else {
        $$pre$i2$i$i164269 = $$pre$i2$i$i164270;
        $904 = 0;
       }
      }
      $503 = HEAP32[$__b >> 2] | 0;
      $505 = HEAP32[$503 + 12 >> 2] | 0;
      if (($505 | 0) == (HEAP32[$503 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $512 = invoke_ii(HEAP32[(HEAP32[$503 >> 2] | 0) + 36 >> 2] | 0, $503 | 0) | 0;
       $513 = __THREW__;
       __THREW__ = 0;
       if ($513 & 1) {
        label = 37;
        break L23;
       } else $$0$i$i156 = $512;
      } else $$0$i$i156 = HEAPU8[$505 >> 0] | 0;
      if (($$0$i$i156 & 255) << 24 >> 24 != (HEAP8[$470 >> 0] | 0)) {
       $$lcssa324 = $470;
       break;
      }
      $520 = HEAP32[$__b >> 2] | 0;
      $521 = $520 + 12 | 0;
      $522 = HEAP32[$521 >> 2] | 0;
      if (($522 | 0) == (HEAP32[$520 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$520 >> 2] | 0) + 40 >> 2] | 0, $520 | 0) | 0;
       $529 = __THREW__;
       __THREW__ = 0;
       if ($529 & 1) {
        label = 37;
        break L23;
       }
      } else HEAP32[$521 >> 2] = $522 + 1;
      $$pre$i2$i$i164 = $$pre$i2$i$i164269;
      $461 = HEAP8[$__sym >> 0] | 0;
      $470 = $470 + 1 | 0;
      $488 = $904;
     }
     if ($22) {
      $533 = HEAP8[$__sym >> 0] | 0;
      if (!($533 & 1)) {
       $541 = $23;
       $542 = ($533 & 255) >>> 1;
      } else {
       $541 = HEAP32[$24 >> 2] | 0;
       $542 = HEAP32[$25 >> 2] | 0;
      }
      if (($$lcssa324 | 0) == ($541 + $542 | 0)) {
       $898 = $896;
       $__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 216;
       break L23;
      }
     } else {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   case 1:
    {
     if (($__p$0 | 0) == 3) {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      $87 = HEAP32[$__b >> 2] | 0;
      $89 = HEAP32[$87 + 12 >> 2] | 0;
      if (($89 | 0) == (HEAP32[$87 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $96 = invoke_ii(HEAP32[(HEAP32[$87 >> 2] | 0) + 36 >> 2] | 0, $87 | 0) | 0;
       $97 = __THREW__;
       __THREW__ = 0;
       if ($97 & 1) {
        label = 40;
        break L23;
       } else $$0$i$i42 = $96;
      } else $$0$i$i42 = HEAPU8[$89 >> 0] | 0;
      if (($$0$i$i42 & 255) << 24 >> 24 <= -1) {
       label = 56;
       break L23;
      }
      if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i42 << 24 >> 24 << 1) >> 1] & 8192)) {
       label = 56;
       break L23;
      }
      $108 = HEAP32[$__b >> 2] | 0;
      $109 = $108 + 12 | 0;
      $110 = HEAP32[$109 >> 2] | 0;
      if (($110 | 0) == (HEAP32[$108 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $117 = invoke_ii(HEAP32[(HEAP32[$108 >> 2] | 0) + 40 >> 2] | 0, $108 | 0) | 0;
       $118 = __THREW__;
       __THREW__ = 0;
       if ($118 & 1) {
        label = 40;
        break L23;
       } else $$0$i$i45 = $117;
      } else {
       HEAP32[$109 >> 2] = $110 + 1;
       $$0$i$i45 = HEAPU8[$110 >> 0] | 0;
      }
      __THREW__ = 0;
      invoke_vii(44, $__spaces | 0, $$0$i$i45 & 255 | 0);
      $124 = __THREW__;
      __THREW__ = 0;
      if ($124 & 1) {
       label = 40;
       break L23;
      } else label = 58;
     }
     break;
    }
   default:
    {
     $898 = $896;
     $__trailing_sign$1 = $__trailing_sign$0;
    }
   } while (0);
   if ((label | 0) == 58) {
    label = 0;
    $$pre$i2$i$i52 = $897;
    $145 = $897;
    L369 : while (1) {
     $129 = HEAP32[$__b >> 2] | 0;
     do if (!$129) $143 = 0; else if ((HEAP32[$129 + 12 >> 2] | 0) == (HEAP32[$129 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $139 = invoke_ii(HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] | 0, $129 | 0) | 0;
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) {
       label = 36;
       break L23;
      }
      if (($139 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $143 = 0;
       break;
      } else {
       $143 = HEAP32[$__b >> 2] | 0;
       break;
      }
     } else $143 = $129; while (0);
     $144 = ($143 | 0) == 0;
     do if (!$145) {
      $$pre$i2$i$i52256 = $$pre$i2$i$i52;
      label = 71;
     } else {
      if ((HEAP32[$145 + 12 >> 2] | 0) != (HEAP32[$145 + 16 >> 2] | 0)) if ($144) {
       $$pre$i2$i$i52258 = $$pre$i2$i$i52;
       $899 = $145;
       break;
      } else break L369;
      __THREW__ = 0;
      $155 = invoke_ii(HEAP32[(HEAP32[$145 >> 2] | 0) + 36 >> 2] | 0, $145 | 0) | 0;
      $156 = __THREW__;
      __THREW__ = 0;
      if ($156 & 1) {
       label = 36;
       break L23;
      }
      if (($155 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i2$i$i52256 = 0;
       label = 71;
       break;
      } else if ($144 ^ ($$pre$i2$i$i52 | 0) == 0) {
       $$pre$i2$i$i52258 = $$pre$i2$i$i52;
       $899 = $$pre$i2$i$i52;
       break;
      } else break L369;
     } while (0);
     if ((label | 0) == 71) {
      label = 0;
      if ($144) break; else {
       $$pre$i2$i$i52258 = $$pre$i2$i$i52256;
       $899 = 0;
      }
     }
     $160 = HEAP32[$__b >> 2] | 0;
     $162 = HEAP32[$160 + 12 >> 2] | 0;
     if (($162 | 0) == (HEAP32[$160 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $169 = invoke_ii(HEAP32[(HEAP32[$160 >> 2] | 0) + 36 >> 2] | 0, $160 | 0) | 0;
      $170 = __THREW__;
      __THREW__ = 0;
      if ($170 & 1) {
       label = 36;
       break L23;
      } else $$0$i$i58 = $169;
     } else $$0$i$i58 = HEAPU8[$162 >> 0] | 0;
     if (($$0$i$i58 & 255) << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i58 << 24 >> 24 << 1) >> 1] & 8192)) break;
     $181 = HEAP32[$__b >> 2] | 0;
     $182 = $181 + 12 | 0;
     $183 = HEAP32[$182 >> 2] | 0;
     if (($183 | 0) == (HEAP32[$181 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $190 = invoke_ii(HEAP32[(HEAP32[$181 >> 2] | 0) + 40 >> 2] | 0, $181 | 0) | 0;
      $191 = __THREW__;
      __THREW__ = 0;
      if ($191 & 1) {
       label = 36;
       break L23;
      } else $$0$i$i64 = $190;
     } else {
      HEAP32[$182 >> 2] = $183 + 1;
      $$0$i$i64 = HEAPU8[$183 >> 0] | 0;
     }
     __THREW__ = 0;
     invoke_vii(44, $__spaces | 0, $$0$i$i64 & 255 | 0);
     $197 = __THREW__;
     __THREW__ = 0;
     if ($197 & 1) {
      label = 36;
      break L23;
     } else {
      $$pre$i2$i$i52 = $$pre$i2$i$i52258;
      $145 = $899;
     }
    }
    $898 = $896;
    $__trailing_sign$1 = $__trailing_sign$0;
   }
   $896 = $898;
   $__p$0 = $__p$0 + 1 | 0;
   $__trailing_sign$0 = $__trailing_sign$1;
  }
  L403 : switch (label | 0) {
  case 36:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 37:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 38:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 39:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 40:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 56:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 158:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 216:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 275:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 300:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 312:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 315:
   {
    do if ($__trailing_sign$0$lcssa) {
     $804 = $__trailing_sign$0$lcssa + 1 | 0;
     $805 = $__trailing_sign$0$lcssa + 8 | 0;
     $806 = $__trailing_sign$0$lcssa + 4 | 0;
     $__i$0 = 1;
     L416 : while (1) {
      $807 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($807 & 1)) $814 = ($807 & 255) >>> 1; else $814 = HEAP32[$806 >> 2] | 0;
      if ($__i$0 >>> 0 >= $814 >>> 0) {
       label = 345;
       break;
      }
      $815 = HEAP32[$__b >> 2] | 0;
      do if (!$815) $829 = 0; else if ((HEAP32[$815 + 12 >> 2] | 0) == (HEAP32[$815 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $825 = invoke_ii(HEAP32[(HEAP32[$815 >> 2] | 0) + 36 >> 2] | 0, $815 | 0) | 0;
       $826 = __THREW__;
       __THREW__ = 0;
       if ($826 & 1) {
        label = 35;
        break L416;
       }
       if (($825 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $829 = 0;
        break;
       } else {
        $829 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $829 = $815; while (0);
      $830 = ($829 | 0) == 0;
      $831 = HEAP32[$__e >> 2] | 0;
      do if (!$831) label = 333; else {
       if ((HEAP32[$831 + 12 >> 2] | 0) == (HEAP32[$831 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $841 = invoke_ii(HEAP32[(HEAP32[$831 >> 2] | 0) + 36 >> 2] | 0, $831 | 0) | 0;
        $842 = __THREW__;
        __THREW__ = 0;
        if ($842 & 1) {
         label = 35;
         break L416;
        }
        if (($841 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 333;
         break;
        }
       }
       if (!$830) {
        label = 340;
        break L416;
       }
      } while (0);
      if ((label | 0) == 333) {
       label = 0;
       if ($830) {
        label = 340;
        break;
       }
      }
      $845 = HEAP32[$__b >> 2] | 0;
      $847 = HEAP32[$845 + 12 >> 2] | 0;
      if (($847 | 0) == (HEAP32[$845 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $854 = invoke_ii(HEAP32[(HEAP32[$845 >> 2] | 0) + 36 >> 2] | 0, $845 | 0) | 0;
       $855 = __THREW__;
       __THREW__ = 0;
       if ($855 & 1) {
        label = 35;
        break;
       } else $$0$i$i = $854;
      } else $$0$i$i = HEAPU8[$847 >> 0] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $865 = $804; else $865 = HEAP32[$805 >> 2] | 0;
      if (($$0$i$i & 255) << 24 >> 24 != (HEAP8[$865 + $__i$0 >> 0] | 0)) {
       label = 340;
       break;
      }
      $870 = $__i$0 + 1 | 0;
      $871 = HEAP32[$__b >> 2] | 0;
      $872 = $871 + 12 | 0;
      $873 = HEAP32[$872 >> 2] | 0;
      if (($873 | 0) == (HEAP32[$871 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$871 >> 2] | 0) + 40 >> 2] | 0, $871 | 0) | 0;
       $880 = __THREW__;
       __THREW__ = 0;
       if ($880 & 1) {
        label = 35;
        break;
       }
      } else HEAP32[$872 >> 2] = $873 + 1;
      $__i$0 = $870;
     }
     if ((label | 0) == 35) {
      $66 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $66;
      $lpad$phi$index7 = tempRet0;
      break L21;
     } else if ((label | 0) == 340) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L403;
     } else if ((label | 0) == 345) break;
    } while (0);
    $883 = HEAP32[$__gb >> 2] | 0;
    if (($883 | 0) == ($$lcssa326 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $883, $$lcssa326, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $889 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if ($889) {
   __THREW__ = 0;
   invoke_vi(HEAP32[$1 >> 2] | 0, $889 | 0);
   $892 = __THREW__;
   __THREW__ = 0;
   if ($892 & 1) {
    $894 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($894);
   }
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $80 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($80) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $80 | 0);
  $83 = __THREW__;
  __THREW__ = 0;
  if ($83 & 1) {
   $85 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($85);
  }
 }
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $multiline, $indent) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $multiline = $multiline | 0;
 $indent = $indent | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$0$i$i$i54 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$02 = 0, $$08 = 0, $$1 = 0, $$13 = 0, $$2461 = 0, $$262 = 0, $$3 = 0, $$35 = 0, $$4 = 0, $$46 = 0, $$5 = 0, $$57 = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$idx = 0, $$idx$i16 = 0, $$idx$i39 = 0, $$idx10 = 0, $$idx11$val = 0, $$idx12$val = 0, $$pre$phi81Z2D = 0, $$pre$phiZ2D = 0, $$str36$$str3 = 0, $$str36$$str31 = 0, $0 = 0, $1 = 0, $103 = 0, $105 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $129 = 0, $136 = 0, $137 = 0, $138 = 0, $140 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $149 = 0, $15 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $168 = 0, $17 = 0, $171 = 0, $175 = 0, $177 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $197 = 0, $199 = 0, $2 = 0, $201 = 0, $203 = 0, $204 = 0, $205 = 0, $208 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $214 = 0, $215 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $232 = 0, $234 = 0, $237 = 0, $241 = 0, $243 = 0, $25 = 0, $254 = 0, $255 = 0, $256 = 0, $258 = 0, $260 = 0, $261 = 0, $262 = 0, $264 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $275 = 0, $277 = 0, $278 = 0, $280 = 0, $282 = 0, $285 = 0, $287 = 0, $288 = 0, $289 = 0, $290 = 0, $292 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $304 = 0, $305 = 0, $307 = 0, $308 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $323 = 0, $324 = 0, $326 = 0, $333 = 0, $334 = 0, $335 = 0, $338 = 0, $34 = 0, $340 = 0, $343 = 0, $347 = 0, $349 = 0, $351 = 0, $352 = 0, $355 = 0, $356 = 0, $358 = 0, $36 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $373 = 0, $380 = 0, $382 = 0, $392 = 0, $393 = 0, $394 = 0, $396 = 0, $397 = 0, $398 = 0, $4 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $83 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $93 = 0, $94 = 0, $96 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body37$index17Z2D = 0, $eh$lpad$body37$indexZ2D = 0, $element = 0, $fields = 0, $indent2 = 0, $indent24 = 0, $lpad$phi$index = 0, $lpad$phi$index12 = 0, $lpad$phi68$index = 0, $lpad$phi68$index22 = 0, $prefix$073 = 0, $prefix5$074 = 0, $ss = 0, $tloc = 0, $vstr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $0 = sp + 296 | 0;
 $ss = sp + 152 | 0;
 $indent2 = sp + 136 | 0;
 $tloc = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $element = sp + 84 | 0;
 $2 = sp + 72 | 0;
 $3 = sp + 60 | 0;
 $fields = sp + 48 | 0;
 $4 = sp + 36 | 0;
 $indent24 = sp + 24 | 0;
 $vstr = sp + 12 | 0;
 $5 = sp;
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 592;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$6 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $23 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $23;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 572;
 HEAP32[$6 >> 2] = 612;
 HEAP32[$7 >> 2] = 592;
 __THREW__ = 0;
 invoke_vi(177, $8 | 0);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $25;
 } else {
  HEAP32[$8 >> 2] = 904;
  $17 = $ss + 44 | 0;
  HEAP32[$17 + 0 >> 2] = 0;
  HEAP32[$17 + 4 >> 2] = 0;
  HEAP32[$17 + 8 >> 2] = 0;
  HEAP32[$17 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $21 = ___cxa_find_matching_catch() | 0;
   $22 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $22;
   $eh$lpad$body$i$indexZ2D = $21;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $27 = $this + 56 | 0;
  L11 : do switch (HEAP32[$27 >> 2] | 0) {
  case 16:
   {
    $30 = HEAP32[$this + 64 >> 2] | 0;
    $$idx = $30 + 8 | 0;
    $$idx10 = $30 + 12 | 0;
    if ((HEAP32[$$idx10 >> 2] | 0) == (HEAP32[$$idx >> 2] | 0)) {
     __THREW__ = 0;
     invoke_iiii(25, $7 | 0, 37424, 3) | 0;
     $32 = __THREW__;
     __THREW__ = 0;
     if ($32 & 1) {
      label = 12;
      break L11;
     } else {
      label = 150;
      break L11;
     }
    }
    $36 = $multiline ? 37432 : 37440;
    do if ($multiline) {
     HEAP32[$indent2 + 0 >> 2] = 0;
     HEAP32[$indent2 + 4 >> 2] = 0;
     HEAP32[$indent2 + 8 >> 2] = 0;
     $37 = HEAP8[$indent >> 0] | 0;
     if (!($37 & 1)) {
      $48 = ($37 & 255) >>> 1;
      $49 = $indent + 1 | 0;
     } else {
      $48 = HEAP32[$indent + 4 >> 2] | 0;
      $49 = HEAP32[$indent + 8 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_viiii(13, $indent2 | 0, $49 | 0, $48 | 0, $48 + 3 | 0);
     $50 = __THREW__;
     __THREW__ = 0;
     if (!($50 & 1)) {
      __THREW__ = 0;
      invoke_iiii(31, $indent2 | 0, 37448, 3) | 0;
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $54 = ___cxa_find_matching_catch() | 0;
     $55 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
     $eh$lpad$body$index7Z2D = $55;
     $eh$lpad$body$indexZ2D = $54;
     break L11;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $indent2 | 0, $indent | 0);
     $56 = __THREW__;
     __THREW__ = 0;
     if ($56 & 1) {
      label = 12;
      break L11;
     }
    } while (0);
    $$idx11$val = HEAP32[$$idx >> 2] | 0;
    $$idx12$val = HEAP32[$$idx10 >> 2] | 0;
    do if (($$idx11$val | 0) == ($$idx12$val | 0)) {
     $$pre$phiZ2D = $7;
     label = 50;
    } else {
     $59 = $tloc + 12 | 0;
     $60 = $this + 72 | 0;
     $$idx$i16 = $this + 88 | 0;
     $61 = $indent2 + 1 | 0;
     $62 = $element + 1 | 0;
     $$str36$$str3 = $multiline ? 37456 : 36528;
     $63 = $element + 8 | 0;
     $64 = $element + 4 | 0;
     $65 = $indent2 + 8 | 0;
     $66 = $indent2 + 4 | 0;
     $67 = $1 + 4 | 0;
     $68 = $1 + 8 | 0;
     $69 = $1 + 4 | 0;
     $71 = $$idx11$val;
     $prefix$073 = $36;
     while (1) {
      $70 = HEAP32[$71 >> 2] | 0;
      $72 = $70 + 48 | 0;
      $73 = HEAP32[$72 >> 2] | 0;
      $76 = ($73 | 0) == 0 ? $loc : $73 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $tloc | 0, $76 | 0);
      $77 = __THREW__;
      __THREW__ = 0;
      if ($77 & 1) {
       label = 29;
       break;
      }
      $79 = $76 + 12 | 0;
      HEAP32[$59 + 0 >> 2] = HEAP32[$79 + 0 >> 2];
      HEAP32[$59 + 4 >> 2] = HEAP32[$79 + 4 >> 2];
      HEAP32[$59 + 8 >> 2] = HEAP32[$79 + 8 >> 2];
      HEAP32[$59 + 12 >> 2] = HEAP32[$79 + 12 >> 2];
      if (!(HEAP8[$70 + 5 >> 0] | 0)) {
       __THREW__ = 0;
       invoke_viiiiii(19, $60 | 0, $loc | 0, $70 | 0, HEAP32[$70 + 40 >> 2] | 0, HEAP32[$70 + 44 >> 2] | 0, $70 + 28 | 0);
       $103 = __THREW__;
       __THREW__ = 0;
       if ($103 & 1) {
        label = 33;
        break;
       }
       $105 = (HEAP32[$$idx$i16 >> 2] | 0) + -104 | 0;
       HEAP32[$105 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
       HEAP32[$105 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       HEAP32[$105 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
       HEAP32[$105 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
       HEAP8[(HEAP32[$$idx$i16 >> 2] | 0) + -108 >> 0] = 1;
       __THREW__ = 0;
       invoke_vii(60, $this | 0, HEAP32[$72 >> 2] | 0);
       $108 = __THREW__;
       __THREW__ = 0;
       if ($108 & 1) {
        label = 33;
        break;
       }
      } else {
       HEAP32[$67 >> 2] = 0;
       HEAP32[$68 >> 2] = 0;
       HEAP32[$1 >> 2] = $69;
       __THREW__ = 0;
       invoke_viiiiii(19, $60 | 0, $loc | 0, $70 | 0, 0, 0, $1 | 0);
       $83 = __THREW__;
       __THREW__ = 0;
       if ($83 & 1) {
        label = 32;
        break;
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$69 >> 2] | 0);
       $86 = (HEAP32[$$idx$i16 >> 2] | 0) + -104 | 0;
       HEAP32[$86 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
       HEAP32[$86 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       HEAP32[$86 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
       HEAP32[$86 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
       HEAP8[(HEAP32[$$idx$i16 >> 2] | 0) + -108 >> 0] = 1;
       $88 = $70 + 8 | 0;
       HEAP32[$27 + 0 >> 2] = HEAP32[$88 + 0 >> 2];
       HEAP32[$27 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
       HEAP32[$27 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
       HEAP32[$27 + 12 >> 2] = HEAP32[$88 + 12 >> 2];
      }
      __THREW__ = 0;
      invoke_viiiii(6, $element | 0, $this | 0, $tloc | 0, $multiline | 0, $indent2 | 0);
      $110 = __THREW__;
      __THREW__ = 0;
      if ($110 & 1) {
       label = 33;
       break;
      }
      $112 = (HEAP32[$$idx$i16 >> 2] | 0) + -104 | 0;
      HEAP32[$27 + 0 >> 2] = HEAP32[$112 + 0 >> 2];
      HEAP32[$27 + 4 >> 2] = HEAP32[$112 + 4 >> 2];
      HEAP32[$27 + 8 >> 2] = HEAP32[$112 + 8 >> 2];
      HEAP32[$27 + 12 >> 2] = HEAP32[$112 + 12 >> 2];
      __ZN12_GLOBAL__N_15Stack3popEv($60);
      $113 = _strlen($prefix$073 | 0) | 0;
      __THREW__ = 0;
      $114 = invoke_iiii(25, $7 | 0, $prefix$073 | 0, $113 | 0) | 0;
      $115 = __THREW__;
      __THREW__ = 0;
      if ($115 & 1) {
       label = 47;
       break;
      }
      $117 = HEAP8[$indent2 >> 0] | 0;
      if (!($117 & 1)) {
       $124 = $61;
       $125 = ($117 & 255) >>> 1;
      } else {
       $124 = HEAP32[$65 >> 2] | 0;
       $125 = HEAP32[$66 >> 2] | 0;
      }
      __THREW__ = 0;
      $126 = invoke_iiii(25, $114 | 0, $124 | 0, $125 | 0) | 0;
      $127 = __THREW__;
      __THREW__ = 0;
      if ($127 & 1) {
       label = 47;
       break;
      }
      $129 = HEAP8[$element >> 0] | 0;
      if (!($129 & 1)) {
       $136 = $62;
       $137 = ($129 & 255) >>> 1;
      } else {
       $136 = HEAP32[$63 >> 2] | 0;
       $137 = HEAP32[$64 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $126 | 0, $136 | 0, $137 | 0) | 0;
      $138 = __THREW__;
      __THREW__ = 0;
      if ($138 & 1) {
       label = 47;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($element);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($tloc);
      $140 = $71 + 4 | 0;
      if (($140 | 0) == ($$idx12$val | 0)) {
       label = 49;
       break;
      } else {
       $71 = $140;
       $prefix$073 = $$str36$$str3;
      }
     }
     if ((label | 0) == 29) {
      $89 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $89;
      $lpad$phi$index12 = tempRet0;
      label = 31;
      break;
     } else if ((label | 0) == 32) {
      $93 = ___cxa_find_matching_catch() | 0;
      $94 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$69 >> 2] | 0);
      $$0 = $93;
      $$02 = $94;
     } else if ((label | 0) == 33) {
      $96 = ___cxa_find_matching_catch() | 0;
      $$0 = $96;
      $$02 = tempRet0;
     } else if ((label | 0) == 47) {
      $142 = ___cxa_find_matching_catch() | 0;
      $143 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($element);
      $$0 = $142;
      $$02 = $143;
     } else if ((label | 0) == 49) {
      $$pre$phiZ2D = $7;
      label = 50;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($tloc);
     $$1 = $$0;
     $$13 = $$02;
    } while (0);
    if ((label | 0) == 50) {
     __THREW__ = 0;
     $146 = invoke_iiii(25, $$pre$phiZ2D | 0, ($multiline ? 39992 : 46680) | 0, $multiline & 1 | 0) | 0;
     $147 = __THREW__;
     __THREW__ = 0;
     if (!($147 & 1)) {
      $149 = HEAP8[$indent >> 0] | 0;
      if (!($149 & 1)) {
       $159 = $indent + 1 | 0;
       $160 = ($149 & 255) >>> 1;
      } else {
       $159 = HEAP32[$indent + 8 >> 2] | 0;
       $160 = HEAP32[$indent + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $161 = invoke_iiii(25, $146 | 0, $159 | 0, $160 | 0) | 0;
      $162 = __THREW__;
      __THREW__ = 0;
      if (!($162 & 1)) {
       __THREW__ = 0;
       invoke_iiii(25, $161 | 0, 37464, 1) | 0;
       $164 = __THREW__;
       __THREW__ = 0;
       if (!($164 & 1)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
        label = 150;
        break L11;
       }
      }
     }
     $91 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $91;
     $lpad$phi$index12 = tempRet0;
     label = 31;
    }
    if ((label | 0) == 31) {
     $$1 = $lpad$phi$index;
     $$13 = $lpad$phi$index12;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
    $$5 = $$1;
    $$57 = $$13;
    HEAP32[$ss >> 2] = 572;
    HEAP32[$6 >> 2] = 612;
    HEAP32[$7 >> 2] = 592;
    HEAP32[$8 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 2:
   {
    __THREW__ = 0;
    invoke_vid(1, $2 | 0, +(+HEAPF64[$this + 64 >> 3]));
    $175 = __THREW__;
    __THREW__ = 0;
    if ($175 & 1) label = 12; else {
     $177 = HEAP8[$2 >> 0] | 0;
     if (!($177 & 1)) {
      $187 = $2 + 1 | 0;
      $188 = ($177 & 255) >>> 1;
     } else {
      $187 = HEAP32[$2 + 8 >> 2] | 0;
      $188 = HEAP32[$2 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $7 | 0, $187 | 0, $188 | 0) | 0;
     $189 = __THREW__;
     __THREW__ = 0;
     if (!($189 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      label = 150;
      break L11;
     }
     $191 = ___cxa_find_matching_catch() | 0;
     $192 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     $$5 = $191;
     $$57 = $192;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$6 >> 2] = 612;
     HEAP32[$7 >> 2] = 592;
     HEAP32[$8 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  case 0:
   {
    __THREW__ = 0;
    invoke_iiii(25, $7 | 0, 37256, 4) | 0;
    $205 = __THREW__;
    __THREW__ = 0;
    if ($205 & 1) label = 12; else label = 150;
    break;
   }
  case 18:
   {
    $208 = HEAP32[$this + 64 >> 2] | 0;
    HEAP32[$fields + 4 >> 2] = 0;
    $210 = $fields + 8 | 0;
    HEAP32[$210 >> 2] = 0;
    $211 = $fields + 4 | 0;
    HEAP32[$fields >> 2] = $211;
    __THREW__ = 0;
    invoke_vii(62, $4 | 0, $208 | 0);
    $212 = __THREW__;
    __THREW__ = 0;
    L85 : do if ($212 & 1) label = 78; else {
     $214 = HEAP32[$4 >> 2] | 0;
     $215 = $4 + 4 | 0;
     do if (($214 | 0) != ($215 | 0)) {
      $226 = $214;
      while (1) {
       $227 = HEAP32[$226 + 16 >> 2] | 0;
       __THREW__ = 0;
       $228 = invoke_iii(29, $fields | 0, $227 | 0) | 0;
       $229 = __THREW__;
       __THREW__ = 0;
       if ($229 & 1) {
        label = 80;
        break;
       }
       HEAP32[$228 >> 2] = $227;
       $232 = HEAP32[$226 + 4 >> 2] | 0;
       if (!$232) {
        $$0$i$i = $226;
        while (1) {
         $237 = HEAP32[$$0$i$i + 8 >> 2] | 0;
         if ((HEAP32[$237 >> 2] | 0) == ($$0$i$i | 0)) {
          $$cast$i$i$lcssa = $237;
          break;
         } else $$0$i$i = $237;
        }
        $$01$i$i = $$cast$i$i$lcssa;
       } else {
        $$0$i$i$i = $232;
        while (1) {
         $234 = HEAP32[$$0$i$i$i >> 2] | 0;
         if (!$234) {
          $$0$i$i$i$lcssa = $$0$i$i$i;
          break;
         } else $$0$i$i$i = $234;
        }
        $$01$i$i = $$0$i$i$i$lcssa;
       }
       if (($$01$i$i | 0) == ($215 | 0)) {
        label = 76;
        break;
       } else $226 = $$01$i$i;
      }
      if ((label | 0) == 76) break; else if ((label | 0) == 80) {
       $222 = ___cxa_find_matching_catch() | 0;
       $223 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$215 >> 2] | 0);
       $$4 = $222;
       $$46 = $223;
       break L85;
      }
     } while (0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$215 >> 2] | 0);
     do if (!(HEAP32[$210 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $7 | 0, 37520, 3) | 0;
      $241 = __THREW__;
      __THREW__ = 0;
      if ($241 & 1) {
       label = 78;
       break L85;
      }
     } else {
      do if ($multiline) {
       HEAP32[$indent24 + 0 >> 2] = 0;
       HEAP32[$indent24 + 4 >> 2] = 0;
       HEAP32[$indent24 + 8 >> 2] = 0;
       $243 = HEAP8[$indent >> 0] | 0;
       if (!($243 & 1)) {
        $254 = ($243 & 255) >>> 1;
        $255 = $indent + 1 | 0;
       } else {
        $254 = HEAP32[$indent + 4 >> 2] | 0;
        $255 = HEAP32[$indent + 8 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_viiii(13, $indent24 | 0, $255 | 0, $254 | 0, $254 + 3 | 0);
       $256 = __THREW__;
       __THREW__ = 0;
       if (!($256 & 1)) {
        __THREW__ = 0;
        invoke_iiii(31, $indent24 | 0, 37448, 3) | 0;
        $258 = __THREW__;
        __THREW__ = 0;
        if (!($258 & 1)) break;
       }
       $260 = ___cxa_find_matching_catch() | 0;
       $261 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
       $eh$lpad$body37$index17Z2D = $261;
       $eh$lpad$body37$indexZ2D = $260;
       label = 79;
       break L85;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $indent24 | 0, $indent | 0);
       $262 = __THREW__;
       __THREW__ = 0;
       if ($262 & 1) {
        label = 78;
        break L85;
       }
      } while (0);
      $264 = HEAP32[$fields >> 2] | 0;
      do if (($264 | 0) == ($211 | 0)) {
       $$pre$phi81Z2D = $7;
       label = 133;
      } else {
       $267 = $this + 72 | 0;
       $$idx$i39 = $this + 88 | 0;
       $268 = $indent24 + 1 | 0;
       $269 = $vstr + 1 | 0;
       $$str36$$str31 = $multiline ? 37456 : 36528;
       $270 = $vstr + 8 | 0;
       $271 = $vstr + 4 | 0;
       $272 = $indent24 + 8 | 0;
       $273 = $indent24 + 4 | 0;
       $275 = $264;
       $prefix5$074 = $multiline ? 37528 : 37536;
       while (1) {
        __THREW__ = 0;
        $277 = invoke_iiiii(8, $this | 0, $loc | 0, $208 | 0, HEAP32[$275 + 28 >> 2] | 0) | 0;
        $278 = __THREW__;
        __THREW__ = 0;
        if ($278 & 1) {
         label = 128;
         break;
        }
        $280 = (HEAP32[$$idx$i39 >> 2] | 0) + -104 | 0;
        HEAP32[$280 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
        HEAP32[$280 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
        HEAP32[$280 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
        HEAP32[$280 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
        HEAP8[(HEAP32[$$idx$i39 >> 2] | 0) + -108 >> 0] = 1;
        __THREW__ = 0;
        invoke_vii(60, $this | 0, $277 | 0);
        $282 = __THREW__;
        __THREW__ = 0;
        if ($282 & 1) {
         label = 128;
         break;
        }
        __THREW__ = 0;
        invoke_viiiii(6, $vstr | 0, $this | 0, $277 + 4 | 0, $multiline | 0, $indent24 | 0);
        $285 = __THREW__;
        __THREW__ = 0;
        if ($285 & 1) {
         label = 128;
         break;
        }
        $287 = (HEAP32[$$idx$i39 >> 2] | 0) + -104 | 0;
        HEAP32[$27 + 0 >> 2] = HEAP32[$287 + 0 >> 2];
        HEAP32[$27 + 4 >> 2] = HEAP32[$287 + 4 >> 2];
        HEAP32[$27 + 8 >> 2] = HEAP32[$287 + 8 >> 2];
        HEAP32[$27 + 12 >> 2] = HEAP32[$287 + 12 >> 2];
        __ZN12_GLOBAL__N_15Stack3popEv($267);
        $288 = _strlen($prefix5$074 | 0) | 0;
        __THREW__ = 0;
        $289 = invoke_iiii(25, $7 | 0, $prefix5$074 | 0, $288 | 0) | 0;
        $290 = __THREW__;
        __THREW__ = 0;
        if ($290 & 1) {
         label = 131;
         break;
        }
        $292 = HEAP8[$indent24 >> 0] | 0;
        if (!($292 & 1)) {
         $299 = $268;
         $300 = ($292 & 255) >>> 1;
        } else {
         $299 = HEAP32[$272 >> 2] | 0;
         $300 = HEAP32[$273 >> 2] | 0;
        }
        __THREW__ = 0;
        $301 = invoke_iiii(25, $289 | 0, $299 | 0, $300 | 0) | 0;
        $302 = __THREW__;
        __THREW__ = 0;
        if ($302 & 1) {
         label = 131;
         break;
        }
        __THREW__ = 0;
        $304 = invoke_iiii(25, $301 | 0, 37544, 1) | 0;
        $305 = __THREW__;
        __THREW__ = 0;
        if ($305 & 1) {
         label = 131;
         break;
        }
        $307 = $275 + 16 | 0;
        $308 = HEAP8[$307 >> 0] | 0;
        if (!($308 & 1)) {
         $318 = $307 + 1 | 0;
         $319 = ($308 & 255) >>> 1;
        } else {
         $318 = HEAP32[$275 + 24 >> 2] | 0;
         $319 = HEAP32[$275 + 20 >> 2] | 0;
        }
        __THREW__ = 0;
        $320 = invoke_iiii(25, $304 | 0, $318 | 0, $319 | 0) | 0;
        $321 = __THREW__;
        __THREW__ = 0;
        if ($321 & 1) {
         label = 131;
         break;
        }
        __THREW__ = 0;
        $323 = invoke_iiii(25, $320 | 0, 37552, 3) | 0;
        $324 = __THREW__;
        __THREW__ = 0;
        if ($324 & 1) {
         label = 131;
         break;
        }
        $326 = HEAP8[$vstr >> 0] | 0;
        if (!($326 & 1)) {
         $333 = $269;
         $334 = ($326 & 255) >>> 1;
        } else {
         $333 = HEAP32[$270 >> 2] | 0;
         $334 = HEAP32[$271 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(25, $323 | 0, $333 | 0, $334 | 0) | 0;
        $335 = __THREW__;
        __THREW__ = 0;
        if ($335 & 1) {
         label = 131;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr);
        $338 = HEAP32[$275 + 4 >> 2] | 0;
        if (!$338) {
         $$0$i$i$i54 = $275;
         while (1) {
          $343 = HEAP32[$$0$i$i$i54 + 8 >> 2] | 0;
          if ((HEAP32[$343 >> 2] | 0) == ($$0$i$i$i54 | 0)) {
           $$cast$i$i$i$lcssa = $343;
           break;
          } else $$0$i$i$i54 = $343;
         }
         $$01$i$i$i = $$cast$i$i$i$lcssa;
        } else {
         $$0$i$i$i$i = $338;
         while (1) {
          $340 = HEAP32[$$0$i$i$i$i >> 2] | 0;
          if (!$340) {
           $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
           break;
          } else $$0$i$i$i$i = $340;
         }
         $$01$i$i$i = $$0$i$i$i$i$lcssa;
        }
        if (($$01$i$i$i | 0) == ($211 | 0)) {
         label = 132;
         break;
        } else {
         $275 = $$01$i$i$i;
         $prefix5$074 = $$str36$$str31;
        }
       }
       if ((label | 0) == 128) {
        $347 = ___cxa_find_matching_catch() | 0;
        $lpad$phi68$index = $347;
        $lpad$phi68$index22 = tempRet0;
        label = 130;
        break;
       } else if ((label | 0) == 131) {
        $351 = ___cxa_find_matching_catch() | 0;
        $352 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr);
        $$3 = $351;
        $$35 = $352;
        break;
       } else if ((label | 0) == 132) {
        $$pre$phi81Z2D = $7;
        label = 133;
        break;
       }
      } while (0);
      if ((label | 0) == 133) {
       __THREW__ = 0;
       $355 = invoke_iiii(25, $$pre$phi81Z2D | 0, ($multiline ? 39992 : 46680) | 0, $multiline & 1 | 0) | 0;
       $356 = __THREW__;
       __THREW__ = 0;
       if (!($356 & 1)) {
        $358 = HEAP8[$indent >> 0] | 0;
        if (!($358 & 1)) {
         $368 = $indent + 1 | 0;
         $369 = ($358 & 255) >>> 1;
        } else {
         $368 = HEAP32[$indent + 8 >> 2] | 0;
         $369 = HEAP32[$indent + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        $370 = invoke_iiii(25, $355 | 0, $368 | 0, $369 | 0) | 0;
        $371 = __THREW__;
        __THREW__ = 0;
        if (!($371 & 1)) {
         __THREW__ = 0;
         invoke_iiii(25, $370 | 0, 37560, 1) | 0;
         $373 = __THREW__;
         __THREW__ = 0;
         if (!($373 & 1)) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
          break;
         }
        }
       }
       $349 = ___cxa_find_matching_catch() | 0;
       $lpad$phi68$index = $349;
       $lpad$phi68$index22 = tempRet0;
       label = 130;
      }
      if ((label | 0) == 130) {
       $$3 = $lpad$phi68$index;
       $$35 = $lpad$phi68$index22;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
      $$4 = $$3;
      $$46 = $$35;
      break L85;
     } while (0);
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$211 >> 2] | 0);
     label = 150;
     break L11;
    } while (0);
    if ((label | 0) == 78) {
     $220 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body37$index17Z2D = tempRet0;
     $eh$lpad$body37$indexZ2D = $220;
     label = 79;
    }
    if ((label | 0) == 79) {
     $$4 = $eh$lpad$body37$indexZ2D;
     $$46 = $eh$lpad$body37$index17Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$211 >> 2] | 0);
    $$5 = $$4;
    $$57 = $$46;
    HEAP32[$ss >> 2] = 572;
    HEAP32[$6 >> 2] = 612;
    HEAP32[$7 >> 2] = 592;
    HEAP32[$8 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 1:
   {
    $168 = (HEAP8[$this + 64 >> 0] | 0) != 0;
    __THREW__ = 0;
    invoke_iiii(25, $7 | 0, ($168 ? 48208 : 48240) | 0, ($168 ? 4 : 5) | 0) | 0;
    $171 = __THREW__;
    __THREW__ = 0;
    if ($171 & 1) label = 12; else label = 150;
    break;
   }
  case 19:
   {
    __THREW__ = 0;
    invoke_vii(54, $5 | 0, (HEAP32[$this + 64 >> 2] | 0) + 8 | 0);
    $380 = __THREW__;
    __THREW__ = 0;
    if ($380 & 1) label = 12; else {
     $382 = HEAP8[$5 >> 0] | 0;
     if (!($382 & 1)) {
      $392 = $5 + 1 | 0;
      $393 = ($382 & 255) >>> 1;
     } else {
      $392 = HEAP32[$5 + 8 >> 2] | 0;
      $393 = HEAP32[$5 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $7 | 0, $392 | 0, $393 | 0) | 0;
     $394 = __THREW__;
     __THREW__ = 0;
     if (!($394 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      label = 150;
      break L11;
     }
     $396 = ___cxa_find_matching_catch() | 0;
     $397 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$5 = $396;
     $$57 = $397;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$6 >> 2] = 612;
     HEAP32[$7 >> 2] = 592;
     HEAP32[$8 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  case 17:
   {
    $193 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 37472, 42);
    $194 = __THREW__;
    __THREW__ = 0;
    if ($194 & 1) {
     $201 = ___cxa_find_matching_catch() | 0;
     $$2461 = tempRet0;
     $$262 = $201;
    } else {
     __THREW__ = 0;
     invoke_viiii(16, $193 | 0, $this + 72 | 0, $loc | 0, $3 | 0);
     $197 = __THREW__;
     __THREW__ = 0;
     if ($197 & 1) $$08 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $193 | 0, 36640, 183);
      $199 = __THREW__;
      __THREW__ = 0;
      if ($199 & 1) $$08 = 0; else {}
     }
     $203 = ___cxa_find_matching_catch() | 0;
     $204 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     if ($$08) {
      $$2461 = $204;
      $$262 = $203;
     } else {
      $$5 = $203;
      $$57 = $204;
      HEAP32[$ss >> 2] = 572;
      HEAP32[$6 >> 2] = 612;
      HEAP32[$7 >> 2] = 592;
      HEAP32[$8 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
      ___resumeException($$5 | 0);
     }
    }
    ___cxa_free_exception($193 | 0);
    $$5 = $$262;
    $$57 = $$2461;
    HEAP32[$ss >> 2] = 572;
    HEAP32[$6 >> 2] = 612;
    HEAP32[$7 >> 2] = 592;
    HEAP32[$8 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  default:
   label = 150;
  } while (0);
  if ((label | 0) == 150) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $8 | 0);
   $398 = __THREW__;
   __THREW__ = 0;
   if ($398 & 1) label = 12; else {
    HEAP32[$ss >> 2] = 572;
    HEAP32[$6 >> 2] = 612;
    HEAP32[$7 >> 2] = 592;
    HEAP32[$8 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    STACKTOP = sp;
    return;
   }
  }
  if ((label | 0) == 12) {
   $34 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index7Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $34;
  }
  $$5 = $eh$lpad$body$indexZ2D;
  $$57 = $eh$lpad$body$index7Z2D;
  HEAP32[$ss >> 2] = 572;
  HEAP32[$6 >> 2] = 612;
  HEAP32[$7 >> 2] = 592;
  HEAP32[$8 >> 2] = 904;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$5 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function __ZL28jsonnet_evaluate_snippet_auxP9JsonnetVmPKcS2_Pib($vm, $filename, $snippet, $error, $multi) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 $multi = $multi | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i21 = 0, $$0$i$i$i$i21$lcssa = 0, $$0$i$i$i23 = 0, $$0$i50 = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$01$i$i$i26 = 0, $$01$i49 = 0, $$03 = 0, $$1 = 0, $$2 = 0, $$25 = 0, $$4 = 0, $$47 = 0, $$5 = 0, $$58 = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i24$lcssa = 0, $$lcssa = 0, $$lcssa115 = 0, $$pre$phi108Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $104 = 0, $11 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $122 = 0, $126 = 0, $127 = 0, $128 = 0, $130 = 0, $141 = 0, $142 = 0, $143 = 0, $151 = 0, $152 = 0, $154 = 0, $155 = 0, $165 = 0, $166 = 0, $167 = 0, $174 = 0, $175 = 0, $179 = 0, $18 = 0, $181 = 0, $183 = 0, $186 = 0, $19 = 0, $191 = 0, $192 = 0, $2 = 0, $200 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $21 = 0, $211 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $221 = 0, $222 = 0, $223 = 0, $225 = 0, $227 = 0, $228 = 0, $233 = 0, $234 = 0, $236 = 0, $238 = 0, $239 = 0, $24 = 0, $242 = 0, $25 = 0, $252 = 0, $253 = 0, $254 = 0, $26 = 0, $260 = 0, $262 = 0, $263 = 0, $268 = 0, $269 = 0, $271 = 0, $272 = 0, $273 = 0, $275 = 0, $277 = 0, $285 = 0, $286 = 0, $289 = 0, $290 = 0, $291 = 0, $292 = 0, $295 = 0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $303 = 0, $305 = 0, $306 = 0, $307 = 0, $309 = 0, $311 = 0, $312 = 0, $315 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $334 = 0, $336 = 0, $337 = 0, $342 = 0, $343 = 0, $345 = 0, $346 = 0, $347 = 0, $349 = 0, $351 = 0, $352 = 0, $353 = 0, $356 = 0, $359 = 0, $360 = 0, $363 = 0, $364 = 0, $367 = 0, $368 = 0, $374 = 0, $376 = 0, $377 = 0, $382 = 0, $383 = 0, $385 = 0, $386 = 0, $387 = 0, $389 = 0, $39 = 0, $391 = 0, $393 = 0, $395 = 0, $396 = 0, $399 = 0, $4 = 0, $400 = 0, $401 = 0, $403 = 0, $404 = 0, $406 = 0, $407 = 0, $41 = 0, $417 = 0, $418 = 0, $419 = 0, $420 = 0, $426 = 0, $428 = 0, $429 = 0, $43 = 0, $434 = 0, $435 = 0, $437 = 0, $438 = 0, $439 = 0, $441 = 0, $443 = 0, $445 = 0, $45 = 0, $453 = 0, $454 = 0, $455 = 0, $457 = 0, $459 = 0, $46 = 0, $461 = 0, $462 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $57 = 0.0, $58 = 0.0, $6 = 0, $60 = 0, $62 = 0, $65 = 0, $66 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $96 = 0, $alloc = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i47$index7Z2D = 0, $eh$lpad$body$i47$indexZ2D = 0, $eh$lpad$body$index15Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body84$index23Z2D = 0, $eh$lpad$body84$indexZ2D = 0, $files = 0, $i$0$lcssa = 0, $i$093 = 0, $i6$099 = 0, $json_str = 0, $ss = 0, $ss8 = 0, $sz$094 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464 | 0;
 $0 = sp + 452 | 0;
 $1 = sp + 448 | 0;
 $2 = sp + 444 | 0;
 $3 = sp + 432 | 0;
 $4 = sp + 420 | 0;
 $5 = sp + 416 | 0;
 $alloc = sp + 392 | 0;
 $6 = sp + 380 | 0;
 $json_str = sp + 368 | 0;
 $files = sp + 356 | 0;
 $7 = sp + 344 | 0;
 $8 = sp + 332 | 0;
 $9 = sp + 320 | 0;
 $ss = sp + 176 | 0;
 $10 = sp + 160 | 0;
 $ss8 = sp + 16 | 0;
 $11 = sp;
 HEAP32[$alloc + 4 >> 2] = 0;
 HEAP32[$alloc + 8 >> 2] = 0;
 HEAP32[$alloc >> 2] = $alloc + 4;
 HEAP32[$alloc + 12 >> 2] = 0;
 HEAP32[$alloc + 16 >> 2] = 0;
 HEAP32[$alloc + 20 >> 2] = 0;
 $18 = _strlen($filename | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, $filename | 0, $18 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 do if ($19 & 1) {
  $43 = ___cxa_find_matching_catch(48, 36640) | 0;
  $$01 = $43;
  $$03 = tempRet0;
 } else {
  __THREW__ = 0;
  $21 = invoke_iiii(34, $alloc | 0, $6 | 0, $snippet | 0) | 0;
  $22 = __THREW__;
  __THREW__ = 0;
  if ($22 & 1) {
   $45 = ___cxa_find_matching_catch(48, 36640) | 0;
   $46 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $$01 = $45;
   $$03 = $46;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  HEAP32[$json_str + 0 >> 2] = 0;
  HEAP32[$json_str + 4 >> 2] = 0;
  HEAP32[$json_str + 8 >> 2] = 0;
  $24 = $files + 4 | 0;
  HEAP32[$24 >> 2] = 0;
  $25 = $files + 8 | 0;
  HEAP32[$25 >> 2] = 0;
  $26 = $files + 4 | 0;
  HEAP32[$files >> 2] = $26;
  do if (!(HEAP8[$vm + 16 >> 0] | 0)) {
   __THREW__ = 0;
   invoke_vi(185, $21 | 0);
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) label = 12; else {
    $52 = $vm + 24 | 0;
    $54 = HEAP32[$vm + 8 >> 2] | 0;
    $57 = +((HEAP32[$vm + 12 >> 2] | 0) >>> 0);
    $58 = +HEAPF64[$vm >> 3];
    $60 = HEAP32[$vm + 36 >> 2] | 0;
    $62 = HEAP32[$vm + 40 >> 2] | 0;
    $65 = (HEAP8[$vm + 44 >> 0] | 0) != 0;
    if ($multi) {
     __THREW__ = 0;
     invoke_viiiiiddiii(1, $8 | 0, $alloc | 0, $21 | 0, $52 | 0, $54 | 0, +$57, +$58, $60 | 0, $62 | 0, $65 | 0);
     $66 = __THREW__;
     __THREW__ = 0;
     if ($66 & 1) {
      label = 12;
      break;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
     HEAP32[$files >> 2] = HEAP32[$8 >> 2];
     $71 = HEAP32[$8 + 4 >> 2] | 0;
     HEAP32[$24 >> 2] = $71;
     $72 = $8 + 8 | 0;
     $73 = HEAP32[$72 >> 2] | 0;
     HEAP32[$25 >> 2] = $73;
     if (!$73) {
      HEAP32[$files >> 2] = $26;
      $77 = $71;
     } else {
      HEAP32[$71 + 8 >> 2] = $26;
      $76 = $8 + 4 | 0;
      HEAP32[$8 >> 2] = $76;
      HEAP32[$76 >> 2] = 0;
      HEAP32[$72 >> 2] = 0;
      $77 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($8, $77);
     $$pre$phi108Z2D = $files;
     label = 29;
     break;
    }
    __THREW__ = 0;
    invoke_viiiiiddiii(2, $9 | 0, $alloc | 0, $21 | 0, $52 | 0, $54 | 0, +$57, +$58, $60 | 0, $62 | 0, $65 | 0);
    $78 = __THREW__;
    __THREW__ = 0;
    if ($78 & 1) label = 12; else {
     if (!(HEAP8[$json_str >> 0] & 1)) {
      HEAP8[$json_str + 1 >> 0] = 0;
      HEAP8[$json_str >> 0] = 0;
     } else {
      HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
      HEAP32[$json_str + 4 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $json_str | 0, 0);
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) {
      $89 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($89);
     } else {
      HEAP32[$json_str + 0 >> 2] = HEAP32[$9 + 0 >> 2];
      HEAP32[$json_str + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      HEAP32[$json_str + 8 >> 2] = HEAP32[$9 + 8 >> 2];
      HEAP32[$9 + 0 >> 2] = 0;
      HEAP32[$9 + 4 >> 2] = 0;
      HEAP32[$9 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      label = 70;
      break;
     }
    }
   }
  } else {
   __THREW__ = 0;
   invoke_vii(69, $7 | 0, $21 | 0);
   $30 = __THREW__;
   __THREW__ = 0;
   if ($30 & 1) label = 12; else {
    if (!(HEAP8[$json_str >> 0] & 1)) {
     HEAP8[$json_str + 1 >> 0] = 0;
     HEAP8[$json_str >> 0] = 0;
    } else {
     HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
     HEAP32[$json_str + 4 >> 2] = 0;
    }
    __THREW__ = 0;
    invoke_vii(45, $json_str | 0, 0);
    $39 = __THREW__;
    __THREW__ = 0;
    if ($39 & 1) {
     $41 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($41);
    };
    HEAP32[$json_str + 0 >> 2] = HEAP32[$7 + 0 >> 2];
    HEAP32[$json_str + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$json_str + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$7 + 0 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    if ($multi) {
     $$pre$phi108Z2D = $files;
     label = 29;
    } else label = 70;
   }
  } while (0);
  if ((label | 0) == 29) {
   $91 = HEAP32[$$pre$phi108Z2D >> 2] | 0;
   $92 = ($91 | 0) == ($26 | 0);
   if ($92) {
    $191 = _malloc(1) | 0;
    $i$0$lcssa = 0;
   } else {
    $95 = $91;
    $sz$094 = 1;
    while (1) {
     $96 = HEAP8[$95 + 16 >> 0] | 0;
     if (!($96 & 1)) $113 = ($96 & 255) >>> 1; else $113 = HEAP32[$95 + 20 >> 2] | 0;
     $104 = HEAP8[$95 + 28 >> 0] | 0;
     if (!($104 & 1)) $115 = ($104 & 255) >>> 1; else $115 = HEAP32[$95 + 32 >> 2] | 0;
     $114 = $sz$094 + 3 + $113 + $115 | 0;
     $117 = HEAP32[$95 + 4 >> 2] | 0;
     if (!$117) {
      $$0$i$i$i = $95;
      while (1) {
       $122 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$122 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$cast$i$i$i$lcssa = $122;
        break;
       } else $$0$i$i$i = $122;
      }
      $$01$i$i$i = $$cast$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i = $117;
      while (1) {
       $119 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$119) {
        $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $119;
      }
      $$01$i$i$i = $$0$i$i$i$i$lcssa;
     }
     if (($$01$i$i$i | 0) == ($26 | 0)) {
      $$lcssa115 = $114;
      break;
     } else {
      $95 = $$01$i$i$i;
      $sz$094 = $114;
     }
    }
    $126 = _malloc($$lcssa115) | 0;
    if ($92) {
     $191 = $126;
     $i$0$lcssa = 0;
    } else {
     $128 = $91;
     $i$093 = 0;
     while (1) {
      $127 = $128 + 16 | 0;
      $130 = HEAP8[$127 >> 0] | 0;
      if (!($130 & 1)) {
       $141 = ($130 & 255) >>> 1;
       $142 = $127 + 1 | 0;
      } else {
       $141 = HEAP32[$128 + 20 >> 2] | 0;
       $142 = HEAP32[$128 + 24 >> 2] | 0;
      }
      _memcpy($126 + $i$093 | 0, $142 | 0, $141 + 1 | 0) | 0;
      $143 = HEAP8[$127 >> 0] | 0;
      if (!($143 & 1)) $152 = ($143 & 255) >>> 1; else $152 = HEAP32[$128 + 20 >> 2] | 0;
      $151 = $i$093 + 1 + $152 | 0;
      $154 = $128 + 28 | 0;
      $155 = HEAP8[$154 >> 0] | 0;
      if (!($155 & 1)) {
       $165 = $154 + 1 | 0;
       $166 = ($155 & 255) >>> 1;
      } else {
       $165 = HEAP32[$128 + 36 >> 2] | 0;
       $166 = HEAP32[$128 + 32 >> 2] | 0;
      }
      _memcpy($126 + $151 | 0, $165 | 0, $166 | 0) | 0;
      $167 = HEAP8[$154 >> 0] | 0;
      if (!($167 & 1)) $175 = ($167 & 255) >>> 1; else $175 = HEAP32[$128 + 32 >> 2] | 0;
      $174 = $175 + $151 | 0;
      HEAP8[$126 + $174 >> 0] = 10;
      HEAP8[$126 + ($174 + 1) >> 0] = 0;
      $179 = $174 + 2 | 0;
      $181 = HEAP32[$128 + 4 >> 2] | 0;
      if (!$181) {
       $$0$i$i$i23 = $128;
       while (1) {
        $186 = HEAP32[$$0$i$i$i23 + 8 >> 2] | 0;
        if ((HEAP32[$186 >> 2] | 0) == ($$0$i$i$i23 | 0)) {
         $$cast$i$i$i24$lcssa = $186;
         break;
        } else $$0$i$i$i23 = $186;
       }
       $$01$i$i$i26 = $$cast$i$i$i24$lcssa;
      } else {
       $$0$i$i$i$i21 = $181;
       while (1) {
        $183 = HEAP32[$$0$i$i$i$i21 >> 2] | 0;
        if (!$183) {
         $$0$i$i$i$i21$lcssa = $$0$i$i$i$i21;
         break;
        } else $$0$i$i$i$i21 = $183;
       }
       $$01$i$i$i26 = $$0$i$i$i$i21$lcssa;
      }
      if (($$01$i$i$i26 | 0) == ($26 | 0)) {
       $$lcssa = $179;
       break;
      } else {
       $128 = $$01$i$i$i26;
       $i$093 = $179;
      }
     }
     $191 = $126;
     $i$0$lcssa = $$lcssa;
    }
   }
   HEAP8[$191 + $i$0$lcssa >> 0] = 0;
   HEAP32[$error >> 2] = 0;
   $$0 = $191;
  } else if ((label | 0) == 70) {
   __THREW__ = 0;
   invoke_iii(27, $json_str | 0, 39992) | 0;
   $192 = __THREW__;
   __THREW__ = 0;
   if ($192 & 1) label = 12; else {
    HEAP32[$error >> 2] = 0;
    if (!(HEAP8[$json_str >> 0] & 1)) $200 = $json_str + 1 | 0; else $200 = HEAP32[$json_str + 8 >> 2] | 0;
    $$0 = ___strdup($200) | 0;
   }
  }
  if ((label | 0) == 12) {
   $47 = ___cxa_find_matching_catch(48, 36640) | 0;
   $48 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($json_str);
   $$01 = $47;
   $$03 = $48;
   break;
  }
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($json_str);
  __ZN9AllocatorD2Ev($alloc);
  $$1 = $$0;
  STACKTOP = sp;
  return $$1 | 0;
 } while (0);
 __ZN9AllocatorD2Ev($alloc);
 if (($$03 | 0) == (_llvm_eh_typeid_for(48) | 0)) {
  $205 = ___cxa_begin_catch($$01 | 0) | 0;
  $206 = $ss8 + 64 | 0;
  $207 = $ss8 + 8 | 0;
  HEAP32[$207 >> 2] = 592;
  $208 = $ss8 + 12 | 0;
  HEAP32[$ss8 >> 2] = 740;
  HEAP32[$206 >> 2] = 760;
  HEAP32[$ss8 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss8 + 64 | 0, $208 | 0);
  $211 = __THREW__;
  __THREW__ = 0;
  L106 : do if ($211 & 1) {
   $223 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $223;
   label = 160;
  } else {
   HEAP32[$ss8 + 136 >> 2] = 0;
   HEAP32[$ss8 + 140 >> 2] = -1;
   HEAP32[$ss8 >> 2] = 572;
   HEAP32[$206 >> 2] = 612;
   HEAP32[$207 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $208 | 0);
   $215 = __THREW__;
   __THREW__ = 0;
   do if ($215 & 1) {
    $225 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $225;
   } else {
    HEAP32[$208 >> 2] = 904;
    $217 = $ss8 + 44 | 0;
    HEAP32[$217 + 0 >> 2] = 0;
    HEAP32[$217 + 4 >> 2] = 0;
    HEAP32[$217 + 8 >> 2] = 0;
    HEAP32[$217 + 12 >> 2] = 0;
    HEAP32[$ss8 + 60 >> 2] = 24;
    HEAP32[$4 + 0 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $208 | 0, $4 | 0);
    $219 = __THREW__;
    __THREW__ = 0;
    if ($219 & 1) {
     $221 = ___cxa_find_matching_catch() | 0;
     $222 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($217);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($208);
     $eh$lpad$body$i$index2Z2D = $222;
     $eh$lpad$body$i$indexZ2D = $221;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    __THREW__ = 0;
    $227 = invoke_iiii(25, $207 | 0, 40032, 14) | 0;
    $228 = __THREW__;
    __THREW__ = 0;
    do if ($228 & 1) label = 161; else {
     if (HEAP32[$205 + 12 >> 2] | 0) {
      __THREW__ = 0;
      $233 = invoke_iii(34, $227 | 0, $205 | 0) | 0;
      $234 = __THREW__;
      __THREW__ = 0;
      if ($234 & 1) {
       label = 161;
       break;
      }
      __THREW__ = 0;
      invoke_iiii(25, $233 | 0, 40048, 1) | 0;
      $236 = __THREW__;
      __THREW__ = 0;
      if ($236 & 1) {
       label = 161;
       break;
      }
     }
     __THREW__ = 0;
     $238 = invoke_iiii(25, $227 | 0, 40056, 1) | 0;
     $239 = __THREW__;
     __THREW__ = 0;
     if ($239 & 1) label = 161; else {
      $242 = HEAP8[$205 + 28 >> 0] | 0;
      if (!($242 & 1)) {
       $252 = $205 + 29 | 0;
       $253 = ($242 & 255) >>> 1;
      } else {
       $252 = HEAP32[$205 + 36 >> 2] | 0;
       $253 = HEAP32[$205 + 32 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $238 | 0, $252 | 0, $253 | 0) | 0;
      $254 = __THREW__;
      __THREW__ = 0;
      if ($254 & 1) label = 161; else {
       __THREW__ = 0;
       invoke_vii(47, $1 | 0, $227 + (HEAP32[(HEAP32[$227 >> 2] | 0) + -12 >> 2] | 0) | 0);
       $260 = __THREW__;
       __THREW__ = 0;
       if ($260 & 1) label = 161; else {
        __THREW__ = 0;
        $262 = invoke_iii(22, $1 | 0, 47968) | 0;
        $263 = __THREW__;
        __THREW__ = 0;
        if (!($263 & 1)) {
         __THREW__ = 0;
         $268 = invoke_iii(HEAP32[(HEAP32[$262 >> 2] | 0) + 28 >> 2] | 0, $262 | 0, 10) | 0;
         $269 = __THREW__;
         __THREW__ = 0;
         if (!($269 & 1)) {
          __ZNSt3__16localeD2Ev($1);
          __THREW__ = 0;
          invoke_iii(25, $227 | 0, $268 | 0) | 0;
          $273 = __THREW__;
          __THREW__ = 0;
          if ($273 & 1) {
           label = 161;
           break;
          }
          __THREW__ = 0;
          invoke_ii(68, $227 | 0) | 0;
          $275 = __THREW__;
          __THREW__ = 0;
          if ($275 & 1) {
           label = 161;
           break;
          }
          HEAP32[$error >> 2] = 1;
          __THREW__ = 0;
          invoke_vii(43, $11 | 0, $208 | 0);
          $277 = __THREW__;
          __THREW__ = 0;
          if ($277 & 1) {
           label = 161;
           break;
          }
          if (!(HEAP8[$11 >> 0] & 1)) $285 = $11 + 1 | 0; else $285 = HEAP32[$11 + 8 >> 2] | 0;
          $286 = ___strdup($285) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
          HEAP32[$ss8 >> 2] = 572;
          HEAP32[$206 >> 2] = 612;
          HEAP32[$207 >> 2] = 592;
          HEAP32[$208 >> 2] = 904;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($217);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($208);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($206);
          ___cxa_end_catch();
          $$1 = $286;
          STACKTOP = sp;
          return $$1 | 0;
         }
        }
        $271 = ___cxa_find_matching_catch() | 0;
        $272 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body84$index23Z2D = $272;
        $eh$lpad$body84$indexZ2D = $271;
       }
      }
     }
    } while (0);
    if ((label | 0) == 161) {
     $457 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body84$index23Z2D = tempRet0;
     $eh$lpad$body84$indexZ2D = $457;
    }
    HEAP32[$ss8 >> 2] = 572;
    HEAP32[$206 >> 2] = 612;
    HEAP32[$207 >> 2] = 592;
    HEAP32[$208 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($217);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($208);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($206);
    $$4 = $eh$lpad$body84$indexZ2D;
    $$47 = $eh$lpad$body84$index23Z2D;
    break L106;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
   label = 160;
  } while (0);
  if ((label | 0) == 160) {
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($206);
   $$4 = $$01$i;
   $$47 = $$0$i;
  }
  __THREW__ = 0;
  invoke_v(2);
  $459 = __THREW__;
  __THREW__ = 0;
  if ($459 & 1) {
   $461 = ___cxa_find_matching_catch(0) | 0;
   $462 = tempRet0;
   ___clang_call_terminate($461);
  } else {
   $$5 = $$4;
   $$58 = $$47;
   ___resumeException($$5 | 0);
  }
 }
 if (($$03 | 0) != (_llvm_eh_typeid_for(36640) | 0)) {
  $$5 = $$01;
  $$58 = $$03;
  ___resumeException($$5 | 0);
 }
 $289 = ___cxa_begin_catch($$01 | 0) | 0;
 $290 = $ss + 64 | 0;
 $291 = $ss + 8 | 0;
 HEAP32[$291 >> 2] = 592;
 $292 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$290 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $292 | 0);
 $295 = __THREW__;
 __THREW__ = 0;
 L154 : do if ($295 & 1) {
  $307 = ___cxa_find_matching_catch() | 0;
  $$0$i50 = tempRet0;
  $$01$i49 = $307;
  label = 134;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 572;
  HEAP32[$290 >> 2] = 612;
  HEAP32[$291 >> 2] = 592;
  __THREW__ = 0;
  invoke_vi(177, $292 | 0);
  $299 = __THREW__;
  __THREW__ = 0;
  do if ($299 & 1) {
   $309 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i47$index7Z2D = tempRet0;
   $eh$lpad$body$i47$indexZ2D = $309;
  } else {
   HEAP32[$292 >> 2] = 904;
   $301 = $ss + 44 | 0;
   HEAP32[$301 + 0 >> 2] = 0;
   HEAP32[$301 + 4 >> 2] = 0;
   HEAP32[$301 + 8 >> 2] = 0;
   HEAP32[$301 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$3 + 0 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $292 | 0, $3 | 0);
   $303 = __THREW__;
   __THREW__ = 0;
   if ($303 & 1) {
    $305 = ___cxa_find_matching_catch() | 0;
    $306 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($301);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($292);
    $eh$lpad$body$i47$index7Z2D = $306;
    $eh$lpad$body$i47$indexZ2D = $305;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __THREW__ = 0;
   $311 = invoke_iiii(25, $291 | 0, 4e4, 15) | 0;
   $312 = __THREW__;
   __THREW__ = 0;
   L163 : do if ($312 & 1) label = 136; else {
    $315 = HEAP8[$289 + 12 >> 0] | 0;
    if (!($315 & 1)) {
     $325 = $289 + 13 | 0;
     $326 = ($315 & 255) >>> 1;
    } else {
     $325 = HEAP32[$289 + 20 >> 2] | 0;
     $326 = HEAP32[$289 + 16 >> 2] | 0;
    }
    __THREW__ = 0;
    $327 = invoke_iiii(25, $311 | 0, $325 | 0, $326 | 0) | 0;
    $328 = __THREW__;
    __THREW__ = 0;
    if ($328 & 1) label = 136; else {
     __THREW__ = 0;
     invoke_vii(47, $2 | 0, $327 + (HEAP32[(HEAP32[$327 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $334 = __THREW__;
     __THREW__ = 0;
     if ($334 & 1) label = 136; else {
      __THREW__ = 0;
      $336 = invoke_iii(22, $2 | 0, 47968) | 0;
      $337 = __THREW__;
      __THREW__ = 0;
      if (!($337 & 1)) {
       __THREW__ = 0;
       $342 = invoke_iii(HEAP32[(HEAP32[$336 >> 2] | 0) + 28 >> 2] | 0, $336 | 0, 10) | 0;
       $343 = __THREW__;
       __THREW__ = 0;
       if (!($343 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(25, $327 | 0, $342 | 0) | 0;
        $347 = __THREW__;
        __THREW__ = 0;
        if ($347 & 1) {
         label = 136;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $327 | 0) | 0;
        $349 = __THREW__;
        __THREW__ = 0;
        if ($349 & 1) {
         label = 136;
         break;
        }
        $351 = $vm + 20 | 0;
        $352 = HEAP32[$351 >> 2] | 0;
        $353 = $352 >>> 1;
        $356 = HEAP32[$289 >> 2] | 0;
        $359 = (HEAP32[$289 + 4 >> 2] | 0) - $356 | 0;
        $360 = ($359 | 0) / 40 | 0;
        do if (($359 | 0) > 0) {
         $363 = $353 - $352 + $360 | 0;
         $364 = $352;
         $399 = $356;
         $i6$099 = 0;
         L178 : while (1) {
          do if (($364 | 0) != 0 & ($i6$099 | 0) >= ($353 | 0) & ($i6$099 | 0) < ($363 | 0)) {
           if (($i6$099 | 0) != ($353 | 0)) break;
           __THREW__ = 0;
           $367 = invoke_iiii(25, $291 | 0, 40016, 4) | 0;
           $368 = __THREW__;
           __THREW__ = 0;
           if ($368 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           invoke_vii(47, $0 | 0, $367 + (HEAP32[(HEAP32[$367 >> 2] | 0) + -12 >> 2] | 0) | 0);
           $374 = __THREW__;
           __THREW__ = 0;
           if ($374 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           $376 = invoke_iii(22, $0 | 0, 47968) | 0;
           $377 = __THREW__;
           __THREW__ = 0;
           if ($377 & 1) {
            label = 131;
            break L178;
           }
           __THREW__ = 0;
           $382 = invoke_iii(HEAP32[(HEAP32[$376 >> 2] | 0) + 28 >> 2] | 0, $376 | 0, 10) | 0;
           $383 = __THREW__;
           __THREW__ = 0;
           if ($383 & 1) {
            label = 131;
            break L178;
           }
           __ZNSt3__16localeD2Ev($0);
           __THREW__ = 0;
           invoke_iii(25, $367 | 0, $382 | 0) | 0;
           $387 = __THREW__;
           __THREW__ = 0;
           if ($387 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           invoke_ii(68, $367 | 0) | 0;
           $389 = __THREW__;
           __THREW__ = 0;
           if ($389 & 1) {
            label = 135;
            break L178;
           }
          } else {
           __THREW__ = 0;
           $395 = invoke_iiii(25, $291 | 0, 40024, 1) | 0;
           $396 = __THREW__;
           __THREW__ = 0;
           if ($396 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           $400 = invoke_iii(34, $395 | 0, $399 + ($i6$099 * 40 | 0) | 0) | 0;
           $401 = __THREW__;
           __THREW__ = 0;
           if ($401 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           $403 = invoke_iiii(25, $400 | 0, 40024, 1) | 0;
           $404 = __THREW__;
           __THREW__ = 0;
           if ($404 & 1) {
            label = 135;
            break L178;
           }
           $406 = $399 + ($i6$099 * 40 | 0) + 28 | 0;
           $407 = HEAP8[$406 >> 0] | 0;
           if (!($407 & 1)) {
            $417 = $406 + 1 | 0;
            $418 = ($407 & 255) >>> 1;
           } else {
            $417 = HEAP32[$399 + ($i6$099 * 40 | 0) + 36 >> 2] | 0;
            $418 = HEAP32[$399 + ($i6$099 * 40 | 0) + 32 >> 2] | 0;
           }
           __THREW__ = 0;
           $419 = invoke_iiii(25, $403 | 0, $417 | 0, $418 | 0) | 0;
           $420 = __THREW__;
           __THREW__ = 0;
           if ($420 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           invoke_vii(47, $5 | 0, $419 + (HEAP32[(HEAP32[$419 >> 2] | 0) + -12 >> 2] | 0) | 0);
           $426 = __THREW__;
           __THREW__ = 0;
           if ($426 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           $428 = invoke_iii(22, $5 | 0, 47968) | 0;
           $429 = __THREW__;
           __THREW__ = 0;
           if ($429 & 1) {
            label = 147;
            break L178;
           }
           __THREW__ = 0;
           $434 = invoke_iii(HEAP32[(HEAP32[$428 >> 2] | 0) + 28 >> 2] | 0, $428 | 0, 10) | 0;
           $435 = __THREW__;
           __THREW__ = 0;
           if ($435 & 1) {
            label = 147;
            break L178;
           }
           __ZNSt3__16localeD2Ev($5);
           __THREW__ = 0;
           invoke_iii(25, $419 | 0, $434 | 0) | 0;
           $439 = __THREW__;
           __THREW__ = 0;
           if ($439 & 1) {
            label = 135;
            break L178;
           }
           __THREW__ = 0;
           invoke_ii(68, $419 | 0) | 0;
           $441 = __THREW__;
           __THREW__ = 0;
           if ($441 & 1) {
            label = 135;
            break L178;
           }
          } while (0);
          $443 = $i6$099 + 1 | 0;
          if (($443 | 0) >= ($360 | 0)) {
           label = 152;
           break;
          }
          $364 = HEAP32[$351 >> 2] | 0;
          $399 = HEAP32[$289 >> 2] | 0;
          $i6$099 = $443;
         }
         if ((label | 0) == 131) {
          $385 = ___cxa_find_matching_catch() | 0;
          $386 = tempRet0;
          __ZNSt3__16localeD2Ev($0);
          $eh$lpad$body$index15Z2D = $386;
          $eh$lpad$body$indexZ2D = $385;
          break L163;
         } else if ((label | 0) == 135) {
          $391 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body$index15Z2D = tempRet0;
          $eh$lpad$body$indexZ2D = $391;
          break L163;
         } else if ((label | 0) == 147) {
          $437 = ___cxa_find_matching_catch() | 0;
          $438 = tempRet0;
          __ZNSt3__16localeD2Ev($5);
          $eh$lpad$body$index15Z2D = $438;
          $eh$lpad$body$indexZ2D = $437;
          break L163;
         } else if ((label | 0) == 152) break;
        } while (0);
        HEAP32[$error >> 2] = 1;
        __THREW__ = 0;
        invoke_vii(43, $10 | 0, $292 | 0);
        $445 = __THREW__;
        __THREW__ = 0;
        if ($445 & 1) {
         label = 136;
         break;
        }
        if (!(HEAP8[$10 >> 0] & 1)) $453 = $10 + 1 | 0; else $453 = HEAP32[$10 + 8 >> 2] | 0;
        $454 = ___strdup($453) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
        HEAP32[$ss >> 2] = 572;
        HEAP32[$290 >> 2] = 612;
        HEAP32[$291 >> 2] = 592;
        HEAP32[$292 >> 2] = 904;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($301);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($292);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($290);
        ___cxa_end_catch();
        $$1 = $454;
        STACKTOP = sp;
        return $$1 | 0;
       }
      }
      $345 = ___cxa_find_matching_catch() | 0;
      $346 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body$index15Z2D = $346;
      $eh$lpad$body$indexZ2D = $345;
     }
    }
   } while (0);
   if ((label | 0) == 136) {
    $393 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index15Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $393;
   }
   HEAP32[$ss >> 2] = 572;
   HEAP32[$290 >> 2] = 612;
   HEAP32[$291 >> 2] = 592;
   HEAP32[$292 >> 2] = 904;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($301);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($292);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($290);
   $$2 = $eh$lpad$body$indexZ2D;
   $$25 = $eh$lpad$body$index15Z2D;
   break L154;
  } while (0);
  $$0$i50 = $eh$lpad$body$i47$index7Z2D;
  $$01$i49 = $eh$lpad$body$i47$indexZ2D;
  label = 134;
 } while (0);
 if ((label | 0) == 134) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($290);
  $$2 = $$01$i49;
  $$25 = $$0$i50;
 }
 __THREW__ = 0;
 invoke_v(2);
 $455 = __THREW__;
 __THREW__ = 0;
 if ($455 & 1) {
  $461 = ___cxa_find_matching_catch(0) | 0;
  $462 = tempRet0;
  ___clang_call_terminate($461);
 } else {
  $$5 = $$2;
  $$58 = $$25;
  ___resumeException($$5 | 0);
 }
 return 0;
}

function _MUSL_vfscanf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$8 = 0, $$lcssa = 0, $$lcssa317 = 0, $$lcssa318 = 0, $$lcssa319 = 0, $$lcssa320 = 0, $$lcssa366 = 0, $$lcssa39 = 0, $$pre$phi223Z2D = 0, $$pre209 = 0, $$pre215 = 0, $$pre220 = 0, $$size$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $121 = 0, $125 = 0, $13 = 0, $132 = 0, $137 = 0, $140 = 0, $146 = 0, $147 = 0, $152 = 0, $156 = 0, $16 = 0, $160 = 0, $162 = 0, $164 = 0, $166 = 0, $169 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $177 = 0, $182 = 0, $186 = 0, $191 = 0, $192 = 0, $194 = 0, $199 = 0, $203 = 0, $208 = 0, $21 = 0, $214 = 0, $218 = 0, $223 = 0, $230 = 0, $238 = 0, $243 = 0, $247 = 0, $249 = 0, $253 = 0, $255 = 0, $263 = 0, $271 = 0, $272 = 0, $275 = 0, $277 = 0, $28 = 0, $283 = 0, $290 = 0, $292 = 0, $298 = 0, $3 = 0, $304 = 0, $307 = 0, $311 = 0, $318 = 0, $33 = 0, $333 = 0, $337 = 0.0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $57 = 0, $6 = 0, $7 = 0, $77 = 0, $78 = 0, $8 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $alloc$0 = 0, $alloc$0$lcssa = 0, $alloc$0$lcssa381 = 0, $alloc$0$lcssa382 = 0, $alloc$0$lcssa383 = 0, $alloc$0$lcssa385 = 0, $alloc$0$lcssa386 = 0, $alloc$0$lcssa387 = 0, $alloc$0204 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $base$0 = 0, $c$0101 = 0, $dest$0 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph$lcssa333 = 0, $i$0$ph21 = 0, $i$0$ph21$lcssa = 0, $i$0$ph21$lcssa336 = 0, $i$0$ph21$us106 = 0, $i$0$ph21$us106$lcssa = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$lcssa = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$3$lcssa = 0, $i$4 = 0, $invert$0 = 0, $isdigittmp = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0111 = 0, $matches$0111$lcssa = 0, $matches$0111$lcssa338 = 0, $matches$0111$lcssa339 = 0, $matches$0111$lcssa340 = 0, $matches$0111$lcssa341 = 0, $matches$0111$lcssa342 = 0, $matches$0111$lcssa343 = 0, $matches$0111$lcssa344 = 0, $matches$0111$lcssa345 = 0, $matches$0111347 = 0, $matches$1 = 0, $matches$1$lcssa = 0, $matches$2 = 0, $matches$3 = 0, $p$0117 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$397 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$lcssa = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0116 = 0, $pos$1 = 0, $pos$2 = 0, $s$0109 = 0, $s$0109$lcssa = 0, $s$1 = 0, $s$1$lcssa368 = 0, $s$2$ph = 0, $s$2$ph$lcssa = 0, $s$2$ph$lcssa323 = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$6$ph = 0, $s$7 = 0, $s$8 = 0, $s$8$ph = 0, $scanset = 0, $size$0 = 0, $st = 0, $wc = 0, $wcs$0110 = 0, $wcs$0110$lcssa = 0, $wcs$1 = 0, $wcs$1$lcssa375 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph$lcssa$lcssa = 0, $wcs$3$ph$lcssa326 = 0, $wcs$3$ph$lcssa327 = 0, $wcs$3$ph$lcssa330 = 0, $wcs$3$ph139 = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$7$ph = 0, $wcs$8 = 0, $wcs$9 = 0, $wcs$9$ph = 0, $width$0$lcssa = 0, $width$098 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $ap2$i = sp + 16 | 0;
 $st = sp + 8 | 0;
 $scanset = sp + 33 | 0;
 $wc = sp;
 $0 = sp + 32 | 0;
 $1 = HEAP8[$fmt >> 0] | 0;
 if (!($1 << 24 >> 24)) {
  $matches$3 = 0;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 $5 = $f + 108 | 0;
 $6 = $f + 8 | 0;
 $7 = $scanset + 10 | 0;
 $8 = $scanset + 33 | 0;
 $9 = $st + 4 | 0;
 $10 = $scanset + 46 | 0;
 $11 = $scanset + 94 | 0;
 $13 = $1;
 $matches$0111 = 0;
 $p$0117 = $fmt;
 $pos$0116 = 0;
 $s$0109 = 0;
 $wcs$0110 = 0;
 L4 : while (1) {
  L6 : do if (!(_isspace($13 & 255) | 0)) {
   $43 = (HEAP8[$p$0117 >> 0] | 0) == 37;
   L8 : do if ($43) {
    $44 = $p$0117 + 1 | 0;
    $45 = HEAP8[$44 >> 0] | 0;
    do if ($45 << 24 >> 24 == 42) {
     $dest$0 = 0;
     $p$2 = $p$0117 + 2 | 0;
    } else if ($45 << 24 >> 24 == 37) break L8; else {
     $isdigittmp = ($45 & 255) + -48 | 0;
     if ($isdigittmp >>> 0 < 10) if ((HEAP8[$p$0117 + 2 >> 0] | 0) == 36) {
      HEAP32[$ap2$i >> 2] = HEAP32[$ap >> 2];
      $i$0$i = $isdigittmp;
      while (1) {
       $77 = (HEAP32[$ap2$i >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $78 = HEAP32[$77 >> 2] | 0;
       HEAP32[$ap2$i >> 2] = $77 + 4;
       if ($i$0$i >>> 0 > 1) $i$0$i = $i$0$i + -1 | 0; else {
        $$lcssa = $78;
        break;
       }
      }
      $dest$0 = $$lcssa;
      $p$2 = $p$0117 + 3 | 0;
      break;
     }
     $86 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $87 = HEAP32[$86 >> 2] | 0;
     HEAP32[$ap >> 2] = $86 + 4;
     $dest$0 = $87;
     $p$2 = $44;
    } while (0);
    $88 = HEAP8[$p$2 >> 0] | 0;
    $89 = $88 & 255;
    if (($89 + -48 | 0) >>> 0 < 10) {
     $93 = $89;
     $p$397 = $p$2;
     $width$098 = 0;
     while (1) {
      $92 = ($width$098 * 10 | 0) + -48 + $93 | 0;
      $94 = $p$397 + 1 | 0;
      $95 = HEAP8[$94 >> 0] | 0;
      $93 = $95 & 255;
      if (($93 + -48 | 0) >>> 0 >= 10) {
       $$lcssa317 = $92;
       $$lcssa318 = $94;
       $$lcssa319 = $95;
       break;
      } else {
       $p$397 = $94;
       $width$098 = $92;
      }
     }
     $$lcssa39 = $$lcssa319;
     $p$3$lcssa = $$lcssa318;
     $width$0$lcssa = $$lcssa317;
    } else {
     $$lcssa39 = $88;
     $p$3$lcssa = $p$2;
     $width$0$lcssa = 0;
    }
    if ($$lcssa39 << 24 >> 24 == 109) {
     $100 = $p$3$lcssa + 1 | 0;
     $103 = HEAP8[$100 >> 0] | 0;
     $alloc$0 = ($dest$0 | 0) != 0 & 1;
     $p$4 = $100;
     $s$1 = 0;
     $wcs$1 = 0;
    } else {
     $103 = $$lcssa39;
     $alloc$0 = 0;
     $p$4 = $p$3$lcssa;
     $s$1 = $s$0109;
     $wcs$1 = $wcs$0110;
    }
    $101 = $p$4 + 1 | 0;
    switch ($103 & 255 | 0) {
    case 110:
    case 112:
    case 67:
    case 83:
    case 91:
    case 99:
    case 115:
    case 88:
    case 71:
    case 70:
    case 69:
    case 65:
    case 103:
    case 102:
    case 101:
    case 97:
    case 120:
    case 117:
    case 111:
    case 105:
    case 100:
     {
      $p$5 = $p$4;
      $size$0 = 0;
      break;
     }
    case 106:
     {
      $p$5 = $101;
      $size$0 = 3;
      break;
     }
    case 108:
     {
      $108 = (HEAP8[$101 >> 0] | 0) == 108;
      $p$5 = $108 ? $p$4 + 2 | 0 : $101;
      $size$0 = $108 ? 3 : 1;
      break;
     }
    case 76:
     {
      $p$5 = $101;
      $size$0 = 2;
      break;
     }
    case 116:
    case 122:
     {
      $p$5 = $101;
      $size$0 = 1;
      break;
     }
    case 104:
     {
      $105 = (HEAP8[$101 >> 0] | 0) == 104;
      $p$5 = $105 ? $p$4 + 2 | 0 : $101;
      $size$0 = $105 ? -2 : -1;
      break;
     }
    default:
     {
      $alloc$0$lcssa = $alloc$0;
      $matches$0111$lcssa338 = $matches$0111;
      $s$6$ph = $s$1;
      $wcs$7$ph = $wcs$1;
      label = 188;
      break L4;
     }
    }
    $111 = HEAPU8[$p$5 >> 0] | 0;
    $113 = ($111 & 47 | 0) == 3;
    $$ = $113 ? $111 | 32 : $111;
    $$size$0 = $113 ? 1 : $size$0;
    if (($$ | 0) == 91) {
     $pos$1 = $pos$0116;
     $width$1 = $width$0$lcssa;
    } else if (($$ | 0) == 99) {
     $pos$1 = $pos$0116;
     $width$1 = ($width$0$lcssa | 0) < 1 ? 1 : $width$0$lcssa;
    } else if (($$ | 0) == 110) {
     if (!$dest$0) {
      $matches$1 = $matches$0111;
      $p$11 = $p$5;
      $pos$2 = $pos$0116;
      $s$5 = $s$1;
      $wcs$6 = $wcs$1;
      break L6;
     }
     switch ($$size$0 | 0) {
     case -2:
      {
       HEAP8[$dest$0 >> 0] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case 1:
      {
       HEAP32[$dest$0 >> 2] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case -1:
      {
       HEAP16[$dest$0 >> 1] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case 3:
      {
       $121 = $dest$0;
       HEAP32[$121 >> 2] = $pos$0116;
       HEAP32[$121 + 4 >> 2] = (($pos$0116 | 0) < 0) << 31 >> 31;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case 0:
      {
       HEAP32[$dest$0 >> 2] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     default:
      {
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
      }
     }
    } else {
     ___shlim($f, 0);
     do {
      $125 = HEAP32[$3 >> 2] | 0;
      if ($125 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $125 + 1;
       $132 = HEAPU8[$125 >> 0] | 0;
      } else $132 = ___shgetc($f) | 0;
     } while ((_isspace($132) | 0) != 0);
     $$pre209 = HEAP32[$3 >> 2] | 0;
     if (!(HEAP32[$4 >> 2] | 0)) $140 = $$pre209; else {
      $137 = $$pre209 + -1 | 0;
      HEAP32[$3 >> 2] = $137;
      $140 = $137;
     }
     $pos$1 = (HEAP32[$5 >> 2] | 0) + $pos$0116 + $140 - (HEAP32[$6 >> 2] | 0) | 0;
     $width$1 = $width$0$lcssa;
    }
    ___shlim($f, $width$1);
    $146 = HEAP32[$3 >> 2] | 0;
    $147 = HEAP32[$4 >> 2] | 0;
    if ($146 >>> 0 < $147 >>> 0) {
     HEAP32[$3 >> 2] = $146 + 1;
     $152 = $147;
    } else {
     if ((___shgetc($f) | 0) < 0) {
      $alloc$0$lcssa = $alloc$0;
      $matches$0111$lcssa338 = $matches$0111;
      $s$6$ph = $s$1;
      $wcs$7$ph = $wcs$1;
      label = 188;
      break L4;
     }
     $152 = HEAP32[$4 >> 2] | 0;
    }
    if ($152) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    L67 : do switch ($$ | 0) {
    case 105:
     {
      $base$0 = 0;
      label = 164;
      break;
     }
    case 91:
    case 99:
    case 115:
     {
      $156 = ($$ | 0) == 99;
      if (($$ & 239 | 0) == 99) {
       _memset($scanset | 0, -1, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       if (($$ | 0) == 115) {
        HEAP8[$8 >> 0] = 0;
        HEAP8[$7 + 0 >> 0] = 0;
        HEAP8[$7 + 1 >> 0] = 0;
        HEAP8[$7 + 2 >> 0] = 0;
        HEAP8[$7 + 3 >> 0] = 0;
        HEAP8[$7 + 4 >> 0] = 0;
        $p$9 = $p$5;
       } else $p$9 = $p$5;
      } else {
       $160 = $p$5 + 1 | 0;
       $162 = (HEAP8[$160 >> 0] | 0) == 94;
       $invert$0 = $162 & 1;
       $164 = $162 ? $160 : $p$5;
       $p$6 = $162 ? $p$5 + 2 | 0 : $160;
       _memset($scanset | 0, $162 & 1 | 0, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       $166 = HEAP8[$p$6 >> 0] | 0;
       if ($166 << 24 >> 24 == 45) {
        $169 = ($invert$0 ^ 1) & 255;
        HEAP8[$10 >> 0] = $169;
        $$pre$phi223Z2D = $169;
        $p$7$ph = $164 + 2 | 0;
       } else if ($166 << 24 >> 24 == 93) {
        $172 = ($invert$0 ^ 1) & 255;
        HEAP8[$11 >> 0] = $172;
        $$pre$phi223Z2D = $172;
        $p$7$ph = $164 + 2 | 0;
       } else {
        $$pre$phi223Z2D = ($invert$0 ^ 1) & 255;
        $p$7$ph = $p$6;
       }
       $p$7 = $p$7$ph;
       while (1) {
        $173 = HEAP8[$p$7 >> 0] | 0;
        if (!($173 << 24 >> 24)) {
         $alloc$0$lcssa382 = $alloc$0;
         $matches$0111$lcssa340 = $matches$0111;
         $s$1$lcssa368 = $s$1;
         $wcs$1$lcssa375 = $wcs$1;
         label = 187;
         break L4;
        } else if ($173 << 24 >> 24 == 45) {
         $174 = $p$7 + 1 | 0;
         $175 = HEAP8[$174 >> 0] | 0;
         if ($175 << 24 >> 24 == 93 | $175 << 24 >> 24 == 0) {
          $186 = 45;
          $p$8 = $p$7;
         } else {
          $177 = HEAP8[$p$7 + -1 >> 0] | 0;
          if (($177 & 255) < ($175 & 255)) {
           $c$0101 = $177 & 255;
           do {
            $c$0101 = $c$0101 + 1 | 0;
            HEAP8[$scanset + $c$0101 >> 0] = $$pre$phi223Z2D;
            $182 = HEAP8[$174 >> 0] | 0;
           } while (($c$0101 | 0) < ($182 & 255 | 0));
           $$lcssa320 = $182;
           $186 = $$lcssa320;
           $p$8 = $174;
          } else {
           $186 = $175;
           $p$8 = $174;
          }
         }
        } else if ($173 << 24 >> 24 == 93) {
         $p$7$lcssa = $p$7;
         break;
        } else {
         $186 = $173;
         $p$8 = $p$7;
        }
        HEAP8[$scanset + (($186 & 255) + 1) >> 0] = $$pre$phi223Z2D;
        $p$7 = $p$8 + 1 | 0;
       }
       $p$9 = $p$7$lcssa;
      }
      $$8 = $156 ? $width$1 + 1 | 0 : 31;
      $191 = ($$size$0 | 0) == 1;
      $192 = ($alloc$0 | 0) != 0;
      do if ($191) {
       if ($192) {
        $194 = _malloc($$8 << 2) | 0;
        if (!$194) {
         $alloc$0$lcssa = $alloc$0;
         $matches$0111$lcssa338 = $matches$0111;
         $s$6$ph = 0;
         $wcs$7$ph = $194;
         label = 188;
         break L4;
        } else $wcs$2 = $194;
       } else $wcs$2 = $dest$0;
       HEAP32[$st >> 2] = 0;
       HEAP32[$9 >> 2] = 0;
       $i$0$ph = 0;
       $k$0$ph = $$8;
       $wcs$3$ph = $wcs$2;
       L132 : while (1) {
        if (!$wcs$3$ph) {
         while (1) {
          $199 = HEAP32[$3 >> 2] | 0;
          if ($199 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $199 + 1;
           $203 = HEAPU8[$199 >> 0] | 0;
          } else $203 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($203 + 1) >> 0] | 0)) {
           $i$0$ph$lcssa333 = $i$0$ph;
           label = 120;
           break L132;
          }
          HEAP8[$0 >> 0] = $203;
          $208 = _mbrtowc($wc, $0, 1, $st) | 0;
          if (($208 | 0) == -1) {
           $alloc$0$lcssa386 = $alloc$0;
           $matches$0111$lcssa344 = $matches$0111;
           label = 184;
           break L4;
          } else if (($208 | 0) != -2) if ($192 & ($i$0$ph | 0) == ($k$0$ph | 0)) break;
         }
         $i$1$lcssa = $i$0$ph;
        } else {
         if (!$192) {
          $i$0$ph$lcssa = $i$0$ph;
          $wcs$3$ph$lcssa = $wcs$3$ph;
          label = 91;
          break;
         }
         $i$0$ph21$us106 = $i$0$ph;
         do {
          while (1) {
           $214 = HEAP32[$3 >> 2] | 0;
           if ($214 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
            HEAP32[$3 >> 2] = $214 + 1;
            $218 = HEAPU8[$214 >> 0] | 0;
           } else $218 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($218 + 1) >> 0] | 0)) {
            $i$0$ph21$us106$lcssa = $i$0$ph21$us106;
            $wcs$3$ph$lcssa326 = $wcs$3$ph;
            label = 118;
            break L132;
           }
           HEAP8[$0 >> 0] = $218;
           $223 = _mbrtowc($wc, $0, 1, $st) | 0;
           if (($223 | 0) == -1) {
            $alloc$0$lcssa385 = $alloc$0;
            $matches$0111$lcssa343 = $matches$0111;
            $wcs$3$ph$lcssa327 = $wcs$3$ph;
            label = 182;
            break L4;
           } else if (($223 | 0) != -2) break;
          }
          HEAP32[$wcs$3$ph + ($i$0$ph21$us106 << 2) >> 2] = HEAP32[$wc >> 2];
          $i$0$ph21$us106 = $i$0$ph21$us106 + 1 | 0;
         } while (($i$0$ph21$us106 | 0) != ($k$0$ph | 0));
         $i$1$lcssa = $k$0$ph;
        }
        $247 = $k$0$ph << 1 | 1;
        $249 = _realloc($wcs$3$ph, $247 << 2) | 0;
        if (!$249) {
         $alloc$0$lcssa387 = $alloc$0;
         $matches$0111$lcssa345 = $matches$0111;
         $wcs$3$ph$lcssa330 = $wcs$3$ph;
         label = 185;
         break L4;
        }
        $i$0$ph = $i$1$lcssa;
        $k$0$ph = $247;
        $wcs$3$ph = $249;
       }
       if ((label | 0) == 91) {
        label = 0;
        $i$0$ph21 = $i$0$ph$lcssa;
        L166 : while (1) {
         while (1) {
          $230 = HEAP32[$3 >> 2] | 0;
          if ($230 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $230 + 1;
           $238 = HEAPU8[$230 >> 0] | 0;
          } else $238 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($238 + 1) >> 0] | 0)) {
           $i$0$ph21$lcssa336 = $i$0$ph21;
           break L166;
          }
          HEAP8[$0 >> 0] = $238;
          $243 = _mbrtowc($wc, $0, 1, $st) | 0;
          if (($243 | 0) == -1) {
           $matches$0111$lcssa342 = $matches$0111;
           $wcs$3$ph$lcssa$lcssa = $wcs$3$ph$lcssa;
           label = 183;
           break L4;
          } else if (($243 | 0) != -2) break;
         }
         HEAP32[$wcs$3$ph$lcssa + ($i$0$ph21 << 2) >> 2] = HEAP32[$wc >> 2];
         $i$0$ph21 = $i$0$ph21 + 1 | 0;
        }
        $i$0$ph21$lcssa = $i$0$ph21$lcssa336;
        $wcs$3$ph139 = $wcs$3$ph$lcssa;
       } else if ((label | 0) == 118) {
        label = 0;
        $i$0$ph21$lcssa = $i$0$ph21$us106$lcssa;
        $wcs$3$ph139 = $wcs$3$ph$lcssa326;
       } else if ((label | 0) == 120) {
        label = 0;
        $i$0$ph21$lcssa = $i$0$ph$lcssa333;
        $wcs$3$ph139 = 0;
       }
       if (!(_mbsinit($st) | 0)) {
        $alloc$0$lcssa = $alloc$0;
        $matches$0111$lcssa338 = $matches$0111;
        $s$6$ph = 0;
        $wcs$7$ph = $wcs$3$ph139;
        label = 188;
        break L4;
       } else {
        $i$4 = $i$0$ph21$lcssa;
        $s$3 = 0;
        $wcs$4 = $wcs$3$ph139;
       }
      } else {
       if ($192) {
        $253 = _malloc($$8) | 0;
        if (!$253) {
         $alloc$0$lcssa = $alloc$0;
         $matches$0111$lcssa338 = $matches$0111;
         $s$6$ph = 0;
         $wcs$7$ph = 0;
         label = 188;
         break L4;
        }
        $i$2$ph = 0;
        $k$1$ph = $$8;
        $s$2$ph = $253;
        L96 : while (1) {
         $i$2 = $i$2$ph;
         do {
          $255 = HEAP32[$3 >> 2] | 0;
          if ($255 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $255 + 1;
           $263 = HEAPU8[$255 >> 0] | 0;
          } else $263 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($263 + 1) >> 0] | 0)) {
           $i$2$lcssa = $i$2;
           $s$2$ph$lcssa = $s$2$ph;
           break L96;
          }
          HEAP8[$s$2$ph + $i$2 >> 0] = $263;
          $i$2 = $i$2 + 1 | 0;
         } while (($i$2 | 0) != ($k$1$ph | 0));
         $271 = $k$1$ph << 1 | 1;
         $272 = _realloc($s$2$ph, $271) | 0;
         if (!$272) {
          $alloc$0$lcssa383 = $alloc$0;
          $matches$0111$lcssa341 = $matches$0111;
          $s$2$ph$lcssa323 = $s$2$ph;
          label = 186;
          break L4;
         } else {
          $i$2$ph$phi = $k$1$ph;
          $k$1$ph = $271;
          $s$2$ph = $272;
          $i$2$ph = $i$2$ph$phi;
         }
        }
        $i$4 = $i$2$lcssa;
        $s$3 = $s$2$ph$lcssa;
        $wcs$4 = 0;
        break;
       }
       if (!$dest$0) {
        $292 = $152;
        while (1) {
         $290 = HEAP32[$3 >> 2] | 0;
         if ($290 >>> 0 < $292 >>> 0) {
          HEAP32[$3 >> 2] = $290 + 1;
          $298 = HEAPU8[$290 >> 0] | 0;
         } else $298 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($298 + 1) >> 0] | 0)) break;
         $292 = HEAP32[$4 >> 2] | 0;
        }
        $i$4 = 0;
        $s$3 = 0;
        $wcs$4 = 0;
        break;
       } else {
        $277 = $152;
        $i$3 = 0;
        while (1) {
         $275 = HEAP32[$3 >> 2] | 0;
         if ($275 >>> 0 < $277 >>> 0) {
          HEAP32[$3 >> 2] = $275 + 1;
          $283 = HEAPU8[$275 >> 0] | 0;
         } else $283 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($283 + 1) >> 0] | 0)) {
          $i$3$lcssa = $i$3;
          break;
         }
         HEAP8[$dest$0 + $i$3 >> 0] = $283;
         $277 = HEAP32[$4 >> 2] | 0;
         $i$3 = $i$3 + 1 | 0;
        }
        $i$4 = $i$3$lcssa;
        $s$3 = $dest$0;
        $wcs$4 = 0;
        break;
       }
      } while (0);
      $$pre215 = HEAP32[$3 >> 2] | 0;
      if (!(HEAP32[$4 >> 2] | 0)) $307 = $$pre215; else {
       $304 = $$pre215 + -1 | 0;
       HEAP32[$3 >> 2] = $304;
       $307 = $304;
      }
      $311 = $307 - (HEAP32[$6 >> 2] | 0) + (HEAP32[$5 >> 2] | 0) | 0;
      if (!$311) {
       $alloc$0$lcssa381 = $alloc$0;
       $matches$0111$lcssa339 = $matches$0111;
       $s$8$ph = $s$3;
       $wcs$9$ph = $wcs$4;
       label = 191;
       break L4;
      }
      if (!(($311 | 0) == ($width$1 | 0) | $156 ^ 1)) {
       $alloc$0$lcssa381 = $alloc$0;
       $matches$0111$lcssa339 = $matches$0111;
       $s$8$ph = $s$3;
       $wcs$9$ph = $wcs$4;
       label = 191;
       break L4;
      }
      do if ($192) if ($191) {
       HEAP32[$dest$0 >> 2] = $wcs$4;
       break;
      } else {
       HEAP32[$dest$0 >> 2] = $s$3;
       break;
      } while (0);
      if ($156) {
       $p$10 = $p$9;
       $s$4 = $s$3;
       $wcs$5 = $wcs$4;
      } else {
       if ($wcs$4) HEAP32[$wcs$4 + ($i$4 << 2) >> 2] = 0;
       if (!$s$3) {
        $p$10 = $p$9;
        $s$4 = 0;
        $wcs$5 = $wcs$4;
       } else {
        HEAP8[$s$3 + $i$4 >> 0] = 0;
        $p$10 = $p$9;
        $s$4 = $s$3;
        $wcs$5 = $wcs$4;
       }
      }
      break;
     }
    case 120:
    case 88:
    case 112:
     {
      $base$0 = 16;
      label = 164;
      break;
     }
    case 111:
     {
      $base$0 = 8;
      label = 164;
      break;
     }
    case 117:
    case 100:
     {
      $base$0 = 10;
      label = 164;
      break;
     }
    case 71:
    case 103:
    case 70:
    case 102:
    case 69:
    case 101:
    case 65:
    case 97:
     {
      $337 = +___floatscan($f, $$size$0, 0);
      if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
       $alloc$0$lcssa381 = $alloc$0;
       $matches$0111$lcssa339 = $matches$0111;
       $s$8$ph = $s$1;
       $wcs$9$ph = $wcs$1;
       label = 191;
       break L4;
      }
      if (!$dest$0) {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
      } else if (($$size$0 | 0) == 2) {
       HEAPF64[$dest$0 >> 3] = $337;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L67;
      } else if (!$$size$0) {
       HEAPF32[$dest$0 >> 2] = $337;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L67;
      } else if (($$size$0 | 0) == 1) {
       HEAPF64[$dest$0 >> 3] = $337;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L67;
      } else {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L67;
      }
      break;
     }
    default:
     {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     }
    } while (0);
    L204 : do if ((label | 0) == 164) {
     label = 0;
     $318 = ___intscan($f, $base$0, 0, -1, -1) | 0;
     if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
      $alloc$0$lcssa381 = $alloc$0;
      $matches$0111$lcssa339 = $matches$0111;
      $s$8$ph = $s$1;
      $wcs$9$ph = $wcs$1;
      label = 191;
      break L4;
     }
     if (($dest$0 | 0) != 0 & ($$ | 0) == 112) {
      HEAP32[$dest$0 >> 2] = $318;
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
      break;
     }
     if (!$dest$0) {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     } else switch ($$size$0 | 0) {
     case 3:
      {
       $333 = $dest$0;
       HEAP32[$333 >> 2] = $318;
       HEAP32[$333 + 4 >> 2] = tempRet0;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L204;
       break;
      }
     case -2:
      {
       HEAP8[$dest$0 >> 0] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L204;
       break;
      }
     case -1:
      {
       HEAP16[$dest$0 >> 1] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L204;
       break;
      }
     case 0:
      {
       HEAP32[$dest$0 >> 2] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L204;
       break;
      }
     case 1:
      {
       HEAP32[$dest$0 >> 2] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L204;
       break;
      }
     default:
      {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L204;
      }
     }
    } while (0);
    $matches$1 = (($dest$0 | 0) != 0 & 1) + $matches$0111 | 0;
    $p$11 = $p$10;
    $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$1 + (HEAP32[$3 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
    $s$5 = $s$4;
    $wcs$6 = $wcs$5;
    break L6;
   } while (0);
   $47 = $p$0117 + ($43 & 1) | 0;
   ___shlim($f, 0);
   $48 = HEAP32[$3 >> 2] | 0;
   if ($48 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $48 + 1;
    $57 = HEAPU8[$48 >> 0] | 0;
   } else $57 = ___shgetc($f) | 0;
   if (($57 | 0) != (HEAPU8[$47 >> 0] | 0)) {
    $$lcssa366 = $57;
    $matches$0111$lcssa = $matches$0111;
    $s$0109$lcssa = $s$0109;
    $wcs$0110$lcssa = $wcs$0110;
    label = 20;
    break L4;
   }
   $matches$1 = $matches$0111;
   $p$11 = $47;
   $pos$2 = $pos$0116 + 1 | 0;
   $s$5 = $s$0109;
   $wcs$6 = $wcs$0110;
  } else {
   $p$1 = $p$0117;
   while (1) {
    $16 = $p$1 + 1 | 0;
    if (!(_isspace(HEAPU8[$16 >> 0] | 0) | 0)) {
     $p$1$lcssa = $p$1;
     break;
    } else $p$1 = $16;
   }
   ___shlim($f, 0);
   do {
    $21 = HEAP32[$3 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $21 + 1;
     $28 = HEAPU8[$21 >> 0] | 0;
    } else $28 = ___shgetc($f) | 0;
   } while ((_isspace($28) | 0) != 0);
   $$pre220 = HEAP32[$3 >> 2] | 0;
   if (!(HEAP32[$4 >> 2] | 0)) $36 = $$pre220; else {
    $33 = $$pre220 + -1 | 0;
    HEAP32[$3 >> 2] = $33;
    $36 = $33;
   }
   $matches$1 = $matches$0111;
   $p$11 = $p$1$lcssa;
   $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$0116 + $36 - (HEAP32[$6 >> 2] | 0) | 0;
   $s$5 = $s$0109;
   $wcs$6 = $wcs$0110;
  } while (0);
  $p$0117 = $p$11 + 1 | 0;
  $13 = HEAP8[$p$0117 >> 0] | 0;
  if (!($13 << 24 >> 24)) {
   $matches$1$lcssa = $matches$1;
   label = 194;
   break;
  } else {
   $matches$0111 = $matches$1;
   $pos$0116 = $pos$2;
   $s$0109 = $s$5;
   $wcs$0110 = $wcs$6;
  }
 }
 switch (label | 0) {
 case 20:
  {
   if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (($matches$0111$lcssa | 0) != 0 | ($$lcssa366 | 0) > -1) {
    $matches$3 = $matches$0111$lcssa;
    STACKTOP = sp;
    return $matches$3 | 0;
   } else {
    $alloc$1 = 0;
    $s$7 = $s$0109$lcssa;
    $wcs$8 = $wcs$0110$lcssa;
    label = 190;
   }
   break;
  }
 case 182:
  {
   $alloc$0204 = $alloc$0$lcssa385;
   $matches$0111347 = $matches$0111$lcssa343;
   $s$6 = 0;
   $wcs$7 = $wcs$3$ph$lcssa327;
   label = 189;
   break;
  }
 case 183:
  {
   $alloc$0204 = 0;
   $matches$0111347 = $matches$0111$lcssa342;
   $s$6 = 0;
   $wcs$7 = $wcs$3$ph$lcssa$lcssa;
   label = 189;
   break;
  }
 case 184:
  {
   $alloc$0204 = $alloc$0$lcssa386;
   $matches$0111347 = $matches$0111$lcssa344;
   $s$6 = 0;
   $wcs$7 = 0;
   label = 189;
   break;
  }
 case 185:
  {
   $alloc$0204 = $alloc$0$lcssa387;
   $matches$0111347 = $matches$0111$lcssa345;
   $s$6 = 0;
   $wcs$7 = $wcs$3$ph$lcssa330;
   label = 189;
   break;
  }
 case 186:
  {
   $alloc$0204 = $alloc$0$lcssa383;
   $matches$0111347 = $matches$0111$lcssa341;
   $s$6 = $s$2$ph$lcssa323;
   $wcs$7 = 0;
   label = 189;
   break;
  }
 case 187:
  {
   $alloc$0204 = $alloc$0$lcssa382;
   $matches$0111347 = $matches$0111$lcssa340;
   $s$6 = $s$1$lcssa368;
   $wcs$7 = $wcs$1$lcssa375;
   label = 189;
   break;
  }
 case 188:
  {
   $alloc$0204 = $alloc$0$lcssa;
   $matches$0111347 = $matches$0111$lcssa338;
   $s$6 = $s$6$ph;
   $wcs$7 = $wcs$7$ph;
   label = 189;
   break;
  }
 case 191:
  {
   $alloc$2 = $alloc$0$lcssa381;
   $matches$2 = $matches$0111$lcssa339;
   $s$8 = $s$8$ph;
   $wcs$9 = $wcs$9$ph;
   break;
  }
 case 194:
  {
   $matches$3 = $matches$1$lcssa;
   STACKTOP = sp;
   return $matches$3 | 0;
  }
 }
 if ((label | 0) == 189) if (!$matches$0111347) {
  $alloc$1 = $alloc$0204;
  $s$7 = $s$6;
  $wcs$8 = $wcs$7;
  label = 190;
 } else {
  $alloc$2 = $alloc$0204;
  $matches$2 = $matches$0111347;
  $s$8 = $s$6;
  $wcs$9 = $wcs$7;
 }
 if ((label | 0) == 190) {
  $alloc$2 = $alloc$1;
  $matches$2 = -1;
  $s$8 = $s$7;
  $wcs$9 = $wcs$8;
 }
 if (!$alloc$2) {
  $matches$3 = $matches$2;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;
 return $matches$3 | 0;
}

function __ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $msg) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $msg = $msg | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$lcssa = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$cast$i$i$i$i$lcssa = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i3032$i = 0, $$idx5$val = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $121 = 0, $122 = 0, $13 = 0, $130 = 0, $131 = 0, $139 = 0, $140 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $147 = 0, $148 = 0, $15 = 0, $154 = 0, $160 = 0, $164 = 0, $166 = 0, $168 = 0, $169 = 0, $17 = 0, $172 = 0, $173 = 0, $18 = 0, $180 = 0, $181 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $210 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $227 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $242 = 0, $244 = 0, $245 = 0, $247 = 0, $248 = 0, $249 = 0, $253 = 0, $254 = 0, $256 = 0, $257 = 0, $259 = 0, $261 = 0, $262 = 0, $263 = 0, $265 = 0, $268 = 0, $270 = 0, $271 = 0, $272 = 0, $274 = 0, $275 = 0, $277 = 0, $278 = 0, $28 = 0, $282 = 0, $283 = 0, $285 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $293 = 0, $294 = 0, $296 = 0, $298 = 0, $299 = 0, $3 = 0, $303 = 0, $304 = 0, $306 = 0, $308 = 0, $309 = 0, $31 = 0, $311 = 0, $312 = 0, $316 = 0, $317 = 0, $319 = 0, $32 = 0, $321 = 0, $322 = 0, $326 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $57 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $68 = 0, $7 = 0, $77 = 0, $8 = 0, $80 = 0, $82 = 0, $85 = 0, $9 = 0, $92 = 0, $95 = 0, $eh$lpad$body$i$index6Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index22Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body10$index16Z2D = 0, $eh$lpad$body10$indexZ2D = 0, $eh$lpad$body15$index27Z2D = 0, $eh$lpad$body15$indexZ2D = 0, $eh$lpad$body23$index33Z2D = 0, $eh$lpad$body23$indexZ2D = 0, $i$0 = 0, $i$0$in$i = 0, $i$046 = 0, $i$047 = 0, $name$i = 0, $stack_trace = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $name$i = sp + 216 | 0;
 $0 = sp + 204 | 0;
 $1 = sp + 192 | 0;
 $2 = sp + 168 | 0;
 $3 = sp + 152 | 0;
 $4 = sp + 140 | 0;
 $stack_trace = sp + 128 | 0;
 $5 = sp + 88 | 0;
 $6 = sp + 76 | 0;
 $7 = sp + 64 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 12 | 0;
 $10 = sp;
 HEAP32[$stack_trace >> 2] = 0;
 $11 = $stack_trace + 4 | 0;
 HEAP32[$11 >> 2] = 0;
 $12 = $stack_trace + 8 | 0;
 HEAP32[$12 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, 46680, 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($13 & 1) label = 101; else {
  __THREW__ = 0;
  invoke_vii(40, $5 | 0, $loc | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  do if ($15 & 1) {
   $235 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index22Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $235;
   label = 104;
  } else {
   $17 = $5 + 12 | 0;
   $18 = $loc + 12 | 0;
   HEAP32[$17 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   HEAP32[$17 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$17 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$17 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   $19 = $5 + 28 | 0;
   __THREW__ = 0;
   invoke_vii(40, $19 | 0, $6 | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   if ($20 & 1) {
    $22 = ___cxa_find_matching_catch() | 0;
    $23 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $eh$lpad$body$index22Z2D = $23;
    $eh$lpad$body$indexZ2D = $22;
    label = 104;
    break;
   }
   $24 = HEAP32[$11 >> 2] | 0;
   if ($24 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    if (!$24) $31 = 0; else {
     HEAP32[$24 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$24 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$24 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     $28 = $24 + 12 | 0;
     HEAP32[$28 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$28 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$28 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$28 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     $29 = $24 + 28 | 0;
     HEAP32[$29 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
     HEAP32[$29 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
     HEAP32[$29 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
     HEAP32[$19 + 0 >> 2] = 0;
     HEAP32[$19 + 4 >> 2] = 0;
     HEAP32[$19 + 8 >> 2] = 0;
     $31 = HEAP32[$11 >> 2] | 0;
    }
    HEAP32[$11 >> 2] = $31 + 40;
   } else {
    __THREW__ = 0;
    invoke_vii(67, $stack_trace | 0, $5 | 0);
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     $237 = ___cxa_find_matching_catch() | 0;
     $238 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$0 = $237;
     $$01 = $238;
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $$idx = $this + 12 | 0;
   $$idx$val = HEAP32[$$idx >> 2] | 0;
   $i$046 = (((HEAP32[$this + 16 >> 2] | 0) - $$idx$val | 0) / 144 | 0) + -1 | 0;
   L17 : do if (($i$046 | 0) > -1) {
    $39 = $8 + 12 | 0;
    $40 = $8 + 28 | 0;
    $41 = $name$i + 1 | 0;
    $42 = $2 + 12 | 0;
    $43 = $name$i + 8 | 0;
    $44 = $name$i + 4 | 0;
    $45 = $2 + 16 | 0;
    $$idx5$val = $$idx$val;
    $i$047 = $i$046;
    L19 : while (1) {
     if ((HEAP32[$$idx5$val + ($i$047 * 144 | 0) >> 2] | 0) == 5) {
      $49 = HEAP32[$$idx5$val + ($i$047 * 144 | 0) + 116 >> 2] | 0;
      if ($49) {
       $52 = HEAP32[$stack_trace >> 2] | 0;
       $57 = (((HEAP32[$11 >> 2] | 0) - $52 | 0) / 40 | 0) + -1 | 0;
       HEAP32[$name$i + 0 >> 2] = 0;
       HEAP32[$name$i + 4 >> 2] = 0;
       HEAP32[$name$i + 8 >> 2] = 0;
       $i$0$in$i = $i$047;
       do {
        $i$0$in$i = $i$0$in$i + -1 | 0;
        if (($i$0$in$i | 0) <= -1) break;
        $$idx$val$i = HEAP32[$$idx >> 2] | 0;
        $$idx$val$i$i = HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) + 128 >> 2] | 0;
        $59 = $$idx$val$i + ($i$0$in$i * 144 | 0) + 132 | 0;
        if (($$idx$val$i$i | 0) != ($59 | 0)) {
         $$idx$val$i3032$i = $$idx$val$i$i;
         while (1) {
          $62 = HEAP32[$$idx$val$i3032$i + 20 >> 2] | 0;
          do if (HEAP8[$62 + 5 >> 0] | 0) {
           if (!(HEAP32[$62 + 8 >> 2] & 16)) break;
           if ((HEAP32[$62 + 16 >> 2] | 0) != ($49 | 0)) break;
           __THREW__ = 0;
           invoke_iii(20, $name$i | 0, HEAP32[$$idx$val$i3032$i + 16 >> 2] | 0) | 0;
           $77 = __THREW__;
           __THREW__ = 0;
           if ($77 & 1) {
            label = 21;
            break L19;
           }
          } while (0);
          $80 = HEAP32[$$idx$val$i3032$i + 4 >> 2] | 0;
          if (!$80) {
           $$0$i$i$i$i = $$idx$val$i3032$i;
           while (1) {
            $85 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
            if ((HEAP32[$85 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
             $$cast$i$i$i$i$lcssa = $85;
             break;
            } else $$0$i$i$i$i = $85;
           }
           $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
          } else {
           $$0$i$i$i$i$i = $80;
           while (1) {
            $82 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
            if (!$82) {
             $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
             break;
            } else $$0$i$i$i$i$i = $82;
           }
           $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
          }
          if (($$01$i$i$i$i | 0) == ($59 | 0)) break; else $$idx$val$i3032$i = $$01$i$i$i$i;
         }
        }
       } while ((HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) >> 2] | 0) != 5);
       if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($name$i, 46680) | 0)) {
        __THREW__ = 0;
        invoke_iii(19, $name$i | 0, 36992) | 0;
        $92 = __THREW__;
        __THREW__ = 0;
        if ($92 & 1) {
         label = 22;
         break;
        }
       }
       do if (!(___dynamic_cast($49, 36776, 36784, 0) | 0)) {
        $118 = ___dynamic_cast($49, 36776, 36936, 0) | 0;
        if ($118) {
         $121 = HEAP32[$118 + 24 >> 2] | 0;
         HEAP32[$1 + 0 >> 2] = 0;
         HEAP32[$1 + 4 >> 2] = 0;
         HEAP32[$1 + 8 >> 2] = 0;
         $122 = HEAP8[$121 >> 0] | 0;
         if (!($122 & 1)) $130 = ($122 & 255) >>> 1; else $130 = HEAP32[$121 + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(13, $1 | 0, 37032, 7, $130 + 7 | 0);
         $131 = __THREW__;
         __THREW__ = 0;
         if ($131 & 1) {
          label = 58;
          break L19;
         }
         if (!(HEAP8[$121 >> 0] & 1)) $139 = $121 + 1 | 0; else $139 = HEAP32[$121 + 8 >> 2] | 0;
         __THREW__ = 0;
         invoke_iiii(31, $1 | 0, $139 | 0, $130 | 0) | 0;
         $140 = __THREW__;
         __THREW__ = 0;
         if ($140 & 1) {
          label = 58;
          break L19;
         }
         __THREW__ = 0;
         $144 = invoke_iii(27, $1 | 0, 37024) | 0;
         $145 = __THREW__;
         __THREW__ = 0;
         if ($145 & 1) {
          label = 61;
          break L19;
         };
         HEAP32[$7 + 0 >> 2] = HEAP32[$144 + 0 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$144 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$144 + 8 >> 2];
         HEAP32[$144 + 0 >> 2] = 0;
         HEAP32[$144 + 4 >> 2] = 0;
         HEAP32[$144 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         break;
        }
        if (HEAP32[$49 + 40 >> 2] | 0) {
         HEAP32[$4 + 0 >> 2] = 0;
         HEAP32[$4 + 4 >> 2] = 0;
         HEAP32[$4 + 8 >> 2] = 0;
         $196 = HEAP8[$name$i >> 0] | 0;
         if (!($196 & 1)) $203 = ($196 & 255) >>> 1; else $203 = HEAP32[$44 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(13, $4 | 0, 37064, 10, $203 + 10 | 0);
         $204 = __THREW__;
         __THREW__ = 0;
         if ($204 & 1) {
          label = 89;
          break L19;
         }
         __THREW__ = 0;
         invoke_iiii(31, $4 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $203 | 0) | 0;
         $210 = __THREW__;
         __THREW__ = 0;
         if ($210 & 1) {
          label = 89;
          break L19;
         }
         __THREW__ = 0;
         $214 = invoke_iii(27, $4 | 0, 37024) | 0;
         $215 = __THREW__;
         __THREW__ = 0;
         if ($215 & 1) {
          label = 92;
          break L19;
         };
         HEAP32[$7 + 0 >> 2] = HEAP32[$214 + 0 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$214 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$214 + 8 >> 2];
         HEAP32[$214 + 0 >> 2] = 0;
         HEAP32[$214 + 4 >> 2] = 0;
         HEAP32[$214 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
         break;
        }
        __THREW__ = 0;
        invoke_vii(49, $2 | 0, HEAP32[$49 + 44 >> 2] | 0);
        $154 = __THREW__;
        __THREW__ = 0;
        if ($154 & 1) {
         label = 22;
         break L19;
        }
        if (!(HEAP8[$name$i >> 0] & 1)) {
         HEAP8[$41 >> 0] = 0;
         HEAP8[$name$i >> 0] = 0;
        } else {
         HEAP8[HEAP32[$43 >> 2] >> 0] = 0;
         HEAP32[$44 >> 2] = 0;
        }
        __THREW__ = 0;
        invoke_vii(45, $name$i | 0, 0);
        $160 = __THREW__;
        __THREW__ = 0;
        if ($160 & 1) {
         label = 68;
         break L19;
        };
        HEAP32[$name$i + 0 >> 2] = HEAP32[$2 + 0 >> 2];
        HEAP32[$name$i + 4 >> 2] = HEAP32[$2 + 4 >> 2];
        HEAP32[$name$i + 8 >> 2] = HEAP32[$2 + 8 >> 2];
        HEAP32[$2 + 0 >> 2] = 0;
        HEAP32[$2 + 4 >> 2] = 0;
        HEAP32[$2 + 8 >> 2] = 0;
        $164 = HEAP32[$42 >> 2] | 0;
        if ($164) {
         $166 = HEAP32[$45 >> 2] | 0;
         if (($166 | 0) == ($164 | 0)) $172 = $164; else {
          $169 = $166;
          do {
           $168 = $169 + -12 | 0;
           HEAP32[$45 >> 2] = $168;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($168);
           $169 = HEAP32[$45 >> 2] | 0;
          } while (($169 | 0) != ($164 | 0));
          $172 = HEAP32[$42 >> 2] | 0;
         }
         __ZdlPv($172);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        HEAP32[$3 + 0 >> 2] = 0;
        HEAP32[$3 + 4 >> 2] = 0;
        HEAP32[$3 + 8 >> 2] = 0;
        $173 = HEAP8[$name$i >> 0] | 0;
        if (!($173 & 1)) $180 = ($173 & 255) >>> 1; else $180 = HEAP32[$44 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(13, $3 | 0, 37040, 18, $180 + 18 | 0);
        $181 = __THREW__;
        __THREW__ = 0;
        if ($181 & 1) {
         label = 80;
         break L19;
        }
        __THREW__ = 0;
        invoke_iiii(31, $3 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $180 | 0) | 0;
        $187 = __THREW__;
        __THREW__ = 0;
        if ($187 & 1) {
         label = 80;
         break L19;
        }
        __THREW__ = 0;
        $191 = invoke_iii(27, $3 | 0, 37024) | 0;
        $192 = __THREW__;
        __THREW__ = 0;
        if ($192 & 1) {
         label = 83;
         break L19;
        };
        HEAP32[$7 + 0 >> 2] = HEAP32[$191 + 0 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$191 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$191 + 8 >> 2];
        HEAP32[$191 + 0 >> 2] = 0;
        HEAP32[$191 + 4 >> 2] = 0;
        HEAP32[$191 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
       } else {
        HEAP32[$0 + 0 >> 2] = 0;
        HEAP32[$0 + 4 >> 2] = 0;
        HEAP32[$0 + 8 >> 2] = 0;
        $95 = HEAP8[$name$i >> 0] | 0;
        if (!($95 & 1)) $102 = ($95 & 255) >>> 1; else $102 = HEAP32[$44 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(13, $0 | 0, 37008, 8, $102 + 8 | 0);
        $103 = __THREW__;
        __THREW__ = 0;
        if ($103 & 1) {
         label = 45;
         break L19;
        }
        __THREW__ = 0;
        invoke_iiii(31, $0 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $102 | 0) | 0;
        $109 = __THREW__;
        __THREW__ = 0;
        if ($109 & 1) {
         label = 45;
         break L19;
        }
        __THREW__ = 0;
        $113 = invoke_iii(27, $0 | 0, 37024) | 0;
        $114 = __THREW__;
        __THREW__ = 0;
        if ($114 & 1) {
         label = 48;
         break L19;
        };
        HEAP32[$7 + 0 >> 2] = HEAP32[$113 + 0 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$113 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$113 + 8 >> 2];
        HEAP32[$113 + 0 >> 2] = 0;
        HEAP32[$113 + 4 >> 2] = 0;
        HEAP32[$113 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name$i);
       $219 = $52 + ($57 * 40 | 0) + 28 | 0;
       if (!(HEAP8[$219 >> 0] & 1)) {
        HEAP8[$219 + 1 >> 0] = 0;
        HEAP8[$219 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$52 + ($57 * 40 | 0) + 36 >> 2] >> 0] = 0;
        HEAP32[$52 + ($57 * 40 | 0) + 32 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $219 | 0, 0);
       $227 = __THREW__;
       __THREW__ = 0;
       if ($227 & 1) {
        label = 98;
        break;
       };
       HEAP32[$219 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
       HEAP32[$219 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
       HEAP32[$219 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
       HEAP32[$7 + 0 >> 2] = 0;
       HEAP32[$7 + 4 >> 2] = 0;
       HEAP32[$7 + 8 >> 2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      }
      __THREW__ = 0;
      invoke_viii(3, $9 | 0, 46680, 0);
      $239 = __THREW__;
      __THREW__ = 0;
      if ($239 & 1) {
       label = 100;
       break;
      }
      __THREW__ = 0;
      invoke_vii(40, $8 | 0, $$idx5$val + ($i$047 * 144 | 0) + 8 | 0);
      $242 = __THREW__;
      __THREW__ = 0;
      if ($242 & 1) {
       label = 117;
       break;
      }
      $244 = $$idx5$val + ($i$047 * 144 | 0) + 20 | 0;
      HEAP32[$39 + 0 >> 2] = HEAP32[$244 + 0 >> 2];
      HEAP32[$39 + 4 >> 2] = HEAP32[$244 + 4 >> 2];
      HEAP32[$39 + 8 >> 2] = HEAP32[$244 + 8 >> 2];
      HEAP32[$39 + 12 >> 2] = HEAP32[$244 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $40 | 0, $9 | 0);
      $245 = __THREW__;
      __THREW__ = 0;
      if ($245 & 1) {
       label = 110;
       break;
      }
      $249 = HEAP32[$11 >> 2] | 0;
      if ($249 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
       if (!$249) $256 = 0; else {
        HEAP32[$249 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
        HEAP32[$249 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
        HEAP32[$249 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
        HEAP32[$8 + 0 >> 2] = 0;
        HEAP32[$8 + 4 >> 2] = 0;
        HEAP32[$8 + 8 >> 2] = 0;
        $253 = $249 + 12 | 0;
        HEAP32[$253 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
        HEAP32[$253 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
        HEAP32[$253 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
        HEAP32[$253 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
        $254 = $249 + 28 | 0;
        HEAP32[$254 + 0 >> 2] = HEAP32[$40 + 0 >> 2];
        HEAP32[$254 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
        HEAP32[$254 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
        HEAP32[$40 + 0 >> 2] = 0;
        HEAP32[$40 + 4 >> 2] = 0;
        HEAP32[$40 + 8 >> 2] = 0;
        $256 = HEAP32[$11 >> 2] | 0;
       }
       HEAP32[$11 >> 2] = $256 + 40;
      } else {
       __THREW__ = 0;
       invoke_vii(67, $stack_trace | 0, $8 | 0);
       $257 = __THREW__;
       __THREW__ = 0;
       if ($257 & 1) {
        label = 119;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     }
     $i$0 = $i$047 + -1 | 0;
     if (($i$0 | 0) <= -1) {
      label = 121;
      break;
     }
     $$idx5$val = HEAP32[$$idx >> 2] | 0;
     $i$047 = $i$0;
    }
    switch (label | 0) {
    case 21:
     {
      $66 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $66;
      label = 23;
      break;
     }
    case 22:
     {
      $68 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $68;
      label = 23;
      break;
     }
    case 45:
     {
      $111 = ___cxa_find_matching_catch() | 0;
      $112 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $eh$lpad$body$i$index6Z2D = $112;
      $eh$lpad$body$i$indexZ2D = $111;
      label = 23;
      break;
     }
    case 48:
     {
      $116 = ___cxa_find_matching_catch() | 0;
      $117 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $$0$i = $116;
      $$01$i = $117;
      label = 93;
      break;
     }
    case 58:
     {
      $142 = ___cxa_find_matching_catch() | 0;
      $143 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $eh$lpad$body$i$index6Z2D = $143;
      $eh$lpad$body$i$indexZ2D = $142;
      label = 23;
      break;
     }
    case 61:
     {
      $147 = ___cxa_find_matching_catch() | 0;
      $148 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$0$i = $147;
      $$01$i = $148;
      label = 93;
      break;
     }
    case 68:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 80:
     {
      $189 = ___cxa_find_matching_catch() | 0;
      $190 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $eh$lpad$body$i$index6Z2D = $190;
      $eh$lpad$body$i$indexZ2D = $189;
      label = 23;
      break;
     }
    case 83:
     {
      $194 = ___cxa_find_matching_catch() | 0;
      $195 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$0$i = $194;
      $$01$i = $195;
      label = 93;
      break;
     }
    case 89:
     {
      $212 = ___cxa_find_matching_catch() | 0;
      $213 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $eh$lpad$body$i$index6Z2D = $213;
      $eh$lpad$body$i$indexZ2D = $212;
      label = 23;
      break;
     }
    case 92:
     {
      $217 = ___cxa_find_matching_catch() | 0;
      $218 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$0$i = $217;
      $$01$i = $218;
      label = 93;
      break;
     }
    case 98:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 100:
     {
      $231 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body10$index16Z2D = tempRet0;
      $eh$lpad$body10$indexZ2D = $231;
      label = 102;
      break L1;
      break;
     }
    case 110:
     {
      $247 = ___cxa_find_matching_catch() | 0;
      $248 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $eh$lpad$body15$index27Z2D = $248;
      $eh$lpad$body15$indexZ2D = $247;
      label = 118;
      break;
     }
    case 117:
     {
      $259 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body15$index27Z2D = tempRet0;
      $eh$lpad$body15$indexZ2D = $259;
      label = 118;
      break;
     }
    case 119:
     {
      $261 = ___cxa_find_matching_catch() | 0;
      $262 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $$1 = $261;
      $$12 = $262;
      label = 120;
      break;
     }
    case 121:
     {
      break L17;
      break;
     }
    }
    if ((label | 0) == 23) {
     $$0$i = $eh$lpad$body$i$indexZ2D;
     $$01$i = $eh$lpad$body$i$index6Z2D;
     label = 93;
    } else if ((label | 0) == 118) {
     $$1 = $eh$lpad$body15$indexZ2D;
     $$12 = $eh$lpad$body15$index27Z2D;
     label = 120;
    }
    if ((label | 0) == 93) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name$i);
     $eh$lpad$body10$index16Z2D = $$01$i;
     $eh$lpad$body10$indexZ2D = $$0$i;
     label = 102;
     break L1;
    } else if ((label | 0) == 120) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     $$2 = $$1;
     $$23 = $$12;
     break L1;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(68, $10 | 0, $stack_trace | 0);
   $263 = __THREW__;
   __THREW__ = 0;
   if ($263 & 1) {
    label = 101;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(68, $agg$result | 0, $10 | 0);
   $265 = __THREW__;
   __THREW__ = 0;
   do if ($265 & 1) {
    $304 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body23$index33Z2D = tempRet0;
    $eh$lpad$body23$indexZ2D = $304;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $agg$result + 12 | 0, $msg | 0);
    $268 = __THREW__;
    __THREW__ = 0;
    if ($268 & 1) {
     $270 = ___cxa_find_matching_catch() | 0;
     $271 = tempRet0;
     $272 = HEAP32[$agg$result >> 2] | 0;
     if (!$272) {
      $eh$lpad$body23$index33Z2D = $271;
      $eh$lpad$body23$indexZ2D = $270;
      break;
     }
     $274 = $agg$result + 4 | 0;
     $275 = HEAP32[$274 >> 2] | 0;
     if (($275 | 0) == ($272 | 0)) $282 = $272; else {
      $278 = $275;
      do {
       $277 = $278 + -40 | 0;
       HEAP32[$274 >> 2] = $277;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($278 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($277);
       $278 = HEAP32[$274 >> 2] | 0;
      } while (($278 | 0) != ($272 | 0));
      $282 = HEAP32[$agg$result >> 2] | 0;
     }
     __ZdlPv($282);
     $eh$lpad$body23$index33Z2D = $271;
     $eh$lpad$body23$indexZ2D = $270;
     break;
    }
    $283 = HEAP32[$10 >> 2] | 0;
    if ($283) {
     $285 = $10 + 4 | 0;
     $286 = HEAP32[$285 >> 2] | 0;
     if (($286 | 0) == ($283 | 0)) $293 = $283; else {
      $289 = $286;
      do {
       $288 = $289 + -40 | 0;
       HEAP32[$285 >> 2] = $288;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($289 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($288);
       $289 = HEAP32[$285 >> 2] | 0;
      } while (($289 | 0) != ($283 | 0));
      $293 = HEAP32[$10 >> 2] | 0;
     }
     __ZdlPv($293);
    }
    $294 = HEAP32[$stack_trace >> 2] | 0;
    if (!$294) {
     STACKTOP = sp;
     return;
    }
    $296 = HEAP32[$11 >> 2] | 0;
    if (($296 | 0) == ($294 | 0)) $303 = $294; else {
     $299 = $296;
     do {
      $298 = $299 + -40 | 0;
      HEAP32[$11 >> 2] = $298;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($299 + -12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($298);
      $299 = HEAP32[$11 >> 2] | 0;
     } while (($299 | 0) != ($294 | 0));
     $303 = HEAP32[$stack_trace >> 2] | 0;
    }
    __ZdlPv($303);
    STACKTOP = sp;
    return;
   } while (0);
   $306 = HEAP32[$10 >> 2] | 0;
   if (!$306) {
    $$2 = $eh$lpad$body23$indexZ2D;
    $$23 = $eh$lpad$body23$index33Z2D;
    break L1;
   }
   $308 = $10 + 4 | 0;
   $309 = HEAP32[$308 >> 2] | 0;
   if (($309 | 0) == ($306 | 0)) $316 = $306; else {
    $312 = $309;
    do {
     $311 = $312 + -40 | 0;
     HEAP32[$308 >> 2] = $311;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($312 + -12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($311);
     $312 = HEAP32[$308 >> 2] | 0;
    } while (($312 | 0) != ($306 | 0));
    $316 = HEAP32[$10 >> 2] | 0;
   }
   __ZdlPv($316);
   $$2 = $eh$lpad$body23$indexZ2D;
   $$23 = $eh$lpad$body23$index33Z2D;
   break L1;
  } while (0);
  if ((label | 0) == 104) {
   $$0 = $eh$lpad$body$indexZ2D;
   $$01 = $eh$lpad$body$index22Z2D;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $$2 = $$0;
  $$23 = $$01;
 } while (0);
 if ((label | 0) == 101) {
  $233 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body10$index16Z2D = tempRet0;
  $eh$lpad$body10$indexZ2D = $233;
  label = 102;
 }
 if ((label | 0) == 102) {
  $$2 = $eh$lpad$body10$indexZ2D;
  $$23 = $eh$lpad$body10$index16Z2D;
 }
 $317 = HEAP32[$stack_trace >> 2] | 0;
 if (!$317) ___resumeException($$2 | 0);
 $319 = HEAP32[$11 >> 2] | 0;
 if (($319 | 0) == ($317 | 0)) $326 = $317; else {
  $322 = $319;
  do {
   $321 = $322 + -40 | 0;
   HEAP32[$11 >> 2] = $321;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($322 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($321);
   $322 = HEAP32[$11 >> 2] | 0;
  } while (($322 | 0) != ($317 | 0));
  $326 = HEAP32[$stack_trace >> 2] | 0;
 }
 __ZdlPv($326);
 ___resumeException($$2 | 0);
}

function __Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i7$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i60 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $$4 = 0, $$45 = 0, $$5 = 0, $$56 = 0, $$6 = 0, $$67 = 0, $$7 = 0, $$78 = 0, $$byval_copy = 0, $$cast$i$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa149 = 0, $$lcssa150 = 0, $$lcssa151 = 0, $$lcssa154 = 0, $$lcssa157 = 0, $$lcssa159 = 0, $$lcssa161 = 0, $$lcssa163 = 0, $$lcssa165 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $118 = 0, $119 = 0, $12 = 0, $122 = 0, $124 = 0, $125 = 0, $128 = 0, $129 = 0, $13 = 0, $132 = 0, $136 = 0, $137 = 0, $138 = 0, $140 = 0, $141 = 0, $147 = 0, $149 = 0, $15 = 0, $150 = 0, $156 = 0, $16 = 0, $161 = 0, $162 = 0, $164 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $174 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $196 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $204 = 0, $21 = 0, $211 = 0, $213 = 0, $215 = 0, $216 = 0, $22 = 0, $222 = 0, $224 = 0, $225 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $236 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $245 = 0, $246 = 0, $248 = 0, $25 = 0, $251 = 0, $253 = 0, $256 = 0, $257 = 0, $26 = 0, $260 = 0, $261 = 0, $267 = 0, $269 = 0, $27 = 0, $272 = 0, $277 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $286 = 0, $287 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $297 = 0, $298 = 0, $3 = 0, $30 = 0, $302 = 0, $303 = 0, $305 = 0, $309 = 0, $312 = 0, $317 = 0, $318 = 0, $32 = 0, $320 = 0, $323 = 0, $327 = 0, $328 = 0, $33 = 0, $330 = 0, $332 = 0, $337 = 0, $338 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $351 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $84 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $99 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa147 = 0, $__nd$0$i$i$lcssa148 = 0, $__parent$i$i$i$i$i = 0, $__r$0$i = 0, $c$0104 = 0, $eh$lpad$body15$index12Z2D = 0, $eh$lpad$body15$indexZ2D = 0, $eh$lpad$body54$index17Z2D = 0, $eh$lpad$body54$indexZ2D = 0, $eh$lpad$body57$index7Z2D = 0, $eh$lpad$body57$indexZ2D = 0, $l = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $params = 0, $std_binds = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 232 | 0;
 $__parent$i$i$i$i$i = sp + 228 | 0;
 $0 = sp + 224 | 0;
 $1 = sp + 212 | 0;
 $l = sp + 184 | 0;
 $2 = sp + 160 | 0;
 $params = sp + 148 | 0;
 $3 = sp + 144 | 0;
 $4 = sp + 116 | 0;
 $5 = sp + 104 | 0;
 $6 = sp + 76 | 0;
 $7 = sp + 64 | 0;
 $std_binds = sp + 52 | 0;
 $8 = sp + 40 | 0;
 $9 = sp + 12 | 0;
 $10 = sp;
 $11 = __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 1472, 11);
 __THREW__ = 0;
 $12 = invoke_iiii(26, $alloc | 0, $1 | 0, 1488) | 0;
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $49 = ___cxa_find_matching_catch() | 0;
  $50 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $$7 = $49;
  $$78 = $50;
  ___resumeException($$7 | 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$l + 0 >> 2] = 0;
 HEAP32[$l + 4 >> 2] = 0;
 HEAP32[$l + 8 >> 2] = 0;
 HEAP32[$l + 12 >> 2] = 0;
 HEAP32[$l + 16 >> 2] = 0;
 HEAP32[$l + 20 >> 2] = 0;
 HEAP32[$l + 24 >> 2] = 0;
 $15 = $12 + 48 | 0;
 $16 = $params + 4 | 0;
 $17 = $params + 8 | 0;
 $18 = $2 + 12 | 0;
 $19 = $2 + 16 | 0;
 $20 = $4 + 12 | 0;
 $21 = $l + 12 | 0;
 $22 = $6 + 12 | 0;
 $23 = $7 + 4 | 0;
 $24 = $7 + 8 | 0;
 $25 = $alloc + 16 | 0;
 $26 = $alloc + 20 | 0;
 $27 = $12 + 56 | 0;
 $28 = $2 + 12 | 0;
 $29 = $alloc + 12 | 0;
 $c$0104 = 0;
 L5 : while (1) {
  __THREW__ = 0;
  invoke_vii(49, $2 | 0, $c$0104 | 0);
  $30 = __THREW__;
  __THREW__ = 0;
  if ($30 & 1) {
   label = 14;
   break;
  }
  HEAP32[$params >> 2] = 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$17 >> 2] = 0;
  $32 = HEAP32[$18 >> 2] | 0;
  $33 = HEAP32[$19 >> 2] | 0;
  if (($32 | 0) != ($33 | 0)) {
   $35 = $32;
   do {
    __THREW__ = 0;
    $36 = invoke_iii(23, $alloc | 0, $35 | 0) | 0;
    $37 = __THREW__;
    __THREW__ = 0;
    if ($37 & 1) {
     label = 15;
     break L5;
    }
    HEAP32[$3 >> 2] = $36;
    $39 = HEAP32[$16 >> 2] | 0;
    if ($39 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
     if (!$39) $44 = 0; else {
      HEAP32[$39 >> 2] = $36;
      $44 = HEAP32[$16 >> 2] | 0;
     }
     HEAP32[$16 >> 2] = $44 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(50, $params | 0, $3 | 0);
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 15;
      break L5;
     }
    }
    $35 = $35 + 12 | 0;
   } while (($35 | 0) != ($33 | 0));
  }
  __THREW__ = 0;
  invoke_vii(40, $4 | 0, $l | 0);
  $57 = __THREW__;
  __THREW__ = 0;
  if ($57 & 1) {
   label = 16;
   break;
  };
  HEAP32[$20 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
  HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
  HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
  HEAP32[$20 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
  __THREW__ = 0;
  invoke_vii(40, $5 | 0, $2 | 0);
  $59 = __THREW__;
  __THREW__ = 0;
  if ($59 & 1) {
   label = 77;
   break;
  }
  __THREW__ = 0;
  $61 = invoke_iiii(27, $alloc | 0, $4 | 0, $5 | 0) | 0;
  $62 = __THREW__;
  __THREW__ = 0;
  if ($62 & 1) {
   label = 78;
   break;
  }
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $l | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if ($64 & 1) {
   label = 78;
   break;
  };
  HEAP32[$22 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
  HEAP32[$22 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
  HEAP32[$22 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
  HEAP32[$22 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
  HEAP32[$7 >> 2] = 0;
  HEAP32[$23 >> 2] = 0;
  HEAP32[$24 >> 2] = 0;
  $70 = (HEAP32[$16 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
  $71 = $70 >> 2;
  if ($71) {
   if ($71 >>> 0 > 1073741823) {
    __THREW__ = 0;
    invoke_vi(179, $7 | 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 30;
     break;
    }
   }
   __THREW__ = 0;
   $76 = invoke_ii(67, $70 | 0) | 0;
   $77 = __THREW__;
   __THREW__ = 0;
   if ($77 & 1) {
    label = 30;
    break;
   }
   HEAP32[$23 >> 2] = $76;
   HEAP32[$7 >> 2] = $76;
   HEAP32[$24 >> 2] = $76 + ($71 << 2);
   $80 = HEAP32[$params >> 2] | 0;
   $81 = HEAP32[$16 >> 2] | 0;
   if (($80 | 0) != ($81 | 0)) {
    $$01$i$i = $80;
    $84 = $76;
    do {
     HEAP32[$84 >> 2] = HEAP32[$$01$i$i >> 2];
     $84 = (HEAP32[$23 >> 2] | 0) + 4 | 0;
     HEAP32[$23 >> 2] = $84;
     $$01$i$i = $$01$i$i + 4 | 0;
    } while (($$01$i$i | 0) != ($81 | 0));
   }
  }
  __THREW__ = 0;
  $99 = invoke_ii(67, 64) | 0;
  $100 = __THREW__;
  __THREW__ = 0;
  if ($100 & 1) {
   label = 80;
   break;
  }
  HEAP32[$99 >> 2] = 33968;
  $102 = $99 + 4 | 0;
  __THREW__ = 0;
  invoke_vii(40, $102 | 0, $6 | 0);
  $103 = __THREW__;
  __THREW__ = 0;
  if ($103 & 1) {
   $$lcssa150 = $99;
   label = 59;
   break;
  }
  $105 = $99 + 16 | 0;
  HEAP32[$105 + 0 >> 2] = HEAP32[$22 + 0 >> 2];
  HEAP32[$105 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
  HEAP32[$105 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
  HEAP32[$105 + 12 >> 2] = HEAP32[$22 + 12 >> 2];
  HEAP32[$99 + 32 >> 2] = 3;
  $107 = $99 + 36 | 0;
  HEAP32[$107 >> 2] = 0;
  $108 = $99 + 40 | 0;
  HEAP32[$108 >> 2] = 0;
  HEAP32[$99 + 44 >> 2] = 0;
  HEAP32[$99 >> 2] = 33912;
  HEAP32[$99 + 48 >> 2] = $c$0104;
  $111 = $99 + 52 | 0;
  HEAP32[$111 >> 2] = 0;
  $112 = $99 + 56 | 0;
  HEAP32[$112 >> 2] = 0;
  $113 = $99 + 60 | 0;
  HEAP32[$113 >> 2] = 0;
  $118 = (HEAP32[$23 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0;
  $119 = $118 >> 2;
  if ($119) {
   if ($119 >>> 0 > 1073741823) {
    __THREW__ = 0;
    invoke_vi(179, $111 | 0);
    $122 = __THREW__;
    __THREW__ = 0;
    if ($122 & 1) {
     $$lcssa151 = $99;
     $$lcssa154 = $99;
     $$lcssa157 = $102;
     $$lcssa159 = $107;
     $$lcssa161 = $108;
     $$lcssa163 = $111;
     $$lcssa165 = $112;
     label = 44;
     break;
    }
   }
   __THREW__ = 0;
   $124 = invoke_ii(67, $118 | 0) | 0;
   $125 = __THREW__;
   __THREW__ = 0;
   if ($125 & 1) {
    $$lcssa151 = $99;
    $$lcssa154 = $99;
    $$lcssa157 = $102;
    $$lcssa159 = $107;
    $$lcssa161 = $108;
    $$lcssa163 = $111;
    $$lcssa165 = $112;
    label = 44;
    break;
   }
   HEAP32[$112 >> 2] = $124;
   HEAP32[$111 >> 2] = $124;
   HEAP32[$113 >> 2] = $124 + ($119 << 2);
   $128 = HEAP32[$7 >> 2] | 0;
   $129 = HEAP32[$23 >> 2] | 0;
   if (($128 | 0) != ($129 | 0)) {
    $$01$i$i60 = $128;
    $132 = $124;
    do {
     HEAP32[$132 >> 2] = HEAP32[$$01$i$i60 >> 2];
     $132 = (HEAP32[$112 >> 2] | 0) + 4 | 0;
     HEAP32[$112 >> 2] = $132;
     $$01$i$i60 = $$01$i$i60 + 4 | 0;
    } while (($$01$i$i60 | 0) != ($129 | 0));
   }
  }
  HEAP32[$0 >> 2] = $99;
  $156 = HEAP32[$25 >> 2] | 0;
  if ($156 >>> 0 < (HEAP32[$26 >> 2] | 0) >>> 0) {
   if (!$156) $161 = 0; else {
    HEAP32[$156 >> 2] = $99;
    $161 = HEAP32[$25 >> 2] | 0;
   }
   HEAP32[$25 >> 2] = $161 + 4;
  } else {
   __THREW__ = 0;
   invoke_vii(51, $29 | 0, $0 | 0);
   $162 = __THREW__;
   __THREW__ = 0;
   if ($162 & 1) {
    label = 80;
    break;
   }
  }
  __THREW__ = 0;
  $167 = invoke_ii(67, 20) | 0;
  $168 = __THREW__;
  __THREW__ = 0;
  if ($168 & 1) {
   label = 80;
   break;
  }
  HEAP32[$167 + 8 >> 2] = $61;
  HEAP32[$167 + 12 >> 2] = 1;
  HEAP32[$167 + 16 >> 2] = $99;
  HEAP32[$167 + 4 >> 2] = $15;
  $174 = HEAP32[$15 >> 2] | 0;
  HEAP32[$167 >> 2] = $174;
  HEAP32[$174 + 4 >> 2] = $167;
  HEAP32[$15 >> 2] = $167;
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 1;
  $178 = HEAP32[$7 >> 2] | 0;
  $180 = $178;
  if ($178) {
   $181 = HEAP32[$23 >> 2] | 0;
   if (($181 | 0) != ($178 | 0)) HEAP32[$23 >> 2] = $181 + (~(($181 + -4 - $180 | 0) >>> 2) << 2);
   __ZdlPv($178);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $187 = HEAP32[$params >> 2] | 0;
  $189 = $187;
  if ($187) {
   $190 = HEAP32[$16 >> 2] | 0;
   if (($190 | 0) != ($187 | 0)) HEAP32[$16 >> 2] = $190 + (~(($190 + -4 - $189 | 0) >>> 2) << 2);
   __ZdlPv($187);
  }
  $196 = HEAP32[$28 >> 2] | 0;
  if ($196) {
   $198 = HEAP32[$19 >> 2] | 0;
   if (($198 | 0) == ($196 | 0)) $204 = $196; else {
    $201 = $198;
    do {
     $200 = $201 + -12 | 0;
     HEAP32[$19 >> 2] = $200;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($200);
     $201 = HEAP32[$19 >> 2] | 0;
    } while (($201 | 0) != ($196 | 0));
    $204 = HEAP32[$28 >> 2] | 0;
   }
   __ZdlPv($204);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $c$0104 = $c$0104 + 1 | 0;
  if ($c$0104 >>> 0 >= 25) {
   label = 99;
   break;
  }
 }
 switch (label | 0) {
 case 14:
  {
   $$6 = ___cxa_find_matching_catch() | 0;
   $$67 = tempRet0;
   break;
  }
 case 15:
  {
   $lpad$phi$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index2 = tempRet0;
   label = 17;
   break;
  }
 case 16:
  {
   $lpad$phi$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index2 = tempRet0;
   label = 17;
   break;
  }
 case 30:
  {
   $88 = ___cxa_find_matching_catch() | 0;
   $89 = tempRet0;
   $90 = HEAP32[$7 >> 2] | 0;
   $92 = $90;
   if ($90) {
    $93 = HEAP32[$23 >> 2] | 0;
    if (($93 | 0) != ($90 | 0)) HEAP32[$23 >> 2] = $93 + (~(($93 + -4 - $92 | 0) >>> 2) << 2);
    __ZdlPv($90);
   }
   $$0 = $88;
   $$01 = $89;
   label = 85;
   break;
  }
 case 44:
  {
   $136 = ___cxa_find_matching_catch() | 0;
   $137 = tempRet0;
   $138 = HEAP32[$$lcssa163 >> 2] | 0;
   $140 = $138;
   if ($138) {
    $141 = HEAP32[$$lcssa165 >> 2] | 0;
    if (($141 | 0) != ($138 | 0)) HEAP32[$$lcssa165 >> 2] = $141 + (~(($141 + -4 - $140 | 0) >>> 2) << 2);
    __ZdlPv($138);
   }
   HEAP32[$$lcssa154 >> 2] = 33968;
   $147 = HEAP32[$$lcssa159 >> 2] | 0;
   $149 = $147;
   if ($147) {
    $150 = HEAP32[$$lcssa161 >> 2] | 0;
    if (($150 | 0) != ($147 | 0)) HEAP32[$$lcssa161 >> 2] = $150 + (~(($150 + -4 - $149 | 0) >>> 2) << 2);
    __ZdlPv($147);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$lcssa157);
   $166 = $$lcssa151;
   $eh$lpad$body57$index7Z2D = $137;
   $eh$lpad$body57$indexZ2D = $136;
   label = 60;
   break;
  }
 case 59:
  {
   $164 = ___cxa_find_matching_catch() | 0;
   $166 = $$lcssa150;
   $eh$lpad$body57$index7Z2D = tempRet0;
   $eh$lpad$body57$indexZ2D = $164;
   label = 60;
   break;
  }
 case 77:
  {
   $$2 = ___cxa_find_matching_catch() | 0;
   $$23 = tempRet0;
   label = 87;
   break;
  }
 case 78:
  {
   $$1 = ___cxa_find_matching_catch() | 0;
   $$12 = tempRet0;
   label = 86;
   break;
  }
 case 80:
  {
   $211 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body15$index12Z2D = tempRet0;
   $eh$lpad$body15$indexZ2D = $211;
   label = 81;
   break;
  }
 case 99:
  {
   $240 = $std_binds + 4 | 0;
   HEAP32[$240 >> 2] = 0;
   $241 = $std_binds + 8 | 0;
   HEAP32[$241 >> 2] = 0;
   $242 = $std_binds + 4 | 0;
   HEAP32[$std_binds >> 2] = $242;
   __THREW__ = 0;
   invoke_viii(3, $8 | 0, 33712, 3);
   $243 = __THREW__;
   __THREW__ = 0;
   L107 : do if ($243 & 1) label = 144; else {
    __THREW__ = 0;
    $245 = invoke_iii(23, $alloc | 0, $8 | 0) | 0;
    $246 = __THREW__;
    __THREW__ = 0;
    do if (!($246 & 1)) {
     $248 = HEAP32[$242 >> 2] | 0;
     do if (!$248) {
      HEAP32[$__parent$i$i$i$i$i >> 2] = $242;
      $$0$i7$i = $242;
      $267 = $242;
      label = 112;
     } else {
      $__nd$0$i$i = $248;
      while (1) {
       $251 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
       if ($245 >>> 0 < $251 >>> 0) {
        $253 = HEAP32[$__nd$0$i$i >> 2] | 0;
        if (!$253) {
         $$lcssa149 = $__nd$0$i$i;
         $__nd$0$i$i$lcssa148 = $__nd$0$i$i;
         label = 105;
         break;
        } else $__nd$0$be$in$i$i = $253;
       } else {
        if ($251 >>> 0 >= $245 >>> 0) {
         $__nd$0$i$i$lcssa = $__nd$0$i$i;
         label = 111;
         break;
        }
        $256 = $__nd$0$i$i + 4 | 0;
        $257 = HEAP32[$256 >> 2] | 0;
        if (!$257) {
         $$lcssa = $256;
         $__nd$0$i$i$lcssa147 = $__nd$0$i$i;
         label = 109;
         break;
        } else $__nd$0$be$in$i$i = $257;
       }
       $__nd$0$i$i = $__nd$0$be$in$i$i;
      }
      if ((label | 0) == 105) {
       HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$i$i$lcssa148;
       $$0$i7$i = $$lcssa149;
       $267 = $__nd$0$i$i$lcssa148;
       label = 112;
       break;
      } else if ((label | 0) == 109) {
       HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$i$i$lcssa147;
       $$0$i7$i = $$lcssa;
       $267 = $__nd$0$i$i$lcssa147;
       label = 112;
       break;
      } else if ((label | 0) == 111) {
       HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$i$i$lcssa;
       if (!$__nd$0$i$i$lcssa) {
        $$0$i7$i = $__parent$i$i$i$i$i;
        $267 = 0;
        label = 112;
        break;
       } else {
        $__r$0$i = $__nd$0$i$i$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 112) {
      __THREW__ = 0;
      $260 = invoke_ii(67, 24) | 0;
      $261 = __THREW__;
      __THREW__ = 0;
      if ($261 & 1) break;
      HEAP32[$260 + 16 >> 2] = $245;
      HEAP32[$260 + 20 >> 2] = 0;
      HEAP32[$260 >> 2] = 0;
      HEAP32[$260 + 4 >> 2] = 0;
      HEAP32[$260 + 8 >> 2] = $267;
      HEAP32[$$0$i7$i >> 2] = $260;
      $269 = HEAP32[HEAP32[$std_binds >> 2] >> 2] | 0;
      if (!$269) $272 = $260; else {
       HEAP32[$std_binds >> 2] = $269;
       $272 = HEAP32[$$0$i7$i >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$240 >> 2] | 0, $272);
      HEAP32[$241 >> 2] = (HEAP32[$241 >> 2] | 0) + 1;
      $__r$0$i = $260;
     }
     HEAP32[$__r$0$i + 20 >> 2] = $12;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     __THREW__ = 0;
     invoke_vii(40, $9 | 0, $11 + 4 | 0);
     $277 = __THREW__;
     __THREW__ = 0;
     if ($277 & 1) {
      label = 144;
      break L107;
     }
     $279 = $9 + 12 | 0;
     $280 = $11 + 16 | 0;
     HEAP32[$279 + 0 >> 2] = HEAP32[$280 + 0 >> 2];
     HEAP32[$279 + 4 >> 2] = HEAP32[$280 + 4 >> 2];
     HEAP32[$279 + 8 >> 2] = HEAP32[$280 + 8 >> 2];
     HEAP32[$279 + 12 >> 2] = HEAP32[$280 + 12 >> 2];
     $281 = $10 + 4 | 0;
     HEAP32[$281 >> 2] = 0;
     $282 = $10 + 8 | 0;
     HEAP32[$282 >> 2] = 0;
     $283 = $10 + 4 | 0;
     HEAP32[$10 >> 2] = $283;
     $284 = HEAP32[$std_binds >> 2] | 0;
     do if (($284 | 0) == ($242 | 0)) label = 135; else {
      $290 = $284;
      $317 = $284;
      while (1) {
       __THREW__ = 0;
       $286 = invoke_ii(67, 24) | 0;
       $287 = __THREW__;
       __THREW__ = 0;
       if ($287 & 1) {
        label = 146;
        break;
       }
       $291 = $286 + 16 | 0;
       $292 = $290 + 16 | 0;
       $297 = HEAP32[$292 + 4 >> 2] | 0;
       $298 = $291;
       HEAP32[$298 >> 2] = HEAP32[$292 >> 2];
       HEAP32[$298 + 4 >> 2] = $297;
       HEAP32[$0 >> 2] = $283;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       $302 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($10, $$byval_copy, $__parent$i$i$i$i$i, $291) | 0;
       $303 = HEAP32[$302 >> 2] | 0;
       if (!$303) {
        $305 = HEAP32[$__parent$i$i$i$i$i >> 2] | 0;
        HEAP32[$286 >> 2] = 0;
        HEAP32[$286 + 4 >> 2] = 0;
        HEAP32[$286 + 8 >> 2] = $305;
        HEAP32[$302 >> 2] = $286;
        $309 = HEAP32[HEAP32[$10 >> 2] >> 2] | 0;
        if (!$309) $312 = $286; else {
         HEAP32[$10 >> 2] = $309;
         $312 = HEAP32[$302 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$281 >> 2] | 0, $312);
        HEAP32[$282 >> 2] = (HEAP32[$282 >> 2] | 0) + 1;
       } else if (($303 | 0) != ($286 | 0)) __ZdlPv($286);
       $318 = HEAP32[$317 + 4 >> 2] | 0;
       if (!$318) {
        $$0$i$i$i$i$i = $317;
        while (1) {
         $323 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$323 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
          $$cast$i$i$i$i$i$lcssa = $323;
          break;
         } else $$0$i$i$i$i$i = $323;
        }
        $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i$i = $318;
        while (1) {
         $320 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
         if (!$320) {
          $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i = $320;
        }
        $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
       }
       if (($$01$i$i$i$i$i | 0) == ($242 | 0)) {
        label = 134;
        break;
       } else {
        $290 = $$01$i$i$i$i$i;
        $317 = $$01$i$i$i$i$i;
       }
      }
      if ((label | 0) == 134) {
       label = 135;
       break;
      } else if ((label | 0) == 146) {
       $348 = ___cxa_find_matching_catch() | 0;
       $349 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, HEAP32[$283 >> 2] | 0);
       $$4 = $348;
       $$45 = $349;
       break;
      }
     } while (0);
     if ((label | 0) == 135) {
      __THREW__ = 0;
      $327 = invoke_ii(67, 64) | 0;
      $328 = __THREW__;
      __THREW__ = 0;
      do if ($328 & 1) label = 147; else {
       __THREW__ = 0;
       invoke_viiii(11, $327 | 0, $9 | 0, $10 | 0, $11 | 0);
       $330 = __THREW__;
       __THREW__ = 0;
       if ($330 & 1) {
        $340 = ___cxa_find_matching_catch() | 0;
        $341 = tempRet0;
        __ZdlPv($327);
        $eh$lpad$body54$index17Z2D = $341;
        $eh$lpad$body54$indexZ2D = $340;
        break;
       }
       HEAP32[$$byval_copy >> 2] = $327;
       $332 = HEAP32[$25 >> 2] | 0;
       if ($332 >>> 0 >= (HEAP32[$26 >> 2] | 0) >>> 0) {
        __THREW__ = 0;
        invoke_vii(51, $29 | 0, $$byval_copy | 0);
        $338 = __THREW__;
        __THREW__ = 0;
        if ($338 & 1) {
         label = 147;
         break;
        }
        $342 = HEAP32[$283 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, $342);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
        $343 = HEAP32[$242 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $343);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
        STACKTOP = sp;
        return $327 | 0;
       }
       if (!$332) $337 = 0; else {
        HEAP32[$332 >> 2] = $327;
        $337 = HEAP32[$25 >> 2] | 0;
       }
       HEAP32[$25 >> 2] = $337 + 4;
       $342 = HEAP32[$283 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, $342);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       $343 = HEAP32[$242 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $343);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
       STACKTOP = sp;
       return $327 | 0;
      } while (0);
      if ((label | 0) == 147) {
       $351 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body54$index17Z2D = tempRet0;
       $eh$lpad$body54$indexZ2D = $351;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, HEAP32[$283 >> 2] | 0);
      $$4 = $eh$lpad$body54$indexZ2D;
      $$45 = $eh$lpad$body54$index17Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     $$5 = $$4;
     $$56 = $$45;
     break L107;
    } while (0);
    $346 = ___cxa_find_matching_catch() | 0;
    $347 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    $$5 = $346;
    $$56 = $347;
   } while (0);
   if ((label | 0) == 144) {
    $344 = ___cxa_find_matching_catch() | 0;
    $$5 = $344;
    $$56 = tempRet0;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, HEAP32[$242 >> 2] | 0);
   $$6 = $$5;
   $$67 = $$56;
   break;
  }
 }
 if ((label | 0) == 17) {
  $$3 = $lpad$phi$index;
  $$34 = $lpad$phi$index2;
  label = 88;
 } else if ((label | 0) == 60) {
  __ZdlPv($166);
  $eh$lpad$body15$index12Z2D = $eh$lpad$body57$index7Z2D;
  $eh$lpad$body15$indexZ2D = $eh$lpad$body57$indexZ2D;
  label = 81;
 }
 if ((label | 0) == 81) {
  $213 = HEAP32[$7 >> 2] | 0;
  $215 = $213;
  if (!$213) {
   $$0 = $eh$lpad$body15$indexZ2D;
   $$01 = $eh$lpad$body15$index12Z2D;
   label = 85;
  } else {
   $216 = HEAP32[$23 >> 2] | 0;
   if (($216 | 0) != ($213 | 0)) HEAP32[$23 >> 2] = $216 + (~(($216 + -4 - $215 | 0) >>> 2) << 2);
   __ZdlPv($213);
   $$0 = $eh$lpad$body15$indexZ2D;
   $$01 = $eh$lpad$body15$index12Z2D;
   label = 85;
  }
 }
 if ((label | 0) == 85) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $$1 = $$0;
  $$12 = $$01;
  label = 86;
 }
 if ((label | 0) == 86) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $$2 = $$1;
  $$23 = $$12;
  label = 87;
 }
 if ((label | 0) == 87) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$3 = $$2;
  $$34 = $$23;
  label = 88;
 }
 if ((label | 0) == 88) {
  $222 = HEAP32[$params >> 2] | 0;
  $224 = $222;
  if ($222) {
   $225 = HEAP32[$16 >> 2] | 0;
   if (($225 | 0) != ($222 | 0)) HEAP32[$16 >> 2] = $225 + (~(($225 + -4 - $224 | 0) >>> 2) << 2);
   __ZdlPv($222);
  }
  $231 = HEAP32[$28 >> 2] | 0;
  if ($231) {
   $233 = HEAP32[$19 >> 2] | 0;
   if (($233 | 0) == ($231 | 0)) $239 = $231; else {
    $236 = $233;
    do {
     $235 = $236 + -12 | 0;
     HEAP32[$19 >> 2] = $235;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($235);
     $236 = HEAP32[$19 >> 2] | 0;
    } while (($236 | 0) != ($231 | 0));
    $239 = HEAP32[$28 >> 2] | 0;
   }
   __ZdlPv($239);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $$6 = $$3;
  $$67 = $$34;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
 $$7 = $$6;
 $$78 = $$67;
 ___resumeException($$7 | 0);
 return 0;
}
function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb($agg$result, $obj_, $counter, $skip) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 $counter = $counter | 0;
 $skip = $skip | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i15 = 0, $$0$i$i$i$i15$lcssa = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i51$lcssa = 0, $$0$i$i$i17 = 0, $$0$i$i$i53 = 0, $$0$i7$i = 0, $$0$i7$i29 = 0, $$0$i7$i44 = 0, $$0$i7$i65 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa163 = 0, $$01 = 0, $$01$i$i$i = 0, $$01$i$i$i20 = 0, $$01$i$i$i56 = 0, $$01$ph5$i$i$i = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i18$lcssa = 0, $$cast$i$i$i54$lcssa = 0, $$idx$val$i = 0, $$idx$val$i12 = 0, $$idx$val$i72105 = 0, $$lcssa = 0, $$lcssa161 = 0, $$lcssa166 = 0, $$lcssa167 = 0, $$lcssa170 = 0, $$lcssa171 = 0, $$lcssa174 = 0, $$lcssa175 = 0, $$pre$phi129Z2D = 0, $$pre$phiZ2D = 0, $$pre128$pre$phiZZ2D = 0, $0 = 0, $1 = 0, $113 = 0, $114 = 0, $116 = 0, $118 = 0, $121 = 0, $122 = 0, $125 = 0, $126 = 0, $133 = 0, $135 = 0, $138 = 0, $142 = 0, $147 = 0, $149 = 0, $15 = 0, $151 = 0, $154 = 0, $155 = 0, $158 = 0, $159 = 0, $166 = 0, $168 = 0, $171 = 0, $176 = 0, $178 = 0, $18 = 0, $181 = 0, $185 = 0, $19 = 0, $191 = 0, $193 = 0, $196 = 0, $2 = 0, $20 = 0, $202 = 0, $204 = 0, $205 = 0, $206 = 0, $208 = 0, $210 = 0, $212 = 0, $215 = 0, $216 = 0, $219 = 0, $22 = 0, $220 = 0, $227 = 0, $229 = 0, $232 = 0, $237 = 0, $239 = 0, $24 = 0, $242 = 0, $248 = 0, $250 = 0, $252 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $51 = 0, $53 = 0, $56 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $66 = 0, $70 = 0, $75 = 0, $76 = 0, $77 = 0, $80 = 0, $81 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $99 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$be$in$i$i24 = 0, $__nd$0$be$in$i$i39 = 0, $__nd$0$be$in$i$i60 = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa159 = 0, $__nd$0$i$i$lcssa160 = 0, $__nd$0$i$i23 = 0, $__nd$0$i$i23$lcssa = 0, $__nd$0$i$i23$lcssa164 = 0, $__nd$0$i$i23$lcssa165 = 0, $__nd$0$i$i38 = 0, $__nd$0$i$i38$lcssa = 0, $__nd$0$i$i38$lcssa172 = 0, $__nd$0$i$i38$lcssa173 = 0, $__nd$0$i$i59 = 0, $__nd$0$i$i59$lcssa = 0, $__nd$0$i$i59$lcssa168 = 0, $__nd$0$i$i59$lcssa169 = 0, $__parent$i = 0, $__parent$i21 = 0, $__parent$i36 = 0, $__parent$i57 = 0, $__r$0$i = 0, $__r$0$i33 = 0, $__r$0$i48 = 0, $__r$0$i69 = 0, $counter2 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$i57 = sp + 52 | 0;
 $__parent$i36 = sp + 48 | 0;
 $__parent$i21 = sp + 44 | 0;
 $__parent$i = sp + 40 | 0;
 $r = sp + 28 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 4 | 0;
 $counter2 = sp;
 $2 = $r + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $r + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $r + 4 | 0;
 HEAP32[$r >> 2] = $4;
 L1 : do if ($obj_) {
  $6 = ___dynamic_cast($obj_, 36784, 36856, 0) | 0;
  L3 : do if (!$6) {
   $66 = ___dynamic_cast($obj_, 36784, 37120, 0) | 0;
   do if (!$66) {
    $185 = ___dynamic_cast($obj_, 36784, 37176, 0) | 0;
    if ($185) {
     HEAP32[$counter2 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(19, $agg$result | 0, HEAP32[$185 + 8 >> 2] | 0, $counter2 | 0, HEAP32[$185 + 12 >> 2] | 0);
     $191 = __THREW__;
     __THREW__ = 0;
     if ($191 & 1) break;
     $254 = HEAP32[$4 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $254);
     STACKTOP = sp;
     return;
    }
    $193 = ___dynamic_cast($obj_, 36784, 37240, 0) | 0;
    if (!$193) break L1;
    $196 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
    HEAP32[$counter >> 2] = $196;
    if ($196 >>> 0 <= $skip >>> 0) {
     HEAP32[$agg$result + 4 >> 2] = 0;
     HEAP32[$agg$result + 8 >> 2] = 0;
     HEAP32[$agg$result >> 2] = $agg$result + 4;
     $254 = 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $254);
     STACKTOP = sp;
     return;
    }
    $$idx$val$i12 = HEAP32[$193 + 28 >> 2] | 0;
    $202 = $193 + 32 | 0;
    if (($$idx$val$i12 | 0) == ($202 | 0)) break L1;
    $205 = $$idx$val$i12;
    $206 = 0;
    while (1) {
     $204 = $205 + 16 | 0;
     do if (!$206) {
      HEAP32[$__parent$i >> 2] = $4;
      $$0$i7$i = $4;
      $227 = $4;
      label = 115;
     } else {
      $208 = HEAP32[$204 >> 2] | 0;
      $__nd$0$i$i = $206;
      while (1) {
       $210 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
       if ($208 >>> 0 < $210 >>> 0) {
        $212 = HEAP32[$__nd$0$i$i >> 2] | 0;
        if (!$212) {
         $$lcssa161 = $__nd$0$i$i;
         $__nd$0$i$i$lcssa160 = $__nd$0$i$i;
         label = 108;
         break;
        } else $__nd$0$be$in$i$i = $212;
       } else {
        if ($210 >>> 0 >= $208 >>> 0) {
         $__nd$0$i$i$lcssa = $__nd$0$i$i;
         label = 114;
         break;
        }
        $215 = $__nd$0$i$i + 4 | 0;
        $216 = HEAP32[$215 >> 2] | 0;
        if (!$216) {
         $$lcssa = $215;
         $__nd$0$i$i$lcssa159 = $__nd$0$i$i;
         label = 112;
         break;
        } else $__nd$0$be$in$i$i = $216;
       }
       $__nd$0$i$i = $__nd$0$be$in$i$i;
      }
      if ((label | 0) == 108) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa160;
       $$0$i7$i = $$lcssa161;
       $227 = $__nd$0$i$i$lcssa160;
       label = 115;
       break;
      } else if ((label | 0) == 112) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa159;
       $$0$i7$i = $$lcssa;
       $227 = $__nd$0$i$i$lcssa159;
       label = 115;
       break;
      } else if ((label | 0) == 114) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
       if (!$__nd$0$i$i$lcssa) {
        $$0$i7$i = $__parent$i;
        $227 = 0;
        label = 115;
        break;
       } else {
        $__r$0$i = $__nd$0$i$i$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 115) {
      label = 0;
      __THREW__ = 0;
      $219 = invoke_ii(67, 24) | 0;
      $220 = __THREW__;
      __THREW__ = 0;
      if ($220 & 1) {
       label = 31;
       break;
      }
      HEAP32[$219 + 16 >> 2] = HEAP32[$204 >> 2];
      HEAP32[$219 + 20 >> 2] = 0;
      HEAP32[$219 >> 2] = 0;
      HEAP32[$219 + 4 >> 2] = 0;
      HEAP32[$219 + 8 >> 2] = $227;
      HEAP32[$$0$i7$i >> 2] = $219;
      $229 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
      if (!$229) $232 = $219; else {
       HEAP32[$r >> 2] = $229;
       $232 = HEAP32[$$0$i7$i >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $232);
      HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
      $__r$0$i = $219;
     }
     HEAP32[$__r$0$i + 20 >> 2] = 2;
     $237 = HEAP32[$205 + 4 >> 2] | 0;
     if (!$237) {
      $$0$i$i$i = $205;
      while (1) {
       $242 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$242 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$cast$i$i$i$lcssa = $242;
        break;
       } else $$0$i$i$i = $242;
      }
      $$01$i$i$i = $$cast$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i = $237;
      while (1) {
       $239 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$239) {
        $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $239;
      }
      $$01$i$i$i = $$0$i$i$i$i$lcssa;
     }
     if (($$01$i$i$i | 0) == ($202 | 0)) {
      label = 128;
      break;
     }
     $205 = $$01$i$i$i;
     $206 = HEAP32[$4 >> 2] | 0;
    }
    if ((label | 0) == 31) {
     $60 = ___cxa_find_matching_catch() | 0;
     $$pre128$pre$phiZZ2D = $4;
     $lpad$phi$index = $60;
     $lpad$phi$index3 = tempRet0;
     break L3;
    } else if ((label | 0) == 128) break L1;
   } else {
    __THREW__ = 0;
    invoke_viiii(19, $0 | 0, HEAP32[$66 + 12 >> 2] | 0, $counter | 0, $skip | 0);
    $70 = __THREW__;
    __THREW__ = 0;
    if (!($70 & 1)) {
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, HEAP32[$4 >> 2] | 0);
     HEAP32[$r >> 2] = HEAP32[$0 >> 2];
     $75 = HEAP32[$0 + 4 >> 2] | 0;
     HEAP32[$2 >> 2] = $75;
     $76 = $0 + 8 | 0;
     $77 = HEAP32[$76 >> 2] | 0;
     HEAP32[$3 >> 2] = $77;
     if (!$77) {
      HEAP32[$r >> 2] = $4;
      $81 = $75;
     } else {
      HEAP32[$75 + 8 >> 2] = $4;
      $80 = $0 + 4 | 0;
      HEAP32[$0 >> 2] = $80;
      HEAP32[$80 >> 2] = 0;
      HEAP32[$76 >> 2] = 0;
      $81 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $81);
     __THREW__ = 0;
     invoke_viiii(19, $1 | 0, HEAP32[$66 + 8 >> 2] | 0, $counter | 0, $skip | 0);
     $84 = __THREW__;
     __THREW__ = 0;
     if (!($84 & 1)) {
      $86 = HEAP32[$1 >> 2] | 0;
      $87 = $1 + 4 | 0;
      do if (($86 | 0) != ($87 | 0)) {
       $94 = $86;
       L107 : while (1) {
        $93 = $94 + 16 | 0;
        $95 = HEAP32[$4 >> 2] | 0;
        $96 = ($95 | 0) == 0;
        do if ($96) {
         $256 = HEAP32[$94 + 20 >> 2] | 0;
         label = 66;
        } else {
         $99 = HEAP32[$93 >> 2] | 0;
         $$0$ph6$i$i$i = $4;
         $$01$ph5$i$i$i = $95;
         L112 : while (1) {
          $$013$i$i$i = $$01$ph5$i$i$i;
          while (1) {
           if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $99 >>> 0) {
            $$013$i$i$i$lcssa = $$013$i$i$i;
            break;
           }
           $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
           if (!$$013$i$i$i) {
            $$0$ph6$i$i$i$lcssa163 = $$0$ph6$i$i$i;
            label = 53;
            break L112;
           }
          }
          $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i) {
           $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
           label = 54;
           break;
          } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
         }
         if ((label | 0) == 53) {
          label = 0;
          $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa163;
         } else if ((label | 0) == 54) {
          label = 0;
          $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
         }
         if (($$0$ph$lcssa$i$i$i | 0) != ($4 | 0)) if ($99 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
          if (HEAP32[$$0$ph$lcssa$i$i$i + 20 >> 2] | 0) break;
          $147 = HEAP32[$94 + 20 >> 2] | 0;
          $__nd$0$i$i23 = $95;
          while (1) {
           $149 = HEAP32[$__nd$0$i$i23 + 16 >> 2] | 0;
           if ($99 >>> 0 < $149 >>> 0) {
            $151 = HEAP32[$__nd$0$i$i23 >> 2] | 0;
            if (!$151) {
             $$lcssa167 = $__nd$0$i$i23;
             $__nd$0$i$i23$lcssa165 = $__nd$0$i$i23;
             label = 77;
             break;
            } else $__nd$0$be$in$i$i24 = $151;
           } else {
            if ($149 >>> 0 >= $99 >>> 0) {
             $__nd$0$i$i23$lcssa = $__nd$0$i$i23;
             label = 82;
             break;
            }
            $154 = $__nd$0$i$i23 + 4 | 0;
            $155 = HEAP32[$154 >> 2] | 0;
            if (!$155) {
             $$lcssa166 = $154;
             $__nd$0$i$i23$lcssa164 = $__nd$0$i$i23;
             label = 81;
             break;
            } else $__nd$0$be$in$i$i24 = $155;
           }
           $__nd$0$i$i23 = $__nd$0$be$in$i$i24;
          }
          if ((label | 0) == 77) {
           label = 0;
           HEAP32[$__parent$i21 >> 2] = $__nd$0$i$i23$lcssa165;
           $$0$i7$i29 = $$lcssa167;
           $166 = $__nd$0$i$i23$lcssa165;
           label = 83;
          } else if ((label | 0) == 81) {
           label = 0;
           HEAP32[$__parent$i21 >> 2] = $__nd$0$i$i23$lcssa164;
           $$0$i7$i29 = $$lcssa166;
           $166 = $__nd$0$i$i23$lcssa164;
           label = 83;
          } else if ((label | 0) == 82) {
           label = 0;
           HEAP32[$__parent$i21 >> 2] = $__nd$0$i$i23$lcssa;
           if (!$__nd$0$i$i23$lcssa) {
            $$0$i7$i29 = $__parent$i21;
            $166 = 0;
            label = 83;
           } else $__r$0$i33 = $__nd$0$i$i23$lcssa;
          }
          if ((label | 0) == 83) {
           label = 0;
           __THREW__ = 0;
           $158 = invoke_ii(67, 24) | 0;
           $159 = __THREW__;
           __THREW__ = 0;
           if ($159 & 1) break L107;
           HEAP32[$158 + 16 >> 2] = HEAP32[$93 >> 2];
           HEAP32[$158 + 20 >> 2] = 0;
           HEAP32[$158 >> 2] = 0;
           HEAP32[$158 + 4 >> 2] = 0;
           HEAP32[$158 + 8 >> 2] = $166;
           HEAP32[$$0$i7$i29 >> 2] = $158;
           $168 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
           if (!$168) $171 = $158; else {
            HEAP32[$r >> 2] = $168;
            $171 = HEAP32[$$0$i7$i29 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $171);
           HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
           $__r$0$i33 = $158;
          }
          HEAP32[$__r$0$i33 + 20 >> 2] = $147;
          break;
         }
         $113 = HEAP32[$94 + 20 >> 2] | 0;
         if ($96) {
          $256 = $113;
          label = 66;
         } else {
          $114 = HEAP32[$93 >> 2] | 0;
          $__nd$0$i$i59 = $95;
          while (1) {
           $116 = HEAP32[$__nd$0$i$i59 + 16 >> 2] | 0;
           if ($114 >>> 0 < $116 >>> 0) {
            $118 = HEAP32[$__nd$0$i$i59 >> 2] | 0;
            if (!$118) {
             $$lcssa171 = $__nd$0$i$i59;
             $__nd$0$i$i59$lcssa169 = $__nd$0$i$i59;
             label = 61;
             break;
            } else $__nd$0$be$in$i$i60 = $118;
           } else {
            if ($116 >>> 0 >= $114 >>> 0) {
             $__nd$0$i$i59$lcssa = $__nd$0$i$i59;
             label = 67;
             break;
            }
            $121 = $__nd$0$i$i59 + 4 | 0;
            $122 = HEAP32[$121 >> 2] | 0;
            if (!$122) {
             $$lcssa170 = $121;
             $__nd$0$i$i59$lcssa168 = $__nd$0$i$i59;
             label = 65;
             break;
            } else $__nd$0$be$in$i$i60 = $122;
           }
           $__nd$0$i$i59 = $__nd$0$be$in$i$i60;
          }
          if ((label | 0) == 61) {
           label = 0;
           HEAP32[$__parent$i57 >> 2] = $__nd$0$i$i59$lcssa169;
           $$0$i7$i65 = $$lcssa171;
           $133 = $__nd$0$i$i59$lcssa169;
           $257 = $113;
           label = 68;
           break;
          } else if ((label | 0) == 65) {
           label = 0;
           HEAP32[$__parent$i57 >> 2] = $__nd$0$i$i59$lcssa168;
           $$0$i7$i65 = $$lcssa170;
           $133 = $__nd$0$i$i59$lcssa168;
           $257 = $113;
           label = 68;
           break;
          } else if ((label | 0) == 67) {
           label = 0;
           HEAP32[$__parent$i57 >> 2] = $__nd$0$i$i59$lcssa;
           if (!$__nd$0$i$i59$lcssa) {
            $$0$i7$i65 = $__parent$i57;
            $133 = 0;
            $257 = $113;
            label = 68;
            break;
           } else {
            $142 = $113;
            $__r$0$i69 = $__nd$0$i$i59$lcssa;
            label = 72;
            break;
           }
          }
         }
        } while (0);
        if ((label | 0) == 66) {
         label = 0;
         HEAP32[$__parent$i57 >> 2] = $4;
         $$0$i7$i65 = $4;
         $133 = $4;
         $257 = $256;
         label = 68;
        }
        if ((label | 0) == 68) {
         label = 0;
         __THREW__ = 0;
         $125 = invoke_ii(67, 24) | 0;
         $126 = __THREW__;
         __THREW__ = 0;
         if ($126 & 1) break;
         HEAP32[$125 + 16 >> 2] = HEAP32[$93 >> 2];
         HEAP32[$125 + 20 >> 2] = 0;
         HEAP32[$125 >> 2] = 0;
         HEAP32[$125 + 4 >> 2] = 0;
         HEAP32[$125 + 8 >> 2] = $133;
         HEAP32[$$0$i7$i65 >> 2] = $125;
         $135 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
         if (!$135) $138 = $125; else {
          HEAP32[$r >> 2] = $135;
          $138 = HEAP32[$$0$i7$i65 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $138);
         HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
         $142 = $257;
         $__r$0$i69 = $125;
         label = 72;
        }
        if ((label | 0) == 72) {
         label = 0;
         HEAP32[$__r$0$i69 + 20 >> 2] = $142;
        }
        $176 = HEAP32[$94 + 4 >> 2] | 0;
        if (!$176) {
         $$0$i$i$i17 = $94;
         while (1) {
          $181 = HEAP32[$$0$i$i$i17 + 8 >> 2] | 0;
          if ((HEAP32[$181 >> 2] | 0) == ($$0$i$i$i17 | 0)) {
           $$cast$i$i$i18$lcssa = $181;
           break;
          } else $$0$i$i$i17 = $181;
         }
         $$01$i$i$i20 = $$cast$i$i$i18$lcssa;
        } else {
         $$0$i$i$i$i15 = $176;
         while (1) {
          $178 = HEAP32[$$0$i$i$i$i15 >> 2] | 0;
          if (!$178) {
           $$0$i$i$i$i15$lcssa = $$0$i$i$i$i15;
           break;
          } else $$0$i$i$i$i15 = $178;
         }
         $$01$i$i$i20 = $$0$i$i$i$i15$lcssa;
        }
        if (($$01$i$i$i20 | 0) == ($87 | 0)) {
         label = 43;
         break;
        } else $94 = $$01$i$i$i20;
       }
       if ((label | 0) == 43) break;
       $90 = ___cxa_find_matching_catch() | 0;
       $91 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$87 >> 2] | 0);
       $$0 = $90;
       $$01 = $91;
       $$pre$phi129Z2D = $4;
       $$pre$phiZ2D = $r;
       $255 = HEAP32[$$pre$phi129Z2D >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $255);
       ___resumeException($$0 | 0);
      } while (0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$87 >> 2] | 0);
      break L1;
     }
    }
   } while (0);
   $64 = ___cxa_find_matching_catch() | 0;
   $$pre128$pre$phiZZ2D = $4;
   $lpad$phi$index = $64;
   $lpad$phi$index3 = tempRet0;
  } else {
   $9 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
   HEAP32[$counter >> 2] = $9;
   if ($9 >>> 0 <= $skip >>> 0) {
    HEAP32[$agg$result + 4 >> 2] = 0;
    HEAP32[$agg$result + 8 >> 2] = 0;
    HEAP32[$agg$result >> 2] = $agg$result + 4;
    $254 = 0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $254);
    STACKTOP = sp;
    return;
   }
   $$idx$val$i = HEAP32[$6 + 20 >> 2] | 0;
   $15 = $6 + 24 | 0;
   if (($$idx$val$i | 0) == ($15 | 0)) break L1;
   $$idx$val$i72105 = $$idx$val$i;
   $20 = 0;
   while (1) {
    $18 = HEAP32[$$idx$val$i72105 + 20 >> 2] | 0;
    $19 = $$idx$val$i72105 + 16 | 0;
    do if (!$20) {
     HEAP32[$__parent$i36 >> 2] = $4;
     $$0$i7$i44 = $4;
     $41 = $4;
     label = 18;
    } else {
     $22 = HEAP32[$19 >> 2] | 0;
     $__nd$0$i$i38 = $20;
     while (1) {
      $24 = HEAP32[$__nd$0$i$i38 + 16 >> 2] | 0;
      if ($22 >>> 0 < $24 >>> 0) {
       $26 = HEAP32[$__nd$0$i$i38 >> 2] | 0;
       if (!$26) {
        $$lcssa175 = $__nd$0$i$i38;
        $__nd$0$i$i38$lcssa173 = $__nd$0$i$i38;
        label = 11;
        break;
       } else $__nd$0$be$in$i$i39 = $26;
      } else {
       if ($24 >>> 0 >= $22 >>> 0) {
        $__nd$0$i$i38$lcssa = $__nd$0$i$i38;
        label = 17;
        break;
       }
       $29 = $__nd$0$i$i38 + 4 | 0;
       $30 = HEAP32[$29 >> 2] | 0;
       if (!$30) {
        $$lcssa174 = $29;
        $__nd$0$i$i38$lcssa172 = $__nd$0$i$i38;
        label = 15;
        break;
       } else $__nd$0$be$in$i$i39 = $30;
      }
      $__nd$0$i$i38 = $__nd$0$be$in$i$i39;
     }
     if ((label | 0) == 11) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa173;
      $$0$i7$i44 = $$lcssa175;
      $41 = $__nd$0$i$i38$lcssa173;
      label = 18;
      break;
     } else if ((label | 0) == 15) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa172;
      $$0$i7$i44 = $$lcssa174;
      $41 = $__nd$0$i$i38$lcssa172;
      label = 18;
      break;
     } else if ((label | 0) == 17) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa;
      if (!$__nd$0$i$i38$lcssa) {
       $$0$i7$i44 = $__parent$i36;
       $41 = 0;
       label = 18;
       break;
      } else {
       $__r$0$i48 = $__nd$0$i$i38$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 18) {
     label = 0;
     __THREW__ = 0;
     $33 = invoke_ii(67, 24) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if ($34 & 1) {
      label = 32;
      break;
     }
     HEAP32[$33 + 16 >> 2] = HEAP32[$19 >> 2];
     HEAP32[$33 + 20 >> 2] = 0;
     HEAP32[$33 >> 2] = 0;
     HEAP32[$33 + 4 >> 2] = 0;
     HEAP32[$33 + 8 >> 2] = $41;
     HEAP32[$$0$i7$i44 >> 2] = $33;
     $43 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
     if (!$43) $46 = $33; else {
      HEAP32[$r >> 2] = $43;
      $46 = HEAP32[$$0$i7$i44 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $46);
     HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
     $__r$0$i48 = $33;
    }
    HEAP32[$__r$0$i48 + 20 >> 2] = $18;
    $51 = HEAP32[$$idx$val$i72105 + 4 >> 2] | 0;
    if (!$51) {
     $$0$i$i$i53 = $$idx$val$i72105;
     while (1) {
      $56 = HEAP32[$$0$i$i$i53 + 8 >> 2] | 0;
      if ((HEAP32[$56 >> 2] | 0) == ($$0$i$i$i53 | 0)) {
       $$cast$i$i$i54$lcssa = $56;
       break;
      } else $$0$i$i$i53 = $56;
     }
     $$01$i$i$i56 = $$cast$i$i$i54$lcssa;
    } else {
     $$0$i$i$i$i51 = $51;
     while (1) {
      $53 = HEAP32[$$0$i$i$i$i51 >> 2] | 0;
      if (!$53) {
       $$0$i$i$i$i51$lcssa = $$0$i$i$i$i51;
       break;
      } else $$0$i$i$i$i51 = $53;
     }
     $$01$i$i$i56 = $$0$i$i$i$i51$lcssa;
    }
    if (($$01$i$i$i56 | 0) == ($15 | 0)) {
     label = 129;
     break;
    }
    $$idx$val$i72105 = $$01$i$i$i56;
    $20 = HEAP32[$4 >> 2] | 0;
   }
   if ((label | 0) == 32) {
    $62 = ___cxa_find_matching_catch() | 0;
    $$pre128$pre$phiZZ2D = $4;
    $lpad$phi$index = $62;
    $lpad$phi$index3 = tempRet0;
    break;
   } else if ((label | 0) == 129) break L1;
  } while (0);
  $$0 = $lpad$phi$index;
  $$01 = $lpad$phi$index3;
  $$pre$phi129Z2D = $$pre128$pre$phiZZ2D;
  $$pre$phiZ2D = $r;
  $255 = HEAP32[$$pre$phi129Z2D >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $255);
  ___resumeException($$0 | 0);
 } while (0);
 HEAP32[$agg$result >> 2] = HEAP32[$r >> 2];
 $248 = HEAP32[$2 >> 2] | 0;
 HEAP32[$agg$result + 4 >> 2] = $248;
 $250 = HEAP32[$3 >> 2] | 0;
 HEAP32[$agg$result + 8 >> 2] = $250;
 $252 = $agg$result + 4 | 0;
 if (!$250) {
  HEAP32[$agg$result >> 2] = $252;
  $254 = $248;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $254);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$248 + 8 >> 2] = $252;
  HEAP32[$r >> 2] = $4;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  $254 = 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $254);
  STACKTOP = sp;
  return;
 }
}

function __Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location($agg$result, $c, $filename, $begin) {
 $agg$result = $agg$result | 0;
 $c = $c | 0;
 $filename = $filename | 0;
 $begin = $begin | 0;
 var $$0 = 0, $$0$i = 0, $$0$i34 = 0, $$0$i52 = 0, $$01$i = 0, $$01$i33 = 0, $$01$i51 = 0, $$01167 = 0, $$01366 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$11271 = 0, $$11470 = 0, $$2 = 0, $$215 = 0, $$31674 = 0, $$375 = 0, $$4 = 0, $$417 = 0, $$51878 = 0, $$579 = 0, $$6 = 0, $$619 = 0, $$7 = 0, $$720 = 0, $0 = 0, $1 = 0, $100 = 0, $105 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $118 = 0, $119 = 0, $120 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $141 = 0, $145 = 0, $147 = 0, $149 = 0, $151 = 0, $152 = 0, $153 = 0, $155 = 0, $157 = 0, $158 = 0, $16 = 0, $162 = 0, $164 = 0, $165 = 0, $167 = 0, $170 = 0, $175 = 0, $176 = 0, $181 = 0, $186 = 0, $187 = 0, $19 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $198 = 0, $2 = 0, $200 = 0, $202 = 0, $203 = 0, $205 = 0, $207 = 0, $208 = 0, $209 = 0, $212 = 0, $216 = 0, $218 = 0, $220 = 0, $222 = 0, $223 = 0, $224 = 0, $226 = 0, $228 = 0, $229 = 0, $233 = 0, $235 = 0, $236 = 0, $238 = 0, $24 = 0, $241 = 0, $246 = 0, $247 = 0, $25 = 0, $252 = 0, $257 = 0, $258 = 0, $263 = 0, $265 = 0, $266 = 0, $267 = 0, $269 = 0, $271 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $278 = 0, $279 = 0, $284 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $94 = 0, $99 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i31$index16Z2D = 0, $eh$lpad$body$i31$indexZ2D = 0, $eh$lpad$body$i49$index21Z2D = 0, $eh$lpad$body$i49$indexZ2D = 0, $eh$lpad$body22$index9Z2D = 0, $eh$lpad$body22$indexZ2D = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $state$0 = 0, $state$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544 | 0;
 $0 = sp + 530 | 0;
 $1 = sp + 516 | 0;
 $2 = sp + 529 | 0;
 $3 = sp + 504 | 0;
 $4 = sp + 528 | 0;
 $5 = sp + 492 | 0;
 $6 = sp + 480 | 0;
 $ss = sp + 336 | 0;
 $7 = sp + 320 | 0;
 $ss1 = sp + 176 | 0;
 $8 = sp + 160 | 0;
 $ss2 = sp + 16 | 0;
 $9 = sp;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $state$0 = 0;
 L1 : while (1) {
  L3 : do switch ($state$0 | 0) {
  case 0:
   {
    $11 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($11 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
     break;
    case 48:
     {
      $278 = $11;
      $state$1 = 1;
      break L3;
      break;
     }
    default:
     {
      label = 6;
      break L1;
     }
    }
    $278 = $11;
    $state$1 = 2;
    break;
   }
  case 2:
   {
    $54 = HEAP32[$c >> 2] | 0;
    $55 = HEAP8[$54 >> 0] | 0;
    switch ($55 << 24 >> 24 | 0) {
    case 69:
    case 101:
     {
      $278 = $55;
      $state$1 = 5;
      break L3;
      break;
     }
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     {
      $278 = $55;
      $state$1 = 2;
      break L3;
      break;
     }
    case 46:
     {
      $278 = $55;
      $state$1 = 3;
      break L3;
      break;
     }
    default:
     {
      $284 = $54;
      label = 90;
      break L1;
     }
    }
    break;
   }
  case 3:
   {
    $58 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($58 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $278 = $58;
     $state$1 = 4;
    } else {
     label = 20;
     break L1;
    }
    break;
   }
  case 1:
   {
    $51 = HEAP32[$c >> 2] | 0;
    $52 = HEAP8[$51 >> 0] | 0;
    $53 = $52 << 24 >> 24;
    if (($53 | 0) == 46) {
     $278 = $52;
     $state$1 = 3;
     break L3;
    } else if (!(($53 | 0) == 69 | ($53 | 0) == 101)) {
     $284 = $51;
     label = 90;
     break L1;
    }
    $278 = $52;
    $state$1 = 5;
    break;
   }
  case 4:
   {
    $130 = HEAP32[$c >> 2] | 0;
    $131 = HEAP8[$130 >> 0] | 0;
    switch ($131 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    case 69:
    case 101:
     {
      $278 = $131;
      $state$1 = 5;
      break L3;
      break;
     }
    default:
     {
      $284 = $130;
      label = 90;
      break L1;
     }
    }
    $278 = $131;
    $state$1 = 4;
    break;
   }
  case 5:
   {
    $134 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($134 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    case 45:
    case 43:
     {
      $278 = $134;
      $state$1 = 6;
      break L3;
      break;
     }
    default:
     {
      label = 46;
      break L1;
     }
    }
    $278 = $134;
    $state$1 = 7;
    break;
   }
  case 6:
   {
    $205 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($205 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $278 = $205;
     $state$1 = 7;
    } else {
     label = 67;
     break L1;
    }
    break;
   }
  case 7:
   {
    $275 = HEAP32[$c >> 2] | 0;
    $276 = HEAP8[$275 >> 0] | 0;
    if ((($276 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $278 = $276;
     $state$1 = 7;
    } else {
     $284 = $275;
     label = 90;
     break L1;
    }
    break;
   }
  default:
   {
    $278 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    $state$1 = $state$0;
   }
  } while (0);
  __THREW__ = 0;
  invoke_vii(44, $agg$result | 0, $278 | 0);
  $279 = __THREW__;
  __THREW__ = 0;
  if ($279 & 1) {
   label = 35;
   break;
  }
  HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 1;
  $state$0 = $state$1;
 }
 if ((label | 0) == 6) {
  $13 = ___cxa_allocate_exception(40) | 0;
  __THREW__ = 0;
  invoke_viii(3, $6 | 0, 8, 19);
  $14 = __THREW__;
  __THREW__ = 0;
  do if ($14 & 1) {
   $47 = ___cxa_find_matching_catch() | 0;
   $$01167 = tempRet0;
   $$01366 = $47;
  } else {
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $filename | 0);
   $16 = __THREW__;
   __THREW__ = 0;
   if ($16 & 1) $$09 = 1; else {
    $19 = $begin;
    $24 = HEAP32[$19 + 4 >> 2] | 0;
    $25 = $13 + 12 | 0;
    HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$25 + 4 >> 2] = $24;
    $30 = $begin;
    $35 = HEAP32[$30 + 4 >> 2] | 0;
    $36 = $13 + 20 | 0;
    HEAP32[$36 >> 2] = HEAP32[$30 >> 2];
    HEAP32[$36 + 4 >> 2] = $35;
    __THREW__ = 0;
    invoke_vii(40, $13 + 28 | 0, $6 | 0);
    $41 = __THREW__;
    __THREW__ = 0;
    if ($41 & 1) {
     $43 = ___cxa_find_matching_catch() | 0;
     $44 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $$01167 = $44;
     $$01366 = $43;
     break;
    }
    __THREW__ = 0;
    invoke_viii(4, $13 | 0, 48, 176);
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) $$09 = 0; else {}
   }
   $49 = ___cxa_find_matching_catch() | 0;
   $50 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   if ($$09) {
    $$01167 = $50;
    $$01366 = $49;
   } else {
    $$7 = $50;
    $$720 = $49;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   }
  } while (0);
  ___cxa_free_exception($13 | 0);
  $$7 = $$01167;
  $$720 = $$01366;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  ___resumeException($$720 | 0);
 } else if ((label | 0) == 20) {
  $60 = $ss + 64 | 0;
  $61 = $ss + 8 | 0;
  HEAP32[$61 >> 2] = 592;
  $62 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 740;
  HEAP32[$60 >> 2] = 760;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $62 | 0);
  $65 = __THREW__;
  __THREW__ = 0;
  if ($65 & 1) {
   $77 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $77;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 572;
   HEAP32[$60 >> 2] = 612;
   HEAP32[$61 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $62 | 0);
   $69 = __THREW__;
   __THREW__ = 0;
   do if ($69 & 1) {
    $79 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $79;
   } else {
    HEAP32[$62 >> 2] = 904;
    $71 = $ss + 44 | 0;
    HEAP32[$71 + 0 >> 2] = 0;
    HEAP32[$71 + 4 >> 2] = 0;
    HEAP32[$71 + 8 >> 2] = 0;
    HEAP32[$71 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$5 + 0 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $62 | 0, $5 | 0);
    $73 = __THREW__;
    __THREW__ = 0;
    if ($73 & 1) {
     $75 = ___cxa_find_matching_catch() | 0;
     $76 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($62);
     $eh$lpad$body$i$index2Z2D = $76;
     $eh$lpad$body$i$indexZ2D = $75;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __THREW__ = 0;
    $81 = invoke_iiii(25, $61 | 0, 56, 47) | 0;
    $82 = __THREW__;
    __THREW__ = 0;
    L31 : do if ($82 & 1) label = 37; else {
     HEAP8[$4 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $81 | 0, $4 | 0, 1) | 0;
     $86 = __THREW__;
     __THREW__ = 0;
     if ($86 & 1) label = 37; else {
      $88 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $7 | 0, $62 | 0);
      $89 = __THREW__;
      __THREW__ = 0;
      do if ($89 & 1) {
       $126 = ___cxa_find_matching_catch() | 0;
       $$11271 = tempRet0;
       $$11470 = $126;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $88 | 0, $filename | 0);
       $91 = __THREW__;
       __THREW__ = 0;
       if ($91 & 1) $$07 = 1; else {
        $94 = $begin;
        $99 = HEAP32[$94 + 4 >> 2] | 0;
        $100 = $88 + 12 | 0;
        HEAP32[$100 >> 2] = HEAP32[$94 >> 2];
        HEAP32[$100 + 4 >> 2] = $99;
        $105 = $begin;
        $110 = HEAP32[$105 + 4 >> 2] | 0;
        $111 = $88 + 20 | 0;
        HEAP32[$111 >> 2] = HEAP32[$105 >> 2];
        HEAP32[$111 + 4 >> 2] = $110;
        __THREW__ = 0;
        invoke_vii(40, $88 + 28 | 0, $7 | 0);
        $116 = __THREW__;
        __THREW__ = 0;
        if ($116 & 1) {
         $118 = ___cxa_find_matching_catch() | 0;
         $119 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($88);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
         $$11271 = $119;
         $$11470 = $118;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $88 | 0, 48, 176);
        $120 = __THREW__;
        __THREW__ = 0;
        if ($120 & 1) $$07 = 0; else {}
       }
       $128 = ___cxa_find_matching_catch() | 0;
       $129 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
       if ($$07) {
        $$11271 = $129;
        $$11470 = $128;
       } else {
        $$2 = $129;
        $$215 = $128;
        break L31;
       }
      } while (0);
      ___cxa_free_exception($88 | 0);
      $$2 = $$11271;
      $$215 = $$11470;
     }
    } while (0);
    if ((label | 0) == 37) {
     $124 = ___cxa_find_matching_catch() | 0;
     $$2 = tempRet0;
     $$215 = $124;
    }
    HEAP32[$ss >> 2] = 572;
    HEAP32[$60 >> 2] = 612;
    HEAP32[$61 >> 2] = 592;
    HEAP32[$62 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($62);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($60);
    $$7 = $$2;
    $$720 = $$215;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($60);
  $eh$lpad$body22$index9Z2D = $$0$i;
  $eh$lpad$body22$indexZ2D = $$01$i;
 } else if ((label | 0) == 35) {
  $122 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body22$index9Z2D = tempRet0;
  $eh$lpad$body22$indexZ2D = $122;
 } else if ((label | 0) == 46) {
  $136 = $ss1 + 64 | 0;
  $137 = $ss1 + 8 | 0;
  HEAP32[$137 >> 2] = 592;
  $138 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 740;
  HEAP32[$136 >> 2] = 760;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $138 | 0);
  $141 = __THREW__;
  __THREW__ = 0;
  if ($141 & 1) {
   $153 = ___cxa_find_matching_catch() | 0;
   $$0$i34 = tempRet0;
   $$01$i33 = $153;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 572;
   HEAP32[$136 >> 2] = 612;
   HEAP32[$137 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $138 | 0);
   $145 = __THREW__;
   __THREW__ = 0;
   do if ($145 & 1) {
    $155 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i31$index16Z2D = tempRet0;
    $eh$lpad$body$i31$indexZ2D = $155;
   } else {
    HEAP32[$138 >> 2] = 904;
    $147 = $ss1 + 44 | 0;
    HEAP32[$147 + 0 >> 2] = 0;
    HEAP32[$147 + 4 >> 2] = 0;
    HEAP32[$147 + 8 >> 2] = 0;
    HEAP32[$147 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$3 + 0 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $138 | 0, $3 | 0);
    $149 = __THREW__;
    __THREW__ = 0;
    if ($149 & 1) {
     $151 = ___cxa_find_matching_catch() | 0;
     $152 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($138);
     $eh$lpad$body$i31$index16Z2D = $152;
     $eh$lpad$body$i31$indexZ2D = $151;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    $157 = invoke_iiii(25, $137 | 0, 104, 37) | 0;
    $158 = __THREW__;
    __THREW__ = 0;
    L76 : do if ($158 & 1) label = 61; else {
     HEAP8[$2 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $157 | 0, $2 | 0, 1) | 0;
     $162 = __THREW__;
     __THREW__ = 0;
     if ($162 & 1) label = 61; else {
      $164 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $8 | 0, $138 | 0);
      $165 = __THREW__;
      __THREW__ = 0;
      do if ($165 & 1) {
       $200 = ___cxa_find_matching_catch() | 0;
       $$31674 = $200;
       $$375 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $164 | 0, $filename | 0);
       $167 = __THREW__;
       __THREW__ = 0;
       if ($167 & 1) $$05 = 1; else {
        $170 = $begin;
        $175 = HEAP32[$170 + 4 >> 2] | 0;
        $176 = $164 + 12 | 0;
        HEAP32[$176 >> 2] = HEAP32[$170 >> 2];
        HEAP32[$176 + 4 >> 2] = $175;
        $181 = $begin;
        $186 = HEAP32[$181 + 4 >> 2] | 0;
        $187 = $164 + 20 | 0;
        HEAP32[$187 >> 2] = HEAP32[$181 >> 2];
        HEAP32[$187 + 4 >> 2] = $186;
        __THREW__ = 0;
        invoke_vii(40, $164 + 28 | 0, $8 | 0);
        $192 = __THREW__;
        __THREW__ = 0;
        if ($192 & 1) {
         $194 = ___cxa_find_matching_catch() | 0;
         $195 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
         $$31674 = $194;
         $$375 = $195;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $164 | 0, 48, 176);
        $196 = __THREW__;
        __THREW__ = 0;
        if ($196 & 1) $$05 = 0; else {}
       }
       $202 = ___cxa_find_matching_catch() | 0;
       $203 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       if ($$05) {
        $$31674 = $202;
        $$375 = $203;
       } else {
        $$4 = $203;
        $$417 = $202;
        break L76;
       }
      } while (0);
      ___cxa_free_exception($164 | 0);
      $$4 = $$375;
      $$417 = $$31674;
     }
    } while (0);
    if ((label | 0) == 61) {
     $198 = ___cxa_find_matching_catch() | 0;
     $$4 = tempRet0;
     $$417 = $198;
    }
    HEAP32[$ss1 >> 2] = 572;
    HEAP32[$136 >> 2] = 612;
    HEAP32[$137 >> 2] = 592;
    HEAP32[$138 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($138);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($136);
    $$7 = $$4;
    $$720 = $$417;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i34 = $eh$lpad$body$i31$index16Z2D;
   $$01$i33 = $eh$lpad$body$i31$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($136);
  $eh$lpad$body22$index9Z2D = $$0$i34;
  $eh$lpad$body22$indexZ2D = $$01$i33;
 } else if ((label | 0) == 67) {
  $207 = $ss2 + 64 | 0;
  $208 = $ss2 + 8 | 0;
  HEAP32[$208 >> 2] = 592;
  $209 = $ss2 + 12 | 0;
  HEAP32[$ss2 >> 2] = 740;
  HEAP32[$207 >> 2] = 760;
  HEAP32[$ss2 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss2 + 64 | 0, $209 | 0);
  $212 = __THREW__;
  __THREW__ = 0;
  if ($212 & 1) {
   $224 = ___cxa_find_matching_catch() | 0;
   $$0$i52 = tempRet0;
   $$01$i51 = $224;
  } else {
   HEAP32[$ss2 + 136 >> 2] = 0;
   HEAP32[$ss2 + 140 >> 2] = -1;
   HEAP32[$ss2 >> 2] = 572;
   HEAP32[$207 >> 2] = 612;
   HEAP32[$208 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $209 | 0);
   $216 = __THREW__;
   __THREW__ = 0;
   do if ($216 & 1) {
    $226 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i49$index21Z2D = tempRet0;
    $eh$lpad$body$i49$indexZ2D = $226;
   } else {
    HEAP32[$209 >> 2] = 904;
    $218 = $ss2 + 44 | 0;
    HEAP32[$218 + 0 >> 2] = 0;
    HEAP32[$218 + 4 >> 2] = 0;
    HEAP32[$218 + 8 >> 2] = 0;
    HEAP32[$218 + 12 >> 2] = 0;
    HEAP32[$ss2 + 60 >> 2] = 24;
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $209 | 0, $1 | 0);
    $220 = __THREW__;
    __THREW__ = 0;
    if ($220 & 1) {
     $222 = ___cxa_find_matching_catch() | 0;
     $223 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($218);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($209);
     $eh$lpad$body$i49$index21Z2D = $223;
     $eh$lpad$body$i49$indexZ2D = $222;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __THREW__ = 0;
    $228 = invoke_iiii(25, $208 | 0, 144, 47) | 0;
    $229 = __THREW__;
    __THREW__ = 0;
    L106 : do if ($229 & 1) label = 82; else {
     HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $228 | 0, $0 | 0, 1) | 0;
     $233 = __THREW__;
     __THREW__ = 0;
     if ($233 & 1) label = 82; else {
      $235 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $9 | 0, $209 | 0);
      $236 = __THREW__;
      __THREW__ = 0;
      do if ($236 & 1) {
       $271 = ___cxa_find_matching_catch() | 0;
       $$51878 = $271;
       $$579 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $235 | 0, $filename | 0);
       $238 = __THREW__;
       __THREW__ = 0;
       if ($238 & 1) $$0 = 1; else {
        $241 = $begin;
        $246 = HEAP32[$241 + 4 >> 2] | 0;
        $247 = $235 + 12 | 0;
        HEAP32[$247 >> 2] = HEAP32[$241 >> 2];
        HEAP32[$247 + 4 >> 2] = $246;
        $252 = $begin;
        $257 = HEAP32[$252 + 4 >> 2] | 0;
        $258 = $235 + 20 | 0;
        HEAP32[$258 >> 2] = HEAP32[$252 >> 2];
        HEAP32[$258 + 4 >> 2] = $257;
        __THREW__ = 0;
        invoke_vii(40, $235 + 28 | 0, $9 | 0);
        $263 = __THREW__;
        __THREW__ = 0;
        if ($263 & 1) {
         $265 = ___cxa_find_matching_catch() | 0;
         $266 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($235);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
         $$51878 = $265;
         $$579 = $266;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $235 | 0, 48, 176);
        $267 = __THREW__;
        __THREW__ = 0;
        if ($267 & 1) $$0 = 0; else {}
       }
       $273 = ___cxa_find_matching_catch() | 0;
       $274 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       if ($$0) {
        $$51878 = $273;
        $$579 = $274;
       } else {
        $$6 = $274;
        $$619 = $273;
        break L106;
       }
      } while (0);
      ___cxa_free_exception($235 | 0);
      $$6 = $$579;
      $$619 = $$51878;
     }
    } while (0);
    if ((label | 0) == 82) {
     $269 = ___cxa_find_matching_catch() | 0;
     $$6 = tempRet0;
     $$619 = $269;
    }
    HEAP32[$ss2 >> 2] = 572;
    HEAP32[$207 >> 2] = 612;
    HEAP32[$208 >> 2] = 592;
    HEAP32[$209 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($218);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($209);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($207);
    $$7 = $$6;
    $$720 = $$619;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i52 = $eh$lpad$body$i49$index21Z2D;
   $$01$i51 = $eh$lpad$body$i49$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($207);
  $eh$lpad$body22$index9Z2D = $$0$i52;
  $eh$lpad$body22$indexZ2D = $$01$i51;
 } else if ((label | 0) == 90) {
  HEAP32[$c >> 2] = $284 + -1;
  STACKTOP = sp;
  return;
 }
 $$7 = $eh$lpad$body22$index9Z2D;
 $$720 = $eh$lpad$body22$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 ___resumeException($$720 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $a, $b) {
 $this = $this | 0;
 $loc = $loc | 0;
 $a = $a | 0;
 $b = $b | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$0$i$i$i1$i$i$i$i = 0, $$0$i$i$i1$i$i$i$i$lcssa = 0, $$0$i$i3$i$i$i$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i6$i$i$i$i = 0, $$03 = 0, $$1 = 0, $$1$ph = 0, $$1$ph46 = 0, $$12 = 0, $$14 = 0, $$cast$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$cast$i$i4$i$i$i$i$lcssa = 0, $$idx$val$i17 = 0, $$idx$val28 = 0, $$idx1$val$i$i$i$i$i = 0, $$idx6 = 0, $$idx8 = 0, $$idx8$val = 0, $$idx9 = 0, $$idx9$val = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $104 = 0, $107 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $118 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $131 = 0, $133 = 0, $144 = 0, $152 = 0, $153 = 0, $158 = 0, $16 = 0, $160 = 0, $163 = 0, $165 = 0, $167 = 0, $17 = 0, $172 = 0, $173 = 0, $177 = 0, $178 = 0, $180 = 0, $181 = 0, $182 = 0, $188 = 0, $190 = 0, $201 = 0, $208 = 0, $209 = 0, $211 = 0, $213 = 0, $214 = 0, $215 = 0, $217 = 0, $218 = 0, $220 = 0, $222 = 0, $224 = 0, $225 = 0, $227 = 0, $229 = 0, $232 = 0, $233 = 0, $235 = 0, $238 = 0, $240 = 0, $243 = 0, $25 = 0, $252 = 0, $254 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $261 = 0, $266 = 0, $268 = 0, $273 = 0, $275 = 0, $283 = 0, $284 = 0, $29 = 0, $33 = 0, $36 = 0, $37 = 0, $41 = 0, $42 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $86 = 0, $91 = 0, $92 = 0, $94 = 0, $97 = 0, $__lhs_sz$03$i = 0, $__lp$04$i = 0, $__rp$05$i = 0, $__v$i$i$i = 0, $different$0$off0 = 0, $different$0$off0$ph = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields_a = 0, $fields_b = 0, $i$027 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $this$idx$val$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $__v$i$i$i = sp + 52 | 0;
 $fields_a = sp + 40 | 0;
 $fields_b = sp + 28 | 0;
 $0 = sp;
 $1 = HEAP32[$a >> 2] | 0;
 if (($1 | 0) != (HEAP32[$b >> 2] | 0)) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 switch ($1 | 0) {
 case 16:
  {
   $5 = HEAP32[$a + 8 >> 2] | 0;
   $7 = HEAP32[$b + 8 >> 2] | 0;
   $$idx8 = $5 + 8 | 0;
   $$idx8$val = HEAP32[$$idx8 >> 2] | 0;
   $$idx9 = $5 + 12 | 0;
   $$idx9$val = HEAP32[$$idx9 >> 2] | 0;
   $$idx6 = $7 + 8 | 0;
   if (($$idx9$val - $$idx8$val | 0) != ((HEAP32[$7 + 12 >> 2] | 0) - (HEAP32[$$idx6 >> 2] | 0) | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (($$idx9$val | 0) == ($$idx8$val | 0)) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   }
   $16 = $this + 72 | 0;
   $17 = $this + 56 | 0;
   $$idx$val28 = $$idx8$val;
   $i$027 = 0;
   while (1) {
    $25 = HEAP32[$$idx$val28 + ($i$027 << 2) >> 2] | 0;
    $26 = $25 + 5 | 0;
    if (!(HEAP8[$26 >> 0] | 0)) {
     $29 = $25 + 40 | 0;
     $33 = $25 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($16, $loc, $25, HEAP32[$29 >> 2] | 0, HEAP32[$25 + 44 >> 2] | 0, $33);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$25 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($16);
     $36 = $25 + 8 | 0;
     HEAP32[$36 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$36 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$36 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$36 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     HEAP8[$26 >> 0] = 1;
     HEAP32[$29 >> 2] = 0;
     $37 = $25 + 32 | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($33, HEAP32[$37 >> 2] | 0);
     HEAP32[$25 + 36 >> 2] = 0;
     HEAP32[$33 >> 2] = $37;
     HEAP32[$37 >> 2] = 0;
    }
    $41 = HEAP32[(HEAP32[$$idx6 >> 2] | 0) + ($i$027 << 2) >> 2] | 0;
    $42 = $41 + 5 | 0;
    if (!(HEAP8[$42 >> 0] | 0)) {
     $45 = $41 + 40 | 0;
     $49 = $41 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($16, $loc, $41, HEAP32[$45 >> 2] | 0, HEAP32[$41 + 44 >> 2] | 0, $49);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$41 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($16);
     $52 = $41 + 8 | 0;
     HEAP32[$52 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$52 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$52 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$52 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     HEAP8[$42 >> 0] = 1;
     HEAP32[$45 >> 2] = 0;
     $53 = $41 + 32 | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($49, HEAP32[$53 >> 2] | 0);
     HEAP32[$41 + 36 >> 2] = 0;
     HEAP32[$49 >> 2] = $53;
     HEAP32[$53 >> 2] = 0;
     $$pre$phi37Z2D = $52;
    } else $$pre$phi37Z2D = $41 + 8 | 0;
    $i$027 = $i$027 + 1 | 0;
    if (!(__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $25 + 8 | 0, $$pre$phi37Z2D) | 0)) {
     $$1$ph = 0;
     break;
    }
    $$idx$val28 = HEAP32[$$idx8 >> 2] | 0;
    if ($i$027 >>> 0 >= (HEAP32[$$idx9 >> 2] | 0) - $$idx$val28 >> 2 >>> 0) {
     $$1$ph = 1;
     break;
    }
   }
   $$1 = $$1$ph;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 1:
  {
   $$1 = (HEAP8[$a + 8 >> 0] | 0) == (HEAP8[$b + 8 >> 0] | 0);
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 0:
  {
   $$1 = 1;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 18:
  {
   $69 = HEAP32[$a + 8 >> 2] | 0;
   $71 = HEAP32[$b + 8 >> 2] | 0;
   __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($fields_a, $69);
   __THREW__ = 0;
   invoke_vii(62, $fields_b | 0, $71 | 0);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    $111 = ___cxa_find_matching_catch() | 0;
    $$12 = $111;
    $$14 = tempRet0;
    $$pre$phiZ2D = $fields_a + 4 | 0;
    $252 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $252);
    ___resumeException($$12 | 0);
   }
   L33 : do if ((HEAP32[$fields_a + 8 >> 2] | 0) == (HEAP32[$fields_b + 8 >> 2] | 0)) {
    $79 = HEAP32[$fields_a >> 2] | 0;
    $80 = $fields_a + 4 | 0;
    $81 = HEAP32[$fields_b >> 2] | 0;
    do if (($79 | 0) != ($80 | 0)) {
     $101 = $81;
     $84 = $79;
     $86 = $81;
     $91 = $79;
     while (1) {
      if ((HEAP32[$84 + 16 >> 2] | 0) != (HEAP32[$86 + 16 >> 2] | 0)) {
       label = 81;
       break;
      }
      $92 = HEAP32[$91 + 4 >> 2] | 0;
      if (!$92) {
       $$0$i$i3$i$i$i$i = $91;
       while (1) {
        $97 = HEAP32[$$0$i$i3$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$97 >> 2] | 0) == ($$0$i$i3$i$i$i$i | 0)) {
         $$cast$i$i4$i$i$i$i$lcssa = $97;
         break;
        } else $$0$i$i3$i$i$i$i = $97;
       }
       $$01$i$i6$i$i$i$i = $$cast$i$i4$i$i$i$i$lcssa;
      } else {
       $$0$i$i$i1$i$i$i$i = $92;
       while (1) {
        $94 = HEAP32[$$0$i$i$i1$i$i$i$i >> 2] | 0;
        if (!$94) {
         $$0$i$i$i1$i$i$i$i$lcssa = $$0$i$i$i1$i$i$i$i;
         break;
        } else $$0$i$i$i1$i$i$i$i = $94;
       }
       $$01$i$i6$i$i$i$i = $$0$i$i$i1$i$i$i$i$lcssa;
      }
      $102 = HEAP32[$101 + 4 >> 2] | 0;
      if (!$102) {
       $$0$i$i$i$i$i$i = $101;
       while (1) {
        $107 = HEAP32[$$0$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$107 >> 2] | 0) == ($$0$i$i$i$i$i$i | 0)) {
         $$cast$i$i$i$i$i$i$lcssa = $107;
         break;
        } else $$0$i$i$i$i$i$i = $107;
       }
       $$01$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i$i$i$i = $102;
       while (1) {
        $104 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
        if (!$104) {
         $$0$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i;
         break;
        } else $$0$i$i$i$i$i$i$i = $104;
       }
       $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$lcssa;
      }
      if (($$01$i$i6$i$i$i$i | 0) == ($80 | 0)) {
       label = 41;
       break;
      } else {
       $101 = $$01$i$i$i$i$i$i;
       $84 = $$01$i$i6$i$i$i$i;
       $86 = $$01$i$i$i$i$i$i;
       $91 = $$01$i$i6$i$i$i$i;
      }
     }
     if ((label | 0) == 41) break; else if ((label | 0) == 81) {
      $$0 = 0;
      $$pre$phi39Z2D = $80;
      break L33;
     }
    } while (0);
    $117 = $this + 72 | 0;
    __THREW__ = 0;
    invoke_vii(40, $0 | 0, $loc | 0);
    $118 = __THREW__;
    __THREW__ = 0;
    L65 : do if ($118 & 1) {
     $115 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $115;
     $lpad$phi$index2 = tempRet0;
     label = 40;
    } else {
     $120 = $0 + 12 | 0;
     $121 = $loc + 12 | 0;
     HEAP32[$120 + 0 >> 2] = HEAP32[$121 + 0 >> 2];
     HEAP32[$120 + 4 >> 2] = HEAP32[$121 + 4 >> 2];
     HEAP32[$120 + 8 >> 2] = HEAP32[$121 + 8 >> 2];
     HEAP32[$120 + 12 >> 2] = HEAP32[$121 + 12 >> 2];
     $122 = $this + 84 | 0;
     $123 = $this + 88 | 0;
     $124 = HEAP32[$123 >> 2] | 0;
     $125 = $this + 92 | 0;
     $126 = HEAP32[$125 >> 2] | 0;
     L68 : do if ($124 >>> 0 < $126 >>> 0) {
      if (!$124) $152 = 0; else {
       HEAP32[$124 >> 2] = 7;
       HEAP32[$124 + 4 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(40, $124 + 8 | 0, $0 | 0);
       $131 = __THREW__;
       __THREW__ = 0;
       if ($131 & 1) {
        label = 69;
        break;
       }
       $133 = $124 + 20 | 0;
       HEAP32[$133 + 0 >> 2] = HEAP32[$120 + 0 >> 2];
       HEAP32[$133 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
       HEAP32[$133 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
       HEAP32[$133 + 12 >> 2] = HEAP32[$120 + 12 >> 2];
       HEAP8[$124 + 36 >> 0] = 0;
       HEAP32[$124 + 72 >> 2] = 0;
       HEAP32[$124 + 80 >> 2] = 0;
       HEAP32[$124 + 84 >> 2] = 0;
       HEAP32[$124 + 76 >> 2] = $124 + 80;
       HEAP32[$124 + 96 >> 2] = 0;
       HEAP32[$124 + 100 >> 2] = 0;
       HEAP32[$124 + 92 >> 2] = $124 + 96;
       $144 = $124 + 104 | 0;
       HEAP32[$124 + 132 >> 2] = 0;
       HEAP32[$124 + 136 >> 2] = 0;
       HEAP32[$144 + 0 >> 2] = 0;
       HEAP32[$144 + 4 >> 2] = 0;
       HEAP32[$144 + 8 >> 2] = 0;
       HEAP32[$144 + 12 >> 2] = 0;
       HEAP32[$144 + 16 >> 2] = 0;
       HEAP32[$144 + 20 >> 2] = 0;
       HEAP32[$124 + 128 >> 2] = $124 + 132;
       HEAP32[$124 + 40 >> 2] = 0;
       HEAP32[$124 + 56 >> 2] = 0;
       $152 = HEAP32[$123 >> 2] | 0;
      }
      HEAP32[$123 >> 2] = $152 + 144;
      label = 61;
     } else {
      $153 = $this + 92 | 0;
      $this$idx2$val$i$i$i = HEAP32[$122 >> 2] | 0;
      $158 = (($124 - $this$idx2$val$i$i$i | 0) / 144 | 0) + 1 | 0;
      if ($158 >>> 0 > 29826161) {
       __THREW__ = 0;
       invoke_vi(179, $122 | 0);
       $160 = __THREW__;
       __THREW__ = 0;
       if ($160 & 1) {
        label = 69;
        break;
       }
       $$idx1$val$i$i$i$i$i = HEAP32[$125 >> 2] | 0;
       $this$idx$val$i$i$i = HEAP32[$122 >> 2] | 0;
      } else {
       $$idx1$val$i$i$i$i$i = $126;
       $this$idx$val$i$i$i = $this$idx2$val$i$i$i;
      }
      $163 = $this$idx$val$i$i$i;
      $165 = ($$idx1$val$i$i$i$i$i - $163 | 0) / 144 | 0;
      if ($165 >>> 0 < 14913080) {
       $167 = $165 << 1;
       $$0$i$i$i$i = $167 >>> 0 < $158 >>> 0 ? $158 : $167;
      } else $$0$i$i$i$i = 29826161;
      $172 = ((HEAP32[$123 >> 2] | 0) - $163 | 0) / 144 | 0;
      $173 = $__v$i$i$i + 12 | 0;
      HEAP32[$173 >> 2] = 0;
      HEAP32[$__v$i$i$i + 16 >> 2] = $153;
      if (!$$0$i$i$i$i) $180 = 0; else {
       __THREW__ = 0;
       $177 = invoke_ii(67, $$0$i$i$i$i * 144 | 0) | 0;
       $178 = __THREW__;
       __THREW__ = 0;
       if ($178 & 1) {
        label = 69;
        break;
       }
       $180 = $177;
      }
      HEAP32[$__v$i$i$i >> 2] = $180;
      $181 = $180 + ($172 * 144 | 0) | 0;
      $182 = $__v$i$i$i + 8 | 0;
      HEAP32[$182 >> 2] = $181;
      HEAP32[$__v$i$i$i + 4 >> 2] = $181;
      HEAP32[$173 >> 2] = $180 + ($$0$i$i$i$i * 144 | 0);
      do if ($181) {
       HEAP32[$181 >> 2] = 7;
       HEAP32[$180 + ($172 * 144 | 0) + 4 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(40, $180 + ($172 * 144 | 0) + 8 | 0, $0 | 0);
       $188 = __THREW__;
       __THREW__ = 0;
       if ($188 & 1) {
        $208 = ___cxa_find_matching_catch() | 0;
        $209 = tempRet0;
        __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
        $eh$lpad$body$index7Z2D = $209;
        $eh$lpad$body$indexZ2D = $208;
        break L68;
       } else {
        $190 = $180 + ($172 * 144 | 0) + 20 | 0;
        HEAP32[$190 + 0 >> 2] = HEAP32[$120 + 0 >> 2];
        HEAP32[$190 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
        HEAP32[$190 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
        HEAP32[$190 + 12 >> 2] = HEAP32[$120 + 12 >> 2];
        HEAP8[$180 + ($172 * 144 | 0) + 36 >> 0] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 72 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 80 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 84 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 76 >> 2] = $180 + ($172 * 144 | 0) + 80;
        HEAP32[$180 + ($172 * 144 | 0) + 96 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 100 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 92 >> 2] = $180 + ($172 * 144 | 0) + 96;
        $201 = $180 + ($172 * 144 | 0) + 104 | 0;
        HEAP32[$180 + ($172 * 144 | 0) + 132 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 136 >> 2] = 0;
        HEAP32[$201 + 0 >> 2] = 0;
        HEAP32[$201 + 4 >> 2] = 0;
        HEAP32[$201 + 8 >> 2] = 0;
        HEAP32[$201 + 12 >> 2] = 0;
        HEAP32[$201 + 16 >> 2] = 0;
        HEAP32[$201 + 20 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 128 >> 2] = $180 + ($172 * 144 | 0) + 132;
        HEAP32[$180 + ($172 * 144 | 0) + 40 >> 2] = 0;
        HEAP32[$180 + ($172 * 144 | 0) + 56 >> 2] = 0;
        break;
       }
      } while (0);
      HEAP32[$182 >> 2] = $180 + (($172 + 1 | 0) * 144 | 0);
      __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($122, $__v$i$i$i);
      __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
      label = 61;
     } while (0);
     if ((label | 0) == 61) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $211 = HEAP32[$fields_a >> 2] | 0;
      do if (($211 | 0) == ($80 | 0)) $different$0$off0 = 1; else {
       $213 = $this + 56 | 0;
       $215 = $211;
       while (1) {
        $214 = $215 + 16 | 0;
        __THREW__ = 0;
        $217 = invoke_iiiii(8, $this | 0, $loc | 0, $69 | 0, HEAP32[$214 >> 2] | 0) | 0;
        $218 = __THREW__;
        __THREW__ = 0;
        if ($218 & 1) {
         label = 38;
         break;
        }
        __THREW__ = 0;
        invoke_vii(60, $this | 0, $217 | 0);
        $220 = __THREW__;
        __THREW__ = 0;
        if ($220 & 1) {
         label = 38;
         break;
        }
        __ZN12_GLOBAL__N_15Stack3popEv($117);
        $222 = (HEAP32[$123 >> 2] | 0) + -104 | 0;
        HEAP32[$222 + 0 >> 2] = HEAP32[$213 + 0 >> 2];
        HEAP32[$222 + 4 >> 2] = HEAP32[$213 + 4 >> 2];
        HEAP32[$222 + 8 >> 2] = HEAP32[$213 + 8 >> 2];
        HEAP32[$222 + 12 >> 2] = HEAP32[$213 + 12 >> 2];
        __THREW__ = 0;
        $224 = invoke_iiiii(8, $this | 0, $loc | 0, $71 | 0, HEAP32[$214 >> 2] | 0) | 0;
        $225 = __THREW__;
        __THREW__ = 0;
        if ($225 & 1) {
         label = 38;
         break;
        }
        __THREW__ = 0;
        invoke_vii(60, $this | 0, $224 | 0);
        $227 = __THREW__;
        __THREW__ = 0;
        if ($227 & 1) {
         label = 38;
         break;
        }
        __ZN12_GLOBAL__N_15Stack3popEv($117);
        $229 = (HEAP32[$123 >> 2] | 0) + -88 | 0;
        HEAP32[$229 + 0 >> 2] = HEAP32[$213 + 0 >> 2];
        HEAP32[$229 + 4 >> 2] = HEAP32[$213 + 4 >> 2];
        HEAP32[$229 + 8 >> 2] = HEAP32[$213 + 8 >> 2];
        HEAP32[$229 + 12 >> 2] = HEAP32[$213 + 12 >> 2];
        $$idx$val$i17 = HEAP32[$123 >> 2] | 0;
        __THREW__ = 0;
        $232 = invoke_iiiii(9, $this | 0, $loc | 0, $$idx$val$i17 + -104 | 0, $$idx$val$i17 + -88 | 0) | 0;
        $233 = __THREW__;
        __THREW__ = 0;
        if ($233 & 1) {
         label = 38;
         break;
        }
        if (!$232) {
         $different$0$off0$ph = 0;
         label = 79;
         break;
        }
        $238 = HEAP32[$215 + 4 >> 2] | 0;
        if (!$238) {
         $$0$i$i = $215;
         while (1) {
          $243 = HEAP32[$$0$i$i + 8 >> 2] | 0;
          if ((HEAP32[$243 >> 2] | 0) == ($$0$i$i | 0)) {
           $$cast$i$i$lcssa = $243;
           break;
          } else $$0$i$i = $243;
         }
         $$01$i$i = $$cast$i$i$lcssa;
        } else {
         $$0$i$i$i = $238;
         while (1) {
          $240 = HEAP32[$$0$i$i$i >> 2] | 0;
          if (!$240) {
           $$0$i$i$i$lcssa = $$0$i$i$i;
           break;
          } else $$0$i$i$i = $240;
         }
         $$01$i$i = $$0$i$i$i$lcssa;
        }
        if (($$01$i$i | 0) == ($80 | 0)) {
         $different$0$off0$ph = 1;
         label = 79;
         break;
        } else $215 = $$01$i$i;
       }
       if ((label | 0) == 38) {
        $113 = ___cxa_find_matching_catch() | 0;
        $lpad$phi$index = $113;
        $lpad$phi$index2 = tempRet0;
        label = 40;
        break L65;
       } else if ((label | 0) == 79) {
        $different$0$off0 = $different$0$off0$ph;
        break;
       }
      } while (0);
      __ZN12_GLOBAL__N_15Stack3popEv($117);
      $$0 = $different$0$off0;
      $$pre$phi39Z2D = $80;
      break L33;
     } else if ((label | 0) == 69) {
      $235 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index7Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $235;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$01 = $eh$lpad$body$indexZ2D;
     $$03 = $eh$lpad$body$index7Z2D;
    } while (0);
    if ((label | 0) == 40) {
     $$01 = $lpad$phi$index;
     $$03 = $lpad$phi$index2;
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
    $$12 = $$01;
    $$14 = $$03;
    $$pre$phiZ2D = $80;
    $252 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $252);
    ___resumeException($$12 | 0);
   } else {
    $$0 = 0;
    $$pre$phi39Z2D = $fields_a + 4 | 0;
   } while (0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, HEAP32[$$pre$phi39Z2D >> 2] | 0);
   $$1 = $$0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 2:
  {
   $$1 = +HEAPF64[$a + 8 >> 3] == +HEAPF64[$b + 8 >> 3];
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 19:
  {
   $254 = HEAP32[$a + 8 >> 2] | 0;
   $256 = HEAP32[$b + 8 >> 2] | 0;
   $257 = $254 + 8 | 0;
   $258 = $256 + 8 | 0;
   $259 = HEAP8[$257 >> 0] | 0;
   $261 = ($259 & 1) == 0;
   if ($261) $273 = ($259 & 255) >>> 1; else $273 = HEAP32[$254 + 12 >> 2] | 0;
   $266 = HEAP8[$258 >> 0] | 0;
   $268 = ($266 & 1) == 0;
   if ($268) $275 = ($266 & 255) >>> 1; else $275 = HEAP32[$256 + 12 >> 2] | 0;
   if (($273 | 0) != ($275 | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if ($261) $283 = $257 + 1 | 0; else $283 = HEAP32[$254 + 16 >> 2] | 0;
   if ($268) $284 = $258 + 1 | 0; else $284 = HEAP32[$256 + 16 >> 2] | 0;
   if (!$261) {
    $$1 = (_memcmp($283, $284, $273) | 0) == 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (!$273) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   }
   $__lhs_sz$03$i = $273;
   $__lp$04$i = $283;
   $__rp$05$i = $284;
   while (1) {
    if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) {
     $$1$ph46 = 0;
     break;
    }
    $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
    if (!$__lhs_sz$03$i) {
     $$1$ph46 = 1;
     break;
    } else {
     $__lp$04$i = $__lp$04$i + 1 | 0;
     $__rp$05$i = $__rp$05$i + 1 | 0;
    }
   }
   $$1 = $$1$ph46;
   STACKTOP = sp;
   return $$1 | 0;
  }
 default:
  {
   $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 }
 return 0;
}

function __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this, $loc, $context, $self, $offset, $up_values) {
 $this = $this | 0;
 $loc = $loc | 0;
 $context = $context | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $up_values = $up_values | 0;
 var $$$i$i$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i18 = 0, $$0$i$i$i$i18$lcssa = 0, $$0$i$i$i10$i$i$i = 0, $$0$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i19 = 0, $$0$i$i12$i$i$i = 0, $$0$i$i26$i$i$i = 0, $$0$i$i7$i$i$i = 0, $$0$i$i8$i$i$i = 0, $$0$i$i8$i$i$i$be = 0, $$0$i$i8$i$i$i$lcssa = 0, $$0$i1$i$i$i$i = 0, $$0$i1$i$i$i$i$be = 0, $$0$i1$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i15$i$i$i = 0, $$0121 = 0, $$0122 = 0, $$02 = 0, $$023 = 0, $$024 = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i13$i$i$i$lcssa = 0, $$idx$val$i = 0, $$idx$val$i$lcssa = 0, $$idx$val$i13 = 0, $$idx$val$i132037 = 0, $$idx$val$i9 = 0, $$idx1$val$i$i$i$i = 0, $$idx2$i = 0, $$idx2$val$i = 0, $$idx3$i = 0, $$idx3$val$i = 0, $$lcssa = 0, $$lcssa67 = 0, $$lcssa68 = 0, $$lcssa70 = 0, $$lcssa71 = 0, $$lcssa73 = 0, $$lcssa74 = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $109 = 0, $110 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $123 = 0, $125 = 0, $126 = 0, $137 = 0, $144 = 0, $152 = 0, $154 = 0, $155 = 0, $158 = 0, $159 = 0, $163 = 0, $166 = 0, $169 = 0, $173 = 0, $177 = 0, $178 = 0, $18 = 0, $180 = 0, $183 = 0, $185 = 0, $188 = 0, $192 = 0, $195 = 0, $197 = 0, $20 = 0, $200 = 0, $202 = 0, $203 = 0, $206 = 0, $208 = 0, $211 = 0, $215 = 0, $217 = 0, $220 = 0, $225 = 0, $226 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $235 = 0, $237 = 0, $238 = 0, $240 = 0, $242 = 0, $247 = 0, $248 = 0, $25 = 0, $254 = 0, $256 = 0, $259 = 0, $263 = 0, $265 = 0, $268 = 0, $27 = 0, $275 = 0, $28 = 0, $281 = 0, $283 = 0, $286 = 0, $29 = 0, $290 = 0, $4 = 0, $44 = 0, $47 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $71 = 0, $72 = 0, $83 = 0, $90 = 0, $91 = 0, $97 = 0, $__cache$017$i$i$i = 0, $__cache$017$i$i$i$lcssa = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0316$i$i$i = 0, $__first$04$ph$i$i$i = 0, $__first$0414$i$i$i = 0, $__nd$0$be$in$i$i$i$i$i = 0, $__nd$0$be$in$i$i23$i$i$i = 0, $__nd$0$i$i$i$i$i = 0, $__nd$0$i$i$i$i$i$lcssa = 0, $__nd$0$i$i$i$i$i$lcssa66 = 0, $__nd$0$i$i20$i$i$i = 0, $__nd$0$i$i20$i$i$i$lcssa = 0, $__nd$0$i$i20$i$i$i$lcssa69 = 0, $__t$idx$val$i$i = 0, $__v$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i18$i$i$i = 0, $i$0$i = 0, $i$0$i$lcssa75 = 0, $i$0$in$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i49 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp + 12 | 0;
 $0 = sp;
 $$idx2$i = $this + 12 | 0;
 $$idx2$val$i = HEAP32[$$idx2$i >> 2] | 0;
 $$idx3$i = $this + 16 | 0;
 $$idx3$val$i = HEAP32[$$idx3$i >> 2] | 0;
 $4 = ($$idx3$val$i - $$idx2$val$i | 0) / 144 | 0;
 $i$0$in$i = $4;
 while (1) {
  $i$0$i = $i$0$in$i + -1 | 0;
  if (($i$0$i | 0) <= -1) {
   label = 16;
   break;
  }
  $7 = HEAP32[$$idx2$val$i + ($i$0$i * 144 | 0) >> 2] | 0;
  if (($7 | 0) == 5) {
   $i$0$i$lcssa75 = $i$0$i;
   label = 4;
   break;
  } else if (($7 | 0) == 11) $i$0$in$i = $i$0$i; else {
   label = 16;
   break;
  }
 }
 if ((label | 0) == 4) if (!(HEAP8[$$idx2$val$i + ($i$0$i$lcssa75 * 144 | 0) + 36 >> 0] | 0)) {
  if ($4 >>> 0 > $i$0$i$lcssa75 >>> 0) {
   $18 = $$idx3$val$i;
   while (1) {
    $12 = $18 + -144 | 0;
    $20 = $18;
    do {
     HEAP32[$$idx3$i >> 2] = $20 + -144;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($20 + -16 | 0, HEAP32[$20 + -12 >> 2] | 0);
     $25 = HEAP32[$20 + -40 >> 2] | 0;
     $27 = $25;
     if ($25) {
      $28 = $20 + -36 | 0;
      $29 = HEAP32[$28 >> 2] | 0;
      if (($29 | 0) != ($25 | 0)) HEAP32[$28 >> 2] = $29 + (~(($29 + -4 - $27 | 0) >>> 2) << 2);
      __ZdlPv($25);
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($20 + -52 | 0, HEAP32[$20 + -48 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($20 + -68 | 0, HEAP32[$20 + -64 >> 2] | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + -136 | 0);
     $20 = HEAP32[$$idx3$i >> 2] | 0;
    } while (($20 | 0) != ($12 | 0));
    $$idx$val$i = HEAP32[$$idx2$i >> 2] | 0;
    if ((($12 - $$idx$val$i | 0) / 144 | 0) >>> 0 > $i$0$i$lcssa75 >>> 0) $18 = $12; else {
     $$idx$val$i$lcssa = $$idx$val$i;
     $$lcssa74 = $12;
     break;
    }
   }
   $290 = $$lcssa74;
   $this$idx2$val$i$i49 = $$idx$val$i$lcssa;
  } else {
   $290 = $$idx3$val$i;
   $this$idx2$val$i$i49 = $$idx2$val$i;
  }
  $44 = $this + 4 | 0;
  HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + -1;
  $66 = $290;
  $this$idx2$val$i$i = $this$idx2$val$i$i49;
 } else {
  $66 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 } else if ((label | 0) == 16) {
  $66 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 }
 $47 = $this + 4 | 0;
 if ((HEAP32[$47 >> 2] | 0) >>> 0 >= (HEAP32[$this + 8 >> 2] | 0) >>> 0) {
  $52 = ___cxa_allocate_exception(24) | 0;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 36872, 26);
  $53 = __THREW__;
  __THREW__ = 0;
  if ($53 & 1) {
   $59 = ___cxa_find_matching_catch() | 0;
   $$0122 = tempRet0;
   $$024 = $59;
  } else {
   __THREW__ = 0;
   invoke_viiii(16, $52 | 0, $this | 0, $loc | 0, $0 | 0);
   $55 = __THREW__;
   __THREW__ = 0;
   if ($55 & 1) $$02 = 1; else {
    __THREW__ = 0;
    invoke_viii(4, $52 | 0, 36640, 183);
    $57 = __THREW__;
    __THREW__ = 0;
    if ($57 & 1) $$02 = 0; else {}
   }
   $61 = ___cxa_find_matching_catch() | 0;
   $62 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   if ($$02) {
    $$0122 = $62;
    $$024 = $61;
   } else {
    $$0121 = $62;
    $$023 = $61;
    ___resumeException($$023 | 0);
   }
  }
  ___cxa_free_exception($52 | 0);
  $$0121 = $$0122;
  $$023 = $$024;
  ___resumeException($$023 | 0);
 }
 $63 = $this + 12 | 0;
 $64 = $this + 20 | 0;
 $65 = HEAP32[$64 >> 2] | 0;
 if ($66 >>> 0 < $65 >>> 0) {
  if (!$66) $91 = 0; else {
   HEAP32[$66 >> 2] = 5;
   HEAP32[$66 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($66 + 8 | 0, $loc);
   $71 = $66 + 20 | 0;
   $72 = $loc + 12 | 0;
   HEAP32[$71 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
   HEAP32[$71 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
   HEAP32[$71 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
   HEAP32[$71 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
   HEAP8[$66 + 36 >> 0] = 0;
   HEAP32[$66 + 72 >> 2] = 0;
   HEAP32[$66 + 80 >> 2] = 0;
   HEAP32[$66 + 84 >> 2] = 0;
   HEAP32[$66 + 76 >> 2] = $66 + 80;
   HEAP32[$66 + 96 >> 2] = 0;
   HEAP32[$66 + 100 >> 2] = 0;
   HEAP32[$66 + 92 >> 2] = $66 + 96;
   $83 = $66 + 104 | 0;
   HEAP32[$66 + 132 >> 2] = 0;
   HEAP32[$66 + 136 >> 2] = 0;
   HEAP32[$83 + 0 >> 2] = 0;
   HEAP32[$83 + 4 >> 2] = 0;
   HEAP32[$83 + 8 >> 2] = 0;
   HEAP32[$83 + 12 >> 2] = 0;
   HEAP32[$83 + 16 >> 2] = 0;
   HEAP32[$83 + 20 >> 2] = 0;
   HEAP32[$66 + 128 >> 2] = $66 + 132;
   HEAP32[$66 + 40 >> 2] = 0;
   HEAP32[$66 + 56 >> 2] = 0;
   $91 = HEAP32[$$idx3$i >> 2] | 0;
  }
  $90 = $91 + 144 | 0;
  HEAP32[$$idx3$i >> 2] = $90;
  $$idx$val$i9 = $90;
 } else {
  $97 = (($66 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
  if ($97 >>> 0 > 29826161) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($63);
   $$idx1$val$i$i$i$i = HEAP32[$64 >> 2] | 0;
   $this$idx$val$i$i = HEAP32[$63 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i = $65;
   $this$idx$val$i$i = $this$idx2$val$i$i;
  }
  $100 = $this$idx$val$i$i;
  $102 = ($$idx1$val$i$i$i$i - $100 | 0) / 144 | 0;
  if ($102 >>> 0 < 14913080) {
   $104 = $102 << 1;
   $$0$i$i$i = $104 >>> 0 < $97 >>> 0 ? $97 : $104;
  } else $$0$i$i$i = 29826161;
  $109 = ((HEAP32[$$idx3$i >> 2] | 0) - $100 | 0) / 144 | 0;
  $110 = $__v$i$i + 12 | 0;
  HEAP32[$110 >> 2] = 0;
  HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
  if (!$$0$i$i$i) $115 = 0; else $115 = __Znwj($$0$i$i$i * 144 | 0) | 0;
  HEAP32[$__v$i$i >> 2] = $115;
  $116 = $115 + ($109 * 144 | 0) | 0;
  $117 = $__v$i$i + 8 | 0;
  HEAP32[$117 >> 2] = $116;
  HEAP32[$__v$i$i + 4 >> 2] = $116;
  HEAP32[$110 >> 2] = $115 + ($$0$i$i$i * 144 | 0);
  do if ($116) {
   HEAP32[$116 >> 2] = 5;
   HEAP32[$115 + ($109 * 144 | 0) + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(40, $115 + ($109 * 144 | 0) + 8 | 0, $loc | 0);
   $123 = __THREW__;
   __THREW__ = 0;
   if ($123 & 1) {
    $144 = ___cxa_find_matching_catch() | 0;
    __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
    ___resumeException($144 | 0);
   } else {
    $125 = $115 + ($109 * 144 | 0) + 20 | 0;
    $126 = $loc + 12 | 0;
    HEAP32[$125 + 0 >> 2] = HEAP32[$126 + 0 >> 2];
    HEAP32[$125 + 4 >> 2] = HEAP32[$126 + 4 >> 2];
    HEAP32[$125 + 8 >> 2] = HEAP32[$126 + 8 >> 2];
    HEAP32[$125 + 12 >> 2] = HEAP32[$126 + 12 >> 2];
    HEAP8[$115 + ($109 * 144 | 0) + 36 >> 0] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 72 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 80 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 84 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 76 >> 2] = $115 + ($109 * 144 | 0) + 80;
    HEAP32[$115 + ($109 * 144 | 0) + 96 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 100 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 92 >> 2] = $115 + ($109 * 144 | 0) + 96;
    $137 = $115 + ($109 * 144 | 0) + 104 | 0;
    HEAP32[$115 + ($109 * 144 | 0) + 132 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 136 >> 2] = 0;
    HEAP32[$137 + 0 >> 2] = 0;
    HEAP32[$137 + 4 >> 2] = 0;
    HEAP32[$137 + 8 >> 2] = 0;
    HEAP32[$137 + 12 >> 2] = 0;
    HEAP32[$137 + 16 >> 2] = 0;
    HEAP32[$137 + 20 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 128 >> 2] = $115 + ($109 * 144 | 0) + 132;
    HEAP32[$115 + ($109 * 144 | 0) + 40 >> 2] = 0;
    HEAP32[$115 + ($109 * 144 | 0) + 56 >> 2] = 0;
    break;
   }
  } while (0);
  HEAP32[$117 >> 2] = $115 + (($109 + 1 | 0) * 144 | 0);
  __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($63, $__v$i$i);
  __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
  $$idx$val$i9 = HEAP32[$$idx3$i >> 2] | 0;
 }
 HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 1;
 HEAP32[$$idx$val$i9 + -28 >> 2] = $context;
 HEAP32[$$idx$val$i9 + -24 >> 2] = $self;
 HEAP32[$$idx$val$i9 + -20 >> 2] = $offset;
 $152 = $$idx$val$i9 + -16 | 0;
 L59 : do if (($152 | 0) != ($up_values | 0)) {
  $__t$idx$val$i$i = HEAP32[$up_values >> 2] | 0;
  $154 = $up_values + 4 | 0;
  $155 = $$idx$val$i9 + -8 | 0;
  do if (!(HEAP32[$155 >> 2] | 0)) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
   $158 = HEAP32[$152 >> 2] | 0;
   $159 = $$idx$val$i9 + -12 | 0;
   HEAP32[$152 >> 2] = $159;
   HEAP32[(HEAP32[$159 >> 2] | 0) + 8 >> 2] = 0;
   HEAP32[$159 >> 2] = 0;
   HEAP32[$155 >> 2] = 0;
   $163 = HEAP32[$158 + 4 >> 2] | 0;
   $$$i$i$i$i = ($163 | 0) == 0 ? $158 : $163;
   if (!$$$i$i$i$i) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
    $166 = $$idx$val$i9 + -12 | 0;
    $__cache$017$i$i$i = $$$i$i$i$i;
    $__first$0316$i$i$i = $__t$idx$val$i$i;
    while (1) {
     if (($__first$0316$i$i$i | 0) == ($154 | 0)) {
      $__cache$017$i$i$i$lcssa = $__cache$017$i$i$i;
      break;
     }
     $173 = $__cache$017$i$i$i + 16 | 0;
     HEAP32[$173 >> 2] = HEAP32[$__first$0316$i$i$i + 16 >> 2];
     HEAP32[$__cache$017$i$i$i + 20 >> 2] = HEAP32[$__first$0316$i$i$i + 20 >> 2];
     $177 = $__cache$017$i$i$i + 8 | 0;
     $178 = HEAP32[$177 >> 2] | 0;
     do if (!$178) $$0$i$i$i$i = 0; else {
      $180 = HEAP32[$178 >> 2] | 0;
      if (($180 | 0) == ($__cache$017$i$i$i | 0)) {
       HEAP32[$178 >> 2] = 0;
       $183 = HEAP32[$178 + 4 >> 2] | 0;
       if (!$183) {
        $$0$i$i$i$i = $178;
        break;
       }
       $$0$i1$i$i$i$i = $183;
       while (1) {
        $185 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
        if (!$185) {
         $188 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
         if (!$188) {
          $$0$i1$i$i$i$i$lcssa = $$0$i1$i$i$i$i;
          break;
         } else $$0$i1$i$i$i$i$be = $188;
        } else $$0$i1$i$i$i$i$be = $185;
        $$0$i1$i$i$i$i = $$0$i1$i$i$i$i$be;
       }
       $$0$i$i$i$i = $$0$i1$i$i$i$i$lcssa;
       break;
      } else {
       HEAP32[$178 + 4 >> 2] = 0;
       if (!$180) {
        $$0$i$i$i$i = $178;
        break;
       }
       $$0$i$i8$i$i$i = $180;
       while (1) {
        $192 = HEAP32[$$0$i$i8$i$i$i >> 2] | 0;
        if (!$192) {
         $195 = HEAP32[$$0$i$i8$i$i$i + 4 >> 2] | 0;
         if (!$195) {
          $$0$i$i8$i$i$i$lcssa = $$0$i$i8$i$i$i;
          break;
         } else $$0$i$i8$i$i$i$be = $195;
        } else $$0$i$i8$i$i$i$be = $192;
        $$0$i$i8$i$i$i = $$0$i$i8$i$i$i$be;
       }
       $$0$i$i$i$i = $$0$i$i8$i$i$i$lcssa;
       break;
      }
     } while (0);
     $197 = HEAP32[$159 >> 2] | 0;
     do if (!$197) {
      $$0$i$i26$i$i$i = $159;
      $206 = $159;
     } else {
      $__v$idx$val$i$i18$i$i$i = HEAP32[$173 >> 2] | 0;
      $__nd$0$i$i20$i$i$i = $197;
      while (1) {
       if ($__v$idx$val$i$i18$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i20$i$i$i + 16 >> 2] | 0) >>> 0) {
        $200 = HEAP32[$__nd$0$i$i20$i$i$i >> 2] | 0;
        if (!$200) {
         $$lcssa71 = $__nd$0$i$i20$i$i$i;
         $__nd$0$i$i20$i$i$i$lcssa69 = $__nd$0$i$i20$i$i$i;
         label = 64;
         break;
        } else $__nd$0$be$in$i$i23$i$i$i = $200;
       } else {
        $202 = $__nd$0$i$i20$i$i$i + 4 | 0;
        $203 = HEAP32[$202 >> 2] | 0;
        if (!$203) {
         $$lcssa70 = $202;
         $__nd$0$i$i20$i$i$i$lcssa = $__nd$0$i$i20$i$i$i;
         label = 67;
         break;
        } else $__nd$0$be$in$i$i23$i$i$i = $203;
       }
       $__nd$0$i$i20$i$i$i = $__nd$0$be$in$i$i23$i$i$i;
      }
      if ((label | 0) == 64) {
       label = 0;
       $$0$i$i26$i$i$i = $$lcssa71;
       $206 = $__nd$0$i$i20$i$i$i$lcssa69;
       break;
      } else if ((label | 0) == 67) {
       label = 0;
       $$0$i$i26$i$i$i = $$lcssa70;
       $206 = $__nd$0$i$i20$i$i$i$lcssa;
       break;
      }
     } while (0);
     HEAP32[$__cache$017$i$i$i >> 2] = 0;
     HEAP32[$__cache$017$i$i$i + 4 >> 2] = 0;
     HEAP32[$177 >> 2] = $206;
     HEAP32[$$0$i$i26$i$i$i >> 2] = $__cache$017$i$i$i;
     $208 = HEAP32[HEAP32[$152 >> 2] >> 2] | 0;
     if (!$208) $211 = $__cache$017$i$i$i; else {
      HEAP32[$152 >> 2] = $208;
      $211 = HEAP32[$$0$i$i26$i$i$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$166 >> 2] | 0, $211);
     HEAP32[$155 >> 2] = (HEAP32[$155 >> 2] | 0) + 1;
     $215 = HEAP32[$__first$0316$i$i$i + 4 >> 2] | 0;
     if (!$215) {
      $$0$i$i12$i$i$i = $__first$0316$i$i$i;
      while (1) {
       $220 = HEAP32[$$0$i$i12$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$220 >> 2] | 0) == ($$0$i$i12$i$i$i | 0)) {
        $$cast$i$i13$i$i$i$lcssa = $220;
        break;
       } else $$0$i$i12$i$i$i = $220;
      }
      $$01$i$i15$i$i$i = $$cast$i$i13$i$i$i$lcssa;
     } else {
      $$0$i$i$i10$i$i$i = $215;
      while (1) {
       $217 = HEAP32[$$0$i$i$i10$i$i$i >> 2] | 0;
       if (!$217) {
        $$0$i$i$i10$i$i$i$lcssa = $$0$i$i$i10$i$i$i;
        break;
       } else $$0$i$i$i10$i$i$i = $217;
      }
      $$01$i$i15$i$i$i = $$0$i$i$i10$i$i$i$lcssa;
     }
     if (!$$0$i$i$i$i) {
      $$lcssa73 = $$01$i$i15$i$i$i;
      label = 81;
      break;
     } else {
      $__cache$017$i$i$i = $$0$i$i$i$i;
      $__first$0316$i$i$i = $$01$i$i15$i$i$i;
     }
    }
    if ((label | 0) == 81) {
     $__first$04$ph$i$i$i = $$lcssa73;
     break;
    }
    $169 = HEAP32[$__cache$017$i$i$i$lcssa + 8 >> 2] | 0;
    if (!$169) $__cache$2$lcssa$i$i$i = $__cache$017$i$i$i$lcssa; else {
     $225 = $169;
     while (1) {
      $226 = HEAP32[$225 + 8 >> 2] | 0;
      if (!$226) {
       $$lcssa68 = $225;
       break;
      } else $225 = $226;
     }
     $__cache$2$lcssa$i$i$i = $$lcssa68;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($152, $__cache$2$lcssa$i$i$i);
    break L59;
   }
  } while (0);
  if (($__first$04$ph$i$i$i | 0) != ($154 | 0)) {
   $229 = $$idx$val$i9 + -12 | 0;
   $230 = $$idx$val$i9 + -12 | 0;
   $__first$0414$i$i$i = $__first$04$ph$i$i$i;
   while (1) {
    $231 = $__first$0414$i$i$i + 16 | 0;
    $232 = HEAP32[$229 >> 2] | 0;
    do if (!$232) {
     $$0$i$i7$i$i$i = $229;
     $254 = $229;
    } else {
     $__v$idx$val$i$i$i$i$i = HEAP32[$231 >> 2] | 0;
     $__nd$0$i$i$i$i$i = $232;
     while (1) {
      if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
       $235 = HEAP32[$__nd$0$i$i$i$i$i >> 2] | 0;
       if (!$235) {
        $$lcssa67 = $__nd$0$i$i$i$i$i;
        $__nd$0$i$i$i$i$i$lcssa66 = $__nd$0$i$i$i$i$i;
        label = 88;
        break;
       } else $__nd$0$be$in$i$i$i$i$i = $235;
      } else {
       $237 = $__nd$0$i$i$i$i$i + 4 | 0;
       $238 = HEAP32[$237 >> 2] | 0;
       if (!$238) {
        $$lcssa = $237;
        $__nd$0$i$i$i$i$i$lcssa = $__nd$0$i$i$i$i$i;
        label = 91;
        break;
       } else $__nd$0$be$in$i$i$i$i$i = $238;
      }
      $__nd$0$i$i$i$i$i = $__nd$0$be$in$i$i$i$i$i;
     }
     if ((label | 0) == 88) {
      label = 0;
      $$0$i$i7$i$i$i = $$lcssa67;
      $254 = $__nd$0$i$i$i$i$i$lcssa66;
      break;
     } else if ((label | 0) == 91) {
      label = 0;
      $$0$i$i7$i$i$i = $$lcssa;
      $254 = $__nd$0$i$i$i$i$i$lcssa;
      break;
     }
    } while (0);
    $240 = __Znwj(24) | 0;
    $242 = $231;
    $247 = HEAP32[$242 + 4 >> 2] | 0;
    $248 = $240 + 16 | 0;
    HEAP32[$248 >> 2] = HEAP32[$242 >> 2];
    HEAP32[$248 + 4 >> 2] = $247;
    HEAP32[$240 >> 2] = 0;
    HEAP32[$240 + 4 >> 2] = 0;
    HEAP32[$240 + 8 >> 2] = $254;
    HEAP32[$$0$i$i7$i$i$i >> 2] = $240;
    $256 = HEAP32[HEAP32[$152 >> 2] >> 2] | 0;
    if (!$256) $259 = $240; else {
     HEAP32[$152 >> 2] = $256;
     $259 = HEAP32[$$0$i$i7$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$230 >> 2] | 0, $259);
    HEAP32[$155 >> 2] = (HEAP32[$155 >> 2] | 0) + 1;
    $263 = HEAP32[$__first$0414$i$i$i + 4 >> 2] | 0;
    if (!$263) {
     $$0$i$i$i$i$i = $__first$0414$i$i$i;
     while (1) {
      $268 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$268 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
       $$cast$i$i$i$i$i$lcssa = $268;
       break;
      } else $$0$i$i$i$i$i = $268;
     }
     $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i = $263;
     while (1) {
      $265 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
      if (!$265) {
       $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i = $265;
     }
     $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
    }
    if (($$01$i$i$i$i$i | 0) == ($154 | 0)) break; else $__first$0414$i$i$i = $$01$i$i$i$i$i;
   }
  }
 } while (0);
 if ($context) if (___dynamic_cast($context, 36776, 36936, 0) | 0) HEAP8[(HEAP32[$$idx3$i >> 2] | 0) + -108 >> 0] = 1;
 $$idx$val$i13 = HEAP32[$up_values >> 2] | 0;
 $275 = $up_values + 4 | 0;
 if (($$idx$val$i13 | 0) == ($275 | 0)) {
  STACKTOP = sp;
  return;
 }
 $$idx$val$i132037 = $$idx$val$i13;
 while (1) {
  if (!(HEAP32[$$idx$val$i132037 + 20 >> 2] | 0)) {
   label = 109;
   break;
  }
  $281 = HEAP32[$$idx$val$i132037 + 4 >> 2] | 0;
  if (!$281) {
   $$0$i$i$i19 = $$idx$val$i132037;
   while (1) {
    $286 = HEAP32[$$0$i$i$i19 + 8 >> 2] | 0;
    if ((HEAP32[$286 >> 2] | 0) == ($$0$i$i$i19 | 0)) {
     $$cast$i$i$i$lcssa = $286;
     break;
    } else $$0$i$i$i19 = $286;
   }
   $$01$i$i$i = $$cast$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i18 = $281;
   while (1) {
    $283 = HEAP32[$$0$i$i$i$i18 >> 2] | 0;
    if (!$283) {
     $$0$i$i$i$i18$lcssa = $$0$i$i$i$i18;
     break;
    } else $$0$i$i$i$i18 = $283;
   }
   $$01$i$i$i = $$0$i$i$i$i18$lcssa;
  }
  if (($$01$i$i$i | 0) == ($275 | 0)) break; else $$idx$val$i132037 = $$01$i$i$i;
 }
 if ((label | 0) == 109) ___assert_fail(36952, 36976, 361, 36984);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj($this, $binds, $obj_level) {
 $this = $this | 0;
 $binds = $binds | 0;
 $obj_level = $obj_level | 0;
 var $$0$i7$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa63 = 0, $$01 = 0, $$01$i$i = 0, $$01$ph5$i$i$i = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$0338 = 0, $$039 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$lcssa = 0, $$lcssa61 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $106 = 0, $109 = 0, $11 = 0, $114 = 0, $116 = 0, $118 = 0, $12 = 0, $122 = 0, $123 = 0, $125 = 0, $127 = 0, $132 = 0, $137 = 0, $138 = 0, $14 = 0, $143 = 0, $148 = 0, $149 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $160 = 0, $161 = 0, $164 = 0, $166 = 0, $167 = 0, $170 = 0, $171 = 0, $174 = 0, $178 = 0, $179 = 0, $180 = 0, $182 = 0, $183 = 0, $189 = 0, $190 = 0, $192 = 0, $194 = 0, $195 = 0, $2 = 0, $201 = 0, $204 = 0, $210 = 0, $211 = 0, $212 = 0, $214 = 0, $215 = 0, $216 = 0, $219 = 0, $225 = 0, $228 = 0, $229 = 0, $235 = 0, $239 = 0, $240 = 0, $242 = 0, $245 = 0, $247 = 0, $250 = 0, $251 = 0, $254 = 0, $255 = 0, $261 = 0, $263 = 0, $267 = 0, $268 = 0, $271 = 0, $272 = 0, $273 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $39 = 0, $4 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $89 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa59 = 0, $__nd$0$i$i$lcssa60 = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body11$index3Z2D = 0, $eh$lpad$body11$indexZ2D = 0, $init$0 = 0, $params = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $var_id = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__parent$i = sp + 296 | 0;
 $var_id = sp + 252 | 0;
 $0 = sp + 240 | 0;
 $1 = sp + 196 | 0;
 $2 = sp + 152 | 0;
 $params = sp + 140 | 0;
 $3 = sp + 128 | 0;
 $4 = sp + 84 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 44 | 0;
 $7 = sp;
 __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($var_id, $this, 11, 0);
 $8 = $this + 4 | 0;
 $10 = $var_id + 4 | 0;
 __THREW__ = 0;
 $11 = invoke_iii(23, HEAP32[$8 >> 2] | 0, $10 | 0) | 0;
 $12 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($12 & 1) label = 24; else {
  $14 = $binds + 4 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if ($15) {
   $$0$ph6$i$i$i = $14;
   $$01$ph5$i$i$i = $15;
   L5 : while (1) {
    $$013$i$i$i = $$01$ph5$i$i$i;
    while (1) {
     if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $11 >>> 0) {
      $$013$i$i$i$lcssa = $$013$i$i$i;
      break;
     }
     $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
     if (!$$013$i$i$i) {
      $$0$ph6$i$i$i$lcssa63 = $$0$ph6$i$i$i;
      label = 8;
      break L5;
     }
    }
    $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
    if (!$$01$ph5$i$i$i) {
     $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
     label = 9;
     break;
    } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
   }
   if ((label | 0) == 8) $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa63; else if ((label | 0) == 9) $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
   if (($$0$ph$lcssa$i$i$i | 0) != ($14 | 0)) if ($11 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
    $29 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    $30 = HEAP8[$10 >> 0] | 0;
    if (!($30 & 1)) $38 = ($30 & 255) >>> 1; else $38 = HEAP32[$var_id + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(13, $0 | 0, 36144, 21, $38 + 21 | 0);
    $39 = __THREW__;
    __THREW__ = 0;
    do if ($39 & 1) label = 26; else {
     if (!(HEAP8[$10 >> 0] & 1)) $47 = $10 + 1 | 0; else $47 = HEAP32[$var_id + 12 >> 2] | 0;
     __THREW__ = 0;
     invoke_iiii(31, $0 | 0, $47 | 0, $38 | 0) | 0;
     $48 = __THREW__;
     __THREW__ = 0;
     if ($48 & 1) label = 26; else {
      __THREW__ = 0;
      invoke_vii(40, $29 | 0, $var_id + 16 | 0);
      $51 = __THREW__;
      __THREW__ = 0;
      if ($51 & 1) $$01 = 1; else {
       $53 = $29 + 12 | 0;
       $54 = $var_id + 28 | 0;
       HEAP32[$53 + 0 >> 2] = HEAP32[$54 + 0 >> 2];
       HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
       HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
       HEAP32[$53 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $29 + 28 | 0, $0 | 0);
       $56 = __THREW__;
       __THREW__ = 0;
       if ($56 & 1) {
        $58 = ___cxa_find_matching_catch() | 0;
        $59 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
        $$0338 = $59;
        $$039 = $58;
        break;
       }
       __THREW__ = 0;
       invoke_viii(4, $29 | 0, 48, 176);
       $60 = __THREW__;
       __THREW__ = 0;
       if ($60 & 1) $$01 = 0; else {}
      }
      $66 = ___cxa_find_matching_catch() | 0;
      $67 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      if ($$01) {
       $$0338 = $67;
       $$039 = $66;
      } else {
       $$3 = $66;
       $$36 = $67;
       $273 = $var_id + 16 | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
       ___resumeException($$3 | 0);
      }
     }
    } while (0);
    if ((label | 0) == 26) {
     $64 = ___cxa_find_matching_catch() | 0;
     $65 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$0338 = $65;
     $$039 = $64;
    }
    ___cxa_free_exception($29 | 0);
    $$3 = $$039;
    $$36 = $$0338;
    $273 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    ___resumeException($$3 | 0);
   }
  }
  $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $68 = $this$idx$val$idx$val + 8 | 0;
  HEAP32[$1 >> 2] = HEAP32[$68 >> 2];
  $70 = $1 + 4 | 0;
  __THREW__ = 0;
  invoke_vii(40, $70 | 0, $this$idx$val$idx$val + 12 | 0);
  $72 = __THREW__;
  __THREW__ = 0;
  if ($72 & 1) label = 24; else {
   HEAP32[$1 >> 2] = HEAP32[$68 >> 2];
   $75 = $1 + 16 | 0;
   __THREW__ = 0;
   invoke_vii(40, $75 | 0, $this$idx$val$idx$val + 24 | 0);
   $77 = __THREW__;
   __THREW__ = 0;
   if ($77 & 1) {
    $79 = ___cxa_find_matching_catch() | 0;
    $80 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    $eh$lpad$body11$index3Z2D = $80;
    $eh$lpad$body11$indexZ2D = $79;
    break;
   }
   $81 = $1 + 28 | 0;
   $82 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$81 + 0 >> 2] = HEAP32[$82 + 0 >> 2];
   HEAP32[$81 + 4 >> 2] = HEAP32[$82 + 4 >> 2];
   HEAP32[$81 + 8 >> 2] = HEAP32[$82 + 8 >> 2];
   HEAP32[$81 + 12 >> 2] = HEAP32[$82 + 12 >> 2];
   $83 = HEAP32[$68 >> 2] | 0;
   HEAP32[$1 >> 2] = $83;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($75);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
   L45 : do if (($83 | 0) == 8) {
    $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $85 = $this$idx$val$idx$val$i + 8 | 0;
    HEAP32[$2 >> 2] = HEAP32[$85 >> 2];
    $87 = $2 + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $87 | 0, $this$idx$val$idx$val$i + 12 | 0);
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 24;
     break L1;
    }
    HEAP32[$2 >> 2] = HEAP32[$85 >> 2];
    $92 = $2 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $92 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $94 = __THREW__;
    __THREW__ = 0;
    if ($94 & 1) {
     $96 = ___cxa_find_matching_catch() | 0;
     $97 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
     $eh$lpad$body11$index3Z2D = $97;
     $eh$lpad$body11$indexZ2D = $96;
     break L1;
    }
    $98 = $2 + 28 | 0;
    $99 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$98 + 0 >> 2] = HEAP32[$99 + 0 >> 2];
    HEAP32[$98 + 4 >> 2] = HEAP32[$99 + 4 >> 2];
    HEAP32[$98 + 8 >> 2] = HEAP32[$99 + 8 >> 2];
    HEAP32[$98 + 12 >> 2] = HEAP32[$99 + 12 >> 2];
    HEAP32[$2 >> 2] = HEAP32[$85 >> 2];
    $101 = HEAP32[$this >> 2] | 0;
    $103 = HEAP32[$101 + 4 >> 2] | 0;
    $104 = $103 + 4 | 0;
    $106 = HEAP32[$103 >> 2] | 0;
    HEAP32[$106 + 4 >> 2] = HEAP32[$104 >> 2];
    HEAP32[HEAP32[$104 >> 2] >> 2] = $106;
    $109 = $101 + 8 | 0;
    HEAP32[$109 >> 2] = (HEAP32[$109 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103 + 12 | 0);
    __ZdlPv($103);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($92);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 35136, 18);
    $114 = __THREW__;
    __THREW__ = 0;
    if ($114 & 1) {
     label = 24;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiii(14, $params | 0, $this | 0, $3 | 0, $obj_level | 0);
    $116 = __THREW__;
    __THREW__ = 0;
    if ($116 & 1) {
     $210 = ___cxa_find_matching_catch() | 0;
     $211 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$3 = $210;
     $$36 = $211;
     $273 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     ___resumeException($$3 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    invoke_viiii(12, $4 | 0, $this | 0, 13, 36168);
    $118 = __THREW__;
    __THREW__ = 0;
    if ($118 & 1) label = 63; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 4 | 0);
     __THREW__ = 0;
     $122 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $123 = __THREW__;
     __THREW__ = 0;
     if ($123 & 1) label = 63; else {
      $125 = HEAP32[$8 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $5 | 0, $var_id + 16 | 0);
      $127 = __THREW__;
      __THREW__ = 0;
      if ($127 & 1) label = 63; else {
       $132 = $var_id + 28 | 0;
       $137 = HEAP32[$132 + 4 >> 2] | 0;
       $138 = $5 + 12 | 0;
       HEAP32[$138 >> 2] = HEAP32[$132 >> 2];
       HEAP32[$138 + 4 >> 2] = $137;
       $143 = $122 + 24 | 0;
       $148 = HEAP32[$143 + 4 >> 2] | 0;
       $149 = $5 + 20 | 0;
       HEAP32[$149 >> 2] = HEAP32[$143 >> 2];
       HEAP32[$149 + 4 >> 2] = $148;
       HEAP32[$6 >> 2] = 0;
       $153 = $6 + 4 | 0;
       HEAP32[$153 >> 2] = 0;
       $154 = $6 + 8 | 0;
       HEAP32[$154 >> 2] = 0;
       $155 = $params + 4 | 0;
       $160 = (HEAP32[$155 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
       $161 = $160 >> 2;
       do if (!$161) label = 53; else {
        if ($161 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(179, $6 | 0);
         $164 = __THREW__;
         __THREW__ = 0;
         if (!($164 & 1)) label = 44;
        } else label = 44;
        if ((label | 0) == 44) {
         __THREW__ = 0;
         $166 = invoke_ii(67, $160 | 0) | 0;
         $167 = __THREW__;
         __THREW__ = 0;
         if (!($167 & 1)) {
          HEAP32[$153 >> 2] = $166;
          HEAP32[$6 >> 2] = $166;
          HEAP32[$154 >> 2] = $166 + ($161 << 2);
          $170 = HEAP32[$params >> 2] | 0;
          $171 = HEAP32[$155 >> 2] | 0;
          if (($170 | 0) == ($171 | 0)) {
           label = 53;
           break;
          }
          $$01$i$i = $170;
          $174 = $166;
          do {
           HEAP32[$174 >> 2] = HEAP32[$$01$i$i >> 2];
           $174 = (HEAP32[$153 >> 2] | 0) + 4 | 0;
           HEAP32[$153 >> 2] = $174;
           $$01$i$i = $$01$i$i + 4 | 0;
          } while (($$01$i$i | 0) != ($171 | 0));
          label = 53;
          break;
         }
        }
        $178 = ___cxa_find_matching_catch() | 0;
        $179 = tempRet0;
        $180 = HEAP32[$6 >> 2] | 0;
        $182 = $180;
        if ($180) {
         $183 = HEAP32[$153 >> 2] | 0;
         if (($183 | 0) != ($180 | 0)) HEAP32[$153 >> 2] = $183 + (~(($183 + -4 - $182 | 0) >>> 2) << 2);
         __ZdlPv($180);
        }
        $$1 = $178;
        $$14 = $179;
       } while (0);
       do if ((label | 0) == 53) {
        __THREW__ = 0;
        $189 = invoke_iiiii(6, $125 | 0, $5 | 0, $6 | 0, $122 | 0) | 0;
        $190 = __THREW__;
        __THREW__ = 0;
        if ($190 & 1) {
         $214 = ___cxa_find_matching_catch() | 0;
         $215 = tempRet0;
         $216 = HEAP32[$6 >> 2] | 0;
         if (!$216) {
          $$1 = $214;
          $$14 = $215;
          break;
         }
         $219 = HEAP32[$153 >> 2] | 0;
         if (($219 | 0) != ($216 | 0)) HEAP32[$153 >> 2] = $219 + (~(($219 + -4 - $216 | 0) >>> 2) << 2);
         __ZdlPv($216);
         $$1 = $214;
         $$14 = $215;
         break;
        }
        $192 = HEAP32[$6 >> 2] | 0;
        $194 = $192;
        if ($192) {
         $195 = HEAP32[$153 >> 2] | 0;
         if (($195 | 0) != ($192 | 0)) HEAP32[$153 >> 2] = $195 + (~(($195 + -4 - $194 | 0) >>> 2) << 2);
         __ZdlPv($192);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        $201 = HEAP32[$params >> 2] | 0;
        if (!$201) {
         $init$0 = $189;
         break L45;
        }
        $204 = HEAP32[$155 >> 2] | 0;
        if (($204 | 0) != ($201 | 0)) HEAP32[$155 >> 2] = $204 + (~(($204 + -4 - $201 | 0) >>> 2) << 2);
        __ZdlPv($201);
        $init$0 = $189;
        break L45;
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       $$2 = $$1;
       $$25 = $$14;
       $$pre$phiZ2D = $params;
      }
     }
    }
    if ((label | 0) == 63) {
     $212 = ___cxa_find_matching_catch() | 0;
     $$2 = $212;
     $$25 = tempRet0;
     $$pre$phiZ2D = $params;
    }
    $225 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    if (!$225) {
     $$3 = $$2;
     $$36 = $$25;
     $273 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     ___resumeException($$3 | 0);
    }
    $228 = $params + 4 | 0;
    $229 = HEAP32[$228 >> 2] | 0;
    if (($229 | 0) != ($225 | 0)) HEAP32[$228 >> 2] = $229 + (~(($229 + -4 - $225 | 0) >>> 2) << 2);
    __ZdlPv($225);
    $$3 = $$2;
    $$36 = $$25;
    $273 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    ___resumeException($$3 | 0);
   } else {
    __THREW__ = 0;
    invoke_viiii(12, $7 | 0, $this | 0, 13, 36168);
    $235 = __THREW__;
    __THREW__ = 0;
    if ($235 & 1) {
     label = 24;
     break L1;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7 + 4 | 0);
    __THREW__ = 0;
    $239 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $240 = __THREW__;
    __THREW__ = 0;
    if ($240 & 1) {
     label = 24;
     break L1;
    } else $init$0 = $239;
   } while (0);
   $242 = HEAP32[$14 >> 2] | 0;
   do if (!$242) {
    HEAP32[$__parent$i >> 2] = $14;
    $$0$i7$i = $14;
    $261 = $14;
   } else {
    $__nd$0$i$i = $242;
    while (1) {
     $245 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
     if ($11 >>> 0 < $245 >>> 0) {
      $247 = HEAP32[$__nd$0$i$i >> 2] | 0;
      if (!$247) {
       $$lcssa61 = $__nd$0$i$i;
       $__nd$0$i$i$lcssa60 = $__nd$0$i$i;
       label = 80;
       break;
      } else $__nd$0$be$in$i$i = $247;
     } else {
      if ($245 >>> 0 >= $11 >>> 0) {
       $__nd$0$i$i$lcssa = $__nd$0$i$i;
       label = 86;
       break;
      }
      $250 = $__nd$0$i$i + 4 | 0;
      $251 = HEAP32[$250 >> 2] | 0;
      if (!$251) {
       $$lcssa = $250;
       $__nd$0$i$i$lcssa59 = $__nd$0$i$i;
       label = 84;
       break;
      } else $__nd$0$be$in$i$i = $251;
     }
     $__nd$0$i$i = $__nd$0$be$in$i$i;
    }
    if ((label | 0) == 80) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa60;
     $$0$i7$i = $$lcssa61;
     $261 = $__nd$0$i$i$lcssa60;
     break;
    } else if ((label | 0) == 84) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa59;
     $$0$i7$i = $$lcssa;
     $261 = $__nd$0$i$i$lcssa59;
     break;
    } else if ((label | 0) == 86) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
     if (!$__nd$0$i$i$lcssa) {
      $$0$i7$i = $__parent$i;
      $261 = 0;
      break;
     } else $__r$0$i = $__nd$0$i$i$lcssa;
     $271 = $__r$0$i + 20 | 0;
     HEAP32[$271 >> 2] = $init$0;
     $272 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($272);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     STACKTOP = sp;
     return;
    }
   } while (0);
   __THREW__ = 0;
   $254 = invoke_ii(67, 24) | 0;
   $255 = __THREW__;
   __THREW__ = 0;
   if ($255 & 1) label = 24; else {
    HEAP32[$254 + 16 >> 2] = $11;
    HEAP32[$254 + 20 >> 2] = 0;
    HEAP32[$254 >> 2] = 0;
    HEAP32[$254 + 4 >> 2] = 0;
    HEAP32[$254 + 8 >> 2] = $261;
    HEAP32[$$0$i7$i >> 2] = $254;
    $263 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
    if (!$263) $267 = $254; else {
     HEAP32[$binds >> 2] = $263;
     $267 = HEAP32[$$0$i7$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$binds + 4 >> 2] | 0, $267);
    $268 = $binds + 8 | 0;
    HEAP32[$268 >> 2] = (HEAP32[$268 >> 2] | 0) + 1;
    $__r$0$i = $254;
    $271 = $__r$0$i + 20 | 0;
    HEAP32[$271 >> 2] = $init$0;
    $272 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($272);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 24) {
  $62 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body11$index3Z2D = tempRet0;
  $eh$lpad$body11$indexZ2D = $62;
 }
 $$3 = $eh$lpad$body11$indexZ2D;
 $$36 = $eh$lpad$body11$index3Z2D;
 $273 = $var_id + 16 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 ___resumeException($$3 | 0);
}

function __Z24jsonnet_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i17$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$0119$i = 0, $$0218$i = 0, $$07$i = 0, $$1$i = 0, $$13$i = 0, $$2$i = 0, $$24$i = 0, $$3$i = 0, $$35$i = 0, $$4$i = 0, $$46$i = 0, $$cast$i$i$i$i$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$idx$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $117 = 0, $119 = 0, $122 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $132 = 0, $134 = 0, $136 = 0, $137 = 0, $139 = 0, $141 = 0, $143 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $151 = 0, $153 = 0, $156 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $166 = 0, $167 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $90 = 0, $93 = 0, $94 = 0, $96 = 0, $97 = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$index12Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields$i = 0, $loc$i = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index7 = 0, $ss$i = 0, $vm = 0, $vstr$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $0 = sp + 392 | 0;
 $loc$i = sp + 364 | 0;
 $1 = sp + 352 | 0;
 $ss$i = sp + 208 | 0;
 $2 = sp + 196 | 0;
 $3 = sp + 184 | 0;
 $fields$i = sp + 172 | 0;
 $4 = sp + 160 | 0;
 $vstr$i = sp + 148 | 0;
 $5 = sp + 136 | 0;
 $vm = sp;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(60, $vm | 0, $ast | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $167 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index12Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $167;
  __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $10 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $10;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 36464, 20);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $77 = ___cxa_find_matching_catch() | 0;
  $$4$i = $77;
  $$46$i = tempRet0;
 } else {
  __THREW__ = 0;
  invoke_vii(40, $loc$i | 0, $1 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) {
   $79 = ___cxa_find_matching_catch() | 0;
   $80 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$4$i = $79;
   $$46$i = $80;
   break;
  }
  $15 = $loc$i + 12 | 0;
  HEAP32[$15 + 0 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  HEAP32[$15 + 8 >> 2] = 0;
  HEAP32[$15 + 12 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $16 = $vm + 56 | 0;
  L10 : do if ((HEAP32[$16 >> 2] | 0) == 18) {
   $90 = HEAP32[$vm + 64 >> 2] | 0;
   HEAP32[$fields$i + 4 >> 2] = 0;
   HEAP32[$fields$i + 8 >> 2] = 0;
   $93 = $fields$i + 4 | 0;
   HEAP32[$fields$i >> 2] = $93;
   __THREW__ = 0;
   invoke_vii(62, $4 | 0, $90 | 0);
   $94 = __THREW__;
   __THREW__ = 0;
   L12 : do if ($94 & 1) {
    $105 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$i$index = $105;
    $lpad$phi$i$index7 = tempRet0;
    label = 41;
   } else {
    $96 = HEAP32[$4 >> 2] | 0;
    $97 = $4 + 4 | 0;
    do if (($96 | 0) != ($97 | 0)) {
     $111 = $96;
     while (1) {
      $112 = HEAP32[$111 + 16 >> 2] | 0;
      __THREW__ = 0;
      $113 = invoke_iii(29, $fields$i | 0, $112 | 0) | 0;
      $114 = __THREW__;
      __THREW__ = 0;
      if ($114 & 1) {
       label = 42;
       break;
      }
      HEAP32[$113 >> 2] = $112;
      $117 = HEAP32[$111 + 4 >> 2] | 0;
      if (!$117) {
       $$0$i$i$i = $111;
       while (1) {
        $122 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$122 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$cast$i$i$i$lcssa = $122;
         break;
        } else $$0$i$i$i = $122;
       }
       $$01$i$i$i = $$cast$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i = $117;
       while (1) {
        $119 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$119) {
         $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $119;
       }
       $$01$i$i$i = $$0$i$i$i$i$lcssa;
      }
      if (($$01$i$i$i | 0) == ($97 | 0)) {
       label = 36;
       break;
      } else $111 = $$01$i$i$i;
     }
     if ((label | 0) == 36) break; else if ((label | 0) == 42) {
      $107 = ___cxa_find_matching_catch() | 0;
      $108 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$97 >> 2] | 0);
      $$2$i = $107;
      $$24$i = $108;
      break L12;
     }
    } while (0);
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$97 >> 2] | 0);
    $100 = HEAP32[$fields$i >> 2] | 0;
    if (($100 | 0) == ($93 | 0)) {
     $166 = HEAP32[$93 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $166);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
    $102 = $vm + 72 | 0;
    $$idx$i$i = $vm + 88 | 0;
    $127 = $100;
    while (1) {
     __THREW__ = 0;
     $129 = invoke_iiiii(8, $vm | 0, $loc$i | 0, $90 | 0, HEAP32[$127 + 28 >> 2] | 0) | 0;
     $130 = __THREW__;
     __THREW__ = 0;
     if ($130 & 1) {
      label = 39;
      break;
     }
     $132 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$132 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
     HEAP32[$132 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
     HEAP32[$132 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
     HEAP32[$132 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
     HEAP8[(HEAP32[$$idx$i$i >> 2] | 0) + -108 >> 0] = 1;
     __THREW__ = 0;
     invoke_vii(60, $vm | 0, $129 | 0);
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 39;
      break;
     }
     $136 = $129 + 4 | 0;
     if ($string_output) {
      __THREW__ = 0;
      invoke_viii(10, $vstr$i | 0, $vm | 0, $136 | 0);
      $137 = __THREW__;
      __THREW__ = 0;
      if ($137 & 1) {
       label = 39;
       break;
      }
     } else {
      __THREW__ = 0;
      invoke_viii(3, $5 | 0, 46680, 0);
      $139 = __THREW__;
      __THREW__ = 0;
      if ($139 & 1) {
       label = 39;
       break;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $vstr$i | 0, $vm | 0, $136 | 0, 1, $5 | 0);
      $141 = __THREW__;
      __THREW__ = 0;
      if ($141 & 1) {
       label = 69;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     }
     $143 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$16 + 0 >> 2] = HEAP32[$143 + 0 >> 2];
     HEAP32[$16 + 4 >> 2] = HEAP32[$143 + 4 >> 2];
     HEAP32[$16 + 8 >> 2] = HEAP32[$143 + 8 >> 2];
     HEAP32[$16 + 12 >> 2] = HEAP32[$143 + 12 >> 2];
     __ZN12_GLOBAL__N_15Stack3popEv($102);
     __THREW__ = 0;
     $145 = invoke_iii(30, $agg$result | 0, $127 + 16 | 0) | 0;
     $146 = __THREW__;
     __THREW__ = 0;
     if ($146 & 1) {
      label = 70;
      break;
     }
     __THREW__ = 0;
     invoke_iii(20, $145 | 0, $vstr$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) {
      label = 70;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr$i);
     $151 = HEAP32[$127 + 4 >> 2] | 0;
     if (!$151) {
      $$0$i$i$i17$i = $127;
      while (1) {
       $156 = HEAP32[$$0$i$i$i17$i + 8 >> 2] | 0;
       if ((HEAP32[$156 >> 2] | 0) == ($$0$i$i$i17$i | 0)) {
        $$cast$i$i$i$i$lcssa = $156;
        break;
       } else $$0$i$i$i17$i = $156;
      }
      $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i$i = $151;
      while (1) {
       $153 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
       if (!$153) {
        $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
        break;
       } else $$0$i$i$i$i$i = $153;
      }
      $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
     }
     if (($$01$i$i$i$i | 0) == ($93 | 0)) {
      label = 75;
      break;
     } else $127 = $$01$i$i$i$i;
    }
    if ((label | 0) == 39) {
     $103 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i$index = $103;
     $lpad$phi$i$index7 = tempRet0;
     label = 41;
     break;
    } else if ((label | 0) == 69) {
     $160 = ___cxa_find_matching_catch() | 0;
     $161 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$2$i = $160;
     $$24$i = $161;
     break;
    } else if ((label | 0) == 70) {
     $162 = ___cxa_find_matching_catch() | 0;
     $163 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr$i);
     $$2$i = $162;
     $$24$i = $163;
     break;
    } else if ((label | 0) == 75) {
     $166 = HEAP32[$93 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $166);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 41) {
    $$2$i = $lpad$phi$i$index;
    $$24$i = $lpad$phi$i$index7;
   }
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, HEAP32[$93 >> 2] | 0);
   $$3$i = $$2$i;
   $$35$i = $$24$i;
  } else {
   $19 = $ss$i + 64 | 0;
   $20 = $ss$i + 8 | 0;
   HEAP32[$20 >> 2] = 592;
   $21 = $ss$i + 12 | 0;
   HEAP32[$ss$i >> 2] = 740;
   HEAP32[$19 >> 2] = 760;
   HEAP32[$ss$i + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss$i + 64 | 0, $21 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) {
    $36 = ___cxa_find_matching_catch() | 0;
    $$0$i$i = tempRet0;
    $$01$i$i = $36;
   } else {
    HEAP32[$ss$i + 136 >> 2] = 0;
    HEAP32[$ss$i + 140 >> 2] = -1;
    HEAP32[$ss$i >> 2] = 572;
    HEAP32[$19 >> 2] = 612;
    HEAP32[$20 >> 2] = 592;
    __THREW__ = 0;
    invoke_vi(177, $21 | 0);
    $28 = __THREW__;
    __THREW__ = 0;
    do if ($28 & 1) {
     $38 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i$i$index2Z2D = tempRet0;
     $eh$lpad$body$i$i$indexZ2D = $38;
    } else {
     HEAP32[$21 >> 2] = 904;
     $30 = $ss$i + 44 | 0;
     HEAP32[$30 + 0 >> 2] = 0;
     HEAP32[$30 + 4 >> 2] = 0;
     HEAP32[$30 + 8 >> 2] = 0;
     HEAP32[$30 + 12 >> 2] = 0;
     HEAP32[$ss$i + 60 >> 2] = 24;
     HEAP32[$0 + 0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $21 | 0, $0 | 0);
     $32 = __THREW__;
     __THREW__ = 0;
     if ($32 & 1) {
      $34 = ___cxa_find_matching_catch() | 0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
      $eh$lpad$body$i$i$index2Z2D = $35;
      $eh$lpad$body$i$i$indexZ2D = $34;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __THREW__ = 0;
     $40 = invoke_iiii(25, $20 | 0, 36488, 35) | 0;
     $41 = __THREW__;
     __THREW__ = 0;
     do if ($41 & 1) label = 27; else {
      __THREW__ = 0;
      invoke_vii(61, $2 | 0, HEAP32[$16 >> 2] | 0);
      $44 = __THREW__;
      __THREW__ = 0;
      if ($44 & 1) label = 27; else {
       $46 = HEAP8[$2 >> 0] | 0;
       if (!($46 & 1)) {
        $56 = $2 + 1 | 0;
        $57 = ($46 & 255) >>> 1;
       } else {
        $56 = HEAP32[$2 + 8 >> 2] | 0;
        $57 = HEAP32[$2 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $58 = invoke_iiii(25, $40 | 0, $56 | 0, $57 | 0) | 0;
       $59 = __THREW__;
       __THREW__ = 0;
       if (!($59 & 1)) {
        __THREW__ = 0;
        $61 = invoke_iiii(25, $58 | 0, 36528, 2) | 0;
        $62 = __THREW__;
        __THREW__ = 0;
        if (!($62 & 1)) {
         __THREW__ = 0;
         $64 = invoke_iiii(25, $61 | 0, 36536, 61) | 0;
         $65 = __THREW__;
         __THREW__ = 0;
         if (!($65 & 1)) {
          __THREW__ = 0;
          invoke_iiii(25, $64 | 0, 36600, 23) | 0;
          $67 = __THREW__;
          __THREW__ = 0;
          if (!($67 & 1)) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
           $69 = ___cxa_allocate_exception(24) | 0;
           __THREW__ = 0;
           invoke_vii(43, $3 | 0, $21 | 0);
           $70 = __THREW__;
           __THREW__ = 0;
           if ($70 & 1) {
            $85 = ___cxa_find_matching_catch() | 0;
            $$0119$i = $85;
            $$0218$i = tempRet0;
           } else {
            __THREW__ = 0;
            invoke_viiii(16, $69 | 0, $vm + 72 | 0, $loc$i | 0, $3 | 0);
            $73 = __THREW__;
            __THREW__ = 0;
            do if ($73 & 1) $$07$i = 1; else {
             __THREW__ = 0;
             invoke_viii(4, $69 | 0, 36640, 183);
             $75 = __THREW__;
             __THREW__ = 0;
             if ($75 & 1) {
              $$07$i = 0;
              break;
             }
            } while (0);
            $87 = ___cxa_find_matching_catch() | 0;
            $88 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
            if ($$07$i) {
             $$0119$i = $87;
             $$0218$i = $88;
            } else {
             $$1$i = $87;
             $$13$i = $88;
             break;
            }
           }
           ___cxa_free_exception($69 | 0);
           $$1$i = $$0119$i;
           $$13$i = $$0218$i;
           break;
          }
         }
        }
       }
       $83 = ___cxa_find_matching_catch() | 0;
       $84 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $$1$i = $83;
       $$13$i = $84;
      }
     } while (0);
     if ((label | 0) == 27) {
      $81 = ___cxa_find_matching_catch() | 0;
      $$1$i = $81;
      $$13$i = tempRet0;
     }
     HEAP32[$ss$i >> 2] = 572;
     HEAP32[$19 >> 2] = 612;
     HEAP32[$20 >> 2] = 592;
     HEAP32[$21 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
     $$3$i = $$1$i;
     $$35$i = $$13$i;
     break L10;
    } while (0);
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
   $$3$i = $$01$i$i;
   $$35$i = $$0$i$i;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
  $$4$i = $$3$i;
  $$46$i = $$35$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($agg$result, HEAP32[$10 >> 2] | 0);
 $eh$lpad$body$index12Z2D = $$46$i;
 $eh$lpad$body$indexZ2D = $$4$i;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj($agg$result, $this, $exprs, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $exprs = $exprs | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$0229 = 0, $$0428 = 0, $$13 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $105 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $119 = 0, $12 = 0, $124 = 0, $125 = 0, $126 = 0, $129 = 0, $13 = 0, $133 = 0, $135 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $143 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $163 = 0, $165 = 0, $166 = 0, $168 = 0, $17 = 0, $170 = 0, $172 = 0, $174 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $187 = 0, $19 = 0, $192 = 0, $193 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $60 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $82 = 0, $84 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $98 = 0, $eh$lpad$body$i$index13Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index5Z2D = 0, $eh$lpad$body$indexZ2D = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $next = 0, $ss = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i12 = 0, $this$idx4$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $0 = sp + 292 | 0;
 $next = sp + 248 | 0;
 $1 = sp + 204 | 0;
 $2 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 $5 = $next + 4 | 0;
 $6 = $next + 16 | 0;
 $7 = $next + 28 | 0;
 $8 = $agg$result + 4 | 0;
 $9 = $agg$result + 16 | 0;
 $10 = $agg$result + 28 | 0;
 $11 = $exprs + 4 | 0;
 $12 = $exprs + 8 | 0;
 $13 = $1 + 4 | 0;
 $14 = $1 + 16 | 0;
 $15 = $1 + 28 | 0;
 $16 = $2 + 4 | 0;
 $17 = $2 + 16 | 0;
 $18 = $2 + 28 | 0;
 $19 = $5 + 1 | 0;
 $20 = $next + 16 | 0;
 $21 = $2 + 16 | 0;
 $22 = $20 + 1 | 0;
 $23 = $next + 24 | 0;
 $24 = $next + 20 | 0;
 $25 = $next + 12 | 0;
 $26 = $next + 8 | 0;
 $got_comma$0$off0 = 1;
 L1 : while (1) {
  $this$idx4$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $27 = $this$idx4$val$idx$val + 8 | 0;
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, $this$idx4$val$idx$val + 12 | 0);
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $this$idx4$val$idx$val + 24 | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  if ($32 & 1) {
   label = 3;
   break;
  }
  $36 = $this$idx4$val$idx$val + 36 | 0;
  HEAP32[$7 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
  HEAP32[$7 + 12 >> 2] = HEAP32[$36 + 12 >> 2];
  $37 = HEAP32[$27 >> 2] | 0;
  HEAP32[$next >> 2] = $37;
  if ($got_comma$0$off0) {
   $96 = $37;
   $got_comma$1$off0 = 1;
  } else if (($37 | 0) == 5) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $39 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   if ($42 & 1) {
    label = 23;
    break;
   }
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $14 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    label = 8;
    break;
   }
   $50 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$15 + 0 >> 2] = HEAP32[$50 + 0 >> 2];
   HEAP32[$15 + 4 >> 2] = HEAP32[$50 + 4 >> 2];
   HEAP32[$15 + 8 >> 2] = HEAP32[$50 + 8 >> 2];
   HEAP32[$15 + 12 >> 2] = HEAP32[$50 + 12 >> 2];
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   $52 = HEAP32[$this >> 2] | 0;
   $54 = HEAP32[$52 + 4 >> 2] | 0;
   $55 = $54 + 4 | 0;
   $57 = HEAP32[$54 >> 2] | 0;
   HEAP32[$57 + 4 >> 2] = HEAP32[$55 >> 2];
   HEAP32[HEAP32[$55 >> 2] >> 2] = $57;
   $60 = $52 + 8 | 0;
   HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54 + 12 | 0);
   __ZdlPv($54);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $65 = $this$idx$val$idx$val + 8 | 0;
   HEAP32[$2 >> 2] = HEAP32[$65 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $16 | 0, $this$idx$val$idx$val + 12 | 0);
   $68 = __THREW__;
   __THREW__ = 0;
   if ($68 & 1) {
    label = 23;
    break;
   }
   HEAP32[$2 >> 2] = HEAP32[$65 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $17 | 0, $this$idx$val$idx$val + 24 | 0);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    label = 11;
    break;
   }
   $76 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$18 + 0 >> 2] = HEAP32[$76 + 0 >> 2];
   HEAP32[$18 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
   HEAP32[$18 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
   HEAP32[$18 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
   $77 = HEAP32[$65 >> 2] | 0;
   HEAP32[$2 >> 2] = $77;
   HEAP32[$next >> 2] = $77;
   if (!(HEAP8[$5 >> 0] & 1)) {
    HEAP8[$19 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$25 >> 2] >> 0] = 0;
    HEAP32[$26 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $5 | 0, 0);
   $82 = __THREW__;
   __THREW__ = 0;
   if ($82 & 1) {
    label = 16;
    break;
   };
   HEAP32[$5 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
   HEAP32[$16 + 0 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   if (!(HEAP8[$20 >> 0] & 1)) {
    HEAP8[$22 >> 0] = 0;
    HEAP8[$20 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$23 >> 2] >> 0] = 0;
    HEAP32[$24 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $20 | 0, 0);
   $90 = __THREW__;
   __THREW__ = 0;
   if ($90 & 1) {
    label = 21;
    break;
   };
   HEAP32[$20 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
   HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
   HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
   HEAP32[$21 + 0 >> 2] = 0;
   HEAP32[$21 + 4 >> 2] = 0;
   HEAP32[$21 + 8 >> 2] = 0;
   HEAP32[$7 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
   $96 = HEAP32[$next >> 2] | 0;
   $got_comma$1$off0 = 1;
  } else {
   $96 = $37;
   $got_comma$1$off0 = 0;
  }
  do if (($96 | 0) == 9) {
   $this$idx$val$idx$val$i12 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $98 = $this$idx$val$idx$val$i12 + 8 | 0;
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $8 | 0, $this$idx$val$idx$val$i12 + 12 | 0);
   $101 = __THREW__;
   __THREW__ = 0;
   if ($101 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i12 + 24 | 0);
   $105 = __THREW__;
   __THREW__ = 0;
   if ($105 & 1) {
    label = 28;
    break L1;
   }
   $109 = $this$idx$val$idx$val$i12 + 36 | 0;
   HEAP32[$10 + 0 >> 2] = HEAP32[$109 + 0 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$109 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$109 + 8 >> 2];
   HEAP32[$10 + 12 >> 2] = HEAP32[$109 + 12 >> 2];
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   $111 = HEAP32[$this >> 2] | 0;
   $113 = HEAP32[$111 + 4 >> 2] | 0;
   $114 = $113 + 4 | 0;
   $116 = HEAP32[$113 >> 2] | 0;
   HEAP32[$116 + 4 >> 2] = HEAP32[$114 >> 2];
   HEAP32[HEAP32[$114 >> 2] >> 2] = $116;
   $119 = $111 + 8 | 0;
   HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($113 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($113 + 12 | 0);
   __ZdlPv($113);
   $$01 = 1;
   $got_comma$2$off0 = $got_comma$1$off0;
  } else {
   if (!$got_comma$1$off0) {
    label = 31;
    break L1;
   }
   __THREW__ = 0;
   $184 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
   $185 = __THREW__;
   __THREW__ = 0;
   if ($185 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$4 >> 2] = $184;
   $187 = HEAP32[$11 >> 2] | 0;
   if ($187 >>> 0 >= (HEAP32[$12 >> 2] | 0) >>> 0) {
    __THREW__ = 0;
    invoke_vii(51, $exprs | 0, $4 | 0);
    $193 = __THREW__;
    __THREW__ = 0;
    if ($193 & 1) {
     label = 23;
     break L1;
    } else {
     $$01 = 0;
     $got_comma$2$off0 = 0;
     break;
    }
   }
   if (!$187) $192 = 0; else {
    HEAP32[$187 >> 2] = $184;
    $192 = HEAP32[$11 >> 2] | 0;
   }
   HEAP32[$11 >> 2] = $192 + 4;
   $$01 = 0;
   $got_comma$2$off0 = 0;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  if ($$01) {
   label = 63;
   break;
  } else $got_comma$0$off0 = $got_comma$2$off0;
 }
 if ((label | 0) == 3) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  ___resumeException($34 | 0);
 } else if ((label | 0) == 8) {
  $48 = ___cxa_find_matching_catch() | 0;
  $49 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
  $eh$lpad$body$index5Z2D = $49;
  $eh$lpad$body$indexZ2D = $48;
 } else if ((label | 0) == 11) {
  $74 = ___cxa_find_matching_catch() | 0;
  $75 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
  $eh$lpad$body$index5Z2D = $75;
  $eh$lpad$body$indexZ2D = $74;
 } else if ((label | 0) == 16) {
  $84 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($84);
 } else if ((label | 0) == 21) {
  $92 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($92);
 } else if ((label | 0) == 23) {
  $94 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index5Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $94;
 } else if ((label | 0) == 28) {
  $107 = ___cxa_find_matching_catch() | 0;
  $108 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $eh$lpad$body$index5Z2D = $108;
  $eh$lpad$body$indexZ2D = $107;
 } else if ((label | 0) == 31) {
  $124 = $ss + 64 | 0;
  $125 = $ss + 8 | 0;
  HEAP32[$125 >> 2] = 592;
  $126 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 740;
  HEAP32[$124 >> 2] = 760;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $126 | 0);
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) {
   $141 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $141;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 572;
   HEAP32[$124 >> 2] = 612;
   HEAP32[$125 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $126 | 0);
   $133 = __THREW__;
   __THREW__ = 0;
   do if ($133 & 1) {
    $143 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index13Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $143;
   } else {
    HEAP32[$126 >> 2] = 904;
    $135 = $ss + 44 | 0;
    HEAP32[$135 + 0 >> 2] = 0;
    HEAP32[$135 + 4 >> 2] = 0;
    HEAP32[$135 + 8 >> 2] = 0;
    HEAP32[$135 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $126 | 0, $0 | 0);
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     $139 = ___cxa_find_matching_catch() | 0;
     $140 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($126);
     $eh$lpad$body$i$index13Z2D = $140;
     $eh$lpad$body$i$indexZ2D = $139;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $145 = invoke_iiii(25, $125 | 0, 36192, 29) | 0;
    $146 = __THREW__;
    __THREW__ = 0;
    L54 : do if ($146 & 1) label = 50; else {
     $148 = HEAP8[$element_kind >> 0] | 0;
     if (!($148 & 1)) {
      $158 = $element_kind + 1 | 0;
      $159 = ($148 & 255) >>> 1;
     } else {
      $158 = HEAP32[$element_kind + 8 >> 2] | 0;
      $159 = HEAP32[$element_kind + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $160 = invoke_iiii(25, $145 | 0, $158 | 0, $159 | 0) | 0;
     $161 = __THREW__;
     __THREW__ = 0;
     if ($161 & 1) label = 50; else {
      __THREW__ = 0;
      invoke_iiii(25, $160 | 0, 43448, 1) | 0;
      $163 = __THREW__;
      __THREW__ = 0;
      if ($163 & 1) label = 50; else {
       $165 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $3 | 0, $126 | 0);
       $166 = __THREW__;
       __THREW__ = 0;
       do if ($166 & 1) {
        $180 = ___cxa_find_matching_catch() | 0;
        $$0229 = tempRet0;
        $$0428 = $180;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $165 | 0, $6 | 0);
        $168 = __THREW__;
        __THREW__ = 0;
        if ($168 & 1) $$0 = 1; else {
         $170 = $165 + 12 | 0;
         HEAP32[$170 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
         HEAP32[$170 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
         HEAP32[$170 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
         HEAP32[$170 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $165 + 28 | 0, $3 | 0);
         $172 = __THREW__;
         __THREW__ = 0;
         if ($172 & 1) {
          $174 = ___cxa_find_matching_catch() | 0;
          $175 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
          $$0229 = $175;
          $$0428 = $174;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $165 | 0, 48, 176);
         $176 = __THREW__;
         __THREW__ = 0;
         if ($176 & 1) $$0 = 0; else {}
        }
        $182 = ___cxa_find_matching_catch() | 0;
        $183 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        if ($$0) {
         $$0229 = $183;
         $$0428 = $182;
        } else {
         $$13 = $183;
         $$15 = $182;
         break L54;
        }
       } while (0);
       ___cxa_free_exception($165 | 0);
       $$13 = $$0229;
       $$15 = $$0428;
      }
     }
    } while (0);
    if ((label | 0) == 50) {
     $178 = ___cxa_find_matching_catch() | 0;
     $$13 = tempRet0;
     $$15 = $178;
    }
    HEAP32[$ss >> 2] = 572;
    HEAP32[$124 >> 2] = 612;
    HEAP32[$125 >> 2] = 592;
    HEAP32[$126 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($126);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($124);
    $$2 = $$13;
    $$26 = $$15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    ___resumeException($$26 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index13Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($124);
  $eh$lpad$body$index5Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 } else if ((label | 0) == 63) {
  STACKTOP = sp;
  return;
 }
 $$2 = $eh$lpad$body$index5Z2D;
 $$26 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 ___resumeException($$26 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $loc, $obj, $f) {
 $this = $this | 0;
 $loc = $loc | 0;
 $obj = $obj | 0;
 $f = $f | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i119$i$i = 0, $$0$i$i$i$i119$i$i$ph = 0, $$0$i7$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i14 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa75 = 0, $$0$ph6$i$i$i7 = 0, $$0$ph6$i$i$i7$lcssa73 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i8 = 0, $$0121 = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i10 = 0, $$013$i$i$i10$lcssa = 0, $$013$i$i$i10$lcssa$lcssa = 0, $$0220 = 0, $$04 = 0, $$1 = 0, $$13 = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$lcssa = 0, $$idx$val$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa70 = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i$i$i$i$i$i = 0, $$pre$phi44Z2D = 0, $$pre$phi45Z2D = 0, $$pre$phi46Z2D = 0, $$pre$phi48Z2D = 0, $0 = 0, $1 = 0, $105 = 0, $108 = 0, $109 = 0, $111 = 0, $112 = 0, $116 = 0, $118 = 0, $12 = 0, $121 = 0, $124 = 0, $127 = 0, $128 = 0, $13 = 0, $130 = 0, $133 = 0, $137 = 0, $143 = 0, $145 = 0, $148 = 0, $149 = 0, $152 = 0, $153 = 0, $159 = 0, $161 = 0, $164 = 0, $171 = 0, $174 = 0, $176 = 0, $177 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $47 = 0, $48 = 0, $54 = 0, $55 = 0, $66 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $75 = 0, $76 = 0, $79 = 0, $81 = 0, $83 = 0, $86 = 0, $87 = 0, $91 = 0, $93 = 0, $95 = 0, $98 = 0, $__k$val$i = 0, $__k$val$i49 = 0, $__k$val$i51 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa68 = 0, $__nd$0$i$i$lcssa69 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa71 = 0, $__parent$i = 0, $__r$0$i = 0, $binds = 0, $found_at = 0, $self = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__parent$i = sp + 32 | 0;
 $found_at = sp + 28 | 0;
 $self = sp + 24 | 0;
 $0 = sp + 12 | 0;
 $binds = sp;
 HEAP32[$found_at >> 2] = 0;
 HEAP32[$self >> 2] = 0;
 $1 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $obj, $obj, 0, $found_at, $self) | 0;
 if (!$1) {
  $3 = ___cxa_allocate_exception(24) | 0;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $4 = HEAP8[$f >> 0] | 0;
  if (!($4 & 1)) $12 = ($4 & 255) >>> 1; else $12 = HEAP32[$f + 4 >> 2] | 0;
  __THREW__ = 0;
  invoke_viiii(13, $0 | 0, 36648, 22, $12 + 22 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 12; else {
   if (!(HEAP8[$f >> 0] & 1)) $21 = $f + 1 | 0; else $21 = HEAP32[$f + 8 >> 2] | 0;
   __THREW__ = 0;
   invoke_iiii(31, $0 | 0, $21 | 0, $12 | 0) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 12; else {
    __THREW__ = 0;
    invoke_viiii(16, $3 | 0, $this + 72 | 0, $loc | 0, $0 | 0);
    $25 = __THREW__;
    __THREW__ = 0;
    if ($25 & 1) $$04 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3 | 0, 36640, 183);
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) $$04 = 0; else {}
    }
    $31 = ___cxa_find_matching_catch() | 0;
    $32 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    if ($$04) {
     $$0121 = $31;
     $$0220 = $32;
    } else {
     $$1 = $31;
     $$13 = $32;
     ___resumeException($$1 | 0);
    }
   }
  }
  if ((label | 0) == 12) {
   $29 = ___cxa_find_matching_catch() | 0;
   $30 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $$0121 = $29;
   $$0220 = $30;
  }
  ___cxa_free_exception($3 | 0);
  $$1 = $$0121;
  $$13 = $$0220;
  ___resumeException($$1 | 0);
 }
 $33 = ___dynamic_cast($1, 36800, 36856, 0) | 0;
 if ($33) {
  $35 = $33 + 24 | 0;
  $36 = HEAP32[$35 >> 2] | 0;
  if (!$36) label = 26; else {
   $$0$ph6$i$i$i = $35;
   $$01$ph5$i$i$i = $36;
   L28 : while (1) {
    $$013$i$i$i = $$01$ph5$i$i$i;
    while (1) {
     if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
      $$013$i$i$i$lcssa = $$013$i$i$i;
      break;
     }
     $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
     if (!$$013$i$i$i) {
      $$0$ph6$i$i$i$lcssa75 = $$0$ph6$i$i$i;
      label = 22;
      break L28;
     }
    }
    $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
    if (!$$01$ph5$i$i$i) {
     $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
     label = 23;
     break;
    } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
   }
   if ((label | 0) == 22) $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa75; else if ((label | 0) == 23) $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
   if (($$0$ph$lcssa$i$i$i | 0) == ($35 | 0)) label = 26; else if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 26; else $47 = $$0$ph$lcssa$i$i$i;
  }
  if ((label | 0) == 26) $47 = $35;
  $48 = HEAP32[$47 + 24 >> 2] | 0;
  __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this + 72 | 0, $loc, $33, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $33 + 8 | 0);
  $$0 = $48;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $54 = $1 + 32 | 0;
 $55 = HEAP32[$54 >> 2] | 0;
 if (!$55) label = 38; else {
  $$0$ph6$i$i$i7 = $54;
  $$01$ph5$i$i$i8 = $55;
  L46 : while (1) {
   $$013$i$i$i10 = $$01$ph5$i$i$i8;
   while (1) {
    if ((HEAP32[$$013$i$i$i10 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
     $$013$i$i$i10$lcssa = $$013$i$i$i10;
     break;
    }
    $$013$i$i$i10 = HEAP32[$$013$i$i$i10 + 4 >> 2] | 0;
    if (!$$013$i$i$i10) {
     $$0$ph6$i$i$i7$lcssa73 = $$0$ph6$i$i$i7;
     label = 34;
     break L46;
    }
   }
   $$01$ph5$i$i$i8 = HEAP32[$$013$i$i$i10$lcssa >> 2] | 0;
   if (!$$01$ph5$i$i$i8) {
    $$013$i$i$i10$lcssa$lcssa = $$013$i$i$i10$lcssa;
    label = 35;
    break;
   } else $$0$ph6$i$i$i7 = $$013$i$i$i10$lcssa;
  }
  if ((label | 0) == 34) $$0$ph$lcssa$i$i$i14 = $$0$ph6$i$i$i7$lcssa73; else if ((label | 0) == 35) $$0$ph$lcssa$i$i$i14 = $$013$i$i$i10$lcssa$lcssa;
  if (($$0$ph$lcssa$i$i$i14 | 0) == ($54 | 0)) label = 38; else if ((HEAP32[$$0$ph$lcssa$i$i$i14 + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 38; else $66 = $$0$ph$lcssa$i$i$i14;
 }
 if ((label | 0) == 38) $66 = $54;
 $67 = HEAP32[$66 + 20 >> 2] | 0;
 $69 = $binds + 4 | 0;
 HEAP32[$69 >> 2] = 0;
 $70 = $binds + 8 | 0;
 HEAP32[$70 >> 2] = 0;
 $71 = $binds + 4 | 0;
 HEAP32[$binds >> 2] = $71;
 $$idx$val$i$i = HEAP32[$1 + 8 >> 2] | 0;
 $72 = $1 + 12 | 0;
 do if (($$idx$val$i$i | 0) == ($72 | 0)) {
  $$pre$phi48Z2D = $71;
  $179 = $__parent$i;
  $__k$val$i51 = HEAP32[$1 + 24 >> 2] | 0;
  label = 86;
 } else {
  $180 = $$idx$val$i$i;
  $79 = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $75 = invoke_ii(67, 24) | 0;
   $76 = __THREW__;
   __THREW__ = 0;
   if ($76 & 1) {
    label = 76;
    break;
   }
   $81 = $79 + 16 | 0;
   $83 = HEAP32[$81 >> 2] | 0;
   $86 = HEAP32[$81 + 4 >> 2] | 0;
   $87 = $75 + 16 | 0;
   HEAP32[$87 >> 2] = $83;
   HEAP32[$87 + 4 >> 2] = $86;
   $91 = $83;
   $$pre$i$i$i$i$i$i = HEAP32[$71 >> 2] | 0;
   do if ((HEAP32[$binds >> 2] | 0) == ($71 | 0)) {
    $112 = $71;
    label = 52;
   } else {
    $93 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($93) {
     $$0$i$i$i$i$i$i$i$i = $71;
     while (1) {
      $98 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$98 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $98; else {
       $$cast$i$i$i$i$i$i$i$i$lcssa = $98;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $95 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$95) {
       $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $95;
     }
     $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $91 >>> 0) {
     $112 = $$01$i$i$i$i$i$i$i$i;
     label = 52;
    } else if ($93) {
     $$0$i$i$i$i119$i$i = $71;
     $116 = $71;
     label = 62;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $91 >>> 0) {
       $105 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$105) {
        $$0$i$i$i$i119$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa71 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 61;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $105;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $91 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 65;
        break;
       }
       $108 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
       $109 = HEAP32[$108 >> 2] | 0;
       if (!$109) {
        $$0$i$i$i$i119$i$i$ph = $108;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa71 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 61;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $109;
      }
      $__nd$0$i20$i$i$i$i$in$i$i = $__nd$0$i20$i$i$i$i$in$i$i$be;
     }
     if ((label | 0) == 61) {
      label = 0;
      $$0$i$i$i$i119$i$i = $$0$i$i$i$i119$i$i$ph;
      $116 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa71;
      label = 62;
      break;
     } else if ((label | 0) == 65) {
      label = 0;
      $124 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      label = 66;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 52) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i = $71;
     $116 = $71;
     label = 62;
    } else {
     $111 = $112 + 4 | 0;
     $$pre$i$i = HEAP32[$111 >> 2] | 0;
     if (!$$pre$i$i) {
      $$0$i$i$i$i119$i$i = $111;
      $116 = $112;
      label = 62;
     } else {
      $124 = $$pre$i$i;
      label = 66;
     }
    }
   }
   if ((label | 0) == 62) {
    label = 0;
    HEAP32[$75 >> 2] = 0;
    HEAP32[$75 + 4 >> 2] = 0;
    HEAP32[$75 + 8 >> 2] = $116;
    HEAP32[$$0$i$i$i$i119$i$i >> 2] = $75;
    $118 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
    if (!$118) $121 = $75; else {
     HEAP32[$binds >> 2] = $118;
     $121 = HEAP32[$$0$i$i$i$i119$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$69 >> 2] | 0, $121);
    HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 1;
    $127 = $79;
   } else if ((label | 0) == 66) {
    label = 0;
    if (($124 | 0) == ($75 | 0)) $127 = $180; else {
     __ZdlPv($75);
     $127 = $180;
    }
   }
   $128 = HEAP32[$127 + 4 >> 2] | 0;
   if (!$128) {
    $$0$i$i$i$i$i = $127;
    while (1) {
     $133 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$133 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $133;
      break;
     } else $$0$i$i$i$i$i = $133;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $128;
    while (1) {
     $130 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$130) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $130;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($72 | 0)) break; else {
    $180 = $$01$i$i$i$i$i;
    $79 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 76) {
   $137 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$71 >> 2] | 0);
   ___resumeException($137 | 0);
  }
  $$pre = HEAP32[$71 >> 2] | 0;
  $__k$val$i = HEAP32[$1 + 24 >> 2] | 0;
  if (!$$pre) {
   $$pre$phi48Z2D = $71;
   $179 = $__parent$i;
   $__k$val$i51 = $__k$val$i;
   label = 86;
  } else {
   $__nd$0$i$i = $$pre;
   while (1) {
    $143 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
    if ($143 >>> 0 > $__k$val$i >>> 0) {
     $145 = HEAP32[$__nd$0$i$i >> 2] | 0;
     if (!$145) {
      $$lcssa70 = $__nd$0$i$i;
      $__nd$0$i$i$lcssa69 = $__nd$0$i$i;
      label = 81;
      break;
     } else $__nd$0$be$in$i$i = $145;
    } else {
     if ($143 >>> 0 >= $__k$val$i >>> 0) {
      $__nd$0$i$i$lcssa = $__nd$0$i$i;
      label = 87;
      break;
     }
     $148 = $__nd$0$i$i + 4 | 0;
     $149 = HEAP32[$148 >> 2] | 0;
     if (!$149) {
      $$lcssa = $148;
      $__nd$0$i$i$lcssa68 = $__nd$0$i$i;
      label = 85;
      break;
     } else $__nd$0$be$in$i$i = $149;
    }
    $__nd$0$i$i = $__nd$0$be$in$i$i;
   }
   if ((label | 0) == 81) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa69;
    $$0$i7$i = $$lcssa70;
    $$pre$phi46Z2D = $71;
    $159 = $__nd$0$i$i$lcssa69;
    $181 = $__parent$i;
    $__k$val$i49 = $__k$val$i;
    label = 88;
    break;
   } else if ((label | 0) == 85) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa68;
    $$0$i7$i = $$lcssa;
    $$pre$phi46Z2D = $71;
    $159 = $__nd$0$i$i$lcssa68;
    $181 = $__parent$i;
    $__k$val$i49 = $__k$val$i;
    label = 88;
    break;
   } else if ((label | 0) == 87) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
    if (!$__nd$0$i$i$lcssa) {
     $$0$i7$i = $__parent$i;
     $$pre$phi46Z2D = $71;
     $159 = 0;
     $181 = $__parent$i;
     $__k$val$i49 = $__k$val$i;
     label = 88;
     break;
    } else {
     $$pre$phi45Z2D = $71;
     $182 = $__parent$i;
     $__r$0$i = $__nd$0$i$i$lcssa;
     label = 92;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 86) {
  HEAP32[$__parent$i >> 2] = $71;
  $$0$i7$i = $71;
  $$pre$phi46Z2D = $$pre$phi48Z2D;
  $159 = $71;
  $181 = $179;
  $__k$val$i49 = $__k$val$i51;
  label = 88;
 }
 if ((label | 0) == 88) {
  __THREW__ = 0;
  $152 = invoke_ii(67, 24) | 0;
  $153 = __THREW__;
  __THREW__ = 0;
  if ($153 & 1) $$pre$phi44Z2D = $$pre$phi46Z2D; else {
   HEAP32[$152 + 16 >> 2] = $__k$val$i49;
   HEAP32[$152 + 20 >> 2] = 0;
   HEAP32[$152 >> 2] = 0;
   HEAP32[$152 + 4 >> 2] = 0;
   HEAP32[$152 + 8 >> 2] = $159;
   HEAP32[$$0$i7$i >> 2] = $152;
   $161 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
   if (!$161) $164 = $152; else {
    HEAP32[$binds >> 2] = $161;
    $164 = HEAP32[$$0$i7$i >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$69 >> 2] | 0, $164);
   HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 1;
   $$pre$phi45Z2D = $$pre$phi46Z2D;
   $182 = $181;
   $__r$0$i = $152;
   label = 92;
  }
 }
 if ((label | 0) == 92) {
  HEAP32[$__r$0$i + 20 >> 2] = $67;
  __THREW__ = 0;
  invoke_viiiiii(19, $this + 72 | 0, $loc | 0, $1 | 0, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $binds | 0);
  $171 = __THREW__;
  __THREW__ = 0;
  if ($171 & 1) $$pre$phi44Z2D = $$pre$phi45Z2D; else {
   $174 = HEAP32[$1 + 20 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$$pre$phi45Z2D >> 2] | 0);
   $$0 = $174;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $176 = ___cxa_find_matching_catch() | 0;
 $177 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$$pre$phi44Z2D >> 2] | 0);
 $$1 = $176;
 $$13 = $177;
 ___resumeException($$1 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($agg$result, $this, $k, $data) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $k = $k | 0;
 $data = $data | 0;
 var $$0 = 0, $$0$i = 0, $$0$i21 = 0, $$01 = 0, $$01$i = 0, $$01$i20 = 0, $$0339 = 0, $$0538 = 0, $$14 = 0, $$16 = 0, $$243 = 0, $$2742 = 0, $$3 = 0, $$38 = 0, $$4 = 0, $$49 = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $121 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $138 = 0, $140 = 0, $142 = 0, $144 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $153 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $69 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $81 = 0, $82 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $99 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i18$index12Z2D = 0, $eh$lpad$body$i18$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, $ss1 = 0, $this$idx$val$idx$val$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $0 = sp + 332 | 0;
 $1 = sp + 320 | 0;
 $ss = sp + 176 | 0;
 $2 = sp + 160 | 0;
 $ss1 = sp + 16 | 0;
 $3 = sp;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $4 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $6 = $agg$result + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $9 = $agg$result + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  ___resumeException($13 | 0);
 }
 $15 = $agg$result + 28 | 0;
 $16 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$15 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
 HEAP32[$15 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
 HEAP32[$15 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
 HEAP32[$15 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $18 = HEAP32[$this >> 2] | 0;
 $20 = HEAP32[$18 + 4 >> 2] | 0;
 $21 = $20 + 4 | 0;
 $23 = HEAP32[$20 >> 2] | 0;
 HEAP32[$23 + 4 >> 2] = HEAP32[$21 >> 2];
 HEAP32[HEAP32[$21 >> 2] >> 2] = $23;
 $26 = $18 + 8 | 0;
 HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 12 | 0);
 __ZdlPv($20);
 if ((HEAP32[$agg$result >> 2] | 0) == ($k | 0)) {
  if (!$data) {
   STACKTOP = sp;
   return;
  }
  if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($6, $data) | 0)) {
   STACKTOP = sp;
   return;
  }
  $81 = $ss1 + 64 | 0;
  $91 = $ss1 + 8 | 0;
  HEAP32[$91 >> 2] = 592;
  $92 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 740;
  HEAP32[$81 >> 2] = 760;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $92 | 0);
  $95 = __THREW__;
  __THREW__ = 0;
  if ($95 & 1) {
   $107 = ___cxa_find_matching_catch() | 0;
   $$0$i21 = tempRet0;
   $$01$i20 = $107;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 572;
   HEAP32[$81 >> 2] = 612;
   HEAP32[$91 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $92 | 0);
   $99 = __THREW__;
   __THREW__ = 0;
   do if ($99 & 1) {
    $109 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i18$index12Z2D = tempRet0;
    $eh$lpad$body$i18$indexZ2D = $109;
   } else {
    HEAP32[$92 >> 2] = 904;
    $101 = $ss1 + 44 | 0;
    HEAP32[$101 + 0 >> 2] = 0;
    HEAP32[$101 + 4 >> 2] = 0;
    HEAP32[$101 + 8 >> 2] = 0;
    HEAP32[$101 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $92 | 0, $0 | 0);
    $103 = __THREW__;
    __THREW__ = 0;
    if ($103 & 1) {
     $105 = ___cxa_find_matching_catch() | 0;
     $106 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($92);
     $eh$lpad$body$i18$index12Z2D = $106;
     $eh$lpad$body$i18$indexZ2D = $105;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $111 = invoke_iiii(25, $91 | 0, 36288, 18) | 0;
    $112 = __THREW__;
    __THREW__ = 0;
    L52 : do if ($112 & 1) label = 50; else {
     $114 = _strlen($data | 0) | 0;
     __THREW__ = 0;
     $115 = invoke_iiii(25, $111 | 0, $data | 0, $114 | 0) | 0;
     $116 = __THREW__;
     __THREW__ = 0;
     if ($116 & 1) label = 50; else {
      __THREW__ = 0;
      $118 = invoke_iiii(25, $115 | 0, 36272, 9) | 0;
      $119 = __THREW__;
      __THREW__ = 0;
      if ($119 & 1) label = 50; else {
       $121 = HEAP8[$6 >> 0] | 0;
       if (!($121 & 1)) {
        $131 = $6 + 1 | 0;
        $132 = ($121 & 255) >>> 1;
       } else {
        $131 = HEAP32[$agg$result + 12 >> 2] | 0;
        $132 = HEAP32[$agg$result + 8 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $118 | 0, $131 | 0, $132 | 0) | 0;
       $133 = __THREW__;
       __THREW__ = 0;
       if ($133 & 1) label = 50; else {
        $135 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $3 | 0, $92 | 0);
        $136 = __THREW__;
        __THREW__ = 0;
        L61 : do if ($136 & 1) {
         $150 = ___cxa_find_matching_catch() | 0;
         $$243 = tempRet0;
         $$2742 = $150;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $135 | 0, $9 | 0);
         $138 = __THREW__;
         __THREW__ = 0;
         do if ($138 & 1) $$0 = 1; else {
          $140 = $135 + 12 | 0;
          HEAP32[$140 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
          HEAP32[$140 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
          HEAP32[$140 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
          HEAP32[$140 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $135 + 28 | 0, $3 | 0);
          $142 = __THREW__;
          __THREW__ = 0;
          if ($142 & 1) {
           $144 = ___cxa_find_matching_catch() | 0;
           $145 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
           $$243 = $145;
           $$2742 = $144;
           break L61;
          }
          __THREW__ = 0;
          invoke_viii(4, $135 | 0, 48, 176);
          $146 = __THREW__;
          __THREW__ = 0;
          if ($146 & 1) {
           $$0 = 0;
           break;
          }
         } while (0);
         $152 = ___cxa_find_matching_catch() | 0;
         $153 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
         if ($$0) {
          $$243 = $153;
          $$2742 = $152;
         } else {
          $$3 = $153;
          $$38 = $152;
          break L52;
         }
        } while (0);
        ___cxa_free_exception($135 | 0);
        $$3 = $$243;
        $$38 = $$2742;
       }
      }
     }
    } while (0);
    if ((label | 0) == 50) {
     $148 = ___cxa_find_matching_catch() | 0;
     $$3 = tempRet0;
     $$38 = $148;
    }
    HEAP32[$ss1 >> 2] = 572;
    HEAP32[$81 >> 2] = 612;
    HEAP32[$91 >> 2] = 592;
    HEAP32[$92 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($92);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($81);
    $$4 = $$3;
    $$49 = $$38;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i21 = $eh$lpad$body$i18$index12Z2D;
   $$01$i20 = $eh$lpad$body$i18$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($81);
  $eh$lpad$body$index7Z2D = $$0$i21;
  $eh$lpad$body$indexZ2D = $$01$i20;
 } else {
  $33 = $ss + 64 | 0;
  $34 = $ss + 8 | 0;
  HEAP32[$34 >> 2] = 592;
  $35 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 740;
  HEAP32[$33 >> 2] = 760;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $35 | 0);
  $38 = __THREW__;
  __THREW__ = 0;
  if ($38 & 1) {
   $50 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $50;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 572;
   HEAP32[$33 >> 2] = 612;
   HEAP32[$34 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $35 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   do if ($42 & 1) {
    $52 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $52;
   } else {
    HEAP32[$35 >> 2] = 904;
    $44 = $ss + 44 | 0;
    HEAP32[$44 + 0 >> 2] = 0;
    HEAP32[$44 + 4 >> 2] = 0;
    HEAP32[$44 + 8 >> 2] = 0;
    HEAP32[$44 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $35 | 0, $1 | 0);
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $48 = ___cxa_find_matching_catch() | 0;
     $49 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
     $eh$lpad$body$i$index2Z2D = $49;
     $eh$lpad$body$i$indexZ2D = $48;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __THREW__ = 0;
    $54 = invoke_iiii(25, $34 | 0, 36256, 15) | 0;
    $55 = __THREW__;
    __THREW__ = 0;
    L15 : do if ($55 & 1) label = 24; else {
     __THREW__ = 0;
     $57 = invoke_ii(69, $k | 0) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) label = 24; else {
      $60 = _strlen($57 | 0) | 0;
      __THREW__ = 0;
      invoke_iiii(25, $54 | 0, $57 | 0, $60 | 0) | 0;
      $61 = __THREW__;
      __THREW__ = 0;
      if ($61 & 1) label = 24; else {
       __THREW__ = 0;
       $63 = invoke_iiii(25, $54 | 0, 36272, 9) | 0;
       $64 = __THREW__;
       __THREW__ = 0;
       if ($64 & 1) label = 24; else {
        __THREW__ = 0;
        invoke_vii(52, $63 | 0, $agg$result | 0);
        $66 = __THREW__;
        __THREW__ = 0;
        if ($66 & 1) label = 24; else {
         $68 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $2 | 0, $35 | 0);
         $69 = __THREW__;
         __THREW__ = 0;
         do if ($69 & 1) {
          $84 = ___cxa_find_matching_catch() | 0;
          $$0339 = tempRet0;
          $$0538 = $84;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $68 | 0, $9 | 0);
          $71 = __THREW__;
          __THREW__ = 0;
          if ($71 & 1) $$01 = 1; else {
           $73 = $68 + 12 | 0;
           HEAP32[$73 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
           HEAP32[$73 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
           HEAP32[$73 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
           HEAP32[$73 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $68 + 28 | 0, $2 | 0);
           $75 = __THREW__;
           __THREW__ = 0;
           if ($75 & 1) {
            $77 = ___cxa_find_matching_catch() | 0;
            $78 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
            $$0339 = $78;
            $$0538 = $77;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $68 | 0, 48, 176);
           $79 = __THREW__;
           __THREW__ = 0;
           if ($79 & 1) $$01 = 0; else {}
          }
          $86 = ___cxa_find_matching_catch() | 0;
          $87 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
          if ($$01) {
           $$0339 = $87;
           $$0538 = $86;
          } else {
           $$14 = $87;
           $$16 = $86;
           break L15;
          }
         } while (0);
         ___cxa_free_exception($68 | 0);
         $$14 = $$0339;
         $$16 = $$0538;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 24) {
     $82 = ___cxa_find_matching_catch() | 0;
     $$14 = tempRet0;
     $$16 = $82;
    }
    HEAP32[$ss >> 2] = 572;
    HEAP32[$33 >> 2] = 612;
    HEAP32[$34 >> 2] = 592;
    HEAP32[$35 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
    $$4 = $$14;
    $$49 = $$16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 }
 $$4 = $eh$lpad$body$index7Z2D;
 $$49 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 ___resumeException($$49 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$lcssa23 = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $110 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $126 = 0, $128 = 0, $13 = 0, $130 = 0, $132 = 0, $133 = 0, $136 = 0, $137 = 0, $139 = 0, $140 = 0, $141 = 0, $144 = 0, $145 = 0, $147 = 0, $153 = 0, $154 = 0, $155 = 0, $157 = 0, $158 = 0, $16 = 0, $165 = 0, $17 = 0, $170 = 0, $175 = 0, $178 = 0, $186 = 0, $189 = 0, $19 = 0, $192 = 0, $196 = 0, $2 = 0, $20 = 0, $205 = 0, $210 = 0, $212 = 0, $216 = 0, $218 = 0, $220 = 0, $222 = 0, $223 = 0, $23 = 0, $230 = 0, $233 = 0, $239 = 0, $241 = 0, $244 = 0, $25 = 0, $250 = 0, $251 = 0, $28 = 0, $3 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $45 = 0, $48 = 0, $49 = 0, $51 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $78 = 0, $80 = 0, $81 = 0, $84 = 0, $85 = 0, $87 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $__x$idx$val$i$i = 0, $__x$idx1$i = 0, $__x$idx1$val$i$i = 0, $__x$idx1$val$i$i$i$i = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index10Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i6$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$agg$result >> 2] = 16;
 HEAP32[$1 >> 2] = 0;
 $2 = $1 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $1 + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $__x$idx1$i = $v + 4 | 0;
 $6 = (HEAP32[$__x$idx1$i >> 2] | 0) - (HEAP32[$v >> 2] | 0) | 0;
 $7 = $6 >> 2;
 do if (!$7) {
  $__x$idx$val$i$i = 0;
  $__x$idx1$val$i$i = 0;
 } else {
  if ($7 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(179, $1 | 0);
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) label = 4;
  } else label = 4;
  if ((label | 0) == 4) {
   __THREW__ = 0;
   $12 = invoke_ii(67, $6 | 0) | 0;
   $13 = __THREW__;
   __THREW__ = 0;
   if (!($13 & 1)) {
    HEAP32[$2 >> 2] = $12;
    HEAP32[$1 >> 2] = $12;
    HEAP32[$3 >> 2] = $12 + ($7 << 2);
    $16 = HEAP32[$v >> 2] | 0;
    $17 = HEAP32[$__x$idx1$i >> 2] | 0;
    if (($16 | 0) == ($17 | 0)) {
     $__x$idx$val$i$i = $12;
     $__x$idx1$val$i$i = $12;
     break;
    }
    $$01$i$i = $16;
    $19 = $12;
    while (1) {
     HEAP32[$19 >> 2] = HEAP32[$$01$i$i >> 2];
     $20 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
     HEAP32[$2 >> 2] = $20;
     $$01$i$i = $$01$i$i + 4 | 0;
     if (($$01$i$i | 0) == ($17 | 0)) {
      $$lcssa24 = $20;
      break;
     } else $19 = $20;
    }
    $__x$idx$val$i$i = HEAP32[$1 >> 2] | 0;
    $__x$idx1$val$i$i = $$lcssa24;
    break;
   }
  }
  $23 = ___cxa_find_matching_catch() | 0;
  $25 = HEAP32[$1 >> 2] | 0;
  if (!$25) ___resumeException($23 | 0);
  $28 = HEAP32[$2 >> 2] | 0;
  if (($28 | 0) != ($25 | 0)) HEAP32[$2 >> 2] = $28 + (~(($28 + -4 - $25 | 0) >>> 2) << 2);
  __ZdlPv($25);
  ___resumeException($23 | 0);
 } while (0);
 HEAP32[$0 >> 2] = 0;
 $34 = $0 + 4 | 0;
 HEAP32[$34 >> 2] = 0;
 $35 = $0 + 8 | 0;
 HEAP32[$35 >> 2] = 0;
 $38 = $__x$idx1$val$i$i - $__x$idx$val$i$i | 0;
 $39 = $38 >> 2;
 do if (!$39) {
  $__x$idx1$val$i$i$i$i = 0;
  label = 26;
 } else {
  if ($39 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(179, $0 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   if (!($42 & 1)) label = 17;
  } else label = 17;
  if ((label | 0) == 17) {
   __THREW__ = 0;
   $44 = invoke_ii(67, $38 | 0) | 0;
   $45 = __THREW__;
   __THREW__ = 0;
   if (!($45 & 1)) {
    HEAP32[$34 >> 2] = $44;
    HEAP32[$0 >> 2] = $44;
    HEAP32[$35 >> 2] = $44 + ($39 << 2);
    $48 = HEAP32[$1 >> 2] | 0;
    $49 = HEAP32[$2 >> 2] | 0;
    if (($48 | 0) == ($49 | 0)) {
     $__x$idx1$val$i$i$i$i = $44;
     label = 26;
     break;
    }
    $$01$i$i$i = $48;
    $51 = $44;
    while (1) {
     HEAP32[$51 >> 2] = HEAP32[$$01$i$i$i >> 2];
     $52 = (HEAP32[$34 >> 2] | 0) + 4 | 0;
     HEAP32[$34 >> 2] = $52;
     $$01$i$i$i = $$01$i$i$i + 4 | 0;
     if (($$01$i$i$i | 0) == ($49 | 0)) {
      $$lcssa23 = $52;
      break;
     } else $51 = $52;
    }
    $__x$idx1$val$i$i$i$i = $$lcssa23;
    label = 26;
    break;
   }
  }
  $55 = ___cxa_find_matching_catch() | 0;
  $56 = tempRet0;
  $57 = HEAP32[$0 >> 2] | 0;
  $59 = $57;
  if (!$57) {
   $eh$lpad$body$index10Z2D = $56;
   $eh$lpad$body$indexZ2D = $55;
  } else {
   $60 = HEAP32[$34 >> 2] | 0;
   if (($60 | 0) != ($57 | 0)) HEAP32[$34 >> 2] = $60 + (~(($60 + -4 - $59 | 0) >>> 2) << 2);
   __ZdlPv($57);
   $eh$lpad$body$index10Z2D = $56;
   $eh$lpad$body$indexZ2D = $55;
  }
 } while (0);
 L37 : do if ((label | 0) == 26) {
  __THREW__ = 0;
  $66 = invoke_ii(67, 20) | 0;
  $67 = __THREW__;
  __THREW__ = 0;
  L39 : do if ($67 & 1) label = 78; else {
   HEAP32[$66 >> 2] = 39968;
   $69 = $66 + 8 | 0;
   HEAP32[$69 >> 2] = 0;
   $70 = $66 + 12 | 0;
   HEAP32[$70 >> 2] = 0;
   $71 = $66 + 16 | 0;
   HEAP32[$71 >> 2] = 0;
   $74 = $__x$idx1$val$i$i$i$i - (HEAP32[$0 >> 2] | 0) | 0;
   $75 = $74 >> 2;
   do if ($75) {
    if ($75 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(179, $69 | 0);
     $78 = __THREW__;
     __THREW__ = 0;
     if (!($78 & 1)) label = 30;
    } else label = 30;
    if ((label | 0) == 30) {
     __THREW__ = 0;
     $80 = invoke_ii(67, $74 | 0) | 0;
     $81 = __THREW__;
     __THREW__ = 0;
     if (!($81 & 1)) {
      HEAP32[$70 >> 2] = $80;
      HEAP32[$69 >> 2] = $80;
      HEAP32[$71 >> 2] = $80 + ($75 << 2);
      $84 = HEAP32[$0 >> 2] | 0;
      $85 = HEAP32[$34 >> 2] | 0;
      if (($84 | 0) == ($85 | 0)) break;
      $$01$i$i$i$i$i = $84;
      $87 = $80;
      do {
       HEAP32[$87 >> 2] = HEAP32[$$01$i$i$i$i$i >> 2];
       $87 = (HEAP32[$70 >> 2] | 0) + 4 | 0;
       HEAP32[$70 >> 2] = $87;
       $$01$i$i$i$i$i = $$01$i$i$i$i$i + 4 | 0;
      } while (($$01$i$i$i$i$i | 0) != ($85 | 0));
      break;
     }
    }
    $91 = ___cxa_find_matching_catch() | 0;
    $92 = tempRet0;
    $93 = HEAP32[$69 >> 2] | 0;
    $95 = $93;
    if ($93) {
     $96 = HEAP32[$70 >> 2] | 0;
     if (($96 | 0) != ($93 | 0)) HEAP32[$70 >> 2] = $96 + (~(($96 + -4 - $95 | 0) >>> 2) << 2);
     __ZdlPv($93);
    }
    __ZdlPv($66);
    $eh$lpad$body$i$index2Z2D = $92;
    $eh$lpad$body$i$indexZ2D = $91;
    break L39;
   } while (0);
   $102 = $this + 20 | 0;
   $103 = $this + 24 | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   $105 = $this + 28 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   if ($104 >>> 0 < $106 >>> 0) {
    if (!$104) $110 = 0; else {
     HEAP32[$104 >> 2] = $66;
     $110 = HEAP32[$103 >> 2] | 0;
    }
    $109 = $110 + 4 | 0;
    HEAP32[$103 >> 2] = $109;
    $$idx$pre$phi$i$iZZ2D = $102;
    $$idx1$val$i$i = $109;
   } else {
    $this$idx2$val$i$i$i$i = HEAP32[$102 >> 2] | 0;
    $115 = ($104 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
    if ($115 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(179, $102 | 0);
     $117 = __THREW__;
     __THREW__ = 0;
     if ($117 & 1) {
      label = 78;
      break;
     }
     $$idx1$val$i$i$i$i$i$i = HEAP32[$105 >> 2] | 0;
     $120 = HEAP32[$102 >> 2] | 0;
    } else {
     $$idx1$val$i$i$i$i$i$i = $106;
     $120 = $this$idx2$val$i$i$i$i;
    }
    $121 = $120;
    $122 = $$idx1$val$i$i$i$i$i$i - $121 | 0;
    if ($122 >> 2 >>> 0 < 536870911) {
     $128 = $122 >> 1;
     $130 = $128 >>> 0 < $115 >>> 0 ? $115 : $128;
     $132 = (HEAP32[$103 >> 2] | 0) - $121 | 0;
     $133 = $132 >> 2;
     if (!$130) {
      $$0$i8$i$i$i$i = 0;
      $140 = 0;
      $141 = $133;
      $145 = $132;
     } else {
      $$0$i7$i$i$i$i = $130;
      $250 = $133;
      $251 = $132;
      label = 49;
     }
    } else {
     $126 = (HEAP32[$103 >> 2] | 0) - $121 | 0;
     $$0$i7$i$i$i$i = 1073741823;
     $250 = $126 >> 2;
     $251 = $126;
     label = 49;
    }
    if ((label | 0) == 49) {
     __THREW__ = 0;
     $136 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
     $137 = __THREW__;
     __THREW__ = 0;
     if ($137 & 1) {
      label = 78;
      break;
     }
     $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
     $140 = $136;
     $141 = $250;
     $145 = $251;
    }
    $139 = $140 + ($141 << 2) | 0;
    if ($139) HEAP32[$139 >> 2] = $66;
    $144 = $140 + ($141 + 1 << 2) | 0;
    _memcpy($140 | 0, $120 | 0, $145 | 0) | 0;
    HEAP32[$102 >> 2] = $140;
    HEAP32[$103 >> 2] = $144;
    HEAP32[$105 >> 2] = $140 + ($$0$i8$i$i$i$i << 2);
    if (!$120) {
     $$idx$pre$phi$i$iZZ2D = $102;
     $$idx1$val$i$i = $144;
    } else {
     __ZdlPv($120);
     $$idx$pre$phi$i$iZZ2D = $102;
     $$idx1$val$i$i = HEAP32[$103 >> 2] | 0;
    }
   }
   $147 = $this + 16 | 0;
   HEAP8[$66 + 4 >> 0] = HEAP8[$147 >> 0] | 0;
   $153 = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
   $154 = $this + 48 | 0;
   HEAP32[$154 >> 2] = $153;
   $155 = HEAP32[$0 >> 2] | 0;
   $157 = $155;
   if (!$155) $165 = $153; else {
    $158 = HEAP32[$34 >> 2] | 0;
    if (($158 | 0) != ($155 | 0)) HEAP32[$34 >> 2] = $158 + (~(($158 + -4 - $157 | 0) >>> 2) << 2);
    __ZdlPv($155);
    $165 = HEAP32[$154 >> 2] | 0;
   }
   L88 : do if ($165 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) {
    $170 = $this + 44 | 0;
    if (+($165 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$170 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(63, $this | 0, $66 | 0);
     $175 = __THREW__;
     __THREW__ = 0;
     do if (!($175 & 1)) {
      __THREW__ = 0;
      invoke_vii(64, $this + 72 | 0, $this | 0);
      $178 = __THREW__;
      __THREW__ = 0;
      if (!($178 & 1)) {
       if (HEAP32[$this + 56 >> 2] & 16) {
        __THREW__ = 0;
        invoke_vii(63, $this | 0, HEAP32[$this + 64 >> 2] | 0);
        $186 = __THREW__;
        __THREW__ = 0;
        if ($186 & 1) break;
       }
       $189 = (HEAP8[$147 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$147 >> 0] = $189;
       $$idx6$i$i = $this + 20 | 0;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$103 >> 2] | 0;
       if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $$idx7$val18$i$i = $$idx7$val12$i$i;
        $196 = $189;
        $i$013$i$i = 0;
        while (1) {
         $192 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$192 + 4 >> 0] | 0) == $196 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx7$val18$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$192) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx7$val18$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$192 >> 2] | 0) + 4 >> 2] & 255]($192);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$103 >> 2] | 0;
          }
          $205 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($205 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $210 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($205 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $210 = HEAP32[$103 >> 2] | 0;
          }
          $scevgep4$i$i$i$i6$i = $210 + -4 | 0;
          HEAP32[$103 >> 2] = $scevgep4$i$i$i$i6$i;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i6$i;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $212 = $i$1$i$i + 1 | 0;
         $216 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($212 >>> 0 >= $216 >>> 0) {
          $$lcssa = $216;
          break;
         }
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $$idx7$val18$i$i = $$idx7$val$i$i;
         $196 = HEAP8[$147 >> 0] | 0;
         $i$013$i$i = $212;
        }
        $$lcssa$i$i = $$lcssa;
       }
       HEAP32[$154 >> 2] = $$lcssa$i$i;
       HEAP32[$170 >> 2] = $$lcssa$i$i;
       break L88;
      }
     } while (0);
     $239 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index10Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $239;
     break L37;
    }
   } while (0);
   HEAP32[$agg$result + 8 >> 2] = $66;
   $230 = HEAP32[$1 >> 2] | 0;
   if (!$230) {
    STACKTOP = sp;
    return;
   }
   $233 = HEAP32[$2 >> 2] | 0;
   if (($233 | 0) != ($230 | 0)) HEAP32[$2 >> 2] = $233 + (~(($233 + -4 - $230 | 0) >>> 2) << 2);
   __ZdlPv($230);
   STACKTOP = sp;
   return;
  } while (0);
  if ((label | 0) == 78) {
   $218 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $218;
  }
  $220 = HEAP32[$0 >> 2] | 0;
  $222 = $220;
  if (!$220) {
   $eh$lpad$body$index10Z2D = $eh$lpad$body$i$index2Z2D;
   $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  } else {
   $223 = HEAP32[$34 >> 2] | 0;
   if (($223 | 0) != ($220 | 0)) HEAP32[$34 >> 2] = $223 + (~(($223 + -4 - $222 | 0) >>> 2) << 2);
   __ZdlPv($220);
   $eh$lpad$body$index10Z2D = $eh$lpad$body$i$index2Z2D;
   $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  }
 } while (0);
 $241 = HEAP32[$1 >> 2] | 0;
 if (!$241) ___resumeException($eh$lpad$body$indexZ2D | 0);
 $244 = HEAP32[$2 >> 2] | 0;
 if (($244 | 0) != ($241 | 0)) HEAP32[$2 >> 2] = $244 + (~(($244 + -4 - $241 | 0) >>> 2) << 2);
 __ZdlPv($241);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE($this, $loc, $builtin, $args, $params) {
 $this = $this | 0;
 $loc = $loc | 0;
 $builtin = $builtin | 0;
 $args = $args | 0;
 $params = $params | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$03 = 0, $$1230 = 0, $$1429 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $0 = 0, $1 = 0, $10 = 0, $103 = 0, $104 = 0, $105 = 0, $109 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $133 = 0, $135 = 0, $142 = 0, $143 = 0, $144 = 0, $148 = 0, $149 = 0, $150 = 0, $152 = 0, $153 = 0, $156 = 0, $158 = 0, $160 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $174 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $5 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $70 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, $args$idx16$val = 0, $args$idx17$val = 0, $args$idx8$val = 0, $args$idx9 = 0, $args$idx9$val = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body20$index9Z2D = 0, $eh$lpad$body20$indexZ2D = 0, $i$041 = 0, $params$idx$val = 0, $params$idx10 = 0, $params$idx13$val = 0, $params$idx14$val = 0, $prefix$036 = 0, $prefix$135 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $0 = sp + 232 | 0;
 $1 = sp + 208 | 0;
 $ss = sp + 64 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $args$idx8$val = HEAP32[$args >> 2] | 0;
 $args$idx9 = $args + 4 | 0;
 $args$idx9$val = HEAP32[$args$idx9 >> 2] | 0;
 $10 = $args$idx9$val - $args$idx8$val >> 4;
 $params$idx$val = HEAP32[$params >> 2] | 0;
 $params$idx10 = $params + 4 | 0;
 do if (($10 | 0) == ((HEAP32[$params$idx10 >> 2] | 0) - $params$idx$val >> 2 | 0)) {
  if (($args$idx9$val | 0) == ($args$idx8$val | 0)) {
   STACKTOP = sp;
   return;
  }
  $i$041 = 0;
  do {
   if ((HEAP32[$args$idx8$val + ($i$041 << 4) >> 2] | 0) != (HEAP32[$params$idx$val + ($i$041 << 2) >> 2] | 0)) {
    label = 8;
    break;
   }
   $i$041 = $i$041 + 1 | 0;
  } while ($i$041 >>> 0 < $10 >>> 0);
  if ((label | 0) == 8) break;
  STACKTOP = sp;
  return;
 } while (0);
 __Z20jsonnet_builtin_declm($1, $builtin);
 $24 = $ss + 64 | 0;
 $25 = $ss + 8 | 0;
 HEAP32[$25 >> 2] = 592;
 $26 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$24 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $26 | 0);
 $29 = __THREW__;
 __THREW__ = 0;
 L14 : do if ($29 & 1) {
  $41 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $41;
  label = 39;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 572;
  HEAP32[$24 >> 2] = 612;
  HEAP32[$25 >> 2] = 592;
  __THREW__ = 0;
  invoke_vi(177, $26 | 0);
  $33 = __THREW__;
  __THREW__ = 0;
  do if ($33 & 1) {
   $43 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $43;
  } else {
   HEAP32[$26 >> 2] = 904;
   $35 = $ss + 44 | 0;
   HEAP32[$35 + 0 >> 2] = 0;
   HEAP32[$35 + 4 >> 2] = 0;
   HEAP32[$35 + 8 >> 2] = 0;
   HEAP32[$35 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$0 + 0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $26 | 0, $0 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $39 = ___cxa_find_matching_catch() | 0;
    $40 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
    $eh$lpad$body$i$index2Z2D = $40;
    $eh$lpad$body$i$indexZ2D = $39;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   HEAP32[$3 + 0 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $45 = HEAP8[$1 >> 0] | 0;
   if (!($45 & 1)) $53 = ($45 & 255) >>> 1; else $53 = HEAP32[$1 + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $3 | 0, 39560, 17, $53 + 17 | 0);
   $54 = __THREW__;
   __THREW__ = 0;
   L26 : do if ($54 & 1) label = 24; else {
    if (!(HEAP8[$1 >> 0] & 1)) $62 = $1 + 1 | 0; else $62 = HEAP32[$1 + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $3 | 0, $62 | 0, $53 | 0) | 0;
    $63 = __THREW__;
    __THREW__ = 0;
    if ($63 & 1) label = 24; else {
     __THREW__ = 0;
     $67 = invoke_iii(27, $3 | 0, 39584) | 0;
     $68 = __THREW__;
     __THREW__ = 0;
     do if ($68 & 1) {
      $115 = ___cxa_find_matching_catch() | 0;
      $$01 = $115;
      $$03 = tempRet0;
     } else {
      HEAP32[$2 + 0 >> 2] = HEAP32[$67 + 0 >> 2];
      HEAP32[$2 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
      HEAP32[$2 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
      HEAP32[$67 + 0 >> 2] = 0;
      HEAP32[$67 + 4 >> 2] = 0;
      HEAP32[$67 + 8 >> 2] = 0;
      $70 = HEAP8[$2 >> 0] | 0;
      if (!($70 & 1)) {
       $80 = $2 + 1 | 0;
       $81 = ($70 & 255) >>> 1;
      } else {
       $80 = HEAP32[$2 + 8 >> 2] | 0;
       $81 = HEAP32[$2 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $25 | 0, $80 | 0, $81 | 0) | 0;
      $82 = __THREW__;
      __THREW__ = 0;
      if ($82 & 1) {
       $117 = ___cxa_find_matching_catch() | 0;
       $118 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $$01 = $117;
       $$03 = $118;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $params$idx13$val = HEAP32[$params >> 2] | 0;
      $params$idx14$val = HEAP32[$params$idx10 >> 2] | 0;
      do if (($params$idx13$val | 0) != ($params$idx14$val | 0)) {
       $85 = $4 + 1 | 0;
       $86 = $4 + 8 | 0;
       $87 = $4 + 4 | 0;
       $89 = $params$idx13$val;
       $prefix$036 = 46680;
       while (1) {
        $88 = HEAP32[$89 >> 2] | 0;
        $90 = _strlen($prefix$036 | 0) | 0;
        __THREW__ = 0;
        $91 = invoke_iiii(25, $25 | 0, $prefix$036 | 0, $90 | 0) | 0;
        $92 = __THREW__;
        __THREW__ = 0;
        if ($92 & 1) {
         label = 41;
         break;
        }
        __THREW__ = 0;
        invoke_vii(61, $4 | 0, $88 | 0);
        $94 = __THREW__;
        __THREW__ = 0;
        if ($94 & 1) {
         label = 41;
         break;
        }
        $96 = HEAP8[$4 >> 0] | 0;
        if (!($96 & 1)) {
         $103 = $85;
         $104 = ($96 & 255) >>> 1;
        } else {
         $103 = HEAP32[$86 >> 2] | 0;
         $104 = HEAP32[$87 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(25, $91 | 0, $103 | 0, $104 | 0) | 0;
        $105 = __THREW__;
        __THREW__ = 0;
        if ($105 & 1) {
         label = 47;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        $89 = $89 + 4 | 0;
        if (($89 | 0) == ($params$idx14$val | 0)) {
         label = 48;
         break;
        } else $prefix$036 = 36528;
       }
       if ((label | 0) == 41) {
        $111 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body20$index9Z2D = tempRet0;
        $eh$lpad$body20$indexZ2D = $111;
        label = 43;
        break L26;
       } else if ((label | 0) == 47) {
        $119 = ___cxa_find_matching_catch() | 0;
        $120 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        $$2 = $119;
        $$25 = $120;
        break L26;
       } else if ((label | 0) == 48) break;
      } while (0);
      __THREW__ = 0;
      invoke_iiii(25, $25 | 0, 39600, 11) | 0;
      $121 = __THREW__;
      __THREW__ = 0;
      if (!($121 & 1)) {
       $args$idx16$val = HEAP32[$args >> 2] | 0;
       $args$idx17$val = HEAP32[$args$idx9 >> 2] | 0;
       do if (($args$idx16$val | 0) != ($args$idx17$val | 0)) {
        $124 = $5 + 1 | 0;
        $125 = $5 + 8 | 0;
        $126 = $5 + 4 | 0;
        $128 = $args$idx16$val;
        $prefix$135 = 46680;
        while (1) {
         $127 = HEAP32[$128 >> 2] | 0;
         $129 = _strlen($prefix$135 | 0) | 0;
         __THREW__ = 0;
         $130 = invoke_iiii(25, $25 | 0, $prefix$135 | 0, $129 | 0) | 0;
         $131 = __THREW__;
         __THREW__ = 0;
         if ($131 & 1) {
          label = 40;
          break;
         }
         __THREW__ = 0;
         invoke_vii(61, $5 | 0, $127 | 0);
         $133 = __THREW__;
         __THREW__ = 0;
         if ($133 & 1) {
          label = 40;
          break;
         }
         $135 = HEAP8[$5 >> 0] | 0;
         if (!($135 & 1)) {
          $142 = $124;
          $143 = ($135 & 255) >>> 1;
         } else {
          $142 = HEAP32[$125 >> 2] | 0;
          $143 = HEAP32[$126 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $130 | 0, $142 | 0, $143 | 0) | 0;
         $144 = __THREW__;
         __THREW__ = 0;
         if ($144 & 1) {
          label = 59;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         $128 = $128 + 16 | 0;
         if (($128 | 0) == ($args$idx17$val | 0)) {
          label = 60;
          break;
         } else $prefix$135 = 36528;
        }
        if ((label | 0) == 40) {
         $109 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body20$index9Z2D = tempRet0;
         $eh$lpad$body20$indexZ2D = $109;
         label = 43;
         break L26;
        } else if ((label | 0) == 59) {
         $148 = ___cxa_find_matching_catch() | 0;
         $149 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         $$2 = $148;
         $$25 = $149;
         break L26;
        } else if ((label | 0) == 60) break;
       } while (0);
       __THREW__ = 0;
       invoke_iiii(25, $25 | 0, 40088, 1) | 0;
       $150 = __THREW__;
       __THREW__ = 0;
       if (!($150 & 1)) {
        $152 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $6 | 0, $26 | 0);
        $153 = __THREW__;
        __THREW__ = 0;
        if ($153 & 1) {
         $160 = ___cxa_find_matching_catch() | 0;
         $$1230 = $160;
         $$1429 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(16, $152 | 0, $this + 72 | 0, $loc | 0, $6 | 0);
         $156 = __THREW__;
         __THREW__ = 0;
         do if ($156 & 1) $$0 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $152 | 0, 36640, 183);
          $158 = __THREW__;
          __THREW__ = 0;
          if ($158 & 1) {
           $$0 = 0;
           break;
          }
         } while (0);
         $162 = ___cxa_find_matching_catch() | 0;
         $163 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
         if ($$0) {
          $$1230 = $162;
          $$1429 = $163;
         } else {
          $$2 = $162;
          $$25 = $163;
          break L26;
         }
        }
        ___cxa_free_exception($152 | 0);
        $$2 = $$1230;
        $$25 = $$1429;
        break L26;
       }
      }
      $113 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body20$index9Z2D = tempRet0;
      $eh$lpad$body20$indexZ2D = $113;
      label = 43;
      break L26;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$2 = $$01;
     $$25 = $$03;
    }
   } while (0);
   if ((label | 0) == 24) {
    $65 = ___cxa_find_matching_catch() | 0;
    $66 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $eh$lpad$body20$index9Z2D = $66;
    $eh$lpad$body20$indexZ2D = $65;
    label = 43;
   }
   if ((label | 0) == 43) {
    $$2 = $eh$lpad$body20$indexZ2D;
    $$25 = $eh$lpad$body20$index9Z2D;
   }
   HEAP32[$ss >> 2] = 572;
   HEAP32[$24 >> 2] = 612;
   HEAP32[$25 >> 2] = 592;
   HEAP32[$26 >> 2] = 904;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
   $$3 = $$2;
   $$36 = $$25;
   break L14;
  } while (0);
  $$0$i = $eh$lpad$body$i$index2Z2D;
  $$01$i = $eh$lpad$body$i$indexZ2D;
  label = 39;
 } while (0);
 if ((label | 0) == 39) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
  $$3 = $$01$i;
  $$36 = $$0$i;
 }
 $164 = $1 + 12 | 0;
 $165 = HEAP32[$164 >> 2] | 0;
 if (!$165) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($$3 | 0);
 }
 $167 = $1 + 16 | 0;
 $168 = HEAP32[$167 >> 2] | 0;
 if (($168 | 0) == ($165 | 0)) $174 = $165; else {
  $171 = $168;
  do {
   $170 = $171 + -12 | 0;
   HEAP32[$167 >> 2] = $170;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170);
   $171 = HEAP32[$167 >> 2] | 0;
  } while (($171 | 0) != ($165 | 0));
  $174 = HEAP32[$164 >> 2] | 0;
 }
 __ZdlPv($174);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$3 | 0);
}

function _free($mem) {
 $mem = $mem | 0;
 var $$lcssa = 0, $$lcssa71 = 0, $$pre$phi60Z2D = 0, $$pre$phi62Z2D = 0, $$pre$phiZ2D = 0, $$sum2 = 0, $1 = 0, $103 = 0, $104 = 0, $111 = 0, $112 = 0, $12 = 0, $120 = 0, $128 = 0, $133 = 0, $134 = 0, $137 = 0, $139 = 0, $14 = 0, $141 = 0, $15 = 0, $156 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $172 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $181 = 0, $182 = 0, $184 = 0, $185 = 0, $19 = 0, $191 = 0, $192 = 0, $2 = 0, $201 = 0, $206 = 0, $210 = 0, $216 = 0, $22 = 0, $231 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $240 = 0, $241 = 0, $247 = 0, $252 = 0, $253 = 0, $256 = 0, $258 = 0, $26 = 0, $261 = 0, $266 = 0, $272 = 0, $276 = 0, $277 = 0, $284 = 0, $293 = 0, $296 = 0, $301 = 0, $308 = 0, $309 = 0, $310 = 0, $318 = 0, $39 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $97 = 0, $F16$0 = 0, $I18$0 = 0, $K19$054 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$053 = 0, $T$053$lcssa = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0;
 if (!$mem) return;
 $1 = $mem + -8 | 0;
 $2 = HEAP32[10520] | 0;
 if ($1 >>> 0 < $2 >>> 0) _abort();
 $5 = HEAP32[$mem + -4 >> 2] | 0;
 $6 = $5 & 3;
 if (($6 | 0) == 1) _abort();
 $8 = $5 & -8;
 $9 = $mem + ($8 + -8) | 0;
 do if (!($5 & 1)) {
  $12 = HEAP32[$1 >> 2] | 0;
  if (!$6) return;
  $$sum2 = -8 - $12 | 0;
  $14 = $mem + $$sum2 | 0;
  $15 = $12 + $8 | 0;
  if ($14 >>> 0 < $2 >>> 0) _abort();
  if (($14 | 0) == (HEAP32[10521] | 0)) {
   $103 = $mem + ($8 + -4) | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if (($104 & 3 | 0) != 3) {
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   HEAP32[10518] = $15;
   HEAP32[$103 >> 2] = $104 & -2;
   HEAP32[$mem + ($$sum2 + 4) >> 2] = $15 | 1;
   HEAP32[$9 >> 2] = $15;
   return;
  }
  $19 = $12 >>> 3;
  if ($12 >>> 0 < 256) {
   $22 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   $24 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
   $26 = 42104 + ($19 << 1 << 2) | 0;
   if (($22 | 0) != ($26 | 0)) {
    if ($22 >>> 0 < $2 >>> 0) _abort();
    if ((HEAP32[$22 + 12 >> 2] | 0) != ($14 | 0)) _abort();
   }
   if (($24 | 0) == ($22 | 0)) {
    HEAP32[10516] = HEAP32[10516] & ~(1 << $19);
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   if (($24 | 0) == ($26 | 0)) $$pre$phi62Z2D = $24 + 8 | 0; else {
    if ($24 >>> 0 < $2 >>> 0) _abort();
    $39 = $24 + 8 | 0;
    if ((HEAP32[$39 >> 2] | 0) == ($14 | 0)) $$pre$phi62Z2D = $39; else _abort();
   }
   HEAP32[$22 + 12 >> 2] = $24;
   HEAP32[$$pre$phi62Z2D >> 2] = $22;
   $p$0 = $14;
   $psize$0 = $15;
   break;
  }
  $44 = HEAP32[$mem + ($$sum2 + 24) >> 2] | 0;
  $46 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
  do if (($46 | 0) == ($14 | 0)) {
   $57 = $mem + ($$sum2 + 20) | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (!$58) {
    $60 = $mem + ($$sum2 + 16) | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    if (!$61) {
     $R$1 = 0;
     break;
    } else {
     $R$0$ph = $61;
     $RP$0$ph = $60;
    }
   } else {
    $R$0$ph = $58;
    $RP$0$ph = $57;
   }
   $R$0 = $R$0$ph;
   $RP$0 = $RP$0$ph;
   while (1) {
    $63 = $R$0 + 20 | 0;
    $64 = HEAP32[$63 >> 2] | 0;
    if (!$64) {
     $66 = $R$0 + 16 | 0;
     $67 = HEAP32[$66 >> 2] | 0;
     if (!$67) {
      $R$0$lcssa = $R$0;
      $RP$0$lcssa = $RP$0;
      break;
     } else {
      $R$0$be = $67;
      $RP$0$be = $66;
     }
    } else {
     $R$0$be = $64;
     $RP$0$be = $63;
    }
    $R$0 = $R$0$be;
    $RP$0 = $RP$0$be;
   }
   if ($RP$0$lcssa >>> 0 < $2 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $49 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   if ($49 >>> 0 < $2 >>> 0) _abort();
   $51 = $49 + 12 | 0;
   if ((HEAP32[$51 >> 2] | 0) != ($14 | 0)) _abort();
   $54 = $46 + 8 | 0;
   if ((HEAP32[$54 >> 2] | 0) == ($14 | 0)) {
    HEAP32[$51 >> 2] = $46;
    HEAP32[$54 >> 2] = $49;
    $R$1 = $46;
    break;
   } else _abort();
  } while (0);
  if (!$44) {
   $p$0 = $14;
   $psize$0 = $15;
  } else {
   $72 = HEAP32[$mem + ($$sum2 + 28) >> 2] | 0;
   $73 = 42368 + ($72 << 2) | 0;
   if (($14 | 0) == (HEAP32[$73 >> 2] | 0)) {
    HEAP32[$73 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[10517] = HEAP32[10517] & ~(1 << $72);
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   } else {
    if ($44 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
    $82 = $44 + 16 | 0;
    if ((HEAP32[$82 >> 2] | 0) == ($14 | 0)) HEAP32[$82 >> 2] = $R$1; else HEAP32[$44 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   }
   $87 = HEAP32[10520] | 0;
   if ($R$1 >>> 0 < $87 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $44;
   $91 = HEAP32[$mem + ($$sum2 + 16) >> 2] | 0;
   do if ($91) if ($91 >>> 0 < $87 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $91;
    HEAP32[$91 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $97 = HEAP32[$mem + ($$sum2 + 20) >> 2] | 0;
   if (!$97) {
    $p$0 = $14;
    $psize$0 = $15;
   } else if ($97 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $97;
    HEAP32[$97 + 24 >> 2] = $R$1;
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
  }
 } else {
  $p$0 = $1;
  $psize$0 = $8;
 } while (0);
 if ($p$0 >>> 0 >= $9 >>> 0) _abort();
 $111 = $mem + ($8 + -4) | 0;
 $112 = HEAP32[$111 >> 2] | 0;
 if (!($112 & 1)) _abort();
 if (!($112 & 2)) {
  if (($9 | 0) == (HEAP32[10522] | 0)) {
   $120 = (HEAP32[10519] | 0) + $psize$0 | 0;
   HEAP32[10519] = $120;
   HEAP32[10522] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $120 | 1;
   if (($p$0 | 0) != (HEAP32[10521] | 0)) return;
   HEAP32[10521] = 0;
   HEAP32[10518] = 0;
   return;
  }
  if (($9 | 0) == (HEAP32[10521] | 0)) {
   $128 = (HEAP32[10518] | 0) + $psize$0 | 0;
   HEAP32[10518] = $128;
   HEAP32[10521] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $128 | 1;
   HEAP32[$p$0 + $128 >> 2] = $128;
   return;
  }
  $133 = ($112 & -8) + $psize$0 | 0;
  $134 = $112 >>> 3;
  do if ($112 >>> 0 < 256) {
   $137 = HEAP32[$mem + $8 >> 2] | 0;
   $139 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   $141 = 42104 + ($134 << 1 << 2) | 0;
   if (($137 | 0) != ($141 | 0)) {
    if ($137 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
    if ((HEAP32[$137 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($139 | 0) == ($137 | 0)) {
    HEAP32[10516] = HEAP32[10516] & ~(1 << $134);
    break;
   }
   if (($139 | 0) == ($141 | 0)) $$pre$phi60Z2D = $139 + 8 | 0; else {
    if ($139 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
    $156 = $139 + 8 | 0;
    if ((HEAP32[$156 >> 2] | 0) == ($9 | 0)) $$pre$phi60Z2D = $156; else _abort();
   }
   HEAP32[$137 + 12 >> 2] = $139;
   HEAP32[$$pre$phi60Z2D >> 2] = $137;
  } else {
   $161 = HEAP32[$mem + ($8 + 16) >> 2] | 0;
   $163 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   do if (($163 | 0) == ($9 | 0)) {
    $175 = $mem + ($8 + 12) | 0;
    $176 = HEAP32[$175 >> 2] | 0;
    if (!$176) {
     $178 = $mem + ($8 + 8) | 0;
     $179 = HEAP32[$178 >> 2] | 0;
     if (!$179) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0$ph = $179;
      $RP9$0$ph = $178;
     }
    } else {
     $R7$0$ph = $176;
     $RP9$0$ph = $175;
    }
    $R7$0 = $R7$0$ph;
    $RP9$0 = $RP9$0$ph;
    while (1) {
     $181 = $R7$0 + 20 | 0;
     $182 = HEAP32[$181 >> 2] | 0;
     if (!$182) {
      $184 = $R7$0 + 16 | 0;
      $185 = HEAP32[$184 >> 2] | 0;
      if (!$185) {
       $R7$0$lcssa = $R7$0;
       $RP9$0$lcssa = $RP9$0;
       break;
      } else {
       $R7$0$be = $185;
       $RP9$0$be = $184;
      }
     } else {
      $R7$0$be = $182;
      $RP9$0$be = $181;
     }
     $R7$0 = $R7$0$be;
     $RP9$0 = $RP9$0$be;
    }
    if ($RP9$0$lcssa >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
     HEAP32[$RP9$0$lcssa >> 2] = 0;
     $R7$1 = $R7$0$lcssa;
     break;
    }
   } else {
    $166 = HEAP32[$mem + $8 >> 2] | 0;
    if ($166 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
    $169 = $166 + 12 | 0;
    if ((HEAP32[$169 >> 2] | 0) != ($9 | 0)) _abort();
    $172 = $163 + 8 | 0;
    if ((HEAP32[$172 >> 2] | 0) == ($9 | 0)) {
     HEAP32[$169 >> 2] = $163;
     HEAP32[$172 >> 2] = $166;
     $R7$1 = $163;
     break;
    } else _abort();
   } while (0);
   if ($161) {
    $191 = HEAP32[$mem + ($8 + 20) >> 2] | 0;
    $192 = 42368 + ($191 << 2) | 0;
    if (($9 | 0) == (HEAP32[$192 >> 2] | 0)) {
     HEAP32[$192 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[10517] = HEAP32[10517] & ~(1 << $191);
      break;
     }
    } else {
     if ($161 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
     $201 = $161 + 16 | 0;
     if ((HEAP32[$201 >> 2] | 0) == ($9 | 0)) HEAP32[$201 >> 2] = $R7$1; else HEAP32[$161 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $206 = HEAP32[10520] | 0;
    if ($R7$1 >>> 0 < $206 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $161;
    $210 = HEAP32[$mem + ($8 + 8) >> 2] | 0;
    do if ($210) if ($210 >>> 0 < $206 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $210;
     HEAP32[$210 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $216 = HEAP32[$mem + ($8 + 12) >> 2] | 0;
    if ($216) if ($216 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $216;
     HEAP32[$216 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$p$0 + 4 >> 2] = $133 | 1;
  HEAP32[$p$0 + $133 >> 2] = $133;
  if (($p$0 | 0) == (HEAP32[10521] | 0)) {
   HEAP32[10518] = $133;
   return;
  } else $psize$1 = $133;
 } else {
  HEAP32[$111 >> 2] = $112 & -2;
  HEAP32[$p$0 + 4 >> 2] = $psize$0 | 1;
  HEAP32[$p$0 + $psize$0 >> 2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 if ($psize$1 >>> 0 < 256) {
  $233 = $231 << 1;
  $234 = 42104 + ($233 << 2) | 0;
  $235 = HEAP32[10516] | 0;
  $236 = 1 << $231;
  if (!($235 & $236)) {
   HEAP32[10516] = $235 | $236;
   $$pre$phiZ2D = 42104 + ($233 + 2 << 2) | 0;
   $F16$0 = $234;
  } else {
   $240 = 42104 + ($233 + 2 << 2) | 0;
   $241 = HEAP32[$240 >> 2] | 0;
   if ($241 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $240;
    $F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $p$0;
  HEAP32[$F16$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $F16$0;
  HEAP32[$p$0 + 12 >> 2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 if (!$247) $I18$0 = 0; else if ($psize$1 >>> 0 > 16777215) $I18$0 = 31; else {
  $252 = ($247 + 1048320 | 0) >>> 16 & 8;
  $253 = $247 << $252;
  $256 = ($253 + 520192 | 0) >>> 16 & 4;
  $258 = $253 << $256;
  $261 = ($258 + 245760 | 0) >>> 16 & 2;
  $266 = 14 - ($256 | $252 | $261) + ($258 << $261 >>> 15) | 0;
  $I18$0 = $psize$1 >>> ($266 + 7 | 0) & 1 | $266 << 1;
 }
 $272 = 42368 + ($I18$0 << 2) | 0;
 HEAP32[$p$0 + 28 >> 2] = $I18$0;
 HEAP32[$p$0 + 20 >> 2] = 0;
 HEAP32[$p$0 + 16 >> 2] = 0;
 $276 = HEAP32[10517] | 0;
 $277 = 1 << $I18$0;
 L205 : do if (!($276 & $277)) {
  HEAP32[10517] = $276 | $277;
  HEAP32[$272 >> 2] = $p$0;
  HEAP32[$p$0 + 24 >> 2] = $272;
  HEAP32[$p$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $p$0;
 } else {
  $284 = HEAP32[$272 >> 2] | 0;
  if (($I18$0 | 0) == 31) $293 = 0; else $293 = 25 - ($I18$0 >>> 1) | 0;
  do if ((HEAP32[$284 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) $T$0$lcssa = $284; else {
   $K19$054 = $psize$1 << $293;
   $T$053 = $284;
   while (1) {
    $301 = $T$053 + ($K19$054 >>> 31 << 2) + 16 | 0;
    $296 = HEAP32[$301 >> 2] | 0;
    if (!$296) {
     $$lcssa = $301;
     $T$053$lcssa = $T$053;
     break;
    }
    if ((HEAP32[$296 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) {
     $$lcssa71 = $296;
     label = 137;
     break;
    } else {
     $K19$054 = $K19$054 << 1;
     $T$053 = $296;
    }
   }
   if ((label | 0) == 137) {
    $T$0$lcssa = $$lcssa71;
    break;
   }
   if ($$lcssa >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
    HEAP32[$$lcssa >> 2] = $p$0;
    HEAP32[$p$0 + 24 >> 2] = $T$053$lcssa;
    HEAP32[$p$0 + 12 >> 2] = $p$0;
    HEAP32[$p$0 + 8 >> 2] = $p$0;
    break L205;
   }
  } while (0);
  $308 = $T$0$lcssa + 8 | 0;
  $309 = HEAP32[$308 >> 2] | 0;
  $310 = HEAP32[10520] | 0;
  if ($T$0$lcssa >>> 0 >= $310 >>> 0 & $309 >>> 0 >= $310 >>> 0) {
   HEAP32[$309 + 12 >> 2] = $p$0;
   HEAP32[$308 >> 2] = $p$0;
   HEAP32[$p$0 + 8 >> 2] = $309;
   HEAP32[$p$0 + 12 >> 2] = $T$0$lcssa;
   HEAP32[$p$0 + 24 >> 2] = 0;
   break;
  } else _abort();
 } while (0);
 $318 = (HEAP32[10524] | 0) + -1 | 0;
 HEAP32[10524] = $318;
 if ($318) return;
 $sp$0$in$i = 42520 | 0;
 while (1) {
  $sp$0$i = HEAP32[$sp$0$in$i >> 2] | 0;
  if (!$sp$0$i) break; else $sp$0$in$i = $sp$0$i + 8 | 0;
 }
 HEAP32[10524] = -1;
 return;
}

function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$lcssa62 = 0, $$pre$phi51Z2D = 0, $$pre$phi53Z2D = 0, $$pre$phiZ2D = 0, $$sum18 = 0, $$sum21 = 0, $0 = 0, $10 = 0, $100 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $123 = 0, $128 = 0, $129 = 0, $132 = 0, $134 = 0, $136 = 0, $149 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $207 = 0, $22 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $231 = 0, $232 = 0, $238 = 0, $243 = 0, $244 = 0, $247 = 0, $249 = 0, $252 = 0, $257 = 0, $263 = 0, $267 = 0, $268 = 0, $275 = 0, $284 = 0, $287 = 0, $292 = 0, $299 = 0, $300 = 0, $301 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $78 = 0, $83 = 0, $87 = 0, $9 = 0, $93 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$045 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$044 = 0, $T$044$lcssa = 0, label = 0;
 $0 = $p + $psize | 0;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 do if (!($2 & 1)) {
  $5 = HEAP32[$p >> 2] | 0;
  if (!($2 & 3)) return;
  $9 = $p + (0 - $5) | 0;
  $10 = $5 + $psize | 0;
  $11 = HEAP32[10520] | 0;
  if ($9 >>> 0 < $11 >>> 0) _abort();
  if (($9 | 0) == (HEAP32[10521] | 0)) {
   $99 = $p + ($psize + 4) | 0;
   $100 = HEAP32[$99 >> 2] | 0;
   if (($100 & 3 | 0) != 3) {
    $$0 = $9;
    $$02 = $10;
    break;
   }
   HEAP32[10518] = $10;
   HEAP32[$99 >> 2] = $100 & -2;
   HEAP32[$p + (4 - $5) >> 2] = $10 | 1;
   HEAP32[$0 >> 2] = $10;
   return;
  }
  $15 = $5 >>> 3;
  if ($5 >>> 0 < 256) {
   $18 = HEAP32[$p + (8 - $5) >> 2] | 0;
   $20 = HEAP32[$p + (12 - $5) >> 2] | 0;
   $22 = 42104 + ($15 << 1 << 2) | 0;
   if (($18 | 0) != ($22 | 0)) {
    if ($18 >>> 0 < $11 >>> 0) _abort();
    if ((HEAP32[$18 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($20 | 0) == ($18 | 0)) {
    HEAP32[10516] = HEAP32[10516] & ~(1 << $15);
    $$0 = $9;
    $$02 = $10;
    break;
   }
   if (($20 | 0) == ($22 | 0)) $$pre$phi53Z2D = $20 + 8 | 0; else {
    if ($20 >>> 0 < $11 >>> 0) _abort();
    $35 = $20 + 8 | 0;
    if ((HEAP32[$35 >> 2] | 0) == ($9 | 0)) $$pre$phi53Z2D = $35; else _abort();
   }
   HEAP32[$18 + 12 >> 2] = $20;
   HEAP32[$$pre$phi53Z2D >> 2] = $18;
   $$0 = $9;
   $$02 = $10;
   break;
  }
  $40 = HEAP32[$p + (24 - $5) >> 2] | 0;
  $42 = HEAP32[$p + (12 - $5) >> 2] | 0;
  do if (($42 | 0) == ($9 | 0)) {
   $$sum18 = 16 - $5 | 0;
   $53 = $p + ($$sum18 + 4) | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if (!$54) {
    $56 = $p + $$sum18 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (!$57) {
     $R$1 = 0;
     break;
    } else {
     $R$0$ph = $57;
     $RP$0$ph = $56;
    }
   } else {
    $R$0$ph = $54;
    $RP$0$ph = $53;
   }
   $R$0 = $R$0$ph;
   $RP$0 = $RP$0$ph;
   while (1) {
    $59 = $R$0 + 20 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    if (!$60) {
     $62 = $R$0 + 16 | 0;
     $63 = HEAP32[$62 >> 2] | 0;
     if (!$63) {
      $R$0$lcssa = $R$0;
      $RP$0$lcssa = $RP$0;
      break;
     } else {
      $R$0$be = $63;
      $RP$0$be = $62;
     }
    } else {
     $R$0$be = $60;
     $RP$0$be = $59;
    }
    $R$0 = $R$0$be;
    $RP$0 = $RP$0$be;
   }
   if ($RP$0$lcssa >>> 0 < $11 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $45 = HEAP32[$p + (8 - $5) >> 2] | 0;
   if ($45 >>> 0 < $11 >>> 0) _abort();
   $47 = $45 + 12 | 0;
   if ((HEAP32[$47 >> 2] | 0) != ($9 | 0)) _abort();
   $50 = $42 + 8 | 0;
   if ((HEAP32[$50 >> 2] | 0) == ($9 | 0)) {
    HEAP32[$47 >> 2] = $42;
    HEAP32[$50 >> 2] = $45;
    $R$1 = $42;
    break;
   } else _abort();
  } while (0);
  if (!$40) {
   $$0 = $9;
   $$02 = $10;
  } else {
   $68 = HEAP32[$p + (28 - $5) >> 2] | 0;
   $69 = 42368 + ($68 << 2) | 0;
   if (($9 | 0) == (HEAP32[$69 >> 2] | 0)) {
    HEAP32[$69 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[10517] = HEAP32[10517] & ~(1 << $68);
     $$0 = $9;
     $$02 = $10;
     break;
    }
   } else {
    if ($40 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
    $78 = $40 + 16 | 0;
    if ((HEAP32[$78 >> 2] | 0) == ($9 | 0)) HEAP32[$78 >> 2] = $R$1; else HEAP32[$40 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $$0 = $9;
     $$02 = $10;
     break;
    }
   }
   $83 = HEAP32[10520] | 0;
   if ($R$1 >>> 0 < $83 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $40;
   $$sum21 = 16 - $5 | 0;
   $87 = HEAP32[$p + $$sum21 >> 2] | 0;
   do if ($87) if ($87 >>> 0 < $83 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $87;
    HEAP32[$87 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $93 = HEAP32[$p + ($$sum21 + 4) >> 2] | 0;
   if (!$93) {
    $$0 = $9;
    $$02 = $10;
   } else if ($93 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $R$1;
    $$0 = $9;
    $$02 = $10;
    break;
   }
  }
 } else {
  $$0 = $p;
  $$02 = $psize;
 } while (0);
 $106 = HEAP32[10520] | 0;
 if ($0 >>> 0 < $106 >>> 0) _abort();
 $108 = $p + ($psize + 4) | 0;
 $109 = HEAP32[$108 >> 2] | 0;
 if (!($109 & 2)) {
  if (($0 | 0) == (HEAP32[10522] | 0)) {
   $115 = (HEAP32[10519] | 0) + $$02 | 0;
   HEAP32[10519] = $115;
   HEAP32[10522] = $$0;
   HEAP32[$$0 + 4 >> 2] = $115 | 1;
   if (($$0 | 0) != (HEAP32[10521] | 0)) return;
   HEAP32[10521] = 0;
   HEAP32[10518] = 0;
   return;
  }
  if (($0 | 0) == (HEAP32[10521] | 0)) {
   $123 = (HEAP32[10518] | 0) + $$02 | 0;
   HEAP32[10518] = $123;
   HEAP32[10521] = $$0;
   HEAP32[$$0 + 4 >> 2] = $123 | 1;
   HEAP32[$$0 + $123 >> 2] = $123;
   return;
  }
  $128 = ($109 & -8) + $$02 | 0;
  $129 = $109 >>> 3;
  do if ($109 >>> 0 < 256) {
   $132 = HEAP32[$p + ($psize + 8) >> 2] | 0;
   $134 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   $136 = 42104 + ($129 << 1 << 2) | 0;
   if (($132 | 0) != ($136 | 0)) {
    if ($132 >>> 0 < $106 >>> 0) _abort();
    if ((HEAP32[$132 + 12 >> 2] | 0) != ($0 | 0)) _abort();
   }
   if (($134 | 0) == ($132 | 0)) {
    HEAP32[10516] = HEAP32[10516] & ~(1 << $129);
    break;
   }
   if (($134 | 0) == ($136 | 0)) $$pre$phi51Z2D = $134 + 8 | 0; else {
    if ($134 >>> 0 < $106 >>> 0) _abort();
    $149 = $134 + 8 | 0;
    if ((HEAP32[$149 >> 2] | 0) == ($0 | 0)) $$pre$phi51Z2D = $149; else _abort();
   }
   HEAP32[$132 + 12 >> 2] = $134;
   HEAP32[$$pre$phi51Z2D >> 2] = $132;
  } else {
   $154 = HEAP32[$p + ($psize + 24) >> 2] | 0;
   $156 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   do if (($156 | 0) == ($0 | 0)) {
    $167 = $p + ($psize + 20) | 0;
    $168 = HEAP32[$167 >> 2] | 0;
    if (!$168) {
     $170 = $p + ($psize + 16) | 0;
     $171 = HEAP32[$170 >> 2] | 0;
     if (!$171) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0$ph = $171;
      $RP9$0$ph = $170;
     }
    } else {
     $R7$0$ph = $168;
     $RP9$0$ph = $167;
    }
    $R7$0 = $R7$0$ph;
    $RP9$0 = $RP9$0$ph;
    while (1) {
     $173 = $R7$0 + 20 | 0;
     $174 = HEAP32[$173 >> 2] | 0;
     if (!$174) {
      $176 = $R7$0 + 16 | 0;
      $177 = HEAP32[$176 >> 2] | 0;
      if (!$177) {
       $R7$0$lcssa = $R7$0;
       $RP9$0$lcssa = $RP9$0;
       break;
      } else {
       $R7$0$be = $177;
       $RP9$0$be = $176;
      }
     } else {
      $R7$0$be = $174;
      $RP9$0$be = $173;
     }
     $R7$0 = $R7$0$be;
     $RP9$0 = $RP9$0$be;
    }
    if ($RP9$0$lcssa >>> 0 < $106 >>> 0) _abort(); else {
     HEAP32[$RP9$0$lcssa >> 2] = 0;
     $R7$1 = $R7$0$lcssa;
     break;
    }
   } else {
    $159 = HEAP32[$p + ($psize + 8) >> 2] | 0;
    if ($159 >>> 0 < $106 >>> 0) _abort();
    $161 = $159 + 12 | 0;
    if ((HEAP32[$161 >> 2] | 0) != ($0 | 0)) _abort();
    $164 = $156 + 8 | 0;
    if ((HEAP32[$164 >> 2] | 0) == ($0 | 0)) {
     HEAP32[$161 >> 2] = $156;
     HEAP32[$164 >> 2] = $159;
     $R7$1 = $156;
     break;
    } else _abort();
   } while (0);
   if ($154) {
    $182 = HEAP32[$p + ($psize + 28) >> 2] | 0;
    $183 = 42368 + ($182 << 2) | 0;
    if (($0 | 0) == (HEAP32[$183 >> 2] | 0)) {
     HEAP32[$183 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[10517] = HEAP32[10517] & ~(1 << $182);
      break;
     }
    } else {
     if ($154 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
     $192 = $154 + 16 | 0;
     if ((HEAP32[$192 >> 2] | 0) == ($0 | 0)) HEAP32[$192 >> 2] = $R7$1; else HEAP32[$154 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $197 = HEAP32[10520] | 0;
    if ($R7$1 >>> 0 < $197 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $154;
    $201 = HEAP32[$p + ($psize + 16) >> 2] | 0;
    do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $201;
     HEAP32[$201 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $207 = HEAP32[$p + ($psize + 20) >> 2] | 0;
    if ($207) if ($207 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $207;
     HEAP32[$207 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$$0 + 4 >> 2] = $128 | 1;
  HEAP32[$$0 + $128 >> 2] = $128;
  if (($$0 | 0) == (HEAP32[10521] | 0)) {
   HEAP32[10518] = $128;
   return;
  } else $$1 = $128;
 } else {
  HEAP32[$108 >> 2] = $109 & -2;
  HEAP32[$$0 + 4 >> 2] = $$02 | 1;
  HEAP32[$$0 + $$02 >> 2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 if ($$1 >>> 0 < 256) {
  $224 = $222 << 1;
  $225 = 42104 + ($224 << 2) | 0;
  $226 = HEAP32[10516] | 0;
  $227 = 1 << $222;
  if (!($226 & $227)) {
   HEAP32[10516] = $226 | $227;
   $$pre$phiZ2D = 42104 + ($224 + 2 << 2) | 0;
   $F16$0 = $225;
  } else {
   $231 = 42104 + ($224 + 2 << 2) | 0;
   $232 = HEAP32[$231 >> 2] | 0;
   if ($232 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $231;
    $F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$0;
  HEAP32[$F16$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $F16$0;
  HEAP32[$$0 + 12 >> 2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 if (!$238) $I19$0 = 0; else if ($$1 >>> 0 > 16777215) $I19$0 = 31; else {
  $243 = ($238 + 1048320 | 0) >>> 16 & 8;
  $244 = $238 << $243;
  $247 = ($244 + 520192 | 0) >>> 16 & 4;
  $249 = $244 << $247;
  $252 = ($249 + 245760 | 0) >>> 16 & 2;
  $257 = 14 - ($247 | $243 | $252) + ($249 << $252 >>> 15) | 0;
  $I19$0 = $$1 >>> ($257 + 7 | 0) & 1 | $257 << 1;
 }
 $263 = 42368 + ($I19$0 << 2) | 0;
 HEAP32[$$0 + 28 >> 2] = $I19$0;
 HEAP32[$$0 + 20 >> 2] = 0;
 HEAP32[$$0 + 16 >> 2] = 0;
 $267 = HEAP32[10517] | 0;
 $268 = 1 << $I19$0;
 if (!($267 & $268)) {
  HEAP32[10517] = $267 | $268;
  HEAP32[$263 >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $263;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  return;
 }
 $275 = HEAP32[$263 >> 2] | 0;
 if (($I19$0 | 0) == 31) $284 = 0; else $284 = 25 - ($I19$0 >>> 1) | 0;
 do if ((HEAP32[$275 + 4 >> 2] & -8 | 0) == ($$1 | 0)) $T$0$lcssa = $275; else {
  $K20$045 = $$1 << $284;
  $T$044 = $275;
  while (1) {
   $292 = $T$044 + ($K20$045 >>> 31 << 2) + 16 | 0;
   $287 = HEAP32[$292 >> 2] | 0;
   if (!$287) {
    $$lcssa = $292;
    $T$044$lcssa = $T$044;
    break;
   }
   if ((HEAP32[$287 + 4 >> 2] & -8 | 0) == ($$1 | 0)) {
    $$lcssa62 = $287;
    label = 134;
    break;
   } else {
    $K20$045 = $K20$045 << 1;
    $T$044 = $287;
   }
  }
  if ((label | 0) == 134) {
   $T$0$lcssa = $$lcssa62;
   break;
  }
  if ($$lcssa >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
  HEAP32[$$lcssa >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $T$044$lcssa;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  return;
 } while (0);
 $299 = $T$0$lcssa + 8 | 0;
 $300 = HEAP32[$299 >> 2] | 0;
 $301 = HEAP32[10520] | 0;
 if (!($T$0$lcssa >>> 0 >= $301 >>> 0 & $300 >>> 0 >= $301 >>> 0)) _abort();
 HEAP32[$300 + 12 >> 2] = $$0;
 HEAP32[$299 >> 2] = $$0;
 HEAP32[$$0 + 8 >> 2] = $300;
 HEAP32[$$0 + 12 >> 2] = $T$0$lcssa;
 HEAP32[$$0 + 24 >> 2] = 0;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $1 = 0, $10 = 0, $11 = 0, $110 = 0, $113 = 0, $117 = 0, $12 = 0, $120 = 0, $124 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy30 = sp + 160 | 0;
 $$byval_copy26 = sp + 156 | 0;
 $1 = sp + 152 | 0;
 $2 = sp + 148 | 0;
 $3 = sp + 144 | 0;
 $4 = sp + 140 | 0;
 $5 = sp + 136 | 0;
 $6 = sp + 132 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 112 | 0;
 $12 = sp + 108 | 0;
 $13 = sp + 104 | 0;
 $14 = sp + 100 | 0;
 $15 = sp + 96 | 0;
 $16 = sp + 92 | 0;
 $17 = sp + 88 | 0;
 $18 = sp + 84 | 0;
 $19 = sp + 80 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 72 | 0;
 $22 = sp + 68 | 0;
 $23 = sp + 64 | 0;
 $24 = sp + 60 | 0;
 $25 = sp + 56 | 0;
 $26 = sp + 52 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 44 | 0;
 $29 = sp + 40 | 0;
 $30 = sp + 36 | 0;
 $31 = sp + 32 | 0;
 $32 = sp + 28 | 0;
 $33 = sp + 24 | 0;
 $34 = sp + 20 | 0;
 $35 = sp + 16 | 0;
 $36 = sp + 12 | 0;
 $37 = sp + 8 | 0;
 $38 = sp + 4 | 0;
 $39 = sp;
 HEAP32[$__err >> 2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $40 = invoke_iii(22, $1 | 0, 47960) | 0;
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  ___resumeException($45 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 70:
  {
   HEAP32[$12 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($11, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 47088, 47120 | 0);
   HEAP32[$__b >> 2] = HEAP32[$11 >> 2];
   label = 34;
   break;
  }
 case 112:
  {
   HEAP32[$20 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$20 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$29 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($28, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 47192, 47224 | 0);
   HEAP32[$__b >> 2] = HEAP32[$28 >> 2];
   label = 34;
   break;
  }
 case 99:
  {
   $52 = $this + 8 | 0;
   $56 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 12 >> 2] & 127]($52) | 0;
   HEAP32[$5 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   $59 = HEAP8[$56 >> 0] | 0;
   if (!($59 & 1)) {
    $71 = $56 + 4 | 0;
    $72 = ($59 & 255) >>> 1;
    $73 = $56 + 4 | 0;
   } else {
    $63 = HEAP32[$56 + 8 >> 2] | 0;
    $71 = $63;
    $72 = HEAP32[$56 + 4 >> 2] | 0;
    $73 = $63;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($4, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $73, $71 + ($72 << 2) | 0);
   HEAP32[$__b >> 2] = HEAP32[$4 >> 2];
   label = 34;
   break;
  }
 case 82:
  {
   HEAP32[$25 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$26 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$25 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($24, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 47168, 47188 | 0);
   HEAP32[$__b >> 2] = HEAP32[$24 >> 2];
   label = 34;
   break;
  }
 case 37:
  {
   HEAP32[$39 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 73:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 88:
  {
   $113 = $this + 8 | 0;
   $117 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$113 >> 2] | 0) + 24 >> 2] & 127]($113) | 0;
   HEAP32[$35 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$36 >> 2] = HEAP32[$__e >> 2];
   $120 = HEAP8[$117 >> 0] | 0;
   if (!($120 & 1)) {
    $132 = $117 + 4 | 0;
    $133 = ($120 & 255) >>> 1;
    $134 = $117 + 4 | 0;
   } else {
    $124 = HEAP32[$117 + 8 >> 2] | 0;
    $132 = $124;
    $133 = HEAP32[$117 + 4 >> 2] | 0;
    $134 = $124;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$35 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($34, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $134, $132 + ($133 << 2) | 0);
   HEAP32[$__b >> 2] = HEAP32[$34 >> 2];
   label = 34;
   break;
  }
 case 72:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 109:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 114:
  {
   HEAP32[$22 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$23 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$22 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($21, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 47120, 47164 | 0);
   HEAP32[$__b >> 2] = HEAP32[$21 >> 2];
   label = 34;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 68:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($8, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 47056, 47088 | 0);
   HEAP32[$__b >> 2] = HEAP32[$8 >> 2];
   label = 34;
   break;
  }
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 89:
  {
   HEAP32[$38 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$38 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 83:
  {
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 77:
  {
   HEAP32[$18 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$7 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 106:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 120:
  {
   $110 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$33 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$32 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$33 + 0 >> 2];
   FUNCTION_TABLE_viiiiiii[$110 & 63]($agg$result, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm);
   break;
  }
 case 121:
  {
   HEAP32[$37 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 34;
  }
 } while (0);
 if ((label | 0) == 34) HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $1 = 0, $10 = 0, $11 = 0, $110 = 0, $113 = 0, $117 = 0, $12 = 0, $120 = 0, $124 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy30 = sp + 160 | 0;
 $$byval_copy26 = sp + 156 | 0;
 $1 = sp + 152 | 0;
 $2 = sp + 148 | 0;
 $3 = sp + 144 | 0;
 $4 = sp + 140 | 0;
 $5 = sp + 136 | 0;
 $6 = sp + 132 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 112 | 0;
 $12 = sp + 108 | 0;
 $13 = sp + 104 | 0;
 $14 = sp + 100 | 0;
 $15 = sp + 96 | 0;
 $16 = sp + 92 | 0;
 $17 = sp + 88 | 0;
 $18 = sp + 84 | 0;
 $19 = sp + 80 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 72 | 0;
 $22 = sp + 68 | 0;
 $23 = sp + 64 | 0;
 $24 = sp + 60 | 0;
 $25 = sp + 56 | 0;
 $26 = sp + 52 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 44 | 0;
 $29 = sp + 40 | 0;
 $30 = sp + 36 | 0;
 $31 = sp + 32 | 0;
 $32 = sp + 28 | 0;
 $33 = sp + 24 | 0;
 $34 = sp + 20 | 0;
 $35 = sp + 16 | 0;
 $36 = sp + 12 | 0;
 $37 = sp + 8 | 0;
 $38 = sp + 4 | 0;
 $39 = sp;
 HEAP32[$__err >> 2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $40 = invoke_iii(22, $1 | 0, 47968) | 0;
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  ___resumeException($45 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 82:
  {
   HEAP32[$25 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$26 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$25 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($24, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 46912, 46917 | 0);
   HEAP32[$__b >> 2] = HEAP32[$24 >> 2];
   label = 34;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 72:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 106:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 112:
  {
   HEAP32[$20 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$20 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 120:
  {
   $110 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$33 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$32 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$33 + 0 >> 2];
   FUNCTION_TABLE_viiiiiii[$110 & 63]($agg$result, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm);
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$29 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($28, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 46920, 46928 | 0);
   HEAP32[$__b >> 2] = HEAP32[$28 >> 2];
   label = 34;
   break;
  }
 case 88:
  {
   $113 = $this + 8 | 0;
   $117 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$113 >> 2] | 0) + 24 >> 2] & 127]($113) | 0;
   HEAP32[$35 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$36 >> 2] = HEAP32[$__e >> 2];
   $120 = HEAP8[$117 >> 0] | 0;
   if (!($120 & 1)) {
    $132 = $117 + 1 | 0;
    $133 = ($120 & 255) >>> 1;
    $134 = $117 + 1 | 0;
   } else {
    $124 = HEAP32[$117 + 8 >> 2] | 0;
    $132 = $124;
    $133 = HEAP32[$117 + 4 >> 2] | 0;
    $134 = $124;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$35 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($34, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $134, $132 + $133 | 0);
   HEAP32[$__b >> 2] = HEAP32[$34 >> 2];
   label = 34;
   break;
  }
 case 114:
  {
   HEAP32[$22 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$23 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$22 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($21, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 46896, 46907 | 0);
   HEAP32[$__b >> 2] = HEAP32[$21 >> 2];
   label = 34;
   break;
  }
 case 77:
  {
   HEAP32[$18 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 109:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 99:
  {
   $52 = $this + 8 | 0;
   $56 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 12 >> 2] & 127]($52) | 0;
   HEAP32[$5 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   $59 = HEAP8[$56 >> 0] | 0;
   if (!($59 & 1)) {
    $71 = $56 + 1 | 0;
    $72 = ($59 & 255) >>> 1;
    $73 = $56 + 1 | 0;
   } else {
    $63 = HEAP32[$56 + 8 >> 2] | 0;
    $71 = $63;
    $72 = HEAP32[$56 + 4 >> 2] | 0;
    $73 = $63;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($4, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $73, $71 + $72 | 0);
   HEAP32[$__b >> 2] = HEAP32[$4 >> 2];
   label = 34;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$7 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 70:
  {
   HEAP32[$12 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($11, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 46888, 46896 | 0);
   HEAP32[$__b >> 2] = HEAP32[$11 >> 2];
   label = 34;
   break;
  }
 case 73:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 68:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($8, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 46880, 46888 | 0);
   HEAP32[$__b >> 2] = HEAP32[$8 >> 2];
   label = 34;
   break;
  }
 case 121:
  {
   HEAP32[$37 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 37:
  {
   HEAP32[$39 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 83:
  {
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 89:
  {
   HEAP32[$38 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$38 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 34;
  }
 } while (0);
 if ((label | 0) == 34) HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$0$lcssa69 = 0, $$045 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $112 = 0, $119 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $136 = 0, $143 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $164 = 0, $17 = 0, $171 = 0, $172 = 0, $186 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $36 = 0, $43 = 0, $44 = 0, $48 = 0, $5 = 0, $51 = 0, $58 = 0, $59 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $75 = 0, $76 = 0, $82 = 0, $83 = 0, $85 = 0, $9 = 0, $96 = 0, $97 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0, $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(6);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch() | 0;
    $$index = $9;
    $$index10 = tempRet0;
   } else {
    $17 = 0;
    $__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;
   $__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;
  $__status$0 = $__statbuf;
  label = 11;
 }
 if ((label | 0) == 11) {
  $__ky$0 = $__kb;
  $__n_does_match$0 = 0;
  $__n_might_match$0 = $3;
  $__st$0 = $__status$0;
  while (1) {
   if (($__ky$0 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$0;
    $__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0 >> 0] | 0;
   if (!($20 & 1)) $27 = ($20 & 255) >>> 1; else $27 = HEAP32[$__ky$0 + 4 >> 2] | 0;
   if (!$27) {
    HEAP8[$__st$0 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$0 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$0 + -1 | 0;
   } else {
    HEAP8[$__st$0 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$0;
    $__n_might_match$1 = $__n_might_match$0;
   }
   $__ky$0 = $__ky$0 + 12 | 0;
   $__n_does_match$0 = $__n_does_match$1;
   $__n_might_match$0 = $__n_might_match$1;
   $__st$0 = $__st$0 + 1 | 0;
  }
  $__indx$0 = 0;
  $__n_does_match$2 = $__n_does_match$0$lcssa;
  $__n_might_match$2 = $__n_might_match$0$lcssa;
  L19 : while (1) {
   $33 = HEAP32[$__b >> 2] | 0;
   do if (!$33) $64 = 1; else {
    $36 = HEAP32[$33 + 12 >> 2] | 0;
    if (($36 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $43 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
     $44 = __THREW__;
     __THREW__ = 0;
     if ($44 & 1) {
      label = 6;
      break L19;
     } else $$0$i$i$i$i = $43;
    } else $$0$i$i$i$i = HEAP32[$36 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $64 = 1;
     break;
    } else {
     $64 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   $48 = HEAP32[$__e >> 2] | 0;
   if (!$48) {
    $$pre$i3$i$i19 = 0;
    $63 = 1;
   } else {
    $51 = HEAP32[$48 + 12 >> 2] | 0;
    if (($51 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $58 = invoke_ii(HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] | 0, $48 | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) {
      label = 6;
      break;
     } else $$0$i$i1$i$i = $58;
    } else $$0$i$i1$i$i = HEAP32[$51 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i19 = 0;
     $63 = 1;
    } else {
     $$pre$i3$i$i19 = $48;
     $63 = 0;
    }
   }
   $66 = HEAP32[$__b >> 2] | 0;
   if (!(($__n_might_match$2 | 0) != 0 & ($64 ^ $63))) {
    $$lcssa = $66;
    $$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
    label = 72;
    break;
   }
   $68 = HEAP32[$66 + 12 >> 2] | 0;
   if (($68 | 0) == (HEAP32[$66 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $75 = invoke_ii(HEAP32[(HEAP32[$66 >> 2] | 0) + 36 >> 2] | 0, $66 | 0) | 0;
    $76 = __THREW__;
    __THREW__ = 0;
    if ($76 & 1) {
     label = 6;
     break;
    } else $$0$i$i = $75;
   } else $$0$i$i = HEAP32[$68 >> 2] | 0;
   if ($__case_sensitive) $__c$0 = $$0$i$i; else {
    __THREW__ = 0;
    $82 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $$0$i$i | 0) | 0;
    $83 = __THREW__;
    __THREW__ = 0;
    if ($83 & 1) {
     label = 6;
     break;
    } else $__c$0 = $82;
   }
   $85 = $__indx$0 + 1 | 0;
   $__consume$0$off0 = 0;
   $__ky1$0 = $__kb;
   $__n_does_match$3 = $__n_does_match$2;
   $__n_might_match$3 = $__n_might_match$2;
   $__st$1 = $__status$0;
   while (1) {
    if (($__ky1$0 | 0) == ($__ke | 0)) {
     $__consume$0$off0$lcssa = $__consume$0$off0;
     $__n_does_match$3$lcssa = $__n_does_match$3;
     $__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    do if ((HEAP8[$__st$1 >> 0] | 0) == 1) {
     if (!(HEAP8[$__ky1$0 >> 0] & 1)) $96 = $__ky1$0 + 4 | 0; else $96 = HEAP32[$__ky1$0 + 8 >> 2] | 0;
     $97 = HEAP32[$96 + ($__indx$0 << 2) >> 2] | 0;
     if ($__case_sensitive) $__kc$0 = $97; else {
      __THREW__ = 0;
      $101 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $97 | 0) | 0;
      $102 = __THREW__;
      __THREW__ = 0;
      if ($102 & 1) {
       label = 5;
       break L19;
      } else $__kc$0 = $101;
     }
     if (($__c$0 | 0) != ($__kc$0 | 0)) {
      HEAP8[$__st$1 >> 0] = 0;
      $__consume$1$off0 = $__consume$0$off0;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
      break;
     }
     $105 = HEAP8[$__ky1$0 >> 0] | 0;
     if (!($105 & 1)) $112 = ($105 & 255) >>> 1; else $112 = HEAP32[$__ky1$0 + 4 >> 2] | 0;
     if (($112 | 0) == ($85 | 0)) {
      HEAP8[$__st$1 >> 0] = 2;
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3 + 1 | 0;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
     } else {
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off0;
     $__n_does_match$4 = $__n_does_match$3;
     $__n_might_match$4 = $__n_might_match$3;
    } while (0);
    $__consume$0$off0 = $__consume$1$off0;
    $__ky1$0 = $__ky1$0 + 12 | 0;
    $__n_does_match$3 = $__n_does_match$4;
    $__n_might_match$3 = $__n_might_match$4;
    $__st$1 = $__st$1 + 1 | 0;
   }
   if ($__consume$0$off0$lcssa) {
    $119 = HEAP32[$__b >> 2] | 0;
    $120 = $119 + 12 | 0;
    $121 = HEAP32[$120 >> 2] | 0;
    if (($121 | 0) == (HEAP32[$119 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_ii(HEAP32[(HEAP32[$119 >> 2] | 0) + 40 >> 2] | 0, $119 | 0) | 0;
     $128 = __THREW__;
     __THREW__ = 0;
     if ($128 & 1) {
      label = 6;
      break;
     }
    } else HEAP32[$120 >> 2] = $121 + 4;
    if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 > 1) {
     $__ky2$0 = $__kb;
     $__n_does_match$5 = $__n_does_match$3$lcssa;
     $__st$2 = $__status$0;
     while (1) {
      if (($__ky2$0 | 0) == ($__ke | 0)) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      if ((HEAP8[$__st$2 >> 0] | 0) == 2) {
       $136 = HEAP8[$__ky2$0 >> 0] | 0;
       if (!($136 & 1)) $143 = ($136 & 255) >>> 1; else $143 = HEAP32[$__ky2$0 + 4 >> 2] | 0;
       if (($143 | 0) == ($85 | 0)) $__n_does_match$6 = $__n_does_match$5; else {
        HEAP8[$__st$2 >> 0] = 0;
        $__n_does_match$6 = $__n_does_match$5 + -1 | 0;
       }
      } else $__n_does_match$6 = $__n_does_match$5;
      $__ky2$0 = $__ky2$0 + 12 | 0;
      $__n_does_match$5 = $__n_does_match$6;
      $__st$2 = $__st$2 + 1 | 0;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   $__indx$0 = $85;
   $__n_does_match$2 = $__n_does_match$2$be;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label | 0) == 5) {
   $11 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $11;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 6) {
   $13 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $13;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 72) {
   do if (!$$lcssa) {
    $186 = 1;
    label = 79;
   } else {
    $150 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) break; else $$0$i$i$i$i11 = $157;
    } else $$0$i$i$i$i11 = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i$i$i11 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $186 = 1;
     label = 79;
     break;
    } else {
     $186 = (HEAP32[$__b >> 2] | 0) == 0;
     label = 79;
     break;
    }
   } while (0);
   L102 : do if ((label | 0) == 79) {
    do if (!$$pre$i3$i$i19$lcssa) label = 85; else {
     $164 = HEAP32[$$pre$i3$i$i19$lcssa + 12 >> 2] | 0;
     if (($164 | 0) == (HEAP32[$$pre$i3$i$i19$lcssa + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $171 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i19$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i19$lcssa | 0) | 0;
      $172 = __THREW__;
      __THREW__ = 0;
      if ($172 & 1) break L102; else $$0$i$i1$i$i17 = $171;
     } else $$0$i$i1$i$i17 = HEAP32[$164 >> 2] | 0;
     if (($$0$i$i1$i$i17 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 85;
      break;
     } else if ($186) break; else {
      label = 87;
      break;
     }
    } while (0);
    if ((label | 0) == 85) if ($186) label = 87;
    if ((label | 0) == 87) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$0 = $__kb;
    $__st$3 = $__status$0;
    while (1) {
     if (($$0 | 0) == ($__ke | 0)) {
      label = 92;
      break;
     }
     if ((HEAP8[$__st$3 >> 0] | 0) == 2) {
      $$0$lcssa69 = $$0;
      label = 93;
      break;
     }
     $$0 = $$0 + 12 | 0;
     $__st$3 = $__st$3 + 1 | 0;
    }
    if ((label | 0) == 92) {
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $$045 = $__ke;
    } else if ((label | 0) == 93) $$045 = $$0$lcssa69;
    _free($17);
    if ($17) {}
    STACKTOP = sp;
    return $$045 | 0;
   } while (0);
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index3 = tempRet0;
  }
  _free($17);
  if (!$17) {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index | 0);
 return 0;
}

function ___intscan($f, $base, $pok, $0, $1) {
 $f = $f | 0;
 $base = $base | 0;
 $pok = $pok | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$124 = 0, $$125 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa121 = 0, $$lcssa122 = 0, $100 = 0, $107 = 0, $119 = 0, $120 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $133 = 0, $134 = 0, $135 = 0, $143 = 0, $147 = 0, $148 = 0, $150 = 0, $152 = 0, $154 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $165 = 0, $166 = 0, $17 = 0, $18 = 0, $183 = 0, $184 = 0, $185 = 0, $193 = 0, $198 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $219 = 0, $220 = 0, $221 = 0, $236 = 0, $25 = 0, $252 = 0, $254 = 0, $265 = 0, $274 = 0, $277 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $51 = 0, $6 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $82 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$126 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$373 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$5$be$lcssa = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$755 = 0, $c$8 = 0, $c$8$ph = 0, $c$9$be = 0, $neg$0 = 0, $x$084 = 0, $x$148 = 0, $x$268 = 0, label = 0;
 if ($base >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $279 = 0;
  $280 = 0;
  tempRet0 = $279;
  return $280 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 do {
  $6 = HEAP32[$3 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $6 + 1;
   $13 = HEAPU8[$6 >> 0] | 0;
  } else $13 = ___shgetc($f) | 0;
 } while ((_isspace($13) | 0) != 0);
 $$lcssa122 = $13;
 do if (($$lcssa122 | 0) == 43 | ($$lcssa122 | 0) == 45) {
  $17 = (($$lcssa122 | 0) == 45) << 31 >> 31;
  $18 = HEAP32[$3 >> 2] | 0;
  if ($18 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $18 + 1;
   $c$0 = HEAPU8[$18 >> 0] | 0;
   $neg$0 = $17;
   break;
  } else {
   $c$0 = ___shgetc($f) | 0;
   $neg$0 = $17;
   break;
  }
 } else {
  $c$0 = $$lcssa122;
  $neg$0 = 0;
 } while (0);
 $25 = ($base | 0) == 0;
 do if (($base & -17 | 0) == 0 & ($c$0 | 0) == 48) {
  $29 = HEAP32[$3 >> 2] | 0;
  if ($29 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $29 + 1;
   $37 = HEAPU8[$29 >> 0] | 0;
  } else $37 = ___shgetc($f) | 0;
  if (($37 | 32 | 0) != 120) if ($25) {
   $$125 = 8;
   $c$126 = $37;
   label = 48;
   break;
  } else {
   $$1 = $base;
   $c$1 = $37;
   label = 32;
   break;
  }
  $39 = HEAP32[$3 >> 2] | 0;
  if ($39 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $39 + 1;
   $46 = HEAPU8[$39 >> 0] | 0;
  } else $46 = ___shgetc($f) | 0;
  if ((HEAPU8[$46 + 42561 >> 0] | 0) > 15) {
   $51 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$51) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (!$pok) {
    ___shlim($f, 0);
    $279 = 0;
    $280 = 0;
    tempRet0 = $279;
    return $280 | 0;
   }
   if ($51) {
    $279 = 0;
    $280 = 0;
    tempRet0 = $279;
    return $280 | 0;
   }
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   $279 = 0;
   $280 = 0;
   tempRet0 = $279;
   return $280 | 0;
  } else {
   $$125 = 16;
   $c$126 = $46;
   label = 48;
  }
 } else {
  $$base21 = $25 ? 10 : $base;
  if ((HEAPU8[$c$0 + 42561 >> 0] | 0) >>> 0 < $$base21 >>> 0) {
   $$1 = $$base21;
   $c$1 = $c$0;
   label = 32;
  } else {
   if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   ___shlim($f, 0);
   HEAP32[(___errno_location() | 0) >> 2] = 22;
   $279 = 0;
   $280 = 0;
   tempRet0 = $279;
   return $280 | 0;
  }
 } while (0);
 if ((label | 0) == 32) if (($$1 | 0) == 10) {
  $67 = $c$1 + -48 | 0;
  if ($67 >>> 0 < 10) {
   $71 = $67;
   $x$084 = 0;
   while (1) {
    $70 = ($x$084 * 10 | 0) + $71 | 0;
    $72 = HEAP32[$3 >> 2] | 0;
    if ($72 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $72 + 1;
     $c$2$be = HEAPU8[$72 >> 0] | 0;
    } else $c$2$be = ___shgetc($f) | 0;
    $71 = $c$2$be + -48 | 0;
    if (!($71 >>> 0 < 10 & $70 >>> 0 < 429496729)) {
     $$lcssa121 = $70;
     $c$2$be$lcssa = $c$2$be;
     break;
    } else $x$084 = $70;
   }
   $281 = $$lcssa121;
   $282 = 0;
   $c$2$lcssa = $c$2$be$lcssa;
  } else {
   $281 = 0;
   $282 = 0;
   $c$2$lcssa = $c$1;
  }
  $82 = $c$2$lcssa + -48 | 0;
  if ($82 >>> 0 < 10) {
   $84 = $281;
   $85 = $282;
   $88 = $82;
   $c$373 = $c$2$lcssa;
   while (1) {
    $86 = ___muldi3($84 | 0, $85 | 0, 10, 0) | 0;
    $87 = tempRet0;
    $90 = (($88 | 0) < 0) << 31 >> 31;
    $92 = ~$90;
    if ($87 >>> 0 > $92 >>> 0 | ($87 | 0) == ($92 | 0) & $86 >>> 0 > ~$88 >>> 0) {
     $$lcssa = $88;
     $283 = $84;
     $284 = $85;
     $c$3$lcssa = $c$373;
     break;
    }
    $98 = _i64Add($86 | 0, $87 | 0, $88 | 0, $90 | 0) | 0;
    $99 = tempRet0;
    $100 = HEAP32[$3 >> 2] | 0;
    if ($100 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $100 + 1;
     $c$3$be = HEAPU8[$100 >> 0] | 0;
    } else $c$3$be = ___shgetc($f) | 0;
    $107 = $c$3$be + -48 | 0;
    if ($107 >>> 0 < 10 & ($99 >>> 0 < 429496729 | ($99 | 0) == 429496729 & $98 >>> 0 < 2576980378)) {
     $84 = $98;
     $85 = $99;
     $88 = $107;
     $c$373 = $c$3$be;
    } else {
     $$lcssa = $107;
     $283 = $98;
     $284 = $99;
     $c$3$lcssa = $c$3$be;
     break;
    }
   }
   if ($$lcssa >>> 0 > 9) {
    $252 = $284;
    $254 = $283;
   } else {
    $$124 = 10;
    $285 = $283;
    $286 = $284;
    $c$8 = $c$3$lcssa;
    label = 79;
   }
  } else {
   $252 = $282;
   $254 = $281;
  }
 } else {
  $$125 = $$1;
  $c$126 = $c$1;
  label = 48;
 }
 do if ((label | 0) == 48) {
  if (!($$125 + -1 & $$125)) {
   $127 = HEAP8[42824 + (($$125 * 23 | 0) >>> 5 & 7) >> 0] | 0;
   $129 = HEAP8[$c$126 + 42561 >> 0] | 0;
   $130 = $129 & 255;
   if ($130 >>> 0 < $$125 >>> 0) {
    $134 = $130;
    $x$148 = 0;
    while (1) {
     $133 = $134 | $x$148 << $127;
     $135 = HEAP32[$3 >> 2] | 0;
     if ($135 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $135 + 1;
      $c$4$be = HEAPU8[$135 >> 0] | 0;
     } else $c$4$be = ___shgetc($f) | 0;
     $143 = HEAP8[$c$4$be + 42561 >> 0] | 0;
     $134 = $143 & 255;
     if (!($133 >>> 0 < 134217728 & $134 >>> 0 < $$125 >>> 0)) {
      $$lcssa117 = $133;
      $$lcssa118 = $143;
      $c$4$be$lcssa = $c$4$be;
      break;
     } else $x$148 = $133;
    }
    $150 = $$lcssa118;
    $152 = 0;
    $154 = $$lcssa117;
    $c$4$lcssa = $c$4$be$lcssa;
   } else {
    $150 = $129;
    $152 = 0;
    $154 = 0;
    $c$4$lcssa = $c$126;
   }
   $147 = _bitshift64Lshr(-1, -1, $127 | 0) | 0;
   $148 = tempRet0;
   if (($150 & 255) >>> 0 >= $$125 >>> 0 | ($152 >>> 0 > $148 >>> 0 | ($152 | 0) == ($148 | 0) & $154 >>> 0 > $147 >>> 0)) {
    $$124 = $$125;
    $285 = $154;
    $286 = $152;
    $c$8 = $c$4$lcssa;
    label = 79;
    break;
   }
   $159 = $154;
   $160 = $152;
   $164 = $150;
   while (1) {
    $161 = _bitshift64Shl($159 | 0, $160 | 0, $127 | 0) | 0;
    $162 = tempRet0;
    $165 = $164 & 255 | $161;
    $166 = HEAP32[$3 >> 2] | 0;
    if ($166 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $166 + 1;
     $c$5$be = HEAPU8[$166 >> 0] | 0;
    } else $c$5$be = ___shgetc($f) | 0;
    $164 = HEAP8[$c$5$be + 42561 >> 0] | 0;
    if (($164 & 255) >>> 0 >= $$125 >>> 0 | ($162 >>> 0 > $148 >>> 0 | ($162 | 0) == ($148 | 0) & $165 >>> 0 > $147 >>> 0)) {
     $289 = $165;
     $290 = $162;
     $c$5$be$lcssa = $c$5$be;
     break;
    } else {
     $159 = $165;
     $160 = $162;
    }
   }
   $$124 = $$125;
   $285 = $289;
   $286 = $290;
   $c$8 = $c$5$be$lcssa;
   label = 79;
   break;
  }
  $119 = HEAP8[$c$126 + 42561 >> 0] | 0;
  $120 = $119 & 255;
  if ($120 >>> 0 < $$125 >>> 0) {
   $184 = $120;
   $x$268 = 0;
   while (1) {
    $183 = $184 + (Math_imul($x$268, $$125) | 0) | 0;
    $185 = HEAP32[$3 >> 2] | 0;
    if ($185 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $185 + 1;
     $c$6$be = HEAPU8[$185 >> 0] | 0;
    } else $c$6$be = ___shgetc($f) | 0;
    $193 = HEAP8[$c$6$be + 42561 >> 0] | 0;
    $184 = $193 & 255;
    if (!($183 >>> 0 < 119304647 & $184 >>> 0 < $$125 >>> 0)) {
     $$lcssa119 = $183;
     $$lcssa120 = $193;
     $c$6$be$lcssa = $c$6$be;
     break;
    } else $x$268 = $183;
   }
   $198 = $$lcssa120;
   $287 = $$lcssa119;
   $288 = 0;
   $c$6$lcssa = $c$6$be$lcssa;
  } else {
   $198 = $119;
   $287 = 0;
   $288 = 0;
   $c$6$lcssa = $c$126;
  }
  if (($198 & 255) >>> 0 < $$125 >>> 0) {
   $200 = ___udivdi3(-1, -1, $$125 | 0, 0) | 0;
   $201 = tempRet0;
   $202 = $288;
   $204 = $287;
   $212 = $198;
   $c$755 = $c$6$lcssa;
   while (1) {
    if ($202 >>> 0 > $201 >>> 0 | ($202 | 0) == ($201 | 0) & $204 >>> 0 > $200 >>> 0) {
     $291 = $204;
     $292 = $202;
     $c$8$ph = $c$755;
     break;
    }
    $209 = ___muldi3($204 | 0, $202 | 0, $$125 | 0, 0) | 0;
    $210 = tempRet0;
    $211 = $212 & 255;
    if ($210 >>> 0 > 4294967295 | ($210 | 0) == -1 & $209 >>> 0 > ~$211 >>> 0) {
     $291 = $204;
     $292 = $202;
     $c$8$ph = $c$755;
     break;
    }
    $219 = _i64Add($211 | 0, 0, $209 | 0, $210 | 0) | 0;
    $220 = tempRet0;
    $221 = HEAP32[$3 >> 2] | 0;
    if ($221 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $221 + 1;
     $c$7$be = HEAPU8[$221 >> 0] | 0;
    } else $c$7$be = ___shgetc($f) | 0;
    $212 = HEAP8[$c$7$be + 42561 >> 0] | 0;
    if (($212 & 255) >>> 0 >= $$125 >>> 0) {
     $291 = $219;
     $292 = $220;
     $c$8$ph = $c$7$be;
     break;
    } else {
     $202 = $220;
     $204 = $219;
     $c$755 = $c$7$be;
    }
   }
   $$124 = $$125;
   $285 = $291;
   $286 = $292;
   $c$8 = $c$8$ph;
   label = 79;
  } else {
   $$124 = $$125;
   $285 = $287;
   $286 = $288;
   $c$8 = $c$6$lcssa;
   label = 79;
  }
 } while (0);
 if ((label | 0) == 79) if ((HEAPU8[$c$8 + 42561 >> 0] | 0) >>> 0 < $$124 >>> 0) {
  do {
   $236 = HEAP32[$3 >> 2] | 0;
   if ($236 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $236 + 1;
    $c$9$be = HEAPU8[$236 >> 0] | 0;
   } else $c$9$be = ___shgetc($f) | 0;
  } while ((HEAPU8[$c$9$be + 42561 >> 0] | 0) >>> 0 < $$124 >>> 0);
  HEAP32[(___errno_location() | 0) >> 2] = 34;
  $252 = $1;
  $254 = $0;
 } else {
  $252 = $286;
  $254 = $285;
 }
 if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
 if (!($252 >>> 0 < $1 >>> 0 | ($252 | 0) == ($1 | 0) & $254 >>> 0 < $0 >>> 0)) {
  if (!(($0 & 1 | 0) != 0 | 0 != 0 | ($neg$0 | 0) != 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $265 = _i64Add($0 | 0, $1 | 0, -1, -1) | 0;
   $279 = tempRet0;
   $280 = $265;
   tempRet0 = $279;
   return $280 | 0;
  }
  if ($252 >>> 0 > $1 >>> 0 | ($252 | 0) == ($1 | 0) & $254 >>> 0 > $0 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $279 = $1;
   $280 = $0;
   tempRet0 = $279;
   return $280 | 0;
  }
 }
 $274 = (($neg$0 | 0) < 0) << 31 >> 31;
 $277 = _i64Subtract($254 ^ $neg$0 | 0, $252 ^ $274 | 0, $neg$0 | 0, $274 | 0) | 0;
 $279 = tempRet0;
 $280 = $277;
 tempRet0 = $279;
 return $280 | 0;
}

function __ZL23default_import_callbackPvPKcS1_Pi($ctx, $base, $file, $success) {
 $ctx = $ctx | 0;
 $base = $base | 0;
 $file = $file | 0;
 $success = $success | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i15 = 0, $$0$i$i21 = 0, $$0$i$i27 = 0, $$0$i$i8 = 0, $$01$i = 0, $$1 = 0, $$12 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$byval_copy = 0, $$byval_copy6 = 0, $0 = 0, $1 = 0, $103 = 0, $108 = 0, $11 = 0, $111 = 0, $117 = 0, $118 = 0, $119 = 0, $121 = 0, $122 = 0, $124 = 0, $126 = 0, $131 = 0, $132 = 0, $138 = 0, $139 = 0, $144 = 0, $146 = 0, $148 = 0, $153 = 0, $154 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $165 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $175 = 0, $180 = 0, $181 = 0, $187 = 0, $188 = 0, $190 = 0, $191 = 0, $192 = 0, $194 = 0, $2 = 0, $23 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $37 = 0, $4 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $6 = 0, $62 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $72 = 0, $76 = 0, $78 = 0, $80 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $99 = 0, $abs_path = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $f = 0, $input = 0, $strlenfirst = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $$byval_copy6 = sp + 296 | 0;
 $$byval_copy = sp + 292 | 0;
 $0 = sp + 280 | 0;
 $1 = sp + 268 | 0;
 $abs_path = sp + 256 | 0;
 $2 = sp + 244 | 0;
 $3 = sp + 232 | 0;
 $f = sp + 44 | 0;
 $4 = sp + 32 | 0;
 $input = sp + 20 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp;
 $strlenfirst = HEAP8[$file >> 0] | 0;
 if (!($strlenfirst << 24 >> 24)) {
  HEAP32[$success >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 40392, 40);
  $9 = HEAP8[$0 >> 0] | 0;
  $11 = ($9 & 1) == 0;
  if ($11) $17 = ($9 & 255) >>> 1; else $17 = HEAP32[$0 + 4 >> 2] | 0;
  $16 = $17 + 1 | 0;
  if (!$16) $$0$i$i = 0; else $$0$i$i = _malloc($16) | 0;
  if ($11) $23 = $0 + 1 | 0; else $23 = HEAP32[$0 + 8 >> 2] | 0;
  _strcpy($$0$i$i | 0, $23 | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $$1 = $$0$i$i;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if ((HEAP8[$file + ((_strlen($file | 0) | 0) + -1) >> 0] | 0) == 47) {
  HEAP32[$success >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 40440, 31);
  $29 = HEAP8[$1 >> 0] | 0;
  $31 = ($29 & 1) == 0;
  if ($31) $37 = ($29 & 255) >>> 1; else $37 = HEAP32[$1 + 4 >> 2] | 0;
  $36 = $37 + 1 | 0;
  if (!$36) $$0$i$i8 = 0; else $$0$i$i8 = _malloc($36) | 0;
  if ($31) $43 = $1 + 1 | 0; else $43 = HEAP32[$1 + 8 >> 2] | 0;
  _strcpy($$0$i$i8 | 0, $43 | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $$1 = $$0$i$i8;
  STACKTOP = sp;
  return $$1 | 0;
 };
 HEAP32[$abs_path + 0 >> 2] = 0;
 HEAP32[$abs_path + 4 >> 2] = 0;
 HEAP32[$abs_path + 8 >> 2] = 0;
 do if ($strlenfirst << 24 >> 24 == 47) {
  __THREW__ = 0;
  invoke_iii(19, $abs_path | 0, $file | 0) | 0;
  $45 = __THREW__;
  __THREW__ = 0;
  if ($45 & 1) label = 23; else label = 34;
 } else {
  $49 = _strlen($base | 0) | 0;
  __THREW__ = 0;
  invoke_viii(3, $3 | 0, $base | 0, $49 | 0);
  $50 = __THREW__;
  __THREW__ = 0;
  if ($50 & 1) label = 23; else {
   __THREW__ = 0;
   $52 = invoke_iii(27, $3 | 0, $file | 0) | 0;
   $53 = __THREW__;
   __THREW__ = 0;
   if ($53 & 1) {
    $66 = ___cxa_find_matching_catch() | 0;
    $67 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$2 = $67;
    $$25 = $66;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
    ___resumeException($$25 | 0);
   };
   HEAP32[$2 + 0 >> 2] = HEAP32[$52 + 0 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$52 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$52 + 8 >> 2];
   HEAP32[$52 + 0 >> 2] = 0;
   HEAP32[$52 + 4 >> 2] = 0;
   HEAP32[$52 + 8 >> 2] = 0;
   if (!(HEAP8[$abs_path >> 0] & 1)) {
    HEAP8[$abs_path + 1 >> 0] = 0;
    HEAP8[$abs_path >> 0] = 0;
   } else {
    HEAP8[HEAP32[$abs_path + 8 >> 2] >> 0] = 0;
    HEAP32[$abs_path + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $abs_path | 0, 0);
   $62 = __THREW__;
   __THREW__ = 0;
   if ($62 & 1) {
    $64 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($64);
   } else {
    HEAP32[$abs_path + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    HEAP32[$abs_path + 4 >> 2] = HEAP32[$2 + 4 >> 2];
    HEAP32[$abs_path + 8 >> 2] = HEAP32[$2 + 8 >> 2];
    HEAP32[$2 + 0 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    label = 34;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 23) {
  $47 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $47;
 } else if ((label | 0) == 34) {
  $68 = $f + 108 | 0;
  $69 = $f + 8 | 0;
  HEAP32[$f >> 2] = 40164;
  HEAP32[$68 >> 2] = 40184;
  HEAP32[$f + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $f + 108 | 0, $69 | 0);
  $72 = __THREW__;
  __THREW__ = 0;
  do if ($72 & 1) {
   $78 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $78;
  } else {
   HEAP32[$f + 180 >> 2] = 0;
   HEAP32[$f + 184 >> 2] = -1;
   HEAP32[$f >> 2] = 40108;
   HEAP32[$68 >> 2] = 40128;
   __THREW__ = 0;
   invoke_vi(184, $69 | 0);
   $76 = __THREW__;
   __THREW__ = 0;
   if ($76 & 1) {
    $80 = ___cxa_find_matching_catch() | 0;
    $$0$i = tempRet0;
    $$01$i = $80;
    break;
   }
   if (!(HEAP8[$abs_path >> 0] & 1)) $91 = $abs_path + 1 | 0; else $91 = HEAP32[$abs_path + 8 >> 2] | 0;
   $88 = $f + 72 | 0;
   if (!(HEAP32[$88 >> 2] | 0)) {
    $92 = _fopen($91 | 0, 40384) | 0;
    HEAP32[$88 >> 2] = $92;
    if (!$92) label = 45; else {
     HEAP32[$f + 96 >> 2] = 8;
     __THREW__ = 0;
     invoke_vii(48, $f + (HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0) | 0, 0);
     $99 = __THREW__;
     __THREW__ = 0;
     if ($99 & 1) label = 58; else label = 46;
    }
   } else label = 45;
   if ((label | 0) == 45) {
    $103 = HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(48, $f + $103 | 0, HEAP32[$f + ($103 + 16) >> 2] | 4 | 0);
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) label = 58; else label = 46;
   }
   L63 : do if ((label | 0) == 46) {
    $111 = (HEAP32[$f >> 2] | 0) + -12 | 0;
    do if (!(HEAP32[$f + ((HEAP32[$111 >> 2] | 0) + 16) >> 2] | 0)) {
     HEAP32[$input + 0 >> 2] = 0;
     HEAP32[$input + 4 >> 2] = 0;
     HEAP32[$input + 8 >> 2] = 0;
     HEAP32[$5 >> 2] = HEAP32[$f + ((HEAP32[$111 >> 2] | 0) + 24) >> 2];
     HEAP32[$6 >> 2] = 0;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$$byval_copy6 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     invoke_iiii(33, $input | 0, $$byval_copy | 0, $$byval_copy6 | 0) | 0;
     $144 = __THREW__;
     __THREW__ = 0;
     if (!($144 & 1)) {
      HEAP32[$success >> 2] = 1;
      $146 = HEAP8[$input >> 0] | 0;
      $148 = ($146 & 1) == 0;
      if ($148) $154 = ($146 & 255) >>> 1; else $154 = HEAP32[$input + 4 >> 2] | 0;
      $153 = $154 + 1 | 0;
      if (!$153) $$0$i$i21 = 0; else $$0$i$i21 = _malloc($153) | 0;
      if ($148) $160 = $input + 1 | 0; else $160 = HEAP32[$input + 8 >> 2] | 0;
      _strcpy($$0$i$i21 | 0, $160 | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
      $$0 = $$0$i$i21;
      break;
     }
     $161 = ___cxa_find_matching_catch(45568) | 0;
     $162 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
     if (($162 | 0) != (_llvm_eh_typeid_for(45568) | 0)) {
      $$12 = $162;
      $$14 = $161;
      break L63;
     }
     $165 = ___cxa_begin_catch($161 | 0) | 0;
     HEAP32[$success >> 2] = 0;
     $169 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$165 >> 2] | 0) + 8 >> 2] & 127]($165) | 0;
     $170 = _strlen($169 | 0) | 0;
     __THREW__ = 0;
     invoke_viii(3, $7 | 0, $169 | 0, $170 | 0);
     $171 = __THREW__;
     __THREW__ = 0;
     if ($171 & 1) {
      $190 = ___cxa_find_matching_catch() | 0;
      $191 = tempRet0;
      __THREW__ = 0;
      invoke_v(2);
      $192 = __THREW__;
      __THREW__ = 0;
      if (!($192 & 1)) {
       $$12 = $191;
       $$14 = $190;
       break L63;
      }
      $194 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($194);
     }
     $173 = HEAP8[$7 >> 0] | 0;
     $175 = ($173 & 1) == 0;
     if ($175) $181 = ($173 & 255) >>> 1; else $181 = HEAP32[$7 + 4 >> 2] | 0;
     $180 = $181 + 1 | 0;
     if (!$180) $$0$i$i27 = 0; else $$0$i$i27 = _malloc($180) | 0;
     if ($175) $187 = $7 + 1 | 0; else $187 = HEAP32[$7 + 8 >> 2] | 0;
     _strcpy($$0$i$i27 | 0, $187 | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     __THREW__ = 0;
     invoke_v(2);
     $188 = __THREW__;
     __THREW__ = 0;
     if ($188 & 1) {
      label = 58;
      break L63;
     } else $$0 = $$0$i$i27;
    } else {
     HEAP32[$success >> 2] = 0;
     $117 = HEAP32[(___errno_location() | 0) >> 2] | 0;
     __THREW__ = 0;
     $118 = invoke_ii(70, $117 | 0) | 0;
     $119 = __THREW__;
     __THREW__ = 0;
     if ($119 & 1) {
      label = 58;
      break L63;
     }
     $121 = _strlen($118 | 0) | 0;
     __THREW__ = 0;
     invoke_viii(3, $4 | 0, $118 | 0, $121 | 0);
     $122 = __THREW__;
     __THREW__ = 0;
     if ($122 & 1) {
      label = 58;
      break L63;
     }
     $124 = HEAP8[$4 >> 0] | 0;
     $126 = ($124 & 1) == 0;
     if ($126) $132 = ($124 & 255) >>> 1; else $132 = HEAP32[$4 + 4 >> 2] | 0;
     $131 = $132 + 1 | 0;
     if (!$131) $$0$i$i15 = 0; else $$0$i$i15 = _malloc($131) | 0;
     if ($126) $138 = $4 + 1 | 0; else $138 = HEAP32[$4 + 8 >> 2] | 0;
     _strcpy($$0$i$i15 | 0, $138 | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     $$0 = $$0$i$i15;
    } while (0);
    HEAP32[$f >> 2] = 40108;
    HEAP32[$68 >> 2] = 40128;
    __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($69);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($68);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
    $$1 = $$0;
    STACKTOP = sp;
    return $$1 | 0;
   } while (0);
   if ((label | 0) == 58) {
    $139 = ___cxa_find_matching_catch() | 0;
    $$12 = tempRet0;
    $$14 = $139;
   }
   HEAP32[$f >> 2] = 40108;
   HEAP32[$68 >> 2] = 40128;
   __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($69);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($68);
   $$2 = $$12;
   $$25 = $$14;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
   ___resumeException($$25 | 0);
  } while (0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($68);
  $eh$lpad$body$index2Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 }
 $$2 = $eh$lpad$body$index2Z2D;
 $$25 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
 ___resumeException($$25 | 0);
 return 0;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$lcssa71 = 0, $$041 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$lcssa77 = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $102 = 0, $103 = 0, $106 = 0, $11 = 0, $113 = 0, $120 = 0, $121 = 0, $122 = 0, $129 = 0, $13 = 0, $137 = 0, $144 = 0, $15 = 0, $158 = 0, $159 = 0, $162 = 0, $163 = 0, $17 = 0, $172 = 0, $173 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $59 = 0, $60 = 0, $63 = 0, $65 = 0, $67 = 0, $7 = 0, $74 = 0, $75 = 0, $79 = 0, $83 = 0, $84 = 0, $86 = 0, $9 = 0, $97 = 0, $98 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0, $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(6);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch() | 0;
    $$index = $9;
    $$index10 = tempRet0;
   } else {
    $17 = 0;
    $__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;
   $__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;
  $__status$0 = $__statbuf;
  label = 11;
 }
 if ((label | 0) == 11) {
  $__ky$0 = $__kb;
  $__n_does_match$0 = 0;
  $__n_might_match$0 = $3;
  $__st$0 = $__status$0;
  while (1) {
   if (($__ky$0 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$0;
    $__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0 >> 0] | 0;
   if (!($20 & 1)) $27 = ($20 & 255) >>> 1; else $27 = HEAP32[$__ky$0 + 4 >> 2] | 0;
   if (!$27) {
    HEAP8[$__st$0 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$0 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$0 + -1 | 0;
   } else {
    HEAP8[$__st$0 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$0;
    $__n_might_match$1 = $__n_might_match$0;
   }
   $__ky$0 = $__ky$0 + 12 | 0;
   $__n_does_match$0 = $__n_does_match$1;
   $__n_might_match$0 = $__n_might_match$1;
   $__st$0 = $__st$0 + 1 | 0;
  }
  $__indx$0 = 0;
  $__n_does_match$2 = $__n_does_match$0$lcssa;
  $__n_might_match$2 = $__n_might_match$0$lcssa;
  L19 : while (1) {
   $33 = HEAP32[$__b >> 2] | 0;
   do if (!$33) $47 = 0; else if ((HEAP32[$33 + 12 >> 2] | 0) == (HEAP32[$33 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $43 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     label = 6;
     break L19;
    }
    if (($43 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $47 = 0;
     break;
    } else {
     $47 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $47 = $33; while (0);
   $48 = ($47 | 0) == 0;
   $49 = HEAP32[$__e >> 2] | 0;
   if (!$49) $$pre$i2$i$i16 = 0; else if ((HEAP32[$49 + 12 >> 2] | 0) == (HEAP32[$49 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $59 = invoke_ii(HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] | 0, $49 | 0) | 0;
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 6;
     break;
    }
    if (($59 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i2$i$i16 = 0;
    } else $$pre$i2$i$i16 = $49;
   } else $$pre$i2$i$i16 = $49;
   $63 = ($$pre$i2$i$i16 | 0) == 0;
   $65 = HEAP32[$__b >> 2] | 0;
   if (!(($__n_might_match$2 | 0) != 0 & ($48 ^ $63))) {
    $$lcssa = $63;
    $$lcssa77 = $65;
    $$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
    label = 70;
    break;
   }
   $67 = HEAP32[$65 + 12 >> 2] | 0;
   if (($67 | 0) == (HEAP32[$65 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $74 = invoke_ii(HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] | 0, $65 | 0) | 0;
    $75 = __THREW__;
    __THREW__ = 0;
    if ($75 & 1) {
     label = 6;
     break;
    } else $$0$i$i = $74;
   } else $$0$i$i = HEAPU8[$67 >> 0] | 0;
   $79 = $$0$i$i & 255;
   if ($__case_sensitive) $__c$0 = $79; else {
    __THREW__ = 0;
    $83 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $79 | 0) | 0;
    $84 = __THREW__;
    __THREW__ = 0;
    if ($84 & 1) {
     label = 6;
     break;
    } else $__c$0 = $83;
   }
   $86 = $__indx$0 + 1 | 0;
   $__consume$0$off0 = 0;
   $__ky1$0 = $__kb;
   $__n_does_match$3 = $__n_does_match$2;
   $__n_might_match$3 = $__n_might_match$2;
   $__st$1 = $__status$0;
   while (1) {
    if (($__ky1$0 | 0) == ($__ke | 0)) {
     $__consume$0$off0$lcssa = $__consume$0$off0;
     $__n_does_match$3$lcssa = $__n_does_match$3;
     $__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    do if ((HEAP8[$__st$1 >> 0] | 0) == 1) {
     if (!(HEAP8[$__ky1$0 >> 0] & 1)) $97 = $__ky1$0 + 1 | 0; else $97 = HEAP32[$__ky1$0 + 8 >> 2] | 0;
     $98 = HEAP8[$97 + $__indx$0 >> 0] | 0;
     if ($__case_sensitive) $__kc$0 = $98; else {
      __THREW__ = 0;
      $102 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $98 | 0) | 0;
      $103 = __THREW__;
      __THREW__ = 0;
      if ($103 & 1) {
       label = 5;
       break L19;
      } else $__kc$0 = $102;
     }
     if ($__c$0 << 24 >> 24 != $__kc$0 << 24 >> 24) {
      HEAP8[$__st$1 >> 0] = 0;
      $__consume$1$off0 = $__consume$0$off0;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
      break;
     }
     $106 = HEAP8[$__ky1$0 >> 0] | 0;
     if (!($106 & 1)) $113 = ($106 & 255) >>> 1; else $113 = HEAP32[$__ky1$0 + 4 >> 2] | 0;
     if (($113 | 0) == ($86 | 0)) {
      HEAP8[$__st$1 >> 0] = 2;
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3 + 1 | 0;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
     } else {
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off0;
     $__n_does_match$4 = $__n_does_match$3;
     $__n_might_match$4 = $__n_might_match$3;
    } while (0);
    $__consume$0$off0 = $__consume$1$off0;
    $__ky1$0 = $__ky1$0 + 12 | 0;
    $__n_does_match$3 = $__n_does_match$4;
    $__n_might_match$3 = $__n_might_match$4;
    $__st$1 = $__st$1 + 1 | 0;
   }
   if ($__consume$0$off0$lcssa) {
    $120 = HEAP32[$__b >> 2] | 0;
    $121 = $120 + 12 | 0;
    $122 = HEAP32[$121 >> 2] | 0;
    if (($122 | 0) == (HEAP32[$120 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_ii(HEAP32[(HEAP32[$120 >> 2] | 0) + 40 >> 2] | 0, $120 | 0) | 0;
     $129 = __THREW__;
     __THREW__ = 0;
     if ($129 & 1) {
      label = 6;
      break;
     }
    } else HEAP32[$121 >> 2] = $122 + 1;
    if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 > 1) {
     $__ky2$0 = $__kb;
     $__n_does_match$5 = $__n_does_match$3$lcssa;
     $__st$2 = $__status$0;
     while (1) {
      if (($__ky2$0 | 0) == ($__ke | 0)) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      if ((HEAP8[$__st$2 >> 0] | 0) == 2) {
       $137 = HEAP8[$__ky2$0 >> 0] | 0;
       if (!($137 & 1)) $144 = ($137 & 255) >>> 1; else $144 = HEAP32[$__ky2$0 + 4 >> 2] | 0;
       if (($144 | 0) == ($86 | 0)) $__n_does_match$6 = $__n_does_match$5; else {
        HEAP8[$__st$2 >> 0] = 0;
        $__n_does_match$6 = $__n_does_match$5 + -1 | 0;
       }
      } else $__n_does_match$6 = $__n_does_match$5;
      $__ky2$0 = $__ky2$0 + 12 | 0;
      $__n_does_match$5 = $__n_does_match$6;
      $__st$2 = $__st$2 + 1 | 0;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   $__indx$0 = $86;
   $__n_does_match$2 = $__n_does_match$2$be;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label | 0) == 5) {
   $11 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $11;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 6) {
   $13 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $13;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 70) {
   do if (!$$lcssa77) {
    $162 = 0;
    label = 76;
   } else if ((HEAP32[$$lcssa77 + 12 >> 2] | 0) == (HEAP32[$$lcssa77 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $158 = invoke_ii(HEAP32[(HEAP32[$$lcssa77 >> 2] | 0) + 36 >> 2] | 0, $$lcssa77 | 0) | 0;
    $159 = __THREW__;
    __THREW__ = 0;
    if (!($159 & 1)) if (($158 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     label = 76;
     break;
    } else {
     $162 = HEAP32[$__b >> 2] | 0;
     label = 76;
     break;
    }
   } else {
    $162 = $$lcssa77;
    label = 76;
   } while (0);
   L94 : do if ((label | 0) == 76) {
    $163 = ($162 | 0) == 0;
    do if ($$lcssa) label = 82; else {
     if ((HEAP32[$$pre$i2$i$i16$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i16$lcssa + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $172 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i16$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i16$lcssa | 0) | 0;
      $173 = __THREW__;
      __THREW__ = 0;
      if ($173 & 1) break L94;
      if (($172 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 82;
       break;
      }
     }
     if (!$163) label = 83;
    } while (0);
    if ((label | 0) == 82) if ($163) label = 83;
    if ((label | 0) == 83) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$0 = $__kb;
    $__st$3 = $__status$0;
    while (1) {
     if (($$0 | 0) == ($__ke | 0)) {
      label = 88;
      break;
     }
     if ((HEAP8[$__st$3 >> 0] | 0) == 2) {
      $$0$lcssa71 = $$0;
      label = 89;
      break;
     }
     $$0 = $$0 + 12 | 0;
     $__st$3 = $__st$3 + 1 | 0;
    }
    if ((label | 0) == 88) {
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $$041 = $__ke;
    } else if ((label | 0) == 89) $$041 = $$0$lcssa71;
    _free($17);
    if ($17) {}
    STACKTOP = sp;
    return $$041 | 0;
   } while (0);
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index3 = tempRet0;
  }
  _free($17);
  if (!$17) {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index | 0);
 return 0;
}

function __ZNSt3__16locale5__impC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $69 = 0, $71 = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 47888;
 $2 = $this + 8 | 0;
 __THREW__ = 0;
 invoke_vii(77, $2 | 0, 28);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $82 = ___cxa_find_matching_catch() | 0;
  $$1 = tempRet0;
  $$12 = $82;
 } else {
  $5 = $this + 144 | 0;
  __THREW__ = 0;
  invoke_viii(3, $5 | 0, 47872, 1);
  $6 = __THREW__;
  __THREW__ = 0;
  if ($6 & 1) {
   $84 = ___cxa_find_matching_catch() | 0;
   $$0 = tempRet0;
   $$01 = $84;
  } else {
   $8 = HEAP32[$2 >> 2] | 0;
   $9 = $this + 12 | 0;
   $10 = HEAP32[$9 >> 2] | 0;
   while (1) {
    if (($10 | 0) == ($8 | 0)) break;
    $12 = $10 + -4 | 0;
    HEAP32[$9 >> 2] = $12;
    $10 = $12;
   }
   HEAP32[13195] = 0;
   HEAP32[13194] = 46336;
   __THREW__ = 0;
   invoke_vii(78, $this | 0, 52776);
   $13 = __THREW__;
   __THREW__ = 0;
   do if ($13 & 1) label = 42; else {
    HEAP32[13193] = 0;
    HEAP32[13192] = 46376;
    __THREW__ = 0;
    invoke_vii(79, $this | 0, 52768);
    $15 = __THREW__;
    __THREW__ = 0;
    if ($15 & 1) label = 42; else {
     HEAP32[13189] = 0;
     HEAP32[13188] = 47984;
     HEAP32[13190] = 0;
     HEAP8[52764] = 0;
     HEAP32[13190] = __ZNSt3__15ctypeIcE13classic_tableEv() | 0;
     __THREW__ = 0;
     invoke_vii(80, $this | 0, 52752);
     $18 = __THREW__;
     __THREW__ = 0;
     if ($18 & 1) label = 42; else {
      HEAP32[13187] = 0;
      HEAP32[13186] = 48944;
      __THREW__ = 0;
      invoke_vii(81, $this | 0, 52744);
      $20 = __THREW__;
      __THREW__ = 0;
      if ($20 & 1) label = 42; else {
       HEAP32[13185] = 0;
       HEAP32[13184] = 49160;
       __THREW__ = 0;
       invoke_vii(82, $this | 0, 52736);
       $22 = __THREW__;
       __THREW__ = 0;
       if ($22 & 1) label = 42; else {
        __THREW__ = 0;
        invoke_vii(83, 52720, 1);
        $24 = __THREW__;
        __THREW__ = 0;
        if ($24 & 1) label = 42; else {
         __THREW__ = 0;
         invoke_vii(84, $this | 0, 52720);
         $26 = __THREW__;
         __THREW__ = 0;
         if ($26 & 1) label = 42; else {
          HEAP32[13179] = 0;
          HEAP32[13178] = 49384;
          __THREW__ = 0;
          invoke_vii(85, $this | 0, 52712);
          $28 = __THREW__;
          __THREW__ = 0;
          if ($28 & 1) label = 42; else {
           HEAP32[13177] = 0;
           HEAP32[13176] = 49504;
           __THREW__ = 0;
           invoke_vii(86, $this | 0, 52704);
           $30 = __THREW__;
           __THREW__ = 0;
           if ($30 & 1) label = 42; else {
            __ZNSt3__18numpunctIcEC2Ej(52680, 1);
            __THREW__ = 0;
            invoke_vii(87, $this | 0, 52680);
            $32 = __THREW__;
            __THREW__ = 0;
            if ($32 & 1) label = 42; else {
             __ZNSt3__18numpunctIwEC2Ej(52648, 1);
             __THREW__ = 0;
             invoke_vii(88, $this | 0, 52648);
             $34 = __THREW__;
             __THREW__ = 0;
             if ($34 & 1) label = 42; else {
              HEAP32[13161] = 0;
              HEAP32[13160] = 46416;
              __THREW__ = 0;
              invoke_vii(89, $this | 0, 52640);
              $36 = __THREW__;
              __THREW__ = 0;
              if ($36 & 1) label = 42; else {
               HEAP32[13159] = 0;
               HEAP32[13158] = 46536;
               __THREW__ = 0;
               invoke_vii(90, $this | 0, 52632);
               $38 = __THREW__;
               __THREW__ = 0;
               if ($38 & 1) label = 42; else {
                HEAP32[13157] = 0;
                HEAP32[13156] = 46608;
                __THREW__ = 0;
                invoke_vii(91, $this | 0, 52624);
                $40 = __THREW__;
                __THREW__ = 0;
                if ($40 & 1) label = 42; else {
                 HEAP32[13155] = 0;
                 HEAP32[13154] = 46704;
                 __THREW__ = 0;
                 invoke_vii(92, $this | 0, 52616);
                 $42 = __THREW__;
                 __THREW__ = 0;
                 if ($42 & 1) label = 42; else {
                  HEAP32[13153] = 0;
                  HEAP32[13152] = 47296;
                  __THREW__ = 0;
                  invoke_vii(93, $this | 0, 52608);
                  $44 = __THREW__;
                  __THREW__ = 0;
                  if ($44 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13151] = 0;
                  HEAP32[13150] = 47360;
                  __THREW__ = 0;
                  invoke_vii(94, $this | 0, 52600);
                  $46 = __THREW__;
                  __THREW__ = 0;
                  if ($46 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13149] = 0;
                  HEAP32[13148] = 47424;
                  __THREW__ = 0;
                  invoke_vii(95, $this | 0, 52592);
                  $48 = __THREW__;
                  __THREW__ = 0;
                  if ($48 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13147] = 0;
                  HEAP32[13146] = 47488;
                  __THREW__ = 0;
                  invoke_vii(96, $this | 0, 52584);
                  $50 = __THREW__;
                  __THREW__ = 0;
                  if ($50 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13145] = 0;
                  HEAP32[13144] = 47552;
                  __THREW__ = 0;
                  invoke_vii(97, $this | 0, 52576);
                  $52 = __THREW__;
                  __THREW__ = 0;
                  if ($52 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13143] = 0;
                  HEAP32[13142] = 47632;
                  __THREW__ = 0;
                  invoke_vii(98, $this | 0, 52568);
                  $54 = __THREW__;
                  __THREW__ = 0;
                  if ($54 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13141] = 0;
                  HEAP32[13140] = 47688;
                  __THREW__ = 0;
                  invoke_vii(99, $this | 0, 52560);
                  $56 = __THREW__;
                  __THREW__ = 0;
                  if ($56 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13139] = 0;
                  HEAP32[13138] = 47736;
                  __THREW__ = 0;
                  invoke_vii(100, $this | 0, 52552);
                  $58 = __THREW__;
                  __THREW__ = 0;
                  if ($58 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13135] = 0;
                  HEAP32[13134] = 46784;
                  HEAP32[13136] = 46832;
                  __THREW__ = 0;
                  invoke_vii(101, $this | 0, 52536);
                  $60 = __THREW__;
                  __THREW__ = 0;
                  if ($60 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13131] = 0;
                  HEAP32[13130] = 46936;
                  HEAP32[13132] = 46984;
                  __THREW__ = 0;
                  invoke_vii(102, $this | 0, 52520);
                  $62 = __THREW__;
                  __THREW__ = 0;
                  if ($62 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13127] = 0;
                  HEAP32[13126] = 48880;
                  __THREW__ = 0;
                  $64 = invoke_i(2) | 0;
                  $65 = __THREW__;
                  __THREW__ = 0;
                  if ($65 & 1) {
                   $67 = ___cxa_find_matching_catch() | 0;
                   $eh$lpad$body$index3Z2D = tempRet0;
                   $eh$lpad$body$indexZ2D = $67;
                   break;
                  }
                  HEAP32[13128] = $64;
                  HEAP32[13126] = 47232;
                  __THREW__ = 0;
                  invoke_vii(103, $this | 0, 52504);
                  $69 = __THREW__;
                  __THREW__ = 0;
                  if ($69 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13123] = 0;
                  HEAP32[13122] = 48880;
                  __THREW__ = 0;
                  $71 = invoke_i(2) | 0;
                  $72 = __THREW__;
                  __THREW__ = 0;
                  if ($72 & 1) {
                   $74 = ___cxa_find_matching_catch() | 0;
                   $eh$lpad$body$index3Z2D = tempRet0;
                   $eh$lpad$body$indexZ2D = $74;
                   break;
                  }
                  HEAP32[13124] = $71;
                  HEAP32[13122] = 47264;
                  __THREW__ = 0;
                  invoke_vii(104, $this | 0, 52488);
                  $76 = __THREW__;
                  __THREW__ = 0;
                  if ($76 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13121] = 0;
                  HEAP32[13120] = 47776;
                  __THREW__ = 0;
                  invoke_vii(105, $this | 0, 52480);
                  $78 = __THREW__;
                  __THREW__ = 0;
                  if ($78 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13119] = 0;
                  HEAP32[13118] = 47816;
                  __THREW__ = 0;
                  invoke_vii(106, $this | 0, 52472);
                  $80 = __THREW__;
                  __THREW__ = 0;
                  if ($80 & 1) {
                   label = 42;
                   break;
                  }
                  return;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while (0);
   if ((label | 0) == 42) {
    $86 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index3Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $86;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;
   $$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;
  $$12 = $$01;
 }
 ___resumeException($$12 | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $$pre$phi40Z2D = 0, $$pre$phi42Z2D = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $113 = 0, $114 = 0, $119 = 0, $125 = 0, $132 = 0, $138 = 0, $139 = 0, $141 = 0, $142 = 0, $143 = 0, $148 = 0, $155 = 0, $156 = 0, $162 = 0, $169 = 0, $170 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $41 = 0, $42 = 0, $46 = 0, $49 = 0, $5 = 0, $56 = 0, $57 = 0, $6 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $77 = 0, $78 = 0, $85 = 0, $86 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 196 | 0;
 $0 = sp + 192 | 0;
 $__buf = sp + 180 | 0;
 $__a_end = sp + 176 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grouping + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 __THREW__ = 0;
 invoke_vii(47, $0 | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $95 = ___cxa_find_matching_catch() | 0;
  $$0 = $95;
  $$01 = tempRet0;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $0 | 0, 47960) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 48 >> 2] | 0, $5 | 0, 46480, 46506 | 0, $__atoms | 0) | 0;
   $11 = __THREW__;
   __THREW__ = 0;
   if (!($11 & 1)) {
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $__i$0$i$i5 = 0;
    while (1) {
     if (($__i$0$i$i5 | 0) == 3) break;
     HEAP32[$__buf + ($__i$0$i$i5 << 2) >> 2] = 0;
     $__i$0$i$i5 = $__i$0$i$i5 + 1 | 0;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $21 = 10; else $21 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $21 | 0, 0);
    $22 = __THREW__;
    __THREW__ = 0;
    L17 : do if ($22 & 1) label = 48; else {
     if (!(HEAP8[$__buf >> 0] & 1)) {
      $29 = $__buf + 1 | 0;
      $$pre$phi40Z2D = $29;
      $$pre$phi42Z2D = $__buf + 8 | 0;
      $30 = $29;
     } else {
      $27 = $__buf + 8 | 0;
      $$pre$phi40Z2D = $__buf + 1 | 0;
      $$pre$phi42Z2D = $27;
      $30 = HEAP32[$27 >> 2] | 0;
     }
     HEAP32[$__a_end >> 2] = $30;
     HEAP32[$__g_end >> 2] = $__g;
     HEAP32[$__dc >> 2] = 0;
     $31 = $__buf + 4 | 0;
     $$pre$i$i$i11 = HEAP32[$__b >> 2] | 0;
     $__a$0 = $30;
     L23 : while (1) {
      if (!$$pre$i$i$i11) {
       $105 = 0;
       $177 = 1;
      } else {
       $34 = HEAP32[$$pre$i$i$i11 + 12 >> 2] | 0;
       if (($34 | 0) == (HEAP32[$$pre$i$i$i11 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $41 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i11 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i11 | 0) | 0;
        $42 = __THREW__;
        __THREW__ = 0;
        if ($42 & 1) {
         label = 47;
         break;
        } else $$0$i$i$i$i9 = $41;
       } else $$0$i$i$i$i9 = HEAP32[$34 >> 2] | 0;
       if (($$0$i$i$i$i9 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $105 = 0;
        $177 = 1;
       } else {
        $105 = $$pre$i$i$i11;
        $177 = 0;
       }
      }
      $46 = HEAP32[$__e >> 2] | 0;
      do if (!$46) label = 29; else {
       $49 = HEAP32[$46 + 12 >> 2] | 0;
       if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $56 = invoke_ii(HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] | 0, $46 | 0) | 0;
        $57 = __THREW__;
        __THREW__ = 0;
        if ($57 & 1) {
         label = 47;
         break L23;
        } else $$0$i$i1$i$i15 = $56;
       } else $$0$i$i1$i$i15 = HEAP32[$49 >> 2] | 0;
       if (($$0$i$i1$i$i15 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 29;
        break;
       } else if ($177) {
        $178 = $46;
        break;
       } else {
        $$lcssa = $105;
        $$pre$i3$i$i = $46;
        $__a$2 = $__a$0;
        break L23;
       }
      } while (0);
      if ((label | 0) == 29) {
       label = 0;
       if ($177) {
        $$lcssa = $105;
        $$pre$i3$i$i = 0;
        $__a$2 = $__a$0;
        break;
       } else $178 = 0;
      }
      $62 = HEAP8[$__buf >> 0] | 0;
      $64 = ($62 & 1) == 0;
      if ($64) $69 = ($62 & 255) >>> 1; else $69 = HEAP32[$31 >> 2] | 0;
      if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $69 | 0)) {
       if ($64) {
        $77 = ($62 & 255) >>> 1;
        $94 = ($62 & 255) >>> 1;
       } else {
        $71 = HEAP32[$31 >> 2] | 0;
        $77 = $71;
        $94 = $71;
       }
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $77 << 1 | 0, 0);
       $78 = __THREW__;
       __THREW__ = 0;
       if ($78 & 1) {
        label = 47;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $85 = 10; else $85 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $85 | 0, 0);
       $86 = __THREW__;
       __THREW__ = 0;
       if ($86 & 1) {
        label = 47;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $93 = $$pre$phi40Z2D; else $93 = HEAP32[$$pre$phi42Z2D >> 2] | 0;
       HEAP32[$__a_end >> 2] = $93 + $94;
       $__a$1 = $93;
      } else $__a$1 = $__a$0;
      $104 = $105 + 12 | 0;
      $106 = HEAP32[$104 >> 2] | 0;
      $107 = $105 + 16 | 0;
      if (($106 | 0) == (HEAP32[$107 >> 2] | 0)) {
       __THREW__ = 0;
       $113 = invoke_ii(HEAP32[(HEAP32[$105 >> 2] | 0) + 36 >> 2] | 0, $105 | 0) | 0;
       $114 = __THREW__;
       __THREW__ = 0;
       if ($114 & 1) {
        label = 47;
        break;
       } else $$0$i$i = $113;
      } else $$0$i$i = HEAP32[$106 >> 2] | 0;
      if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
       $$lcssa = $105;
       $$pre$i3$i$i = $178;
       $__a$2 = $__a$1;
       break;
      }
      $119 = HEAP32[$104 >> 2] | 0;
      if (($119 | 0) == (HEAP32[$107 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$105 >> 2] | 0) + 40 >> 2] | 0, $105 | 0) | 0;
       $125 = __THREW__;
       __THREW__ = 0;
       if ($125 & 1) {
        label = 47;
        break;
       }
      } else HEAP32[$104 >> 2] = $119 + 4;
      $$pre$i$i$i11 = $105;
      $__a$0 = $__a$1;
     }
     if ((label | 0) == 47) {
      $100 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $100;
      $lpad$phi$index2 = tempRet0;
      break;
     }
     __THREW__ = 0;
     invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
     $132 = __THREW__;
     __THREW__ = 0;
     if ($132 & 1) label = 48; else {
      if (!(HEAP8[$__buf >> 0] & 1)) $141 = $$pre$phi40Z2D; else $141 = HEAP32[$$pre$phi42Z2D >> 2] | 0;
      __THREW__ = 0;
      $138 = invoke_i(2) | 0;
      $139 = __THREW__;
      __THREW__ = 0;
      if ($139 & 1) label = 48; else {
       __THREW__ = 0;
       HEAP32[$vararg_buffer >> 2] = $__v;
       $142 = invoke_iiiii(11, $141 | 0, $138 | 0, 46520, $vararg_buffer | 0) | 0;
       $143 = __THREW__;
       __THREW__ = 0;
       if ($143 & 1) label = 48; else {
        if (($142 | 0) != 1) HEAP32[$__err >> 2] = 4;
        if (!$$lcssa) {
         $176 = 0;
         $179 = 1;
        } else {
         $148 = HEAP32[$$lcssa + 12 >> 2] | 0;
         if (($148 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $155 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
          $156 = __THREW__;
          __THREW__ = 0;
          if ($156 & 1) {
           label = 48;
           break;
          } else $$0$i$i$i$i = $155;
         } else $$0$i$i$i$i = HEAP32[$148 >> 2] | 0;
         if (($$0$i$i$i$i | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $176 = 0;
          $179 = 1;
         } else {
          $176 = $$lcssa;
          $179 = 0;
         }
        }
        do if (!$$pre$i3$i$i) label = 77; else {
         $162 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
         if (($162 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $169 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
          $170 = __THREW__;
          __THREW__ = 0;
          if ($170 & 1) {
           label = 48;
           break L17;
          } else $$0$i$i1$i$i = $169;
         } else $$0$i$i1$i$i = HEAP32[$162 >> 2] | 0;
         if (($$0$i$i1$i$i | 0) == -1) {
          HEAP32[$__e >> 2] = 0;
          label = 77;
          break;
         } else if ($179) break; else {
          label = 79;
          break;
         }
        } while (0);
        if ((label | 0) == 77) if ($179) label = 79;
        if ((label | 0) == 79) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
        HEAP32[$agg$result >> 2] = $176;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
        STACKTOP = sp;
        return;
       }
      }
     }
    } while (0);
    if ((label | 0) == 48) {
     $102 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $102;
     $lpad$phi$index2 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    $$0 = $lpad$phi$index;
    $$01 = $lpad$phi$index2;
    break;
   }
  }
  $97 = ___cxa_find_matching_catch() | 0;
  $98 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  $$0 = $97;
  $$01 = $98;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0 | 0);
}

function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $111 = 0, $113 = 0, $119 = 0, $12 = 0, $13 = 0, $130 = 0, $132 = 0, $154 = 0, $156 = 0, $16 = 0, $170 = 0, $172 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $35 = 0, $4 = 0, $46 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $70 = 0, $72 = 0, $8 = 0, $86 = 0, $88 = 0, $9 = 0, $96 = 0, $97 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i36 = 0, $__i$0$i$i$i6 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47408) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) {
    $29 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($29);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   $__i$0$i$i$i = 0;
   while (1) {
    if (($__i$0$i$i$i | 0) == 3) break;
    HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
    $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $35 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $35;
   HEAP8[$__pat + 1 >> 0] = $35 >> 8;
   HEAP8[$__pat + 2 >> 0] = $35 >> 16;
   HEAP8[$__pat + 3 >> 0] = $35 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    $48 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($48);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   $__i$0$i$i$i6 = 0;
   while (1) {
    if (($__i$0$i$i$i6 | 0) == 3) break;
    HEAP32[$3 + ($__i$0$i$i$i6 << 2) >> 2] = 0;
    $__i$0$i$i$i6 = $__i$0$i$i$i6 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  }
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $70 = __THREW__;
  __THREW__ = 0;
  if ($70 & 1) {
   $72 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($72);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i11 = 0;
  while (1) {
   if (($__i$0$i$i$i11 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i11 << 2) >> 2] = 0;
   $__i$0$i$i$i11 = $__i$0$i$i$i11 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $86 = __THREW__;
  __THREW__ = 0;
  if ($86 & 1) {
   $88 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($88);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$5 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  $__i$0$i$i$i16 = 0;
  while (1) {
   if (($__i$0$i$i$i16 | 0) == 3) break;
   HEAP32[$5 + ($__i$0$i$i$i16 << 2) >> 2] = 0;
   $__i$0$i$i$i16 = $__i$0$i$i$i16 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $96 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47344) | 0;
  $97 = HEAP32[$96 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$97 + 44 >> 2] & 127]($6, $96);
   $100 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $100;
   HEAP8[$__pat + 1 >> 0] = $100 >> 8;
   HEAP8[$__pat + 2 >> 0] = $100 >> 16;
   HEAP8[$__pat + 3 >> 0] = $100 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 32 >> 2] & 127]($7, $96);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $111 = __THREW__;
   __THREW__ = 0;
   if ($111 & 1) {
    $113 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($113);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $__i$0$i$i$i21 = 0;
   while (1) {
    if (($__i$0$i$i$i21 | 0) == 3) break;
    HEAP32[$7 + ($__i$0$i$i$i21 << 2) >> 2] = 0;
    $__i$0$i$i$i21 = $__i$0$i$i$i21 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$97 + 40 >> 2] & 127]($8, $96);
   $119 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $119;
   HEAP8[$__pat + 1 >> 0] = $119 >> 8;
   HEAP8[$__pat + 2 >> 0] = $119 >> 16;
   HEAP8[$__pat + 3 >> 0] = $119 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 28 >> 2] & 127]($9, $96);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $130 = __THREW__;
   __THREW__ = 0;
   if ($130 & 1) {
    $132 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($132);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   $__i$0$i$i$i26 = 0;
   while (1) {
    if (($__i$0$i$i$i26 | 0) == 3) break;
    HEAP32[$9 + ($__i$0$i$i$i26 << 2) >> 2] = 0;
    $__i$0$i$i$i26 = $__i$0$i$i$i26 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  }
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 12 >> 2] & 127]($96) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 16 >> 2] & 127]($96) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 20 >> 2] & 127]($10, $96);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $154 = __THREW__;
  __THREW__ = 0;
  if ($154 & 1) {
   $156 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($156);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $__i$0$i$i$i31 = 0;
  while (1) {
   if (($__i$0$i$i$i31 | 0) == 3) break;
   HEAP32[$10 + ($__i$0$i$i$i31 << 2) >> 2] = 0;
   $__i$0$i$i$i31 = $__i$0$i$i$i31 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 24 >> 2] & 127]($11, $96);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $170 = __THREW__;
  __THREW__ = 0;
  if ($170 & 1) {
   $172 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($172);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$11 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $__i$0$i$i$i36 = 0;
  while (1) {
   if (($__i$0$i$i$i36 | 0) == 3) break;
   HEAP32[$11 + ($__i$0$i$i$i36 << 2) >> 2] = 0;
   $__i$0$i$i$i36 = $__i$0$i$i$i36 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 36 >> 2] & 127]($96) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $111 = 0, $121 = 0, $123 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $140 = 0, $147 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $156 = 0, $161 = 0, $162 = 0, $164 = 0, $165 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $179 = 0, $180 = 0, $185 = 0, $19 = 0, $191 = 0, $192 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $39 = 0, $41 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $73 = 0, $80 = 0, $86 = 0, $9 = 0, $92 = 0, $94 = 0, $96 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa40 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47960) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48120) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 if ($5 << 24 >> 24 == 43 | $5 << 24 >> 24 == 45) {
  __THREW__ = 0;
  $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $5 | 0) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if ($10 & 1) label = 8; else {
   $13 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $13 + 4;
   HEAP32[$13 >> 2] = $9;
   $__nf$0 = $__nb + 1 | 0;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $31 = $__nf$0 + 1 | 0;
   $32 = HEAP8[$31 >> 0] | 0;
   if ($32 << 24 >> 24 == 88 | $32 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $36 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
    $37 = __THREW__;
    __THREW__ = 0;
    if ($37 & 1) {
     label = 8;
     break L4;
    }
    $39 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $39 + 4;
    HEAP32[$39 >> 2] = $36;
    $41 = $__nf$0 + 2 | 0;
    __THREW__ = 0;
    $46 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$31 >> 0] | 0) | 0;
    $47 = __THREW__;
    __THREW__ = 0;
    if ($47 & 1) {
     label = 8;
     break L4;
    }
    $49 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $49 + 4;
    HEAP32[$49 >> 2] = $46;
    $__ns$0 = $41;
    while (1) {
     if ($__ns$0 >>> 0 >= $__ne >>> 0) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $52 = HEAP8[$__ns$0 >> 0] | 0;
     __THREW__ = 0;
     $53 = invoke_i(2) | 0;
     $54 = __THREW__;
     __THREW__ = 0;
     if ($54 & 1) {
      label = 7;
      break;
     }
     __THREW__ = 0;
     $57 = invoke_iii(36, $52 << 24 >> 24 | 0, $53 | 0) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 7;
      break;
     }
     if (!$57) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $__ns$0 = $__ns$0 + 1 | 0;
    }
    if ((label | 0) == 7) {
     $21 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $21;
     $lpad$phi$index5 = tempRet0;
     break L4;
    } else if ((label | 0) == 28) {
     $__nf$1 = $41;
     $__ns$2 = $__ns$0$lcssa;
     break;
    }
   } else label = 11;
  } else label = 11; else label = 11; while (0);
  do if ((label | 0) == 11) {
   $__ns$1 = $__nf$0;
   while (1) {
    if ($__ns$1 >>> 0 >= $__ne >>> 0) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $63 = HEAP8[$__ns$1 >> 0] | 0;
    __THREW__ = 0;
    $64 = invoke_i(2) | 0;
    $65 = __THREW__;
    __THREW__ = 0;
    if ($65 & 1) {
     label = 6;
     break;
    }
    __THREW__ = 0;
    $68 = invoke_iii(37, $63 << 24 >> 24 | 0, $64 | 0) | 0;
    $69 = __THREW__;
    __THREW__ = 0;
    if ($69 & 1) {
     label = 6;
     break;
    }
    if (!$68) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $__ns$1 = $__ns$1 + 1 | 0;
   }
   if ((label | 0) == 6) {
    $19 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $19;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } else if ((label | 0) == 27) {
    $__nf$1 = $__nf$0;
    $__ns$2 = $__ns$1$lcssa;
    break;
   }
  } while (0);
  $73 = HEAP8[$__grouping >> 0] | 0;
  if (!($73 & 1)) $80 = ($73 & 255) >>> 1; else $80 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$80) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $86 = __THREW__;
   __THREW__ = 0;
   if ($86 & 1) {
    label = 8;
    break;
   }
   $92 = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1 << 2) | 0;
   HEAP32[$__oe >> 2] = $92;
   $$pre$phiZ2D = $0;
   $191 = $92;
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $$0$i$i = $__ns$2;
    $$01$i$i = $__nf$1;
    while (1) {
     $94 = $$0$i$i + -1 | 0;
     if ($$01$i$i >>> 0 >= $94 >>> 0) break;
     $96 = HEAP8[$$01$i$i >> 0] | 0;
     HEAP8[$$01$i$i >> 0] = HEAP8[$94 >> 0] | 0;
     HEAP8[$94 >> 0] = $96;
     $$0$i$i = $94;
     $$01$i$i = $$01$i$i + 1 | 0;
    }
   }
   __THREW__ = 0;
   $102 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $103 = __THREW__;
   __THREW__ = 0;
   if ($103 & 1) {
    label = 8;
    break;
   }
   $105 = $__grouping + 1 | 0;
   $106 = $__grouping + 4 | 0;
   $107 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ns$2 >>> 0) break;
    $111 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if ((HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0) > 0) if (($__dc$0 | 0) == (HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $121 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $121 + 4;
     HEAP32[$121 >> 2] = $102;
     $123 = HEAP8[$__grouping >> 0] | 0;
     if (!($123 & 1)) $130 = ($123 & 255) >>> 1; else $130 = HEAP32[$106 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($130 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $137 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $138 = __THREW__;
    __THREW__ = 0;
    if ($138 & 1) {
     label = 5;
     break;
    }
    $140 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $140 + 4;
    HEAP32[$140 >> 2] = $137;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 5) {
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    break;
   }
   $147 = $__ob + ($__nf$1 - $__nb << 2) | 0;
   $148 = HEAP32[$__oe >> 2] | 0;
   if (($147 | 0) == ($148 | 0)) {
    $$pre$phiZ2D = $0;
    $191 = $147;
   } else {
    $$0$i$i7 = $148;
    $$01$i$i6 = $147;
    while (1) {
     $150 = $$0$i$i7 + -4 | 0;
     if ($$01$i$i6 >>> 0 >= $150 >>> 0) break;
     $152 = HEAP32[$$01$i$i6 >> 2] | 0;
     HEAP32[$$01$i$i6 >> 2] = HEAP32[$150 >> 2];
     HEAP32[$150 >> 2] = $152;
     $$0$i$i7 = $150;
     $$01$i$i6 = $$01$i$i6 + 4 | 0;
    }
    $$pre$phiZ2D = $0;
    $191 = $148;
   }
  }
  $192 = $191;
  $__nf$2 = $__ns$2;
  while (1) {
   if ($__nf$2 >>> 0 >= $__ne >>> 0) {
    $$lcssa = $192;
    $__nf$2$lcssa = $__nf$2;
    label = 63;
    break;
   }
   $156 = HEAP8[$__nf$2 >> 0] | 0;
   if ($156 << 24 >> 24 == 46) {
    $__nf$2$lcssa40 = $__nf$2;
    label = 59;
    break;
   }
   __THREW__ = 0;
   $170 = invoke_iii(HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $156 | 0) | 0;
   $171 = __THREW__;
   __THREW__ = 0;
   if ($171 & 1) {
    label = 4;
    break;
   }
   $173 = HEAP32[$__oe >> 2] | 0;
   $174 = $173 + 4 | 0;
   HEAP32[$__oe >> 2] = $174;
   HEAP32[$173 >> 2] = $170;
   $192 = $174;
   $__nf$2 = $__nf$2 + 1 | 0;
  }
  if ((label | 0) == 4) {
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index5 = tempRet0;
   break;
  } else if ((label | 0) == 59) {
   __THREW__ = 0;
   $161 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
   $162 = __THREW__;
   __THREW__ = 0;
   if ($162 & 1) {
    label = 8;
    break;
   }
   $164 = HEAP32[$__oe >> 2] | 0;
   $165 = $164 + 4 | 0;
   HEAP32[$__oe >> 2] = $165;
   HEAP32[$164 >> 2] = $161;
   $179 = $165;
   $__nf$3 = $__nf$2$lcssa40 + 1 | 0;
  } else if ((label | 0) == 63) {
   $179 = $$lcssa;
   $__nf$3 = $__nf$2$lcssa;
  }
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, $179 | 0) | 0;
  $180 = __THREW__;
  __THREW__ = 0;
  if ($180 & 1) label = 8; else {
   $185 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3 << 2) | 0;
   HEAP32[$__oe >> 2] = $185;
   if (($__np | 0) == ($__ne | 0)) $storemerge = $185; else $storemerge = $__ob + ($__np - $__nb << 2) | 0;
   HEAP32[$__op >> 2] = $storemerge;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 8) {
  $23 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $23;
  $lpad$phi$index5 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $112 = 0, $113 = 0, $120 = 0, $126 = 0, $133 = 0, $139 = 0, $140 = 0, $142 = 0, $143 = 0, $144 = 0, $156 = 0, $157 = 0, $160 = 0, $161 = 0, $171 = 0, $172 = 0, $177 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $57 = 0, $58 = 0, $6 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $77 = 0, $78 = 0, $85 = 0, $86 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 196 | 0;
 $0 = sp + 192 | 0;
 $__buf = sp + 180 | 0;
 $__a_end = sp + 176 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grouping + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 __THREW__ = 0;
 invoke_vii(47, $0 | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $95 = ___cxa_find_matching_catch() | 0;
  $$0 = $95;
  $$01 = tempRet0;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $0 | 0, 47968) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] | 0, $5 | 0, 46480, 46506 | 0, $__atoms | 0) | 0;
   $11 = __THREW__;
   __THREW__ = 0;
   if (!($11 & 1)) {
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $__i$0$i$i5 = 0;
    while (1) {
     if (($__i$0$i$i5 | 0) == 3) break;
     HEAP32[$__buf + ($__i$0$i$i5 << 2) >> 2] = 0;
     $__i$0$i$i5 = $__i$0$i$i5 + 1 | 0;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $21 = 10; else $21 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $21 | 0, 0);
    $22 = __THREW__;
    __THREW__ = 0;
    L17 : do if ($22 & 1) label = 47; else {
     if (!(HEAP8[$__buf >> 0] & 1)) {
      $29 = $__buf + 1 | 0;
      $$pre$phi37Z2D = $29;
      $$pre$phi39Z2D = $__buf + 8 | 0;
      $30 = $29;
     } else {
      $27 = $__buf + 8 | 0;
      $$pre$phi37Z2D = $__buf + 1 | 0;
      $$pre$phi39Z2D = $27;
      $30 = HEAP32[$27 >> 2] | 0;
     }
     HEAP32[$__a_end >> 2] = $30;
     HEAP32[$__g_end >> 2] = $__g;
     HEAP32[$__dc >> 2] = 0;
     $31 = $__buf + 4 | 0;
     $$pre$i$i$i10 = HEAP32[$__b >> 2] | 0;
     $__a$0 = $30;
     L23 : while (1) {
      if (!$$pre$i$i$i10) $45 = 0; else if ((HEAP32[$$pre$i$i$i10 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i10 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $41 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i10 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i10 | 0) | 0;
       $42 = __THREW__;
       __THREW__ = 0;
       if ($42 & 1) {
        label = 46;
        break;
       }
       if (($41 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $45 = 0;
       } else $45 = $$pre$i$i$i10;
      } else $45 = $$pre$i$i$i10;
      $46 = ($45 | 0) == 0;
      $47 = HEAP32[$__e >> 2] | 0;
      do if (!$47) label = 28; else {
       if ((HEAP32[$47 + 12 >> 2] | 0) != (HEAP32[$47 + 16 >> 2] | 0)) if ($46) {
        $177 = $47;
        break;
       } else {
        $$lcssa = $45;
        $$pre$i2$i$i = $47;
        $__a$2 = $__a$0;
        break L23;
       }
       __THREW__ = 0;
       $57 = invoke_ii(HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] | 0, $47 | 0) | 0;
       $58 = __THREW__;
       __THREW__ = 0;
       if ($58 & 1) {
        label = 46;
        break L23;
       }
       if (($57 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 28;
        break;
       } else if ($46) {
        $177 = $47;
        break;
       } else {
        $$lcssa = $45;
        $$pre$i2$i$i = $47;
        $__a$2 = $__a$0;
        break L23;
       }
      } while (0);
      if ((label | 0) == 28) {
       label = 0;
       if ($46) {
        $$lcssa = $45;
        $$pre$i2$i$i = 0;
        $__a$2 = $__a$0;
        break;
       } else $177 = 0;
      }
      $62 = HEAP8[$__buf >> 0] | 0;
      $64 = ($62 & 1) == 0;
      if ($64) $69 = ($62 & 255) >>> 1; else $69 = HEAP32[$31 >> 2] | 0;
      if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $69 | 0)) {
       if ($64) {
        $77 = ($62 & 255) >>> 1;
        $94 = ($62 & 255) >>> 1;
       } else {
        $71 = HEAP32[$31 >> 2] | 0;
        $77 = $71;
        $94 = $71;
       }
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $77 << 1 | 0, 0);
       $78 = __THREW__;
       __THREW__ = 0;
       if ($78 & 1) {
        label = 46;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $85 = 10; else $85 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $85 | 0, 0);
       $86 = __THREW__;
       __THREW__ = 0;
       if ($86 & 1) {
        label = 46;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $93 = $$pre$phi37Z2D; else $93 = HEAP32[$$pre$phi39Z2D >> 2] | 0;
       HEAP32[$__a_end >> 2] = $93 + $94;
       $__a$1 = $93;
      } else $__a$1 = $__a$0;
      $104 = $45 + 12 | 0;
      $105 = HEAP32[$104 >> 2] | 0;
      $106 = $45 + 16 | 0;
      if (($105 | 0) == (HEAP32[$106 >> 2] | 0)) {
       __THREW__ = 0;
       $112 = invoke_ii(HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] | 0, $45 | 0) | 0;
       $113 = __THREW__;
       __THREW__ = 0;
       if ($113 & 1) {
        label = 46;
        break;
       } else $$0$i$i = $112;
      } else $$0$i$i = HEAPU8[$105 >> 0] | 0;
      if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
       $$lcssa = $45;
       $$pre$i2$i$i = $177;
       $__a$2 = $__a$1;
       break;
      }
      $120 = HEAP32[$104 >> 2] | 0;
      if (($120 | 0) == (HEAP32[$106 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$45 >> 2] | 0) + 40 >> 2] | 0, $45 | 0) | 0;
       $126 = __THREW__;
       __THREW__ = 0;
       if ($126 & 1) {
        label = 46;
        break;
       }
      } else HEAP32[$104 >> 2] = $120 + 1;
      $$pre$i$i$i10 = $45;
      $__a$0 = $__a$1;
     }
     if ((label | 0) == 46) {
      $100 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $100;
      $lpad$phi$index2 = tempRet0;
      break;
     }
     __THREW__ = 0;
     invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
     $133 = __THREW__;
     __THREW__ = 0;
     if ($133 & 1) label = 47; else {
      if (!(HEAP8[$__buf >> 0] & 1)) $142 = $$pre$phi37Z2D; else $142 = HEAP32[$$pre$phi39Z2D >> 2] | 0;
      __THREW__ = 0;
      $139 = invoke_i(2) | 0;
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) label = 47; else {
       __THREW__ = 0;
       HEAP32[$vararg_buffer >> 2] = $__v;
       $143 = invoke_iiiii(11, $142 | 0, $139 | 0, 46520, $vararg_buffer | 0) | 0;
       $144 = __THREW__;
       __THREW__ = 0;
       if ($144 & 1) label = 47; else {
        if (($143 | 0) != 1) HEAP32[$__err >> 2] = 4;
        if (!$$lcssa) $160 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $156 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
         $157 = __THREW__;
         __THREW__ = 0;
         if ($157 & 1) {
          label = 47;
          break;
         }
         if (($156 | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $160 = 0;
         } else $160 = $$lcssa;
        } else $160 = $$lcssa;
        $161 = ($160 | 0) == 0;
        L89 : do if (!$$pre$i2$i$i) label = 75; else {
         do if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $171 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
          $172 = __THREW__;
          __THREW__ = 0;
          if ($172 & 1) {
           label = 47;
           break L17;
          }
          if (($171 | 0) != -1) break;
          HEAP32[$__e >> 2] = 0;
          label = 75;
          break L89;
         } while (0);
         if (!$161) label = 76;
        } while (0);
        if ((label | 0) == 75) if ($161) label = 76;
        if ((label | 0) == 76) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
        HEAP32[$agg$result >> 2] = $160;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
        STACKTOP = sp;
        return;
       }
      }
     }
    } while (0);
    if ((label | 0) == 47) {
     $102 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $102;
     $lpad$phi$index2 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    $$0 = $lpad$phi$index;
    $$01 = $lpad$phi$index2;
    break;
   }
  }
  $97 = ___cxa_find_matching_catch() | 0;
  $98 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  $$0 = $97;
  $$01 = $98;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0 | 0);
}
function __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__z) {
 $__root = $__root | 0;
 $__z = $__z | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$1 = 0, $$2 = 0, $$2$be = 0, $$4 = 0, $$6 = 0, $$lcssa = 0, $$lcssa21 = 0, $$lcssa58 = 0, $$lcssa60 = 0, $$lcssa61 = 0, $$lcssa63 = 0, $$lcssa69 = 0, $$lcssa70 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$ph = 0, $$pre$phiZ2D = 0, $$pre27 = 0, $0 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $116 = 0, $117 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $127 = 0, $130 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $140 = 0, $143 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $157 = 0, $16 = 0, $164 = 0, $165 = 0, $170 = 0, $175 = 0, $178 = 0, $179 = 0, $18 = 0, $182 = 0, $185 = 0, $188 = 0, $19 = 0, $193 = 0, $194 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $204 = 0, $207 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $35 = 0, $38 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $67 = 0, $71 = 0, $77 = 0, $8 = 0, $84 = 0, $91 = 0, $97 = 0, $__w$0 = 0, $__w$1 = 0, $__w$1$be$in = 0, $__w$2 = 0, $__w$2$lcssa = 0, $__w$2$lcssa54 = 0, $__w$256 = 0, $__w$257 = 0, $__w$3 = 0, $__w$4 = 0, $__w$4$lcssa = 0, $__w$4$lcssa65 = 0, $__w$467 = 0, $__w$468 = 0, $__w$5 = 0, label = 0;
 $0 = HEAP32[$__z >> 2] | 0;
 do if (!$0) {
  $$ph = $__z;
  label = 7;
 } else {
  $3 = HEAP32[$__z + 4 >> 2] | 0;
  if (!$3) {
   $11 = $__z;
   $14 = $0;
   $211 = $__z;
   label = 9;
   break;
  }
  $$0$i$i = $3;
  while (1) {
   $5 = HEAP32[$$0$i$i >> 2] | 0;
   if (!$5) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   } else $$0$i$i = $5;
  }
  $$ph = $$0$i$i$lcssa;
  label = 7;
 } while (0);
 if ((label | 0) == 7) {
  $8 = HEAP32[$$ph + 4 >> 2] | 0;
  if (!$8) {
   $$pre$phiZ2D = $$ph + 8 | 0;
   $18 = $$ph;
   $19 = 0;
   $212 = 0;
   $35 = $$ph;
  } else {
   $11 = $$ph;
   $14 = $8;
   $211 = $$ph;
   label = 9;
  }
 }
 if ((label | 0) == 9) {
  $10 = $11 + 8 | 0;
  HEAP32[$14 + 8 >> 2] = HEAP32[$10 >> 2];
  $$pre$phiZ2D = $10;
  $18 = $11;
  $19 = $14;
  $212 = 1;
  $35 = $211;
 }
 $15 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) == ($18 | 0)) {
  HEAP32[$15 >> 2] = $19;
  if (($18 | 0) == ($__root | 0)) {
   $$0 = $19;
   $__w$0 = 0;
  } else {
   $$0 = $__root;
   $__w$0 = HEAP32[$15 + 4 >> 2] | 0;
  }
 } else {
  HEAP32[$15 + 4 >> 2] = $19;
  $$0 = $__root;
  $__w$0 = $16;
 }
 $24 = $18 + 12 | 0;
 $26 = (HEAP8[$24 >> 0] | 0) != 0;
 if (($18 | 0) == ($__z | 0)) $$1 = $$0; else {
  $28 = $__z + 8 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  HEAP32[$$pre$phiZ2D >> 2] = $29;
  if ((HEAP32[HEAP32[$28 >> 2] >> 2] | 0) == ($__z | 0)) HEAP32[$29 >> 2] = $18; else HEAP32[$29 + 4 >> 2] = $18;
  $34 = HEAP32[$__z >> 2] | 0;
  HEAP32[$35 >> 2] = $34;
  HEAP32[$34 + 8 >> 2] = $18;
  $38 = HEAP32[$__z + 4 >> 2] | 0;
  HEAP32[$18 + 4 >> 2] = $38;
  if ($38) HEAP32[$38 + 8 >> 2] = $18;
  HEAP8[$24 >> 0] = HEAP8[$__z + 12 >> 0] | 0;
  $$1 = ($$0 | 0) == ($__z | 0) ? $18 : $$0;
 }
 if (!($26 & ($$1 | 0) != 0)) return;
 if ($212) {
  HEAP8[$19 + 12 >> 0] = 1;
  return;
 }
 $$2 = $$1;
 $__w$1 = $__w$0;
 while (1) {
  $48 = HEAP32[$__w$1 + 8 >> 2] | 0;
  $51 = $__w$1 + 12 | 0;
  $53 = (HEAP8[$51 >> 0] | 0) != 0;
  if ((HEAP32[$48 >> 2] | 0) == ($__w$1 | 0)) {
   if ($53) {
    $$6 = $$2;
    $__w$4 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $135 = HEAP32[$48 >> 2] | 0;
    $136 = $135 + 4 | 0;
    $137 = HEAP32[$136 >> 2] | 0;
    HEAP32[$48 >> 2] = $137;
    if ($137) HEAP32[$137 + 8 >> 2] = $48;
    $140 = $48 + 8 | 0;
    HEAP32[$135 + 8 >> 2] = HEAP32[$140 >> 2];
    $143 = HEAP32[$140 >> 2] | 0;
    if ((HEAP32[$143 >> 2] | 0) == ($48 | 0)) HEAP32[$143 >> 2] = $135; else HEAP32[$143 + 4 >> 2] = $135;
    HEAP32[$136 >> 2] = $48;
    HEAP32[$140 >> 2] = $135;
    $148 = HEAP32[$__w$1 + 4 >> 2] | 0;
    $$6 = ($$2 | 0) == ($148 | 0) ? $__w$1 : $$2;
    $__w$4 = HEAP32[$148 >> 2] | 0;
   }
   $151 = HEAP32[$__w$4 >> 2] | 0;
   $152 = ($151 | 0) == 0;
   if (!$152) if (!(HEAP8[$151 + 12 >> 0] | 0)) {
    $$lcssa69 = $151;
    $__w$4$lcssa = $__w$4;
    label = 72;
    break;
   }
   $157 = HEAP32[$__w$4 + 4 >> 2] | 0;
   if ($157) if (!(HEAP8[$157 + 12 >> 0] | 0)) {
    $$lcssa70 = $151;
    $$lcssa73 = $152;
    $__w$4$lcssa65 = $__w$4;
    label = 71;
    break;
   }
   HEAP8[$__w$4 + 12 >> 0] = 0;
   $164 = HEAP32[$__w$4 + 8 >> 2] | 0;
   $165 = $164 + 12 | 0;
   if (($164 | 0) == ($$6 | 0) | (HEAP8[$165 >> 0] | 0) == 0) {
    $$lcssa75 = $165;
    label = 68;
    break;
   }
   $170 = HEAP32[$164 + 8 >> 2] | 0;
   $$2$be = $$6;
   $__w$1$be$in = (HEAP32[$170 >> 2] | 0) == ($164 | 0) ? $170 + 4 | 0 : $170;
  } else {
   if ($53) {
    $$4 = $$2;
    $__w$2 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $55 = $48 + 4 | 0;
    $56 = HEAP32[$55 >> 2] | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    HEAP32[$55 >> 2] = $57;
    if ($57) HEAP32[$57 + 8 >> 2] = $48;
    $60 = $48 + 8 | 0;
    HEAP32[$56 + 8 >> 2] = HEAP32[$60 >> 2];
    $63 = HEAP32[$60 >> 2] | 0;
    if ((HEAP32[$63 >> 2] | 0) == ($48 | 0)) HEAP32[$63 >> 2] = $56; else HEAP32[$63 + 4 >> 2] = $56;
    HEAP32[$56 >> 2] = $48;
    HEAP32[$60 >> 2] = $56;
    $67 = HEAP32[$__w$1 >> 2] | 0;
    $$4 = ($$2 | 0) == ($67 | 0) ? $__w$1 : $$2;
    $__w$2 = HEAP32[$67 + 4 >> 2] | 0;
   }
   $71 = HEAP32[$__w$2 >> 2] | 0;
   if ($71) if (!(HEAP8[$71 + 12 >> 0] | 0)) {
    $$lcssa = $__w$2;
    $$lcssa60 = $71;
    $__w$2$lcssa = $__w$2;
    label = 41;
    break;
   }
   $77 = HEAP32[$__w$2 + 4 >> 2] | 0;
   if ($77) if (!(HEAP8[$77 + 12 >> 0] | 0)) {
    $$lcssa58 = $__w$2;
    $$lcssa61 = $71;
    $$lcssa63 = $77;
    $__w$2$lcssa54 = $__w$2;
    label = 42;
    break;
   }
   HEAP8[$__w$2 + 12 >> 0] = 0;
   $84 = HEAP32[$__w$2 + 8 >> 2] | 0;
   if (($84 | 0) == ($$4 | 0)) {
    $$lcssa21 = $$4;
    label = 39;
    break;
   }
   if (!(HEAP8[$84 + 12 >> 0] | 0)) {
    $$lcssa21 = $84;
    label = 39;
    break;
   }
   $91 = HEAP32[$84 + 8 >> 2] | 0;
   $$2$be = $$4;
   $__w$1$be$in = (HEAP32[$91 >> 2] | 0) == ($84 | 0) ? $91 + 4 | 0 : $91;
  }
  $$2 = $$2$be;
  $__w$1 = HEAP32[$__w$1$be$in >> 2] | 0;
 }
 if ((label | 0) == 39) {
  HEAP8[$$lcssa21 + 12 >> 0] = 1;
  return;
 } else if ((label | 0) == 41) {
  $$pre27 = HEAP32[$__w$2$lcssa + 4 >> 2] | 0;
  if (!$$pre27) {
   $101 = $$lcssa60;
   $105 = $$lcssa;
   $__w$257 = $__w$2$lcssa;
   label = 44;
  } else {
   $213 = $$lcssa60;
   $214 = $$lcssa;
   $97 = $$pre27;
   $__w$256 = $__w$2$lcssa;
   label = 43;
  }
 } else if ((label | 0) == 42) {
  $213 = $$lcssa61;
  $214 = $$lcssa58;
  $97 = $$lcssa63;
  $__w$256 = $__w$2$lcssa54;
  label = 43;
 } else if ((label | 0) == 68) {
  HEAP8[$$lcssa75 >> 0] = 1;
  return;
 } else if ((label | 0) == 71) if ($$lcssa73) {
  $__w$468 = $__w$4$lcssa65;
  label = 74;
 } else {
  $175 = $$lcssa70;
  $__w$467 = $__w$4$lcssa65;
  label = 73;
 } else if ((label | 0) == 72) {
  $175 = $$lcssa69;
  $__w$467 = $__w$4$lcssa;
  label = 73;
 }
 if ((label | 0) == 43) if (!(HEAP8[$97 + 12 >> 0] | 0)) {
  $121 = $97;
  $__w$3 = $__w$256;
  label = 50;
 } else {
  $101 = $213;
  $105 = $214;
  $__w$257 = $__w$256;
  label = 44;
 } else if ((label | 0) == 73) if (!(HEAP8[$175 + 12 >> 0] | 0)) {
  $198 = $175;
  $__w$5 = $__w$467;
  label = 80;
 } else {
  $__w$468 = $__w$467;
  label = 74;
 }
 if ((label | 0) == 44) {
  HEAP8[$101 + 12 >> 0] = 1;
  HEAP8[$__w$257 + 12 >> 0] = 0;
  $103 = $101 + 4 | 0;
  $104 = HEAP32[$103 >> 2] | 0;
  HEAP32[$105 >> 2] = $104;
  if ($104) HEAP32[$104 + 8 >> 2] = $__w$257;
  $108 = $__w$257 + 8 | 0;
  HEAP32[$101 + 8 >> 2] = HEAP32[$108 >> 2];
  $111 = HEAP32[$108 >> 2] | 0;
  if ((HEAP32[$111 >> 2] | 0) == ($__w$257 | 0)) HEAP32[$111 >> 2] = $101; else HEAP32[$111 + 4 >> 2] = $101;
  HEAP32[$103 >> 2] = $__w$257;
  HEAP32[$108 >> 2] = $101;
  $121 = $__w$257;
  $__w$3 = $101;
  label = 50;
 } else if ((label | 0) == 74) {
  $178 = $__w$468 + 4 | 0;
  $179 = HEAP32[$178 >> 2] | 0;
  HEAP8[$179 + 12 >> 0] = 1;
  HEAP8[$__w$468 + 12 >> 0] = 0;
  $182 = HEAP32[$179 >> 2] | 0;
  HEAP32[$178 >> 2] = $182;
  if ($182) HEAP32[$182 + 8 >> 2] = $__w$468;
  $185 = $__w$468 + 8 | 0;
  HEAP32[$179 + 8 >> 2] = HEAP32[$185 >> 2];
  $188 = HEAP32[$185 >> 2] | 0;
  if ((HEAP32[$188 >> 2] | 0) == ($__w$468 | 0)) HEAP32[$188 >> 2] = $179; else HEAP32[$188 + 4 >> 2] = $179;
  HEAP32[$179 >> 2] = $__w$468;
  HEAP32[$185 >> 2] = $179;
  $198 = $__w$468;
  $__w$5 = $179;
  label = 80;
 }
 if ((label | 0) == 50) {
  $116 = HEAP32[$__w$3 + 8 >> 2] | 0;
  $117 = $116 + 12 | 0;
  HEAP8[$__w$3 + 12 >> 0] = HEAP8[$117 >> 0] | 0;
  HEAP8[$117 >> 0] = 1;
  HEAP8[$121 + 12 >> 0] = 1;
  $122 = $116 + 4 | 0;
  $123 = HEAP32[$122 >> 2] | 0;
  $124 = HEAP32[$123 >> 2] | 0;
  HEAP32[$122 >> 2] = $124;
  if ($124) HEAP32[$124 + 8 >> 2] = $116;
  $127 = $116 + 8 | 0;
  HEAP32[$123 + 8 >> 2] = HEAP32[$127 >> 2];
  $130 = HEAP32[$127 >> 2] | 0;
  if ((HEAP32[$130 >> 2] | 0) == ($116 | 0)) HEAP32[$130 >> 2] = $123; else HEAP32[$130 + 4 >> 2] = $123;
  HEAP32[$123 >> 2] = $116;
  HEAP32[$127 >> 2] = $123;
  return;
 } else if ((label | 0) == 80) {
  $193 = HEAP32[$__w$5 + 8 >> 2] | 0;
  $194 = $193 + 12 | 0;
  HEAP8[$__w$5 + 12 >> 0] = HEAP8[$194 >> 0] | 0;
  HEAP8[$194 >> 0] = 1;
  HEAP8[$198 + 12 >> 0] = 1;
  $199 = HEAP32[$193 >> 2] | 0;
  $200 = $199 + 4 | 0;
  $201 = HEAP32[$200 >> 2] | 0;
  HEAP32[$193 >> 2] = $201;
  if ($201) HEAP32[$201 + 8 >> 2] = $193;
  $204 = $193 + 8 | 0;
  HEAP32[$199 + 8 >> 2] = HEAP32[$204 >> 2];
  $207 = HEAP32[$204 >> 2] | 0;
  if ((HEAP32[$207 >> 2] | 0) == ($193 | 0)) HEAP32[$207 >> 2] = $199; else HEAP32[$207 + 4 >> 2] = $199;
  HEAP32[$200 >> 2] = $193;
  HEAP32[$204 >> 2] = $199;
  return;
 }
}

function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $107 = 0, $109 = 0, $11 = 0, $115 = 0, $12 = 0, $125 = 0, $127 = 0, $13 = 0, $149 = 0, $151 = 0, $16 = 0, $164 = 0, $166 = 0, $2 = 0, $26 = 0, $28 = 0, $3 = 0, $34 = 0, $4 = 0, $44 = 0, $46 = 0, $5 = 0, $6 = 0, $68 = 0, $7 = 0, $70 = 0, $8 = 0, $83 = 0, $85 = 0, $9 = 0, $93 = 0, $94 = 0, $97 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i13 = 0, $__i$0$i$i$i18 = 0, $__i$0$i$i$i23 = 0, $__i$0$i$i$i28 = 0, $__i$0$i$i$i33 = 0, $__i$0$i$i$i6 = 0, $__i$0$i$i$i9 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47536) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $26 = __THREW__;
   __THREW__ = 0;
   if ($26 & 1) {
    $28 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($28);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   $__i$0$i$i$i = 0;
   while (1) {
    if (($__i$0$i$i$i | 0) == 3) break;
    HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
    $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $34 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $34;
   HEAP8[$__pat + 1 >> 0] = $34 >> 8;
   HEAP8[$__pat + 2 >> 0] = $34 >> 16;
   HEAP8[$__pat + 3 >> 0] = $34 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) {
    $46 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($46);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   $__i$0$i$i$i6 = 0;
   while (1) {
    if (($__i$0$i$i$i6 | 0) == 3) break;
    HEAP32[$3 + ($__i$0$i$i$i6 << 2) >> 2] = 0;
    $__i$0$i$i$i6 = $__i$0$i$i$i6 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i9 = 0;
  while (1) {
   if (($__i$0$i$i$i9 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i9 << 2) >> 2] = 0;
   $__i$0$i$i$i9 = $__i$0$i$i$i9 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $83 = __THREW__;
  __THREW__ = 0;
  if ($83 & 1) {
   $85 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($85);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$5 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  $__i$0$i$i$i13 = 0;
  while (1) {
   if (($__i$0$i$i$i13 | 0) == 3) break;
   HEAP32[$5 + ($__i$0$i$i$i13 << 2) >> 2] = 0;
   $__i$0$i$i$i13 = $__i$0$i$i$i13 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $93 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47472) | 0;
  $94 = HEAP32[$93 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$94 + 44 >> 2] & 127]($6, $93);
   $97 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $97;
   HEAP8[$__pat + 1 >> 0] = $97 >> 8;
   HEAP8[$__pat + 2 >> 0] = $97 >> 16;
   HEAP8[$__pat + 3 >> 0] = $97 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 32 >> 2] & 127]($7, $93);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $107 = __THREW__;
   __THREW__ = 0;
   if ($107 & 1) {
    $109 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($109);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $__i$0$i$i$i18 = 0;
   while (1) {
    if (($__i$0$i$i$i18 | 0) == 3) break;
    HEAP32[$7 + ($__i$0$i$i$i18 << 2) >> 2] = 0;
    $__i$0$i$i$i18 = $__i$0$i$i$i18 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$94 + 40 >> 2] & 127]($8, $93);
   $115 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $115;
   HEAP8[$__pat + 1 >> 0] = $115 >> 8;
   HEAP8[$__pat + 2 >> 0] = $115 >> 16;
   HEAP8[$__pat + 3 >> 0] = $115 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 28 >> 2] & 127]($9, $93);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $125 = __THREW__;
   __THREW__ = 0;
   if ($125 & 1) {
    $127 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($127);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   $__i$0$i$i$i23 = 0;
   while (1) {
    if (($__i$0$i$i$i23 | 0) == 3) break;
    HEAP32[$9 + ($__i$0$i$i$i23 << 2) >> 2] = 0;
    $__i$0$i$i$i23 = $__i$0$i$i$i23 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 12 >> 2] & 127]($93) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 16 >> 2] & 127]($93) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 20 >> 2] & 127]($10, $93);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $149 = __THREW__;
  __THREW__ = 0;
  if ($149 & 1) {
   $151 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($151);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $__i$0$i$i$i28 = 0;
  while (1) {
   if (($__i$0$i$i$i28 | 0) == 3) break;
   HEAP32[$10 + ($__i$0$i$i$i28 << 2) >> 2] = 0;
   $__i$0$i$i$i28 = $__i$0$i$i$i28 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 24 >> 2] & 127]($11, $93);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $164 = __THREW__;
  __THREW__ = 0;
  if ($164 & 1) {
   $166 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($166);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$11 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $__i$0$i$i$i33 = 0;
  while (1) {
   if (($__i$0$i$i$i33 | 0) == 3) break;
   HEAP32[$11 + ($__i$0$i$i$i33 << 2) >> 2] = 0;
   $__i$0$i$i$i33 = $__i$0$i$i$i33 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $111 = 0, $121 = 0, $123 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $140 = 0, $147 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $156 = 0, $161 = 0, $162 = 0, $164 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $180 = 0, $185 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $39 = 0, $41 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $73 = 0, $80 = 0, $86 = 0, $9 = 0, $94 = 0, $96 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa37 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47968) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48112) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 if ($5 << 24 >> 24 == 43 | $5 << 24 >> 24 == 45) {
  __THREW__ = 0;
  $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $5 | 0) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if ($10 & 1) label = 8; else {
   $13 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $13 + 1;
   HEAP8[$13 >> 0] = $9;
   $__nf$0 = $__nb + 1 | 0;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $31 = $__nf$0 + 1 | 0;
   $32 = HEAP8[$31 >> 0] | 0;
   if ($32 << 24 >> 24 == 88 | $32 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $36 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
    $37 = __THREW__;
    __THREW__ = 0;
    if ($37 & 1) {
     label = 8;
     break L4;
    }
    $39 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $39 + 1;
    HEAP8[$39 >> 0] = $36;
    $41 = $__nf$0 + 2 | 0;
    __THREW__ = 0;
    $46 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$31 >> 0] | 0) | 0;
    $47 = __THREW__;
    __THREW__ = 0;
    if ($47 & 1) {
     label = 8;
     break L4;
    }
    $49 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $49 + 1;
    HEAP8[$49 >> 0] = $46;
    $__ns$0 = $41;
    while (1) {
     if ($__ns$0 >>> 0 >= $__ne >>> 0) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $52 = HEAP8[$__ns$0 >> 0] | 0;
     __THREW__ = 0;
     $53 = invoke_i(2) | 0;
     $54 = __THREW__;
     __THREW__ = 0;
     if ($54 & 1) {
      label = 7;
      break;
     }
     __THREW__ = 0;
     $57 = invoke_iii(36, $52 << 24 >> 24 | 0, $53 | 0) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 7;
      break;
     }
     if (!$57) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $__ns$0 = $__ns$0 + 1 | 0;
    }
    if ((label | 0) == 7) {
     $21 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $21;
     $lpad$phi$index5 = tempRet0;
     break L4;
    } else if ((label | 0) == 28) {
     $__nf$1 = $41;
     $__ns$2 = $__ns$0$lcssa;
     break;
    }
   } else label = 11;
  } else label = 11; else label = 11; while (0);
  do if ((label | 0) == 11) {
   $__ns$1 = $__nf$0;
   while (1) {
    if ($__ns$1 >>> 0 >= $__ne >>> 0) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $63 = HEAP8[$__ns$1 >> 0] | 0;
    __THREW__ = 0;
    $64 = invoke_i(2) | 0;
    $65 = __THREW__;
    __THREW__ = 0;
    if ($65 & 1) {
     label = 6;
     break;
    }
    __THREW__ = 0;
    $68 = invoke_iii(37, $63 << 24 >> 24 | 0, $64 | 0) | 0;
    $69 = __THREW__;
    __THREW__ = 0;
    if ($69 & 1) {
     label = 6;
     break;
    }
    if (!$68) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $__ns$1 = $__ns$1 + 1 | 0;
   }
   if ((label | 0) == 6) {
    $19 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $19;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } else if ((label | 0) == 27) {
    $__nf$1 = $__nf$0;
    $__ns$2 = $__ns$1$lcssa;
    break;
   }
  } while (0);
  $73 = HEAP8[$__grouping >> 0] | 0;
  if (!($73 & 1)) $80 = ($73 & 255) >>> 1; else $80 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$80) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $86 = __THREW__;
   __THREW__ = 0;
   if ($86 & 1) {
    label = 8;
    break;
   }
   HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1);
   $$pre$phiZ2D = $0;
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $$0$i$i = $__ns$2;
    $$01$i$i = $__nf$1;
    while (1) {
     $94 = $$0$i$i + -1 | 0;
     if ($$01$i$i >>> 0 >= $94 >>> 0) break;
     $96 = HEAP8[$$01$i$i >> 0] | 0;
     HEAP8[$$01$i$i >> 0] = HEAP8[$94 >> 0] | 0;
     HEAP8[$94 >> 0] = $96;
     $$0$i$i = $94;
     $$01$i$i = $$01$i$i + 1 | 0;
    }
   }
   __THREW__ = 0;
   $102 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $103 = __THREW__;
   __THREW__ = 0;
   if ($103 & 1) {
    label = 8;
    break;
   }
   $105 = $__grouping + 1 | 0;
   $106 = $__grouping + 4 | 0;
   $107 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ns$2 >>> 0) break;
    $111 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if ((HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0) > 0) if (($__dc$0 | 0) == (HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $121 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $121 + 1;
     HEAP8[$121 >> 0] = $102;
     $123 = HEAP8[$__grouping >> 0] | 0;
     if (!($123 & 1)) $130 = ($123 & 255) >>> 1; else $130 = HEAP32[$106 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($130 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $137 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $138 = __THREW__;
    __THREW__ = 0;
    if ($138 & 1) {
     label = 5;
     break;
    }
    $140 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $140 + 1;
    HEAP8[$140 >> 0] = $137;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 5) {
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    break;
   }
   $147 = $__ob + ($__nf$1 - $__nb) | 0;
   $148 = HEAP32[$__oe >> 2] | 0;
   if (($147 | 0) == ($148 | 0)) $$pre$phiZ2D = $0; else {
    $$0$i$i7 = $148;
    $$01$i$i6 = $147;
    while (1) {
     $150 = $$0$i$i7 + -1 | 0;
     if ($$01$i$i6 >>> 0 >= $150 >>> 0) break;
     $152 = HEAP8[$$01$i$i6 >> 0] | 0;
     HEAP8[$$01$i$i6 >> 0] = HEAP8[$150 >> 0] | 0;
     HEAP8[$150 >> 0] = $152;
     $$0$i$i7 = $150;
     $$01$i$i6 = $$01$i$i6 + 1 | 0;
    }
    $$pre$phiZ2D = $0;
   }
  }
  $__nf$2 = $__ns$2;
  while (1) {
   if ($__nf$2 >>> 0 >= $__ne >>> 0) {
    $__nf$2$lcssa = $__nf$2;
    label = 63;
    break;
   }
   $156 = HEAP8[$__nf$2 >> 0] | 0;
   if ($156 << 24 >> 24 == 46) {
    $__nf$2$lcssa37 = $__nf$2;
    label = 59;
    break;
   }
   __THREW__ = 0;
   $170 = invoke_iii(HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $156 | 0) | 0;
   $171 = __THREW__;
   __THREW__ = 0;
   if ($171 & 1) {
    label = 4;
    break;
   }
   $173 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $173 + 1;
   HEAP8[$173 >> 0] = $170;
   $__nf$2 = $__nf$2 + 1 | 0;
  }
  if ((label | 0) == 4) {
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index5 = tempRet0;
   break;
  } else if ((label | 0) == 59) {
   __THREW__ = 0;
   $161 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
   $162 = __THREW__;
   __THREW__ = 0;
   if ($162 & 1) {
    label = 8;
    break;
   }
   $164 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $164 + 1;
   HEAP8[$164 >> 0] = $161;
   $__nf$3 = $__nf$2$lcssa37 + 1 | 0;
  } else if ((label | 0) == 63) $__nf$3 = $__nf$2$lcssa;
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, HEAP32[$__oe >> 2] | 0) | 0;
  $180 = __THREW__;
  __THREW__ = 0;
  if ($180 & 1) label = 8; else {
   $185 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3) | 0;
   HEAP32[$__oe >> 2] = $185;
   if (($__np | 0) == ($__ne | 0)) $storemerge = $185; else $storemerge = $__ob + ($__np - $__nb) | 0;
   HEAP32[$__op >> 2] = $storemerge;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 8) {
  $23 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $23;
  $lpad$phi$index5 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$0$i$i1$i$i25 = 0, $$0$i$i16 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa69$lcssa = 0, $$lcssa69$lcssa77 = 0, $$lcssa70 = 0, $$lcssa71 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa76 = 0, $$pre = 0, $$pre$i$i$i21 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i12 = 0, $$pre$i3$i$i1243 = 0, $$pre$i3$i$i1244 = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $119 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $14 = 0, $140 = 0, $147 = 0, $157 = 0, $167 = 0, $170 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $2 = 0, $24 = 0, $27 = 0, $3 = 0, $37 = 0, $4 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $62 = 0, $63 = 0, $66 = 0, $8 = 0, $80 = 0, $9 = 0, $90 = 0, $93 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 47960) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($37 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 HEAP32[$__err >> 2] = 0;
 $$0$ph = $__fmtb;
 $$pre = 0;
 L4 : while (1) {
  $8 = ($$0$ph | 0) != ($__fmte | 0);
  $9 = $$pre;
  while (1) {
   $11 = HEAP32[$__b >> 2] | 0;
   if (!($8 & ($9 | 0) == 0)) {
    $$lcssa = $11;
    label = 67;
    break L4;
   }
   if (!$11) {
    $127 = 0;
    $183 = 1;
   } else {
    $14 = HEAP32[$11 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$11 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 127]($11) | 0; else $$0$i$i$i$i = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $127 = 0;
     $183 = 1;
    } else {
     $127 = $11;
     $183 = 0;
    }
   }
   $24 = HEAP32[$__e >> 2] | 0;
   do if (!$24) label = 17; else {
    $27 = HEAP32[$24 + 12 >> 2] | 0;
    if (($27 | 0) == (HEAP32[$24 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i1$i$i = HEAP32[$27 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($183) {
     $184 = $24;
     break;
    } else {
     $$lcssa68 = $127;
     label = 19;
     break L4;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($183) {
     $$lcssa68 = $127;
     label = 19;
     break L4;
    } else $184 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$$0$ph >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    $$lcssa69 = $127;
    $$lcssa72 = $184;
    label = 22;
    break;
   }
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$0$ph >> 2] | 0) | 0) {
    $$lcssa70 = $127;
    $$lcssa73 = $184;
    label = 32;
    break;
   }
   $126 = $127 + 12 | 0;
   $128 = HEAP32[$126 >> 2] | 0;
   $129 = $127 + 16 | 0;
   if (($128 | 0) == (HEAP32[$129 >> 2] | 0)) $$0$i$i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($127) | 0; else $$0$i$i16 = HEAP32[$128 >> 2] | 0;
   $140 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $$0$i$i16) | 0;
   if (($140 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, HEAP32[$$0$ph >> 2] | 0) | 0)) {
    $$lcssa71 = $127;
    $$lcssa75 = $126;
    $$lcssa76 = $129;
    label = 62;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $9 = 4;
  }
  if ((label | 0) == 22) {
   label = 0;
   $46 = $$0$ph + 4 | 0;
   if (($46 | 0) == ($__fmte | 0)) {
    $$lcssa69$lcssa = $$lcssa69;
    label = 23;
    break;
   }
   $52 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$46 >> 2] | 0, 0) | 0;
   if ($52 << 24 >> 24 == 48 | $52 << 24 >> 24 == 69) {
    $53 = $$0$ph + 8 | 0;
    if (($53 | 0) == ($__fmte | 0)) {
     $$lcssa69$lcssa77 = $$lcssa69;
     label = 26;
     break;
    }
    $63 = $$lcssa69;
    $66 = $46;
    $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$53 >> 2] | 0, 0) | 0;
    $__opt$0 = $52;
   } else {
    $63 = $$lcssa69;
    $66 = $$0$ph;
    $__cmd$0 = $52;
    $__opt$0 = 0;
   }
   $62 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$2 >> 2] = $63;
   HEAP32[$3 >> 2] = $$lcssa72;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   FUNCTION_TABLE_viiiiiiiii[$62 & 3]($1, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0);
   HEAP32[$__b >> 2] = HEAP32[$1 >> 2];
   $$0$ph$be = $66 + 8 | 0;
  } else if ((label | 0) == 32) {
   label = 0;
   $$0$pn = $$0$ph;
   while (1) {
    $$2 = $$0$pn + 4 | 0;
    if (($$2 | 0) == ($__fmte | 0)) {
     $$2$lcssa = $__fmte;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$2 >> 2] | 0) | 0) $$0$pn = $$2; else {
     $$2$lcssa = $$2;
     break;
    }
   }
   $$pre$i$i$i6 = $$lcssa70;
   $$pre$i3$i$i12 = $$lcssa73;
   $90 = $$lcssa73;
   L42 : while (1) {
    if (!$$pre$i$i$i6) {
     $103 = 1;
     $105 = 0;
    } else {
     $80 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
     if (($80 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) $$0$i$i$i$i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i6) | 0; else $$0$i$i$i$i4 = HEAP32[$80 >> 2] | 0;
     if (($$0$i$i$i$i4 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $103 = 1;
      $105 = 0;
     } else {
      $103 = 0;
      $105 = $$pre$i$i$i6;
     }
    }
    do if (!$90) {
     $$pre$i3$i$i1244 = $$pre$i3$i$i12;
     label = 48;
    } else {
     $93 = HEAP32[$90 + 12 >> 2] | 0;
     if (($93 | 0) == (HEAP32[$90 + 16 >> 2] | 0)) $$0$i$i1$i$i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$90 >> 2] | 0) + 36 >> 2] & 127]($90) | 0; else $$0$i$i1$i$i10 = HEAP32[$93 >> 2] | 0;
     if (($$0$i$i1$i$i10 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i3$i$i1244 = 0;
      label = 48;
      break;
     } else if ($103 ^ ($$pre$i3$i$i12 | 0) == 0) {
      $$pre$i3$i$i1243 = $$pre$i3$i$i12;
      $185 = $$pre$i3$i$i12;
      break;
     } else break L42;
    } while (0);
    if ((label | 0) == 48) {
     label = 0;
     if ($103) break; else {
      $$pre$i3$i$i1243 = $$pre$i3$i$i1244;
      $185 = 0;
     }
    }
    $104 = $105 + 12 | 0;
    $106 = HEAP32[$104 >> 2] | 0;
    $107 = $105 + 16 | 0;
    if (($106 | 0) == (HEAP32[$107 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$105 >> 2] | 0) + 36 >> 2] & 127]($105) | 0; else $$0$i$i = HEAP32[$106 >> 2] | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) break;
    $119 = HEAP32[$104 >> 2] | 0;
    if (($119 | 0) == (HEAP32[$107 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$105 >> 2] | 0) + 40 >> 2] & 127]($105) | 0; else HEAP32[$104 >> 2] = $119 + 4;
    $$pre$i$i$i6 = $105;
    $$pre$i3$i$i12 = $$pre$i3$i$i1243;
    $90 = $185;
   }
   $$0$ph$be = $$2$lcssa;
  } else if ((label | 0) == 62) {
   label = 0;
   $147 = HEAP32[$$lcssa75 >> 2] | 0;
   if (($147 | 0) == (HEAP32[$$lcssa76 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa71 >> 2] | 0) + 40 >> 2] & 127]($$lcssa71) | 0; else HEAP32[$$lcssa75 >> 2] = $147 + 4;
   $$0$ph$be = $$0$ph + 4 | 0;
  }
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$__err >> 2] | 0;
 }
 if ((label | 0) == 19) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i21 = $$lcssa68;
 } else if ((label | 0) == 23) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa;
 } else if ((label | 0) == 26) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa77;
 } else if ((label | 0) == 67) $$pre$i$i$i21 = $$lcssa;
 if (!$$pre$i$i$i21) {
  $182 = 0;
  $186 = 1;
 } else {
  $157 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
  if (($157 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$157 >> 2] | 0;
  if (($$0$i$i$i$i19 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $182 = 0;
   $186 = 1;
  } else {
   $182 = $$pre$i$i$i21;
   $186 = 0;
  }
 }
 $167 = HEAP32[$__e >> 2] | 0;
 do if (!$167) label = 80; else {
  $170 = HEAP32[$167 + 12 >> 2] | 0;
  if (($170 | 0) == (HEAP32[$167 + 16 >> 2] | 0)) $$0$i$i1$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$167 >> 2] | 0) + 36 >> 2] & 127]($167) | 0; else $$0$i$i1$i$i25 = HEAP32[$170 >> 2] | 0;
  if (($$0$i$i1$i$i25 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 80;
   break;
  } else if ($186) break; else {
   label = 82;
   break;
  }
 } while (0);
 if ((label | 0) == 80) if ($186) label = 82;
 if ((label | 0) == 82) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 HEAP32[$agg$result >> 2] = $182;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $106 = 0, $108 = 0, $122 = 0, $124 = 0, $14 = 0, $146 = 0, $148 = 0, $162 = 0, $164 = 0, $2 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $41 = 0, $43 = 0, $5 = 0, $6 = 0, $65 = 0, $67 = 0, $7 = 0, $8 = 0, $81 = 0, $83 = 0, $9 = 0, $91 = 0, $95 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i14 = 0, $__i$0$i$i$i19 = 0, $__i$0$i$i$i24 = 0, $__i$0$i$i$i29 = 0, $__i$0$i$i$i34 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i9 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47408) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $25 = __THREW__;
  __THREW__ = 0;
  if ($25 & 1) {
   $27 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($27);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  $__i$0$i$i$i = 0;
  while (1) {
   if (($__i$0$i$i$i | 0) == 3) break;
   HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
   $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  $__i$0$i$i$i4 = 0;
  while (1) {
   if (($__i$0$i$i$i4 | 0) == 3) break;
   HEAP32[$2 + ($__i$0$i$i$i4 << 2) >> 2] = 0;
   $__i$0$i$i$i4 = $__i$0$i$i$i4 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $65 = __THREW__;
  __THREW__ = 0;
  if ($65 & 1) {
   $67 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($67);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  $__i$0$i$i$i9 = 0;
  while (1) {
   if (($__i$0$i$i$i9 | 0) == 3) break;
   HEAP32[$3 + ($__i$0$i$i$i9 << 2) >> 2] = 0;
   $__i$0$i$i$i9 = $__i$0$i$i$i9 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $81 = __THREW__;
  __THREW__ = 0;
  if ($81 & 1) {
   $83 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($83);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i14 = 0;
  while (1) {
   if (($__i$0$i$i$i14 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i14 << 2) >> 2] = 0;
   $__i$0$i$i$i14 = $__i$0$i$i$i14 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
 } else {
  $91 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47344) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 44 >> 2] & 127]($5, $91);
  $95 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $95;
  HEAP8[$__pat + 1 >> 0] = $95 >> 8;
  HEAP8[$__pat + 2 >> 0] = $95 >> 16;
  HEAP8[$__pat + 3 >> 0] = $95 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 32 >> 2] & 127]($6, $91);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $106 = __THREW__;
  __THREW__ = 0;
  if ($106 & 1) {
   $108 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($108);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$6 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  $__i$0$i$i$i19 = 0;
  while (1) {
   if (($__i$0$i$i$i19 | 0) == 3) break;
   HEAP32[$6 + ($__i$0$i$i$i19 << 2) >> 2] = 0;
   $__i$0$i$i$i19 = $__i$0$i$i$i19 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 28 >> 2] & 127]($7, $91);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) {
   $124 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($124);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  $__i$0$i$i$i24 = 0;
  while (1) {
   if (($__i$0$i$i$i24 | 0) == 3) break;
   HEAP32[$7 + ($__i$0$i$i$i24 << 2) >> 2] = 0;
   $__i$0$i$i$i24 = $__i$0$i$i$i24 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 12 >> 2] & 127]($91) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 16 >> 2] & 127]($91) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 20 >> 2] & 127]($8, $91);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $146 = __THREW__;
  __THREW__ = 0;
  if ($146 & 1) {
   $148 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($148);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$8 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  $__i$0$i$i$i29 = 0;
  while (1) {
   if (($__i$0$i$i$i29 | 0) == 3) break;
   HEAP32[$8 + ($__i$0$i$i$i29 << 2) >> 2] = 0;
   $__i$0$i$i$i29 = $__i$0$i$i$i29 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 24 >> 2] & 127]($9, $91);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $162 = __THREW__;
  __THREW__ = 0;
  if ($162 & 1) {
   $164 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($164);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$9 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  $__i$0$i$i$i34 = 0;
  while (1) {
   if (($__i$0$i$i$i34 | 0) == 3) break;
   HEAP32[$9 + ($__i$0$i$i$i34 << 2) >> 2] = 0;
   $__i$0$i$i$i34 = $__i$0$i$i$i34 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i25 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa65$lcssa = 0, $$lcssa65$lcssa74 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa71 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$pre = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i7 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i2038 = 0, $$pre$i2$i$i2039 = 0, $0 = 0, $1 = 0, $10 = 0, $108 = 0, $109 = 0, $110 = 0, $12 = 0, $126 = 0, $133 = 0, $134 = 0, $135 = 0, $148 = 0, $155 = 0, $174 = 0, $175 = 0, $176 = 0, $190 = 0, $191 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $38 = 0, $4 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $63 = 0, $64 = 0, $67 = 0, $68 = 0, $70 = 0, $76 = 0, $8 = 0, $9 = 0, $93 = 0, $94 = 0, $95 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 47968) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($38 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 HEAP32[$__err >> 2] = 0;
 $8 = $4 + 8 | 0;
 $$0$ph = $__fmtb;
 $$pre = 0;
 L4 : while (1) {
  $9 = ($$0$ph | 0) != ($__fmte | 0);
  $10 = $$pre;
  while (1) {
   $12 = HEAP32[$__b >> 2] | 0;
   if (!($9 & ($10 | 0) == 0)) {
    $$lcssa = $12;
    label = 63;
    break L4;
   }
   if (!$12) $24 = 0; else if ((HEAP32[$12 + 12 >> 2] | 0) == (HEAP32[$12 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $24 = 0;
   } else $24 = $12; else $24 = $12;
   $25 = ($24 | 0) == 0;
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 14; else {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 14;
     break;
    }
    if ($25) $190 = $26; else {
     $$lcssa64 = $24;
     label = 15;
     break L4;
    }
   } while (0);
   if ((label | 0) == 14) {
    label = 0;
    if ($25) {
     $$lcssa64 = $24;
     label = 15;
     break L4;
    } else $190 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$$0$ph >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    $$lcssa65 = $24;
    $$lcssa68 = $190;
    label = 18;
    break;
   }
   $68 = HEAP8[$$0$ph >> 0] | 0;
   if ($68 << 24 >> 24 > -1) {
    $70 = HEAP32[$8 >> 2] | 0;
    if (HEAP16[$70 + ($68 << 24 >> 24 << 1) >> 1] & 8192) {
     $$lcssa66 = $24;
     $$lcssa69 = $190;
     $$lcssa71 = $70;
     label = 29;
     break;
    }
   }
   $133 = $24 + 12 | 0;
   $134 = HEAP32[$133 >> 2] | 0;
   $135 = $24 + 16 | 0;
   if (($134 | 0) == (HEAP32[$135 >> 2] | 0)) $$0$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i25 = HEAPU8[$134 >> 0] | 0;
   $148 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $$0$i$i25 & 255) | 0;
   if ($148 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, HEAP8[$$0$ph >> 0] | 0) | 0) << 24 >> 24) {
    $$lcssa67 = $24;
    $$lcssa72 = $133;
    $$lcssa73 = $135;
    label = 58;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $10 = 4;
  }
  if ((label | 0) == 18) {
   label = 0;
   $47 = $$0$ph + 1 | 0;
   if (($47 | 0) == ($__fmte | 0)) {
    $$lcssa65$lcssa = $$lcssa65;
    label = 19;
    break;
   }
   $53 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$47 >> 0] | 0, 0) | 0;
   if ($53 << 24 >> 24 == 48 | $53 << 24 >> 24 == 69) {
    $54 = $$0$ph + 2 | 0;
    if (($54 | 0) == ($__fmte | 0)) {
     $$lcssa65$lcssa74 = $$lcssa65;
     label = 22;
     break;
    }
    $64 = $$lcssa65;
    $67 = $47;
    $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$54 >> 0] | 0, 0) | 0;
    $__opt$0 = $53;
   } else {
    $64 = $$lcssa65;
    $67 = $$0$ph;
    $__cmd$0 = $53;
    $__opt$0 = 0;
   }
   $63 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$2 >> 2] = $64;
   HEAP32[$3 >> 2] = $$lcssa68;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   FUNCTION_TABLE_viiiiiiiii[$63 & 3]($1, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0);
   HEAP32[$__b >> 2] = HEAP32[$1 >> 2];
   $$0$ph$be = $67 + 2 | 0;
  } else if ((label | 0) == 29) {
   label = 0;
   $$0$pn = $$0$ph;
   while (1) {
    $$2 = $$0$pn + 1 | 0;
    if (($$2 | 0) == ($__fmte | 0)) {
     $$2$lcssa = $__fmte;
     break;
    }
    $76 = HEAP8[$$2 >> 0] | 0;
    if ($76 << 24 >> 24 <= -1) {
     $$2$lcssa = $$2;
     break;
    }
    if (!(HEAP16[$$lcssa71 + ($76 << 24 >> 24 << 1) >> 1] & 8192)) {
     $$2$lcssa = $$2;
     break;
    } else $$0$pn = $$2;
   }
   $$pre$i$i$i16 = $$lcssa66;
   $$pre$i2$i$i20 = $$lcssa69;
   $95 = $$lcssa69;
   L45 : while (1) {
    if (!$$pre$i$i$i16) $93 = 0; else if ((HEAP32[$$pre$i$i$i16 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i16 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i16 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i16) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $93 = 0;
    } else $93 = $$pre$i$i$i16; else $93 = $$pre$i$i$i16;
    $94 = ($93 | 0) == 0;
    do if (!$95) {
     $$pre$i2$i$i2039 = $$pre$i2$i$i20;
     label = 43;
    } else {
     if ((HEAP32[$95 + 12 >> 2] | 0) != (HEAP32[$95 + 16 >> 2] | 0)) if ($94) {
      $$pre$i2$i$i2038 = $$pre$i2$i$i20;
      $191 = $95;
      break;
     } else break L45;
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 127]($95) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i2$i$i2039 = 0;
      label = 43;
      break;
     } else if ($94 ^ ($$pre$i2$i$i20 | 0) == 0) {
      $$pre$i2$i$i2038 = $$pre$i2$i$i20;
      $191 = $$pre$i2$i$i20;
      break;
     } else break L45;
    } while (0);
    if ((label | 0) == 43) {
     label = 0;
     if ($94) break; else {
      $$pre$i2$i$i2038 = $$pre$i2$i$i2039;
      $191 = 0;
     }
    }
    $108 = $93 + 12 | 0;
    $109 = HEAP32[$108 >> 2] | 0;
    $110 = $93 + 16 | 0;
    if (($109 | 0) == (HEAP32[$110 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0; else $$0$i$i = HEAPU8[$109 >> 0] | 0;
    if (($$0$i$i & 255) << 24 >> 24 <= -1) break;
    if (!(HEAP16[(HEAP32[$8 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) break;
    $126 = HEAP32[$108 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$110 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 40 >> 2] & 127]($93) | 0; else HEAP32[$108 >> 2] = $126 + 1;
    $$pre$i$i$i16 = $93;
    $$pre$i2$i$i20 = $$pre$i2$i$i2038;
    $95 = $191;
   }
   $$0$ph$be = $$2$lcssa;
  } else if ((label | 0) == 58) {
   label = 0;
   $155 = HEAP32[$$lcssa72 >> 2] | 0;
   if (($155 | 0) == (HEAP32[$$lcssa73 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa67 >> 2] | 0) + 40 >> 2] & 127]($$lcssa67) | 0; else HEAP32[$$lcssa72 >> 2] = $155 + 1;
   $$0$ph$be = $$0$ph + 1 | 0;
  }
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$__err >> 2] | 0;
 }
 if ((label | 0) == 15) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i7 = $$lcssa64;
 } else if ((label | 0) == 19) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa;
 } else if ((label | 0) == 22) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa74;
 } else if ((label | 0) == 63) $$pre$i$i$i7 = $$lcssa;
 if (!$$pre$i$i$i7) $174 = 0; else if ((HEAP32[$$pre$i$i$i7 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i7 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i7 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i7) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $174 = 0;
 } else $174 = $$pre$i$i$i7; else $174 = $$pre$i$i$i7;
 $175 = ($174 | 0) == 0;
 $176 = HEAP32[$__e >> 2] | 0;
 do if (!$176) label = 73; else {
  if ((HEAP32[$176 + 12 >> 2] | 0) == (HEAP32[$176 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$176 >> 2] | 0) + 36 >> 2] & 127]($176) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 73;
   break;
  }
  if (!$175) label = 74;
 } while (0);
 if ((label | 0) == 73) if ($175) label = 74;
 if ((label | 0) == 74) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 HEAP32[$agg$result >> 2] = $174;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0.0, $131 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $15;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i6) {
    $165 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $165 = 1;
     $88 = 0;
    } else {
     $165 = 0;
     $88 = $$pre$i$i$i6;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($165) {
     $166 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($165) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $166 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi34Z2D; else $81 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $166;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i6 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($118 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $122 = HEAP32[$__g_end >> 2] | 0;
   if (($122 - $__g | 0) < 160) {
    $127 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $122 + 4;
    HEAP32[$122 >> 2] = $127;
   }
  }
  __THREW__ = 0;
  $130 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 40; else {
   HEAPF32[$__v >> 2] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $164 = 0;
    $167 = 1;
   } else {
    $136 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($136 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $143 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $144 = __THREW__;
     __THREW__ = 0;
     if ($144 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $143;
    } else $$0$i$i$i$i = HEAP32[$136 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $164 = 0;
     $167 = 1;
    } else {
     $164 = $$lcssa;
     $167 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $150 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $157;
    } else $$0$i$i1$i$i = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($167) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($167) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $164;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0.0, $131 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $15;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i6) {
    $165 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $165 = 1;
     $88 = 0;
    } else {
     $165 = 0;
     $88 = $$pre$i$i$i6;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($165) {
     $166 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($165) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $166 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi34Z2D; else $81 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $166;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i6 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($118 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $122 = HEAP32[$__g_end >> 2] | 0;
   if (($122 - $__g | 0) < 160) {
    $127 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $122 + 4;
    HEAP32[$122 >> 2] = $127;
   }
  }
  __THREW__ = 0;
  $130 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 40; else {
   HEAPF64[$__v >> 3] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $164 = 0;
    $167 = 1;
   } else {
    $136 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($136 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $143 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $144 = __THREW__;
     __THREW__ = 0;
     if ($144 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $143;
    } else $$0$i$i$i$i = HEAP32[$136 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $164 = 0;
     $167 = 1;
    } else {
     $164 = $$lcssa;
     $167 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $150 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $157;
    } else $$0$i$i1$i$i = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($167) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($167) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $164;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0.0, $131 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $15;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i6) {
    $165 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $165 = 1;
     $88 = 0;
    } else {
     $165 = 0;
     $88 = $$pre$i$i$i6;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($165) {
     $166 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($165) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $166 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi34Z2D; else $81 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $166;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i6 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($118 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $122 = HEAP32[$__g_end >> 2] | 0;
   if (($122 - $__g | 0) < 160) {
    $127 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $122 + 4;
    HEAP32[$122 >> 2] = $127;
   }
  }
  __THREW__ = 0;
  $130 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 40; else {
   HEAPF64[$__v >> 3] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $164 = 0;
    $167 = 1;
   } else {
    $136 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($136 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $143 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $144 = __THREW__;
     __THREW__ = 0;
     if ($144 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $143;
    } else $$0$i$i$i$i = HEAP32[$136 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $164 = 0;
     $167 = 1;
    } else {
     $164 = $$lcssa;
     $167 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $150 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $157;
    } else $$0$i$i1$i$i = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($167) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($167) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $164;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $102 = 0, $104 = 0, $117 = 0, $119 = 0, $14 = 0, $141 = 0, $143 = 0, $156 = 0, $158 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $39 = 0, $4 = 0, $41 = 0, $5 = 0, $6 = 0, $63 = 0, $65 = 0, $7 = 0, $78 = 0, $8 = 0, $80 = 0, $88 = 0, $9 = 0, $92 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i7 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47536) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__nsn | 0, 0);
  $24 = __THREW__;
  __THREW__ = 0;
  if ($24 & 1) {
   $26 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($26);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  $__i$0$i$i$i = 0;
  while (1) {
   if (($__i$0$i$i$i | 0) == 3) break;
   HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
   $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__psn | 0, 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if ($39 & 1) {
   $41 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($41);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  $__i$0$i$i$i4 = 0;
  while (1) {
   if (($__i$0$i$i$i4 | 0) == 3) break;
   HEAP32[$2 + ($__i$0$i$i$i4 << 2) >> 2] = 0;
   $__i$0$i$i$i4 = $__i$0$i$i$i4 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $63 = __THREW__;
  __THREW__ = 0;
  if ($63 & 1) {
   $65 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($65);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  $__i$0$i$i$i7 = 0;
  while (1) {
   if (($__i$0$i$i$i7 | 0) == 3) break;
   HEAP32[$3 + ($__i$0$i$i$i7 << 2) >> 2] = 0;
   $__i$0$i$i$i7 = $__i$0$i$i$i7 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $78 = __THREW__;
  __THREW__ = 0;
  if ($78 & 1) {
   $80 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($80);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i11 = 0;
  while (1) {
   if (($__i$0$i$i$i11 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i11 << 2) >> 2] = 0;
   $__i$0$i$i$i11 = $__i$0$i$i$i11 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
 } else {
  $88 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47472) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 44 >> 2] & 127]($5, $88);
  $92 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $92;
  HEAP8[$__pat + 1 >> 0] = $92 >> 8;
  HEAP8[$__pat + 2 >> 0] = $92 >> 16;
  HEAP8[$__pat + 3 >> 0] = $92 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 32 >> 2] & 127]($6, $88);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__nsn | 0, 0);
  $102 = __THREW__;
  __THREW__ = 0;
  if ($102 & 1) {
   $104 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($104);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$6 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  $__i$0$i$i$i16 = 0;
  while (1) {
   if (($__i$0$i$i$i16 | 0) == 3) break;
   HEAP32[$6 + ($__i$0$i$i$i16 << 2) >> 2] = 0;
   $__i$0$i$i$i16 = $__i$0$i$i$i16 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 127]($7, $88);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__psn | 0, 0);
  $117 = __THREW__;
  __THREW__ = 0;
  if ($117 & 1) {
   $119 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($119);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  $__i$0$i$i$i21 = 0;
  while (1) {
   if (($__i$0$i$i$i21 | 0) == 3) break;
   HEAP32[$7 + ($__i$0$i$i$i21 << 2) >> 2] = 0;
   $__i$0$i$i$i21 = $__i$0$i$i$i21 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 12 >> 2] & 127]($88) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 16 >> 2] & 127]($88) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 20 >> 2] & 127]($8, $88);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $141 = __THREW__;
  __THREW__ = 0;
  if ($141 & 1) {
   $143 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($143);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$8 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  $__i$0$i$i$i26 = 0;
  while (1) {
   if (($__i$0$i$i$i26 | 0) == 3) break;
   HEAP32[$8 + ($__i$0$i$i$i26 << 2) >> 2] = 0;
   $__i$0$i$i$i26 = $__i$0$i$i$i26 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 24 >> 2] & 127]($9, $88);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $156 = __THREW__;
  __THREW__ = 0;
  if ($156 & 1) {
   $158 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($158);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$9 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  $__i$0$i$i$i31 = 0;
  while (1) {
   if (($__i$0$i$i$i31 | 0) == 3) break;
   HEAP32[$9 + ($__i$0$i$i$i31 << 2) >> 2] = 0;
   $__i$0$i$i$i31 = $__i$0$i$i$i31 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 127]($88) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $130 = 0, $132 = 0, $139 = 0, $14 = 0, $146 = 0, $147 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $168 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $168 = 1;
     $88 = 0;
    } else {
     $168 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($168) {
     $169 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($168) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $169 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $169;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(21, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = tempRet0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 40; else {
   $132 = $__v;
   HEAP32[$132 >> 2] = $128;
   HEAP32[$132 + 4 >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $167 = 0;
    $170 = 1;
   } else {
    $139 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($139 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $146 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $147 = __THREW__;
     __THREW__ = 0;
     if ($147 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $146;
    } else $$0$i$i$i$i = HEAP32[$139 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $167 = 0;
     $170 = 1;
    } else {
     $167 = $$lcssa;
     $170 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $153 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($153 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $160 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $161 = __THREW__;
     __THREW__ = 0;
     if ($161 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $160;
    } else $$0$i$i1$i$i = HEAP32[$153 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($170) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($170) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $167;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $130 = 0, $132 = 0, $139 = 0, $14 = 0, $146 = 0, $147 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $168 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $168 = 1;
     $88 = 0;
    } else {
     $168 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($168) {
     $169 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($168) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $169 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $169;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = tempRet0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 40; else {
   $132 = $__v;
   HEAP32[$132 >> 2] = $128;
   HEAP32[$132 + 4 >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $167 = 0;
    $170 = 1;
   } else {
    $139 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($139 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $146 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $147 = __THREW__;
     __THREW__ = 0;
     if ($147 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $146;
    } else $$0$i$i$i$i = HEAP32[$139 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $167 = 0;
     $170 = 1;
    } else {
     $167 = $$lcssa;
     $170 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $153 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($153 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $160 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $161 = __THREW__;
     __THREW__ = 0;
     if ($161 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $160;
    } else $$0$i$i1$i$i = HEAP32[$153 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($170) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($170) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $167;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP16[$__v >> 1] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP32[$__v >> 2] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP32[$__v >> 2] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP32[$__v >> 2] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj($agg$result, $this, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$020 = 0, $$0319 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $60 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $77 = 0, $78 = 0, $82 = 0, $85 = 0, $9 = 0, $91 = 0, $94 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $exprs = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $0 = sp + 216 | 0;
 $exprs = sp + 204 | 0;
 $1 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $2 = sp;
 HEAP32[$exprs >> 2] = 0;
 $3 = $exprs + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$exprs + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiii(4, $1 | 0, $this | 0, $exprs | 0, $element_kind | 0, $obj_level | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($5 & 1) {
  $17 = ___cxa_find_matching_catch() | 0;
  $$3 = $17;
  $$36 = tempRet0;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 16 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 4 | 0);
  HEAP32[$agg$result >> 2] = 0;
  $9 = $agg$result + 4 | 0;
  HEAP32[$9 >> 2] = 0;
  $10 = $agg$result + 8 | 0;
  HEAP32[$10 >> 2] = 0;
  $11 = HEAP32[$exprs >> 2] | 0;
  $12 = HEAP32[$3 >> 2] | 0;
  L3 : do if (($11 | 0) == ($12 | 0)) $82 = $11; else {
   $15 = $11;
   while (1) {
    $14 = HEAP32[$15 >> 2] | 0;
    if (!$14) {
     $$lcssa = 0;
     label = 7;
     break;
    }
    $19 = ___dynamic_cast($14, 33800, 34792, 0) | 0;
    if (!$19) {
     $$lcssa = $14;
     label = 7;
     break;
    }
    $70 = $19 + 48 | 0;
    $71 = HEAP32[$9 >> 2] | 0;
    if (($71 | 0) == (HEAP32[$10 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_vii(55, $agg$result | 0, $70 | 0);
     $78 = __THREW__;
     __THREW__ = 0;
     if ($78 & 1) {
      label = 22;
      break;
     }
    } else {
     if (!$71) $77 = 0; else {
      HEAP32[$71 >> 2] = HEAP32[$70 >> 2];
      $77 = HEAP32[$9 >> 2] | 0;
     }
     HEAP32[$9 >> 2] = $77 + 4;
    }
    $15 = $15 + 4 | 0;
    if (($15 | 0) == ($12 | 0)) {
     label = 35;
     break;
    }
   }
   L16 : do if ((label | 0) == 7) {
    $21 = $ss + 64 | 0;
    $22 = $ss + 8 | 0;
    HEAP32[$22 >> 2] = 592;
    $23 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 740;
    HEAP32[$21 >> 2] = 760;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $23 | 0);
    $26 = __THREW__;
    __THREW__ = 0;
    if ($26 & 1) {
     $38 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $38;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 572;
     HEAP32[$21 >> 2] = 612;
     HEAP32[$22 >> 2] = 592;
     __THREW__ = 0;
     invoke_vi(177, $23 | 0);
     $30 = __THREW__;
     __THREW__ = 0;
     do if ($30 & 1) {
      $40 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index2Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $40;
     } else {
      HEAP32[$23 >> 2] = 904;
      $32 = $ss + 44 | 0;
      HEAP32[$32 + 0 >> 2] = 0;
      HEAP32[$32 + 4 >> 2] = 0;
      HEAP32[$32 + 8 >> 2] = 0;
      HEAP32[$32 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $23 | 0, $0 | 0);
      $34 = __THREW__;
      __THREW__ = 0;
      if ($34 & 1) {
       $36 = ___cxa_find_matching_catch() | 0;
       $37 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($23);
       $eh$lpad$body$i$index2Z2D = $37;
       $eh$lpad$body$i$indexZ2D = $36;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      __THREW__ = 0;
      $42 = invoke_iiii(25, $22 | 0, 35160, 19) | 0;
      $43 = __THREW__;
      __THREW__ = 0;
      L27 : do if ($43 & 1) label = 24; else {
       __THREW__ = 0;
       invoke_iii(26, $42 | 0, $$lcssa | 0) | 0;
       $45 = __THREW__;
       __THREW__ = 0;
       if ($45 & 1) label = 24; else {
        $47 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $2 | 0, $23 | 0);
        $48 = __THREW__;
        __THREW__ = 0;
        do if ($48 & 1) {
         $66 = ___cxa_find_matching_catch() | 0;
         $$020 = $66;
         $$0319 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $47 | 0, $$lcssa + 4 | 0);
         $51 = __THREW__;
         __THREW__ = 0;
         if ($51 & 1) $$01 = 1; else {
          $53 = $47 + 12 | 0;
          $54 = $$lcssa + 16 | 0;
          HEAP32[$53 + 0 >> 2] = HEAP32[$54 + 0 >> 2];
          HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
          HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
          HEAP32[$53 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $47 + 28 | 0, $2 | 0);
          $56 = __THREW__;
          __THREW__ = 0;
          if ($56 & 1) {
           $58 = ___cxa_find_matching_catch() | 0;
           $59 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
           $$020 = $58;
           $$0319 = $59;
           break;
          }
          __THREW__ = 0;
          invoke_viii(4, $47 | 0, 48, 176);
          $60 = __THREW__;
          __THREW__ = 0;
          if ($60 & 1) $$01 = 0; else {}
         }
         $68 = ___cxa_find_matching_catch() | 0;
         $69 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         if ($$01) {
          $$020 = $68;
          $$0319 = $69;
         } else {
          $$1 = $68;
          $$14 = $69;
          break L27;
         }
        } while (0);
        ___cxa_free_exception($47 | 0);
        $$1 = $$020;
        $$14 = $$0319;
       }
      } while (0);
      if ((label | 0) == 24) {
       $64 = ___cxa_find_matching_catch() | 0;
       $$1 = $64;
       $$14 = tempRet0;
      }
      HEAP32[$ss >> 2] = 572;
      HEAP32[$21 >> 2] = 612;
      HEAP32[$22 >> 2] = 592;
      HEAP32[$23 >> 2] = 904;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($23);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($21);
      $$2 = $$1;
      $$25 = $$14;
      break L16;
     } while (0);
     $$0$i = $eh$lpad$body$i$index2Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($21);
    $eh$lpad$body$index7Z2D = $$0$i;
    $eh$lpad$body$indexZ2D = $$01$i;
    label = 23;
   } else if ((label | 0) == 22) {
    $62 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index7Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $62;
    label = 23;
   } else if ((label | 0) == 35) {
    $82 = HEAP32[$exprs >> 2] | 0;
    break L3;
   } while (0);
   if ((label | 0) == 23) {
    $$2 = $eh$lpad$body$indexZ2D;
    $$25 = $eh$lpad$body$index7Z2D;
   }
   $91 = HEAP32[$agg$result >> 2] | 0;
   if (!$91) {
    $$3 = $$2;
    $$36 = $$25;
    break L1;
   }
   $94 = HEAP32[$9 >> 2] | 0;
   if (($94 | 0) != ($91 | 0)) HEAP32[$9 >> 2] = $94 + (~(($94 + -4 - $91 | 0) >>> 2) << 2);
   __ZdlPv($91);
   $$3 = $$2;
   $$36 = $$25;
   break L1;
  } while (0);
  if (!$82) {
   STACKTOP = sp;
   return;
  }
  $85 = HEAP32[$3 >> 2] | 0;
  if (($85 | 0) != ($82 | 0)) HEAP32[$3 >> 2] = $85 + (~(($85 + -4 - $82 | 0) >>> 2) << 2);
  __ZdlPv($82);
  STACKTOP = sp;
  return;
 } while (0);
 $100 = HEAP32[$exprs >> 2] | 0;
 if (!$100) ___resumeException($$3 | 0);
 $103 = HEAP32[$3 >> 2] | 0;
 if (($103 | 0) != ($100 | 0)) HEAP32[$3 >> 2] = $103 + (~(($103 + -4 - $100 | 0) >>> 2) << 2);
 __ZdlPv($100);
 ___resumeException($$3 | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $123 = 0, $128 = 0, $13 = 0, $131 = 0.0, $132 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $15;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i5) $33 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i5;
   } else $33 = $$pre$i$i$i5;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $165 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi31Z2D; else $81 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $165;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i5 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($119 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $123 = HEAP32[$__g_end >> 2] | 0;
   if (($123 - $__g | 0) < 160) {
    $128 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $123 + 4;
    HEAP32[$123 >> 2] = $128;
   }
  }
  __THREW__ = 0;
  $131 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $132 = __THREW__;
  __THREW__ = 0;
  if ($132 & 1) label = 39; else {
   HEAPF32[$__v >> 2] = $131;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $148 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $144 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $145 = __THREW__;
    __THREW__ = 0;
    if ($145 & 1) {
     label = 39;
     break;
    }
    if (($144 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $148 = 0;
    } else $148 = $$lcssa;
   } else $148 = $$lcssa;
   $149 = ($148 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $159 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $160 = __THREW__;
     __THREW__ = 0;
     if ($160 & 1) {
      label = 39;
      break L8;
     }
     if (($159 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$149) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($149) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $148;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $123 = 0, $128 = 0, $13 = 0, $131 = 0.0, $132 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $15;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i5) $33 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i5;
   } else $33 = $$pre$i$i$i5;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $165 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi31Z2D; else $81 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $165;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i5 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($119 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $123 = HEAP32[$__g_end >> 2] | 0;
   if (($123 - $__g | 0) < 160) {
    $128 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $123 + 4;
    HEAP32[$123 >> 2] = $128;
   }
  }
  __THREW__ = 0;
  $131 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $132 = __THREW__;
  __THREW__ = 0;
  if ($132 & 1) label = 39; else {
   HEAPF64[$__v >> 3] = $131;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $148 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $144 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $145 = __THREW__;
    __THREW__ = 0;
    if ($145 & 1) {
     label = 39;
     break;
    }
    if (($144 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $148 = 0;
    } else $148 = $$lcssa;
   } else $148 = $$lcssa;
   $149 = ($148 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $159 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $160 = __THREW__;
     __THREW__ = 0;
     if ($160 & 1) {
      label = 39;
      break L8;
     }
     if (($159 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$149) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($149) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $148;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $123 = 0, $128 = 0, $13 = 0, $131 = 0.0, $132 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $15;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i5) $33 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i5;
   } else $33 = $$pre$i$i$i5;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $165 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi31Z2D; else $81 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $165;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i5 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($119 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $123 = HEAP32[$__g_end >> 2] | 0;
   if (($123 - $__g | 0) < 160) {
    $128 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $123 + 4;
    HEAP32[$123 >> 2] = $128;
   }
  }
  __THREW__ = 0;
  $131 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $132 = __THREW__;
  __THREW__ = 0;
  if ($132 & 1) label = 39; else {
   HEAPF64[$__v >> 3] = $131;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $148 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $144 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $145 = __THREW__;
    __THREW__ = 0;
    if ($145 & 1) {
     label = 39;
     break;
    }
    if (($144 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $148 = 0;
    } else $148 = $$lcssa;
   } else $148 = $$lcssa;
   $149 = ($148 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $159 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $160 = __THREW__;
     __THREW__ = 0;
     if ($160 & 1) {
      label = 39;
      break L8;
     }
     if (($159 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$149) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($149) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $148;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$$029 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$0$i$i11 = 0, $$0$i$i11$lcssa = 0, $$0$i$i4 = 0, $$01$i$i = 0, $$2 = 0, $$lcssa = 0, $$lcssa39 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $105 = 0, $109 = 0, $11 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $121 = 0, $126 = 0, $13 = 0, $135 = 0, $136 = 0, $137 = 0, $140 = 0, $142 = 0, $144 = 0, $148 = 0, $15 = 0, $150 = 0, $154 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $168 = 0, $17 = 0, $2 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $62 = 0, $64 = 0, $66 = 0, $7 = 0, $74 = 0, $75 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $92 = 0, $94 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$0$lcssa28 = 0, $__d$1 = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $scevgep31 = 0, $umax30 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 1 | 0;
 $1 = $__sn + 8 | 0;
 $2 = $__sn + 4 | 0;
 $4 = ($__flags & 512 | 0) == 0;
 $5 = $__sym + 1 | 0;
 $6 = $__sym + 8 | 0;
 $7 = $__sym + 4 | 0;
 $8 = $__ct + 8 | 0;
 $9 = ($__fd | 0) > 0;
 $10 = $__grp + 1 | 0;
 $11 = $__grp + 8 | 0;
 $12 = $__grp + 4 | 0;
 $13 = $__fd + 1 | 0;
 $15 = ~$__fd;
 $17 = -2 - $__fd - (($15 | 0) > -1 ? $15 : -1) | 0;
 $$0 = $__db;
 $__p$0 = 0;
 while (1) {
  if (($__p$0 | 0) == 4) break;
  switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
  case 3:
   {
    $29 = HEAP8[$__sn >> 0] | 0;
    $31 = ($29 & 1) == 0;
    if ($31) $35 = ($29 & 255) >>> 1; else $35 = HEAP32[$2 >> 2] | 0;
    if (!$35) $$2 = $$0; else {
     $38 = HEAP8[($31 ? $0 : HEAP32[$1 >> 2] | 0) >> 0] | 0;
     $39 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $39 + 1;
     HEAP8[$39 >> 0] = $38;
     $$2 = $$0;
    }
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 32) | 0;
    $27 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $26;
    $$2 = $$0;
    break;
   }
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$0;
    break;
   }
  case 2:
   {
    $41 = HEAP8[$__sym >> 0] | 0;
    $43 = ($41 & 1) == 0;
    if ($43) $47 = ($41 & 255) >>> 1; else $47 = HEAP32[$7 >> 2] | 0;
    if ($4 | ($47 | 0) == 0) $$2 = $$0; else {
     if ($43) {
      $54 = $5;
      $55 = ($41 & 255) >>> 1;
     } else {
      $54 = HEAP32[$6 >> 2] | 0;
      $55 = HEAP32[$7 >> 2] | 0;
     }
     $53 = $54 + $55 | 0;
     $$0$i$i11 = HEAP32[$__me >> 2] | 0;
     $57 = $54;
     while (1) {
      if (($57 | 0) == ($53 | 0)) {
       $$0$i$i11$lcssa = $$0$i$i11;
       break;
      }
      HEAP8[$$0$i$i11 >> 0] = HEAP8[$57 >> 0] | 0;
      $$0$i$i11 = $$0$i$i11 + 1 | 0;
      $57 = $57 + 1 | 0;
     }
     HEAP32[$__me >> 2] = $$0$i$i11$lcssa;
     $$2 = $$0;
    }
    break;
   }
  case 4:
   {
    $62 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$0 + 1 | 0 : $$0;
    $$$029 = $$$0;
    $64 = HEAP32[$8 >> 2] | 0;
    $__d$0 = $$$0;
    while (1) {
     if ($__d$0 >>> 0 >= $__de >>> 0) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $66 = HEAP8[$__d$0 >> 0] | 0;
     if ($66 << 24 >> 24 <= -1) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     if (!(HEAP16[$64 + ($66 << 24 >> 24 << 1) >> 1] & 2048)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $__d$0 = $__d$0 + 1 | 0;
    }
    $__d$0$lcssa28 = $__d$0$lcssa;
    if ($9) {
     $74 = ~$$$029;
     $75 = ~$__d$0$lcssa28;
     $77 = -2 - $__d$0$lcssa28 - ($74 >>> 0 > $75 >>> 0 ? $74 : $75) | 0;
     $umax30 = $17 >>> 0 > $77 >>> 0 ? $17 : $77;
     $__d$1 = $__d$0$lcssa;
     $__f$0 = $__fd;
     while (1) {
      $80 = ($__f$0 | 0) > 0;
      if (!($__d$1 >>> 0 > $$$0 >>> 0 & $80)) {
       $$lcssa = $80;
       break;
      }
      $81 = $__d$1 + -1 | 0;
      $82 = HEAP8[$81 >> 0] | 0;
      $83 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $83 + 1;
      HEAP8[$83 >> 0] = $82;
      $__d$1 = $81;
      $__f$0 = $__f$0 + -1 | 0;
     }
     $scevgep31 = $__d$0$lcssa + ($umax30 + 1) | 0;
     if ($$lcssa) $94 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0; else $94 = 0;
     $__f$1 = $13 + $umax30 | 0;
     while (1) {
      $92 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $92 + 1;
      if (($__f$1 | 0) <= 0) {
       $$lcssa39 = $92;
       break;
      }
      HEAP8[$92 >> 0] = $94;
      $__f$1 = $__f$1 + -1 | 0;
     }
     HEAP8[$$lcssa39 >> 0] = $__dp;
     $__d$2 = $scevgep31;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $100 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
     $101 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $101 + 1;
     HEAP8[$101 >> 0] = $100;
    } else {
     $103 = HEAP8[$__grp >> 0] | 0;
     $105 = ($103 & 1) == 0;
     if ($105) $109 = ($103 & 255) >>> 1; else $109 = HEAP32[$12 >> 2] | 0;
     if (!$109) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($105 ? $10 : HEAP32[$11 >> 2] | 0) >> 0] | 0;
     $__d$3 = $__d$2;
     $__gl$0 = $__gl$0$ph;
     $__ig$0 = 0;
     $__ng$0 = 0;
     while (1) {
      if (($__d$3 | 0) == ($$$0 | 0)) break;
      if (($__ng$0 | 0) == ($__gl$0 | 0)) {
       $116 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $116 + 1;
       HEAP8[$116 >> 0] = $__ts;
       $118 = $__ig$0 + 1 | 0;
       $119 = HEAP8[$__grp >> 0] | 0;
       $121 = ($119 & 1) == 0;
       if ($121) $126 = ($119 & 255) >>> 1; else $126 = HEAP32[$12 >> 2] | 0;
       if ($118 >>> 0 < $126 >>> 0) if ((HEAP8[($121 ? $10 : HEAP32[$11 >> 2] | 0) + $118 >> 0] | 0) == 127) {
        $__gl$1 = -1;
        $__ig$1 = $118;
        $__ng$1 = 0;
       } else {
        $__gl$1 = HEAP8[($121 ? $10 : HEAP32[$11 >> 2] | 0) + $118 >> 0] | 0;
        $__ig$1 = $118;
        $__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$0;
        $__ig$1 = $118;
        $__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$0;
       $__ig$1 = $__ig$0;
       $__ng$1 = $__ng$0;
      }
      $135 = $__d$3 + -1 | 0;
      $136 = HEAP8[$135 >> 0] | 0;
      $137 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $137 + 1;
      HEAP8[$137 >> 0] = $136;
      $__d$3 = $135;
      $__gl$0 = $__gl$1;
      $__ig$0 = $__ig$1;
      $__ng$0 = $__ng$1 + 1 | 0;
     }
    }
    $140 = HEAP32[$__me >> 2] | 0;
    if (($62 | 0) == ($140 | 0)) $$2 = $$$0; else {
     $$0$i$i4 = $140;
     $$01$i$i = $62;
     while (1) {
      $142 = $$0$i$i4 + -1 | 0;
      if ($$01$i$i >>> 0 >= $142 >>> 0) break;
      $144 = HEAP8[$$01$i$i >> 0] | 0;
      HEAP8[$$01$i$i >> 0] = HEAP8[$142 >> 0] | 0;
      HEAP8[$142 >> 0] = $144;
      $$0$i$i4 = $142;
      $$01$i$i = $$01$i$i + 1 | 0;
     }
     $$2 = $$$0;
    }
    break;
   }
  default:
   $$2 = $$0;
  }
  $$0 = $$2;
  $__p$0 = $__p$0 + 1 | 0;
 }
 $148 = HEAP8[$__sn >> 0] | 0;
 $150 = ($148 & 1) == 0;
 if ($150) $154 = ($148 & 255) >>> 1; else $154 = HEAP32[$2 >> 2] | 0;
 if ($154 >>> 0 > 1) {
  if ($150) {
   $161 = $0;
   $162 = ($148 & 255) >>> 1;
  } else {
   $161 = HEAP32[$1 >> 2] | 0;
   $162 = HEAP32[$2 >> 2] | 0;
  }
  $160 = $161 + $162 | 0;
  $$0$i$i = HEAP32[$__me >> 2] | 0;
  $$pn = $161;
  while (1) {
   $164 = $$pn + 1 | 0;
   if (($164 | 0) == ($160 | 0)) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   }
   HEAP8[$$0$i$i >> 0] = HEAP8[$164 >> 0] | 0;
   $$0$i$i = $$0$i$i + 1 | 0;
   $$pn = $164;
  }
  HEAP32[$__me >> 2] = $$0$i$i$lcssa;
 }
 $168 = $__flags & 176;
 if (($168 | 0) == 32) HEAP32[$__mi >> 2] = HEAP32[$__me >> 2]; else if (($168 | 0) != 16) HEAP32[$__mi >> 2] = $__mb;
 return;
}

function __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $loc, $file) {
 $this = $this | 0;
 $loc = $loc | 0;
 $file = $file | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$2 = 0, $$24 = 0, $$3 = 0, $$35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $57 = 0, $58 = 0, $6 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $dir = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body9$index7Z2D = 0, $eh$lpad$body9$indexZ2D = 0, $input = 0, $key = 0, $msg = 0, $success = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $dir = sp + 64 | 0;
 $key = sp + 40 | 0;
 $success = sp + 36 | 0;
 $input = sp + 24 | 0;
 $msg = sp + 12 | 0;
 $0 = sp;
 $1 = __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($loc, 47, -1) | 0;
 if (($1 | 0) == -1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($dir, 46680, 0); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($dir, $loc, 0, $1 + 1 | 0, $loc);
 __THREW__ = 0;
 invoke_vii(40, $key | 0, $dir | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 do if ($4 & 1) {
  $17 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $17;
 } else {
  $6 = $key + 12 | 0;
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $file | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch() | 0;
   $10 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
   $eh$lpad$body$index2Z2D = $10;
   $eh$lpad$body$indexZ2D = $9;
   break;
  }
  $11 = $this + 104 | 0;
  __THREW__ = 0;
  $12 = invoke_iii(33, $11 | 0, $key | 0) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 11; else {
   $15 = HEAP32[$12 >> 2] | 0;
   if ($15) {
    $$0 = $15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
    STACKTOP = sp;
    return $$0 | 0;
   }
   HEAP32[$success >> 2] = 0;
   if (!(HEAP8[$dir >> 0] & 1)) $37 = $dir + 1 | 0; else $37 = HEAP32[$dir + 8 >> 2] | 0;
   if (!(HEAP8[$file >> 0] & 1)) $38 = $file + 1 | 0; else $38 = HEAP32[$file + 8 >> 2] | 0;
   __THREW__ = 0;
   $39 = invoke_iiiii(HEAP32[$this + 128 >> 2] | 0, HEAP32[$this + 132 >> 2] | 0, $37 | 0, $38 | 0, $success | 0) | 0;
   $40 = __THREW__;
   __THREW__ = 0;
   if ($40 & 1) label = 11; else {
    $42 = _strlen($39 | 0) | 0;
    __THREW__ = 0;
    invoke_viii(3, $input | 0, $39 | 0, $42 | 0);
    $43 = __THREW__;
    __THREW__ = 0;
    if ($43 & 1) label = 11; else {
     __THREW__ = 0;
     invoke_iii(19, $input | 0, $39 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     do if ($45 & 1) label = 38; else {
      _free($39);
      if (HEAP32[$success >> 2] | 0) {
       __THREW__ = 0;
       $102 = invoke_ii(67, 12) | 0;
       $103 = __THREW__;
       __THREW__ = 0;
       if ($103 & 1) {
        label = 38;
        break;
       }
       __THREW__ = 0;
       invoke_vii(40, $102 | 0, $input | 0);
       $105 = __THREW__;
       __THREW__ = 0;
       if ($105 & 1) {
        $110 = ___cxa_find_matching_catch() | 0;
        $111 = tempRet0;
        __ZdlPv($102);
        $$1 = $110;
        $$13 = $111;
        break;
       }
       __THREW__ = 0;
       $107 = invoke_iii(33, $11 | 0, $key | 0) | 0;
       $108 = __THREW__;
       __THREW__ = 0;
       if ($108 & 1) {
        label = 38;
        break;
       }
       HEAP32[$107 >> 2] = $102;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
       $$0 = $102;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
       STACKTOP = sp;
       return $$0 | 0;
      };
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      $49 = HEAP8[$file >> 0] | 0;
      if (!($49 & 1)) $57 = ($49 & 255) >>> 1; else $57 = HEAP32[$file + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_viiii(13, $0 | 0, 39920, 22, $57 + 22 | 0);
      $58 = __THREW__;
      __THREW__ = 0;
      if (!($58 & 1)) {
       if (!(HEAP8[$file >> 0] & 1)) $66 = $file + 1 | 0; else $66 = HEAP32[$file + 8 >> 2] | 0;
       __THREW__ = 0;
       invoke_iiii(31, $0 | 0, $66 | 0, $57 | 0) | 0;
       $67 = __THREW__;
       __THREW__ = 0;
       if (!($67 & 1)) {
        __THREW__ = 0;
        $71 = invoke_iii(27, $0 | 0, 37552) | 0;
        $72 = __THREW__;
        __THREW__ = 0;
        if ($72 & 1) {
         $96 = ___cxa_find_matching_catch() | 0;
         $97 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
         $$1 = $96;
         $$13 = $97;
         break;
        };
        HEAP32[$msg + 0 >> 2] = HEAP32[$71 + 0 >> 2];
        HEAP32[$msg + 4 >> 2] = HEAP32[$71 + 4 >> 2];
        HEAP32[$msg + 8 >> 2] = HEAP32[$71 + 8 >> 2];
        HEAP32[$71 + 0 >> 2] = 0;
        HEAP32[$71 + 4 >> 2] = 0;
        HEAP32[$71 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
        $74 = HEAP8[$input >> 0] | 0;
        if (!($74 & 1)) {
         $84 = $input + 1 | 0;
         $85 = ($74 & 255) >>> 1;
        } else {
         $84 = HEAP32[$input + 8 >> 2] | 0;
         $85 = HEAP32[$input + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(31, $msg | 0, $84 | 0, $85 | 0) | 0;
        $86 = __THREW__;
        __THREW__ = 0;
        do if ($86 & 1) label = 41; else {
         $88 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_viiii(16, $88 | 0, $this + 72 | 0, $loc | 0, $msg | 0);
         $90 = __THREW__;
         __THREW__ = 0;
         if ($90 & 1) {
          $100 = ___cxa_find_matching_catch() | 0;
          $101 = tempRet0;
          ___cxa_free_exception($88 | 0);
          $$01 = $100;
          $$02 = $101;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $88 | 0, 36640, 183);
         $92 = __THREW__;
         __THREW__ = 0;
         if ($92 & 1) {
          label = 41;
          break;
         }
        } while (0);
        if ((label | 0) == 41) {
         $98 = ___cxa_find_matching_catch() | 0;
         $$01 = $98;
         $$02 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($msg);
        $$1 = $$01;
        $$13 = $$02;
        break;
       }
      }
      $69 = ___cxa_find_matching_catch() | 0;
      $70 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $eh$lpad$body9$index7Z2D = $70;
      $eh$lpad$body9$indexZ2D = $69;
      label = 39;
     } while (0);
     if ((label | 0) == 38) {
      $94 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body9$index7Z2D = tempRet0;
      $eh$lpad$body9$indexZ2D = $94;
      label = 39;
     }
     if ((label | 0) == 39) {
      $$1 = $eh$lpad$body9$indexZ2D;
      $$13 = $eh$lpad$body9$index7Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
     $$2 = $$1;
     $$24 = $$13;
    }
   }
  }
  if ((label | 0) == 11) {
   $19 = ___cxa_find_matching_catch() | 0;
   $$2 = $19;
   $$24 = tempRet0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
  $$3 = $$2;
  $$35 = $$24;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
  ___resumeException($$3 | 0);
 } while (0);
 $$3 = $eh$lpad$body$indexZ2D;
 $$35 = $eh$lpad$body$index2Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
 ___resumeException($$3 | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $131 = 0, $133 = 0, $14 = 0, $147 = 0, $148 = 0, $151 = 0, $152 = 0, $16 = 0, $162 = 0, $163 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $168 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $168;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(21, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = tempRet0;
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 39; else {
   $133 = $__v;
   HEAP32[$133 >> 2] = $129;
   HEAP32[$133 + 4 >> 2] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $151 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $147 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $148 = __THREW__;
    __THREW__ = 0;
    if ($148 & 1) {
     label = 39;
     break;
    }
    if (($147 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $151 = 0;
    } else $151 = $$lcssa;
   } else $151 = $$lcssa;
   $152 = ($151 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $162 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 39;
      break L8;
     }
     if (($162 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$152) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($152) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $151;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $131 = 0, $133 = 0, $14 = 0, $147 = 0, $148 = 0, $151 = 0, $152 = 0, $16 = 0, $162 = 0, $163 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $168 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $168;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = tempRet0;
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 39; else {
   $133 = $__v;
   HEAP32[$133 >> 2] = $129;
   HEAP32[$133 + 4 >> 2] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $151 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $147 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $148 = __THREW__;
    __THREW__ = 0;
    if ($148 & 1) {
     label = 39;
     break;
    }
    if (($147 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $151 = 0;
    } else $151 = $$lcssa;
   } else $151 = $$lcssa;
   $152 = ($151 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $162 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 39;
      break L8;
     }
     if (($162 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$152) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($152) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $151;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($this, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $import_callback_context) {
 $this = $this | 0;
 $alloc = $alloc | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $import_callback_context = $import_callback_context | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$01 = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $$cast$i$i$i$i$i$lcssa = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$lcssa = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$sroa$2 = 0, $0 = 0, $1 = 0, $102 = 0, $105 = 0, $111 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $36 = 0, $37 = 0, $39 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $63 = 0, $67 = 0, $7 = 0, $76 = 0, $81 = 0, $83 = 0, $87 = 0, $92 = 0, $94 = 0, $95 = 0, $96 = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $$sroa$2 = sp;
 HEAP32[$this >> 2] = ~~$gc_min_objects >>> 0;
 HEAPF64[$this + 8 >> 3] = $gc_growth_trigger;
 $5 = $this + 16 | 0;
 HEAP8[$5 >> 0] = 0;
 $6 = $this + 20 | 0;
 HEAP32[$6 + 0 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$6 + 20 >> 2] = 0;
 HEAP32[$6 + 24 >> 2] = 0;
 HEAP32[$6 + 28 >> 2] = 0;
 $7 = $this + 72 | 0;
 HEAP32[$7 >> 2] = 37360;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 80 >> 2] = $max_stack;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP32[$this + 88 >> 2] = 0;
 HEAP32[$this + 92 >> 2] = 0;
 HEAP32[$this + 96 >> 2] = $alloc;
 $14 = $this + 100 | 0;
 __THREW__ = 0;
 invoke_viii(3, $2 | 0, 39976, 13);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $50 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $50;
 } else {
  __THREW__ = 0;
  $17 = invoke_iii(23, $alloc | 0, $2 | 0) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  if ($18 & 1) {
   $52 = ___cxa_find_matching_catch() | 0;
   $53 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $$0 = $53;
   $$01 = $52;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  HEAP32[$14 >> 2] = $17;
  $20 = $this + 104 | 0;
  HEAP32[$this + 108 >> 2] = 0;
  HEAP32[$this + 112 >> 2] = 0;
  $23 = $this + 108 | 0;
  HEAP32[$20 >> 2] = $23;
  $24 = $this + 116 | 0;
  HEAP32[$this + 120 >> 2] = 0;
  HEAP32[$this + 124 >> 2] = 0;
  $27 = $this + 120 | 0;
  HEAP32[$24 >> 2] = $27;
  $28 = HEAP32[$ext_vars >> 2] | 0;
  $29 = $ext_vars + 4 | 0;
  if (($28 | 0) == ($29 | 0)) {
   $46 = $this + 128 | 0;
   HEAP32[$46 >> 2] = $import_callback;
   $47 = $this + 132 | 0;
   HEAP32[$47 >> 2] = $import_callback_context;
   $48 = $this + 56 | 0;
   HEAP32[$48 >> 2] = 0;
   $49 = $this + 60 | 0;
   HEAP32[$49 + 0 >> 2] = HEAP32[$$sroa$2 + 0 >> 2];
   HEAP32[$49 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
   HEAP32[$49 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
   STACKTOP = sp;
   return;
  }
  $32 = $28;
  $36 = $28;
  while (1) {
   HEAP32[$0 >> 2] = $27;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   invoke_viiii(17, $1 | 0, $24 | 0, $$byval_copy | 0, $32 + 16 | 0);
   $33 = __THREW__;
   __THREW__ = 0;
   if ($33 & 1) {
    label = 18;
    break;
   }
   $37 = HEAP32[$36 + 4 >> 2] | 0;
   if (!$37) {
    $$0$i$i$i$i$i = $36;
    while (1) {
     $42 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$42 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $42;
      break;
     } else $$0$i$i$i$i$i = $42;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $37;
    while (1) {
     $39 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$39) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $39;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($29 | 0)) break; else {
    $32 = $$01$i$i$i$i$i;
    $36 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 18) {
   $54 = ___cxa_find_matching_catch() | 0;
   $55 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($24, HEAP32[$27 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($20, HEAP32[$23 >> 2] | 0);
   $$0 = $55;
   $$01 = $54;
   break;
  }
  $46 = $this + 128 | 0;
  HEAP32[$46 >> 2] = $import_callback;
  $47 = $this + 132 | 0;
  HEAP32[$47 >> 2] = $import_callback_context;
  $48 = $this + 56 | 0;
  HEAP32[$48 >> 2] = 0;
  $49 = $this + 60 | 0;
  HEAP32[$49 + 0 >> 2] = HEAP32[$$sroa$2 + 0 >> 2];
  HEAP32[$49 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
  HEAP32[$49 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
  STACKTOP = sp;
  return;
 } while (0);
 HEAP32[$7 >> 2] = 37360;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this + 84 | 0);
 $60 = (HEAP8[$5 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$5 >> 0] = $60;
 $$idx6$val11$i$i = HEAP32[$6 >> 2] | 0;
 $$idx7$i$i = $this + 24 | 0;
 $$idx7$val12$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
 if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) {
  $$lcssa$i$i = 0;
  $111 = $$idx6$val11$i$i;
 } else {
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $$idx7$val18$i$i = $$idx7$val12$i$i;
  $67 = $60;
  $i$013$i$i = 0;
  while (1) {
   $63 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$63 + 4 >> 0] | 0) == $67 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx7$val18$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$63) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx7$val18$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$63 >> 2] | 0) + 4 >> 2] & 255]($63);
     $$idx4$val$i$i = HEAP32[$6 >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $76 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($76 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $81 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($76 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$6 >> 2] | 0;
     $81 = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $81 + -4 | 0;
    HEAP32[$$idx7$i$i >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $83 = $i$1$i$i + 1 | 0;
   $87 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($83 >>> 0 >= $87 >>> 0) {
    $$idx6$val$i$i$lcssa = $$idx6$val$i$i;
    $$lcssa = $87;
    break;
   }
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $$idx7$val18$i$i = $$idx7$val$i$i;
   $67 = HEAP8[$5 >> 0] | 0;
   $i$013$i$i = $83;
  }
  $$lcssa$i$i = $$lcssa;
  $111 = $$idx6$val$i$i$lcssa;
 }
 HEAP32[$this + 48 >> 2] = $$lcssa$i$i;
 HEAP32[$this + 44 >> 2] = $$lcssa$i$i;
 $92 = HEAP32[$this + 32 >> 2] | 0;
 $94 = $92;
 if (!$92) $102 = $111; else {
  $95 = $this + 36 | 0;
  $96 = HEAP32[$95 >> 2] | 0;
  if (($96 | 0) != ($92 | 0)) HEAP32[$95 >> 2] = $96 + (~(($96 + -4 - $94 | 0) >>> 2) << 2);
  __ZdlPv($92);
  $102 = HEAP32[$6 >> 2] | 0;
 }
 if (!$102) ___resumeException($$01 | 0);
 $105 = HEAP32[$$idx7$i$i >> 2] | 0;
 if (($105 | 0) != ($102 | 0)) HEAP32[$$idx7$i$i >> 2] = $105 + (~(($105 + -4 - $102 | 0) >>> 2) << 2);
 __ZdlPv($102);
 ___resumeException($$01 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $106 = 0, $11 = 0, $111 = 0, $113 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $122 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $64 = 0, $65 = 0, $71 = 0, $76 = 0, $79 = 0, $8 = 0, $87 = 0, $90 = 0, $93 = 0, $97 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$agg$result >> 2] = 19;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($1, $v);
 __THREW__ = 0;
 invoke_vii(40, $0 | 0, $1 | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($2 & 1)) {
  __THREW__ = 0;
  $4 = invoke_ii(67, 20) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  do if ($5 & 1) label = 39; else {
   HEAP32[$4 >> 2] = 39864;
   __THREW__ = 0;
   invoke_vii(40, $4 + 8 | 0, $0 | 0);
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $55 = ___cxa_find_matching_catch() | 0;
    $56 = tempRet0;
    __ZdlPv($4);
    $eh$lpad$body$i$index2Z2D = $56;
    $eh$lpad$body$i$indexZ2D = $55;
    break;
   }
   $10 = $this + 20 | 0;
   $11 = $this + 24 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   $13 = $this + 28 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if ($12 >>> 0 < $14 >>> 0) {
    if (!$12) $18 = 0; else {
     HEAP32[$12 >> 2] = $4;
     $18 = HEAP32[$11 >> 2] | 0;
    }
    $17 = $18 + 4 | 0;
    HEAP32[$11 >> 2] = $17;
    $$idx$pre$phi$i$iZZ2D = $10;
    $$idx1$val$i$i = $17;
   } else {
    $this$idx2$val$i$i$i$i = HEAP32[$10 >> 2] | 0;
    $23 = ($12 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
    if ($23 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(179, $10 | 0);
     $25 = __THREW__;
     __THREW__ = 0;
     if ($25 & 1) {
      label = 39;
      break;
     }
     $$idx1$val$i$i$i$i$i$i = HEAP32[$13 >> 2] | 0;
     $28 = HEAP32[$10 >> 2] | 0;
    } else {
     $$idx1$val$i$i$i$i$i$i = $14;
     $28 = $this$idx2$val$i$i$i$i;
    }
    $29 = $28;
    $30 = $$idx1$val$i$i$i$i$i$i - $29 | 0;
    if ($30 >> 2 >>> 0 < 536870911) {
     $36 = $30 >> 1;
     $38 = $36 >>> 0 < $23 >>> 0 ? $23 : $36;
     $40 = (HEAP32[$11 >> 2] | 0) - $29 | 0;
     $41 = $40 >> 2;
     if (!$38) {
      $$0$i8$i$i$i$i = 0;
      $48 = 0;
      $49 = $41;
      $53 = $40;
     } else {
      $$0$i7$i$i$i$i = $38;
      $124 = $41;
      $125 = $40;
      label = 14;
     }
    } else {
     $34 = (HEAP32[$11 >> 2] | 0) - $29 | 0;
     $$0$i7$i$i$i$i = 1073741823;
     $124 = $34 >> 2;
     $125 = $34;
     label = 14;
    }
    if ((label | 0) == 14) {
     __THREW__ = 0;
     $44 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break;
     }
     $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
     $48 = $44;
     $49 = $124;
     $53 = $125;
    }
    $47 = $48 + ($49 << 2) | 0;
    if ($47) HEAP32[$47 >> 2] = $4;
    $52 = $48 + ($49 + 1 << 2) | 0;
    _memcpy($48 | 0, $28 | 0, $53 | 0) | 0;
    HEAP32[$10 >> 2] = $48;
    HEAP32[$11 >> 2] = $52;
    HEAP32[$13 >> 2] = $48 + ($$0$i8$i$i$i$i << 2);
    if (!$28) {
     $$idx$pre$phi$i$iZZ2D = $10;
     $$idx1$val$i$i = $52;
    } else {
     __ZdlPv($28);
     $$idx$pre$phi$i$iZZ2D = $10;
     $$idx1$val$i$i = HEAP32[$11 >> 2] | 0;
    }
   }
   $57 = $this + 16 | 0;
   HEAP8[$4 + 4 >> 0] = HEAP8[$57 >> 0] | 0;
   $64 = $this + 48 | 0;
   HEAP32[$64 >> 2] = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $65 = HEAP32[$64 >> 2] | 0;
   if ($65 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
    $121 = $agg$result + 8 | 0;
    HEAP32[$121 >> 2] = $4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
   $71 = $this + 44 | 0;
   if (!(+($65 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$71 >> 2] | 0) >>> 0))) {
    $121 = $agg$result + 8 | 0;
    HEAP32[$121 >> 2] = $4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
   __THREW__ = 0;
   invoke_vii(63, $this | 0, $4 | 0);
   $76 = __THREW__;
   __THREW__ = 0;
   if ($76 & 1) break L1;
   __THREW__ = 0;
   invoke_vii(64, $this + 72 | 0, $this | 0);
   $79 = __THREW__;
   __THREW__ = 0;
   if ($79 & 1) break L1;
   if (HEAP32[$this + 56 >> 2] & 16) {
    __THREW__ = 0;
    invoke_vii(63, $this | 0, HEAP32[$this + 64 >> 2] | 0);
    $87 = __THREW__;
    __THREW__ = 0;
    if ($87 & 1) break L1;
   }
   $90 = (HEAP8[$57 >> 0] | 0) + 1 << 24 >> 24;
   HEAP8[$57 >> 0] = $90;
   $$idx6$i$i = $this + 20 | 0;
   $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
   $$idx7$val12$i$i = HEAP32[$11 >> 2] | 0;
   if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
    $$idx6$val14$i$i = $$idx6$val11$i$i;
    $$idx7$val18$i$i = $$idx7$val12$i$i;
    $97 = $90;
    $i$013$i$i = 0;
    while (1) {
     $93 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
     if ((HEAP8[$93 + 4 >> 0] | 0) == $97 << 24 >> 24) {
      $$idx6$val$i$i = $$idx6$val14$i$i;
      $$idx7$val$i$i = $$idx7$val18$i$i;
      $i$1$i$i = $i$013$i$i;
     } else {
      if (!$93) {
       $$idx4$val$i$i = $$idx6$val14$i$i;
       $$idx5$val$i$i = $$idx7$val18$i$i;
      } else {
       FUNCTION_TABLE_vi[HEAP32[(HEAP32[$93 >> 2] | 0) + 4 >> 2] & 255]($93);
       $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx5$val$i$i = HEAP32[$11 >> 2] | 0;
      }
      $106 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
      if (($i$013$i$i | 0) == ($106 | 0)) {
       $$idx6$val$pre$i$i = $$idx4$val$i$i;
       $111 = $$idx5$val$i$i;
      } else {
       HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($106 << 2) >> 2];
       $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $111 = HEAP32[$11 >> 2] | 0;
      }
      $scevgep4$i$i$i$i$i = $111 + -4 | 0;
      HEAP32[$11 >> 2] = $scevgep4$i$i$i$i$i;
      $$idx6$val$i$i = $$idx6$val$pre$i$i;
      $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
      $i$1$i$i = $i$013$i$i + -1 | 0;
     }
     $113 = $i$1$i$i + 1 | 0;
     $117 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
     if ($113 >>> 0 >= $117 >>> 0) {
      $$lcssa = $117;
      break;
     }
     $$idx6$val14$i$i = $$idx6$val$i$i;
     $$idx7$val18$i$i = $$idx7$val$i$i;
     $97 = HEAP8[$57 >> 0] | 0;
     $i$013$i$i = $113;
    }
    $$lcssa$i$i = $$lcssa;
   }
   HEAP32[$64 >> 2] = $$lcssa$i$i;
   HEAP32[$71 >> 2] = $$lcssa$i$i;
   $121 = $agg$result + 8 | 0;
   HEAP32[$121 >> 2] = $4;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   STACKTOP = sp;
   return;
  } while (0);
  if ((label | 0) == 39) {
   $119 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $119;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $eh$lpad$body$index7Z2D = $eh$lpad$body$i$index2Z2D;
  $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 } while (0);
 $122 = ___cxa_find_matching_catch() | 0;
 $eh$lpad$body$index7Z2D = tempRet0;
 $eh$lpad$body$indexZ2D = $122;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP16[$__v >> 1] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP32[$__v >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP32[$__v >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP32[$__v >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $from) {
 $this = $this | 0;
 $from = $from | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i28 = 0, $$0$i$i$i$i28$lcssa = 0, $$0$i$i$i$i45 = 0, $$0$i$i$i$i45$lcssa = 0, $$0$i$i$i$i60 = 0, $$0$i$i$i$i60$lcssa = 0, $$0$i$i$i$i8 = 0, $$0$i$i$i$i8$lcssa = 0, $$0$i$i$i10 = 0, $$0$i$i$i30 = 0, $$0$i$i$i47 = 0, $$0$i$i$i62 = 0, $$01$i$i$i = 0, $$01$i$i$i13 = 0, $$01$i$i$i33 = 0, $$01$i$i$i50 = 0, $$01$i$i$i65 = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i11$lcssa = 0, $$cast$i$i$i31$lcssa = 0, $$cast$i$i$i48$lcssa = 0, $$cast$i$i$i63$lcssa = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i17 = 0, $$idx$val$i176783 = 0, $$idx$val$i42 = 0, $$idx$val$i44 = 0, $$idx$val$i59 = 0, $$idx$val$i6885 = 0, $$idx1$val = 0, $$lcssa = 0, $$lcssa128 = 0, $$lcssa130 = 0, $1 = 0, $109 = 0, $112 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $125 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $32 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $58 = 0, $61 = 0, $65 = 0, $69 = 0, $7 = 0, $74 = 0, $77 = 0, $80 = 0, $83 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $96 = 0, $98 = 0, $from$tr$be = 0, $from$tr94 = 0, label = 0;
 if (!$from) ___assert_fail(39384, 39400, 320, 39416);
 $1 = $this + 16 | 0;
 $from$tr94 = $from;
 L4 : while (1) {
  $5 = $from$tr94 + 4 | 0;
  $7 = (HEAPU8[$1 >> 0] | 0) + 1 & 255;
  if ((HEAP8[$5 >> 0] | 0) == $7 << 24 >> 24) {
   label = 82;
   break;
  }
  HEAP8[$5 >> 0] = $7;
  $9 = ___dynamic_cast($from$tr94, 36776, 36856, 0) | 0;
  if ($9) {
   $$lcssa = $9;
   label = 7;
   break;
  }
  $26 = ___dynamic_cast($from$tr94, 36776, 37120, 0) | 0;
  do if (!$26) {
   $32 = ___dynamic_cast($from$tr94, 36776, 37240, 0) | 0;
   if ($32) {
    $$lcssa128 = $32;
    label = 20;
    break L4;
   }
   $65 = ___dynamic_cast($from$tr94, 36776, 37176, 0) | 0;
   if ($65) {
    $from$tr$be = HEAP32[$65 + 8 >> 2] | 0;
    break;
   }
   $69 = ___dynamic_cast($from$tr94, 36776, 39464, 0) | 0;
   if ($69) {
    $$lcssa130 = $69;
    label = 44;
    break L4;
   }
   $77 = ___dynamic_cast($from$tr94, 36776, 39512, 0) | 0;
   if ($77) {
    $$idx$val$i42 = HEAP32[$77 + 8 >> 2] | 0;
    $80 = $77 + 12 | 0;
    if (($$idx$val$i42 | 0) != ($80 | 0)) {
     $83 = $$idx$val$i42;
     while (1) {
      __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$83 + 20 >> 2] | 0);
      $86 = HEAP32[$83 + 4 >> 2] | 0;
      if (!$86) {
       $$0$i$i$i30 = $83;
       while (1) {
        $91 = HEAP32[$$0$i$i$i30 + 8 >> 2] | 0;
        if ((HEAP32[$91 >> 2] | 0) == ($$0$i$i$i30 | 0)) {
         $$cast$i$i$i31$lcssa = $91;
         break;
        } else $$0$i$i$i30 = $91;
       }
       $$01$i$i$i33 = $$cast$i$i$i31$lcssa;
      } else {
       $$0$i$i$i$i28 = $86;
       while (1) {
        $88 = HEAP32[$$0$i$i$i$i28 >> 2] | 0;
        if (!$88) {
         $$0$i$i$i$i28$lcssa = $$0$i$i$i$i28;
         break;
        } else $$0$i$i$i$i28 = $88;
       }
       $$01$i$i$i33 = $$0$i$i$i$i28$lcssa;
      }
      if (($$01$i$i$i33 | 0) == ($80 | 0)) break; else $83 = $$01$i$i$i33;
     }
    }
    $96 = HEAP32[$77 + 20 >> 2] | 0;
    if (!$96) {
     label = 82;
     break L4;
    }
    $from$tr$be = $96;
    break;
   }
   $98 = ___dynamic_cast($from$tr94, 36776, 36936, 0) | 0;
   if (!$98) {
    label = 82;
    break L4;
   }
   if (HEAP8[$98 + 5 >> 0] | 0) {
    if (!(HEAP32[$98 + 8 >> 2] & 16)) {
     label = 82;
     break L4;
    }
    $from$tr$be = HEAP32[$98 + 16 >> 2] | 0;
    break;
   }
   $$idx$val$i44 = HEAP32[$98 + 28 >> 2] | 0;
   $109 = $98 + 32 | 0;
   if (($$idx$val$i44 | 0) != ($109 | 0)) {
    $112 = $$idx$val$i44;
    while (1) {
     __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$112 + 20 >> 2] | 0);
     $115 = HEAP32[$112 + 4 >> 2] | 0;
     if (!$115) {
      $$0$i$i$i = $112;
      while (1) {
       $120 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$120 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$cast$i$i$i$lcssa = $120;
        break;
       } else $$0$i$i$i = $120;
      }
      $$01$i$i$i = $$cast$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i = $115;
      while (1) {
       $117 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$117) {
        $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $117;
      }
      $$01$i$i$i = $$0$i$i$i$i$lcssa;
     }
     if (($$01$i$i$i | 0) == ($109 | 0)) break; else $112 = $$01$i$i$i;
    }
   }
   $125 = HEAP32[$98 + 40 >> 2] | 0;
   if (!$125) {
    label = 82;
    break L4;
   }
   $from$tr$be = $125;
  } else {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$26 + 8 >> 2] | 0);
   $from$tr$be = HEAP32[$26 + 12 >> 2] | 0;
  } while (0);
  if (!$from$tr$be) {
   label = 3;
   break;
  } else $from$tr94 = $from$tr$be;
 }
 if ((label | 0) == 3) ___assert_fail(39384, 39400, 320, 39416); else if ((label | 0) == 7) {
  $$idx$val$i = HEAP32[$$lcssa + 8 >> 2] | 0;
  $12 = $$lcssa + 12 | 0;
  if (($$idx$val$i | 0) == ($12 | 0)) return;
  $$idx$val$i6885 = $$idx$val$i;
  while (1) {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$$idx$val$i6885 + 20 >> 2] | 0);
   $17 = HEAP32[$$idx$val$i6885 + 4 >> 2] | 0;
   if (!$17) {
    $$0$i$i$i10 = $$idx$val$i6885;
    while (1) {
     $22 = HEAP32[$$0$i$i$i10 + 8 >> 2] | 0;
     if ((HEAP32[$22 >> 2] | 0) == ($$0$i$i$i10 | 0)) {
      $$cast$i$i$i11$lcssa = $22;
      break;
     } else $$0$i$i$i10 = $22;
    }
    $$01$i$i$i13 = $$cast$i$i$i11$lcssa;
   } else {
    $$0$i$i$i$i8 = $17;
    while (1) {
     $19 = HEAP32[$$0$i$i$i$i8 >> 2] | 0;
     if (!$19) {
      $$0$i$i$i$i8$lcssa = $$0$i$i$i$i8;
      break;
     } else $$0$i$i$i$i8 = $19;
    }
    $$01$i$i$i13 = $$0$i$i$i$i8$lcssa;
   }
   if (($$01$i$i$i13 | 0) == ($12 | 0)) break; else $$idx$val$i6885 = $$01$i$i$i13;
  }
  return;
 } else if ((label | 0) == 20) {
  $$idx$val$i17 = HEAP32[$$lcssa128 + 8 >> 2] | 0;
  $35 = $$lcssa128 + 12 | 0;
  if (($$idx$val$i17 | 0) != ($35 | 0)) {
   $$idx$val$i176783 = $$idx$val$i17;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$$idx$val$i176783 + 20 >> 2] | 0);
    $40 = HEAP32[$$idx$val$i176783 + 4 >> 2] | 0;
    if (!$40) {
     $$0$i$i$i62 = $$idx$val$i176783;
     while (1) {
      $45 = HEAP32[$$0$i$i$i62 + 8 >> 2] | 0;
      if ((HEAP32[$45 >> 2] | 0) == ($$0$i$i$i62 | 0)) {
       $$cast$i$i$i63$lcssa = $45;
       break;
      } else $$0$i$i$i62 = $45;
     }
     $$01$i$i$i65 = $$cast$i$i$i63$lcssa;
    } else {
     $$0$i$i$i$i60 = $40;
     while (1) {
      $42 = HEAP32[$$0$i$i$i$i60 >> 2] | 0;
      if (!$42) {
       $$0$i$i$i$i60$lcssa = $$0$i$i$i$i60;
       break;
      } else $$0$i$i$i$i60 = $42;
     }
     $$01$i$i$i65 = $$0$i$i$i$i60$lcssa;
    }
    if (($$01$i$i$i65 | 0) == ($35 | 0)) break; else $$idx$val$i176783 = $$01$i$i$i65;
   }
  }
  $$idx$val$i59 = HEAP32[$$lcssa128 + 28 >> 2] | 0;
  $50 = $$lcssa128 + 32 | 0;
  if (($$idx$val$i59 | 0) == ($50 | 0)) return;
  $53 = $$idx$val$i59;
  while (1) {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$53 + 20 >> 2] | 0);
   $56 = HEAP32[$53 + 4 >> 2] | 0;
   if (!$56) {
    $$0$i$i$i47 = $53;
    while (1) {
     $61 = HEAP32[$$0$i$i$i47 + 8 >> 2] | 0;
     if ((HEAP32[$61 >> 2] | 0) == ($$0$i$i$i47 | 0)) {
      $$cast$i$i$i48$lcssa = $61;
      break;
     } else $$0$i$i$i47 = $61;
    }
    $$01$i$i$i50 = $$cast$i$i$i48$lcssa;
   } else {
    $$0$i$i$i$i45 = $56;
    while (1) {
     $58 = HEAP32[$$0$i$i$i$i45 >> 2] | 0;
     if (!$58) {
      $$0$i$i$i$i45$lcssa = $$0$i$i$i$i45;
      break;
     } else $$0$i$i$i$i45 = $58;
    }
    $$01$i$i$i50 = $$0$i$i$i$i45$lcssa;
   }
   if (($$01$i$i$i50 | 0) == ($50 | 0)) break; else $53 = $$01$i$i$i50;
  }
  return;
 } else if ((label | 0) == 44) {
  $$idx$val = HEAP32[$$lcssa130 + 8 >> 2] | 0;
  $$idx1$val = HEAP32[$$lcssa130 + 12 >> 2] | 0;
  if (($$idx$val | 0) == ($$idx1$val | 0)) return;
  $74 = $$idx$val;
  do {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$74 >> 2] | 0);
   $74 = $74 + 4 | 0;
  } while (($74 | 0) != ($$idx1$val | 0));
  return;
 } else if ((label | 0) == 82) return;
}

function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i4 = 0, $$0$i$i9 = 0, $$01$i$i = 0, $$2 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $107 = 0, $112 = 0, $121 = 0, $122 = 0, $124 = 0, $127 = 0, $128 = 0, $130 = 0, $134 = 0, $136 = 0, $140 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $152 = 0, $153 = 0, $157 = 0, $157$phi = 0, $160 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $54 = 0, $6 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $74 = 0, $76 = 0, $79 = 0, $8 = 0, $80 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $95 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$1 = 0, $__d$1$lcssa = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$0$lcssa = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 4 | 0;
 $1 = $__sn + 8 | 0;
 $3 = ($__flags & 512 | 0) == 0;
 $4 = $__sym + 4 | 0;
 $5 = $__sym + 8 | 0;
 $6 = ($__fd | 0) > 0;
 $7 = $__grp + 1 | 0;
 $8 = $__grp + 8 | 0;
 $9 = $__grp + 4 | 0;
 $$0 = $__db;
 $__p$0 = 0;
 while (1) {
  if (($__p$0 | 0) == 4) break;
  switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
  case 2:
   {
    $33 = HEAP8[$__sym >> 0] | 0;
    $35 = ($33 & 1) == 0;
    if ($35) $39 = ($33 & 255) >>> 1; else $39 = HEAP32[$4 >> 2] | 0;
    if ($3 | ($39 | 0) == 0) $$2 = $$0; else {
     if ($35) {
      $46 = $4;
      $47 = ($33 & 255) >>> 1;
     } else {
      $46 = HEAP32[$5 >> 2] | 0;
      $47 = HEAP32[$4 >> 2] | 0;
     }
     $45 = $46 + ($47 << 2) | 0;
     $48 = HEAP32[$__me >> 2] | 0;
     $$0$i$i9 = $48;
     $49 = $46;
     while (1) {
      if (($49 | 0) == ($45 | 0)) break;
      HEAP32[$$0$i$i9 >> 2] = HEAP32[$49 >> 2];
      $$0$i$i9 = $$0$i$i9 + 4 | 0;
      $49 = $49 + 4 | 0;
     }
     HEAP32[$__me >> 2] = $48 + ($47 << 2);
     $$2 = $$0;
    }
    break;
   }
  case 3:
   {
    $21 = HEAP8[$__sn >> 0] | 0;
    $23 = ($21 & 1) == 0;
    if ($23) $27 = ($21 & 255) >>> 1; else $27 = HEAP32[$0 >> 2] | 0;
    if (!$27) $$2 = $$0; else {
     $30 = HEAP32[($23 ? $0 : HEAP32[$1 >> 2] | 0) >> 2] | 0;
     $31 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $31 + 4;
     HEAP32[$31 >> 2] = $30;
     $$2 = $$0;
    }
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 32) | 0;
    $19 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $19 + 4;
    HEAP32[$19 >> 2] = $18;
    $$2 = $$0;
    break;
   }
  case 4:
   {
    $54 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$0 + 4 | 0 : $$0;
    $__d$0 = $$$0;
    while (1) {
     if ($__d$0 >>> 0 >= $__de >>> 0) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, HEAP32[$__d$0 >> 2] | 0) | 0)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $__d$0 = $__d$0 + 4 | 0;
    }
    if ($6) {
     $__d$1 = $__d$0$lcssa;
     $__f$0 = $__fd;
     while (1) {
      $64 = ($__f$0 | 0) > 0;
      if (!($__d$1 >>> 0 > $$$0 >>> 0 & $64)) {
       $$lcssa = $64;
       $__d$1$lcssa = $__d$1;
       $__f$0$lcssa = $__f$0;
       break;
      }
      $65 = $__d$1 + -4 | 0;
      $66 = HEAP32[$65 >> 2] | 0;
      $67 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $67 + 4;
      HEAP32[$67 >> 2] = $66;
      $__d$1 = $65;
      $__f$0 = $__f$0 + -1 | 0;
     }
     if ($$lcssa) $80 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0; else $80 = 0;
     $__me$promoted = HEAP32[$__me >> 2] | 0;
     $74 = ~$__f$0$lcssa;
     $76 = $__f$0$lcssa + (($74 | 0) > -1 ? $74 : -1) | 0;
     $79 = $__me$promoted;
     $__f$1 = $__f$0$lcssa;
     while (1) {
      if (($__f$1 | 0) <= 0) break;
      HEAP32[$79 >> 2] = $80;
      $79 = $79 + 4 | 0;
      $__f$1 = $__f$1 + -1 | 0;
     }
     HEAP32[$__me >> 2] = $__me$promoted + ($76 + 2 << 2);
     HEAP32[$__me$promoted + ($76 + 1 << 2) >> 2] = $__dp;
     $__d$2 = $__d$1$lcssa;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $86 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
     $87 = HEAP32[$__me >> 2] | 0;
     $88 = $87 + 4 | 0;
     HEAP32[$__me >> 2] = $88;
     HEAP32[$87 >> 2] = $86;
     $127 = $88;
    } else {
     $89 = HEAP8[$__grp >> 0] | 0;
     $91 = ($89 & 1) == 0;
     if ($91) $95 = ($89 & 255) >>> 1; else $95 = HEAP32[$9 >> 2] | 0;
     if (!$95) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($91 ? $7 : HEAP32[$8 >> 2] | 0) >> 0] | 0;
     $__d$3 = $__d$2;
     $__gl$0 = $__gl$0$ph;
     $__ig$0 = 0;
     $__ng$0 = 0;
     while (1) {
      if (($__d$3 | 0) == ($$$0 | 0)) break;
      $102 = HEAP32[$__me >> 2] | 0;
      if (($__ng$0 | 0) == ($__gl$0 | 0)) {
       $103 = $102 + 4 | 0;
       HEAP32[$__me >> 2] = $103;
       HEAP32[$102 >> 2] = $__ts;
       $104 = $__ig$0 + 1 | 0;
       $105 = HEAP8[$__grp >> 0] | 0;
       $107 = ($105 & 1) == 0;
       if ($107) $112 = ($105 & 255) >>> 1; else $112 = HEAP32[$9 >> 2] | 0;
       if ($104 >>> 0 < $112 >>> 0) if ((HEAP8[($107 ? $7 : HEAP32[$8 >> 2] | 0) + $104 >> 0] | 0) == 127) {
        $124 = $103;
        $__gl$1 = -1;
        $__ig$1 = $104;
        $__ng$1 = 0;
       } else {
        $124 = $103;
        $__gl$1 = HEAP8[($107 ? $7 : HEAP32[$8 >> 2] | 0) + $104 >> 0] | 0;
        $__ig$1 = $104;
        $__ng$1 = 0;
       } else {
        $124 = $103;
        $__gl$1 = $__ng$0;
        $__ig$1 = $104;
        $__ng$1 = 0;
       }
      } else {
       $124 = $102;
       $__gl$1 = $__gl$0;
       $__ig$1 = $__ig$0;
       $__ng$1 = $__ng$0;
      }
      $121 = $__d$3 + -4 | 0;
      $122 = HEAP32[$121 >> 2] | 0;
      HEAP32[$__me >> 2] = $124 + 4;
      HEAP32[$124 >> 2] = $122;
      $__d$3 = $121;
      $__gl$0 = $__gl$1;
      $__ig$0 = $__ig$1;
      $__ng$0 = $__ng$1 + 1 | 0;
     }
     $127 = HEAP32[$__me >> 2] | 0;
    }
    if (($54 | 0) == ($127 | 0)) $$2 = $$$0; else {
     $$0$i$i4 = $127;
     $$01$i$i = $54;
     while (1) {
      $128 = $$0$i$i4 + -4 | 0;
      if ($$01$i$i >>> 0 >= $128 >>> 0) break;
      $130 = HEAP32[$$01$i$i >> 2] | 0;
      HEAP32[$$01$i$i >> 2] = HEAP32[$128 >> 2];
      HEAP32[$128 >> 2] = $130;
      $$0$i$i4 = $128;
      $$01$i$i = $$01$i$i + 4 | 0;
     }
     $$2 = $$$0;
    }
    break;
   }
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$0;
    break;
   }
  default:
   $$2 = $$0;
  }
  $$0 = $$2;
  $__p$0 = $__p$0 + 1 | 0;
 }
 $134 = HEAP8[$__sn >> 0] | 0;
 $136 = ($134 & 1) == 0;
 if ($136) $140 = ($134 & 255) >>> 1; else $140 = HEAP32[$0 >> 2] | 0;
 if ($140 >>> 0 > 1) {
  if ($136) {
   $$pn = $0;
   $148 = ($134 & 255) >>> 1;
  } else {
   $$pn = HEAP32[$1 >> 2] | 0;
   $148 = HEAP32[$0 >> 2] | 0;
  }
  $146 = $$pn + 4 | 0;
  $147 = $$pn + ($148 << 2) | 0;
  $149 = HEAP32[$__me >> 2] | 0;
  $152 = $147 - $146 | 0;
  $$0$i$i = $149;
  $153 = $146;
  $157 = $$pn;
  while (1) {
   if (($153 | 0) == ($147 | 0)) break;
   HEAP32[$$0$i$i >> 2] = HEAP32[$153 >> 2];
   $157$phi = $153;
   $$0$i$i = $$0$i$i + 4 | 0;
   $153 = $157 + 8 | 0;
   $157 = $157$phi;
  }
  HEAP32[$__me >> 2] = $149 + ($152 >>> 2 << 2);
 }
 $160 = $__flags & 176;
 if (($160 | 0) == 32) HEAP32[$__mi >> 2] = HEAP32[$__me >> 2]; else if (($160 | 0) != 16) HEAP32[$__mi >> 2] = $__mb;
 return;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $30 = 0, $4 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $56 = 0, $6 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $75 = 0, $83 = 0, $85 = 0, $86 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i4 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $__buf = sp + 896 | 0;
 $__bb = sp + 888 | 0;
 $__digits = sp + 488 | 0;
 $__loc = sp + 480 | 0;
 $__pat = sp + 892 | 0;
 $__dp = sp + 476 | 0;
 $__ts = sp + 472 | 0;
 $__grp = sp + 460 | 0;
 $__sym = sp + 448 | 0;
 $__sn = sp + 436 | 0;
 $__fd = sp + 432 | 0;
 $__mbuf = sp + 32 | 0;
 $__mi = sp + 24 | 0;
 $__me = sp + 20 | 0;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[tempDoublePtr >> 3] = $__units;
 HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
 $1 = _snprintf($__buf, 100, 47720, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(2) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $124 = 0;
   $125 = 0;
   label = 7;
  } else {
   __THREW__ = 0;
   HEAPF64[tempDoublePtr >> 3] = $__units;
   HEAP32[$vararg_buffer1 >> 2] = HEAP32[tempDoublePtr >> 2];
   HEAP32[$vararg_buffer1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
   $6 = invoke_iiiii(12, $__bb | 0, $3 | 0, 47720, $vararg_buffer1 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $124 = 0;
    $125 = 0;
    label = 7;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(6);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $124 = 0;
      $125 = 0;
      label = 7;
      break;
     }
     $126 = HEAP32[$__bb >> 2] | 0;
    } else $126 = $9;
    $16 = _malloc($6 << 2) | 0;
    if (!$16) {
     __THREW__ = 0;
     invoke_v(6);
     $18 = __THREW__;
     __THREW__ = 0;
     if ($18 & 1) {
      $124 = $126;
      $125 = 0;
      label = 7;
     } else {
      $117 = 0;
      $119 = $126;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $117 = $16;
     $119 = $126;
     $__db$0 = $16;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $117 = 0;
  $119 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  invoke_vii(47, $__loc | 0, $__iob | 0);
  $20 = __THREW__;
  __THREW__ = 0;
  if ($20 & 1) {
   $124 = $119;
   $125 = $117;
   label = 7;
  } else {
   __THREW__ = 0;
   $22 = invoke_iii(22, $__loc | 0, 47960) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) label = 44; else {
    $25 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$22 >> 2] | 0) + 48 >> 2] | 0, $22 | 0, $25 | 0, $25 + $__n$0 | 0, $__db$0 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) label = 44; else {
     if (!$__n$0) $42 = 0; else $42 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     $__i$0$i$i = 0;
     while (1) {
      if (($__i$0$i$i | 0) == 3) break;
      HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
      $__i$0$i$i = $__i$0$i$i + 1 | 0;
     }
     $__i$0$i$i4 = 0;
     while (1) {
      if (($__i$0$i$i4 | 0) == 3) break;
      HEAP32[$__sym + ($__i$0$i$i4 << 2) >> 2] = 0;
      $__i$0$i$i4 = $__i$0$i$i4 + 1 | 0;
     }
     $__i$0$i$i6 = 0;
     while (1) {
      if (($__i$0$i$i6 | 0) == 3) break;
      HEAP32[$__sn + ($__i$0$i$i6 << 2) >> 2] = 0;
      $__i$0$i$i6 = $__i$0$i$i6 + 1 | 0;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(4, $__intl | 0, $42 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $43 = __THREW__;
     __THREW__ = 0;
     do if ($43 & 1) {
      $97 = ___cxa_find_matching_catch() | 0;
      $$0 = $97;
      $$01 = tempRet0;
     } else {
      $45 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($45 | 0)) {
       $49 = HEAP8[$__sn >> 0] | 0;
       if (!($49 & 1)) $65 = ($49 & 255) >>> 1; else $65 = HEAP32[$__sn + 4 >> 2] | 0;
       $56 = HEAP8[$__sym >> 0] | 0;
       if (!($56 & 1)) $67 = ($56 & 255) >>> 1; else $67 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $65 + ($__n$0 - $45 << 1 | 1) + $67 | 0;
      } else {
       $68 = HEAP8[$__sn >> 0] | 0;
       if (!($68 & 1)) $83 = ($68 & 255) >>> 1; else $83 = HEAP32[$__sn + 4 >> 2] | 0;
       $75 = HEAP8[$__sym >> 0] | 0;
       if (!($75 & 1)) $85 = ($75 & 255) >>> 1; else $85 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $83 + 2 + $85 | 0;
      }
      $86 = $$pn + $45 | 0;
      if ($86 >>> 0 > 100) {
       $89 = _malloc($86 << 2) | 0;
       if (!$89) {
        __THREW__ = 0;
        invoke_v(6);
        $91 = __THREW__;
        __THREW__ = 0;
        if ($91 & 1) {
         $93 = ___cxa_find_matching_catch() | 0;
         $$0 = $93;
         $$01 = tempRet0;
         break;
        } else {
         $101 = 0;
         $__mb$0 = 0;
        }
       } else {
        $101 = $89;
        $__mb$0 = $89;
       }
      } else {
       $101 = 0;
       $__mb$0 = $__mbuf;
      }
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + ($__n$0 << 2) | 0, $22 | 0, $42 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $45 | 0);
      $108 = __THREW__;
      __THREW__ = 0;
      if (!($108 & 1)) {
       HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
       $111 = HEAP32[$__mi >> 2] | 0;
       $112 = HEAP32[$__me >> 2] | 0;
       __THREW__ = 0;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       invoke_viiiiiii(45, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $111 | 0, $112 | 0, $__iob | 0, $__fl | 0);
       $113 = __THREW__;
       __THREW__ = 0;
       if (!($113 & 1)) {
        if ($101) _free($101);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
        __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
        if ($117) _free($117);
        _free($119);
        STACKTOP = sp;
        return;
       }
      }
      $99 = ___cxa_find_matching_catch() | 0;
      $100 = tempRet0;
      if (!$101) {
       $$0 = $99;
       $$01 = $100;
      } else {
       _free($101);
       $$0 = $99;
       $$01 = $100;
      }
     } while (0);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
    }
   }
   if ((label | 0) == 44) {
    $95 = ___cxa_find_matching_catch() | 0;
    $$1 = $95;
    $$12 = tempRet0;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $121 = $117;
   $123 = $119;
  }
 }
 if ((label | 0) == 7) {
  $13 = ___cxa_find_matching_catch() | 0;
  $$2 = $13;
  $$23 = tempRet0;
  $121 = $125;
  $123 = $124;
 }
 if ($121) _free($121);
 _free($123);
 ___resumeException($$2 | 0);
}

function _mbsrtowcs($ws, $src, $wn, $st) {
 $ws = $ws | 0;
 $src = $src | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$03$ph = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0, $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa59 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa67 = 0, $$lcssa69 = 0, $0 = 0, $101 = 0, $107 = 0, $108 = 0, $116 = 0, $118 = 0, $121 = 0, $126 = 0, $128 = 0, $131 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $33 = 0, $40 = 0, $47 = 0, $54 = 0, $63 = 0, $7 = 0, $71 = 0, $87 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $97 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $s$0 = 0, $s$0$ph = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0;
 $0 = HEAP32[$src >> 2] | 0;
 if (!$st) label = 5; else {
  $2 = HEAP32[$st >> 2] | 0;
  if (!$2) label = 5; else if (!$ws) {
   $$36 = $wn;
   $c$2 = $2;
   $s$3 = $0;
   label = 20;
  } else {
   HEAP32[$st >> 2] = 0;
   $$3 = $ws;
   $$7 = $wn;
   $c$4 = $2;
   $s$8 = $0;
   label = 43;
  }
 }
 if ((label | 0) == 5) if (!$ws) {
  $$03$ph = $wn;
  $s$0$ph = $0;
  label = 6;
 } else {
  $$02$ph = $ws;
  $$47$ph = $wn;
  $s$5$ph = $0;
  label = 7;
 }
 L7 : while (1) if ((label | 0) == 6) {
  label = 0;
  $$03 = $$03$ph;
  $s$0 = $s$0$ph;
  while (1) {
   $7 = HEAP8[$s$0 >> 0] | 0;
   if ((($7 & 255) + -1 | 0) >>> 0 < 127) if (!($s$0 & 3)) {
    $14 = HEAP32[$s$0 >> 2] | 0;
    if (!(($14 + -16843009 | $14) & -2139062144)) {
     $$1415 = $$03;
     $s$116 = $s$0;
     while (1) {
      $19 = $s$116 + 4 | 0;
      $20 = $$1415 + -4 | 0;
      $21 = HEAP32[$19 >> 2] | 0;
      if (!(($21 + -16843009 | $21) & -2139062144)) {
       $$1415 = $20;
       $s$116 = $19;
      } else {
       $$lcssa = $19;
       $$lcssa53 = $20;
       $$lcssa54 = $21;
       break;
      }
     }
     $$14$lcssa = $$lcssa53;
     $$in = $$lcssa54;
     $s$1$lcssa = $$lcssa;
    } else {
     $$14$lcssa = $$03;
     $$in = $14;
     $s$1$lcssa = $s$0;
    }
    $$25 = $$14$lcssa;
    $28 = $$in & 255;
    $s$2 = $s$1$lcssa;
   } else {
    $$25 = $$03;
    $28 = $7;
    $s$2 = $s$0;
   } else {
    $$25 = $$03;
    $28 = $7;
    $s$2 = $s$0;
   }
   $27 = $28 & 255;
   if (($27 + -1 | 0) >>> 0 >= 127) {
    $$25$lcssa = $$25;
    $$lcssa55 = $27;
    $s$2$lcssa = $s$2;
    break;
   }
   $$03 = $$25 + -1 | 0;
   $s$0 = $s$2 + 1 | 0;
  }
  $33 = $$lcssa55 + -194 | 0;
  if ($33 >>> 0 > 50) {
   $$434 = $ws;
   $$833 = $$25$lcssa;
   $s$1035 = $s$2$lcssa;
   label = 54;
   break;
  }
  $$36 = $$25$lcssa;
  $c$2 = HEAP32[40472 + ($33 << 2) >> 2] | 0;
  $s$3 = $s$2$lcssa + 1 | 0;
  label = 20;
  continue;
 } else if ((label | 0) == 7) {
  label = 0;
  if (!$$47$ph) {
   $s$5$lcssa = $s$5$ph;
   label = 31;
   break;
  }
  $$0219 = $$02$ph;
  $$4718 = $$47$ph;
  $s$520 = $s$5$ph;
  while (1) {
   $63 = HEAP8[$s$520 >> 0] | 0;
   do if ((($63 & 255) + -1 | 0) >>> 0 < 127) if ($$4718 >>> 0 > 4 & ($s$520 & 3 | 0) == 0) {
    $$1 = $$0219;
    $$5 = $$4718;
    $s$6 = $s$520;
    while (1) {
     $71 = HEAP32[$s$6 >> 2] | 0;
     if (($71 + -16843009 | $71) & -2139062144) {
      $$1$lcssa = $$1;
      $$5$lcssa = $$5;
      $$lcssa59 = $71;
      $s$6$lcssa = $s$6;
      label = 38;
      break;
     }
     HEAP32[$$1 >> 2] = $71 & 255;
     HEAP32[$$1 + 4 >> 2] = HEAPU8[$s$6 + 1 >> 0];
     HEAP32[$$1 + 8 >> 2] = HEAPU8[$s$6 + 2 >> 0];
     $87 = $s$6 + 4 | 0;
     $90 = $$1 + 16 | 0;
     HEAP32[$$1 + 12 >> 2] = HEAPU8[$s$6 + 3 >> 0];
     $91 = $$5 + -4 | 0;
     if ($91 >>> 0 > 4) {
      $$1 = $90;
      $$5 = $91;
      $s$6 = $87;
     } else {
      $$lcssa61 = $87;
      $$lcssa62 = $90;
      $$lcssa63 = $91;
      label = 37;
      break;
     }
    }
    if ((label | 0) == 37) {
     label = 0;
     $$2 = $$lcssa62;
     $$6 = $$lcssa63;
     $94 = HEAP8[$$lcssa61 >> 0] | 0;
     $s$7 = $$lcssa61;
     break;
    } else if ((label | 0) == 38) {
     label = 0;
     $$2 = $$1$lcssa;
     $$6 = $$5$lcssa;
     $94 = $$lcssa59 & 255;
     $s$7 = $s$6$lcssa;
     break;
    }
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } while (0);
   $93 = $94 & 255;
   if (($93 + -1 | 0) >>> 0 >= 127) {
    $$2$lcssa = $$2;
    $$6$lcssa = $$6;
    $$lcssa67 = $93;
    $s$7$lcssa = $s$7;
    break;
   }
   $97 = $s$7 + 1 | 0;
   HEAP32[$$2 >> 2] = $93;
   $$4718 = $$6 + -1 | 0;
   if (!$$4718) {
    $$lcssa69 = $97;
    label = 30;
    break L7;
   } else {
    $$0219 = $$2 + 4 | 0;
    $s$520 = $97;
   }
  }
  $101 = $$lcssa67 + -194 | 0;
  if ($101 >>> 0 > 50) {
   $$434 = $$2$lcssa;
   $$833 = $$6$lcssa;
   $s$1035 = $s$7$lcssa;
   label = 54;
   break;
  }
  $$3 = $$2$lcssa;
  $$7 = $$6$lcssa;
  $c$4 = HEAP32[40472 + ($101 << 2) >> 2] | 0;
  $s$8 = $s$7$lcssa + 1 | 0;
  label = 43;
  continue;
 } else if ((label | 0) == 20) {
  label = 0;
  $40 = (HEAPU8[$s$3 >> 0] | 0) >>> 3;
  if (($40 + -16 | $40 + ($c$2 >> 26)) >>> 0 > 7) {
   label = 21;
   break;
  }
  $47 = $s$3 + 1 | 0;
  if (!($c$2 & 33554432)) $s$4 = $47; else {
   if ((HEAP8[$47 >> 0] & -64) << 24 >> 24 != -128) {
    label = 24;
    break;
   }
   $54 = $s$3 + 2 | 0;
   if (!($c$2 & 524288)) $s$4 = $54; else {
    if ((HEAP8[$54 >> 0] & -64) << 24 >> 24 != -128) {
     label = 27;
     break;
    }
    $s$4 = $s$3 + 3 | 0;
   }
  }
  $$03$ph = $$36 + -1 | 0;
  $s$0$ph = $s$4;
  label = 6;
  continue;
 } else if ((label | 0) == 43) {
  label = 0;
  $107 = HEAPU8[$s$8 >> 0] | 0;
  $108 = $107 >>> 3;
  if (($108 + -16 | $108 + ($c$4 >> 26)) >>> 0 > 7) {
   label = 44;
   break;
  }
  $116 = $s$8 + 1 | 0;
  $118 = $107 + -128 | $c$4 << 6;
  if (($118 | 0) < 0) {
   $121 = HEAPU8[$116 >> 0] | 0;
   if (($121 & 192 | 0) != 128) {
    label = 47;
    break;
   }
   $126 = $s$8 + 2 | 0;
   $128 = $121 + -128 | $118 << 6;
   if (($128 | 0) < 0) {
    $131 = HEAPU8[$126 >> 0] | 0;
    if (($131 & 192 | 0) != 128) {
     label = 50;
     break;
    }
    $c$5 = $131 + -128 | $128 << 6;
    $s$9 = $s$8 + 3 | 0;
   } else {
    $c$5 = $128;
    $s$9 = $126;
   }
  } else {
   $c$5 = $118;
   $s$9 = $116;
  }
  HEAP32[$$3 >> 2] = $c$5;
  $$02$ph = $$3 + 4 | 0;
  $$47$ph = $$7 + -1 | 0;
  $s$5$ph = $s$9;
  label = 7;
  continue;
 }
 if ((label | 0) == 21) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 24) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 27) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 30) {
  $s$5$lcssa = $$lcssa69;
  label = 31;
 } else if ((label | 0) == 44) {
  $$4 = $$3;
  $$8 = $$7;
  $c$6 = $c$4;
  $s$10 = $s$8 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 47) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
 } else if ((label | 0) == 50) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
 }
 if ((label | 0) == 31) {
  HEAP32[$src >> 2] = $s$5$lcssa;
  $$0 = $wn;
  return $$0 | 0;
 } else if ((label | 0) == 53) if (!$c$6) {
  $$434 = $$4;
  $$833 = $$8;
  $s$1035 = $s$10;
  label = 54;
 } else {
  $$48 = $$4;
  $s$109 = $s$10;
 }
 if ((label | 0) == 54) if (!(HEAP8[$s$1035 >> 0] | 0)) {
  if ($$434) {
   HEAP32[$$434 >> 2] = 0;
   HEAP32[$src >> 2] = 0;
  }
  $$0 = $wn - $$833 | 0;
  return $$0 | 0;
 } else {
  $$48 = $$434;
  $s$109 = $s$1035;
 }
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 if (!$$48) {
  $$0 = -1;
  return $$0 | 0;
 }
 HEAP32[$src >> 2] = $s$109;
 $$0 = -1;
 return $$0 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $105 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $3 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $48 = 0, $55 = 0, $6 = 0, $64 = 0, $66 = 0, $67 = 0, $7 = 0, $74 = 0, $82 = 0, $84 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i6 = 0, $__i$0$i$i9 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $__buf = sp + 284 | 0;
 $__bb = sp + 72 | 0;
 $__digits = sp + 184 | 0;
 $__loc = sp + 68 | 0;
 $__pat = sp + 180 | 0;
 $__dp = sp + 177 | 0;
 $__ts = sp + 176 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__sn = sp + 32 | 0;
 $__fd = sp + 28 | 0;
 $__mbuf = sp + 76 | 0;
 $__mi = sp + 24 | 0;
 $__me = sp + 20 | 0;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[tempDoublePtr >> 3] = $__units;
 HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
 $1 = _snprintf($__buf, 100, 47720, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(2) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $118 = 0;
   $119 = 0;
   label = 7;
  } else {
   __THREW__ = 0;
   HEAPF64[tempDoublePtr >> 3] = $__units;
   HEAP32[$vararg_buffer1 >> 2] = HEAP32[tempDoublePtr >> 2];
   HEAP32[$vararg_buffer1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
   $6 = invoke_iiiii(12, $__bb | 0, $3 | 0, 47720, $vararg_buffer1 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $118 = 0;
    $119 = 0;
    label = 7;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(6);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $118 = 0;
      $119 = 0;
      label = 7;
      break;
     }
     $120 = HEAP32[$__bb >> 2] | 0;
    } else $120 = $9;
    $15 = _malloc($6) | 0;
    if (!$15) {
     __THREW__ = 0;
     invoke_v(6);
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      $118 = $120;
      $119 = 0;
      label = 7;
     } else {
      $113 = 0;
      $114 = $120;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $113 = $15;
     $114 = $120;
     $__db$0 = $15;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $113 = 0;
  $114 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  invoke_vii(47, $__loc | 0, $__iob | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $118 = $114;
   $119 = $113;
   label = 7;
  } else {
   __THREW__ = 0;
   $21 = invoke_iii(22, $__loc | 0, 47968) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 44; else {
    $24 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$21 >> 2] | 0) + 32 >> 2] | 0, $21 | 0, $24 | 0, $24 + $__n$0 | 0, $__db$0 | 0) | 0;
    $29 = __THREW__;
    __THREW__ = 0;
    if ($29 & 1) label = 44; else {
     if (!$__n$0) $41 = 0; else $41 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     $__i$0$i$i = 0;
     while (1) {
      if (($__i$0$i$i | 0) == 3) break;
      HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
      $__i$0$i$i = $__i$0$i$i + 1 | 0;
     }
     $__i$0$i$i6 = 0;
     while (1) {
      if (($__i$0$i$i6 | 0) == 3) break;
      HEAP32[$__sym + ($__i$0$i$i6 << 2) >> 2] = 0;
      $__i$0$i$i6 = $__i$0$i$i6 + 1 | 0;
     }
     $__i$0$i$i9 = 0;
     while (1) {
      if (($__i$0$i$i9 | 0) == 3) break;
      HEAP32[$__sn + ($__i$0$i$i9 << 2) >> 2] = 0;
      $__i$0$i$i9 = $__i$0$i$i9 + 1 | 0;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(3, $__intl | 0, $41 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $42 = __THREW__;
     __THREW__ = 0;
     do if ($42 & 1) {
      $95 = ___cxa_find_matching_catch() | 0;
      $$0 = $95;
      $$01 = tempRet0;
     } else {
      $44 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($44 | 0)) {
       $48 = HEAP8[$__sn >> 0] | 0;
       if (!($48 & 1)) $64 = ($48 & 255) >>> 1; else $64 = HEAP32[$__sn + 4 >> 2] | 0;
       $55 = HEAP8[$__sym >> 0] | 0;
       if (!($55 & 1)) $66 = ($55 & 255) >>> 1; else $66 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $64 + ($__n$0 - $44 << 1 | 1) + $66 | 0;
      } else {
       $67 = HEAP8[$__sn >> 0] | 0;
       if (!($67 & 1)) $82 = ($67 & 255) >>> 1; else $82 = HEAP32[$__sn + 4 >> 2] | 0;
       $74 = HEAP8[$__sym >> 0] | 0;
       if (!($74 & 1)) $84 = ($74 & 255) >>> 1; else $84 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $82 + 2 + $84 | 0;
      }
      $85 = $$pn + $44 | 0;
      if ($85 >>> 0 > 100) {
       $87 = _malloc($85) | 0;
       if (!$87) {
        __THREW__ = 0;
        invoke_v(6);
        $89 = __THREW__;
        __THREW__ = 0;
        if ($89 & 1) {
         $91 = ___cxa_find_matching_catch() | 0;
         $$0 = $91;
         $$01 = tempRet0;
         break;
        } else {
         $99 = 0;
         $__mb$0 = 0;
        }
       } else {
        $99 = $87;
        $__mb$0 = $87;
       }
      } else {
       $99 = 0;
       $__mb$0 = $__mbuf;
      }
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + $__n$0 | 0, $21 | 0, $41 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $44 | 0);
      $105 = __THREW__;
      __THREW__ = 0;
      if (!($105 & 1)) {
       HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
       $108 = HEAP32[$__mi >> 2] | 0;
       $109 = HEAP32[$__me >> 2] | 0;
       __THREW__ = 0;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       invoke_viiiiiii(39, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $108 | 0, $109 | 0, $__iob | 0, $__fl | 0);
       $110 = __THREW__;
       __THREW__ = 0;
       if (!($110 & 1)) {
        _free($99);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
        __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
        _free($113);
        _free($114);
        STACKTOP = sp;
        return;
       }
      }
      $97 = ___cxa_find_matching_catch() | 0;
      $98 = tempRet0;
      _free($99);
      $$0 = $97;
      $$01 = $98;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
    }
   }
   if ((label | 0) == 44) {
    $93 = ___cxa_find_matching_catch() | 0;
    $$1 = $93;
    $$12 = tempRet0;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $116 = $113;
   $117 = $114;
  }
 }
 if ((label | 0) == 7) {
  $13 = ___cxa_find_matching_catch() | 0;
  $$2 = $13;
  $$23 = tempRet0;
  $116 = $119;
  $117 = $118;
 }
 _free($116);
 _free($117);
 ___resumeException($$2 | 0);
}

function __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$012 = 0, $$0311 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $7 = 0, $78 = 0, $82 = 0, $84 = 0, $86 = 0, $__f$01$i$i = 0, $__f$01$i$i8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $parser = 0, $ss = 0, $token_list = 0, label = 0, sp = 0, $__f$01$i$i8$looptemp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 180 | 0;
 $token_list = sp + 168 | 0;
 $parser = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 __Z11jsonnet_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($token_list, $file, $input);
 HEAP32[$parser >> 2] = $token_list;
 HEAP32[$parser + 4 >> 2] = $alloc;
 __THREW__ = 0;
 $3 = invoke_iiii(28, $parser | 0, 15, 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($4 & 1) {
  $55 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index7Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $55;
  label = 19;
 } else {
  $6 = $token_list + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ((HEAP32[$7 + 8 >> 2] | 0) == 31) {
   $63 = $token_list + 8 | 0;
   if (!(HEAP32[$63 >> 2] | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   }
   $67 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
   $69 = HEAP32[$7 >> 2] | 0;
   HEAP32[$69 + 4 >> 2] = HEAP32[$67 >> 2];
   HEAP32[HEAP32[$67 >> 2] >> 2] = $69;
   HEAP32[$63 >> 2] = 0;
   if (($7 | 0) == ($token_list | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   }
   $__f$01$i$i8 = $7;
   do {
    $__f$01$i$i8$looptemp = $__f$01$i$i8;
    $__f$01$i$i8 = HEAP32[$__f$01$i$i8 + 4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i8$looptemp + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i8$looptemp + 12 | 0);
    __ZdlPv($__f$01$i$i8$looptemp);
   } while (($__f$01$i$i8 | 0) != ($token_list | 0));
   STACKTOP = sp;
   return $3 | 0;
  }
  $11 = $ss + 64 | 0;
  $12 = $ss + 8 | 0;
  HEAP32[$12 >> 2] = 592;
  $13 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 740;
  HEAP32[$11 >> 2] = 760;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $13 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $28 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $28;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 572;
   HEAP32[$11 >> 2] = 612;
   HEAP32[$12 >> 2] = 592;
   __THREW__ = 0;
   invoke_vi(177, $13 | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   do if ($20 & 1) {
    $30 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $30;
   } else {
    HEAP32[$13 >> 2] = 904;
    $22 = $ss + 44 | 0;
    HEAP32[$22 + 0 >> 2] = 0;
    HEAP32[$22 + 4 >> 2] = 0;
    HEAP32[$22 + 8 >> 2] = 0;
    HEAP32[$22 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $13 | 0, $0 | 0);
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     $26 = ___cxa_find_matching_catch() | 0;
     $27 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
     $eh$lpad$body$i$index2Z2D = $27;
     $eh$lpad$body$i$indexZ2D = $26;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $32 = invoke_iiii(25, $12 | 0, 34808, 16) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    L24 : do if ($33 & 1) label = 20; else {
     __THREW__ = 0;
     invoke_vii(52, $32 | 0, (HEAP32[$6 >> 2] | 0) + 8 | 0);
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) label = 20; else {
      $39 = ___cxa_allocate_exception(40) | 0;
      $40 = HEAP32[$6 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(43, $1 | 0, $13 | 0);
      $41 = __THREW__;
      __THREW__ = 0;
      do if ($41 & 1) {
       $59 = ___cxa_find_matching_catch() | 0;
       $$012 = $59;
       $$0311 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $39 | 0, $40 + 24 | 0);
       $44 = __THREW__;
       __THREW__ = 0;
       if ($44 & 1) $$01 = 1; else {
        $46 = $39 + 12 | 0;
        $47 = $40 + 36 | 0;
        HEAP32[$46 + 0 >> 2] = HEAP32[$47 + 0 >> 2];
        HEAP32[$46 + 4 >> 2] = HEAP32[$47 + 4 >> 2];
        HEAP32[$46 + 8 >> 2] = HEAP32[$47 + 8 >> 2];
        HEAP32[$46 + 12 >> 2] = HEAP32[$47 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $39 + 28 | 0, $1 | 0);
        $49 = __THREW__;
        __THREW__ = 0;
        if ($49 & 1) {
         $51 = ___cxa_find_matching_catch() | 0;
         $52 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         $$012 = $51;
         $$0311 = $52;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $39 | 0, 48, 176);
        $53 = __THREW__;
        __THREW__ = 0;
        if ($53 & 1) $$01 = 0; else {}
       }
       $61 = ___cxa_find_matching_catch() | 0;
       $62 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       if ($$01) {
        $$012 = $61;
        $$0311 = $62;
       } else {
        $$1 = $61;
        $$14 = $62;
        break L24;
       }
      } while (0);
      ___cxa_free_exception($39 | 0);
      $$1 = $$012;
      $$14 = $$0311;
     }
    } while (0);
    if ((label | 0) == 20) {
     $57 = ___cxa_find_matching_catch() | 0;
     $$1 = $57;
     $$14 = tempRet0;
    }
    HEAP32[$ss >> 2] = 572;
    HEAP32[$11 >> 2] = 612;
    HEAP32[$12 >> 2] = 592;
    HEAP32[$13 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
    $$2 = $$1;
    $$25 = $$14;
    break L1;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
  label = 19;
 } while (0);
 if ((label | 0) == 19) {
  $$2 = $eh$lpad$body$indexZ2D;
  $$25 = $eh$lpad$body$index7Z2D;
 }
 $78 = $token_list + 8 | 0;
 if (!(HEAP32[$78 >> 2] | 0)) ___resumeException($$2 | 0);
 $82 = HEAP32[$token_list + 4 >> 2] | 0;
 $84 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
 $86 = HEAP32[$82 >> 2] | 0;
 HEAP32[$86 + 4 >> 2] = HEAP32[$84 >> 2];
 HEAP32[HEAP32[$84 >> 2] >> 2] = $86;
 HEAP32[$78 >> 2] = 0;
 if (($82 | 0) == ($token_list | 0)) ___resumeException($$2 | 0);
 $__f$01$i$i = $82;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($token_list | 0));
 ___resumeException($$2 | 0);
 return 0;
}

function __Z22jsonnet_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $str) {
 $agg$result = $agg$result | 0;
 $str = $str | 0;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $63 = 0, $64 = 0, $69 = 0, $8 = 0, $82 = 0, $84 = 0, $87 = 0, $89 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $i$0 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $1 = sp + 157 | 0;
 $2 = sp + 156 | 0;
 $ss = sp;
 $3 = $ss + 64 | 0;
 $4 = $ss + 8 | 0;
 HEAP32[$4 >> 2] = 592;
 $5 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$3 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $5 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $20;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 572;
 HEAP32[$3 >> 2] = 612;
 HEAP32[$4 >> 2] = 592;
 __THREW__ = 0;
 invoke_vi(177, $5 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 do if ($12 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $22;
 } else {
  HEAP32[$5 >> 2] = 904;
  $14 = $ss + 44 | 0;
  HEAP32[$14 + 0 >> 2] = 0;
  HEAP32[$14 + 4 >> 2] = 0;
  HEAP32[$14 + 8 >> 2] = 0;
  HEAP32[$14 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $5 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
   $eh$lpad$body$i$index2Z2D = $19;
   $eh$lpad$body$i$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  HEAP8[$2 >> 0] = 34;
  __THREW__ = 0;
  invoke_iiii(25, $4 | 0, $2 | 0, 1) | 0;
  $24 = __THREW__;
  __THREW__ = 0;
  if (!($24 & 1)) {
   $26 = $str + 1 | 0;
   $27 = $str + 8 | 0;
   $28 = $str + 4 | 0;
   $i$0 = 0;
   L12 : while (1) {
    $29 = HEAP8[$str >> 0] | 0;
    $31 = ($29 & 1) == 0;
    if ($31) $36 = ($29 & 255) >>> 1; else $36 = HEAP32[$28 >> 2] | 0;
    if ($i$0 >>> 0 >= $36 >>> 0) break;
    $39 = HEAP8[($31 ? $26 : HEAP32[$27 >> 2] | 0) + $i$0 >> 0] | 0;
    L19 : do switch ($39 << 24 >> 24 | 0) {
    case 92:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33728, 2) | 0;
      $47 = __THREW__;
      __THREW__ = 0;
      if ($47 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    case 34:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33720, 2) | 0;
      $45 = __THREW__;
      __THREW__ = 0;
      if ($45 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    case 12:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33744, 2) | 0;
      $51 = __THREW__;
      __THREW__ = 0;
      if ($51 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    case 10:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33752, 2) | 0;
      $53 = __THREW__;
      __THREW__ = 0;
      if ($53 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    case 13:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33760, 2) | 0;
      $55 = __THREW__;
      __THREW__ = 0;
      if ($55 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    case 8:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33736, 2) | 0;
      $49 = __THREW__;
      __THREW__ = 0;
      if ($49 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    case 0:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33776, 6) | 0;
      $59 = __THREW__;
      __THREW__ = 0;
      if ($59 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    case 9:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 33768, 2) | 0;
      $57 = __THREW__;
      __THREW__ = 0;
      if ($57 & 1) {
       label = 16;
       break L12;
      }
      break;
     }
    default:
     if ($39 << 24 >> 24 < 32 | $39 << 24 >> 24 == 127) {
      __THREW__ = 0;
      $63 = invoke_iiii(25, $4 | 0, 33784, 2) | 0;
      $64 = __THREW__;
      __THREW__ = 0;
      if ($64 & 1) {
       label = 16;
       break L12;
      }
      $69 = $63 + ((HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
      HEAP32[$69 >> 2] = HEAP32[$69 >> 2] & -75 | 8;
      HEAP32[$63 + ((HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) + 76) >> 2] = 48;
      HEAP32[$63 + ((HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) + 12) >> 2] = 4;
      __THREW__ = 0;
      invoke_iii(24, $63 | 0, $39 & 255 | 0) | 0;
      $82 = __THREW__;
      __THREW__ = 0;
      if ($82 & 1) {
       label = 16;
       break L12;
      } else break L19;
     } else {
      HEAP8[$1 >> 0] = $39;
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, $1 | 0, 1) | 0;
      $84 = __THREW__;
      __THREW__ = 0;
      if ($84 & 1) {
       label = 16;
       break L12;
      }
      break L19;
     }
    } while (0);
    $i$0 = $i$0 + 1 | 0;
   }
   if ((label | 0) == 16) {
    $41 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $41;
    $lpad$phi$index7 = tempRet0;
    HEAP32[$ss >> 2] = 572;
    HEAP32[$3 >> 2] = 612;
    HEAP32[$4 >> 2] = 592;
    HEAP32[$5 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
    ___resumeException($lpad$phi$index | 0);
   }
   HEAP8[$0 >> 0] = 34;
   __THREW__ = 0;
   invoke_iiii(25, $4 | 0, $0 | 0, 1) | 0;
   $87 = __THREW__;
   __THREW__ = 0;
   if (!($87 & 1)) {
    __THREW__ = 0;
    invoke_vii(43, $agg$result | 0, $5 | 0);
    $89 = __THREW__;
    __THREW__ = 0;
    if (!($89 & 1)) {
     HEAP32[$ss >> 2] = 572;
     HEAP32[$3 >> 2] = 612;
     HEAP32[$4 >> 2] = 592;
     HEAP32[$5 >> 2] = 904;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
     STACKTOP = sp;
     return;
    }
   }
  }
  $43 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $43;
  $lpad$phi$index7 = tempRet0;
  HEAP32[$ss >> 2] = 572;
  HEAP32[$3 >> 2] = 612;
  HEAP32[$4 >> 2] = 592;
  HEAP32[$5 >> 2] = 904;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($lpad$phi$index | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 ___resumeException($$01$i | 0);
}

function __ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm($this, $up_values, $self, $offset, $params, $body, $builtin) {
 $this = $this | 0;
 $up_values = $up_values | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $params = $params | 0;
 $body = $body | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i119$i$i = 0, $$0$i$i$i$i119$i$i$ph = 0, $$01 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$lcssa = 0, $$idx$val$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$pre$i$i = 0, $$pre$i$i$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $71 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $81 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa11 = 0, label = 0;
 HEAP32[$this >> 2] = 39952;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 16 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $this + 12 | 0;
 HEAP32[$0 >> 2] = $3;
 $$idx$val$i$i = HEAP32[$up_values >> 2] | 0;
 $4 = $up_values + 4 | 0;
 do if (($$idx$val$i$i | 0) != ($4 | 0)) {
  $10 = $$idx$val$i$i;
  $81 = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $6 = invoke_ii(67, 24) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   $12 = $10 + 16 | 0;
   $14 = HEAP32[$12 >> 2] | 0;
   $17 = HEAP32[$12 + 4 >> 2] | 0;
   $18 = $6 + 16 | 0;
   HEAP32[$18 >> 2] = $14;
   HEAP32[$18 + 4 >> 2] = $17;
   $22 = $14;
   $$pre$i$i$i$i$i$i = HEAP32[$3 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($3 | 0)) {
    $43 = $3;
    label = 13;
   } else {
    $24 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($24) {
     $$0$i$i$i$i$i$i$i$i = $3;
     while (1) {
      $29 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$29 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $29; else {
       $$cast$i$i$i$i$i$i$i$i$lcssa = $29;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $26 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$26) {
       $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $26;
     }
     $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $22 >>> 0) {
     $43 = $$01$i$i$i$i$i$i$i$i;
     label = 13;
    } else if ($24) {
     $$0$i$i$i$i119$i$i = $3;
     $47 = $3;
     label = 23;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $22 >>> 0) {
       $36 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$36) {
        $$0$i$i$i$i119$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa11 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $36;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $22 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 26;
        break;
       }
       $39 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
       $40 = HEAP32[$39 >> 2] | 0;
       if (!$40) {
        $$0$i$i$i$i119$i$i$ph = $39;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa11 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $40;
      }
      $__nd$0$i20$i$i$i$i$in$i$i = $__nd$0$i20$i$i$i$i$in$i$i$be;
     }
     if ((label | 0) == 22) {
      label = 0;
      $$0$i$i$i$i119$i$i = $$0$i$i$i$i119$i$i$ph;
      $47 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa11;
      label = 23;
      break;
     } else if ((label | 0) == 26) {
      label = 0;
      $55 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      label = 27;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 13) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i = $3;
     $47 = $3;
     label = 23;
    } else {
     $42 = $43 + 4 | 0;
     $$pre$i$i = HEAP32[$42 >> 2] | 0;
     if (!$$pre$i$i) {
      $$0$i$i$i$i119$i$i = $42;
      $47 = $43;
      label = 23;
     } else {
      $55 = $$pre$i$i;
      label = 27;
     }
    }
   }
   if ((label | 0) == 23) {
    label = 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = $47;
    HEAP32[$$0$i$i$i$i119$i$i >> 2] = $6;
    $49 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$49) $52 = $6; else {
     HEAP32[$0 >> 2] = $49;
     $52 = HEAP32[$$0$i$i$i$i119$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 >> 2] | 0, $52);
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
    $58 = $10;
   } else if ((label | 0) == 27) {
    label = 0;
    if (($55 | 0) == ($6 | 0)) $58 = $81; else {
     __ZdlPv($6);
     $58 = $81;
    }
   }
   $59 = HEAP32[$58 + 4 >> 2] | 0;
   if (!$59) {
    $$0$i$i$i$i$i = $58;
    while (1) {
     $64 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$64 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $64;
      break;
     } else $$0$i$i$i$i$i = $64;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $59;
    while (1) {
     $61 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$61) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $61;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($4 | 0)) {
    label = 37;
    break;
   } else {
    $10 = $$01$i$i$i$i$i;
    $81 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 37) break;
  $75 = ___cxa_find_matching_catch() | 0;
  $76 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$3 >> 2] | 0);
  $$0 = $76;
  $$01 = $75;
  ___resumeException($$01 | 0);
 } while (0);
 HEAP32[$this + 20 >> 2] = $self;
 HEAP32[$this + 24 >> 2] = $offset;
 __THREW__ = 0;
 invoke_vii(56, $this + 28 | 0, $params | 0);
 $71 = __THREW__;
 __THREW__ = 0;
 if (!($71 & 1)) {
  HEAP32[$this + 40 >> 2] = $body;
  HEAP32[$this + 44 >> 2] = $builtin;
  return;
 }
 $78 = ___cxa_find_matching_catch() | 0;
 $79 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$3 >> 2] | 0);
 $$0 = $79;
 $$01 = $78;
 ___resumeException($$01 | 0);
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$111 = 0, $$112 = 0, $$1210 = 0, $$129 = 0, $$byval_copy = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $61 = 0, $63 = 0, $66 = 0, $73 = 0, $74 = 0, $78 = 0, $81 = 0, $88 = 0, $89 = 0, $97 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 $$byval_copy = sp + 424 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 12 | 0;
 $__loc = sp + 8 | 0;
 $__neg = sp + 564 | 0;
 $0 = sp + 4 | 0;
 $__nbuf = sp + 464 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$111 = $33;
  $$129 = tempRet0;
  $106 = 189;
  $107 = $__wbuf;
  label = 47;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 47960) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($6 & 1) label = 11; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) label = 11; else {
    if ($11) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 48 >> 2] | 0, $5 | 0, 47664, 47674, $$byval_copy | 0) | 0;
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      label = 11;
      break;
     }
     $19 = HEAP32[$__wn >> 2] | 0;
     $20 = HEAP32[$__wb >> 2] | 0;
     $23 = $19 - $20 | 0;
     if (($23 | 0) > 392) {
      $27 = _malloc(($23 >> 2) + 2 | 0) | 0;
      if (!$27) {
       __THREW__ = 0;
       invoke_v(6);
       $29 = __THREW__;
       __THREW__ = 0;
       if ($29 & 1) {
        $31 = ___cxa_find_matching_catch() | 0;
        $$0 = $31;
        $$01 = tempRet0;
        break;
       } else {
        $39 = 0;
        $__nc$0 = 0;
       }
      } else {
       $39 = $27;
       $__nc$0 = $27;
      }
     } else {
      $39 = 0;
      $__nc$0 = $__nbuf;
     }
     if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
      HEAP8[$__nc$0 >> 0] = 45;
      $__nc$1 = $__nc$0 + 1 | 0;
     }
     $43 = $$byval_copy + 40 | 0;
     $44 = $$byval_copy;
     $46 = $19;
     $__nc$2 = $__nc$1;
     $__w$0 = $20;
     while (1) {
      if ($__w$0 >>> 0 >= $46 >>> 0) {
       $__nc$2$lcssa = $__nc$2;
       break;
      }
      $47 = HEAP32[$__w$0 >> 2] | 0;
      $$0$i = $$byval_copy;
      while (1) {
       if (($$0$i | 0) == ($43 | 0)) {
        $$0$lcssa$i = $43;
        break;
       }
       if ((HEAP32[$$0$i >> 2] | 0) == ($47 | 0)) {
        $$0$lcssa$i = $$0$i;
        break;
       }
       $$0$i = $$0$i + 4 | 0;
      }
      HEAP8[$__nc$2 >> 0] = HEAP8[47664 + ($$0$lcssa$i - $44 >> 2) >> 0] | 0;
      $46 = HEAP32[$__wn >> 2] | 0;
      $__nc$2 = $__nc$2 + 1 | 0;
      $__w$0 = $__w$0 + 4 | 0;
     }
     HEAP8[$__nc$2$lcssa >> 0] = 0;
     HEAP32[$vararg_buffer >> 2] = $__v;
     if ((_sscanf($__nbuf, 47600, $vararg_buffer) | 0) != 1) {
      __THREW__ = 0;
      invoke_vi(190, 47608);
      $61 = __THREW__;
      __THREW__ = 0;
      if ($61 & 1) {
       $37 = ___cxa_find_matching_catch() | 0;
       $38 = tempRet0;
       _free($39);
       $$0 = $37;
       $$01 = $38;
       break;
      }
     }
     _free($39);
    }
    $63 = HEAP32[$__b >> 2] | 0;
    do if (!$63) $112 = 1; else {
     $66 = HEAP32[$63 + 12 >> 2] | 0;
     if (($66 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $73 = invoke_ii(HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] | 0, $63 | 0) | 0;
      $74 = __THREW__;
      __THREW__ = 0;
      if ($74 & 1) {
       label = 11;
       break L4;
      } else $$0$i$i$i$i = $73;
     } else $$0$i$i$i$i = HEAP32[$66 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $112 = 1;
      break;
     } else {
      $112 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $78 = HEAP32[$__e >> 2] | 0;
    do if (!$78) label = 38; else {
     $81 = HEAP32[$78 + 12 >> 2] | 0;
     if (($81 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $88 = invoke_ii(HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] | 0, $78 | 0) | 0;
      $89 = __THREW__;
      __THREW__ = 0;
      if ($89 & 1) {
       label = 11;
       break L4;
      } else $$0$i$i1$i$i = $88;
     } else $$0$i$i1$i$i = HEAP32[$81 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 38;
      break;
     } else if ($112) break; else {
      label = 40;
      break;
     }
    } while (0);
    if ((label | 0) == 38) if ($112) label = 40;
    if ((label | 0) == 40) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $97 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($97) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $97 | 0);
     $100 = __THREW__;
     __THREW__ = 0;
     if ($100 & 1) {
      $102 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($102);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  if ((label | 0) == 11) {
   $35 = ___cxa_find_matching_catch() | 0;
   $$0 = $35;
   $$01 = tempRet0;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre6 = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre6) {
   $$112 = $$0;
   $$1210 = $$01;
  } else {
   $$111 = $$0;
   $$129 = $$01;
   $106 = HEAP32[$1 >> 2] | 0;
   $107 = $$pre6;
   label = 47;
  }
 }
 if ((label | 0) == 47) {
  __THREW__ = 0;
  invoke_vi($106 | 0, $107 | 0);
  $108 = __THREW__;
  __THREW__ = 0;
  if ($108 & 1) {
   $110 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($110);
  } else {
   $$112 = $$111;
   $$1210 = $$129;
  }
 }
 ___resumeException($$112 | 0);
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $108 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $5 = 0, $59 = 0, $6 = 0, $61 = 0, $71 = 0, $72 = 0, $75 = 0, $76 = 0, $77 = 0, $87 = 0, $88 = 0, $95 = 0, $98 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 24 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 12 | 0;
 $__loc = sp + 8 | 0;
 $__neg = sp + 134 | 0;
 $0 = sp + 4 | 0;
 $__atoms = sp + 124 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $32 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$112 = $32;
  $$1210 = tempRet0;
  $104 = 189;
  $105 = $__wbuf;
  label = 45;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 47968) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if ($6 & 1) label = 11; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) label = 11; else {
    if ($11) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] | 0, $5 | 0, 47584, 47594, $__atoms | 0) | 0;
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      label = 11;
      break;
     }
     $19 = HEAP32[$__wn >> 2] | 0;
     $20 = HEAP32[$__wb >> 2] | 0;
     $23 = $19 - $20 | 0;
     if (($23 | 0) > 98) {
      $26 = _malloc($23 + 2 | 0) | 0;
      if (!$26) {
       __THREW__ = 0;
       invoke_v(6);
       $28 = __THREW__;
       __THREW__ = 0;
       if ($28 & 1) {
        $30 = ___cxa_find_matching_catch() | 0;
        $$0 = $30;
        $$01 = tempRet0;
        break;
       } else {
        $38 = 0;
        $__nc$0 = 0;
       }
      } else {
       $38 = $26;
       $__nc$0 = $26;
      }
     } else {
      $38 = 0;
      $__nc$0 = $$byval_copy;
     }
     if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
      HEAP8[$__nc$0 >> 0] = 45;
      $__nc$1 = $__nc$0 + 1 | 0;
     }
     $42 = $__atoms + 10 | 0;
     $43 = $__atoms;
     $45 = $19;
     $__nc$2 = $__nc$1;
     $__w$0 = $20;
     while (1) {
      if ($__w$0 >>> 0 >= $45 >>> 0) {
       $__nc$2$lcssa = $__nc$2;
       break;
      }
      $46 = HEAP8[$__w$0 >> 0] | 0;
      $$0$i = $__atoms;
      while (1) {
       if (($$0$i | 0) == ($42 | 0)) {
        $$0$lcssa$i = $42;
        break;
       }
       if ((HEAP8[$$0$i >> 0] | 0) == $46 << 24 >> 24) {
        $$0$lcssa$i = $$0$i;
        break;
       }
       $$0$i = $$0$i + 1 | 0;
      }
      HEAP8[$__nc$2 >> 0] = HEAP8[47584 + ($$0$lcssa$i - $43) >> 0] | 0;
      $45 = HEAP32[$__wn >> 2] | 0;
      $__nc$2 = $__nc$2 + 1 | 0;
      $__w$0 = $__w$0 + 1 | 0;
     }
     HEAP8[$__nc$2$lcssa >> 0] = 0;
     HEAP32[$vararg_buffer >> 2] = $__v;
     if ((_sscanf($$byval_copy, 47600, $vararg_buffer) | 0) != 1) {
      __THREW__ = 0;
      invoke_vi(190, 47608);
      $59 = __THREW__;
      __THREW__ = 0;
      if ($59 & 1) {
       $36 = ___cxa_find_matching_catch() | 0;
       $37 = tempRet0;
       _free($38);
       $$0 = $36;
       $$01 = $37;
       break;
      }
     }
     _free($38);
    }
    $61 = HEAP32[$__b >> 2] | 0;
    do if (!$61) $75 = 0; else if ((HEAP32[$61 + 12 >> 2] | 0) == (HEAP32[$61 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $71 = invoke_ii(HEAP32[(HEAP32[$61 >> 2] | 0) + 36 >> 2] | 0, $61 | 0) | 0;
     $72 = __THREW__;
     __THREW__ = 0;
     if ($72 & 1) {
      label = 11;
      break L3;
     }
     if (($71 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $75 = 0;
      break;
     } else {
      $75 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $75 = $61; while (0);
    $76 = ($75 | 0) == 0;
    $77 = HEAP32[$__e >> 2] | 0;
    do if (!$77) label = 37; else {
     if ((HEAP32[$77 + 12 >> 2] | 0) == (HEAP32[$77 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $87 = invoke_ii(HEAP32[(HEAP32[$77 >> 2] | 0) + 36 >> 2] | 0, $77 | 0) | 0;
      $88 = __THREW__;
      __THREW__ = 0;
      if ($88 & 1) {
       label = 11;
       break L3;
      }
      if (($87 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 37;
       break;
      }
     }
     if (!$76) label = 38;
    } while (0);
    if ((label | 0) == 37) if ($76) label = 38;
    if ((label | 0) == 38) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $95 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($95) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $95 | 0);
     $98 = __THREW__;
     __THREW__ = 0;
     if ($98 & 1) {
      $100 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($100);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  if ((label | 0) == 11) {
   $34 = ___cxa_find_matching_catch() | 0;
   $$0 = $34;
   $$01 = tempRet0;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre7 = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre7) {
   $$113 = $$0;
   $$1211 = $$01;
  } else {
   $$112 = $$0;
   $$1210 = $$01;
   $104 = HEAP32[$1 >> 2] | 0;
   $105 = $$pre7;
   label = 45;
  }
 }
 if ((label | 0) == 45) {
  __THREW__ = 0;
  invoke_vi($104 | 0, $105 | 0);
  $106 = __THREW__;
  __THREW__ = 0;
  if ($106 & 1) {
   $108 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($108);
  } else {
   $$113 = $$112;
   $$1211 = $$1210;
  }
 }
 ___resumeException($$113 | 0);
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa135 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa128 = 0, $$1 = 0, $$1$lcssa = 0, $$1$lcssa121 = 0, $$1$lcssa122 = 0, $$2 = 0, $$lcssa = 0, $$lcssa142 = 0, $$lcssa147 = 0, $$lcssa154 = 0, $$pre80 = 0, $13 = 0, $14 = 0, $18 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $58 = 0, $60 = 0, $68 = 0, $72 = 0, $73 = 0, $74 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $84 = 0, $86 = 0, $91 = 0, $92 = 0, $97 = 0, $97$phi = 0, $98 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $save_state = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $fend$0 = $frm;
 while (1) {
  if (($fend$0 | 0) == ($frm_end | 0)) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  if (!(HEAP8[$fend$0 >> 0] | 0)) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $fend$0 = $fend$0 + 1 | 0;
 }
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $4 = $to_end;
 $5 = $this + 8 | 0;
 $$01 = $frm;
 $$02 = $to;
 $fend$1 = $fend$0$lcssa;
 while (1) {
  if (($$02 | 0) == ($to_end | 0) | ($$01 | 0) == ($frm_end | 0)) {
   $$01$lcssa = $$01;
   label = 50;
   break;
  }
  $8 = $st;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $save_state;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $18 = $fend$1;
  $25 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
  __THREW__ = 0;
  $26 = invoke_iiiiii(16, $$02 | 0, $frm_nxt | 0, $18 - $$01 | 0, $4 - $$02 >> 2 | 0, $st | 0) | 0;
  $27 = __THREW__;
  __THREW__ = 0;
  if ($27 & 1) {
   $$lcssa147 = $25;
   label = 11;
   break;
  }
  if ($25) {
   __THREW__ = 0;
   invoke_ii(72, $25 | 0) | 0;
   $30 = __THREW__;
   __THREW__ = 0;
   if ($30 & 1) {
    label = 10;
    break;
   }
  }
  if (!$26) {
   label = 52;
   break;
  } else if (($26 | 0) == -1) {
   $$01$lcssa135 = $$01;
   $$02$lcssa128 = $$02;
   $$lcssa142 = $18;
   label = 16;
   break;
  }
  $68 = (HEAP32[$to_nxt >> 2] | 0) + ($26 << 2) | 0;
  HEAP32[$to_nxt >> 2] = $68;
  if (($68 | 0) == ($to_end | 0)) {
   label = 34;
   break;
  }
  $$pre80 = HEAP32[$frm_nxt >> 2] | 0;
  if (($fend$1 | 0) == ($frm_end | 0)) {
   $$01$be = $$pre80;
   $$02$be = $68;
   $fend$1$be = $frm_end;
  } else {
   $72 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $73 = invoke_iiiii(15, $68 | 0, $$pre80 | 0, 1, $st | 0) | 0;
   $74 = __THREW__;
   __THREW__ = 0;
   if ($74 & 1) {
    $$lcssa154 = $72;
    label = 40;
    break;
   }
   if ($72) {
    __THREW__ = 0;
    invoke_ii(72, $72 | 0) | 0;
    $77 = __THREW__;
    __THREW__ = 0;
    if ($77 & 1) {
     label = 39;
     break;
    }
   }
   if ($73) {
    label = 52;
    break;
   }
   HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
   $91 = HEAP32[$frm_nxt >> 2] | 0;
   $92 = $91 + 1 | 0;
   HEAP32[$frm_nxt >> 2] = $92;
   $97 = $91;
   $fend$2 = $92;
   while (1) {
    if (($fend$2 | 0) == ($frm_end | 0)) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    if (!(HEAP8[$fend$2 >> 0] | 0)) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $97$phi = $fend$2;
     $fend$2 = $97 + 2 | 0;
     $97 = $97$phi;
    }
   }
   $$01$be = $92;
   $$02$be = HEAP32[$to_nxt >> 2] | 0;
   $fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;
  $$02 = $$02$be;
  $fend$1 = $fend$1$be;
 }
 do if ((label | 0) == 10) {
  $32 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($32);
 } else if ((label | 0) == 11) {
  $34 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa147) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa147 | 0) | 0;
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $39 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($39);
   }
  }
  ___resumeException($34 | 0);
 } else if ((label | 0) == 16) {
  $$1 = $$01$lcssa135;
  $storemerge = $$02$lcssa128;
  while (1) {
   HEAP32[$to_nxt >> 2] = $storemerge;
   if (($$1 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
    $$1$lcssa = $$1;
    label = 32;
    break;
   }
   $46 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $47 = invoke_iiiii(15, $storemerge | 0, $$1 | 0, $$lcssa142 - $$1 | 0, $save_state | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $$lcssa = $46;
    label = 22;
    break;
   }
   if ($46) {
    __THREW__ = 0;
    invoke_ii(72, $46 | 0) | 0;
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     label = 21;
     break;
    }
   }
   if (($47 | 0) == -1) {
    $$1$lcssa121 = $$1;
    label = 28;
    break;
   } else if (($47 | 0) == -2) {
    $$1$lcssa122 = $$1;
    label = 29;
    break;
   } else if (!$47) $$2 = $$1 + 1 | 0; else $$2 = $$1 + $47 | 0;
   $$1 = $$2;
   $storemerge = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
  }
  if ((label | 0) == 21) {
   $53 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($53);
  } else if ((label | 0) == 22) {
   $55 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa) {
    __THREW__ = 0;
    invoke_ii(72, $$lcssa | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     $60 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($60);
    }
   }
   ___resumeException($55 | 0);
  } else if ((label | 0) == 28) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa121;
   $$0 = 2;
   break;
  } else if ((label | 0) == 29) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa122;
   $$0 = 1;
   break;
  } else if ((label | 0) == 32) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa;
   $$0 = ($$1$lcssa | 0) != ($frm_end | 0) & 1;
   break;
  }
 } else if ((label | 0) == 34) {
  $98 = HEAP32[$frm_nxt >> 2] | 0;
  label = 51;
 } else if ((label | 0) == 39) {
  $79 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($79);
 } else if ((label | 0) == 40) {
  $81 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa154) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa154 | 0) | 0;
   $84 = __THREW__;
   __THREW__ = 0;
   if ($84 & 1) {
    $86 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($86);
   }
  }
  ___resumeException($81 | 0);
 } else if ((label | 0) == 50) {
  $98 = $$01$lcssa;
  label = 51;
 } else if ((label | 0) == 52) $$0 = 2; while (0);
 if ((label | 0) == 51) $$0 = ($98 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa99 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa92 = 0, $$1 = 0, $$1$lcssa = 0, $$lcssa = 0, $$lcssa104 = 0, $$lcssa111 = 0, $104 = 0, $104$phi = 0, $105 = 0, $13 = 0, $14 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $58 = 0, $60 = 0, $64 = 0, $67 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $83 = 0, $85 = 0, $94 = 0, $95 = 0, $98 = 0, $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $n$0 = 0, $p$0 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $tmp = sp + 8 | 0;
 $fend$0 = $frm;
 while (1) {
  if (($fend$0 | 0) == ($frm_end | 0)) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  if (!(HEAP32[$fend$0 >> 2] | 0)) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $fend$0 = $fend$0 + 4 | 0;
 }
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $4 = $to_end;
 $5 = $this + 8 | 0;
 $$01 = $frm;
 $$02 = $to;
 $fend$1 = $fend$0$lcssa;
 while (1) {
  if (($$02 | 0) == ($to_end | 0) | ($$01 | 0) == ($frm_end | 0)) {
   $$01$lcssa = $$01;
   label = 51;
   break;
  }
  $8 = $st;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $save_state;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $25 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
  __THREW__ = 0;
  $26 = invoke_iiiiii(15, $$02 | 0, $frm_nxt | 0, $fend$1 - $$01 >> 2 | 0, $4 - $$02 | 0, $st | 0) | 0;
  $27 = __THREW__;
  __THREW__ = 0;
  if ($27 & 1) {
   $$lcssa104 = $25;
   label = 11;
   break;
  }
  if ($25) {
   __THREW__ = 0;
   invoke_ii(72, $25 | 0) | 0;
   $30 = __THREW__;
   __THREW__ = 0;
   if ($30 & 1) {
    label = 10;
    break;
   }
  }
  if (!$26) {
   $$0$ph = 1;
   label = 53;
   break;
  } else if (($26 | 0) == -1) {
   $$01$lcssa99 = $$01;
   $$02$lcssa92 = $$02;
   label = 16;
   break;
  }
  $67 = (HEAP32[$to_nxt >> 2] | 0) + $26 | 0;
  HEAP32[$to_nxt >> 2] = $67;
  if (($67 | 0) == ($to_end | 0)) {
   label = 30;
   break;
  }
  if (($fend$1 | 0) == ($frm_end | 0)) {
   $$01$be = HEAP32[$frm_nxt >> 2] | 0;
   $$02$be = $67;
   $fend$1$be = $frm_end;
  } else {
   $71 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $72 = invoke_iiii(39, $tmp | 0, 0, $st | 0) | 0;
   $73 = __THREW__;
   __THREW__ = 0;
   if ($73 & 1) {
    $$lcssa111 = $71;
    label = 38;
    break;
   }
   if ($71) {
    __THREW__ = 0;
    invoke_ii(72, $71 | 0) | 0;
    $76 = __THREW__;
    __THREW__ = 0;
    if ($76 & 1) {
     label = 37;
     break;
    }
   }
   if (($72 | 0) == -1) {
    $$0$ph = 2;
    label = 53;
    break;
   }
   if ($72 >>> 0 > ($4 - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) {
    $$0$ph = 1;
    label = 53;
    break;
   }
   $n$0 = $72;
   $p$0 = $tmp;
   while (1) {
    if (!$n$0) break;
    $94 = HEAP8[$p$0 >> 0] | 0;
    $95 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $95 + 1;
    HEAP8[$95 >> 0] = $94;
    $n$0 = $n$0 + -1 | 0;
    $p$0 = $p$0 + 1 | 0;
   }
   $98 = HEAP32[$frm_nxt >> 2] | 0;
   $99 = $98 + 4 | 0;
   HEAP32[$frm_nxt >> 2] = $99;
   $104 = $98;
   $fend$2 = $99;
   while (1) {
    if (($fend$2 | 0) == ($frm_end | 0)) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    if (!(HEAP32[$fend$2 >> 2] | 0)) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $104$phi = $fend$2;
     $fend$2 = $104 + 8 | 0;
     $104 = $104$phi;
    }
   }
   $$01$be = $99;
   $$02$be = HEAP32[$to_nxt >> 2] | 0;
   $fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;
  $$02 = $$02$be;
  $fend$1 = $fend$1$be;
 }
 do if ((label | 0) == 10) {
  $32 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($32);
 } else if ((label | 0) == 11) {
  $34 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa104) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa104 | 0) | 0;
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $39 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($39);
   }
  }
  ___resumeException($34 | 0);
 } else if ((label | 0) == 16) {
  HEAP32[$to_nxt >> 2] = $$02$lcssa92;
  $$1 = $$01$lcssa99;
  $46 = $$02$lcssa92;
  while (1) {
   if (($$1 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
    $$1$lcssa = $$1;
    label = 28;
    break;
   }
   $43 = HEAP32[$$1 >> 2] | 0;
   $45 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $47 = invoke_iiii(39, $46 | 0, $43 | 0, $save_state | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $$lcssa = $45;
    label = 22;
    break;
   }
   if ($45) {
    __THREW__ = 0;
    invoke_ii(72, $45 | 0) | 0;
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     label = 21;
     break;
    }
   }
   if (($47 | 0) == -1) {
    $$1$lcssa = $$1;
    label = 28;
    break;
   }
   $64 = (HEAP32[$to_nxt >> 2] | 0) + $47 | 0;
   HEAP32[$to_nxt >> 2] = $64;
   $$1 = $$1 + 4 | 0;
   $46 = $64;
  }
  if ((label | 0) == 21) {
   $53 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($53);
  } else if ((label | 0) == 22) {
   $55 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa) {
    __THREW__ = 0;
    invoke_ii(72, $$lcssa | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     $60 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($60);
    }
   }
   ___resumeException($55 | 0);
  } else if ((label | 0) == 28) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa;
   $$0 = 2;
   break;
  }
 } else if ((label | 0) == 30) {
  $105 = HEAP32[$frm_nxt >> 2] | 0;
  label = 52;
 } else if ((label | 0) == 37) {
  $78 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($78);
 } else if ((label | 0) == 38) {
  $80 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa111) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa111 | 0) | 0;
   $83 = __THREW__;
   __THREW__ = 0;
   if ($83 & 1) {
    $85 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($85);
   }
  }
  ___resumeException($80 | 0);
 } else if ((label | 0) == 51) {
  $105 = $$01$lcssa;
  label = 52;
 } else if ((label | 0) == 53) $$0 = $$0$ph; while (0);
 if ((label | 0) == 52) $$0 = ($105 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $72 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp + 88 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 150 | 0;
 $__nb = sp + 84 | 0;
 $__o = sp + 92 | 0;
 $__op = sp + 80 | 0;
 $__oe = sp + 76 | 0;
 $0 = sp + 72 | 0;
 $1 = sp + 68 | 0;
 $2 = sp + 64 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 46680, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr12 = $vararg_buffer9 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr12 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr12 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $32 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) {
     $__nc$1 = $32;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $35 = HEAP32[$__nb >> 2] | 0;
   if ($35) {
    $40 = $35;
    $64 = $35;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(6);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $40 = $$pre;
    $64 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$127 = tempRet0;
  $$18 = $25;
 } else {
  $40 = HEAP32[$__nb >> 2] | 0;
  $64 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $39 = $40 + $__nc$2 | 0;
  $41 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40, $39, $__iob) | 0;
  if (($40 | 0) == ($__nar | 0)) {
   $52 = $__nar;
   $62 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $44 = _malloc($__nc$2 << 1) | 0;
   if (!$44) {
    __THREW__ = 0;
    invoke_v(6);
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $72 = 0;
     label = 19;
    } else {
     $52 = HEAP32[$__nb >> 2] | 0;
     $62 = 0;
     $__ob$0 = 0;
     label = 20;
    }
   } else {
    $52 = $40;
    $62 = $44;
    $__ob$0 = $44;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) {
    $72 = $62;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(42, $52 | 0, $41 | 0, $39 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $53 = __THREW__;
    __THREW__ = 0;
    if ($53 & 1) {
     $66 = ___cxa_find_matching_catch() | 0;
     $67 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $66;
     $$01 = $67;
     $69 = $62;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $57 = HEAP32[$__op >> 2] | 0;
    $58 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $57 | 0, $58 | 0, $__iob | 0, $__fl | 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     $72 = $62;
     label = 19;
    } else {
     $61 = HEAP32[$1 >> 2] | 0;
     HEAP32[$__s >> 2] = $61;
     HEAP32[$agg$result >> 2] = $61;
     _free($62);
     if ($62) {}
     _free($64);
     if ($64) {}
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $48 = ___cxa_find_matching_catch() | 0;
   $$0 = $48;
   $$01 = tempRet0;
   $69 = $72;
  }
  _free($69);
  if ($69) {}
  _free($64);
  if (!$64) {
   $$127 = $$01;
   $$18 = $$0;
  } else {
   $$127 = $$01;
   $$18 = $$0;
  }
 }
 ___resumeException($$18 | 0);
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $103 = 0, $108 = 0, $11 = 0, $118 = 0, $119 = 0, $122 = 0, $125 = 0, $126 = 0, $127 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $49 = 0, $51 = 0, $58 = 0, $6 = 0, $67 = 0, $69 = 0, $70 = 0, $77 = 0, $85 = 0, $87 = 0, $88 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i5 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $$byval_copy = sp + 468 | 0;
 $__loc = sp + 464 | 0;
 $__pat = sp + 472 | 0;
 $__dp = sp + 460 | 0;
 $__ts = sp + 456 | 0;
 $__grp = sp + 444 | 0;
 $__sym = sp + 432 | 0;
 $__sn = sp + 420 | 0;
 $__fd = sp + 416 | 0;
 $__mbuf = sp + 16 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 47960) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if ($2 & 1) label = 47; else {
  $4 = HEAP8[$__digits >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $11 = ($4 & 255) >>> 1; else $11 = HEAP32[$__digits + 4 >> 2] | 0;
  if (!$11) $31 = 0; else {
   if ($6) $17 = $__digits + 4 | 0; else $17 = HEAP32[$__digits + 8 >> 2] | 0;
   $16 = HEAP32[$17 >> 2] | 0;
   __THREW__ = 0;
   $21 = invoke_iii(HEAP32[(HEAP32[$1 >> 2] | 0) + 44 >> 2] | 0, $1 | 0, 45) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    label = 47;
    break;
   }
   $31 = ($16 | 0) == ($21 | 0);
  }
  $__i$0$i$i = 0;
  while (1) {
   if (($__i$0$i$i | 0) == 3) break;
   HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
   $__i$0$i$i = $__i$0$i$i + 1 | 0;
  }
  $__i$0$i$i3 = 0;
  while (1) {
   if (($__i$0$i$i3 | 0) == 3) break;
   HEAP32[$__sym + ($__i$0$i$i3 << 2) >> 2] = 0;
   $__i$0$i$i3 = $__i$0$i$i3 + 1 | 0;
  }
  $__i$0$i$i5 = 0;
  while (1) {
   if (($__i$0$i$i5 | 0) == 3) break;
   HEAP32[$__sn + ($__i$0$i$i5 << 2) >> 2] = 0;
   $__i$0$i$i5 = $__i$0$i$i5 + 1 | 0;
  }
  __THREW__ = 0;
  invoke_viiiiiiiiii(4, $__intl | 0, $31 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  L27 : do if ($32 & 1) {
   $99 = ___cxa_find_matching_catch() | 0;
   $$0 = $99;
   $$01 = tempRet0;
  } else {
   $34 = HEAP8[$__digits >> 0] | 0;
   $36 = ($34 & 1) == 0;
   if ($36) $42 = ($34 & 255) >>> 1; else $42 = HEAP32[$__digits + 4 >> 2] | 0;
   $41 = HEAP32[$__fd >> 2] | 0;
   if (($42 | 0) > ($41 | 0)) {
    if ($36) $49 = ($34 & 255) >>> 1; else $49 = HEAP32[$__digits + 4 >> 2] | 0;
    $51 = HEAP8[$__sn >> 0] | 0;
    if (!($51 & 1)) $67 = ($51 & 255) >>> 1; else $67 = HEAP32[$__sn + 4 >> 2] | 0;
    $58 = HEAP8[$__sym >> 0] | 0;
    if (!($58 & 1)) $69 = ($58 & 255) >>> 1; else $69 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $67 + ($49 - $41 << 1 | 1) + $69 | 0;
   } else {
    $70 = HEAP8[$__sn >> 0] | 0;
    if (!($70 & 1)) $85 = ($70 & 255) >>> 1; else $85 = HEAP32[$__sn + 4 >> 2] | 0;
    $77 = HEAP8[$__sym >> 0] | 0;
    if (!($77 & 1)) $87 = ($77 & 255) >>> 1; else $87 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $85 + 2 + $87 | 0;
   }
   $88 = $$pn + $41 | 0;
   do if ($88 >>> 0 > 100) {
    $91 = _malloc($88 << 2) | 0;
    if (!$91) {
     __THREW__ = 0;
     invoke_v(6);
     $93 = __THREW__;
     __THREW__ = 0;
     if ($93 & 1) {
      $95 = ___cxa_find_matching_catch() | 0;
      $$0 = $95;
      $$01 = tempRet0;
      break L27;
     } else {
      $103 = 0;
      $108 = HEAP8[$__digits >> 0] | 0;
      $__mb$0 = 0;
      break;
     }
    } else {
     $103 = $91;
     $108 = $34;
     $__mb$0 = $91;
    }
   } else {
    $103 = 0;
    $108 = $34;
    $__mb$0 = $__mbuf;
   } while (0);
   if (!($108 & 1)) {
    $118 = $__digits + 4 | 0;
    $119 = ($108 & 255) >>> 1;
   } else {
    $118 = HEAP32[$__digits + 8 >> 2] | 0;
    $119 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $118 | 0, $118 + ($119 << 2) | 0, $1 | 0, $31 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $41 | 0);
   $122 = __THREW__;
   __THREW__ = 0;
   if (!($122 & 1)) {
    HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
    $125 = HEAP32[$__mi >> 2] | 0;
    $126 = HEAP32[$__me >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(45, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $125 | 0, $126 | 0, $__iob | 0, $__fl | 0);
    $127 = __THREW__;
    __THREW__ = 0;
    if (!($127 & 1)) {
     if ($103) _free($103);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
     STACKTOP = sp;
     return;
    }
   }
   $101 = ___cxa_find_matching_catch() | 0;
   $102 = tempRet0;
   if (!$103) {
    $$0 = $101;
    $$01 = $102;
   } else {
    _free($103);
    $$0 = $101;
    $$01 = $102;
   }
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
 } while (0);
 if ((label | 0) == 47) {
  $97 = ___cxa_find_matching_catch() | 0;
  $$1 = $97;
  $$12 = tempRet0;
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($$1 | 0);
}

function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $123 = 0, $13 = 0, $135 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $60 = 0, $63 = 0, $73 = 0, $76 = 0, $86 = 0, $87 = 0, $89 = 0, $91 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa40 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $147 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $147 = 1;
   break;
  } else {
   $147 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($147) {
   $148 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($147) label = 16; else {
  $148 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i) | 0)) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $$01 = 0;
   break;
  }
  $49 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24;
  $50 = HEAP32[$__b >> 2] | 0;
  $51 = $50 + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  if (($52 | 0) == (HEAP32[$50 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$50 >> 2] | 0) + 40 >> 2] & 127]($50) | 0; else HEAP32[$51 >> 2] = $52 + 4;
  $$0$in = $__n;
  $$pre$i3$i$i10 = $148;
  $73 = $148;
  $__r$0$in = $49;
  while (1) {
   $__r$0 = $__r$0$in + -48 | 0;
   $$0 = $$0$in + -1 | 0;
   $60 = HEAP32[$__b >> 2] | 0;
   do if (!$60) $87 = 1; else {
    $63 = HEAP32[$60 + 12 >> 2] | 0;
    if (($63 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) $$0$i$i$i$i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0; else $$0$i$i$i$i2 = HEAP32[$63 >> 2] | 0;
    if (($$0$i$i$i$i2 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $87 = 1;
     break;
    } else {
     $87 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$73) {
    $$pre$i3$i$i25 = $$pre$i3$i$i10;
    $149 = 0;
    $86 = 1;
   } else {
    $76 = HEAP32[$73 + 12 >> 2] | 0;
    if (($76 | 0) == (HEAP32[$73 + 16 >> 2] | 0)) $$0$i$i1$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 127]($73) | 0; else $$0$i$i1$i$i8 = HEAP32[$76 >> 2] | 0;
    if (($$0$i$i1$i$i8 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i25 = 0;
     $149 = 0;
     $86 = 1;
     break;
    } else {
     $$pre$i3$i$i25 = $$pre$i3$i$i10;
     $149 = $$pre$i3$i$i10;
     $86 = ($$pre$i3$i$i10 | 0) == 0;
     break;
    }
   } while (0);
   $89 = HEAP32[$__b >> 2] | 0;
   if (!(($$0$in | 0) > 1 & ($87 ^ $86))) {
    $$lcssa = $89;
    $$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;
    $__r$0$lcssa = $__r$0;
    break;
   }
   $91 = HEAP32[$89 + 12 >> 2] | 0;
   if (($91 | 0) == (HEAP32[$89 + 16 >> 2] | 0)) $$0$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] & 127]($89) | 0; else $$0$i$i14 = HEAP32[$91 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i14) | 0)) {
    $__r$0$lcssa40 = $__r$0;
    label = 65;
    break;
   }
   $110 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i14, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
   $111 = HEAP32[$__b >> 2] | 0;
   $112 = $111 + 12 | 0;
   $113 = HEAP32[$112 >> 2] | 0;
   if (($113 | 0) == (HEAP32[$111 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$111 >> 2] | 0) + 40 >> 2] & 127]($111) | 0; else HEAP32[$112 >> 2] = $113 + 4;
   $$0$in = $$0;
   $$pre$i3$i$i10 = $$pre$i3$i$i25;
   $73 = $149;
   $__r$0$in = $110;
  }
  if ((label | 0) == 65) {
   $$01 = $__r$0$lcssa40;
   break;
  }
  do if (!$$lcssa) $150 = 1; else {
   $123 = HEAP32[$$lcssa + 12 >> 2] | 0;
   if (($123 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0; else $$0$i$i$i$i17 = HEAP32[$123 >> 2] | 0;
   if (($$0$i$i$i$i17 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $150 = 1;
    break;
   } else {
    $150 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i25$lcssa) label = 62; else {
   $135 = HEAP32[$$pre$i3$i$i25$lcssa + 12 >> 2] | 0;
   if (($135 | 0) == (HEAP32[$$pre$i3$i$i25$lcssa + 16 >> 2] | 0)) $$0$i$i1$i$i23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i25$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i25$lcssa) | 0; else $$0$i$i1$i$i23 = HEAP32[$135 >> 2] | 0;
   if (($$0$i$i1$i$i23 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 62;
    break;
   } else if ($150) {
    $$01 = $__r$0$lcssa;
    break L22;
   } else break;
  } while (0);
  if ((label | 0) == 62) if (!$150) {
   $$01 = $__r$0$lcssa;
   break;
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
  $$01 = $__r$0$lcssa;
 } while (0);
 return $$01 | 0;
}

function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $124 = 0, $125 = 0, $134 = 0, $139 = 0, $143 = 0, $149 = 0, $159 = 0, $168 = 0, $2 = 0, $20 = 0, $3 = 0, $33 = 0, $35 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $91 = 0, $96 = 0, $98 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $newp$0 = 0, $storemerge = 0, $storemerge21 = 0;
 $0 = $p + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 & -8;
 $3 = $p + $2 | 0;
 $4 = HEAP32[10520] | 0;
 $5 = $1 & 3;
 if (!(($5 | 0) != 1 & $p >>> 0 >= $4 >>> 0 & $p >>> 0 < $3 >>> 0)) _abort();
 $7 = $p + ($2 | 4) | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!($8 & 1)) _abort();
 if (!$5) {
  if ($nb >>> 0 < 256) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  if ($2 >>> 0 >= ($nb + 4 | 0) >>> 0) if (($2 - $nb | 0) >>> 0 <= HEAP32[10636] << 1 >>> 0) {
   $newp$0 = $p;
   return $newp$0 | 0;
  }
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 if ($2 >>> 0 >= $nb >>> 0) {
  $20 = $2 - $nb | 0;
  if ($20 >>> 0 <= 15) {
   $newp$0 = $p;
   return $newp$0 | 0;
  }
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $20 | 3;
  HEAP32[$7 >> 2] = HEAP32[$7 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $20);
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[10522] | 0)) {
  $33 = (HEAP32[10519] | 0) + $2 | 0;
  if ($33 >>> 0 <= $nb >>> 0) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  $35 = $33 - $nb | 0;
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $35 | 1;
  HEAP32[10522] = $p + $nb;
  HEAP32[10519] = $35;
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[10521] | 0)) {
  $45 = (HEAP32[10518] | 0) + $2 | 0;
  if ($45 >>> 0 < $nb >>> 0) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  $47 = $45 - $nb | 0;
  if ($47 >>> 0 > 15) {
   HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
   HEAP32[$p + ($nb + 4) >> 2] = $47 | 1;
   HEAP32[$p + $45 >> 2] = $47;
   $56 = $p + ($45 + 4) | 0;
   HEAP32[$56 >> 2] = HEAP32[$56 >> 2] & -2;
   $storemerge = $p + $nb | 0;
   $storemerge21 = $47;
  } else {
   HEAP32[$0 >> 2] = $1 & 1 | $45 | 2;
   $62 = $p + ($45 + 4) | 0;
   HEAP32[$62 >> 2] = HEAP32[$62 >> 2] | 1;
   $storemerge = 0;
   $storemerge21 = 0;
  }
  HEAP32[10518] = $storemerge21;
  HEAP32[10521] = $storemerge;
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if ($8 & 2) {
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 $68 = ($8 & -8) + $2 | 0;
 if ($68 >>> 0 < $nb >>> 0) {
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 $70 = $68 - $nb | 0;
 $71 = $8 >>> 3;
 do if ($8 >>> 0 < 256) {
  $74 = HEAP32[$p + ($2 + 8) >> 2] | 0;
  $76 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  $78 = 42104 + ($71 << 1 << 2) | 0;
  if (($74 | 0) != ($78 | 0)) {
   if ($74 >>> 0 < $4 >>> 0) _abort();
   if ((HEAP32[$74 + 12 >> 2] | 0) != ($3 | 0)) _abort();
  }
  if (($76 | 0) == ($74 | 0)) {
   HEAP32[10516] = HEAP32[10516] & ~(1 << $71);
   break;
  }
  if (($76 | 0) == ($78 | 0)) $$pre$phiZ2D = $76 + 8 | 0; else {
   if ($76 >>> 0 < $4 >>> 0) _abort();
   $91 = $76 + 8 | 0;
   if ((HEAP32[$91 >> 2] | 0) == ($3 | 0)) $$pre$phiZ2D = $91; else _abort();
  }
  HEAP32[$74 + 12 >> 2] = $76;
  HEAP32[$$pre$phiZ2D >> 2] = $74;
 } else {
  $96 = HEAP32[$p + ($2 + 24) >> 2] | 0;
  $98 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  do if (($98 | 0) == ($3 | 0)) {
   $109 = $p + ($2 + 20) | 0;
   $110 = HEAP32[$109 >> 2] | 0;
   if (!$110) {
    $112 = $p + ($2 + 16) | 0;
    $113 = HEAP32[$112 >> 2] | 0;
    if (!$113) {
     $R$1 = 0;
     break;
    } else {
     $R$0$ph = $113;
     $RP$0$ph = $112;
    }
   } else {
    $R$0$ph = $110;
    $RP$0$ph = $109;
   }
   $R$0 = $R$0$ph;
   $RP$0 = $RP$0$ph;
   while (1) {
    $115 = $R$0 + 20 | 0;
    $116 = HEAP32[$115 >> 2] | 0;
    if (!$116) {
     $118 = $R$0 + 16 | 0;
     $119 = HEAP32[$118 >> 2] | 0;
     if (!$119) {
      $R$0$lcssa = $R$0;
      $RP$0$lcssa = $RP$0;
      break;
     } else {
      $R$0$be = $119;
      $RP$0$be = $118;
     }
    } else {
     $R$0$be = $116;
     $RP$0$be = $115;
    }
    $R$0 = $R$0$be;
    $RP$0 = $RP$0$be;
   }
   if ($RP$0$lcssa >>> 0 < $4 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $101 = HEAP32[$p + ($2 + 8) >> 2] | 0;
   if ($101 >>> 0 < $4 >>> 0) _abort();
   $103 = $101 + 12 | 0;
   if ((HEAP32[$103 >> 2] | 0) != ($3 | 0)) _abort();
   $106 = $98 + 8 | 0;
   if ((HEAP32[$106 >> 2] | 0) == ($3 | 0)) {
    HEAP32[$103 >> 2] = $98;
    HEAP32[$106 >> 2] = $101;
    $R$1 = $98;
    break;
   } else _abort();
  } while (0);
  if ($96) {
   $124 = HEAP32[$p + ($2 + 28) >> 2] | 0;
   $125 = 42368 + ($124 << 2) | 0;
   if (($3 | 0) == (HEAP32[$125 >> 2] | 0)) {
    HEAP32[$125 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[10517] = HEAP32[10517] & ~(1 << $124);
     break;
    }
   } else {
    if ($96 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort();
    $134 = $96 + 16 | 0;
    if ((HEAP32[$134 >> 2] | 0) == ($3 | 0)) HEAP32[$134 >> 2] = $R$1; else HEAP32[$96 + 20 >> 2] = $R$1;
    if (!$R$1) break;
   }
   $139 = HEAP32[10520] | 0;
   if ($R$1 >>> 0 < $139 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $96;
   $143 = HEAP32[$p + ($2 + 16) >> 2] | 0;
   do if ($143) if ($143 >>> 0 < $139 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $143;
    HEAP32[$143 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $149 = HEAP32[$p + ($2 + 20) >> 2] | 0;
   if ($149) if ($149 >>> 0 < (HEAP32[10520] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $149;
    HEAP32[$149 + 24 >> 2] = $R$1;
    break;
   }
  }
 } while (0);
 if ($70 >>> 0 < 16) {
  HEAP32[$0 >> 2] = $68 | $1 & 1 | 2;
  $159 = $p + ($68 | 4) | 0;
  HEAP32[$159 >> 2] = HEAP32[$159 >> 2] | 1;
  $newp$0 = $p;
  return $newp$0 | 0;
 } else {
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $70 | 3;
  $168 = $p + ($68 | 4) | 0;
  HEAP32[$168 >> 2] = HEAP32[$168 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $70);
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 return 0;
}

function _fmod($x, $y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa49 = 0, $$lcssa51 = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $106 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $115 = 0, $118 = 0, $12 = 0, $120 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $146 = 0, $149 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $2 = 0, $23 = 0.0, $25 = 0, $26 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $45 = 0, $46 = 0, $55 = 0, $6 = 0, $60 = 0, $61 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $78 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $93 = 0, $94 = 0, $96 = 0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $6 = $4 & 2047;
 $7 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
 $12 = tempRet0;
 if (!(($11 | 0) == 0 & ($12 | 0) == 0)) {
  $16 = $3 & 2147483647;
  if (!($16 >>> 0 > 2146435072 | ($16 | 0) == 2146435072 & $2 >>> 0 > 0 | ($6 | 0) == 2047)) {
   $25 = _bitshift64Shl($0 | 0, $1 | 0, 1) | 0;
   $26 = tempRet0;
   if (!($26 >>> 0 > $12 >>> 0 | ($26 | 0) == ($12 | 0) & $25 >>> 0 > $11 >>> 0)) {
    if (!(($25 | 0) == ($11 | 0) & ($26 | 0) == ($12 | 0))) {
     $$0 = $x;
     return +$$0;
    }
    $$0 = $x * 0.0;
    return +$$0;
   }
   if (!$6) {
    $37 = _bitshift64Shl($0 | 0, $1 | 0, 12) | 0;
    $38 = tempRet0;
    if (($38 | 0) > -1 | ($38 | 0) == -1 & $37 >>> 0 > 4294967295) {
     $45 = $37;
     $46 = $38;
     $ex$026 = 0;
     while (1) {
      $44 = $ex$026 + -1 | 0;
      $45 = _bitshift64Shl($45 | 0, $46 | 0, 1) | 0;
      $46 = tempRet0;
      if (!(($46 | 0) > -1 | ($46 | 0) == -1 & $45 >>> 0 > 4294967295)) {
       $$lcssa55 = $44;
       break;
      } else $ex$026 = $44;
     }
     $ex$0$lcssa = $$lcssa55;
    } else $ex$0$lcssa = 0;
    $55 = _bitshift64Shl($0 | 0, $1 | 0, 1 - $ex$0$lcssa | 0) | 0;
    $83 = $55;
    $84 = tempRet0;
    $ex$1 = $ex$0$lcssa;
   } else {
    $83 = $0;
    $84 = $1 & 1048575 | 1048576;
    $ex$1 = $6;
   }
   if (!$9) {
    $60 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $61 = tempRet0;
    if (($61 | 0) > -1 | ($61 | 0) == -1 & $60 >>> 0 > 4294967295) {
     $68 = $60;
     $69 = $61;
     $ey$020 = 0;
     while (1) {
      $67 = $ey$020 + -1 | 0;
      $68 = _bitshift64Shl($68 | 0, $69 | 0, 1) | 0;
      $69 = tempRet0;
      if (!(($69 | 0) > -1 | ($69 | 0) == -1 & $68 >>> 0 > 4294967295)) {
       $$lcssa54 = $67;
       break;
      } else $ey$020 = $67;
     }
     $ey$0$lcssa = $$lcssa54;
    } else $ey$0$lcssa = 0;
    $78 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $ey$0$lcssa | 0) | 0;
    $85 = $78;
    $86 = tempRet0;
    $ey$1$ph = $ey$0$lcssa;
   } else {
    $85 = $2;
    $86 = $3 & 1048575 | 1048576;
    $ey$1$ph = $9;
   }
   $87 = _i64Subtract($83 | 0, $84 | 0, $85 | 0, $86 | 0) | 0;
   $88 = tempRet0;
   $93 = ($88 | 0) > -1 | ($88 | 0) == -1 & $87 >>> 0 > 4294967295;
   do if (($ex$1 | 0) > ($ey$1$ph | 0)) {
    $154 = $93;
    $155 = $87;
    $156 = $88;
    $94 = $83;
    $96 = $84;
    $ex$212 = $ex$1;
    while (1) {
     if ($154) if (($94 | 0) == ($85 | 0) & ($96 | 0) == ($86 | 0)) break; else {
      $100 = $155;
      $101 = $156;
     } else {
      $100 = $94;
      $101 = $96;
     }
     $102 = _bitshift64Shl($100 | 0, $101 | 0, 1) | 0;
     $103 = tempRet0;
     $104 = $ex$212 + -1 | 0;
     $106 = _i64Subtract($102 | 0, $103 | 0, $85 | 0, $86 | 0) | 0;
     $107 = tempRet0;
     $112 = ($107 | 0) > -1 | ($107 | 0) == -1 & $106 >>> 0 > 4294967295;
     if (($104 | 0) > ($ey$1$ph | 0)) {
      $154 = $112;
      $155 = $106;
      $156 = $107;
      $94 = $102;
      $96 = $103;
      $ex$212 = $104;
     } else {
      $$lcssa51 = $104;
      $$lcssa53 = $112;
      $157 = $106;
      $158 = $107;
      $159 = $102;
      $160 = $103;
      label = 27;
      break;
     }
    }
    if ((label | 0) == 27) {
     $$lcssa7 = $$lcssa53;
     $113 = $159;
     $115 = $160;
     $152 = $157;
     $153 = $158;
     $ex$2$lcssa = $$lcssa51;
     break;
    }
    $$0 = $x * 0.0;
    return +$$0;
   } else {
    $$lcssa7 = $93;
    $113 = $83;
    $115 = $84;
    $152 = $87;
    $153 = $88;
    $ex$2$lcssa = $ex$1;
   } while (0);
   if ($$lcssa7) if (($113 | 0) == ($85 | 0) & ($115 | 0) == ($86 | 0)) {
    $$0 = $x * 0.0;
    return +$$0;
   } else {
    $118 = $153;
    $120 = $152;
   } else {
    $118 = $115;
    $120 = $113;
   }
   if ($118 >>> 0 < 1048576 | ($118 | 0) == 1048576 & $120 >>> 0 < 0) {
    $126 = $120;
    $127 = $118;
    $ex$39 = $ex$2$lcssa;
    while (1) {
     $128 = _bitshift64Shl($126 | 0, $127 | 0, 1) | 0;
     $129 = tempRet0;
     $130 = $ex$39 + -1 | 0;
     if ($129 >>> 0 < 1048576 | ($129 | 0) == 1048576 & $128 >>> 0 < 0) {
      $126 = $128;
      $127 = $129;
      $ex$39 = $130;
     } else {
      $$lcssa49 = $130;
      $161 = $128;
      $162 = $129;
      break;
     }
    }
    $137 = $161;
    $138 = $162;
    $ex$3$lcssa = $$lcssa49;
   } else {
    $137 = $120;
    $138 = $118;
    $ex$3$lcssa = $ex$2$lcssa;
   }
   if (($ex$3$lcssa | 0) > 0) {
    $139 = _i64Add($137 | 0, $138 | 0, 0, -1048576) | 0;
    $140 = tempRet0;
    $141 = _bitshift64Shl($ex$3$lcssa | 0, 0, 52) | 0;
    $149 = $140 | tempRet0;
    $151 = $139 | $141;
   } else {
    $146 = _bitshift64Lshr($137 | 0, $138 | 0, 1 - $ex$3$lcssa | 0) | 0;
    $149 = tempRet0;
    $151 = $146;
   }
   HEAP32[tempDoublePtr >> 2] = $151;
   HEAP32[tempDoublePtr + 4 >> 2] = $149 | $10;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
   return +$$0;
  }
 }
 $23 = $x * $y;
 $$0 = $23 / $23;
 return +$$0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $68 = 0, $70 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $$byval_copy = sp + 316 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 320 | 0;
 $__nb = sp + 312 | 0;
 $__o = sp + 84 | 0;
 $__op = sp + 80 | 0;
 $__oe = sp + 76 | 0;
 $0 = sp + 72 | 0;
 $1 = sp + 68 | 0;
 $2 = sp + 64 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 46680, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr12 = $vararg_buffer9 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr12 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr12 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $32 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) {
     $__nc$1 = $32;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $35 = HEAP32[$__nb >> 2] | 0;
   if ($35) {
    $40 = $35;
    $64 = $35;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(6);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $40 = $$pre;
    $64 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$125 = tempRet0;
  $$16 = $25;
 } else {
  $40 = HEAP32[$__nb >> 2] | 0;
  $64 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $39 = $40 + $__nc$2 | 0;
  $41 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40, $39, $__iob) | 0;
  if (($40 | 0) == ($__nar | 0)) {
   $52 = $__nar;
   $62 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $44 = _malloc($__nc$2 << 3) | 0;
   if (!$44) {
    __THREW__ = 0;
    invoke_v(6);
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $70 = 0;
     label = 19;
    } else {
     $52 = HEAP32[$__nb >> 2] | 0;
     $62 = $44;
     $__ob$0 = $44;
     label = 20;
    }
   } else {
    $52 = $40;
    $62 = $44;
    $__ob$0 = $44;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) {
    $70 = $62;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(44, $52 | 0, $41 | 0, $39 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $53 = __THREW__;
    __THREW__ = 0;
    if ($53 & 1) {
     $65 = ___cxa_find_matching_catch() | 0;
     $66 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $65;
     $$01 = $66;
     $68 = $62;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $57 = HEAP32[$__op >> 2] | 0;
    $58 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(45, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $57 | 0, $58 | 0, $__iob | 0, $__fl | 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     $70 = $62;
     label = 19;
    } else {
     $61 = HEAP32[$1 >> 2] | 0;
     HEAP32[$__s >> 2] = $61;
     HEAP32[$agg$result >> 2] = $61;
     if ($62) _free($62);
     _free($64);
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $48 = ___cxa_find_matching_catch() | 0;
   $$0 = $48;
   $$01 = tempRet0;
   $68 = $70;
  }
  if ($68) _free($68);
  _free($64);
  $$125 = $$01;
  $$16 = $$0;
 }
 ___resumeException($$16 | 0);
}

function __ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $tok, $while_) {
 $agg$result = $agg$result | 0;
 $tok = $tok | 0;
 $while_ = $while_ | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $46 = 0, $47 = 0, $48 = 0, $50 = 0, $53 = 0, $55 = 0, $56 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $64 = 0, $7 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $0 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 $2 = $ss + 64 | 0;
 $3 = $ss + 8 | 0;
 HEAP32[$3 >> 2] = 592;
 $4 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$2 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $4 | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $19;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 572;
 HEAP32[$2 >> 2] = 612;
 HEAP32[$3 >> 2] = 592;
 __THREW__ = 0;
 invoke_vi(177, $4 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $21 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $21;
 } else {
  HEAP32[$4 >> 2] = 904;
  $13 = $ss + 44 | 0;
  HEAP32[$13 + 0 >> 2] = 0;
  HEAP32[$13 + 4 >> 2] = 0;
  HEAP32[$13 + 8 >> 2] = 0;
  HEAP32[$13 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $4 | 0, $0 | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  if ($15 & 1) {
   $17 = ___cxa_find_matching_catch() | 0;
   $18 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
   $eh$lpad$body$i$index2Z2D = $18;
   $eh$lpad$body$i$indexZ2D = $17;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  __THREW__ = 0;
  $23 = invoke_iiii(25, $3 | 0, 35688, 12) | 0;
  $24 = __THREW__;
  __THREW__ = 0;
  if (!($24 & 1)) {
   __THREW__ = 0;
   $27 = invoke_ii(69, HEAP32[$tok >> 2] | 0) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    $30 = _strlen($27 | 0) | 0;
    __THREW__ = 0;
    invoke_iiii(25, $23 | 0, $27 | 0, $30 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     __THREW__ = 0;
     $33 = invoke_iiii(25, $23 | 0, 35704, 7) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if (!($34 & 1)) {
      $36 = HEAP8[$while_ >> 0] | 0;
      if (!($36 & 1)) {
       $46 = $while_ + 1 | 0;
       $47 = ($36 & 255) >>> 1;
      } else {
       $46 = HEAP32[$while_ + 8 >> 2] | 0;
       $47 = HEAP32[$while_ + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, $46 | 0, $47 | 0) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if (!($48 & 1)) {
       __THREW__ = 0;
       invoke_vii(43, $1 | 0, $4 | 0);
       $50 = __THREW__;
       __THREW__ = 0;
       if (!($50 & 1)) {
        __THREW__ = 0;
        invoke_vii(40, $agg$result | 0, $tok + 16 | 0);
        $53 = __THREW__;
        __THREW__ = 0;
        do if ($53 & 1) {
         $64 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body$index7Z2D = tempRet0;
         $eh$lpad$body$indexZ2D = $64;
        } else {
         $55 = $agg$result + 12 | 0;
         $56 = $tok + 28 | 0;
         HEAP32[$55 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
         HEAP32[$55 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
         HEAP32[$55 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
         HEAP32[$55 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $agg$result + 28 | 0, $1 | 0);
         $58 = __THREW__;
         __THREW__ = 0;
         if ($58 & 1) {
          $60 = ___cxa_find_matching_catch() | 0;
          $61 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
          $eh$lpad$body$index7Z2D = $61;
          $eh$lpad$body$indexZ2D = $60;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
          HEAP32[$ss >> 2] = 572;
          HEAP32[$2 >> 2] = 612;
          HEAP32[$3 >> 2] = 592;
          HEAP32[$4 >> 2] = 904;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
          STACKTOP = sp;
          return;
         }
        } while (0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        $$0 = $eh$lpad$body$indexZ2D;
        $$01 = $eh$lpad$body$index7Z2D;
        HEAP32[$ss >> 2] = 572;
        HEAP32[$2 >> 2] = 612;
        HEAP32[$3 >> 2] = 592;
        HEAP32[$4 >> 2] = 904;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
        ___resumeException($$0 | 0);
       }
      }
     }
    }
   }
  }
  $62 = ___cxa_find_matching_catch() | 0;
  $$0 = $62;
  $$01 = tempRet0;
  HEAP32[$ss >> 2] = 572;
  HEAP32[$2 >> 2] = 612;
  HEAP32[$3 >> 2] = 592;
  HEAP32[$4 >> 2] = 904;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$0 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 ___resumeException($$01$i | 0);
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $102 = 0, $106 = 0, $11 = 0, $116 = 0, $117 = 0, $120 = 0, $123 = 0, $124 = 0, $125 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $49 = 0, $51 = 0, $58 = 0, $6 = 0, $67 = 0, $69 = 0, $70 = 0, $77 = 0, $85 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $98 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 56 | 0;
 $__loc = sp + 52 | 0;
 $__pat = sp + 164 | 0;
 $__dp = sp + 161 | 0;
 $__ts = sp + 160 | 0;
 $__grp = sp + 40 | 0;
 $__sym = sp + 28 | 0;
 $__sn = sp + 16 | 0;
 $__fd = sp + 12 | 0;
 $__mbuf = sp + 60 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 47968) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if ($2 & 1) label = 47; else {
  $4 = HEAP8[$__digits >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $11 = ($4 & 255) >>> 1; else $11 = HEAP32[$__digits + 4 >> 2] | 0;
  if (!$11) $31 = 0; else {
   if ($6) $17 = $__digits + 1 | 0; else $17 = HEAP32[$__digits + 8 >> 2] | 0;
   $16 = HEAP8[$17 >> 0] | 0;
   __THREW__ = 0;
   $21 = invoke_iii(HEAP32[(HEAP32[$1 >> 2] | 0) + 28 >> 2] | 0, $1 | 0, 45) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    label = 47;
    break;
   }
   $31 = $16 << 24 >> 24 == $21 << 24 >> 24;
  }
  $__i$0$i$i = 0;
  while (1) {
   if (($__i$0$i$i | 0) == 3) break;
   HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
   $__i$0$i$i = $__i$0$i$i + 1 | 0;
  }
  $__i$0$i$i3 = 0;
  while (1) {
   if (($__i$0$i$i3 | 0) == 3) break;
   HEAP32[$__sym + ($__i$0$i$i3 << 2) >> 2] = 0;
   $__i$0$i$i3 = $__i$0$i$i3 + 1 | 0;
  }
  $__i$0$i$i6 = 0;
  while (1) {
   if (($__i$0$i$i6 | 0) == 3) break;
   HEAP32[$__sn + ($__i$0$i$i6 << 2) >> 2] = 0;
   $__i$0$i$i6 = $__i$0$i$i6 + 1 | 0;
  }
  __THREW__ = 0;
  invoke_viiiiiiiiii(3, $__intl | 0, $31 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  L27 : do if ($32 & 1) {
   $98 = ___cxa_find_matching_catch() | 0;
   $$0 = $98;
   $$01 = tempRet0;
  } else {
   $34 = HEAP8[$__digits >> 0] | 0;
   $36 = ($34 & 1) == 0;
   if ($36) $42 = ($34 & 255) >>> 1; else $42 = HEAP32[$__digits + 4 >> 2] | 0;
   $41 = HEAP32[$__fd >> 2] | 0;
   if (($42 | 0) > ($41 | 0)) {
    if ($36) $49 = ($34 & 255) >>> 1; else $49 = HEAP32[$__digits + 4 >> 2] | 0;
    $51 = HEAP8[$__sn >> 0] | 0;
    if (!($51 & 1)) $67 = ($51 & 255) >>> 1; else $67 = HEAP32[$__sn + 4 >> 2] | 0;
    $58 = HEAP8[$__sym >> 0] | 0;
    if (!($58 & 1)) $69 = ($58 & 255) >>> 1; else $69 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $67 + ($49 - $41 << 1 | 1) + $69 | 0;
   } else {
    $70 = HEAP8[$__sn >> 0] | 0;
    if (!($70 & 1)) $85 = ($70 & 255) >>> 1; else $85 = HEAP32[$__sn + 4 >> 2] | 0;
    $77 = HEAP8[$__sym >> 0] | 0;
    if (!($77 & 1)) $87 = ($77 & 255) >>> 1; else $87 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $85 + 2 + $87 | 0;
   }
   $88 = $$pn + $41 | 0;
   do if ($88 >>> 0 > 100) {
    $90 = _malloc($88) | 0;
    if (!$90) {
     __THREW__ = 0;
     invoke_v(6);
     $92 = __THREW__;
     __THREW__ = 0;
     if ($92 & 1) {
      $94 = ___cxa_find_matching_catch() | 0;
      $$0 = $94;
      $$01 = tempRet0;
      break L27;
     } else {
      $102 = 0;
      $106 = HEAP8[$__digits >> 0] | 0;
      $__mb$0 = 0;
      break;
     }
    } else {
     $102 = $90;
     $106 = $34;
     $__mb$0 = $90;
    }
   } else {
    $102 = 0;
    $106 = $34;
    $__mb$0 = $__mbuf;
   } while (0);
   if (!($106 & 1)) {
    $116 = $__digits + 1 | 0;
    $117 = ($106 & 255) >>> 1;
   } else {
    $116 = HEAP32[$__digits + 8 >> 2] | 0;
    $117 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $116 | 0, $116 + $117 | 0, $1 | 0, $31 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $41 | 0);
   $120 = __THREW__;
   __THREW__ = 0;
   if (!($120 & 1)) {
    HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
    $123 = HEAP32[$__mi >> 2] | 0;
    $124 = HEAP32[$__me >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(39, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $123 | 0, $124 | 0, $__iob | 0, $__fl | 0);
    $125 = __THREW__;
    __THREW__ = 0;
    if (!($125 & 1)) {
     _free($102);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
     STACKTOP = sp;
     return;
    }
   }
   $100 = ___cxa_find_matching_catch() | 0;
   $101 = tempRet0;
   _free($102);
   $$0 = $100;
   $$01 = $101;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
 } while (0);
 if ((label | 0) == 47) {
  $96 = ___cxa_find_matching_catch() | 0;
  $$1 = $96;
  $$12 = tempRet0;
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($$1 | 0);
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $48 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $66 = 0, $69 = 0, $76 = 0, $77 = 0, $78 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off0 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$0 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $58 = HEAP32[$this + 12 >> 2] | 0;
   $59 = $this + ($58 << 3) + 16 | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this + 16 | 0, $info, $current_ptr, $path_below, $use_strcmp);
   $60 = $this + 24 | 0;
   if (($58 | 0) <= 1) break;
   $63 = HEAP32[$this + 8 >> 2] | 0;
   if (!($63 & 2)) {
    $66 = $info + 36 | 0;
    if ((HEAP32[$66 >> 2] | 0) != 1) {
     if (!($63 & 1)) {
      $78 = $info + 54 | 0;
      $p2$2 = $60;
      do {
       if (HEAP8[$78 >> 0] | 0) break;
       if ((HEAP32[$66 >> 2] | 0) == 1) break;
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2, $info, $current_ptr, $path_below, $use_strcmp);
       $p2$2 = $p2$2 + 8 | 0;
      } while ($p2$2 >>> 0 < $59 >>> 0);
      break;
     }
     $76 = $info + 24 | 0;
     $77 = $info + 54 | 0;
     $p2$1 = $60;
     do {
      if (HEAP8[$77 >> 0] | 0) break;
      if ((HEAP32[$66 >> 2] | 0) == 1) if ((HEAP32[$76 >> 2] | 0) == 1) break;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1, $info, $current_ptr, $path_below, $use_strcmp);
      $p2$1 = $p2$1 + 8 | 0;
     } while ($p2$1 >>> 0 < $59 >>> 0);
     break;
    }
   }
   $69 = $info + 54 | 0;
   $p2$0 = $60;
   do {
    if (HEAP8[$69 >> 0] | 0) break;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0, $info, $current_ptr, $path_below, $use_strcmp);
    $p2$0 = $p2$0 + 8 | 0;
   } while ($p2$0 >>> 0 < $59 >>> 0);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $26 = $this + (HEAP32[$this + 12 >> 2] << 3) + 16 | 0;
    $27 = $info + 52 | 0;
    $28 = $info + 53 | 0;
    $29 = $info + 54 | 0;
    $30 = $this + 8 | 0;
    $31 = $info + 24 | 0;
    $does_dst_type_point_to_our_static_type$0$off0 = 0;
    $is_dst_type_derived_from_static_type$0$off0 = 0;
    $p$0 = $this + 16 | 0;
    L34 : while (1) {
     if ($p$0 >>> 0 >= $26 >>> 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
      label = 20;
      break;
     }
     HEAP8[$27 >> 0] = 0;
     HEAP8[$28 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
     if (HEAP8[$29 >> 0] | 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
      label = 20;
      break;
     }
     do if (!(HEAP8[$28 >> 0] | 0)) {
      $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off0;
     } else {
      if (!(HEAP8[$27 >> 0] | 0)) if (!(HEAP32[$30 >> 2] & 1)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
       $is_dst_type_derived_from_static_type$2$off0 = 1;
       label = 20;
       break L34;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
       break;
      }
      if ((HEAP32[$31 >> 2] | 0) == 1) {
       label = 25;
       break L34;
      }
      if (!(HEAP32[$30 >> 2] & 2)) {
       label = 25;
       break L34;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = 1;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
      }
     } while (0);
     $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;
     $is_dst_type_derived_from_static_type$0$off0 = $is_dst_type_derived_from_static_type$1$off0;
     $p$0 = $p$0 + 8 | 0;
    }
    do if ((label | 0) == 20) {
     if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) label = 24; else {
      HEAP32[$14 >> 2] = $current_ptr;
      $48 = $info + 40 | 0;
      HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
      if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$31 >> 2] | 0) == 2) {
       HEAP8[$29 >> 0] = 1;
       if ($is_dst_type_derived_from_static_type$2$off0) break;
      } else label = 24; else label = 24;
     }
     if ((label | 0) == 24) if ($is_dst_type_derived_from_static_type$2$off0) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } else if ((label | 0) == 25) {} while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $$byval_copy = sp + 308 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 312 | 0;
 $__nb = sp + 304 | 0;
 $__o = sp + 76 | 0;
 $__op = sp + 72 | 0;
 $__oe = sp + 68 | 0;
 $0 = sp + 64 | 0;
 $1 = sp + 60 | 0;
 $2 = sp + 56 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 46688, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_buffer9 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $30 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     $__nc$1 = $30;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $33 = HEAP32[$__nb >> 2] | 0;
   if ($33) {
    $38 = $33;
    $62 = $33;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(6);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $38 = $$pre;
    $62 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$125 = tempRet0;
  $$16 = $25;
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $62 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $37 = $38 + $__nc$2 | 0;
  $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
  if (($38 | 0) == ($__nar | 0)) {
   $50 = $__nar;
   $60 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $42 = _malloc($__nc$2 << 3) | 0;
   if (!$42) {
    __THREW__ = 0;
    invoke_v(6);
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     $68 = 0;
     label = 19;
    } else {
     $50 = HEAP32[$__nb >> 2] | 0;
     $60 = $42;
     $__ob$0 = $42;
     label = 20;
    }
   } else {
    $50 = $38;
    $60 = $42;
    $__ob$0 = $42;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $68 = $60;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(44, $50 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     $63 = ___cxa_find_matching_catch() | 0;
     $64 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $63;
     $$01 = $64;
     $66 = $60;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $55 = HEAP32[$__op >> 2] | 0;
    $56 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(45, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $55 | 0, $56 | 0, $__iob | 0, $__fl | 0);
    $57 = __THREW__;
    __THREW__ = 0;
    if ($57 & 1) {
     $68 = $60;
     label = 19;
    } else {
     $59 = HEAP32[$1 >> 2] | 0;
     HEAP32[$__s >> 2] = $59;
     HEAP32[$agg$result >> 2] = $59;
     if ($60) _free($60);
     _free($62);
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $46 = ___cxa_find_matching_catch() | 0;
   $$0 = $46;
   $$01 = tempRet0;
   $66 = $68;
  }
  if ($66) _free($66);
  _free($62);
  $$125 = $$01;
  $$16 = $$0;
 }
 ___resumeException($$16 | 0);
}

function __ZN12_GLOBAL__N_15Stack4dumpEv($this) {
 $this = $this | 0;
 var $$idx = 0, $$idx1 = 0, $$idx3$val = 0, $0 = 0, $101 = 0, $102 = 0, $13 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $71 = 0, $72 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $92 = 0, $93 = 0, $98 = 0, $99 = 0, $i$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $$idx = $this + 12 | 0;
 $$idx1 = $this + 16 | 0;
 do if ((HEAP32[$$idx1 >> 2] | 0) != (HEAP32[$$idx >> 2] | 0)) {
  $i$07 = 0;
  while (1) {
   $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43656, 37400, 6) | 0, $i$07) | 0, 37408, 4) | 0;
   $$idx3$val = HEAP32[$$idx >> 2] | 0;
   $5 = $$idx3$val + ($i$07 * 144 | 0) + 8 | 0;
   $6 = HEAP8[$5 >> 0] | 0;
   $8 = ($6 & 1) == 0;
   if ($8) $13 = ($6 & 255) >>> 1; else $13 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
   if ($13) {
    if ($8) {
     $22 = $5 + 1 | 0;
     $23 = ($6 & 255) >>> 1;
    } else {
     $22 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 16 >> 2] | 0;
     $23 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
    }
    __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, $22, $23) | 0;
   }
   $24 = $$idx3$val + ($i$07 * 144 | 0) + 20 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   do if ($25) {
    $27 = HEAP8[$5 >> 0] | 0;
    if (!($27 & 1)) $34 = ($27 & 255) >>> 1; else $34 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
    if (!$34) $38 = $25; else {
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 40048, 1) | 0;
     $38 = HEAP32[$24 >> 2] | 0;
    }
    $36 = $$idx3$val + ($i$07 * 144 | 0) + 28 | 0;
    if (($38 | 0) != (HEAP32[$36 >> 2] | 0)) {
     $50 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 40072, 1) | 0;
     $53 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($50, HEAP32[$24 >> 2] | 0) | 0, 40048, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($53, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 24 >> 2] | 0) | 0;
     $56 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($50, 40080, 3) | 0;
     $59 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($56, HEAP32[$36 >> 2] | 0) | 0, 40048, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($59, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 32 >> 2] | 0) | 0;
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($56, 40088, 1) | 0;
     break;
    }
    $40 = $$idx3$val + ($i$07 * 144 | 0) + 24 | 0;
    $42 = $$idx3$val + ($i$07 * 144 | 0) + 32 | 0;
    $44 = (HEAP32[$40 >> 2] | 0) == (HEAP32[$42 >> 2] | 0);
    $46 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($4, $38) | 0, 40048, 1) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($46, HEAP32[$40 >> 2] | 0) | 0;
    if (!$44) {
     $48 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 40064, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($48, HEAP32[$42 >> 2] | 0) | 0;
    }
   } while (0);
   $62 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 37416, 2) | 0;
   $66 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($62, HEAP32[(HEAP32[$$idx >> 2] | 0) + ($i$07 * 144 | 0) >> 2] | 0) | 0, 40088, 1) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $66 + (HEAP32[(HEAP32[$66 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $71 = invoke_iii(22, $0 | 0, 47968) | 0;
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    label = 23;
    break;
   }
   __THREW__ = 0;
   $77 = invoke_iii(HEAP32[(HEAP32[$71 >> 2] | 0) + 28 >> 2] | 0, $71 | 0, 10) | 0;
   $78 = __THREW__;
   __THREW__ = 0;
   if ($78 & 1) {
    label = 23;
    break;
   }
   __ZNSt3__16localeD2Ev($0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($66, $77) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($66) | 0;
   $i$07 = $i$07 + 1 | 0;
   if ($i$07 >>> 0 >= (((HEAP32[$$idx1 >> 2] | 0) - (HEAP32[$$idx >> 2] | 0) | 0) / 144 | 0) >>> 0) {
    label = 25;
    break;
   }
  }
  if ((label | 0) == 23) {
   $80 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($80 | 0);
  } else if ((label | 0) == 25) break;
 } while (0);
 __ZNKSt3__18ios_base6getlocEv($0, 43656 + (HEAP32[(HEAP32[10914] | 0) + -12 >> 2] | 0) | 0);
 __THREW__ = 0;
 $92 = invoke_iii(22, $0 | 0, 47968) | 0;
 $93 = __THREW__;
 __THREW__ = 0;
 if ($93 & 1) {
  $101 = ___cxa_find_matching_catch() | 0;
  $102 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($101 | 0);
 }
 __THREW__ = 0;
 $98 = invoke_iii(HEAP32[(HEAP32[$92 >> 2] | 0) + 28 >> 2] | 0, $92 | 0, 10) | 0;
 $99 = __THREW__;
 __THREW__ = 0;
 if ($99 & 1) {
  $101 = ___cxa_find_matching_catch() | 0;
  $102 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($101 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(43656, $98) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(43656) | 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i = 0, $$0$i13 = 0, $$1 = 0, $$13 = 0, $0 = 0, $1 = 0, $100 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $25 = 0, $26 = 0, $31 = 0, $36 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $66 = 0, $67 = 0, $68 = 0, $79 = 0, $80 = 0, $85 = 0, $9 = 0, $90 = 0, $94 = 0, $96 = 0, $98 = 0, $__bn$i = 0, $__bn$i11 = 0, $__buf$i = 0, $__buf$i10 = 0, $__i$0$i$i = 0, $__i$0$i$i7 = 0, $__mb$i = 0, $__mb$i9 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i = 0, $__p$0$i16 = 0, $__r$0$i = 0, $__r$0$i12 = 0, $__wn$i = 0, $lpad$phi$index = 0, $lpad$phi$index10 = 0, $lpad$phi32$index = 0, $lpad$phi32$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__mb$i9 = sp + 184 | 0;
 $__buf$i10 = sp + 192 | 0;
 $__bn$i11 = sp + 180 | 0;
 $__wn$i = sp + 176 | 0;
 $__mb$i = sp + 168 | 0;
 $__buf$i = sp + 40 | 0;
 $__bn$i = sp + 32 | 0;
 $__nn$i = sp + 28 | 0;
 $__ndflt = sp + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__ndflt + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 >> 2] = 49624;
 $5 = HEAP8[$__dflt >> 0] | 0;
 if (!($5 & 1)) {
  $100 = $__dflt + 4 | 0;
  $17 = $__dflt + 4 | 0;
  $18 = ($5 & 255) >>> 1;
 } else {
  $9 = HEAP32[$__dflt + 8 >> 2] | 0;
  $100 = $9;
  $17 = $9;
  $18 = HEAP32[$__dflt + 4 >> 2] | 0;
 }
 $16 = $17 + ($18 << 2) | 0;
 $19 = $__buf$i10 + 32 | 0;
 $$0$i13 = $100;
 $__r$0$i12 = 0;
 L9 : while (1) {
  if (!(($__r$0$i12 | 0) != 2 & $$0$i13 >>> 0 < $16 >>> 0)) {
   label = 18;
   break;
  }
  HEAP32[$__wn$i >> 2] = $$0$i13;
  __THREW__ = 0;
  $25 = invoke_iiiiiiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0, $0 | 0, $__mb$i9 | 0, $$0$i13 | 0, $16 | 0, $__wn$i | 0, $__buf$i10 | 0, $19 | 0, $__bn$i11 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if ($26 & 1) {
   label = 24;
   break;
  }
  if (($25 | 0) == 2 ? 1 : (HEAP32[$__wn$i >> 2] | 0) == ($$0$i13 | 0)) {
   label = 12;
   break;
  }
  $__p$0$i16 = $__buf$i10;
  while (1) {
   if ($__p$0$i16 >>> 0 >= (HEAP32[$__bn$i11 >> 2] | 0) >>> 0) break;
   __THREW__ = 0;
   invoke_vii(44, $__ndflt | 0, HEAP8[$__p$0$i16 >> 0] | 0);
   $36 = __THREW__;
   __THREW__ = 0;
   if ($36 & 1) {
    label = 23;
    break L9;
   }
   $__p$0$i16 = $__p$0$i16 + 1 | 0;
  }
  $$0$i13 = HEAP32[$__wn$i >> 2] | 0;
  $__r$0$i12 = $25;
 }
 do if ((label | 0) == 12) {
  __THREW__ = 0;
  invoke_vi(190, 48848);
  $31 = __THREW__;
  __THREW__ = 0;
  if ($31 & 1) {
   $60 = ___cxa_find_matching_catch() | 0;
   $lpad$phi32$index = $60;
   $lpad$phi32$index3 = tempRet0;
   label = 26;
   break;
  } else {}
 } else if ((label | 0) == 18) {
  if (!(HEAP8[$__ndflt >> 0] & 1)) $50 = $__ndflt + 1 | 0; else $50 = HEAP32[$__ndflt + 8 >> 2] | 0;
  __THREW__ = 0;
  $51 = invoke_iiiii(14, (($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, $50 | 0) | 0;
  $52 = __THREW__;
  __THREW__ = 0;
  if ($52 & 1) {
   $54 = ___cxa_find_matching_catch() | 0;
   $$1 = $54;
   $$13 = tempRet0;
   break;
  }
  $__i$0$i$i7 = 0;
  while (1) {
   if (($__i$0$i$i7 | 0) == 3) break;
   HEAP32[$agg$result + ($__i$0$i$i7 << 2) >> 2] = 0;
   $__i$0$i$i7 = $__i$0$i$i7 + 1 | 0;
  }
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 >> 2] = 49728;
  $66 = $51 + (_strlen($51 | 0) | 0) | 0;
  $67 = $66;
  $68 = $__buf$i + 128 | 0;
  $$0$i = $51;
  $__r$0$i = 0;
  L36 : while (1) {
   if (!(($__r$0$i | 0) != 2 & $$0$i >>> 0 < $66 >>> 0)) {
    label = 41;
    break;
   }
   HEAP32[$__nn$i >> 2] = $$0$i;
   __THREW__ = 0;
   $79 = invoke_iiiiiiiii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0, $__mb$i | 0, $$0$i | 0, (($67 - $$0$i | 0) > 32 ? $$0$i + 32 | 0 : $66) | 0, $__nn$i | 0, $__buf$i | 0, $68 | 0, $__bn$i | 0) | 0;
   $80 = __THREW__;
   __THREW__ = 0;
   if ($80 & 1) {
    label = 43;
    break;
   }
   if (($79 | 0) == 2 ? 1 : (HEAP32[$__nn$i >> 2] | 0) == ($$0$i | 0)) {
    label = 35;
    break;
   }
   $__p$0$i = $__buf$i;
   while (1) {
    if ($__p$0$i >>> 0 >= (HEAP32[$__bn$i >> 2] | 0) >>> 0) break;
    __THREW__ = 0;
    invoke_vii(75, $agg$result | 0, HEAP32[$__p$0$i >> 2] | 0);
    $90 = __THREW__;
    __THREW__ = 0;
    if ($90 & 1) {
     label = 42;
     break L36;
    }
    $__p$0$i = $__p$0$i + 4 | 0;
   }
   $$0$i = HEAP32[$__nn$i >> 2] | 0;
   $__r$0$i = $79;
  }
  do if ((label | 0) == 35) {
   __THREW__ = 0;
   invoke_vi(190, 48848);
   $85 = __THREW__;
   __THREW__ = 0;
   if ($85 & 1) {
    $98 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $98;
    $lpad$phi$index10 = tempRet0;
    break;
   } else {}
  } else if ((label | 0) == 41) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;
   return;
  } else if ((label | 0) == 42) {
   $94 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $94;
   $lpad$phi$index10 = tempRet0;
  } else if ((label | 0) == 43) {
   $96 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $96;
   $lpad$phi$index10 = tempRet0;
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
  $$1 = $lpad$phi$index;
  $$13 = $lpad$phi$index10;
 } else if ((label | 0) == 23) {
  $56 = ___cxa_find_matching_catch() | 0;
  $lpad$phi32$index = $56;
  $lpad$phi32$index3 = tempRet0;
  label = 26;
 } else if ((label | 0) == 24) {
  $58 = ___cxa_find_matching_catch() | 0;
  $lpad$phi32$index = $58;
  $lpad$phi32$index3 = tempRet0;
  label = 26;
 } while (0);
 if ((label | 0) == 26) {
  $$1 = $lpad$phi32$index;
  $$13 = $lpad$phi32$index3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($agg$result, $this, $free_vars$0$0$0$val, $free_vars$0$0$1$val) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $free_vars$0$0$0$val = $free_vars$0$0$0$val | 0;
 $free_vars$0$0$1$val = $free_vars$0$0$1$val | 0;
 var $$0$i7$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i$lcssa = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i$lcssa22 = 0, $$01$ph5$i$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$i$lcssa$lcssa = 0, $$idx$i = 0, $$idx$val$i = 0, $$idx1$i = 0, $$lcssa = 0, $$lcssa25 = 0, $$lcssa26 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $2 = 0, $24 = 0, $26 = 0, $29 = 0, $31 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $54 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa23 = 0, $__nd$0$i$i$lcssa24 = 0, $__parent$i = 0, $__r$0$i = 0, $i$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i = sp;
 $0 = $agg$result + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $agg$result + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $2;
 if (($free_vars$0$0$0$val | 0) == ($free_vars$0$0$1$val | 0)) {
  STACKTOP = sp;
  return;
 }
 $$idx$i = $this + 84 | 0;
 $$idx1$i = $this + 88 | 0;
 $5 = $free_vars$0$0$0$val;
 do {
  $4 = HEAP32[$5 >> 2] | 0;
  $$idx$val$i = HEAP32[$$idx$i >> 2] | 0;
  $i$0$in$i = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i | 0) / 144 | 0;
  while (1) {
   $i$0$in$i = $i$0$in$i + -1 | 0;
   if (($i$0$in$i | 0) <= -1) {
    label = 34;
    break;
   }
   $11 = $$idx$val$i + ($i$0$in$i * 144 | 0) + 132 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   if ($12) {
    $$0$ph6$i$i$i$i = $11;
    $$01$ph5$i$i$i$i = $12;
    L11 : while (1) {
     $$013$i$i$i$i = $$01$ph5$i$i$i$i;
     while (1) {
      if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $4 >>> 0) {
       $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
       break;
      }
      $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
      if (!$$013$i$i$i$i) {
       $$0$ph6$i$i$i$i$lcssa22 = $$0$ph6$i$i$i$i;
       label = 11;
       break L11;
      }
     }
     $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
     if (!$$01$ph5$i$i$i$i) {
      $$013$i$i$i$i$lcssa$lcssa = $$013$i$i$i$i$lcssa;
      label = 12;
      break;
     } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
    }
    if ((label | 0) == 11) {
     label = 0;
     $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i$lcssa22;
    } else if ((label | 0) == 12) {
     label = 0;
     $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa$lcssa;
    }
    if (($$0$ph$lcssa$i$i$i$i | 0) != ($11 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 <= $4 >>> 0) {
     $$0$ph$lcssa$i$i$i$i$lcssa = $$0$ph$lcssa$i$i$i$i;
     label = 16;
     break;
    }
   }
   if ((HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) >> 2] | 0) == 5) {
    label = 34;
    break;
   }
  }
  if ((label | 0) == 16) {
   label = 0;
   $24 = HEAP32[$$0$ph$lcssa$i$i$i$i$lcssa + 20 >> 2] | 0;
   if ($24) {
    $26 = HEAP32[$2 >> 2] | 0;
    do if (!$26) {
     HEAP32[$__parent$i >> 2] = $2;
     $$0$i7$i = $2;
     $45 = $2;
     label = 28;
    } else {
     $__nd$0$i$i = $26;
     while (1) {
      $29 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
      if ($29 >>> 0 > $4 >>> 0) {
       $31 = HEAP32[$__nd$0$i$i >> 2] | 0;
       if (!$31) {
        $$lcssa25 = $__nd$0$i$i;
        $__nd$0$i$i$lcssa24 = $__nd$0$i$i;
        label = 21;
        break;
       } else $__nd$0$be$in$i$i = $31;
      } else {
       if ($29 >>> 0 >= $4 >>> 0) {
        $__nd$0$i$i$lcssa = $__nd$0$i$i;
        label = 27;
        break;
       }
       $34 = $__nd$0$i$i + 4 | 0;
       $35 = HEAP32[$34 >> 2] | 0;
       if (!$35) {
        $$lcssa = $34;
        $__nd$0$i$i$lcssa23 = $__nd$0$i$i;
        label = 25;
        break;
       } else $__nd$0$be$in$i$i = $35;
      }
      $__nd$0$i$i = $__nd$0$be$in$i$i;
     }
     if ((label | 0) == 21) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa24;
      $$0$i7$i = $$lcssa25;
      $45 = $__nd$0$i$i$lcssa24;
      label = 28;
      break;
     } else if ((label | 0) == 25) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa23;
      $$0$i7$i = $$lcssa;
      $45 = $__nd$0$i$i$lcssa23;
      label = 28;
      break;
     } else if ((label | 0) == 27) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
      if (!$__nd$0$i$i$lcssa) {
       $$0$i7$i = $__parent$i;
       $45 = 0;
       label = 28;
       break;
      } else {
       $__r$0$i = $__nd$0$i$i$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 28) {
     label = 0;
     __THREW__ = 0;
     $38 = invoke_ii(67, 24) | 0;
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) {
      $$lcssa26 = $26;
      label = 33;
      break;
     }
     HEAP32[$38 + 16 >> 2] = $4;
     HEAP32[$38 + 20 >> 2] = 0;
     HEAP32[$38 >> 2] = 0;
     HEAP32[$38 + 4 >> 2] = 0;
     HEAP32[$38 + 8 >> 2] = $45;
     HEAP32[$$0$i7$i >> 2] = $38;
     $47 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
     if (!$47) $50 = $38; else {
      HEAP32[$agg$result >> 2] = $47;
      $50 = HEAP32[$$0$i7$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $50);
     HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
     $__r$0$i = $38;
    }
    HEAP32[$__r$0$i + 20 >> 2] = $24;
   }
  } else if ((label | 0) == 34) label = 0;
  $5 = $5 + 4 | 0;
 } while (($5 | 0) != ($free_vars$0$0$1$val | 0));
 if ((label | 0) == 33) {
  $54 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($agg$result, $$lcssa26);
  ___resumeException($54 | 0);
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 80 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 142 | 0;
 $__nb = sp + 76 | 0;
 $__o = sp + 84 | 0;
 $__op = sp + 72 | 0;
 $__oe = sp + 68 | 0;
 $0 = sp + 64 | 0;
 $1 = sp + 60 | 0;
 $2 = sp + 56 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 46688, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_buffer9 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $30 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     $__nc$1 = $30;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $33 = HEAP32[$__nb >> 2] | 0;
   if ($33) {
    $38 = $33;
    $61 = $33;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(6);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $38 = $$pre;
    $61 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$127 = tempRet0;
  $$18 = $25;
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $61 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $37 = $38 + $__nc$2 | 0;
  $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
  if (($38 | 0) == ($__nar | 0)) {
   $50 = $__nar;
   $60 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $42 = _malloc($__nc$2 << 1) | 0;
   if (!$42) {
    __THREW__ = 0;
    invoke_v(6);
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     $66 = 0;
     label = 19;
    } else {
     $50 = HEAP32[$__nb >> 2] | 0;
     $60 = 0;
     $__ob$0 = 0;
     label = 20;
    }
   } else {
    $50 = $38;
    $60 = $42;
    $__ob$0 = $42;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $66 = $60;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(42, $50 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     $62 = ___cxa_find_matching_catch() | 0;
     $63 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $62;
     $$01 = $63;
     $65 = $60;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $55 = HEAP32[$__op >> 2] | 0;
    $56 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $55 | 0, $56 | 0, $__iob | 0, $__fl | 0);
    $57 = __THREW__;
    __THREW__ = 0;
    if ($57 & 1) {
     $66 = $60;
     label = 19;
    } else {
     HEAP32[$agg$result >> 2] = HEAP32[$1 >> 2];
     _free($60);
     _free($61);
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $46 = ___cxa_find_matching_catch() | 0;
   $$0 = $46;
   $$01 = tempRet0;
   $65 = $66;
  }
  _free($65);
  _free($61);
  $$127 = $$01;
  $$18 = $$0;
 }
 ___resumeException($$18 | 0);
}

function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $0 = 0, $1 = 0, $100 = 0, $107 = 0, $108 = 0, $110 = 0, $117 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $130 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $81 = 0, $91 = 0, $93 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47960) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48120) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if (!$12) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 8; else {
   $22 = $__ob + ($__ne - $__nb << 2) | 0;
   HEAP32[$__oe >> 2] = $22;
   $130 = $22;
   label = 40;
  }
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  if ($27 << 24 >> 24 == 43 | $27 << 24 >> 24 == 45) {
   __THREW__ = 0;
   $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $27 | 0) | 0;
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) {
    label = 8;
    break;
   }
   $35 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $35 + 4;
   HEAP32[$35 >> 2] = $31;
   $__nf$0 = $__nb + 1 | 0;
  } else $__nf$0 = $__nb;
  if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   $44 = HEAP8[$43 >> 0] | 0;
   if ($44 << 24 >> 24 == 88 | $44 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     label = 8;
     break;
    }
    $51 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $51 + 4;
    HEAP32[$51 >> 2] = $48;
    __THREW__ = 0;
    $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 8;
     break;
    }
    $61 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $61 + 4;
    HEAP32[$61 >> 2] = $57;
    $__nf$1 = $__nf$0 + 2 | 0;
   } else $__nf$1 = $__nf$0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0;
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $$0$i$i5 = $__ne;
   $$01$i$i4 = $__nf$1;
   while (1) {
    $64 = $$0$i$i5 + -1 | 0;
    if ($$01$i$i4 >>> 0 >= $64 >>> 0) break;
    $66 = HEAP8[$$01$i$i4 >> 0] | 0;
    HEAP8[$$01$i$i4 >> 0] = HEAP8[$64 >> 0] | 0;
    HEAP8[$64 >> 0] = $66;
    $$0$i$i5 = $64;
    $$01$i$i4 = $$01$i$i4 + 1 | 0;
   }
  }
  __THREW__ = 0;
  $72 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $73 = __THREW__;
  __THREW__ = 0;
  if ($73 & 1) label = 8; else {
   $75 = $__grouping + 1 | 0;
   $76 = $__grouping + 4 | 0;
   $77 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ne >>> 0) break;
    $81 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if (!(HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else if (($__dc$0 | 0) == (HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $91 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $91 + 4;
     HEAP32[$91 >> 2] = $72;
     $93 = HEAP8[$__grouping >> 0] | 0;
     if (!($93 & 1)) $100 = ($93 & 255) >>> 1; else $100 = HEAP32[$76 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($100 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $107 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 7;
     break;
    }
    $110 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $110 + 4;
    HEAP32[$110 >> 2] = $107;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 7) {
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    break;
   }
   $117 = $__ob + ($__nf$1 - $__nb << 2) | 0;
   $118 = HEAP32[$__oe >> 2] | 0;
   if (($117 | 0) == ($118 | 0)) {
    $130 = $117;
    label = 40;
   } else {
    $$0$i$i = $118;
    $$01$i$i = $117;
    while (1) {
     $120 = $$0$i$i + -4 | 0;
     if ($$01$i$i >>> 0 >= $120 >>> 0) break;
     $122 = HEAP32[$$01$i$i >> 2] | 0;
     HEAP32[$$01$i$i >> 2] = HEAP32[$120 >> 2];
     HEAP32[$120 >> 2] = $122;
     $$0$i$i = $120;
     $$01$i$i = $$01$i$i + 4 | 0;
    }
    $130 = $118;
    label = 40;
   }
  }
 } while (0);
 if ((label | 0) == 8) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
 } else if ((label | 0) == 40) {
  if (($__np | 0) == ($__ne | 0)) $storemerge = $130; else $storemerge = $__ob + ($__np - $__nb << 2) | 0;
  HEAP32[$__op >> 2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $0 = 0, $1 = 0, $100 = 0, $107 = 0, $108 = 0, $110 = 0, $117 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $17 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $81 = 0, $91 = 0, $93 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 47968) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48112) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if (!$12) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 8; else {
   HEAP32[$__oe >> 2] = $__ob + ($__ne - $__nb);
   label = 40;
  }
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  if ($27 << 24 >> 24 == 43 | $27 << 24 >> 24 == 45) {
   __THREW__ = 0;
   $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $27 | 0) | 0;
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) {
    label = 8;
    break;
   }
   $35 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $35 + 1;
   HEAP8[$35 >> 0] = $31;
   $__nf$0 = $__nb + 1 | 0;
  } else $__nf$0 = $__nb;
  if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   $44 = HEAP8[$43 >> 0] | 0;
   if ($44 << 24 >> 24 == 88 | $44 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     label = 8;
     break;
    }
    $51 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $51 + 1;
    HEAP8[$51 >> 0] = $48;
    __THREW__ = 0;
    $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 8;
     break;
    }
    $61 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $61 + 1;
    HEAP8[$61 >> 0] = $57;
    $__nf$1 = $__nf$0 + 2 | 0;
   } else $__nf$1 = $__nf$0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0;
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $$0$i$i5 = $__ne;
   $$01$i$i4 = $__nf$1;
   while (1) {
    $64 = $$0$i$i5 + -1 | 0;
    if ($$01$i$i4 >>> 0 >= $64 >>> 0) break;
    $66 = HEAP8[$$01$i$i4 >> 0] | 0;
    HEAP8[$$01$i$i4 >> 0] = HEAP8[$64 >> 0] | 0;
    HEAP8[$64 >> 0] = $66;
    $$0$i$i5 = $64;
    $$01$i$i4 = $$01$i$i4 + 1 | 0;
   }
  }
  __THREW__ = 0;
  $72 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $73 = __THREW__;
  __THREW__ = 0;
  if ($73 & 1) label = 8; else {
   $75 = $__grouping + 1 | 0;
   $76 = $__grouping + 4 | 0;
   $77 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ne >>> 0) break;
    $81 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if (!(HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else if (($__dc$0 | 0) == (HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $91 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $91 + 1;
     HEAP8[$91 >> 0] = $72;
     $93 = HEAP8[$__grouping >> 0] | 0;
     if (!($93 & 1)) $100 = ($93 & 255) >>> 1; else $100 = HEAP32[$76 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($100 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $107 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 7;
     break;
    }
    $110 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $110 + 1;
    HEAP8[$110 >> 0] = $107;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 7) {
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    break;
   }
   $117 = $__ob + ($__nf$1 - $__nb) | 0;
   $118 = HEAP32[$__oe >> 2] | 0;
   if (($117 | 0) == ($118 | 0)) label = 40; else {
    $$0$i$i = $118;
    $$01$i$i = $117;
    while (1) {
     $120 = $$0$i$i + -1 | 0;
     if ($$01$i$i >>> 0 >= $120 >>> 0) break;
     $122 = HEAP8[$$01$i$i >> 0] | 0;
     HEAP8[$$01$i$i >> 0] = HEAP8[$120 >> 0] | 0;
     HEAP8[$120 >> 0] = $122;
     $$0$i$i = $120;
     $$01$i$i = $$01$i$i + 1 | 0;
    }
    label = 40;
   }
  }
 } while (0);
 if ((label | 0) == 8) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
 } else if ((label | 0) == 40) {
  if (($__np | 0) == ($__ne | 0)) $storemerge = HEAP32[$__oe >> 2] | 0; else $storemerge = $__ob + ($__np - $__nb) | 0;
  HEAP32[$__op >> 2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $106 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $141 = 0, $142 = 0, $156 = 0, $28 = 0, $30 = 0, $40 = 0, $42 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $65 = 0, $77 = 0, $78 = 0, $79 = 0, $91 = 0, $94 = 0, $96 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa35 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $12 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $12 = 0;
  break;
 } else {
  $12 = HEAP32[$__b >> 2] | 0;
  break;
 } else $12 = $0; while (0);
 $13 = ($12 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($13) {
   $156 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($13) label = 12; else {
  $156 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  $40 = $$0$i$i & 255;
  if ($40 << 24 >> 24 > -1) {
   $42 = $__ct + 8 | 0;
   if (HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
    $54 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $40, 0) | 0) << 24 >> 24;
    $55 = HEAP32[$__b >> 2] | 0;
    $56 = $55 + 12 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (($57 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 40 >> 2] & 127]($55) | 0; else HEAP32[$56 >> 2] = $57 + 1;
    $$0$in = $__n;
    $$pre$i2$i$i7 = $156;
    $79 = $156;
    $__r$0$in = $54;
    while (1) {
     $__r$0 = $__r$0$in + -48 | 0;
     $$0 = $$0$in + -1 | 0;
     $65 = HEAP32[$__b >> 2] | 0;
     do if (!$65) $77 = 0; else if ((HEAP32[$65 + 12 >> 2] | 0) == (HEAP32[$65 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 127]($65) | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $77 = 0;
      break;
     } else {
      $77 = HEAP32[$__b >> 2] | 0;
      break;
     } else $77 = $65; while (0);
     $78 = ($77 | 0) == 0;
     if (!$79) {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $91 = 0;
     } else if ((HEAP32[$79 + 12 >> 2] | 0) == (HEAP32[$79 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$79 >> 2] | 0) + 36 >> 2] & 127]($79) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i2$i$i20 = 0;
      $91 = 0;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $91 = $$pre$i2$i$i7;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $91 = $79;
     }
     $94 = HEAP32[$__b >> 2] | 0;
     if (!(($$0$in | 0) > 1 & ($78 ^ ($91 | 0) == 0))) {
      $$lcssa = $94;
      $$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;
      $__r$0$lcssa = $__r$0;
      break;
     }
     $96 = HEAP32[$94 + 12 >> 2] | 0;
     if (($96 | 0) == (HEAP32[$94 + 16 >> 2] | 0)) $$0$i$i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$94 >> 2] | 0) + 36 >> 2] & 127]($94) | 0; else $$0$i$i10 = HEAPU8[$96 >> 0] | 0;
     $106 = $$0$i$i10 & 255;
     if ($106 << 24 >> 24 <= -1) {
      $__r$0$lcssa35 = $__r$0;
      label = 54;
      break;
     }
     if (!(HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i10 << 24 >> 24 << 1) >> 1] & 2048)) {
      $__r$0$lcssa35 = $__r$0;
      label = 54;
      break;
     }
     $119 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $106, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
     $120 = HEAP32[$__b >> 2] | 0;
     $121 = $120 + 12 | 0;
     $122 = HEAP32[$121 >> 2] | 0;
     if (($122 | 0) == (HEAP32[$120 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$120 >> 2] | 0) + 40 >> 2] & 127]($120) | 0; else HEAP32[$121 >> 2] = $122 + 1;
     $$0$in = $$0;
     $$pre$i2$i$i7 = $$pre$i2$i$i20;
     $79 = $91;
     $__r$0$in = $119;
    }
    if ((label | 0) == 54) {
     $$01 = $__r$0$lcssa35;
     break;
    }
    do if (!$$lcssa) $141 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $141 = 0;
     break;
    } else {
     $141 = HEAP32[$__b >> 2] | 0;
     break;
    } else $141 = $$lcssa; while (0);
    $142 = ($141 | 0) == 0;
    do if (!$$pre$i2$i$i20$lcssa) label = 52; else {
     if ((HEAP32[$$pre$i2$i$i20$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i20$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i20$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i20$lcssa) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 52;
      break;
     }
     if ($142) {
      $$01 = $__r$0$lcssa;
      break L16;
     }
    } while (0);
    if ((label | 0) == 52) if (!$142) {
     $$01 = $__r$0$lcssa;
     break;
    }
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$01 = $__r$0$lcssa;
    break;
   }
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$01 = 0;
 } while (0);
 return $$01 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$pre = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $120 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $47 = 0, $52 = 0, $54 = 0, $6 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $76 = 0, $93 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 do if (($1 | 0) != ($0 | 0)) {
  $3 = $1 + 16 | 0;
  $4 = HEAP8[$__v >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $26 = ($4 & 255) >>> 1; else $26 = HEAP32[$__v + 4 >> 2] | 0;
  $11 = HEAP8[$3 >> 0] | 0;
  $13 = ($11 & 1) == 0;
  if ($13) $24 = ($11 & 255) >>> 1; else $24 = HEAP32[$1 + 20 >> 2] | 0;
  if ($6) $28 = $__v + 1 | 0; else $28 = HEAP32[$__v + 8 >> 2] | 0;
  if ($13) $29 = $3 + 1 | 0; else $29 = HEAP32[$1 + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) break;
  } else if (($30 | 0) < 0) break;
  if ($13) $95 = ($11 & 255) >>> 1; else $95 = HEAP32[$1 + 20 >> 2] | 0;
  if ($6) $93 = ($4 & 255) >>> 1; else $93 = HEAP32[$__v + 4 >> 2] | 0;
  if ($13) $97 = $3 + 1 | 0; else $97 = HEAP32[$1 + 24 >> 2] | 0;
  if ($6) $98 = $__v + 1 | 0; else $98 = HEAP32[$__v + 8 >> 2] | 0;
  $99 = _memcmp($97, $98, $93 >>> 0 < $95 >>> 0 ? $93 : $95) | 0;
  if (!$99) {
   if ($95 >>> 0 >= $93 >>> 0) label = 86;
  } else if (($99 | 0) >= 0) label = 86;
  if ((label | 0) == 86) {
   HEAP32[$__parent >> 2] = $1;
   $$0 = $__parent;
   return $$0 | 0;
  }
  $103 = $1 + 4 | 0;
  $104 = HEAP32[$103 >> 2] | 0;
  $105 = ($104 | 0) == 0;
  if ($105) {
   $$0$i$i$i$i$i = $1;
   while (1) {
    $109 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$109 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$cast$i$i$i$i$i$lcssa = $109;
     break;
    } else $$0$i$i$i$i$i = $109;
   }
   $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i$i$i = $104;
   while (1) {
    $106 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$106) {
     $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $106;
   }
   $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
  }
  do if (($$01$i$i$i$i$i | 0) != ($0 | 0)) {
   $113 = $$01$i$i$i$i$i + 16 | 0;
   if ($6) $133 = ($4 & 255) >>> 1; else $133 = HEAP32[$__v + 4 >> 2] | 0;
   $118 = HEAP8[$113 >> 0] | 0;
   $120 = ($118 & 1) == 0;
   if ($120) $131 = ($118 & 255) >>> 1; else $131 = HEAP32[$$01$i$i$i$i$i + 20 >> 2] | 0;
   if ($6) $135 = $__v + 1 | 0; else $135 = HEAP32[$__v + 8 >> 2] | 0;
   if ($120) $136 = $113 + 1 | 0; else $136 = HEAP32[$$01$i$i$i$i$i + 24 >> 2] | 0;
   $137 = _memcmp($135, $136, $131 >>> 0 < $133 >>> 0 ? $131 : $133) | 0;
   if (!$137) {
    if ($133 >>> 0 < $131 >>> 0) break;
   } else if (($137 | 0) < 0) break;
   $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
   return $$0 | 0;
  } while (0);
  if ($105) {
   HEAP32[$__parent >> 2] = $1;
   $$0 = $103;
   return $$0 | 0;
  } else {
   HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
   $$0 = $$01$i$i$i$i$i;
   return $$0 | 0;
  }
 } while (0);
 $$pre = HEAP32[$1 >> 2] | 0;
 do if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $76 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $41 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $41; else {
     $$cast$i$i$lcssa = $41;
     break;
    }
   }
   $$01$i$i = $$cast$i$i$lcssa;
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $38 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$38) {
     $$0$i$i$i$lcssa = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $38;
   }
   $$01$i$i = $$0$i$i$i$lcssa;
  }
  $44 = $$01$i$i + 16 | 0;
  $45 = HEAP8[$44 >> 0] | 0;
  $47 = ($45 & 1) == 0;
  if ($47) $67 = ($45 & 255) >>> 1; else $67 = HEAP32[$$01$i$i + 20 >> 2] | 0;
  $52 = HEAP8[$__v >> 0] | 0;
  $54 = ($52 & 1) == 0;
  if ($54) $65 = ($52 & 255) >>> 1; else $65 = HEAP32[$__v + 4 >> 2] | 0;
  if ($47) $69 = $44 + 1 | 0; else $69 = HEAP32[$$01$i$i + 24 >> 2] | 0;
  if ($54) $70 = $__v + 1 | 0; else $70 = HEAP32[$__v + 8 >> 2] | 0;
  $71 = _memcmp($69, $70, $65 >>> 0 < $67 >>> 0 ? $65 : $67) | 0;
  if (!$71) {
   if ($67 >>> 0 < $65 >>> 0) {
    $76 = $$01$i$i;
    break;
   }
  } else if (($71 | 0) < 0) {
   $76 = $$01$i$i;
   break;
  }
  $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
  return $$0 | 0;
 } while (0);
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $76;
  $$0 = $76 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $39 = 0, $40 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $57 = 0, $58 = 0, $6 = 0, $64 = 0, $71 = 0, $72 = 0, $8 = 0, $80 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $92 = 0, $93 = 0, $95 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy = sp + 424 | 0;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 428 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $30 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$017 = tempRet0;
  $$09 = $30;
  $92 = $__wbuf;
  label = 39;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 47960) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if (!($6 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $8 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $8;
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    if ($11) {
     if (!(HEAP8[$__v >> 0] & 1)) HEAP8[$__v >> 0] = 0; else HEAP32[HEAP32[$__v + 8 >> 2] >> 2] = 0;
     HEAP32[$__v + 4 >> 2] = 0;
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $25 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] | 0, $5 | 0, 45) | 0;
      $26 = __THREW__;
      __THREW__ = 0;
      if ($26 & 1) break;
      __THREW__ = 0;
      invoke_vii(75, $__v | 0, $25 | 0);
      $28 = __THREW__;
      __THREW__ = 0;
      if ($28 & 1) break;
     }
     __THREW__ = 0;
     $35 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] | 0, $5 | 0, 48) | 0;
     $36 = __THREW__;
     __THREW__ = 0;
     if ($36 & 1) break;
     $39 = HEAP32[$__wn >> 2] | 0;
     $40 = $39 + -4 | 0;
     $__w$0 = HEAP32[$__wb >> 2] | 0;
     while (1) {
      if ($__w$0 >>> 0 >= $40 >>> 0) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      if ((HEAP32[$__w$0 >> 2] | 0) != ($35 | 0)) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      $__w$0 = $__w$0 + 4 | 0;
     }
     __THREW__ = 0;
     invoke_iiii(38, $__v | 0, $__w$0$lcssa | 0, $39 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) break;
    }
    $47 = HEAP32[$__b >> 2] | 0;
    do if (!$47) $97 = 1; else {
     $50 = HEAP32[$47 + 12 >> 2] | 0;
     if (($50 | 0) == (HEAP32[$47 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $57 = invoke_ii(HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] | 0, $47 | 0) | 0;
      $58 = __THREW__;
      __THREW__ = 0;
      if ($58 & 1) break L4; else $$0$i$i$i$i = $57;
     } else $$0$i$i$i$i = HEAP32[$50 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $97 = 1;
      break;
     } else {
      $97 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$8) label = 31; else {
     $64 = HEAP32[$8 + 12 >> 2] | 0;
     if (($64 | 0) == (HEAP32[$8 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $71 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] | 0, $8 | 0) | 0;
      $72 = __THREW__;
      __THREW__ = 0;
      if ($72 & 1) break L4; else $$0$i$i1$i$i = $71;
     } else $$0$i$i1$i$i = HEAP32[$64 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 31;
      break;
     } else if ($97) break; else {
      label = 33;
      break;
     }
    } while (0);
    if ((label | 0) == 31) if ($97) label = 33;
    if ((label | 0) == 33) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $80 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($80) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $80 | 0);
     $83 = __THREW__;
     __THREW__ = 0;
     if ($83 & 1) {
      $85 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($85);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  $87 = ___cxa_find_matching_catch() | 0;
  $88 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$010 = $87;
   $$018 = $88;
  } else {
   $$017 = $88;
   $$09 = $87;
   $92 = $$pre;
   label = 39;
  }
 }
 if ((label | 0) == 39) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $92 | 0);
  $93 = __THREW__;
  __THREW__ = 0;
  if ($93 & 1) {
   $95 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($95);
  } else {
   $$010 = $$09;
   $$018 = $$017;
  }
 }
 ___resumeException($$010 | 0);
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$lcssa = 0, $$lcssa47 = 0, $$lcssa50 = 0, $$lcssa51 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $49 = 0, $5 = 0, $52 = 0, $55 = 0, $57 = 0, $60 = 0, $61 = 0, $__nd$0$be$in$i = 0, $__nd$0$be$in$i3 = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa48 = 0, $__nd$0$i$lcssa49 = 0, $__nd$0$i2 = 0, $__nd$0$i2$lcssa = 0, $__nd$0$i2$lcssa45 = 0, $__nd$0$i2$lcssa46 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 if (($1 | 0) != ($0 | 0)) {
  $4 = HEAP32[$__v >> 2] | 0;
  $5 = HEAP32[$1 + 16 >> 2] | 0;
  if ($4 >>> 0 >= $5 >>> 0) {
   if ($5 >>> 0 >= $4 >>> 0) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $37 = HEAP32[$1 + 4 >> 2] | 0;
   if (!$37) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $42 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$42 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $42;
      break;
     } else $$0$i$i$i$i$i = $42;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $37;
    while (1) {
     $39 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$39) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $39;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($4 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $52 = HEAP32[$0 >> 2] | 0;
    if (!$52) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     return $$0 | 0;
    }
    $__nd$0$i = $52;
    while (1) {
     $55 = HEAP32[$__nd$0$i + 16 >> 2] | 0;
     if ($4 >>> 0 < $55 >>> 0) {
      $57 = HEAP32[$__nd$0$i >> 2] | 0;
      if (!$57) {
       $$lcssa51 = $__nd$0$i;
       $__nd$0$i$lcssa49 = $__nd$0$i;
       label = 43;
       break;
      } else $__nd$0$be$in$i = $57;
     } else {
      if ($55 >>> 0 >= $4 >>> 0) {
       $__nd$0$i$lcssa = $__nd$0$i;
       label = 48;
       break;
      }
      $60 = $__nd$0$i + 4 | 0;
      $61 = HEAP32[$60 >> 2] | 0;
      if (!$61) {
       $$lcssa50 = $60;
       $__nd$0$i$lcssa48 = $__nd$0$i;
       label = 47;
       break;
      } else $__nd$0$be$in$i = $61;
     }
     $__nd$0$i = $__nd$0$be$in$i;
    }
    if ((label | 0) == 43) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa49;
     $$0 = $$lcssa51;
     return $$0 | 0;
    } else if ((label | 0) == 47) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa48;
     $$0 = $$lcssa50;
     return $$0 | 0;
    } else if ((label | 0) == 48) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
     $$0 = $__parent;
     return $$0 | 0;
    }
   }
   $49 = $1 + 4 | 0;
   if (!(HEAP32[$49 >> 2] | 0)) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $49;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 $$pre = HEAP32[$1 >> 2] | 0;
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $22 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $14 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $14; else {
     $$cast$i$i$lcssa = $14;
     break;
    }
   }
   $$01$i$i = $$cast$i$i$lcssa;
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $11 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$11) {
     $$0$i$i$i$lcssa = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $11;
   }
   $$01$i$i = $$0$i$i$i$lcssa;
  }
  $19 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $19 >>> 0) $22 = $$01$i$i; else {
   $24 = HEAP32[$0 >> 2] | 0;
   if (!$24) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    return $$0 | 0;
   }
   $__nd$0$i2 = $24;
   while (1) {
    $27 = HEAP32[$__nd$0$i2 + 16 >> 2] | 0;
    if ($19 >>> 0 < $27 >>> 0) {
     $29 = HEAP32[$__nd$0$i2 >> 2] | 0;
     if (!$29) {
      $$lcssa47 = $__nd$0$i2;
      $__nd$0$i2$lcssa46 = $__nd$0$i2;
      label = 19;
      break;
     } else $__nd$0$be$in$i3 = $29;
    } else {
     if ($27 >>> 0 >= $19 >>> 0) {
      $__nd$0$i2$lcssa = $__nd$0$i2;
      label = 24;
      break;
     }
     $32 = $__nd$0$i2 + 4 | 0;
     $33 = HEAP32[$32 >> 2] | 0;
     if (!$33) {
      $$lcssa = $32;
      $__nd$0$i2$lcssa45 = $__nd$0$i2;
      label = 23;
      break;
     } else $__nd$0$be$in$i3 = $33;
    }
    $__nd$0$i2 = $__nd$0$be$in$i3;
   }
   if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa46;
    $$0 = $$lcssa47;
    return $$0 | 0;
   } else if ((label | 0) == 23) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa45;
    $$0 = $$lcssa;
    return $$0 | 0;
   } else if ((label | 0) == 24) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa;
    $$0 = $__parent;
    return $$0 | 0;
   }
  }
 }
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $22;
  $$0 = $22 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($agg$result, $obj_) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i2 = 0, $$01 = 0, $$01$i$i$i = 0, $$cast$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa17 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $50 = 0, $52 = 0, $55 = 0, $59 = 0, $6 = 0, $7 = 0, $9 = 0, $__nd$0$be$in$i$i$i = 0, $__nd$0$i$i$i = 0, $__nd$0$i$i$i$lcssa = 0, $__nd$0$i$i$i$lcssa15 = 0, $__nd$0$i$i$i$lcssa16 = 0, $__parent$i$i = 0, $counter = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__parent$i$i = sp + 16 | 0;
 $counter = sp + 12 | 0;
 $0 = sp;
 HEAP32[$counter >> 2] = 0;
 $1 = $agg$result + 4 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $agg$result + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $3;
 __THREW__ = 0;
 invoke_viiii(19, $0 | 0, $obj_ | 0, $counter | 0, 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  $$0 = $10;
  $$01 = tempRet0;
  $$pre$phiZ2D = $3;
  $59 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $59);
  ___resumeException($$0 | 0);
 }
 $6 = HEAP32[$0 >> 2] | 0;
 $7 = $0 + 4 | 0;
 if (($6 | 0) == ($7 | 0)) {
  $9 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $9);
  STACKTOP = sp;
  return;
 }
 $16 = $6;
 while (1) {
  if ((HEAP32[$16 + 20 >> 2] | 0) != 1) {
   $19 = $16 + 16 | 0;
   $20 = HEAP32[$3 >> 2] | 0;
   do if (!$20) {
    HEAP32[$__parent$i$i >> 2] = $3;
    $$0$i$i$i2 = $3;
    $41 = $3;
   } else {
    $22 = HEAP32[$19 >> 2] | 0;
    $__nd$0$i$i$i = $20;
    while (1) {
     $24 = HEAP32[$__nd$0$i$i$i + 16 >> 2] | 0;
     if ($22 >>> 0 < $24 >>> 0) {
      $26 = HEAP32[$__nd$0$i$i$i >> 2] | 0;
      if (!$26) {
       $$lcssa17 = $__nd$0$i$i$i;
       $__nd$0$i$i$i$lcssa16 = $__nd$0$i$i$i;
       label = 13;
       break;
      } else $__nd$0$be$in$i$i$i = $26;
     } else {
      if ($24 >>> 0 >= $22 >>> 0) {
       $__nd$0$i$i$i$lcssa = $__nd$0$i$i$i;
       label = 18;
       break;
      }
      $29 = $__nd$0$i$i$i + 4 | 0;
      $30 = HEAP32[$29 >> 2] | 0;
      if (!$30) {
       $$lcssa = $29;
       $__nd$0$i$i$i$lcssa15 = $__nd$0$i$i$i;
       label = 17;
       break;
      } else $__nd$0$be$in$i$i$i = $30;
     }
     $__nd$0$i$i$i = $__nd$0$be$in$i$i$i;
    }
    if ((label | 0) == 13) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa16;
     $$0$i$i$i2 = $$lcssa17;
     $41 = $__nd$0$i$i$i$lcssa16;
     break;
    } else if ((label | 0) == 17) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa15;
     $$0$i$i$i2 = $$lcssa;
     $41 = $__nd$0$i$i$i$lcssa15;
     break;
    } else if ((label | 0) == 18) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa;
     $$0$i$i$i2 = $__parent$i$i;
     $41 = $__nd$0$i$i$i$lcssa;
     break;
    }
   } while (0);
   if (!(HEAP32[$$0$i$i$i2 >> 2] | 0)) {
    __THREW__ = 0;
    $34 = invoke_ii(67, 20) | 0;
    $35 = __THREW__;
    __THREW__ = 0;
    if ($35 & 1) {
     label = 7;
     break;
    }
    HEAP32[$34 + 16 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$34 >> 2] = 0;
    HEAP32[$34 + 4 >> 2] = 0;
    HEAP32[$34 + 8 >> 2] = $41;
    HEAP32[$$0$i$i$i2 >> 2] = $34;
    $43 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
    if (!$43) $46 = $34; else {
     HEAP32[$agg$result >> 2] = $43;
     $46 = HEAP32[$$0$i$i$i2 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 >> 2] | 0, $46);
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
   }
  }
  $50 = HEAP32[$16 + 4 >> 2] | 0;
  if (!$50) {
   $$0$i$i$i = $16;
   while (1) {
    $55 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$55 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$cast$i$i$i$lcssa = $55;
     break;
    } else $$0$i$i$i = $55;
   }
   $$01$i$i$i = $$cast$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i = $50;
   while (1) {
    $52 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$52) {
     $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $52;
   }
   $$01$i$i$i = $$0$i$i$i$i$lcssa;
  }
  if (($$01$i$i$i | 0) == ($7 | 0)) {
   label = 4;
   break;
  } else $16 = $$01$i$i$i;
 }
 if ((label | 0) == 4) {
  $9 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $9);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 7) {
  $12 = ___cxa_find_matching_catch() | 0;
  $13 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$7 >> 2] | 0);
  $$0 = $12;
  $$01 = $13;
  $$pre$phiZ2D = $3;
  $59 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $59);
  ___resumeException($$0 | 0);
 }
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$lcssa = 0, $$lcssa47 = 0, $$lcssa50 = 0, $$lcssa51 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $49 = 0, $5 = 0, $52 = 0, $55 = 0, $57 = 0, $60 = 0, $61 = 0, $__nd$0$be$in$i = 0, $__nd$0$be$in$i3 = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa48 = 0, $__nd$0$i$lcssa49 = 0, $__nd$0$i2 = 0, $__nd$0$i2$lcssa = 0, $__nd$0$i2$lcssa45 = 0, $__nd$0$i2$lcssa46 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 if (($1 | 0) != ($0 | 0)) {
  $4 = HEAP32[$__v >> 2] | 0;
  $5 = HEAP32[$1 + 16 >> 2] | 0;
  if ($4 >>> 0 >= $5 >>> 0) {
   if ($5 >>> 0 >= $4 >>> 0) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $37 = HEAP32[$1 + 4 >> 2] | 0;
   if (!$37) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $42 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$42 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $42;
      break;
     } else $$0$i$i$i$i$i = $42;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $37;
    while (1) {
     $39 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$39) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $39;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($4 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $52 = HEAP32[$0 >> 2] | 0;
    if (!$52) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     return $$0 | 0;
    }
    $__nd$0$i = $52;
    while (1) {
     $55 = HEAP32[$__nd$0$i + 16 >> 2] | 0;
     if ($4 >>> 0 < $55 >>> 0) {
      $57 = HEAP32[$__nd$0$i >> 2] | 0;
      if (!$57) {
       $$lcssa51 = $__nd$0$i;
       $__nd$0$i$lcssa49 = $__nd$0$i;
       label = 43;
       break;
      } else $__nd$0$be$in$i = $57;
     } else {
      if ($55 >>> 0 >= $4 >>> 0) {
       $__nd$0$i$lcssa = $__nd$0$i;
       label = 48;
       break;
      }
      $60 = $__nd$0$i + 4 | 0;
      $61 = HEAP32[$60 >> 2] | 0;
      if (!$61) {
       $$lcssa50 = $60;
       $__nd$0$i$lcssa48 = $__nd$0$i;
       label = 47;
       break;
      } else $__nd$0$be$in$i = $61;
     }
     $__nd$0$i = $__nd$0$be$in$i;
    }
    if ((label | 0) == 43) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa49;
     $$0 = $$lcssa51;
     return $$0 | 0;
    } else if ((label | 0) == 47) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa48;
     $$0 = $$lcssa50;
     return $$0 | 0;
    } else if ((label | 0) == 48) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
     $$0 = $__parent;
     return $$0 | 0;
    }
   }
   $49 = $1 + 4 | 0;
   if (!(HEAP32[$49 >> 2] | 0)) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $49;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 $$pre = HEAP32[$1 >> 2] | 0;
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $22 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $14 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $14; else {
     $$cast$i$i$lcssa = $14;
     break;
    }
   }
   $$01$i$i = $$cast$i$i$lcssa;
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $11 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$11) {
     $$0$i$i$i$lcssa = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $11;
   }
   $$01$i$i = $$0$i$i$i$lcssa;
  }
  $19 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $19 >>> 0) $22 = $$01$i$i; else {
   $24 = HEAP32[$0 >> 2] | 0;
   if (!$24) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    return $$0 | 0;
   }
   $__nd$0$i2 = $24;
   while (1) {
    $27 = HEAP32[$__nd$0$i2 + 16 >> 2] | 0;
    if ($19 >>> 0 < $27 >>> 0) {
     $29 = HEAP32[$__nd$0$i2 >> 2] | 0;
     if (!$29) {
      $$lcssa47 = $__nd$0$i2;
      $__nd$0$i2$lcssa46 = $__nd$0$i2;
      label = 19;
      break;
     } else $__nd$0$be$in$i3 = $29;
    } else {
     if ($27 >>> 0 >= $19 >>> 0) {
      $__nd$0$i2$lcssa = $__nd$0$i2;
      label = 24;
      break;
     }
     $32 = $__nd$0$i2 + 4 | 0;
     $33 = HEAP32[$32 >> 2] | 0;
     if (!$33) {
      $$lcssa = $32;
      $__nd$0$i2$lcssa45 = $__nd$0$i2;
      label = 23;
      break;
     } else $__nd$0$be$in$i3 = $33;
    }
    $__nd$0$i2 = $__nd$0$be$in$i3;
   }
   if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa46;
    $$0 = $$lcssa47;
    return $$0 | 0;
   } else if ((label | 0) == 23) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa45;
    $$0 = $$lcssa;
    return $$0 | 0;
   } else if ((label | 0) == 24) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa;
    $$0 = $__parent;
    return $$0 | 0;
   }
  }
 }
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $22;
  $$0 = $22 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, $args, $args1, $args2, $args3) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $$0$i7$i$i$i = 0, $$0$i8$i$i$i = 0, $$idx$pre$phi$iZZ2D = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx4$val$i = 0, $$idx5$val$i = 0, $$idx6$i = 0, $$idx6$val$i = 0, $$idx6$val$pre$i = 0, $$idx6$val11$i = 0, $$idx6$val14$i = 0, $$idx7$val$i = 0, $$idx7$val12$i = 0, $$idx7$val18$i = 0, $$lcssa = 0, $$lcssa$i = 0, $0 = 0, $10 = 0, $103 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $50 = 0, $56 = 0, $57 = 0, $63 = 0, $76 = 0, $79 = 0, $83 = 0, $9 = 0, $92 = 0, $97 = 0, $99 = 0, $i$013$i = 0, $i$1$i = 0, $scevgep4$i$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0;
 $0 = __Znwj(56) | 0;
 HEAP32[$0 >> 2] = 39552;
 HEAP8[$0 + 5 >> 0] = 0;
 HEAP32[$0 + 24 >> 2] = $args;
 $4 = $0 + 32 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = $4;
 HEAP32[$0 + 40 >> 2] = $args1;
 HEAP32[$0 + 44 >> 2] = $args2;
 HEAP32[$0 + 48 >> 2] = $args3;
 $9 = $this + 20 | 0;
 $10 = $this + 24 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $this + 28 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($11 >>> 0 < $13 >>> 0) {
  if (!$11) $17 = 0; else {
   HEAP32[$11 >> 2] = $0;
   $17 = HEAP32[$10 >> 2] | 0;
  }
  $16 = $17 + 4 | 0;
  HEAP32[$10 >> 2] = $16;
  $$idx$pre$phi$iZZ2D = $9;
  $$idx1$val$i = $16;
 } else {
  $this$idx2$val$i$i$i = HEAP32[$9 >> 2] | 0;
  $22 = ($11 - $this$idx2$val$i$i$i >> 2) + 1 | 0;
  if ($22 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($9);
   $$idx1$val$i$i$i$i$i = HEAP32[$12 >> 2] | 0;
   $25 = HEAP32[$9 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i$i = $13;
   $25 = $this$idx2$val$i$i$i;
  }
  $26 = $25;
  $27 = $$idx1$val$i$i$i$i$i - $26 | 0;
  if ($27 >> 2 >>> 0 < 536870911) {
   $33 = $27 >> 1;
   $35 = $33 >>> 0 < $22 >>> 0 ? $22 : $33;
   $37 = (HEAP32[$10 >> 2] | 0) - $26 | 0;
   $38 = $37 >> 2;
   if (!$35) {
    $$0$i8$i$i$i = 0;
    $43 = 0;
    $44 = $38;
    $48 = $37;
   } else {
    $$0$i7$i$i$i = $35;
    $105 = $38;
    $106 = $37;
    label = 10;
   }
  } else {
   $31 = (HEAP32[$10 >> 2] | 0) - $26 | 0;
   $$0$i7$i$i$i = 1073741823;
   $105 = $31 >> 2;
   $106 = $31;
   label = 10;
  }
  if ((label | 0) == 10) {
   $$0$i8$i$i$i = $$0$i7$i$i$i;
   $43 = __Znwj($$0$i7$i$i$i << 2) | 0;
   $44 = $105;
   $48 = $106;
  }
  $42 = $43 + ($44 << 2) | 0;
  if ($42) HEAP32[$42 >> 2] = $0;
  $47 = $43 + ($44 + 1 << 2) | 0;
  _memcpy($43 | 0, $25 | 0, $48 | 0) | 0;
  HEAP32[$9 >> 2] = $43;
  HEAP32[$10 >> 2] = $47;
  HEAP32[$12 >> 2] = $43 + ($$0$i8$i$i$i << 2);
  if (!$25) {
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = $47;
  } else {
   __ZdlPv($25);
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = HEAP32[$10 >> 2] | 0;
  }
 }
 $50 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$50 >> 0] | 0;
 $56 = $$idx1$val$i - (HEAP32[$$idx$pre$phi$iZZ2D >> 2] | 0) >> 2;
 $57 = $this + 48 | 0;
 HEAP32[$57 >> 2] = $56;
 if ($56 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) return $0 | 0;
 $63 = $this + 44 | 0;
 if (!(+($56 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$63 >> 2] | 0) >>> 0))) return $0 | 0;
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 72 | 0, $this);
 if (HEAP32[$this + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 64 >> 2] | 0);
 $76 = (HEAP8[$50 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$50 >> 0] = $76;
 $$idx6$i = $this + 20 | 0;
 $$idx6$val11$i = HEAP32[$$idx6$i >> 2] | 0;
 $$idx7$val12$i = HEAP32[$10 >> 2] | 0;
 if (($$idx7$val12$i | 0) == ($$idx6$val11$i | 0)) $$lcssa$i = 0; else {
  $$idx6$val14$i = $$idx6$val11$i;
  $$idx7$val18$i = $$idx7$val12$i;
  $83 = $76;
  $i$013$i = 0;
  while (1) {
   $79 = HEAP32[$$idx6$val14$i + ($i$013$i << 2) >> 2] | 0;
   if ((HEAP8[$79 + 4 >> 0] | 0) == $83 << 24 >> 24) {
    $$idx6$val$i = $$idx6$val14$i;
    $$idx7$val$i = $$idx7$val18$i;
    $i$1$i = $i$013$i;
   } else {
    if (!$79) {
     $$idx4$val$i = $$idx6$val14$i;
     $$idx5$val$i = $$idx7$val18$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$79 >> 2] | 0) + 4 >> 2] & 255]($79);
     $$idx4$val$i = HEAP32[$$idx6$i >> 2] | 0;
     $$idx5$val$i = HEAP32[$10 >> 2] | 0;
    }
    $92 = ($$idx5$val$i - $$idx4$val$i >> 2) + -1 | 0;
    if (($i$013$i | 0) == ($92 | 0)) {
     $$idx6$val$pre$i = $$idx4$val$i;
     $97 = $$idx5$val$i;
    } else {
     HEAP32[$$idx4$val$i + ($i$013$i << 2) >> 2] = HEAP32[$$idx4$val$i + ($92 << 2) >> 2];
     $$idx6$val$pre$i = HEAP32[$$idx6$i >> 2] | 0;
     $97 = HEAP32[$10 >> 2] | 0;
    }
    $scevgep4$i$i$i$i = $97 + -4 | 0;
    HEAP32[$10 >> 2] = $scevgep4$i$i$i$i;
    $$idx6$val$i = $$idx6$val$pre$i;
    $$idx7$val$i = $scevgep4$i$i$i$i;
    $i$1$i = $i$013$i + -1 | 0;
   }
   $99 = $i$1$i + 1 | 0;
   $103 = $$idx7$val$i - $$idx6$val$i >> 2;
   if ($99 >>> 0 >= $103 >>> 0) {
    $$lcssa = $103;
    break;
   }
   $$idx6$val14$i = $$idx6$val$i;
   $$idx7$val18$i = $$idx7$val$i;
   $83 = HEAP8[$50 >> 0] | 0;
   $i$013$i = $99;
  }
  $$lcssa$i = $$lcssa;
 }
 HEAP32[$57 >> 2] = $$lcssa$i;
 HEAP32[$63 >> 2] = $$lcssa$i;
 return $0 | 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $37 = 0, $40 = 0, $41 = 0, $46 = 0, $48 = 0, $5 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $84 = 0, $86 = 0, $88 = 0, $89 = 0, $93 = 0, $94 = 0, $96 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 24 | 0;
 $__wbuf = sp + 32 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 28 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $31 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$017 = tempRet0;
  $$09 = $31;
  $93 = $__wbuf;
  label = 37;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 47968) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if (!($6 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $8 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $8;
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    if ($11) {
     if (!(HEAP8[$__v >> 0] & 1)) {
      HEAP8[$__v + 1 >> 0] = 0;
      HEAP8[$__v >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__v + 8 >> 2] >> 0] = 0;
      HEAP32[$__v + 4 >> 2] = 0;
     }
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $26 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] | 0, $5 | 0, 45) | 0;
      $27 = __THREW__;
      __THREW__ = 0;
      if ($27 & 1) break;
      __THREW__ = 0;
      invoke_vii(44, $__v | 0, $26 | 0);
      $29 = __THREW__;
      __THREW__ = 0;
      if ($29 & 1) break;
     }
     __THREW__ = 0;
     $36 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] | 0, $5 | 0, 48) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) break;
     $40 = HEAP32[$__wn >> 2] | 0;
     $41 = $40 + -1 | 0;
     $__w$0 = HEAP32[$__wb >> 2] | 0;
     while (1) {
      if ($__w$0 >>> 0 >= $41 >>> 0) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      if ((HEAP8[$__w$0 >> 0] | 0) != $36 << 24 >> 24) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      $__w$0 = $__w$0 + 1 | 0;
     }
     __THREW__ = 0;
     invoke_iiii(37, $__v | 0, $__w$0$lcssa | 0, $40 | 0) | 0;
     $46 = __THREW__;
     __THREW__ = 0;
     if ($46 & 1) break;
    }
    $48 = HEAP32[$__b >> 2] | 0;
    do if (!$48) $62 = 0; else if ((HEAP32[$48 + 12 >> 2] | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $58 = invoke_ii(HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] | 0, $48 | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) break L4;
     if (($58 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $62 = 0;
      break;
     } else {
      $62 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $62 = $48; while (0);
    $63 = ($62 | 0) == 0;
    do if (!$8) label = 30; else {
     if ((HEAP32[$8 + 12 >> 2] | 0) == (HEAP32[$8 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $73 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] | 0, $8 | 0) | 0;
      $74 = __THREW__;
      __THREW__ = 0;
      if ($74 & 1) break L4;
      if (($73 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 30;
       break;
      }
     }
     if (!$63) label = 31;
    } while (0);
    if ((label | 0) == 30) if ($63) label = 31;
    if ((label | 0) == 31) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $81 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($81) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $81 | 0);
     $84 = __THREW__;
     __THREW__ = 0;
     if ($84 & 1) {
      $86 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($86);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  $88 = ___cxa_find_matching_catch() | 0;
  $89 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$010 = $88;
   $$018 = $89;
  } else {
   $$017 = $89;
   $$09 = $88;
   $93 = $$pre;
   label = 37;
  }
 }
 if ((label | 0) == 37) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $93 | 0);
  $94 = __THREW__;
  __THREW__ = 0;
  if ($94 & 1) {
   $96 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($96);
  } else {
   $$010 = $$09;
   $$018 = $$017;
  }
 }
 ___resumeException($$010 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierDniDnEEEPT_DpT0_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $$0$i7$i$i$i = 0, $$0$i8$i$i$i = 0, $$idx$pre$phi$iZZ2D = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx4$val$i = 0, $$idx5$val$i = 0, $$idx6$i = 0, $$idx6$val$i = 0, $$idx6$val$pre$i = 0, $$idx6$val11$i = 0, $$idx6$val14$i = 0, $$idx7$val$i = 0, $$idx7$val12$i = 0, $$idx7$val18$i = 0, $$lcssa = 0, $$lcssa$i = 0, $0 = 0, $10 = 0, $103 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $50 = 0, $56 = 0, $57 = 0, $63 = 0, $76 = 0, $79 = 0, $83 = 0, $9 = 0, $92 = 0, $97 = 0, $99 = 0, $i$013$i = 0, $i$1$i = 0, $scevgep4$i$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0;
 $0 = __Znwj(56) | 0;
 HEAP32[$0 >> 2] = 39552;
 HEAP8[$0 + 5 >> 0] = 0;
 HEAP32[$0 + 24 >> 2] = $args;
 $4 = $0 + 32 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = $4;
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$0 + 44 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = 0;
 $9 = $this + 20 | 0;
 $10 = $this + 24 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $this + 28 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($11 >>> 0 < $13 >>> 0) {
  if (!$11) $17 = 0; else {
   HEAP32[$11 >> 2] = $0;
   $17 = HEAP32[$10 >> 2] | 0;
  }
  $16 = $17 + 4 | 0;
  HEAP32[$10 >> 2] = $16;
  $$idx$pre$phi$iZZ2D = $9;
  $$idx1$val$i = $16;
 } else {
  $this$idx2$val$i$i$i = HEAP32[$9 >> 2] | 0;
  $22 = ($11 - $this$idx2$val$i$i$i >> 2) + 1 | 0;
  if ($22 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($9);
   $$idx1$val$i$i$i$i$i = HEAP32[$12 >> 2] | 0;
   $25 = HEAP32[$9 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i$i = $13;
   $25 = $this$idx2$val$i$i$i;
  }
  $26 = $25;
  $27 = $$idx1$val$i$i$i$i$i - $26 | 0;
  if ($27 >> 2 >>> 0 < 536870911) {
   $33 = $27 >> 1;
   $35 = $33 >>> 0 < $22 >>> 0 ? $22 : $33;
   $37 = (HEAP32[$10 >> 2] | 0) - $26 | 0;
   $38 = $37 >> 2;
   if (!$35) {
    $$0$i8$i$i$i = 0;
    $43 = 0;
    $44 = $38;
    $48 = $37;
   } else {
    $$0$i7$i$i$i = $35;
    $105 = $38;
    $106 = $37;
    label = 10;
   }
  } else {
   $31 = (HEAP32[$10 >> 2] | 0) - $26 | 0;
   $$0$i7$i$i$i = 1073741823;
   $105 = $31 >> 2;
   $106 = $31;
   label = 10;
  }
  if ((label | 0) == 10) {
   $$0$i8$i$i$i = $$0$i7$i$i$i;
   $43 = __Znwj($$0$i7$i$i$i << 2) | 0;
   $44 = $105;
   $48 = $106;
  }
  $42 = $43 + ($44 << 2) | 0;
  if ($42) HEAP32[$42 >> 2] = $0;
  $47 = $43 + ($44 + 1 << 2) | 0;
  _memcpy($43 | 0, $25 | 0, $48 | 0) | 0;
  HEAP32[$9 >> 2] = $43;
  HEAP32[$10 >> 2] = $47;
  HEAP32[$12 >> 2] = $43 + ($$0$i8$i$i$i << 2);
  if (!$25) {
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = $47;
  } else {
   __ZdlPv($25);
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = HEAP32[$10 >> 2] | 0;
  }
 }
 $50 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$50 >> 0] | 0;
 $56 = $$idx1$val$i - (HEAP32[$$idx$pre$phi$iZZ2D >> 2] | 0) >> 2;
 $57 = $this + 48 | 0;
 HEAP32[$57 >> 2] = $56;
 if ($56 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) return $0 | 0;
 $63 = $this + 44 | 0;
 if (!(+($56 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$63 >> 2] | 0) >>> 0))) return $0 | 0;
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 72 | 0, $this);
 if (HEAP32[$this + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 64 >> 2] | 0);
 $76 = (HEAP8[$50 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$50 >> 0] = $76;
 $$idx6$i = $this + 20 | 0;
 $$idx6$val11$i = HEAP32[$$idx6$i >> 2] | 0;
 $$idx7$val12$i = HEAP32[$10 >> 2] | 0;
 if (($$idx7$val12$i | 0) == ($$idx6$val11$i | 0)) $$lcssa$i = 0; else {
  $$idx6$val14$i = $$idx6$val11$i;
  $$idx7$val18$i = $$idx7$val12$i;
  $83 = $76;
  $i$013$i = 0;
  while (1) {
   $79 = HEAP32[$$idx6$val14$i + ($i$013$i << 2) >> 2] | 0;
   if ((HEAP8[$79 + 4 >> 0] | 0) == $83 << 24 >> 24) {
    $$idx6$val$i = $$idx6$val14$i;
    $$idx7$val$i = $$idx7$val18$i;
    $i$1$i = $i$013$i;
   } else {
    if (!$79) {
     $$idx4$val$i = $$idx6$val14$i;
     $$idx5$val$i = $$idx7$val18$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$79 >> 2] | 0) + 4 >> 2] & 255]($79);
     $$idx4$val$i = HEAP32[$$idx6$i >> 2] | 0;
     $$idx5$val$i = HEAP32[$10 >> 2] | 0;
    }
    $92 = ($$idx5$val$i - $$idx4$val$i >> 2) + -1 | 0;
    if (($i$013$i | 0) == ($92 | 0)) {
     $$idx6$val$pre$i = $$idx4$val$i;
     $97 = $$idx5$val$i;
    } else {
     HEAP32[$$idx4$val$i + ($i$013$i << 2) >> 2] = HEAP32[$$idx4$val$i + ($92 << 2) >> 2];
     $$idx6$val$pre$i = HEAP32[$$idx6$i >> 2] | 0;
     $97 = HEAP32[$10 >> 2] | 0;
    }
    $scevgep4$i$i$i$i = $97 + -4 | 0;
    HEAP32[$10 >> 2] = $scevgep4$i$i$i$i;
    $$idx6$val$i = $$idx6$val$pre$i;
    $$idx7$val$i = $scevgep4$i$i$i$i;
    $i$1$i = $i$013$i + -1 | 0;
   }
   $99 = $i$1$i + 1 | 0;
   $103 = $$idx7$val$i - $$idx6$val$i >> 2;
   if ($99 >>> 0 >= $103 >>> 0) {
    $$lcssa = $103;
    break;
   }
   $$idx6$val14$i = $$idx6$val$i;
   $$idx7$val18$i = $$idx7$val$i;
   $83 = HEAP8[$50 >> 0] | 0;
   $i$013$i = $99;
  }
  $$lcssa$i = $$lcssa;
 }
 HEAP32[$57 >> 2] = $$lcssa$i;
 HEAP32[$63 >> 2] = $$lcssa$i;
 return $0 | 0;
}

function __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$01$i = 0, $$lcssa = 0, $$pre5 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $45 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, dest = 0, src = 0, stop = 0, $$01$i$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 $$pre5 = HEAP32[$3 >> 2] | 0;
 if (($2 | 0) == ($0 | 0)) {
  $81 = $$pre5;
  $82 = $0;
  HEAP32[$this >> 2] = $81;
  HEAP32[$3 >> 2] = $82;
  $83 = $__v + 8 | 0;
  $84 = HEAP32[$1 >> 2] | 0;
  $85 = HEAP32[$83 >> 2] | 0;
  HEAP32[$1 >> 2] = $85;
  HEAP32[$83 >> 2] = $84;
  $86 = $this + 8 | 0;
  $87 = $__v + 12 | 0;
  $88 = HEAP32[$86 >> 2] | 0;
  $89 = HEAP32[$87 >> 2] | 0;
  HEAP32[$86 >> 2] = $89;
  HEAP32[$87 >> 2] = $88;
  $90 = HEAP32[$3 >> 2] | 0;
  HEAP32[$__v >> 2] = $90;
  return;
 }
 $$01$i = $2;
 $6 = $$pre5;
 while (1) {
  $$01$i$looptemp = $$01$i;
  $$01$i = $$01$i + -144 | 0;
  $8 = $$01$i;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $6 + -144 | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $18 = $6 + -136 | 0;
  $19 = $$01$i$looptemp + -136 | 0;
  HEAP32[$18 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
  HEAP32[$19 + 0 >> 2] = 0;
  HEAP32[$19 + 4 >> 2] = 0;
  HEAP32[$19 + 8 >> 2] = 0;
  $20 = $6 + -124 | 0;
  $21 = $$01$i$looptemp + -124 | 0;
  HEAP32[$20 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
  HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
  HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
  HEAP32[$20 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
  dest = $6 + -108 + 0 | 0;
  src = $$01$i$looptemp + -108 + 0 | 0;
  stop = dest + 40 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $24 = $6 + -68 | 0;
  $25 = $$01$i$looptemp + -68 | 0;
  HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
  $29 = HEAP32[$$01$i$looptemp + -64 >> 2] | 0;
  HEAP32[$6 + -64 >> 2] = $29;
  $30 = $$01$i$looptemp + -60 | 0;
  $32 = HEAP32[$30 >> 2] | 0;
  HEAP32[$6 + -60 >> 2] = $32;
  $34 = $6 + -64 | 0;
  if (!$32) HEAP32[$24 >> 2] = $34; else {
   HEAP32[$29 + 8 >> 2] = $34;
   $36 = $$01$i$looptemp + -64 | 0;
   HEAP32[$25 >> 2] = $36;
   HEAP32[$36 >> 2] = 0;
   HEAP32[$30 >> 2] = 0;
  }
  $37 = $6 + -56 | 0;
  $38 = $$01$i$looptemp + -56 | 0;
  HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
  $40 = $6 + -52 | 0;
  $41 = $$01$i$looptemp + -52 | 0;
  HEAP32[$40 >> 2] = HEAP32[$41 >> 2];
  $45 = HEAP32[$$01$i$looptemp + -48 >> 2] | 0;
  HEAP32[$6 + -48 >> 2] = $45;
  $46 = $$01$i$looptemp + -44 | 0;
  $48 = HEAP32[$46 >> 2] | 0;
  HEAP32[$6 + -44 >> 2] = $48;
  $50 = $6 + -48 | 0;
  if (!$48) HEAP32[$40 >> 2] = $50; else {
   HEAP32[$45 + 8 >> 2] = $50;
   $52 = $$01$i$looptemp + -48 | 0;
   HEAP32[$41 >> 2] = $52;
   HEAP32[$52 >> 2] = 0;
   HEAP32[$46 >> 2] = 0;
  }
  HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
  $54 = $6 + -40 | 0;
  HEAP32[$54 >> 2] = 0;
  $55 = $6 + -36 | 0;
  HEAP32[$55 >> 2] = 0;
  $56 = $6 + -32 | 0;
  HEAP32[$56 >> 2] = 0;
  $57 = $$01$i$looptemp + -40 | 0;
  HEAP32[$54 >> 2] = HEAP32[$57 >> 2];
  $59 = $$01$i$looptemp + -36 | 0;
  HEAP32[$55 >> 2] = HEAP32[$59 >> 2];
  $61 = $$01$i$looptemp + -32 | 0;
  HEAP32[$56 >> 2] = HEAP32[$61 >> 2];
  HEAP32[$61 >> 2] = 0;
  HEAP32[$59 >> 2] = 0;
  HEAP32[$57 >> 2] = 0;
  $63 = $6 + -28 | 0;
  $64 = $$01$i$looptemp + -28 | 0;
  HEAP32[$63 + 0 >> 2] = HEAP32[$64 + 0 >> 2];
  HEAP32[$63 + 4 >> 2] = HEAP32[$64 + 4 >> 2];
  HEAP32[$63 + 8 >> 2] = HEAP32[$64 + 8 >> 2];
  $65 = $6 + -16 | 0;
  $66 = $$01$i$looptemp + -16 | 0;
  HEAP32[$65 >> 2] = HEAP32[$66 >> 2];
  $70 = HEAP32[$$01$i$looptemp + -12 >> 2] | 0;
  HEAP32[$6 + -12 >> 2] = $70;
  $71 = $$01$i$looptemp + -8 | 0;
  $73 = HEAP32[$71 >> 2] | 0;
  HEAP32[$6 + -8 >> 2] = $73;
  $75 = $6 + -12 | 0;
  if (!$73) HEAP32[$65 >> 2] = $75; else {
   HEAP32[$70 + 8 >> 2] = $75;
   $77 = $$01$i$looptemp + -12 | 0;
   HEAP32[$66 >> 2] = $77;
   HEAP32[$77 >> 2] = 0;
   HEAP32[$71 >> 2] = 0;
  }
  $79 = (HEAP32[$3 >> 2] | 0) + -144 | 0;
  HEAP32[$3 >> 2] = $79;
  if (($$01$i | 0) == ($0 | 0)) {
   $$lcssa = $79;
   break;
  } else $6 = $79;
 }
 $81 = $$lcssa;
 $82 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $81;
 HEAP32[$3 >> 2] = $82;
 $83 = $__v + 8 | 0;
 $84 = HEAP32[$1 >> 2] | 0;
 $85 = HEAP32[$83 >> 2] | 0;
 HEAP32[$1 >> 2] = $85;
 HEAP32[$83 >> 2] = $84;
 $86 = $this + 8 | 0;
 $87 = $__v + 12 | 0;
 $88 = HEAP32[$86 >> 2] | 0;
 $89 = HEAP32[$87 >> 2] | 0;
 HEAP32[$86 >> 2] = $89;
 HEAP32[$87 >> 2] = $88;
 $90 = HEAP32[$3 >> 2] | 0;
 HEAP32[$__v >> 2] = $90;
 return;
}

function __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$34 = 0, $$36 = 0, $$38 = 0, $$40 = 0, $$42 = 0, $$lcssa = 0, $$lcssa49 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $105 = 0, $109 = 0, $110 = 0, $112 = 0, $12 = 0, $121 = 0, $123 = 0, $124 = 0, $128 = 0, $129 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $35 = 0, $38 = 0, $39 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $58 = 0, $59 = 0, $61 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $77 = 0, $8 = 0, $87 = 0, $89 = 0, $9 = 0, $90 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa47 = 0, $__nd$0$lcssa48 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $9 = $__k + 12 | 0;
 $10 = HEAP8[$9 >> 0] | 0;
 $12 = ($10 & 1) == 0;
 $14 = ($10 & 255) >>> 1;
 $15 = $9 + 1 | 0;
 $17 = HEAP32[$__k + 20 >> 2] | 0;
 $19 = HEAP32[$__k + 16 >> 2] | 0;
 $21 = HEAP32[$__k + 8 >> 2] | 0;
 $23 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 L5 : while (1) {
  $24 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $23;
  $25 = HEAP8[$24 >> 0] | 0;
  $27 = ($25 & 1) == 0;
  if ($27) $35 = ($25 & 255) >>> 1; else $35 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($27) $38 = $24 + 1 | 0; else $38 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $39 = _memcmp($5 ? $8 : $21, $38, $35 >>> 0 < $$ >>> 0 ? $35 : $$) | 0;
  if (!$39) if ($$ >>> 0 < $35 >>> 0) label = 30; else label = 12; else if (($39 | 0) < 0) label = 30; else label = 12;
  L18 : do if ((label | 0) == 12) {
   label = 0;
   if ($27) $51 = ($25 & 255) >>> 1; else $51 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$34 = $5 ? $7 : $23;
   if ($27) $53 = $24 + 1 | 0; else $53 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $54 = _memcmp($53, $5 ? $8 : $21, $$34 >>> 0 < $51 >>> 0 ? $$34 : $51) | 0;
   if (!$54) {
    if ($51 >>> 0 >= $$34 >>> 0) label = 21;
   } else if (($54 | 0) >= 0) label = 21;
   do if ((label | 0) == 21) {
    label = 0;
    $58 = $__nd$0 + 28 | 0;
    $$36 = $12 ? $14 : $19;
    $59 = HEAP8[$58 >> 0] | 0;
    $61 = ($59 & 1) == 0;
    if ($61) $69 = ($59 & 255) >>> 1; else $69 = HEAP32[$__nd$0 + 32 >> 2] | 0;
    if ($61) $72 = $58 + 1 | 0; else $72 = HEAP32[$__nd$0 + 36 >> 2] | 0;
    $73 = _memcmp($12 ? $15 : $17, $72, $69 >>> 0 < $$36 >>> 0 ? $69 : $$36) | 0;
    if (!$73) if ($$36 >>> 0 < $69 >>> 0) {
     label = 30;
     break L18;
    } else break; else if (($73 | 0) < 0) {
     label = 30;
     break L18;
    } else break;
   } while (0);
   if ($27) $87 = ($25 & 255) >>> 1; else $87 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$38 = $5 ? $7 : $23;
   if ($27) $89 = $24 + 1 | 0; else $89 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $90 = _memcmp($89, $5 ? $8 : $21, $$38 >>> 0 < $87 >>> 0 ? $$38 : $87) | 0;
   if (!$90) {
    if ($87 >>> 0 >= $$38 >>> 0) label = 41;
   } else if (($90 | 0) >= 0) label = 41;
   do if ((label | 0) == 41) {
    label = 0;
    $$40 = $5 ? $7 : $23;
    if ($27) $101 = ($25 & 255) >>> 1; else $101 = HEAP32[$__nd$0 + 20 >> 2] | 0;
    if ($27) $104 = $24 + 1 | 0; else $104 = HEAP32[$__nd$0 + 24 >> 2] | 0;
    $105 = _memcmp($5 ? $8 : $21, $104, $101 >>> 0 < $$40 >>> 0 ? $101 : $$40) | 0;
    if (!$105) {
     if ($$40 >>> 0 < $101 >>> 0) {
      $__nd$0$lcssa = $__nd$0;
      label = 62;
      break L5;
     }
    } else if (($105 | 0) < 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 62;
     break L5;
    }
    $109 = $__nd$0 + 28 | 0;
    $110 = HEAP8[$109 >> 0] | 0;
    $112 = ($110 & 1) == 0;
    if ($112) $121 = ($110 & 255) >>> 1; else $121 = HEAP32[$__nd$0 + 32 >> 2] | 0;
    $$42 = $12 ? $14 : $19;
    if ($112) $123 = $109 + 1 | 0; else $123 = HEAP32[$__nd$0 + 36 >> 2] | 0;
    $124 = _memcmp($123, $12 ? $15 : $17, $$42 >>> 0 < $121 >>> 0 ? $$42 : $121) | 0;
    if (!$124) if ($121 >>> 0 < $$42 >>> 0) break; else {
     $__nd$0$lcssa = $__nd$0;
     label = 62;
     break L5;
    } else if (($124 | 0) < 0) break; else {
     $__nd$0$lcssa = $__nd$0;
     label = 62;
     break L5;
    }
   } while (0);
   $128 = $__nd$0 + 4 | 0;
   $129 = HEAP32[$128 >> 2] | 0;
   if (!$129) {
    $$lcssa = $128;
    $__nd$0$lcssa47 = $__nd$0;
    label = 61;
    break L5;
   } else $__nd$0$be$in = $129;
  } while (0);
  if ((label | 0) == 30) {
   label = 0;
   $77 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$77) {
    $$lcssa49 = $__nd$0;
    $__nd$0$lcssa48 = $__nd$0;
    label = 31;
    break;
   } else $__nd$0$be$in = $77;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 31) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa48;
  $$0 = $$lcssa49;
  return $$0 | 0;
 } else if ((label | 0) == 61) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa47;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 62) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $62 = 0, $9 = 0, $__i$0$i$i$i = 0;
 L1 : do if (!(HEAP8[48328] | 0)) if (___cxa_guard_acquire(48328) | 0) {
  if (!(HEAP8[53712] | 0)) if (___cxa_guard_acquire(53712) | 0) {
   $9 = 53424;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 53712);
   ___cxa_atexit(196, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(53712);
  }
  __THREW__ = 0;
  invoke_iii(38, 53424, 53720) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  do if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(38, 53436, 53752) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(38, 53448, 53792) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(38, 53460, 53816) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(38, 53472, 53840) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(38, 53484, 53856) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(38, 53496, 53880) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(38, 53508, 53904) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(38, 53520, 53936) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(38, 53532, 53976) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(38, 53544, 54008) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(38, 53556, 54048) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(38, 53568, 54088) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(38, 53580, 54104) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                __THREW__ = 0;
                invoke_iii(38, 53592, 54120) | 0;
                $41 = __THREW__;
                __THREW__ = 0;
                if (!($41 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(38, 53604, 54136) | 0;
                 $43 = __THREW__;
                 __THREW__ = 0;
                 if ($43 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53616, 53840) | 0;
                 $45 = __THREW__;
                 __THREW__ = 0;
                 if ($45 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53628, 54152) | 0;
                 $47 = __THREW__;
                 __THREW__ = 0;
                 if ($47 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53640, 54168) | 0;
                 $49 = __THREW__;
                 __THREW__ = 0;
                 if ($49 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53652, 54184) | 0;
                 $51 = __THREW__;
                 __THREW__ = 0;
                 if ($51 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53664, 54200) | 0;
                 $53 = __THREW__;
                 __THREW__ = 0;
                 if ($53 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53676, 54216) | 0;
                 $55 = __THREW__;
                 __THREW__ = 0;
                 if ($55 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53688, 54232) | 0;
                 $57 = __THREW__;
                 __THREW__ = 0;
                 if ($57 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 53700, 54248) | 0;
                 $59 = __THREW__;
                 __THREW__ = 0;
                 if ($59 & 1) break;
                 HEAP32[12080] = 53424;
                 ___cxa_guard_release(48328);
                 break L1;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while (0);
  $62 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48328);
  ___resumeException($62 | 0);
 } while (0);
 return HEAP32[12080] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $62 = 0, $9 = 0, $__i$0$i$i$i = 0;
 L1 : do if (!(HEAP8[48312] | 0)) if (___cxa_guard_acquire(48312) | 0) {
  if (!(HEAP8[54552] | 0)) if (___cxa_guard_acquire(54552) | 0) {
   $9 = 54264;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 54552);
   ___cxa_atexit(195, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(54552);
  }
  __THREW__ = 0;
  invoke_iii(19, 54264, 54560) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  do if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 54276, 54568) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 54288, 54584) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 54300, 54592) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 54312, 54600) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 54324, 54608) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 54336, 54616) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 54348, 54624) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 54360, 54632) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 54372, 54648) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 54384, 54656) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 54396, 54672) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 54408, 54688) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(19, 54420, 54696) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                __THREW__ = 0;
                invoke_iii(19, 54432, 54704) | 0;
                $41 = __THREW__;
                __THREW__ = 0;
                if (!($41 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(19, 54444, 54712) | 0;
                 $43 = __THREW__;
                 __THREW__ = 0;
                 if ($43 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54456, 54600) | 0;
                 $45 = __THREW__;
                 __THREW__ = 0;
                 if ($45 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54468, 54720) | 0;
                 $47 = __THREW__;
                 __THREW__ = 0;
                 if ($47 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54480, 54728) | 0;
                 $49 = __THREW__;
                 __THREW__ = 0;
                 if ($49 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54492, 54736) | 0;
                 $51 = __THREW__;
                 __THREW__ = 0;
                 if ($51 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54504, 54744) | 0;
                 $53 = __THREW__;
                 __THREW__ = 0;
                 if ($53 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54516, 54752) | 0;
                 $55 = __THREW__;
                 __THREW__ = 0;
                 if ($55 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54528, 54760) | 0;
                 $57 = __THREW__;
                 __THREW__ = 0;
                 if ($57 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 54540, 54768) | 0;
                 $59 = __THREW__;
                 __THREW__ = 0;
                 if ($59 & 1) break;
                 HEAP32[12076] = 54264;
                 ___cxa_guard_release(48312);
                 break L1;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while (0);
  $62 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48312);
  ___resumeException($62 | 0);
 } while (0);
 return HEAP32[12076] | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$lcssa20 = 0, $$phi$trans$insert = 0, $$phi$trans$insert10 = 0, $$phi$trans$insert8 = 0, $$pre$phi16Z2D = 0, $$pre$phiZ2D = 0, $$pre11 = 0, $0 = 0, $100 = 0, $11 = 0, $17 = 0, $19 = 0, $24 = 0, $28 = 0, $3 = 0, $35 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $80 = 0, $86 = 0, $89 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 16)) {
  HEAP32[$this + 8 >> 2] = 0;
  HEAP32[$this + 12 >> 2] = 0;
  HEAP32[$this + 16 >> 2] = 0;
  $11 = HEAP32[$this + 52 >> 2] | 0;
  do if ($11 >>> 0 > 8) if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $24 = HEAP32[$this + 56 >> 2] | 0;
   $28 = $24 + ((HEAP32[$this + 60 >> 2] | 0) + -1) | 0;
   HEAP32[$this + 24 >> 2] = $24;
   HEAP32[$this + 20 >> 2] = $24;
   HEAP32[$this + 28 >> 2] = $28;
   $100 = $24;
   $99 = $28;
   break;
  } else {
   $17 = HEAP32[$this + 32 >> 2] | 0;
   $19 = $17 + ($11 + -1) | 0;
   HEAP32[$this + 24 >> 2] = $17;
   HEAP32[$this + 20 >> 2] = $17;
   HEAP32[$this + 28 >> 2] = $19;
   $100 = $17;
   $99 = $19;
   break;
  } else {
   HEAP32[$this + 24 >> 2] = 0;
   HEAP32[$this + 20 >> 2] = 0;
   HEAP32[$this + 28 >> 2] = 0;
   $100 = 0;
   $99 = 0;
  } while (0);
  HEAP32[$3 >> 2] = 16;
  $$pre$phi16Z2D = $this + 28 | 0;
  $$pre$phiZ2D = $this + 20 | 0;
  $97 = $100;
  $98 = $99;
 } else {
  $$phi$trans$insert = $this + 20 | 0;
  $$phi$trans$insert8 = $this + 28 | 0;
  $$pre$phi16Z2D = $$phi$trans$insert8;
  $$pre$phiZ2D = $$phi$trans$insert;
  $97 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $98 = HEAP32[$$phi$trans$insert8 >> 2] | 0;
 }
 $35 = ($__c | 0) == -1;
 $$phi$trans$insert10 = $this + 24 | 0;
 $$pre11 = HEAP32[$$phi$trans$insert10 >> 2] | 0;
 if ($35) {
  $43 = $$pre11;
  $45 = $97;
 } else {
  if (!$$pre11) {
   HEAP32[$$phi$trans$insert10 >> 2] = $__1buf;
   HEAP32[$$pre$phiZ2D >> 2] = $__1buf;
   HEAP32[$$pre$phi16Z2D >> 2] = $__1buf + 1;
   $39 = $__1buf;
  } else $39 = $$pre11;
  HEAP8[$39 >> 0] = $__c;
  $41 = (HEAP32[$$phi$trans$insert10 >> 2] | 0) + 1 | 0;
  HEAP32[$$phi$trans$insert10 >> 2] = $41;
  $43 = $41;
  $45 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 $42 = $this + 24 | 0;
 if (($43 | 0) != ($45 | 0)) {
  do if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $55 = $this + 32 | 0;
   $56 = HEAP32[$55 >> 2] | 0;
   HEAP32[$__extbe >> 2] = $56;
   $57 = $this + 68 | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (!$58) {
    $62 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($62);
    ___cxa_throw($62 | 0, 41592, 85);
   }
   $60 = $this + 72 | 0;
   $61 = $this + 52 | 0;
   $65 = $56;
   $67 = $58;
   $70 = $45;
   $71 = $43;
   while (1) {
    $72 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$67 >> 2] | 0) + 12 >> 2] & 15]($67, $60, $70, $71, $__e, $65, $65 + (HEAP32[$61 >> 2] | 0) | 0, $__extbe) | 0;
    $74 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    if ((HEAP32[$__e >> 2] | 0) == ($74 | 0)) {
     label = 32;
     break;
    }
    if (($72 | 0) == 3) {
     $$lcssa20 = $74;
     label = 23;
     break;
    }
    if ($72 >>> 0 >= 2) {
     label = 32;
     break;
    }
    $86 = HEAP32[$55 >> 2] | 0;
    $89 = (HEAP32[$__extbe >> 2] | 0) - $86 | 0;
    if ((_fwrite($86 | 0, 1, $89 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($89 | 0)) {
     label = 32;
     break;
    }
    if (($72 | 0) != 1) {
     label = 29;
     break;
    }
    $93 = HEAP32[$__e >> 2] | 0;
    $94 = HEAP32[$42 >> 2] | 0;
    HEAP32[$$pre$phiZ2D >> 2] = $93;
    HEAP32[$$pre$phi16Z2D >> 2] = $94;
    HEAP32[$42 >> 2] = $94;
    $95 = HEAP32[$57 >> 2] | 0;
    if (!$95) {
     label = 19;
     break;
    }
    $65 = HEAP32[$55 >> 2] | 0;
    $67 = $95;
    $70 = $93;
    $71 = $94;
   }
   if ((label | 0) == 19) {
    $62 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($62);
    ___cxa_throw($62 | 0, 41592, 85);
   } else if ((label | 0) == 23) {
    $80 = (HEAP32[$42 >> 2] | 0) - $$lcssa20 | 0;
    if ((_fwrite($$lcssa20 | 0, 1, $80 | 0, HEAP32[$0 >> 2] | 0) | 0) == ($80 | 0)) break; else $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 29) break; else if ((label | 0) == 32) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else {
   $51 = $43 - $45 | 0;
   if ((_fwrite($45 | 0, 1, $51 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($51 | 0)) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  HEAP32[$42 >> 2] = $97;
  HEAP32[$$pre$phiZ2D >> 2] = $97;
  HEAP32[$$pre$phi16Z2D >> 2] = $98;
 }
 $$0 = $35 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange($agg$result, $this, $loc) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 var $$0 = 0, $$0$i = 0, $$01$i = 0, $$016 = 0, $$035 = 0, $$12 = 0, $$14 = 0, $0 = 0, $1 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $33 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 168 | 0;
 $ss = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 $3 = $this + 56 | 0;
 if ((HEAP32[$3 >> 2] | 0) == 19) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, (HEAP32[$this + 64 >> 2] | 0) + 8 | 0);
  STACKTOP = sp;
  return;
 }
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 592;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$6 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $23 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $23;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 572;
 HEAP32[$6 >> 2] = 612;
 HEAP32[$7 >> 2] = 592;
 __THREW__ = 0;
 invoke_vi(177, $8 | 0);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $25;
 } else {
  HEAP32[$8 >> 2] = 904;
  $17 = $ss + 44 | 0;
  HEAP32[$17 + 0 >> 2] = 0;
  HEAP32[$17 + 4 >> 2] = 0;
  HEAP32[$17 + 8 >> 2] = 0;
  HEAP32[$17 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $21 = ___cxa_find_matching_catch() | 0;
   $22 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $22;
   $eh$lpad$body$i$indexZ2D = $21;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  __THREW__ = 0;
  $27 = invoke_iiii(25, $7 | 0, 37568, 29) | 0;
  $28 = __THREW__;
  __THREW__ = 0;
  do if ($28 & 1) label = 19; else {
   __THREW__ = 0;
   invoke_vii(61, $1 | 0, HEAP32[$3 >> 2] | 0);
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) label = 19; else {
    $33 = HEAP8[$1 >> 0] | 0;
    if (!($33 & 1)) {
     $43 = $1 + 1 | 0;
     $44 = ($33 & 255) >>> 1;
    } else {
     $43 = HEAP32[$1 + 8 >> 2] | 0;
     $44 = HEAP32[$1 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_iiii(25, $27 | 0, $43 | 0, $44 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     $57 = ___cxa_find_matching_catch() | 0;
     $58 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     $$12 = $58;
     $$14 = $57;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $47 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_vii(43, $2 | 0, $8 | 0);
    $48 = __THREW__;
    __THREW__ = 0;
    if ($48 & 1) {
     $59 = ___cxa_find_matching_catch() | 0;
     $$016 = tempRet0;
     $$035 = $59;
    } else {
     __THREW__ = 0;
     invoke_viiii(16, $47 | 0, $this + 72 | 0, $loc | 0, $2 | 0);
     $51 = __THREW__;
     __THREW__ = 0;
     if ($51 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $47 | 0, 36640, 183);
      $53 = __THREW__;
      __THREW__ = 0;
      if ($53 & 1) $$0 = 0; else {}
     }
     $61 = ___cxa_find_matching_catch() | 0;
     $62 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     if ($$0) {
      $$016 = $62;
      $$035 = $61;
     } else {
      $$12 = $62;
      $$14 = $61;
      break;
     }
    }
    ___cxa_free_exception($47 | 0);
    $$12 = $$016;
    $$14 = $$035;
   }
  } while (0);
  if ((label | 0) == 19) {
   $55 = ___cxa_find_matching_catch() | 0;
   $$12 = tempRet0;
   $$14 = $55;
  }
  HEAP32[$ss >> 2] = 572;
  HEAP32[$6 >> 2] = 612;
  HEAP32[$7 >> 2] = 592;
  HEAP32[$8 >> 2] = 904;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$14 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, $curr, $start_from, $counter, $self) {
 $f = $f | 0;
 $root = $root | 0;
 $curr = $curr | 0;
 $start_from = $start_from | 0;
 $counter = $counter | 0;
 $self = $self | 0;
 var $$0 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i9 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa43 = 0, $$0$ph6$i$i$i2 = 0, $$0$ph6$i$i$i2$lcssa45 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i3 = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i5 = 0, $$013$i$i$i5$lcssa = 0, $$013$i$i$i5$lcssa$lcssa = 0, $0 = 0, $10 = 0, $12 = 0, $15 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $36 = 0, $38 = 0, $39 = 0, $50 = 0, $6 = 0, $counter2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $counter2 = sp;
 $0 = ($curr | 0) == 0;
 do if ($0) {
  $50 = HEAP32[$counter >> 2] | 0;
  label = 34;
 } else {
  $2 = ___dynamic_cast($curr, 36784, 37120, 0) | 0;
  if ($2) {
   $6 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 12 >> 2] | 0, $start_from, $counter, $self) | 0;
   if ($6) {
    $$0 = $6;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $10 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 8 >> 2] | 0, $start_from, $counter, $self) | 0;
   if (!$10) break; else $$0 = $10;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $12 = ___dynamic_cast($curr, 36784, 37176, 0) | 0;
  if ($12) {
   HEAP32[$counter2 >> 2] = 0;
   $15 = HEAP32[$12 + 8 >> 2] | 0;
   $18 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $15, $15, HEAP32[$12 + 12 >> 2] | 0, $counter2, $self) | 0;
   if (!$18) break;
   HEAP32[$counter >> 2] = HEAP32[$counter2 >> 2];
   $$0 = $18;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = HEAP32[$counter >> 2] | 0;
  if ($0 | $21 >>> 0 < $start_from >>> 0) {
   $50 = $21;
   label = 34;
  } else {
   $23 = ___dynamic_cast($curr, 36784, 36856, 0) | 0;
   if ($23) {
    $25 = $23 + 24 | 0;
    $26 = HEAP32[$25 >> 2] | 0;
    if (!$26) {
     $50 = $21;
     label = 34;
     break;
    }
    $$0$ph6$i$i$i2 = $25;
    $$01$ph5$i$i$i3 = $26;
    L20 : while (1) {
     $$013$i$i$i5 = $$01$ph5$i$i$i3;
     while (1) {
      if ((HEAP32[$$013$i$i$i5 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
       $$013$i$i$i5$lcssa = $$013$i$i$i5;
       break;
      }
      $$013$i$i$i5 = HEAP32[$$013$i$i$i5 + 4 >> 2] | 0;
      if (!$$013$i$i$i5) {
       $$0$ph6$i$i$i2$lcssa45 = $$0$ph6$i$i$i2;
       label = 17;
       break L20;
      }
     }
     $$01$ph5$i$i$i3 = HEAP32[$$013$i$i$i5$lcssa >> 2] | 0;
     if (!$$01$ph5$i$i$i3) {
      $$013$i$i$i5$lcssa$lcssa = $$013$i$i$i5$lcssa;
      label = 18;
      break;
     } else $$0$ph6$i$i$i2 = $$013$i$i$i5$lcssa;
    }
    if ((label | 0) == 17) $$0$ph$lcssa$i$i$i9 = $$0$ph6$i$i$i2$lcssa45; else if ((label | 0) == 18) $$0$ph$lcssa$i$i$i9 = $$013$i$i$i5$lcssa$lcssa;
    if (($$0$ph$lcssa$i$i$i9 | 0) == ($25 | 0)) {
     $50 = $21;
     label = 34;
     break;
    }
    if ((HEAP32[$$0$ph$lcssa$i$i$i9 + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
     $50 = $21;
     label = 34;
     break;
    }
    HEAP32[$self >> 2] = $root;
    $$0 = $23;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $36 = ___dynamic_cast($curr, 36784, 37240, 0) | 0;
   if (!$36) {
    $50 = $21;
    label = 34;
   } else {
    $38 = $36 + 32 | 0;
    $39 = HEAP32[$38 >> 2] | 0;
    if (!$39) {
     $50 = $21;
     label = 34;
    } else {
     $$0$ph6$i$i$i = $38;
     $$01$ph5$i$i$i = $39;
     L36 : while (1) {
      $$013$i$i$i = $$01$ph5$i$i$i;
      while (1) {
       if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
        $$013$i$i$i$lcssa = $$013$i$i$i;
        break;
       }
       $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
       if (!$$013$i$i$i) {
        $$0$ph6$i$i$i$lcssa43 = $$0$ph6$i$i$i;
        label = 29;
        break L36;
       }
      }
      $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
      if (!$$01$ph5$i$i$i) {
       $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
       label = 30;
       break;
      } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
     }
     if ((label | 0) == 29) $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa43; else if ((label | 0) == 30) $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
     if (($$0$ph$lcssa$i$i$i | 0) == ($38 | 0)) {
      $50 = $21;
      label = 34;
     } else if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
      $50 = $21;
      label = 34;
     } else {
      HEAP32[$self >> 2] = $root;
      $$0 = $36;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 34) HEAP32[$counter >> 2] = $50 + 1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this | 0;
 var $$sum$i1 = 0, $$sum$i11 = 0, $$sum1$i12 = 0, $$sum1$i2 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $22 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $45 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $60 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $79 = 0, $81 = 0, $83 = 0, $9 = 0, $94 = 0;
 $0 = HEAP32[_stdin >> 2] | 0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(44280, $0, 44336);
 HEAP32[10892] = 45260;
 HEAP32[10894] = 45280;
 HEAP32[10893] = 0;
 $1 = HEAP32[11312] | 0;
 __THREW__ = 0;
 invoke_vii(41, 43568 + $1 | 0, 44280);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $5 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(43576 | 0);
  ___resumeException($5 | 0);
 }
 HEAP32[$1 + 43640 >> 2] = 0;
 HEAP32[$1 + 43644 >> 2] = -1;
 $9 = HEAP32[_stdout >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(44384, $9, 44344 | 0);
 HEAP32[10914] = 45340;
 HEAP32[10915] = 45360;
 $10 = HEAP32[11332] | 0;
 __THREW__ = 0;
 invoke_vii(41, 43656 + $10 | 0, 44384);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(43660 | 0);
  ___resumeException($14 | 0);
 }
 $$sum$i1 = $10 + 72 | 0;
 HEAP32[43656 + $$sum$i1 >> 2] = 0;
 $$sum1$i2 = $10 + 76 | 0;
 HEAP32[43656 + $$sum1$i2 >> 2] = -1;
 $18 = HEAP32[_stderr >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(44432, $18, 44352 | 0);
 HEAP32[10936] = 45340;
 HEAP32[10937] = 45360;
 __THREW__ = 0;
 invoke_vii(41, 43744 + $10 | 0, 44432);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(43748 | 0);
  ___resumeException($22 | 0);
 }
 HEAP32[43744 + $$sum$i1 >> 2] = 0;
 HEAP32[43744 + $$sum1$i2 >> 2] = -1;
 $30 = HEAP32[(HEAP32[(HEAP32[10936] | 0) + -12 >> 2] | 0) + 43768 >> 2] | 0;
 HEAP32[10958] = 45340;
 HEAP32[10959] = 45360;
 __THREW__ = 0;
 invoke_vii(41, 43832 + $10 | 0, $30 | 0);
 $32 = __THREW__;
 __THREW__ = 0;
 if ($32 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(43836 | 0);
  ___resumeException($34 | 0);
 }
 HEAP32[43832 + $$sum$i1 >> 2] = 0;
 HEAP32[43832 + $$sum1$i2 >> 2] = -1;
 HEAP32[(HEAP32[(HEAP32[10892] | 0) + -12 >> 2] | 0) + 43640 >> 2] = 43656;
 $45 = (HEAP32[(HEAP32[10936] | 0) + -12 >> 2] | 0) + 43748 | 0;
 HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 8192;
 HEAP32[(HEAP32[(HEAP32[10936] | 0) + -12 >> 2] | 0) + 43816 >> 2] = 43656;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(44480, $0, 44360 | 0);
 HEAP32[10980] = 45300;
 HEAP32[10982] = 45320;
 HEAP32[10981] = 0;
 $52 = HEAP32[11322] | 0;
 __THREW__ = 0;
 invoke_vii(41, 43920 + $52 | 0, 44480);
 $54 = __THREW__;
 __THREW__ = 0;
 if ($54 & 1) {
  $56 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(43928 | 0);
  ___resumeException($56 | 0);
 }
 HEAP32[$52 + 43992 >> 2] = 0;
 HEAP32[$52 + 43996 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(44536, $9, 44368 | 0);
 HEAP32[11002] = 45380;
 HEAP32[11003] = 45400;
 $60 = HEAP32[11342] | 0;
 __THREW__ = 0;
 invoke_vii(41, 44008 + $60 | 0, 44536);
 $62 = __THREW__;
 __THREW__ = 0;
 if ($62 & 1) {
  $64 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(44012 | 0);
  ___resumeException($64 | 0);
 }
 $$sum$i11 = $60 + 72 | 0;
 HEAP32[44008 + $$sum$i11 >> 2] = 0;
 $$sum1$i12 = $60 + 76 | 0;
 HEAP32[44008 + $$sum1$i12 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(44584, $18, 44376 | 0);
 HEAP32[11024] = 45380;
 HEAP32[11025] = 45400;
 __THREW__ = 0;
 invoke_vii(41, 44096 + $60 | 0, 44584);
 $69 = __THREW__;
 __THREW__ = 0;
 if ($69 & 1) {
  $71 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(44100 | 0);
  ___resumeException($71 | 0);
 }
 HEAP32[44096 + $$sum$i11 >> 2] = 0;
 HEAP32[44096 + $$sum1$i12 >> 2] = -1;
 $79 = HEAP32[(HEAP32[(HEAP32[11024] | 0) + -12 >> 2] | 0) + 44120 >> 2] | 0;
 HEAP32[11046] = 45380;
 HEAP32[11047] = 45400;
 __THREW__ = 0;
 invoke_vii(41, 44184 + $60 | 0, $79 | 0);
 $81 = __THREW__;
 __THREW__ = 0;
 if ($81 & 1) {
  $83 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(44188 | 0);
  ___resumeException($83 | 0);
 } else {
  HEAP32[44184 + $$sum$i11 >> 2] = 0;
  HEAP32[44184 + $$sum1$i12 >> 2] = -1;
  HEAP32[(HEAP32[(HEAP32[10980] | 0) + -12 >> 2] | 0) + 43992 >> 2] = 44008;
  $94 = (HEAP32[(HEAP32[11024] | 0) + -12 >> 2] | 0) + 44100 | 0;
  HEAP32[$94 >> 2] = HEAP32[$94 >> 2] | 8192;
  HEAP32[(HEAP32[(HEAP32[11024] | 0) + -12 >> 2] | 0) + 44168 >> 2] = 44008;
  return;
 }
}

function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$lcssa46 = 0, $$lcssa47 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $77 = 0, $79 = 0, $81 = 0, $93 = 0, $96 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar16_t$0 = 0, $nchar16_t$1 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 $frm_nxt$1 = $frm_nxt$1$ph;
 $nchar16_t$0 = 0;
 L7 : while (1) {
  if (!($nchar16_t$0 >>> 0 < $mx >>> 0 & $frm_nxt$1 >>> 0 < $frm_end >>> 0)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1 >> 0] | 0;
  $17 = $16 & 255;
  if ($17 >>> 0 > $Maxcode >>> 0) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  do if ($16 << 24 >> 24 > -1) {
   $frm_nxt$2 = $frm_nxt$1 + 1 | 0;
   $nchar16_t$1 = $nchar16_t$0;
  } else {
   if (($16 & 255) < 194) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if (($16 & 255) < 224) {
    if (($$pre - $frm_nxt$1 | 0) < 2) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $28 = HEAPU8[$frm_nxt$1 + 1 >> 0] | 0;
    if (($28 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 2 | 0;
    $nchar16_t$1 = $nchar16_t$0;
    break;
   }
   if (($16 & 255) < 240) {
    $38 = $frm_nxt$1;
    if (($$pre - $38 | 0) < 3) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $42 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
    $44 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
    if (($17 | 0) == 224) {
     if (($42 & -32) << 24 >> 24 != -96) {
      $$lcssa46 = $38;
      label = 21;
      break L7;
     }
    } else if (($17 | 0) == 237) {
     if (($42 & -32) << 24 >> 24 != -128) {
      $$lcssa45 = $38;
      label = 23;
      break L7;
     }
    } else if (($42 & -64) << 24 >> 24 != -128) {
     $$lcssa47 = $38;
     label = 25;
     break L7;
    }
    $57 = $44 & 255;
    if (($57 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 3 | 0;
    $nchar16_t$1 = $nchar16_t$0;
    break;
   }
   if (($16 & 255) >= 245) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $71 = $frm_nxt$1;
   if (($mx - $nchar16_t$0 | 0) >>> 0 < 2 | ($$pre - $71 | 0) < 4) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $77 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
   $79 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
   $81 = HEAP8[$frm_nxt$1 + 3 >> 0] | 0;
   if (($17 | 0) == 240) {
    if (($77 + 112 & 255) >= 48) {
     $$lcssa43 = $71;
     label = 33;
     break L7;
    }
   } else if (($17 | 0) == 244) {
    if (($77 & -16) << 24 >> 24 != -128) {
     $$lcssa = $71;
     label = 35;
     break L7;
    }
   } else if (($77 & -64) << 24 >> 24 != -128) {
    $$lcssa44 = $71;
    label = 37;
    break L7;
   }
   $93 = $79 & 255;
   if (($93 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $96 = $81 & 255;
   if (($96 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if ((($77 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $93 << 6 & 4032 | $96 & 63) >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $frm_nxt$2 = $frm_nxt$1 + 4 | 0;
   $nchar16_t$1 = $nchar16_t$0 + 1 | 0;
  } while (0);
  $frm_nxt$1 = $frm_nxt$2;
  $nchar16_t$0 = $nchar16_t$1 + 1 | 0;
 }
 if ((label | 0) == 21) $$0 = $$lcssa46 - $frm | 0; else if ((label | 0) == 23) $$0 = $$lcssa45 - $frm | 0; else if ((label | 0) == 25) $$0 = $$lcssa47 - $frm | 0; else if ((label | 0) == 33) $$0 = $$lcssa43 - $frm | 0; else if ((label | 0) == 35) $$0 = $$lcssa - $frm | 0; else if ((label | 0) == 37) $$0 = $$lcssa44 - $frm | 0; else if ((label | 0) == 43) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_111InterpreterD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$cast$i$i$i$lcssa = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$lcssa = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $2 = 0, $24 = 0, $26 = 0, $29 = 0, $33 = 0, $42 = 0, $47 = 0, $49 = 0, $5 = 0, $53 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $68 = 0, $71 = 0, $77 = 0, $9 = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0;
 $0 = $this + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 108 | 0;
 if (($1 | 0) != ($2 | 0)) {
  $5 = $1;
  while (1) {
   $6 = HEAP32[$5 + 40 >> 2] | 0;
   if ($6) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZdlPv($6);
   }
   $9 = HEAP32[$5 + 4 >> 2] | 0;
   if (!$9) {
    $$0$i$i$i = $5;
    while (1) {
     $14 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$cast$i$i$i$lcssa = $14;
      break;
     } else $$0$i$i$i = $14;
    }
    $$01$i$i$i = $$cast$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i = $9;
    while (1) {
     $11 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$11) {
      $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $11;
    }
    $$01$i$i$i = $$0$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i | 0) == ($2 | 0)) break; else $5 = $$01$i$i$i;
  }
 }
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 116 | 0, HEAP32[$this + 120 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($0, HEAP32[$2 >> 2] | 0);
 HEAP32[$this + 72 >> 2] = 37360;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this + 84 | 0);
 $24 = $this + 16 | 0;
 $26 = (HEAP8[$24 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$24 >> 0] = $26;
 $$idx6$i$i = $this + 20 | 0;
 $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
 $$idx7$i$i = $this + 24 | 0;
 $$idx7$val12$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
 if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) {
  $$lcssa$i$i = 0;
  $77 = $$idx6$val11$i$i;
 } else {
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $$idx7$val18$i$i = $$idx7$val12$i$i;
  $33 = $26;
  $i$013$i$i = 0;
  while (1) {
   $29 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$29 + 4 >> 0] | 0) == $33 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx7$val18$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$29) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx7$val18$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$29 >> 2] | 0) + 4 >> 2] & 255]($29);
     $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $42 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($42 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $47 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($42 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $47 = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $47 + -4 | 0;
    HEAP32[$$idx7$i$i >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $49 = $i$1$i$i + 1 | 0;
   $53 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($49 >>> 0 >= $53 >>> 0) {
    $$idx6$val$i$i$lcssa = $$idx6$val$i$i;
    $$lcssa = $53;
    break;
   }
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $$idx7$val18$i$i = $$idx7$val$i$i;
   $33 = HEAP8[$24 >> 0] | 0;
   $i$013$i$i = $49;
  }
  $$lcssa$i$i = $$lcssa;
  $77 = $$idx6$val$i$i$lcssa;
 }
 HEAP32[$this + 48 >> 2] = $$lcssa$i$i;
 HEAP32[$this + 44 >> 2] = $$lcssa$i$i;
 $58 = HEAP32[$this + 32 >> 2] | 0;
 $60 = $58;
 if (!$58) $68 = $77; else {
  $61 = $this + 36 | 0;
  $62 = HEAP32[$61 >> 2] | 0;
  if (($62 | 0) != ($58 | 0)) HEAP32[$61 >> 2] = $62 + (~(($62 + -4 - $60 | 0) >>> 2) << 2);
  __ZdlPv($58);
  $68 = HEAP32[$$idx6$i$i >> 2] | 0;
 }
 if (!$68) return;
 $71 = HEAP32[$$idx7$i$i >> 2] | 0;
 if (($71 | 0) != ($68 | 0)) HEAP32[$$idx7$i$i >> 2] = $71 + (~(($71 + -4 - $68 | 0) >>> 2) << 2);
 __ZdlPv($68);
 return;
}

function __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $21 = 0, $29 = 0, $3 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $47 = 0, $48 = 0, $53 = 0, $54 = 0, $55 = 0, $62 = 0, $64 = 0, $65 = 0, $75 = 0, $82 = 0, $__v$i$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $this + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($2 >>> 0 < $4 >>> 0) {
  if (!$2) $29 = 0; else {
   HEAP32[$2 >> 2] = $args;
   HEAP32[$2 + 4 >> 2] = $args1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2 + 8 | 0, $args1 + 4 | 0);
   $10 = $2 + 20 | 0;
   $11 = $args1 + 16 | 0;
   HEAP32[$10 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   HEAP32[$10 + 12 >> 2] = HEAP32[$11 + 12 >> 2];
   HEAP32[$2 + 72 >> 2] = 0;
   HEAP32[$2 + 80 >> 2] = 0;
   HEAP32[$2 + 84 >> 2] = 0;
   HEAP32[$2 + 76 >> 2] = $2 + 80;
   HEAP32[$2 + 96 >> 2] = 0;
   HEAP32[$2 + 100 >> 2] = 0;
   HEAP32[$2 + 92 >> 2] = $2 + 96;
   $21 = $2 + 104 | 0;
   HEAP32[$2 + 132 >> 2] = 0;
   HEAP32[$2 + 136 >> 2] = 0;
   HEAP32[$21 + 0 >> 2] = 0;
   HEAP32[$21 + 4 >> 2] = 0;
   HEAP32[$21 + 8 >> 2] = 0;
   HEAP32[$21 + 12 >> 2] = 0;
   HEAP32[$21 + 16 >> 2] = 0;
   HEAP32[$21 + 20 >> 2] = 0;
   HEAP32[$2 + 128 >> 2] = $2 + 132;
   HEAP32[$2 + 40 >> 2] = 0;
   HEAP32[$2 + 56 >> 2] = 0;
   $29 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$1 >> 2] = $29 + 144;
  STACKTOP = sp;
  return;
 }
 $this$idx2$val$i$i = HEAP32[$0 >> 2] | 0;
 $35 = (($2 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
 if ($35 >>> 0 > 29826161) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $$idx1$val$i$i$i$i = HEAP32[$3 >> 2] | 0;
  $this$idx$val$i$i = HEAP32[$0 >> 2] | 0;
 } else {
  $$idx1$val$i$i$i$i = $4;
  $this$idx$val$i$i = $this$idx2$val$i$i;
 }
 $38 = $this$idx$val$i$i;
 $40 = ($$idx1$val$i$i$i$i - $38 | 0) / 144 | 0;
 if ($40 >>> 0 < 14913080) {
  $42 = $40 << 1;
  $$0$i$i$i = $42 >>> 0 < $35 >>> 0 ? $35 : $42;
 } else $$0$i$i$i = 29826161;
 $47 = ((HEAP32[$1 >> 2] | 0) - $38 | 0) / 144 | 0;
 $48 = $__v$i$i + 12 | 0;
 HEAP32[$48 >> 2] = 0;
 HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
 if (!$$0$i$i$i) $53 = 0; else $53 = __Znwj($$0$i$i$i * 144 | 0) | 0;
 HEAP32[$__v$i$i >> 2] = $53;
 $54 = $53 + ($47 * 144 | 0) | 0;
 $55 = $__v$i$i + 8 | 0;
 HEAP32[$55 >> 2] = $54;
 HEAP32[$__v$i$i + 4 >> 2] = $54;
 HEAP32[$48 >> 2] = $53 + ($$0$i$i$i * 144 | 0);
 do if ($54) {
  HEAP32[$54 >> 2] = $args;
  HEAP32[$53 + ($47 * 144 | 0) + 4 >> 2] = $args1;
  __THREW__ = 0;
  invoke_vii(40, $53 + ($47 * 144 | 0) + 8 | 0, $args1 + 4 | 0);
  $62 = __THREW__;
  __THREW__ = 0;
  if ($62 & 1) {
   $82 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
   ___resumeException($82 | 0);
  } else {
   $64 = $53 + ($47 * 144 | 0) + 20 | 0;
   $65 = $args1 + 16 | 0;
   HEAP32[$64 + 0 >> 2] = HEAP32[$65 + 0 >> 2];
   HEAP32[$64 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
   HEAP32[$64 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
   HEAP32[$64 + 12 >> 2] = HEAP32[$65 + 12 >> 2];
   HEAP32[$53 + ($47 * 144 | 0) + 72 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 80 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 84 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 76 >> 2] = $53 + ($47 * 144 | 0) + 80;
   HEAP32[$53 + ($47 * 144 | 0) + 96 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 100 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 92 >> 2] = $53 + ($47 * 144 | 0) + 96;
   $75 = $53 + ($47 * 144 | 0) + 104 | 0;
   HEAP32[$53 + ($47 * 144 | 0) + 132 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 136 >> 2] = 0;
   HEAP32[$75 + 0 >> 2] = 0;
   HEAP32[$75 + 4 >> 2] = 0;
   HEAP32[$75 + 8 >> 2] = 0;
   HEAP32[$75 + 12 >> 2] = 0;
   HEAP32[$75 + 16 >> 2] = 0;
   HEAP32[$75 + 20 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 128 >> 2] = $53 + ($47 * 144 | 0) + 132;
   HEAP32[$53 + ($47 * 144 | 0) + 40 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 56 >> 2] = 0;
   break;
  }
 } while (0);
 HEAP32[$55 >> 2] = $53 + (($47 + 1 | 0) * 144 | 0);
 __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $__v$i$i);
 __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$0$i = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $$sink1$i = 0, $$sink2$i = 0, $0 = 0, $103 = 0, $104 = 0, $109 = 0, $112 = 0, $114 = 0, $116 = 0, $118 = 0, $127 = 0, $128 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $19 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $37 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $52 = 0, $59 = 0, $61 = 0, $62 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $75 = 0, $81 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $93 = 0, $97 = 0, $98 = 0, $__1buf = 0, $__c$0 = 0, $__inext = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 4 | 0;
 $__inext = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 8)) {
  HEAP32[$this + 24 >> 2] = 0;
  HEAP32[$this + 20 >> 2] = 0;
  HEAP32[$this + 28 >> 2] = 0;
  if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $19 = HEAP32[$this + 56 >> 2] | 0;
   $$sink1$i = $19 + (HEAP32[$this + 60 >> 2] | 0) | 0;
   $$sink2$i = $19;
  } else {
   $14 = HEAP32[$this + 32 >> 2] | 0;
   $$sink1$i = $14 + (HEAP32[$this + 52 >> 2] | 0) | 0;
   $$sink2$i = $14;
  }
  HEAP32[$this + 8 >> 2] = $$sink2$i;
  HEAP32[$this + 12 >> 2] = $$sink1$i;
  HEAP32[$this + 16 >> 2] = $$sink1$i;
  HEAP32[$3 >> 2] = 8;
  $$0$i = 1;
  $27 = $$sink1$i;
 } else {
  $$0$i = 0;
  $27 = HEAP32[$this + 12 >> 2] | 0;
 }
 $26 = $this + 12 | 0;
 if (!$27) {
  $29 = $__1buf + 1 | 0;
  HEAP32[$this + 8 >> 2] = $__1buf;
  HEAP32[$26 >> 2] = $29;
  HEAP32[$this + 16 >> 2] = $29;
  $41 = $29;
 } else $41 = $27;
 $$pre2 = HEAP32[$this + 16 >> 2] | 0;
 if ($$0$i) $44 = 0; else {
  $37 = ($$pre2 - (HEAP32[$this + 8 >> 2] | 0) | 0) / 2 | 0;
  $44 = $37 >>> 0 > 4 ? 4 : $37;
 }
 $40 = $this + 16 | 0;
 do if (($41 | 0) == ($$pre2 | 0)) {
  $45 = $this + 8 | 0;
  _memmove(HEAP32[$45 >> 2] | 0, $41 + (0 - $44) | 0, $44 | 0) | 0;
  if (HEAP8[$this + 98 >> 0] | 0) {
   $52 = HEAP32[$45 >> 2] | 0;
   $59 = _fread($52 + $44 | 0, 1, (HEAP32[$40 >> 2] | 0) - $44 - $52 | 0, HEAP32[$0 >> 2] | 0) | 0;
   if (!$59) {
    $$pre$phiZ2D = $45;
    $__c$0 = -1;
    break;
   }
   $61 = HEAP32[$45 >> 2] | 0;
   $62 = $61 + $44 | 0;
   HEAP32[$26 >> 2] = $62;
   HEAP32[$40 >> 2] = $61 + ($59 + $44);
   $$pre$phiZ2D = $45;
   $__c$0 = HEAPU8[$62 >> 0] | 0;
   break;
  }
  $66 = $this + 32 | 0;
  $68 = $this + 36 | 0;
  $69 = HEAP32[$68 >> 2] | 0;
  $70 = $this + 40 | 0;
  _memmove(HEAP32[$66 >> 2] | 0, $69 | 0, (HEAP32[$70 >> 2] | 0) - $69 | 0) | 0;
  $75 = HEAP32[$66 >> 2] | 0;
  $81 = $75 + ((HEAP32[$70 >> 2] | 0) - (HEAP32[$68 >> 2] | 0)) | 0;
  HEAP32[$68 >> 2] = $81;
  if (($75 | 0) == ($this + 44 | 0)) $87 = 8; else $87 = HEAP32[$this + 52 >> 2] | 0;
  $86 = $75 + $87 | 0;
  HEAP32[$70 >> 2] = $86;
  $88 = $this + 60 | 0;
  $90 = (HEAP32[$88 >> 2] | 0) - $44 | 0;
  $93 = $86 - $81 | 0;
  $97 = $this + 72 | 0;
  $98 = $97;
  $103 = HEAP32[$98 + 4 >> 2] | 0;
  $104 = $this + 80 | 0;
  HEAP32[$104 >> 2] = HEAP32[$98 >> 2];
  HEAP32[$104 + 4 >> 2] = $103;
  $109 = _fread($81 | 0, 1, ($93 >>> 0 < $90 >>> 0 ? $93 : $90) | 0, HEAP32[$0 >> 2] | 0) | 0;
  if (!$109) {
   $$pre$phiZ2D = $45;
   $__c$0 = -1;
  } else {
   $112 = HEAP32[$this + 68 >> 2] | 0;
   if (!$112) {
    $114 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($114);
    ___cxa_throw($114 | 0, 41592, 85);
   }
   $116 = (HEAP32[$68 >> 2] | 0) + $109 | 0;
   HEAP32[$70 >> 2] = $116;
   $118 = HEAP32[$45 >> 2] | 0;
   if ((FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$112 >> 2] | 0) + 16 >> 2] & 15]($112, $97, HEAP32[$66 >> 2] | 0, $116, $68, $118 + $44 | 0, $118 + (HEAP32[$88 >> 2] | 0) | 0, $__inext) | 0) == 3) {
    $127 = HEAP32[$66 >> 2] | 0;
    $128 = HEAP32[$70 >> 2] | 0;
    HEAP32[$45 >> 2] = $127;
    HEAP32[$26 >> 2] = $127;
    HEAP32[$40 >> 2] = $128;
    $$pre$phiZ2D = $45;
    $__c$0 = HEAPU8[$127 >> 0] | 0;
    break;
   }
   $131 = HEAP32[$__inext >> 2] | 0;
   $132 = HEAP32[$45 >> 2] | 0;
   $133 = $132 + $44 | 0;
   if (($131 | 0) == ($133 | 0)) {
    $$pre$phiZ2D = $45;
    $__c$0 = -1;
   } else {
    HEAP32[$45 >> 2] = $132;
    HEAP32[$26 >> 2] = $133;
    HEAP32[$40 >> 2] = $131;
    $$pre$phiZ2D = $45;
    $__c$0 = HEAPU8[$133 >> 0] | 0;
   }
  }
 } else {
  $$pre$phiZ2D = $this + 8 | 0;
  $__c$0 = HEAPU8[$41 >> 0] | 0;
 } while (0);
 if ((HEAP32[$$pre$phiZ2D >> 2] | 0) != ($__1buf | 0)) {
  $$0 = $__c$0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$40 >> 2] = 0;
 $$0 = $__c$0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $102 = 0, $105 = 0, $126 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $34 = 0, $40 = 0, $49 = 0, $51 = 0, $58 = 0, $67 = 0, $77 = 0, $79 = 0, $81 = 0, $87 = 0, $90 = 0, $96 = 0, $98 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) $$pre$phiZ2D = $frm_end; else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre$phiZ2D = $3;
  } else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3;
 }
 $16 = $to_end;
 L9 : while (1) {
  $17 = HEAP32[$frm_nxt >> 2] | 0;
  $18 = $17 >>> 0 < $frm_end >>> 0;
  if (!$18) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $19 = HEAP32[$to_nxt >> 2] | 0;
  if ($19 >>> 0 >= $to_end >>> 0) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $21 = HEAP8[$17 >> 0] | 0;
  $22 = $21 & 255;
  if ($22 >>> 0 > $Maxcode >>> 0) {
   $$0$ph = 2;
   label = 42;
   break;
  }
  do if ($21 << 24 >> 24 > -1) {
   HEAP16[$19 >> 1] = $21 & 255;
   HEAP32[$frm_nxt >> 2] = $17 + 1;
  } else {
   if (($21 & 255) < 194) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   if (($21 & 255) < 224) {
    if (($$pre$phiZ2D - $17 | 0) < 2) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $34 = HEAPU8[$17 + 1 >> 0] | 0;
    if (($34 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $40 = $34 & 63 | $22 << 6 & 1984;
    if ($40 >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    HEAP16[$19 >> 1] = $40;
    HEAP32[$frm_nxt >> 2] = $17 + 2;
    break;
   }
   if (($21 & 255) < 240) {
    if (($$pre$phiZ2D - $17 | 0) < 3) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $49 = HEAP8[$17 + 1 >> 0] | 0;
    $51 = HEAP8[$17 + 2 >> 0] | 0;
    if (($22 | 0) == 224) {
     if (($49 & -32) << 24 >> 24 != -96) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else if (($22 | 0) == 237) {
     if (($49 & -32) << 24 >> 24 != -128) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else if (($49 & -64) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $58 = $51 & 255;
    if (($58 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $67 = ($49 & 255) << 6 & 4032 | $22 << 12 | $58 & 63;
    if (($67 & 65535) >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    HEAP16[$19 >> 1] = $67;
    HEAP32[$frm_nxt >> 2] = $17 + 3;
    break;
   }
   if (($21 & 255) >= 245) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   if (($$pre$phiZ2D - $17 | 0) < 4) {
    $$0$ph = 1;
    label = 42;
    break L9;
   }
   $77 = HEAP8[$17 + 1 >> 0] | 0;
   $79 = HEAP8[$17 + 2 >> 0] | 0;
   $81 = HEAP8[$17 + 3 >> 0] | 0;
   if (($22 | 0) == 240) {
    if (($77 + 112 & 255) >= 48) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
   } else if (($22 | 0) == 244) {
    if (($77 & -16) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
   } else if (($77 & -64) << 24 >> 24 != -128) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   $87 = $79 & 255;
   if (($87 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   $90 = $81 & 255;
   if (($90 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   if (($16 - $19 | 0) < 4) {
    $$0$ph = 1;
    label = 42;
    break L9;
   }
   $96 = $22 & 7;
   $98 = $77 & 255;
   $102 = $87 << 6;
   $105 = $90 & 63;
   if (($98 << 12 & 258048 | $96 << 18 | $102 & 4032 | $105) >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   HEAP16[$19 >> 1] = $98 << 2 & 60 | $87 >>> 4 & 3 | (($98 >>> 4 & 3 | $96 << 2) << 6) + 16320 | 55296;
   $126 = $19 + 2 | 0;
   HEAP32[$to_nxt >> 2] = $126;
   HEAP16[$126 >> 1] = $105 | $102 & 960 | 56320;
   HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 4;
  } while (0);
  HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 2;
 }
 if ((label | 0) == 41) $$0 = $$lcssa & 1; else if ((label | 0) == 42) $$0 = $$0$ph;
 return $$0 | 0;
}

function __Z18jsonnet_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, $vm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vm = sp;
 $0 = sp + 200 | 0;
 $1 = sp + 188 | 0;
 $2 = sp + 160 | 0;
 $3 = sp + 148 | 0;
 $4 = sp + 136 | 0;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(60, $vm | 0, $ast | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 do if (!($5 & 1)) {
  if ($string_output) {
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 36464, 20);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   __THREW__ = 0;
   invoke_vii(40, $0 | 0, $1 | 0);
   $9 = __THREW__;
   __THREW__ = 0;
   do if ($9 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $$0 = tempRet0;
    $$01 = $16;
   } else {
    $11 = $0 + 12 | 0;
    HEAP32[$11 + 0 >> 2] = 0;
    HEAP32[$11 + 4 >> 2] = 0;
    HEAP32[$11 + 8 >> 2] = 0;
    HEAP32[$11 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(10, $agg$result | 0, $vm | 0, $0 | 0);
    $12 = __THREW__;
    __THREW__ = 0;
    if ($12 & 1) {
     $18 = ___cxa_find_matching_catch() | 0;
     $19 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$0 = $19;
     $$01 = $18;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
    STACKTOP = sp;
    return;
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$3 = $$0;
   $$34 = $$01;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
  __THREW__ = 0;
  invoke_viii(3, $3 | 0, 36464, 20);
  $20 = __THREW__;
  __THREW__ = 0;
  if (!($20 & 1)) {
   __THREW__ = 0;
   invoke_vii(40, $2 | 0, $3 | 0);
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $29 = ___cxa_find_matching_catch() | 0;
    $$2 = tempRet0;
    $$23 = $29;
   } else {
    $24 = $2 + 12 | 0;
    HEAP32[$24 + 0 >> 2] = 0;
    HEAP32[$24 + 4 >> 2] = 0;
    HEAP32[$24 + 8 >> 2] = 0;
    HEAP32[$24 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(3, $4 | 0, 46680, 0);
    $25 = __THREW__;
    __THREW__ = 0;
    do if ($25 & 1) {
     $31 = ___cxa_find_matching_catch() | 0;
     $$1 = tempRet0;
     $$12 = $31;
    } else {
     __THREW__ = 0;
     invoke_viiiii(6, $agg$result | 0, $vm | 0, $2 | 0, 1, $4 | 0);
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) {
      $33 = ___cxa_find_matching_catch() | 0;
      $34 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$1 = $34;
      $$12 = $33;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    $$2 = $$1;
    $$23 = $$12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$3 = $$2;
   $$34 = $$23;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
 } while (0);
 $14 = ___cxa_find_matching_catch() | 0;
 $$3 = tempRet0;
 $$34 = $14;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($$34 | 0);
}

function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa41 = 0, $$lcssa42 = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $75 = 0, $77 = 0, $79 = 0, $91 = 0, $94 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar32_t$0 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 $frm_nxt$1 = $frm_nxt$1$ph;
 $nchar32_t$0 = 0;
 L7 : while (1) {
  if (!($nchar32_t$0 >>> 0 < $mx >>> 0 & $frm_nxt$1 >>> 0 < $frm_end >>> 0)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1 >> 0] | 0;
  $17 = $16 & 255;
  do if ($16 << 24 >> 24 > -1) {
   if ($17 >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $frm_nxt$2 = $frm_nxt$1 + 1 | 0;
  } else {
   if (($16 & 255) < 194) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if (($16 & 255) < 224) {
    if (($$pre - $frm_nxt$1 | 0) < 2) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $28 = HEAPU8[$frm_nxt$1 + 1 >> 0] | 0;
    if (($28 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 2 | 0;
    break;
   }
   if (($16 & 255) < 240) {
    $38 = $frm_nxt$1;
    if (($$pre - $38 | 0) < 3) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $42 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
    $44 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
    if (($17 | 0) == 224) {
     if (($42 & -32) << 24 >> 24 != -96) {
      $$lcssa44 = $38;
      label = 21;
      break L7;
     }
    } else if (($17 | 0) == 237) {
     if (($42 & -32) << 24 >> 24 != -128) {
      $$lcssa43 = $38;
      label = 23;
      break L7;
     }
    } else if (($42 & -64) << 24 >> 24 != -128) {
     $$lcssa45 = $38;
     label = 25;
     break L7;
    }
    $57 = $44 & 255;
    if (($57 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 3 | 0;
    break;
   }
   if (($16 & 255) >= 245) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $71 = $frm_nxt$1;
   if (($$pre - $71 | 0) < 4) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $75 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
   $77 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
   $79 = HEAP8[$frm_nxt$1 + 3 >> 0] | 0;
   if (($17 | 0) == 244) {
    if (($75 & -16) << 24 >> 24 != -128) {
     $$lcssa = $71;
     label = 35;
     break L7;
    }
   } else if (($17 | 0) == 240) {
    if (($75 + 112 & 255) >= 48) {
     $$lcssa41 = $71;
     label = 33;
     break L7;
    }
   } else if (($75 & -64) << 24 >> 24 != -128) {
    $$lcssa42 = $71;
    label = 37;
    break L7;
   }
   $91 = $77 & 255;
   if (($91 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $94 = $79 & 255;
   if (($94 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if ((($75 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $91 << 6 & 4032 | $94 & 63) >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $frm_nxt$2 = $frm_nxt$1 + 4 | 0;
  } while (0);
  $frm_nxt$1 = $frm_nxt$2;
  $nchar32_t$0 = $nchar32_t$0 + 1 | 0;
 }
 if ((label | 0) == 21) $$0 = $$lcssa44 - $frm | 0; else if ((label | 0) == 23) $$0 = $$lcssa43 - $frm | 0; else if ((label | 0) == 25) $$0 = $$lcssa45 - $frm | 0; else if ((label | 0) == 33) $$0 = $$lcssa41 - $frm | 0; else if ((label | 0) == 35) $$0 = $$lcssa - $frm | 0; else if ((label | 0) == 37) $$0 = $$lcssa42 - $frm | 0; else if ((label | 0) == 43) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__x) {
 $__root = $__root | 0;
 $__x = $__x | 0;
 var $$06 = 0, $$06$lcssa26 = 0, $$06$lcssa27 = 0, $$lcssa = 0, $$lcssa28 = 0, $$lcssa29 = 0, $$lcssa30 = 0, $$lcssa31 = 0, $$lcssa32 = 0, $$lcssa33 = 0, $$lcssa34 = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $46 = 0, $5 = 0, $51 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $66 = 0, $67 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $80 = 0, $83 = 0, label = 0, $$06$looptemp = 0;
 $0 = ($__x | 0) == ($__root | 0);
 HEAP8[$__x + 12 >> 0] = $0 & 1;
 if ($0) return;
 $$06 = $__x;
 while (1) {
  $4 = HEAP32[$$06 + 8 >> 2] | 0;
  $5 = $4 + 12 | 0;
  if (HEAP8[$5 >> 0] | 0) {
   label = 38;
   break;
  }
  $8 = $4 + 8 | 0;
  $$06$looptemp = $$06;
  $$06 = HEAP32[$8 >> 2] | 0;
  $10 = HEAP32[$$06 >> 2] | 0;
  if (($10 | 0) == ($4 | 0)) {
   $13 = HEAP32[$$06 + 4 >> 2] | 0;
   if (!$13) {
    $$06$lcssa27 = $$06$looptemp;
    $$lcssa29 = $4;
    $$lcssa30 = $8;
    $$lcssa32 = $8;
    $$lcssa34 = $$06;
    label = 8;
    break;
   }
   $15 = $13 + 12 | 0;
   if (HEAP8[$15 >> 0] | 0) {
    $$06$lcssa27 = $$06$looptemp;
    $$lcssa29 = $4;
    $$lcssa30 = $8;
    $$lcssa32 = $8;
    $$lcssa34 = $$06;
    label = 8;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$06 + 12 >> 0] = ($$06 | 0) == ($__root | 0) & 1;
   HEAP8[$15 >> 0] = 1;
  } else {
   if (!$10) {
    $$06$lcssa26 = $$06$looptemp;
    $$lcssa = $8;
    $$lcssa28 = $4;
    $$lcssa31 = $8;
    $$lcssa33 = $$06;
    label = 25;
    break;
   }
   $51 = $10 + 12 | 0;
   if (HEAP8[$51 >> 0] | 0) {
    $$06$lcssa26 = $$06$looptemp;
    $$lcssa = $8;
    $$lcssa28 = $4;
    $$lcssa31 = $8;
    $$lcssa33 = $$06;
    label = 25;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$06 + 12 >> 0] = ($$06 | 0) == ($__root | 0) & 1;
   HEAP8[$51 >> 0] = 1;
  }
  if (($$06 | 0) == ($__root | 0)) {
   label = 38;
   break;
  }
 }
 if ((label | 0) == 8) {
  if ((HEAP32[$$lcssa29 >> 2] | 0) == ($$06$lcssa27 | 0)) {
   $35 = $$lcssa29;
   $37 = $$lcssa34;
  } else {
   $23 = $$lcssa29 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   HEAP32[$23 >> 2] = $25;
   if (!$25) $29 = $$lcssa34; else {
    HEAP32[$25 + 8 >> 2] = $$lcssa29;
    $29 = HEAP32[$$lcssa30 >> 2] | 0;
   }
   $28 = $24 + 8 | 0;
   HEAP32[$28 >> 2] = $29;
   $30 = HEAP32[$$lcssa32 >> 2] | 0;
   if ((HEAP32[$30 >> 2] | 0) == ($$lcssa29 | 0)) HEAP32[$30 >> 2] = $24; else HEAP32[$30 + 4 >> 2] = $24;
   HEAP32[$24 >> 2] = $$lcssa29;
   HEAP32[$$lcssa30 >> 2] = $24;
   $35 = $24;
   $37 = HEAP32[$28 >> 2] | 0;
  }
  HEAP8[$35 + 12 >> 0] = 1;
  HEAP8[$37 + 12 >> 0] = 0;
  $38 = HEAP32[$37 >> 2] | 0;
  $39 = $38 + 4 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  HEAP32[$37 >> 2] = $40;
  if ($40) HEAP32[$40 + 8 >> 2] = $37;
  $43 = $37 + 8 | 0;
  HEAP32[$38 + 8 >> 2] = HEAP32[$43 >> 2];
  $46 = HEAP32[$43 >> 2] | 0;
  if ((HEAP32[$46 >> 2] | 0) == ($37 | 0)) HEAP32[$46 >> 2] = $38; else HEAP32[$46 + 4 >> 2] = $38;
  HEAP32[$39 >> 2] = $37;
  HEAP32[$43 >> 2] = $38;
  return;
 } else if ((label | 0) == 25) {
  if ((HEAP32[$$lcssa28 >> 2] | 0) == ($$06$lcssa26 | 0)) {
   $60 = HEAP32[$$lcssa28 >> 2] | 0;
   $61 = $60 + 4 | 0;
   $62 = HEAP32[$61 >> 2] | 0;
   HEAP32[$$lcssa28 >> 2] = $62;
   if (!$62) $66 = $$lcssa33; else {
    HEAP32[$62 + 8 >> 2] = $$lcssa28;
    $66 = HEAP32[$$lcssa >> 2] | 0;
   }
   $65 = $60 + 8 | 0;
   HEAP32[$65 >> 2] = $66;
   $67 = HEAP32[$$lcssa31 >> 2] | 0;
   if ((HEAP32[$67 >> 2] | 0) == ($$lcssa28 | 0)) HEAP32[$67 >> 2] = $60; else HEAP32[$67 + 4 >> 2] = $60;
   HEAP32[$61 >> 2] = $$lcssa28;
   HEAP32[$$lcssa >> 2] = $60;
   $72 = $60;
   $74 = HEAP32[$65 >> 2] | 0;
  } else {
   $72 = $$lcssa28;
   $74 = $$lcssa33;
  }
  HEAP8[$72 + 12 >> 0] = 1;
  HEAP8[$74 + 12 >> 0] = 0;
  $75 = $74 + 4 | 0;
  $76 = HEAP32[$75 >> 2] | 0;
  $77 = HEAP32[$76 >> 2] | 0;
  HEAP32[$75 >> 2] = $77;
  if ($77) HEAP32[$77 + 8 >> 2] = $74;
  $80 = $74 + 8 | 0;
  HEAP32[$76 + 8 >> 2] = HEAP32[$80 >> 2];
  $83 = HEAP32[$80 >> 2] | 0;
  if ((HEAP32[$83 >> 2] | 0) == ($74 | 0)) HEAP32[$83 >> 2] = $76; else HEAP32[$83 + 4 >> 2] = $76;
  HEAP32[$76 >> 2] = $74;
  HEAP32[$80 >> 2] = $76;
  return;
 } else if ((label | 0) == 38) return;
}

function __ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_($this, $lr, $binds, $body) {
 $this = $this | 0;
 $lr = $lr | 0;
 $binds = $binds | 0;
 $body = $body | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $$cast$i$i$i$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $38 = 0, $41 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $63 = 0, $8 = 0, $9 = 0, $__parent$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i$i$i$i$i = sp + 4 | 0;
 $0 = sp;
 HEAP32[$this >> 2] = 33968;
 $1 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($1, $lr);
 $2 = $this + 16 | 0;
 $3 = $lr + 12 | 0;
 HEAP32[$2 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
 HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$2 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 10;
 $5 = $this + 36 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $this + 40 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 34032;
 $8 = $this + 48 | 0;
 $9 = $this + 52 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $this + 56 | 0;
 HEAP32[$10 >> 2] = 0;
 $11 = $this + 52 | 0;
 HEAP32[$8 >> 2] = $11;
 $12 = HEAP32[$binds >> 2] | 0;
 $13 = $binds + 4 | 0;
 if (($12 | 0) == ($13 | 0)) {
  $56 = $this + 60 | 0;
  HEAP32[$56 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $19 = $12;
 $46 = $12;
 while (1) {
  __THREW__ = 0;
  $15 = invoke_ii(67, 24) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) break;
  $20 = $15 + 16 | 0;
  $21 = $19 + 16 | 0;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  $27 = $20;
  HEAP32[$27 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$27 + 4 >> 2] = $26;
  HEAP32[$0 >> 2] = $11;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $31 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($8, $$byval_copy, $__parent$i$i$i$i$i, $20) | 0;
  $32 = HEAP32[$31 >> 2] | 0;
  if (!$32) {
   $34 = HEAP32[$__parent$i$i$i$i$i >> 2] | 0;
   HEAP32[$15 >> 2] = 0;
   HEAP32[$15 + 4 >> 2] = 0;
   HEAP32[$15 + 8 >> 2] = $34;
   HEAP32[$31 >> 2] = $15;
   $38 = HEAP32[HEAP32[$8 >> 2] >> 2] | 0;
   if (!$38) $41 = $15; else {
    HEAP32[$8 >> 2] = $38;
    $41 = HEAP32[$31 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$9 >> 2] | 0, $41);
   HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
  } else if (($32 | 0) != ($15 | 0)) __ZdlPv($15);
  $47 = HEAP32[$46 + 4 >> 2] | 0;
  if (!$47) {
   $$0$i$i$i$i$i = $46;
   while (1) {
    $52 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$52 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$cast$i$i$i$i$i$lcssa = $52;
     break;
    } else $$0$i$i$i$i$i = $52;
   }
   $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i$i$i = $47;
   while (1) {
    $49 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$49) {
     $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $49;
   }
   $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
  }
  if (($$01$i$i$i$i$i | 0) == ($13 | 0)) {
   label = 18;
   break;
  } else {
   $19 = $$01$i$i$i$i$i;
   $46 = $$01$i$i$i$i$i;
  }
 }
 if ((label | 0) == 18) {
  $56 = $this + 60 | 0;
  HEAP32[$56 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $57 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($8, HEAP32[$11 >> 2] | 0);
 HEAP32[$this >> 2] = 33968;
 $60 = HEAP32[$5 >> 2] | 0;
 if (!$60) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($57 | 0);
 }
 $63 = HEAP32[$6 >> 2] | 0;
 if (($63 | 0) != ($60 | 0)) HEAP32[$6 >> 2] = $63 + (~(($63 + -4 - $60 | 0) >>> 2) << 2);
 __ZdlPv($60);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($57 | 0);
}

function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $32 = 0, $38 = 0, $46 = 0, $48 = 0, $55 = 0, $65 = 0, $73 = 0, $75 = 0, $77 = 0, $83 = 0, $86 = 0, $99 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) $$pre$phiZ2D = $frm_end; else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre$phiZ2D = $3;
  } else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3;
 }
 L9 : while (1) {
  $16 = HEAP32[$frm_nxt >> 2] | 0;
  $17 = $16 >>> 0 < $frm_end >>> 0;
  if (!$17) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $18 = HEAP32[$to_nxt >> 2] | 0;
  if ($18 >>> 0 >= $to_end >>> 0) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $20 = HEAP8[$16 >> 0] | 0;
  $21 = $20 & 255;
  do if ($20 << 24 >> 24 > -1) {
   if ($21 >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   HEAP32[$18 >> 2] = $21;
   HEAP32[$frm_nxt >> 2] = $16 + 1;
  } else {
   if (($20 & 255) < 194) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   if (($20 & 255) < 224) {
    if (($$pre$phiZ2D - $16 | 0) < 2) {
     $$0$ph = 1;
     label = 41;
     break L9;
    }
    $32 = HEAPU8[$16 + 1 >> 0] | 0;
    if (($32 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $38 = $32 & 63 | $21 << 6 & 1984;
    if ($38 >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18 >> 2] = $38;
    HEAP32[$frm_nxt >> 2] = $16 + 2;
    break;
   }
   if (($20 & 255) < 240) {
    if (($$pre$phiZ2D - $16 | 0) < 3) {
     $$0$ph = 1;
     label = 41;
     break L9;
    }
    $46 = HEAP8[$16 + 1 >> 0] | 0;
    $48 = HEAP8[$16 + 2 >> 0] | 0;
    if (($21 | 0) == 224) {
     if (($46 & -32) << 24 >> 24 != -96) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else if (($21 | 0) == 237) {
     if (($46 & -32) << 24 >> 24 != -128) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else if (($46 & -64) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $55 = $48 & 255;
    if (($55 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $65 = ($46 & 255) << 6 & 4032 | $21 << 12 & 61440 | $55 & 63;
    if ($65 >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18 >> 2] = $65;
    HEAP32[$frm_nxt >> 2] = $16 + 3;
    break;
   }
   if (($20 & 255) >= 245) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   if (($$pre$phiZ2D - $16 | 0) < 4) {
    $$0$ph = 1;
    label = 41;
    break L9;
   }
   $73 = HEAP8[$16 + 1 >> 0] | 0;
   $75 = HEAP8[$16 + 2 >> 0] | 0;
   $77 = HEAP8[$16 + 3 >> 0] | 0;
   if (($21 | 0) == 244) {
    if (($73 & -16) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
   } else if (($21 | 0) == 240) {
    if (($73 + 112 & 255) >= 48) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
   } else if (($73 & -64) << 24 >> 24 != -128) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   $83 = $75 & 255;
   if (($83 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   $86 = $77 & 255;
   if (($86 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   $99 = ($73 & 255) << 12 & 258048 | $21 << 18 & 1835008 | $83 << 6 & 4032 | $86 & 63;
   if ($99 >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   HEAP32[$18 >> 2] = $99;
   HEAP32[$frm_nxt >> 2] = $16 + 4;
  } while (0);
  HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
 }
 if ((label | 0) == 40) $$0 = $$lcssa & 1; else if ((label | 0) == 41) $$0 = $$0$ph;
 return $$0 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 60 | 0;
 $$byval_copy = sp + 56 | 0;
 $__lv = sp + 52 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 44 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $5 = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$1 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  FUNCTION_TABLE_viiiiiii[$12 & 63]($0, $this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv);
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  $16 = HEAP32[$__lv >> 2] | 0;
  if (!$16) HEAP8[$__v >> 0] = 0; else if (($16 | 0) == 1) HEAP8[$__v >> 0] = 1; else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg$result >> 2] = $15;
 } else {
  __ZNKSt3__18ios_base6getlocEv($3, $__iob);
  __THREW__ = 0;
  $17 = invoke_iii(22, $3 | 0, 47960) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  do if ($18 & 1) {
   $45 = ___cxa_find_matching_catch() | 0;
   $46 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   $$0 = $45;
   $$01 = $46;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($4, $__iob);
   __THREW__ = 0;
   $21 = invoke_iii(22, $4 | 0, 48120) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $48 = ___cxa_find_matching_catch() | 0;
    $49 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
    $$0 = $48;
    $$01 = $49;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) $$02 = $__names; else {
    $30 = $__names + 12 | 0;
    __THREW__ = 0;
    invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $30 | 0, $21 | 0);
    $34 = __THREW__;
    __THREW__ = 0;
    if ($34 & 1) $$02 = $30; else {
     HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
     __THREW__ = 0;
     HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     $38 = invoke_iiiiiiii(2, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) {
      $57 = ___cxa_find_matching_catch() | 0;
      $58 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
      $$0 = $57;
      $$01 = $58;
      break;
     } else {
      HEAP8[$__v >> 0] = ($38 | 0) == ($__names | 0) & 1;
      HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
      break L1;
     }
    }
   }
   $51 = ___cxa_find_matching_catch() | 0;
   $52 = tempRet0;
   if (($__names | 0) == ($$02 | 0)) {
    $$0 = $51;
    $$01 = $52;
   } else {
    $55 = $$02;
    do {
     $55 = $55 + -12 | 0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($55);
    } while (($55 | 0) != ($__names | 0));
    $$0 = $51;
    $$01 = $52;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 60 | 0;
 $$byval_copy = sp + 56 | 0;
 $__lv = sp + 52 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 44 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $5 = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$1 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  FUNCTION_TABLE_viiiiiii[$12 & 63]($0, $this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv);
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  $16 = HEAP32[$__lv >> 2] | 0;
  if (!$16) HEAP8[$__v >> 0] = 0; else if (($16 | 0) == 1) HEAP8[$__v >> 0] = 1; else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg$result >> 2] = $15;
 } else {
  __ZNKSt3__18ios_base6getlocEv($3, $__iob);
  __THREW__ = 0;
  $17 = invoke_iii(22, $3 | 0, 47968) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  do if ($18 & 1) {
   $45 = ___cxa_find_matching_catch() | 0;
   $46 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   $$0 = $45;
   $$01 = $46;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($4, $__iob);
   __THREW__ = 0;
   $21 = invoke_iii(22, $4 | 0, 48112) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $48 = ___cxa_find_matching_catch() | 0;
    $49 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
    $$0 = $48;
    $$01 = $49;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) $$02 = $__names; else {
    $30 = $__names + 12 | 0;
    __THREW__ = 0;
    invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $30 | 0, $21 | 0);
    $34 = __THREW__;
    __THREW__ = 0;
    if ($34 & 1) $$02 = $30; else {
     HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
     __THREW__ = 0;
     HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     $38 = invoke_iiiiiiii(1, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) {
      $57 = ___cxa_find_matching_catch() | 0;
      $58 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
      $$0 = $57;
      $$01 = $58;
      break;
     } else {
      HEAP8[$__v >> 0] = ($38 | 0) == ($__names | 0) & 1;
      HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
      break L1;
     }
    }
   }
   $51 = ___cxa_find_matching_catch() | 0;
   $52 = tempRet0;
   if (($__names | 0) == ($$02 | 0)) {
    $$0 = $51;
    $$01 = $52;
   } else {
    $55 = $$02;
    do {
     $55 = $55 + -12 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    } while (($55 | 0) != ($__names | 0));
    $$0 = $51;
    $$01 = $52;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i7 = 0, $$0$i8 = 0, $$01$i$i = 0, $$pre$i = 0, $$pre6 = 0, $0 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $49 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $60 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $9 = 0, label = 0, $$01$i$i$looptemp = 0, $51$looptemp = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = (((HEAP32[$0 >> 2] | 0) - $2 | 0) / 40 | 0) + 1 | 0;
 if ($7 >>> 0 > 107374182) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $15 = ((HEAP32[$9 >> 2] | 0) - $13 | 0) / 40 | 0;
 if ($15 >>> 0 < 53687091) {
  $21 = $15 << 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $24 = HEAP32[$0 >> 2] | 0;
  $27 = ($24 - $13 | 0) / 40 | 0;
  if (!$23) {
   $$0$i8 = 0;
   $32 = 0;
   $33 = $27;
   $67 = $24;
  } else {
   $$0$i7 = $23;
   $65 = $27;
   $66 = $24;
   label = 6;
  }
 } else {
  $17 = HEAP32[$0 >> 2] | 0;
  $$0$i7 = 107374182;
  $65 = ($17 - $13 | 0) / 40 | 0;
  $66 = $17;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i8 = $$0$i7;
  $32 = __Znwj($$0$i7 * 40 | 0) | 0;
  $33 = $65;
  $67 = $66;
 }
 $31 = $32 + ($33 * 40 | 0) | 0;
 $34 = $32 + ($$0$i8 * 40 | 0) | 0;
 if (!$31) {
  $41 = $67;
  $43 = $12;
 } else {
  HEAP32[$31 + 0 >> 2] = HEAP32[$__x + 0 >> 2];
  HEAP32[$31 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
  HEAP32[$31 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
  HEAP32[$__x + 0 >> 2] = 0;
  HEAP32[$__x + 4 >> 2] = 0;
  HEAP32[$__x + 8 >> 2] = 0;
  $36 = $32 + ($33 * 40 | 0) + 12 | 0;
  $37 = $__x + 12 | 0;
  HEAP32[$36 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
  HEAP32[$36 + 4 >> 2] = HEAP32[$37 + 4 >> 2];
  HEAP32[$36 + 8 >> 2] = HEAP32[$37 + 8 >> 2];
  HEAP32[$36 + 12 >> 2] = HEAP32[$37 + 12 >> 2];
  $38 = $32 + ($33 * 40 | 0) + 28 | 0;
  $39 = $__x + 28 | 0;
  HEAP32[$38 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
  HEAP32[$38 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
  HEAP32[$38 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
  HEAP32[$39 + 0 >> 2] = 0;
  HEAP32[$39 + 4 >> 2] = 0;
  HEAP32[$39 + 8 >> 2] = 0;
  $41 = HEAP32[$0 >> 2] | 0;
  $43 = HEAP32[$this >> 2] | 0;
 }
 $40 = $32 + (($33 + 1 | 0) * 40 | 0) | 0;
 if (($41 | 0) == ($43 | 0)) {
  HEAP32[$this >> 2] = $31;
  HEAP32[$0 >> 2] = $40;
  HEAP32[$9 >> 2] = $34;
  $63 = $41;
 } else {
  $49 = $33 + -1 - ((($41 + -40 - $43 | 0) >>> 0) / 40 | 0) | 0;
  $$01$i$i = $41;
  $51 = $31;
  do {
   $51$looptemp = $51;
   $51 = $51 + -40 | 0;
   $$01$i$i$looptemp = $$01$i$i;
   $$01$i$i = $$01$i$i + -40 | 0;
   HEAP32[$51 + 0 >> 2] = HEAP32[$$01$i$i + 0 >> 2];
   HEAP32[$51 + 4 >> 2] = HEAP32[$$01$i$i + 4 >> 2];
   HEAP32[$51 + 8 >> 2] = HEAP32[$$01$i$i + 8 >> 2];
   HEAP32[$$01$i$i + 0 >> 2] = 0;
   HEAP32[$$01$i$i + 4 >> 2] = 0;
   HEAP32[$$01$i$i + 8 >> 2] = 0;
   $53 = $51$looptemp + -28 | 0;
   $54 = $$01$i$i$looptemp + -28 | 0;
   HEAP32[$53 + 0 >> 2] = HEAP32[$54 + 0 >> 2];
   HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
   HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
   HEAP32[$53 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
   $55 = $51$looptemp + -12 | 0;
   $56 = $$01$i$i$looptemp + -12 | 0;
   HEAP32[$55 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
   HEAP32[$55 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
   HEAP32[$55 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
   HEAP32[$56 + 0 >> 2] = 0;
   HEAP32[$56 + 4 >> 2] = 0;
   HEAP32[$56 + 8 >> 2] = 0;
  } while (($$01$i$i | 0) != ($43 | 0));
  $$pre$i = HEAP32[$this >> 2] | 0;
  $$pre6 = HEAP32[$0 >> 2] | 0;
  HEAP32[$this >> 2] = $32 + ($49 * 40 | 0);
  HEAP32[$0 >> 2] = $40;
  HEAP32[$9 >> 2] = $34;
  if (($$pre6 | 0) == ($$pre$i | 0)) $63 = $$pre$i; else {
   $60 = $$pre6;
   do {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60 + -12 | 0);
    $60 = $60 + -40 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
   } while (($60 | 0) != ($$pre$i | 0));
   $63 = $$pre$i;
  }
 }
 if (!$63) return;
 __ZdlPv($63);
 return;
}

function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$pre1 = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $110 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0, $14 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $50 = 0, $55 = 0, $6 = 0, $61 = 0, $63 = 0, $70 = 0, $8 = 0, $80 = 0, $84 = 0, $93 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 if ((label | 0) == 4) {
  $10 = $frm_end;
  $11 = HEAP32[$frm_nxt >> 2] | 0;
  L6 : while (1) {
   if ($11 >>> 0 >= $frm_end >>> 0) {
    $$0$ph = 0;
    break;
   }
   $13 = HEAP16[$11 >> 1] | 0;
   $14 = $13 & 65535;
   if ($14 >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    break;
   }
   do if (($13 & 65535) < 128) {
    $17 = HEAP32[$to_nxt >> 2] | 0;
    if (($$pre1 - $17 | 0) < 1) {
     $$0$ph = 1;
     break L6;
    }
    HEAP32[$to_nxt >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $13;
   } else {
    if (($13 & 65535) < 2048) {
     $24 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $24 | 0) < 2) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $24 + 1;
     HEAP8[$24 >> 0] = $14 >>> 6 | 192;
     $35 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $35 + 1;
     HEAP8[$35 >> 0] = $14 & 63 | 128;
     break;
    }
    if (($13 & 65535) < 55296) {
     $38 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $38 | 0) < 3) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $38 + 1;
     HEAP8[$38 >> 0] = $14 >>> 12 | 224;
     $50 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $50 + 1;
     HEAP8[$50 >> 0] = $14 >>> 6 & 63 | 128;
     $55 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $55 + 1;
     HEAP8[$55 >> 0] = $14 & 63 | 128;
     break;
    }
    if (($13 & 65535) >= 56320) {
     if (($13 & 65535) < 57344) {
      $$0$ph = 2;
      break L6;
     }
     $110 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $110 | 0) < 3) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $110 + 1;
     HEAP8[$110 >> 0] = $14 >>> 12 | 224;
     $122 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $122 + 1;
     HEAP8[$122 >> 0] = $14 >>> 6 & 63 | 128;
     $127 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $127 + 1;
     HEAP8[$127 >> 0] = $14 & 63 | 128;
     break;
    }
    if (($10 - $11 | 0) < 4) {
     $$0$ph = 1;
     break L6;
    }
    $61 = $11 + 2 | 0;
    $63 = HEAPU16[$61 >> 1] | 0;
    if (($63 & 64512 | 0) != 56320) {
     $$0$ph = 2;
     break L6;
    }
    if (($$pre1 - (HEAP32[$to_nxt >> 2] | 0) | 0) < 4) {
     $$0$ph = 1;
     break L6;
    }
    $70 = $14 & 960;
    if ((($70 << 10) + 65536 | $14 << 10 & 64512 | $63 & 1023) >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     break L6;
    }
    HEAP32[$frm_nxt >> 2] = $61;
    $80 = ($70 >>> 6) + 1 | 0;
    $84 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $84 + 1;
    HEAP8[$84 >> 0] = $80 >>> 2 | 240;
    $93 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $93 + 1;
    HEAP8[$93 >> 0] = $14 >>> 2 & 15 | $80 << 4 & 48 | 128;
    $102 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $102 + 1;
    HEAP8[$102 >> 0] = $14 << 4 & 48 | $63 >>> 6 & 15 | 128;
    $107 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $107 + 1;
    HEAP8[$107 >> 0] = $63 & 63 | 128;
   } while (0);
   $130 = (HEAP32[$frm_nxt >> 2] | 0) + 2 | 0;
   HEAP32[$frm_nxt >> 2] = $130;
   $11 = $130;
  }
  $$0 = $$0$ph;
 }
 return $$0 | 0;
}

function __ZN9AllocatorD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$cast$i$i$i$lcssa = 0, $$pre = 0, $$pre14 = 0, $0 = 0, $1 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $39 = 0, $41 = 0, $44 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $6 = 0, $62 = 0, $x4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $x4 = sp;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) != ($3 | 0)) {
  $6 = $1;
  do {
   $5 = HEAP32[$6 >> 2] | 0;
   if ($5) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] & 255]($5);
   $6 = $6 + 4 | 0;
  } while (($6 | 0) != ($3 | 0));
  $$pre = HEAP32[$0 >> 2] | 0;
  $$pre14 = HEAP32[$2 >> 2] | 0;
  if (($$pre14 | 0) != ($$pre | 0)) HEAP32[$2 >> 2] = $$pre14 + (~(($$pre14 + -4 - $$pre | 0) >>> 2) << 2);
 }
 $18 = HEAP32[$this >> 2] | 0;
 $19 = $this + 4 | 0;
 do if (($18 | 0) != ($19 | 0)) {
  $21 = $x4 + 12 | 0;
  $23 = $18;
  while (1) {
   __THREW__ = 0;
   invoke_vii(40, $x4 | 0, $23 + 16 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) break;
   $27 = HEAP32[$23 + 28 >> 2] | 0;
   HEAP32[$21 >> 2] = $27;
   if ($27) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
    __ZdlPv($27);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($x4);
   $30 = HEAP32[$23 + 4 >> 2] | 0;
   if (!$30) {
    $$0$i$i$i = $23;
    while (1) {
     $35 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$35 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$cast$i$i$i$lcssa = $35;
      break;
     } else $$0$i$i$i = $35;
    }
    $$01$i$i$i = $$cast$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i = $30;
    while (1) {
     $32 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$32) {
      $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $32;
    }
    $$01$i$i$i = $$0$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i | 0) == ($19 | 0)) {
    label = 26;
    break;
   } else $23 = $$01$i$i$i;
  }
  if ((label | 0) == 26) break;
  $39 = ___cxa_find_matching_catch(0) | 0;
  $41 = HEAP32[$0 >> 2] | 0;
  if (!$41) {
   $50 = HEAP32[$19 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $50);
   ___clang_call_terminate($39);
  }
  $44 = HEAP32[$2 >> 2] | 0;
  if (($44 | 0) != ($41 | 0)) HEAP32[$2 >> 2] = $44 + (~(($44 + -4 - $41 | 0) >>> 2) << 2);
  __ZdlPv($41);
  $50 = HEAP32[$19 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $50);
  ___clang_call_terminate($39);
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$19 >> 2] | 0);
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this >> 2] = $19;
 HEAP32[$19 >> 2] = 0;
 $53 = HEAP32[$0 >> 2] | 0;
 if (!$53) {
  $62 = 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $62);
  STACKTOP = sp;
  return;
 }
 $56 = HEAP32[$2 >> 2] | 0;
 if (($56 | 0) != ($53 | 0)) HEAP32[$2 >> 2] = $56 + (~(($56 + -4 - $53 | 0) >>> 2) << 2);
 __ZdlPv($53);
 $62 = HEAP32[$19 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $62);
 STACKTOP = sp;
 return;
}

function __ZL10bop_string8BinaryOp($agg$result, $bop) {
 $agg$result = $agg$result | 0;
 $bop = $bop | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($bop | 0) {
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39664, 2);
   STACKTOP = sp;
   return;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39680, 2);
   STACKTOP = sp;
   return;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39712, 1);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39640, 1);
   STACKTOP = sp;
   return;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39728, 2);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39312, 1);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40064, 1);
   STACKTOP = sp;
   return;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39632, 1);
   STACKTOP = sp;
   return;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37024, 1);
   STACKTOP = sp;
   return;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39736, 2);
   STACKTOP = sp;
   return;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39656, 2);
   STACKTOP = sp;
   return;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39720, 1);
   STACKTOP = sp;
   return;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39648, 2);
   STACKTOP = sp;
   return;
  }
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39704, 1);
   STACKTOP = sp;
   return;
  }
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39696, 2);
   STACKTOP = sp;
   return;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39688, 2);
   STACKTOP = sp;
   return;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39672, 1);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 39744, 46) | 0, $bop) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 47968) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 46656) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 47968) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 46656) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 47968) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 46656) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 47968) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 46656) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 47968) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi7Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 46656) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 47968) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi7Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi7Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd($this, $__n) {
 $this = $this | 0;
 $__n = +$__n;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 46656) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 47968) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiid($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, +$__n);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $103 = 0, $116 = 0, $121 = 0, $122 = 0, $127 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $4 = 0, $46 = 0, $51 = 0, $52 = 0, $6 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $76 = 0, $8 = 0, $88 = 0, $92 = 0, $93 = 0, $__c$0 = 0, $__extbe = 0, $__state = 0, $__update_st$0$off0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbe = sp + 8 | 0;
 $__state = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 68 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 41592, 85);
 }
 $7 = $this + 92 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do if (!($8 & 16)) {
  if ($8 & 8) {
   $46 = $this + 80 | 0;
   $51 = HEAP32[$46 + 4 >> 2] | 0;
   $52 = $__state;
   HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
   HEAP32[$52 + 4 >> 2] = $51;
   do if (!(HEAP8[$this + 98 >> 0] | 0)) {
    $69 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
    $72 = $this + 36 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    $76 = (HEAP32[$this + 40 >> 2] | 0) - $73 | 0;
    if (($69 | 0) > 0) {
     $__c$0 = (Math_imul((HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0, $69) | 0) + $76 | 0;
     $__update_st$0$off0 = 0;
     break;
    }
    $88 = HEAP32[$this + 12 >> 2] | 0;
    if (($88 | 0) == (HEAP32[$this + 16 >> 2] | 0)) {
     $__c$0 = $76;
     $__update_st$0$off0 = 0;
    } else {
     $92 = HEAP32[$3 >> 2] | 0;
     $93 = $this + 32 | 0;
     $103 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$92 >> 2] | 0) + 32 >> 2] & 31]($92, $__state, HEAP32[$93 >> 2] | 0, $73, $88 - (HEAP32[$this + 8 >> 2] | 0) | 0) | 0;
     $__c$0 = $76 - $103 + (HEAP32[$72 >> 2] | 0) - (HEAP32[$93 >> 2] | 0) | 0;
     $__update_st$0$off0 = 1;
    }
   } else {
    $__c$0 = (HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0;
    $__update_st$0$off0 = 0;
   } while (0);
   if (_fseeko(HEAP32[$0 >> 2] | 0, 0 - $__c$0 | 0, 1) | 0) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   if ($__update_st$0$off0) {
    $116 = $__state;
    $121 = HEAP32[$116 + 4 >> 2] | 0;
    $122 = $this + 72 | 0;
    HEAP32[$122 >> 2] = HEAP32[$116 >> 2];
    HEAP32[$122 + 4 >> 2] = $121;
   }
   $127 = HEAP32[$this + 32 >> 2] | 0;
   HEAP32[$this + 40 >> 2] = $127;
   HEAP32[$this + 36 >> 2] = $127;
   HEAP32[$this + 8 >> 2] = 0;
   HEAP32[$this + 12 >> 2] = 0;
   HEAP32[$this + 16 >> 2] = 0;
   HEAP32[$7 >> 2] = 0;
  }
 } else {
  if ((HEAP32[$this + 24 >> 2] | 0) != (HEAP32[$this + 20 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, -1) | 0) == -1) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = $this + 72 | 0;
  $22 = $this + 32 | 0;
  $23 = $this + 52 | 0;
  while (1) {
   $24 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$22 >> 2] | 0;
   $31 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 20 >> 2] & 31]($24, $21, $25, $25 + (HEAP32[$23 >> 2] | 0) | 0, $__extbe) | 0;
   $33 = HEAP32[$22 >> 2] | 0;
   $36 = (HEAP32[$__extbe >> 2] | 0) - $33 | 0;
   if ((_fwrite($33 | 0, 1, $36 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($36 | 0)) {
    label = 23;
    break;
   }
   if (($31 | 0) == 2) {
    label = 23;
    break;
   } else if (($31 | 0) != 1) {
    label = 10;
    break;
   }
  }
  if ((label | 0) == 10) {
   if (!(_fflush(HEAP32[$0 >> 2] | 0) | 0)) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 23) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $12 = 0, $14 = 0, $19 = 0, $22 = 0, $29 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $62 = 0, $65 = 0, $73 = 0, $80 = 0, $82 = 0, $87 = 0, $89 = 0;
 do if ($__ct << 24 >> 24 == $__decimal_point << 24 >> 24) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$12) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if (!($22 & 1)) $29 = ($22 & 255) >>> 1; else $29 = HEAP32[$__grouping + 4 >> 2] | 0;
   if ($29) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 32 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
   if ((HEAP8[$$0$i >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 1 | 0;
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  if (($47 | 0) > 31) $$0 = -1; else {
   $50 = HEAP8[46480 + $47 >> 0] | 0;
   if (($47 | 0) == 23 | ($47 | 0) == 22) {
    HEAP8[$__exp >> 0] = 80;
    $62 = HEAP32[$__a_end >> 2] | 0;
    HEAP32[$__a_end >> 2] = $62 + 1;
    HEAP8[$62 >> 0] = $50;
    $$0 = 0;
    break;
   } else if (($47 | 0) == 24 | ($47 | 0) == 25) {
    $51 = HEAP32[$__a_end >> 2] | 0;
    if (($51 | 0) != ($__a | 0)) if ((HEAPU8[$51 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
     $$0 = -1;
     break;
    }
    HEAP32[$__a_end >> 2] = $51 + 1;
    HEAP8[$51 >> 0] = $50;
    $$0 = 0;
    break;
   } else {
    $65 = $50 & 95;
    if (($65 | 0) == (HEAP8[$__exp >> 0] | 0)) {
     HEAP8[$__exp >> 0] = $65 | 128;
     if (HEAP8[$__in_units >> 0] | 0) {
      HEAP8[$__in_units >> 0] = 0;
      $73 = HEAP8[$__grouping >> 0] | 0;
      if (!($73 & 1)) $80 = ($73 & 255) >>> 1; else $80 = HEAP32[$__grouping + 4 >> 2] | 0;
      if ($80) {
       $82 = HEAP32[$__g_end >> 2] | 0;
       if (($82 - $__g | 0) < 160) {
        $87 = HEAP32[$__dc >> 2] | 0;
        HEAP32[$__g_end >> 2] = $82 + 4;
        HEAP32[$82 >> 2] = $87;
       }
      }
     }
    }
    $89 = HEAP32[$__a_end >> 2] | 0;
    HEAP32[$__a_end >> 2] = $89 + 1;
    HEAP8[$89 >> 0] = $50;
    if (($47 | 0) > 21) {
     $$0 = 0;
     break;
    }
    HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
    $$0 = 0;
    break;
   }
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os, $__str, $__len) {
 $__os = $__os | 0;
 $__str = $__str | 0;
 $__len = $__len | 0;
 var $$0 = 0, $$byval_copy = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $44 = 0, $49 = 0, $51 = 0, $53 = 0, $59 = 0, $61 = 0, $63 = 0, $65 = 0, $8 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $__os | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $51 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $51;
  $$pre$phi4Z2D = $__os;
  $$pre$phiZ2D = $__os;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $8 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
   HEAP32[$0 >> 2] = HEAP32[$__os + ($8 + 24) >> 2];
   if ((HEAP32[$__os + ($8 + 4) >> 2] & 176 | 0) == 32) $37 = $__str + $__len | 0; else $37 = $__str;
   $16 = $__os + $8 | 0;
   $17 = $__os + ($8 + 76) | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($18 | 0) == -1) {
    __THREW__ = 0;
    invoke_vii(47, $$byval_copy | 0, $16 | 0);
    $20 = __THREW__;
    __THREW__ = 0;
    if ($20 & 1) label = 16; else {
     __THREW__ = 0;
     $22 = invoke_iii(22, $$byval_copy | 0, 47968) | 0;
     $23 = __THREW__;
     __THREW__ = 0;
     if (!($23 & 1)) {
      __THREW__ = 0;
      $28 = invoke_iii(HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] | 0, $22 | 0, 32) | 0;
      $29 = __THREW__;
      __THREW__ = 0;
      if (!($29 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $33 = $28 << 24 >> 24;
       HEAP32[$17 >> 2] = $33;
       $$pre$phi6Z2D = $16;
       $35 = $33;
       label = 12;
       break;
      }
     }
     $31 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $31;
    }
   } else {
    $$pre$phi6Z2D = $16;
    $35 = $18;
    label = 12;
   } while (0);
   if ((label | 0) == 12) {
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__str | 0, $37 | 0, $__str + $__len | 0, $$pre$phi6Z2D | 0, $35 & 255 | 0);
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) label = 16; else {
     if (HEAP32[$1 >> 2] | 0) break;
     $44 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(48, $__os + $44 | 0, HEAP32[$__os + ($44 + 16) >> 2] | 5 | 0);
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) label = 16; else break;
    }
   }
   if ((label | 0) == 16) {
    $53 = ___cxa_find_matching_catch(0) | 0;
    $eh$lpad$body$indexZ2D = $53;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $eh$lpad$body$indexZ2D;
   $$pre$phi4Z2D = $__os;
   $$pre$phiZ2D = $__os;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $__os | 0;
 } while (0);
 ___cxa_begin_catch($$0 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(178, $$pre$phi4Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $59 = __THREW__;
 __THREW__ = 0;
 if (!($59 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $__os | 0;
 }
 $61 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $63 = __THREW__;
 __THREW__ = 0;
 if ($63 & 1) {
  $65 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($65);
 } else ___resumeException($61 | 0);
 return 0;
}

function __Z22jsonnet_unparse_numberd($agg$result, $v) {
 $agg$result = $agg$result | 0;
 $v = +$v;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $37 = 0, $40 = 0, $42 = 0, $6 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $ss = sp;
 $1 = $ss + 64 | 0;
 $2 = $ss + 8 | 0;
 HEAP32[$2 >> 2] = 592;
 $3 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 740;
 HEAP32[$1 >> 2] = 760;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $3 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $18;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 572;
 HEAP32[$1 >> 2] = 612;
 HEAP32[$2 >> 2] = 592;
 __THREW__ = 0;
 invoke_vi(177, $3 | 0);
 $10 = __THREW__;
 __THREW__ = 0;
 do if ($10 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $20;
 } else {
  HEAP32[$3 >> 2] = 904;
  $12 = $ss + 44 | 0;
  HEAP32[$12 + 0 >> 2] = 0;
  HEAP32[$12 + 4 >> 2] = 0;
  HEAP32[$12 + 8 >> 2] = 0;
  HEAP32[$12 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $3 | 0, $0 | 0);
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
   $eh$lpad$body$i$index2Z2D = $17;
   $eh$lpad$body$i$indexZ2D = $16;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $23 = +Math_floor(+$v) == $v;
  $26 = HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0;
  if ($23) {
   $27 = $2 + ($26 + 4) | 0;
   HEAP32[$27 >> 2] = HEAP32[$27 >> 2] & -261 | 4;
   HEAP32[$2 + ((HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) + 8) >> 2] = 0;
   __THREW__ = 0;
   invoke_iid(1, $2 | 0, +$v) | 0;
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) label = 13;
  } else {
   HEAP32[$2 + ($26 + 8) >> 2] = 17;
   __THREW__ = 0;
   invoke_iid(1, $2 | 0, +$v) | 0;
   $40 = __THREW__;
   __THREW__ = 0;
   if (!($40 & 1)) label = 13;
  }
  if ((label | 0) == 13) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $3 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   if (!($42 & 1)) {
    HEAP32[$ss >> 2] = 572;
    HEAP32[$1 >> 2] = 612;
    HEAP32[$2 >> 2] = 592;
    HEAP32[$3 >> 2] = 904;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
  }
  $37 = ___cxa_find_matching_catch() | 0;
  HEAP32[$ss >> 2] = 572;
  HEAP32[$1 >> 2] = 612;
  HEAP32[$2 >> 2] = 592;
  HEAP32[$3 >> 2] = 904;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($37 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 ___resumeException($$01$i | 0);
}

function _wcsrtombs($s, $ws, $n, $st) {
 $s = $s | 0;
 $ws = $ws | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$0$ph = 0, $$0$ph58 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$1$lcssa = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$35$lcssa = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa63 = 0, $$5 = 0, $$pn = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $46 = 0, $5 = 0, $7 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $buf = sp;
 if (!$s) {
  $2 = HEAP32[$ws >> 2] | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (!$3) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $$0218 = 0;
  $5 = $3;
  $ws2$019 = $2;
  while (1) {
   if ($5 >>> 0 > 127) {
    $7 = _wcrtomb($buf, $5, 0) | 0;
    if (($7 | 0) == -1) {
     $$0$ph = -1;
     break;
    } else $$pn = $7;
   } else $$pn = 1;
   $$13 = $$pn + $$0218 | 0;
   $ws2$019 = $ws2$019 + 4 | 0;
   $5 = HEAP32[$ws2$019 >> 2] | 0;
   if (!$5) {
    $$0$ph = $$13;
    break;
   } else $$0218 = $$13;
  }
  $$0 = $$0$ph;
  STACKTOP = sp;
  return $$0 | 0;
 }
 do if ($n >>> 0 > 3) {
  $$0129 = $s;
  $$2428 = $n;
  $14 = HEAP32[$ws >> 2] | 0;
  while (1) {
   $13 = HEAP32[$14 >> 2] | 0;
   if (($13 + -1 | 0) >>> 0 > 126) {
    if (!$13) {
     $$0129$lcssa = $$0129;
     $$2428$lcssa = $$2428;
     label = 14;
     break;
    }
    $19 = _wcrtomb($$0129, $13, 0) | 0;
    if (($19 | 0) == -1) {
     label = 30;
     break;
    }
    $$1 = $$0129 + $19 | 0;
    $$35 = $$2428 - $19 | 0;
    $27 = $14;
   } else {
    HEAP8[$$0129 >> 0] = $13;
    $$1 = $$0129 + 1 | 0;
    $$35 = $$2428 + -1 | 0;
    $27 = HEAP32[$ws >> 2] | 0;
   }
   $14 = $27 + 4 | 0;
   HEAP32[$ws >> 2] = $14;
   if ($$35 >>> 0 <= 3) {
    $$1$lcssa = $$1;
    $$35$lcssa = $$35;
    label = 9;
    break;
   } else {
    $$0129 = $$1;
    $$2428 = $$35;
   }
  }
  if ((label | 0) == 9) {
   $$01$lcssa = $$1$lcssa;
   $$24$lcssa = $$35$lcssa;
   break;
  } else if ((label | 0) == 14) {
   HEAP8[$$0129$lcssa >> 0] = 0;
   HEAP32[$ws >> 2] = 0;
   $$0 = $n - $$2428$lcssa | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 30) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  $$01$lcssa = $s;
  $$24$lcssa = $n;
 } while (0);
 if (!$$24$lcssa) {
  $$0 = $n;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$223 = $$01$lcssa;
 $$422 = $$24$lcssa;
 $30 = HEAP32[$ws >> 2] | 0;
 while (1) {
  $29 = HEAP32[$30 >> 2] | 0;
  if (($29 + -1 | 0) >>> 0 > 126) {
   if (!$29) {
    $$223$lcssa = $$223;
    $$422$lcssa = $$422;
    label = 21;
    break;
   }
   $35 = _wcrtomb($buf, $29, 0) | 0;
   if (($35 | 0) == -1) {
    $$0$ph58 = -1;
    label = 29;
    break;
   }
   if ($$422 >>> 0 < $35 >>> 0) {
    $$422$lcssa63 = $$422;
    label = 24;
    break;
   }
   _wcrtomb($$223, HEAP32[$30 >> 2] | 0, 0) | 0;
   $$3 = $$223 + $35 | 0;
   $$5 = $$422 - $35 | 0;
   $46 = $30;
  } else {
   HEAP8[$$223 >> 0] = $29;
   $$3 = $$223 + 1 | 0;
   $$5 = $$422 + -1 | 0;
   $46 = HEAP32[$ws >> 2] | 0;
  }
  $30 = $46 + 4 | 0;
  HEAP32[$ws >> 2] = $30;
  if (!$$5) {
   $$0$ph58 = $n;
   label = 29;
   break;
  } else {
   $$223 = $$3;
   $$422 = $$5;
  }
 }
 if ((label | 0) == 21) {
  HEAP8[$$223$lcssa >> 0] = 0;
  HEAP32[$ws >> 2] = 0;
  $$0 = $n - $$422$lcssa | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 24) {
  $$0 = $n - $$422$lcssa63 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 29) {
  $$0 = $$0$ph58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this, $heap) {
 $this = $this | 0;
 $heap = $heap | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i16$i = 0, $$0$i$i$i$i16$i$lcssa = 0, $$0$i$i$i18$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i21$i = 0, $$cast$i$i$i$i$lcssa = 0, $$cast$i$i$i19$i$lcssa = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i15$i = 0, $$idx$val$i3642$i = 0, $$idx1$val = 0, $$idx1$val$i = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $25 = 0, $27 = 0, $30 = 0, $34 = 0, $37 = 0, $40 = 0, $42 = 0, $45 = 0, $51 = 0;
 $$idx$val = HEAP32[$this + 12 >> 2] | 0;
 $$idx1$val = HEAP32[$this + 16 >> 2] | 0;
 if (($$idx$val | 0) == ($$idx1$val | 0)) return;
 $2 = $$idx$val;
 do {
  if (HEAP32[$2 + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$2 + 48 >> 2] | 0);
  if (HEAP32[$2 + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$2 + 64 >> 2] | 0);
  $15 = HEAP32[$2 + 116 >> 2] | 0;
  if ($15) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $15);
  $18 = HEAP32[$2 + 120 >> 2] | 0;
  if ($18) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $18);
  $$idx$val$i$i = HEAP32[$2 + 128 >> 2] | 0;
  $20 = $2 + 132 | 0;
  if (($$idx$val$i$i | 0) != ($20 | 0)) {
   $$idx$val$i3642$i = $$idx$val$i$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val$i3642$i + 20 >> 2] | 0);
    $25 = HEAP32[$$idx$val$i3642$i + 4 >> 2] | 0;
    if (!$25) {
     $$0$i$i$i18$i = $$idx$val$i3642$i;
     while (1) {
      $30 = HEAP32[$$0$i$i$i18$i + 8 >> 2] | 0;
      if ((HEAP32[$30 >> 2] | 0) == ($$0$i$i$i18$i | 0)) {
       $$cast$i$i$i19$i$lcssa = $30;
       break;
      } else $$0$i$i$i18$i = $30;
     }
     $$01$i$i$i21$i = $$cast$i$i$i19$i$lcssa;
    } else {
     $$0$i$i$i$i16$i = $25;
     while (1) {
      $27 = HEAP32[$$0$i$i$i$i16$i >> 2] | 0;
      if (!$27) {
       $$0$i$i$i$i16$i$lcssa = $$0$i$i$i$i16$i;
       break;
      } else $$0$i$i$i$i16$i = $27;
     }
     $$01$i$i$i21$i = $$0$i$i$i$i16$i$lcssa;
    }
    if (($$01$i$i$i21$i | 0) == ($20 | 0)) break; else $$idx$val$i3642$i = $$01$i$i$i21$i;
   }
  }
  $$idx$val$i15$i = HEAP32[$2 + 92 >> 2] | 0;
  $34 = $2 + 96 | 0;
  if (($$idx$val$i15$i | 0) != ($34 | 0)) {
   $37 = $$idx$val$i15$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$37 + 20 >> 2] | 0);
    $40 = HEAP32[$37 + 4 >> 2] | 0;
    if (!$40) {
     $$0$i$i$i$i = $37;
     while (1) {
      $45 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$45 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
       $$cast$i$i$i$i$lcssa = $45;
       break;
      } else $$0$i$i$i$i = $45;
     }
     $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i = $40;
     while (1) {
      $42 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
      if (!$42) {
       $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i = $42;
     }
     $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
    }
    if (($$01$i$i$i$i | 0) == ($34 | 0)) break; else $37 = $$01$i$i$i$i;
   }
  }
  $$idx$val$i = HEAP32[$2 + 104 >> 2] | 0;
  $$idx1$val$i = HEAP32[$2 + 108 >> 2] | 0;
  if (($$idx$val$i | 0) != ($$idx1$val$i | 0)) {
   $51 = $$idx$val$i;
   do {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$51 >> 2] | 0);
    $51 = $51 + 4 | 0;
   } while (($51 | 0) != ($$idx1$val$i | 0));
  }
  $2 = $2 + 144 | 0;
 } while (($2 | 0) != ($$idx1$val | 0));
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $12 = 0, $14 = 0, $19 = 0, $22 = 0, $29 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $64 = 0, $72 = 0, $79 = 0, $81 = 0, $86 = 0, $88 = 0;
 do if (($__ct | 0) == ($__decimal_point | 0)) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$12) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if (($__ct | 0) == ($__thousands_sep | 0)) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if (!($22 & 1)) $29 = ($22 & 255) >>> 1; else $29 = HEAP32[$__grouping + 4 >> 2] | 0;
   if ($29) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 128 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
   if ((HEAP32[$$0$i >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 4 | 0;
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  $48 = $47 >> 2;
  if (($47 | 0) > 124) $$0 = -1; else {
   $51 = HEAP8[46480 + $48 >> 0] | 0;
   if (($48 | 0) == 24 | ($48 | 0) == 25) {
    $52 = HEAP32[$__a_end >> 2] | 0;
    if (($52 | 0) != ($__a | 0)) if ((HEAPU8[$52 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
     $$0 = -1;
     break;
    }
    HEAP32[$__a_end >> 2] = $52 + 1;
    HEAP8[$52 >> 0] = $51;
    $$0 = 0;
    break;
   } else if (($48 | 0) == 23 | ($48 | 0) == 22) HEAP8[$__exp >> 0] = 80; else {
    $64 = $51 & 95;
    if (($64 | 0) == (HEAP8[$__exp >> 0] | 0)) {
     HEAP8[$__exp >> 0] = $64 | 128;
     if (HEAP8[$__in_units >> 0] | 0) {
      HEAP8[$__in_units >> 0] = 0;
      $72 = HEAP8[$__grouping >> 0] | 0;
      if (!($72 & 1)) $79 = ($72 & 255) >>> 1; else $79 = HEAP32[$__grouping + 4 >> 2] | 0;
      if ($79) {
       $81 = HEAP32[$__g_end >> 2] | 0;
       if (($81 - $__g | 0) < 160) {
        $86 = HEAP32[$__dc >> 2] | 0;
        HEAP32[$__g_end >> 2] = $81 + 4;
        HEAP32[$81 >> 2] = $86;
       }
      }
     }
    }
   }
   $88 = HEAP32[$__a_end >> 2] | 0;
   HEAP32[$__a_end >> 2] = $88 + 1;
   HEAP8[$88 >> 0] = $51;
   if (($47 | 0) > 84) $$0 = 0; else {
    HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
    $$0 = 0;
   }
  }
 } while (0);
 return $$0 | 0;
}

function _mbsnrtowcs($wcs, $src, $n, $wn, $st) {
 $wcs = $wcs | 0;
 $src = $src | 0;
 $n = $n | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$ = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$ph = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $17 = 0, $21 = 0, $22 = 0, $30 = 0, $32 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$0$lcssa = 0, $ws$0$lcssa$ph = 0, $ws$030 = 0, $ws$1 = 0, $ws$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $wbuf = sp + 8 | 0;
 $s = sp;
 $0 = HEAP32[$src >> 2] | 0;
 HEAP32[$s >> 2] = $0;
 $1 = ($wcs | 0) != 0;
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 do if (($wn$ | 0) != 0 & ($0 | 0) != 0) {
  $$01428 = $wn$;
  $$031 = $n;
  $32 = $0;
  $cnt$029 = 0;
  $ws$030 = $wcs$;
  while (1) {
   $4 = $$031 >>> 2;
   $5 = $4 >>> 0 >= $$01428 >>> 0;
   if (!($$031 >>> 0 > 131 | $5)) {
    $$0$lcssa$ph = $$031;
    $$014$lcssa$ph = $$01428;
    $$ph = $32;
    $cnt$0$lcssa$ph = $cnt$029;
    $ws$0$lcssa$ph = $ws$030;
    label = 8;
    break;
   }
   $$014$ = $5 ? $$01428 : $4;
   $7 = $$031 - $$014$ | 0;
   $8 = _mbsrtowcs($ws$030, $s, $$014$, $st) | 0;
   if (($8 | 0) == -1) {
    label = 17;
    break;
   }
   if (($ws$030 | 0) == ($wbuf | 0)) {
    $$115 = $$01428;
    $ws$1 = $wbuf;
   } else {
    $$115 = $$01428 - $8 | 0;
    $ws$1 = $ws$030 + ($8 << 2) | 0;
   }
   $13 = $8 + $cnt$029 | 0;
   $14 = HEAP32[$s >> 2] | 0;
   if (($$115 | 0) != 0 & ($14 | 0) != 0) {
    $$01428 = $$115;
    $$031 = $7;
    $32 = $14;
    $cnt$029 = $13;
    $ws$030 = $ws$1;
   } else {
    $$0$lcssa$ph = $7;
    $$014$lcssa$ph = $$115;
    $$ph = $14;
    $cnt$0$lcssa$ph = $13;
    $ws$0$lcssa$ph = $ws$1;
    label = 8;
    break;
   }
  }
  if ((label | 0) == 8) {
   $$0$lcssa = $$0$lcssa$ph;
   $$014$lcssa = $$014$lcssa$ph;
   $17 = $$ph;
   $cnt$0$lcssa = $cnt$0$lcssa$ph;
   $ws$0$lcssa = $ws$0$lcssa$ph;
   label = 9;
   break;
  } else if ((label | 0) == 17) {
   $cnt$3 = -1;
   break;
  }
 } else {
  $$0$lcssa = $n;
  $$014$lcssa = $wn$;
  $17 = $0;
  $cnt$0$lcssa = 0;
  $ws$0$lcssa = $wcs$;
  label = 9;
 } while (0);
 do if ((label | 0) == 9) if (($$0$lcssa | 0) != 0 & (($$014$lcssa | 0) != 0 & ($17 | 0) != 0)) {
  $$2 = $$0$lcssa;
  $$3 = $$014$lcssa;
  $21 = $17;
  $cnt$2 = $cnt$0$lcssa;
  $ws$2 = $ws$0$lcssa;
  while (1) {
   $22 = _mbrtowc($ws$2, $21, $$2, $st) | 0;
   if (($22 + 2 | 0) >>> 0 < 3) {
    $$lcssa = $22;
    $cnt$2$lcssa = $cnt$2;
    break;
   }
   $21 = (HEAP32[$s >> 2] | 0) + $22 | 0;
   HEAP32[$s >> 2] = $21;
   $$3 = $$3 + -1 | 0;
   $30 = $cnt$2 + 1 | 0;
   if (!(($$3 | 0) != 0 & ($$2 | 0) != ($22 | 0))) {
    $$lcssa61 = $30;
    label = 16;
    break;
   } else {
    $$2 = $$2 - $22 | 0;
    $cnt$2 = $30;
    $ws$2 = $ws$2 + 4 | 0;
   }
  }
  if ((label | 0) == 16) {
   $cnt$3 = $$lcssa61;
   break;
  }
  if (($$lcssa | 0) == -1) {
   $cnt$3 = -1;
   break;
  } else if (!$$lcssa) {
   HEAP32[$s >> 2] = 0;
   $cnt$3 = $cnt$2$lcssa;
   break;
  } else {
   HEAP32[$st >> 2] = 0;
   $cnt$3 = $cnt$2$lcssa;
   break;
  }
 } else $cnt$3 = $cnt$0$lcssa; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$src >> 2] = HEAP32[$s >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i3$i$i915 = 0, $0 = 0, $13 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $46 = 0, $47 = 0, $48 = 0, $58 = 0, $59 = 0, $71 = 0, $83 = 0, $84 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $83 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $83 = 1;
   break;
  } else {
   $83 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($83) {
   $$pre$i3$i$i915 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($83) label = 16; else {
  $$pre$i3$i$i915 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $84 = 1; else {
    $58 = $$pre;
    label = 25;
   }
  } else {
   HEAP32[$47 >> 2] = $48 + 4;
   $58 = $46;
   label = 25;
  }
  do if ((label | 0) == 25) {
   $59 = HEAP32[$58 + 12 >> 2] | 0;
   if (($59 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 127]($58) | 0; else $$0$i$i$i$i1 = HEAP32[$59 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $84 = 1;
    break;
   } else {
    $84 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i915) label = 37; else {
   $71 = HEAP32[$$pre$i3$i$i915 + 12 >> 2] | 0;
   if (($71 | 0) == (HEAP32[$$pre$i3$i$i915 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i915 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i915) | 0; else $$0$i$i1$i$i7 = HEAP32[$71 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 37;
    break;
   } else if ($84) break L22; else break;
  } while (0);
  if ((label | 0) == 37) if (!$84) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $__wch = $__wch | 0;
 var $$pre = 0, $109 = 0, $114 = 0, $121 = 0, $126 = 0, $14 = 0, $141 = 0, $146 = 0, $2 = 0, $20 = 0, $25 = 0, $3 = 0, $37 = 0, $4 = 0, $44 = 0, $47 = 0, $5 = 0, $54 = 0, $56 = 0, $58 = 0, $61 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $83 = 0, $85 = 0, $87 = 0, $9 = 0, $93 = 0, $98 = 0;
 $2 = $this + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $this + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  HEAP32[$2 >> 2] = $5;
  $54 = $5;
 } else $54 = $3;
 $7 = $__wch & 24;
 if (!$7) {
  $9 = $agg$result;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  $14 = $agg$result + 8 | 0;
  HEAP32[$14 >> 2] = -1;
  HEAP32[$14 + 4 >> 2] = -1;
  return;
 }
 if (($__way | 0) == 1 & ($7 | 0) == 24) {
  $20 = $agg$result;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  $25 = $agg$result + 8 | 0;
  HEAP32[$25 >> 2] = -1;
  HEAP32[$25 + 4 >> 2] = -1;
  return;
 }
 do if (($__way | 0) == 1) if (!($__wch & 8)) {
  $44 = $5 - (HEAP32[$this + 20 >> 2] | 0) | 0;
  $70 = $44;
  $71 = (($44 | 0) < 0) << 31 >> 31;
  break;
 } else {
  $37 = (HEAP32[$this + 12 >> 2] | 0) - (HEAP32[$this + 8 >> 2] | 0) | 0;
  $70 = $37;
  $71 = (($37 | 0) < 0) << 31 >> 31;
  break;
 } else if (!$__way) {
  $70 = 0;
  $71 = 0;
 } else if (($__way | 0) == 2) {
  $47 = $this + 32 | 0;
  if (!(HEAP8[$47 >> 0] & 1)) $56 = $47 + 1 | 0; else $56 = HEAP32[$this + 40 >> 2] | 0;
  $58 = $54 - $56 | 0;
  $70 = $58;
  $71 = (($58 | 0) < 0) << 31 >> 31;
 } else {
  $61 = $agg$result;
  HEAP32[$61 >> 2] = 0;
  HEAP32[$61 + 4 >> 2] = 0;
  $66 = $agg$result + 8 | 0;
  HEAP32[$66 >> 2] = -1;
  HEAP32[$66 + 4 >> 2] = -1;
  return;
 } while (0);
 $72 = _i64Add($70 | 0, $71 | 0, $0 | 0, $1 | 0) | 0;
 $73 = tempRet0;
 if (($73 | 0) >= 0) {
  $75 = $this + 32 | 0;
  if (!(HEAP8[$75 >> 0] & 1)) $83 = $75 + 1 | 0; else $83 = HEAP32[$this + 40 >> 2] | 0;
  $85 = $54 - $83 | 0;
  $87 = (($85 | 0) < 0) << 31 >> 31;
  if (!(($87 | 0) < ($73 | 0) | ($87 | 0) == ($73 | 0) & $85 >>> 0 < $72 >>> 0)) {
   $$pre = $__wch & 8;
   if (!(($72 | 0) == 0 & ($73 | 0) == 0)) {
    if ($$pre) if (!(HEAP32[$this + 12 >> 2] | 0)) {
     $109 = $agg$result;
     HEAP32[$109 >> 2] = 0;
     HEAP32[$109 + 4 >> 2] = 0;
     $114 = $agg$result + 8 | 0;
     HEAP32[$114 >> 2] = -1;
     HEAP32[$114 + 4 >> 2] = -1;
     return;
    }
    if (($__wch & 16 | 0) != 0 & ($5 | 0) == 0) {
     $121 = $agg$result;
     HEAP32[$121 >> 2] = 0;
     HEAP32[$121 + 4 >> 2] = 0;
     $126 = $agg$result + 8 | 0;
     HEAP32[$126 >> 2] = -1;
     HEAP32[$126 + 4 >> 2] = -1;
     return;
    }
   }
   if ($$pre) {
    HEAP32[$this + 12 >> 2] = (HEAP32[$this + 8 >> 2] | 0) + $72;
    HEAP32[$this + 16 >> 2] = $54;
   }
   if ($__wch & 16) HEAP32[$4 >> 2] = (HEAP32[$this + 20 >> 2] | 0) + $72;
   $141 = $agg$result;
   HEAP32[$141 >> 2] = 0;
   HEAP32[$141 + 4 >> 2] = 0;
   $146 = $agg$result + 8 | 0;
   HEAP32[$146 >> 2] = $72;
   HEAP32[$146 + 4 >> 2] = $73;
   return;
  }
 }
 $93 = $agg$result;
 HEAP32[$93 >> 2] = 0;
 HEAP32[$93 + 4 >> 2] = 0;
 $98 = $agg$result + 8 | 0;
 HEAP32[$98 >> 2] = -1;
 HEAP32[$98 + 4 >> 2] = -1;
 return;
}

function _scanexp($f, $pok) {
 $f = $f | 0;
 $pok = $pok | 0;
 var $$lcssa18 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $35 = 0, $36 = 0, $47 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $76 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$111 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $x$012 = 0;
 $0 = $f + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $f + 100 | 0;
 if ($1 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
  HEAP32[$0 >> 2] = $1 + 1;
  $9 = HEAPU8[$1 >> 0] | 0;
 } else $9 = ___shgetc($f) | 0;
 if (($9 | 0) == 43 | ($9 | 0) == 45) {
  $11 = ($9 | 0) == 45 & 1;
  $12 = HEAP32[$0 >> 2] | 0;
  if ($12 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $12 + 1;
   $20 = HEAPU8[$12 >> 0] | 0;
  } else $20 = ___shgetc($f) | 0;
  if (($pok | 0) != 0 & ($20 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$2 >> 2] | 0)) {
   $c$0 = $20;
   $neg$0 = $11;
  } else {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   $c$0 = $20;
   $neg$0 = $11;
  } else {
   $c$0 = $20;
   $neg$0 = $11;
  }
 } else {
  $c$0 = $9;
  $neg$0 = 0;
 }
 if (($c$0 + -48 | 0) >>> 0 > 9) {
  if (!(HEAP32[$2 >> 2] | 0)) {
   $96 = -2147483648;
   $97 = 0;
   tempRet0 = $96;
   return $97 | 0;
  }
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $96 = -2147483648;
  $97 = 0;
  tempRet0 = $96;
  return $97 | 0;
 }
 $c$111 = $c$0;
 $x$012 = 0;
 while (1) {
  $35 = $c$111 + -48 + ($x$012 * 10 | 0) | 0;
  $36 = HEAP32[$0 >> 2] | 0;
  if ($36 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $36 + 1;
   $c$1$be = HEAPU8[$36 >> 0] | 0;
  } else $c$1$be = ___shgetc($f) | 0;
  if (($c$1$be + -48 | 0) >>> 0 < 10 & ($35 | 0) < 214748364) {
   $c$111 = $c$1$be;
   $x$012 = $35;
  } else {
   $$lcssa18 = $35;
   $c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $47 = (($$lcssa18 | 0) < 0) << 31 >> 31;
 if (($c$1$be$lcssa + -48 | 0) >>> 0 < 10) {
  $52 = $$lcssa18;
  $53 = $47;
  $c$27 = $c$1$be$lcssa;
  while (1) {
   $54 = ___muldi3($52 | 0, $53 | 0, 10, 0) | 0;
   $55 = tempRet0;
   $58 = _i64Add($c$27 | 0, (($c$27 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
   $60 = _i64Add($58 | 0, tempRet0 | 0, $54 | 0, $55 | 0) | 0;
   $61 = tempRet0;
   $62 = HEAP32[$0 >> 2] | 0;
   if ($62 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $62 + 1;
    $c$2$be = HEAPU8[$62 >> 0] | 0;
   } else $c$2$be = ___shgetc($f) | 0;
   if (($c$2$be + -48 | 0) >>> 0 < 10 & (($61 | 0) < 21474836 | ($61 | 0) == 21474836 & $60 >>> 0 < 2061584302)) {
    $52 = $60;
    $53 = $61;
    $c$27 = $c$2$be;
   } else {
    $98 = $60;
    $99 = $61;
    $c$2$be$lcssa = $c$2$be;
    break;
   }
  }
  $90 = $98;
  $91 = $99;
  $c$2$lcssa = $c$2$be$lcssa;
 } else {
  $90 = $$lcssa18;
  $91 = $47;
  $c$2$lcssa = $c$1$be$lcssa;
 }
 if (($c$2$lcssa + -48 | 0) >>> 0 < 10) do {
  $76 = HEAP32[$0 >> 2] | 0;
  if ($76 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $76 + 1;
   $c$3$be = HEAPU8[$76 >> 0] | 0;
  } else $c$3$be = ___shgetc($f) | 0;
 } while (($c$3$be + -48 | 0) >>> 0 < 10);
 if (HEAP32[$2 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
 $89 = ($neg$0 | 0) != 0;
 $92 = _i64Subtract(0, 0, $90 | 0, $91 | 0) | 0;
 $96 = $89 ? tempRet0 : $91;
 $97 = $89 ? $92 : $90;
 tempRet0 = $96;
 return $97 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $20 = 0, $23 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $49 = 0, $50 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $8 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  FUNCTION_TABLE_viiiiii[$8 & 31]($agg$result, $this, $$byval_copy, $__iob, $__fl, $__v & 1);
 } else {
  __ZNKSt3__18ios_base6getlocEv($1, $__iob);
  __THREW__ = 0;
  $11 = invoke_iii(22, $1 | 0, 48120) | 0;
  $12 = __THREW__;
  __THREW__ = 0;
  do if ($12 & 1) {
   $55 = ___cxa_find_matching_catch() | 0;
   $56 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $$0 = $55;
   $$01 = $56;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $15 = HEAP32[$11 >> 2] | 0;
   if ($__v) FUNCTION_TABLE_vii[HEAP32[$15 + 24 >> 2] & 127]($__nm, $11); else FUNCTION_TABLE_vii[HEAP32[$15 + 28 >> 2] & 127]($__nm, $11);
   $20 = HEAP8[$__nm >> 0] | 0;
   if (!($20 & 1)) {
    $25 = $__nm + 4 | 0;
    $$ph = $25;
    $$pre$phi4Z2D = $__nm + 8 | 0;
    $$pre$phiZ2D = $25;
   } else {
    $23 = $__nm + 8 | 0;
    $$ph = HEAP32[$23 >> 2] | 0;
    $$pre$phi4Z2D = $23;
    $$pre$phiZ2D = $__nm + 4 | 0;
   }
   $27 = $20;
   $36 = $$ph;
   while (1) {
    if (!($27 & 1)) {
     $34 = $$pre$phiZ2D;
     $35 = ($27 & 255) >>> 1;
    } else {
     $34 = HEAP32[$$pre$phi4Z2D >> 2] | 0;
     $35 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    }
    if (($36 | 0) == ($34 + ($35 << 2) | 0)) {
     label = 24;
     break;
    }
    $38 = HEAP32[$36 >> 2] | 0;
    $39 = HEAP32[$__s >> 2] | 0;
    if ($39) {
     $41 = $39 + 24 | 0;
     $42 = HEAP32[$41 >> 2] | 0;
     if (($42 | 0) == (HEAP32[$39 + 28 >> 2] | 0)) {
      __THREW__ = 0;
      $49 = invoke_iii(HEAP32[(HEAP32[$39 >> 2] | 0) + 52 >> 2] | 0, $39 | 0, $38 | 0) | 0;
      $50 = __THREW__;
      __THREW__ = 0;
      if ($50 & 1) {
       label = 23;
       break;
      } else $$0$i$i = $49;
     } else {
      HEAP32[$41 >> 2] = $42 + 4;
      HEAP32[$42 >> 2] = $38;
      $$0$i$i = $38;
     }
     if (($$0$i$i | 0) == -1) HEAP32[$__s >> 2] = 0;
    }
    $27 = HEAP8[$__nm >> 0] | 0;
    $36 = $36 + 4 | 0;
   }
   if ((label | 0) == 23) {
    $58 = ___cxa_find_matching_catch() | 0;
    $59 = tempRet0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
    $$0 = $58;
    $$01 = $59;
    break;
   } else if ((label | 0) == 24) {
    HEAP32[$agg$result >> 2] = HEAP32[$__s >> 2];
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
    break L1;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $60 = 0, $61 = 0, $8 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  FUNCTION_TABLE_viiiiii[$8 & 31]($agg$result, $this, $$byval_copy, $__iob, $__fl, $__v & 1);
 } else {
  __ZNKSt3__18ios_base6getlocEv($1, $__iob);
  __THREW__ = 0;
  $11 = invoke_iii(22, $1 | 0, 48112) | 0;
  $12 = __THREW__;
  __THREW__ = 0;
  do if ($12 & 1) {
   $57 = ___cxa_find_matching_catch() | 0;
   $58 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $$0 = $57;
   $$01 = $58;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $15 = HEAP32[$11 >> 2] | 0;
   if ($__v) FUNCTION_TABLE_vii[HEAP32[$15 + 24 >> 2] & 127]($__nm, $11); else FUNCTION_TABLE_vii[HEAP32[$15 + 28 >> 2] & 127]($__nm, $11);
   $20 = HEAP8[$__nm >> 0] | 0;
   if (!($20 & 1)) {
    $25 = $__nm + 1 | 0;
    $$ph = $25;
    $$pre$phi4Z2D = $25;
    $$pre$phi6Z2D = $__nm + 8 | 0;
   } else {
    $23 = $__nm + 8 | 0;
    $$ph = HEAP32[$23 >> 2] | 0;
    $$pre$phi4Z2D = $__nm + 1 | 0;
    $$pre$phi6Z2D = $23;
   }
   $26 = $__nm + 4 | 0;
   $28 = $20;
   $37 = $$ph;
   L13 : while (1) {
    if (!($28 & 1)) {
     $35 = $$pre$phi4Z2D;
     $36 = ($28 & 255) >>> 1;
    } else {
     $35 = HEAP32[$$pre$phi6Z2D >> 2] | 0;
     $36 = HEAP32[$26 >> 2] | 0;
    }
    if (($37 | 0) == ($35 + $36 | 0)) {
     label = 24;
     break;
    }
    $39 = HEAP8[$37 >> 0] | 0;
    $40 = HEAP32[$__s >> 2] | 0;
    do if ($40) {
     $42 = $40 + 24 | 0;
     $43 = HEAP32[$42 >> 2] | 0;
     if (($43 | 0) != (HEAP32[$40 + 28 >> 2] | 0)) {
      HEAP32[$42 >> 2] = $43 + 1;
      HEAP8[$43 >> 0] = $39;
      break;
     }
     __THREW__ = 0;
     $52 = invoke_iii(HEAP32[(HEAP32[$40 >> 2] | 0) + 52 >> 2] | 0, $40 | 0, $39 & 255 | 0) | 0;
     $53 = __THREW__;
     __THREW__ = 0;
     if ($53 & 1) {
      label = 23;
      break L13;
     }
     if (($52 | 0) == -1) HEAP32[$__s >> 2] = 0;
    } while (0);
    $28 = HEAP8[$__nm >> 0] | 0;
    $37 = $37 + 1 | 0;
   }
   if ((label | 0) == 23) {
    $60 = ___cxa_find_matching_catch() | 0;
    $61 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
    $$0 = $60;
    $$01 = $61;
    break;
   } else if ((label | 0) == 24) {
    HEAP32[$agg$result >> 2] = HEAP32[$__s >> 2];
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
    break L1;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIcE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $36 = 0, $38 = 0, $4 = 0, $44 = 0, $57 = 0, $6 = 0, $61 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$0 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa = 0, $__nread$0$lcssa17 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($8 | 0)) break;
   $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
   if (($12 | 0) == -1) {
    label = 26;
    break;
   }
   HEAP8[$__extbuf + $__i$0 >> 0] = $12;
   $__i$0 = $__i$0 + 1 | 0;
  }
  if ((label | 0) == 26) {
   $$0 = -1;
   break;
  }
  do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $20 = $this + 40 | 0;
   $21 = $this + 36 | 0;
   $22 = $__1buf + 1 | 0;
   $__nread$0 = $8;
   while (1) {
    $24 = HEAP32[$20 >> 2] | 0;
    $25 = $24;
    $27 = HEAP32[$25 >> 2] | 0;
    $30 = HEAP32[$25 + 4 >> 2] | 0;
    $31 = HEAP32[$21 >> 2] | 0;
    $32 = $__extbuf + $__nread$0 | 0;
    $36 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$31 >> 2] | 0) + 16 >> 2] & 15]($31, $24, $__extbuf, $32, $__enxt, $__1buf, $22, $__inxt) | 0;
    if (($36 | 0) == 3) {
     $__nread$0$lcssa17 = $__nread$0;
     label = 14;
     break;
    } else if (($36 | 0) == 2) {
     label = 25;
     break;
    } else if (($36 | 0) != 1) {
     $__nread$0$lcssa = $__nread$0;
     label = 16;
     break;
    }
    $38 = HEAP32[$20 >> 2] | 0;
    HEAP32[$38 >> 2] = $27;
    HEAP32[$38 + 4 >> 2] = $30;
    if (($__nread$0 | 0) == 8) {
     label = 25;
     break;
    }
    $44 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($44 | 0) == -1) {
     label = 25;
     break;
    }
    HEAP8[$32 >> 0] = $44;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   if ((label | 0) == 14) {
    HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
    $__nread$2 = $__nread$0$lcssa17;
    break;
   } else if ((label | 0) == 16) {
    $__nread$2 = $__nread$0$lcssa;
    break;
   } else if ((label | 0) == 25) {
    $$0 = -1;
    break L1;
   }
  } else {
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread$2 = $8;
  } while (0);
  do if ($__consume) {
   $57 = HEAP8[$__1buf >> 0] | 0;
   HEAP32[$this + 48 >> 2] = $57 & 255;
   $61 = $57;
  } else {
   $__i2$0 = $__nread$2;
   while (1) {
    if (($__i2$0 | 0) <= 0) {
     label = 22;
     break;
    }
    $__i2$0 = $__i2$0 + -1 | 0;
    if ((_ungetc(HEAPU8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
     label = 24;
     break;
    }
   }
   if ((label | 0) == 22) {
    $61 = HEAP8[$__1buf >> 0] | 0;
    break;
   } else if ((label | 0) == 24) {
    $$0 = -1;
    break L1;
   }
  } while (0);
  $$0 = $61 & 255;
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _wcsnrtombs($dst, $wcs, $wn, $n, $st) {
 $dst = $dst | 0;
 $wcs = $wcs | 0;
 $wn = $wn | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$$0 = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$ph = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $16 = 0, $21 = 0, $22 = 0, $31 = 0, $33 = 0, $4 = 0, $6 = 0, $7 = 0, $buf = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $s$0$lcssa = 0, $s$0$lcssa$ph = 0, $s$030 = 0, $s$1 = 0, $s$2 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $buf = sp + 8 | 0;
 $ws = sp;
 $0 = HEAP32[$wcs >> 2] | 0;
 HEAP32[$ws >> 2] = $0;
 $1 = ($dst | 0) != 0;
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 do if (($n$ | 0) != 0 & ($0 | 0) != 0) {
  $$01428 = $n$;
  $$031 = $wn;
  $33 = $0;
  $cnt$029 = 0;
  $s$030 = $dst$;
  while (1) {
   $4 = $$031 >>> 0 >= $$01428 >>> 0;
   if (!($4 | $$031 >>> 0 > 32)) {
    $$0$lcssa$ph = $$031;
    $$014$lcssa$ph = $$01428;
    $$ph = $33;
    $cnt$0$lcssa$ph = $cnt$029;
    $s$0$lcssa$ph = $s$030;
    label = 8;
    break;
   }
   $$014$$0 = $4 ? $$01428 : $$031;
   $6 = $$031 - $$014$$0 | 0;
   $7 = _wcsrtombs($s$030, $ws, $$014$$0, 0) | 0;
   if (($7 | 0) == -1) {
    label = 16;
    break;
   }
   if (($s$030 | 0) == ($buf | 0)) {
    $$115 = $$01428;
    $s$1 = $buf;
   } else {
    $$115 = $$01428 - $7 | 0;
    $s$1 = $s$030 + $7 | 0;
   }
   $12 = $7 + $cnt$029 | 0;
   $13 = HEAP32[$ws >> 2] | 0;
   if (($$115 | 0) != 0 & ($13 | 0) != 0) {
    $$01428 = $$115;
    $$031 = $6;
    $33 = $13;
    $cnt$029 = $12;
    $s$030 = $s$1;
   } else {
    $$0$lcssa$ph = $6;
    $$014$lcssa$ph = $$115;
    $$ph = $13;
    $cnt$0$lcssa$ph = $12;
    $s$0$lcssa$ph = $s$1;
    label = 8;
    break;
   }
  }
  if ((label | 0) == 8) {
   $$0$lcssa = $$0$lcssa$ph;
   $$014$lcssa = $$014$lcssa$ph;
   $16 = $$ph;
   $cnt$0$lcssa = $cnt$0$lcssa$ph;
   $s$0$lcssa = $s$0$lcssa$ph;
   label = 9;
   break;
  } else if ((label | 0) == 16) {
   $cnt$3 = -1;
   break;
  }
 } else {
  $$0$lcssa = $wn;
  $$014$lcssa = $n$;
  $16 = $0;
  $cnt$0$lcssa = 0;
  $s$0$lcssa = $dst$;
  label = 9;
 } while (0);
 do if ((label | 0) == 9) if (($$0$lcssa | 0) != 0 & (($$014$lcssa | 0) != 0 & ($16 | 0) != 0)) {
  $$2 = $$0$lcssa;
  $$3 = $$014$lcssa;
  $21 = $16;
  $cnt$2 = $cnt$0$lcssa;
  $s$2 = $s$0$lcssa;
  while (1) {
   $22 = _wcrtomb($s$2, HEAP32[$21 >> 2] | 0, 0) | 0;
   if (($22 + 1 | 0) >>> 0 < 2) {
    $$lcssa = $22;
    $cnt$2$lcssa = $cnt$2;
    break;
   }
   $21 = (HEAP32[$ws >> 2] | 0) + 4 | 0;
   HEAP32[$ws >> 2] = $21;
   $$2 = $$2 + -1 | 0;
   $31 = $cnt$2 + 1 | 0;
   if (!(($$2 | 0) != 0 & ($$3 | 0) != ($22 | 0))) {
    $$lcssa61 = $31;
    label = 15;
    break;
   } else {
    $$3 = $$3 - $22 | 0;
    $cnt$2 = $31;
    $s$2 = $s$2 + $22 | 0;
   }
  }
  if ((label | 0) == 15) {
   $cnt$3 = $$lcssa61;
   break;
  }
  if (!$$lcssa) {
   HEAP32[$ws >> 2] = 0;
   $cnt$3 = $cnt$2$lcssa;
  } else $cnt$3 = -1;
 } else $cnt$3 = $cnt$0$lcssa; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$wcs >> 2] = HEAP32[$ws >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function _memchr($src, $c, $n) {
 $src = $src | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$019$lcssa = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$24$ph = 0, $$3 = 0, $$3$ph = 0, $$lcssa = 0, $$lcssa57 = 0, $$lcssa58 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $0 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $32 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$020$lcssa = 0, $s$15 = 0, $s$15$ph = 0, $s$2 = 0, $s$2$ph = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0;
 $0 = $c & 255;
 $4 = ($n | 0) != 0;
 do if ($4 & ($src & 3 | 0) != 0) {
  $5 = $c & 255;
  $$019 = $n;
  $s$020 = $src;
  while (1) {
   if ((HEAP8[$s$020 >> 0] | 0) == $5 << 24 >> 24) {
    $$019$lcssa = $$019;
    $s$020$lcssa = $s$020;
    label = 7;
    break;
   }
   $8 = $s$020 + 1 | 0;
   $9 = $$019 + -1 | 0;
   $13 = ($9 | 0) != 0;
   if ($13 & ($8 & 3 | 0) != 0) {
    $$019 = $9;
    $s$020 = $8;
   } else {
    $$lcssa61 = $8;
    $$lcssa62 = $9;
    $$lcssa63 = $13;
    label = 5;
    break;
   }
  }
  if ((label | 0) == 5) {
   $$0$lcssa = $$lcssa62;
   $$lcssa = $$lcssa63;
   $s$0$lcssa = $$lcssa61;
   label = 6;
   break;
  } else if ((label | 0) == 7) {
   $$0$lcssa44 = $$019$lcssa;
   $s$0$lcssa43 = $s$020$lcssa;
   break;
  }
 } else {
  $$0$lcssa = $n;
  $$lcssa = $4;
  $s$0$lcssa = $src;
  label = 6;
 } while (0);
 if ((label | 0) == 6) if ($$lcssa) {
  $$0$lcssa44 = $$0$lcssa;
  $s$0$lcssa43 = $s$0$lcssa;
 } else {
  $$3 = 0;
  $s$2 = $s$0$lcssa;
  $35 = ($$3 | 0) != 0;
  $36 = $35 ? $s$2 : 0;
  return $36 | 0;
 }
 $15 = $c & 255;
 if ((HEAP8[$s$0$lcssa43 >> 0] | 0) == $15 << 24 >> 24) {
  $$3 = $$0$lcssa44;
  $s$2 = $s$0$lcssa43;
  $35 = ($$3 | 0) != 0;
  $36 = $35 ? $s$2 : 0;
  return $36 | 0;
 }
 $17 = Math_imul($0, 16843009) | 0;
 do if ($$0$lcssa44 >>> 0 > 3) {
  $$110 = $$0$lcssa44;
  $w$011 = $s$0$lcssa43;
  while (1) {
   $20 = HEAP32[$w$011 >> 2] ^ $17;
   if (($20 & -2139062144 ^ -2139062144) & $20 + -16843009) {
    $$110$lcssa = $$110;
    $w$011$lcssa = $w$011;
    label = 12;
    break;
   }
   $26 = $w$011 + 4 | 0;
   $27 = $$110 + -4 | 0;
   if ($27 >>> 0 > 3) {
    $$110 = $27;
    $w$011 = $26;
   } else {
    $$lcssa57 = $26;
    $$lcssa58 = $27;
    label = 14;
    break;
   }
  }
  if ((label | 0) == 12) {
   $$24$ph = $$110$lcssa;
   $s$15$ph = $w$011$lcssa;
   break;
  } else if ((label | 0) == 14) {
   $$1$lcssa = $$lcssa58;
   $w$0$lcssa = $$lcssa57;
   label = 15;
   break;
  }
 } else {
  $$1$lcssa = $$0$lcssa44;
  $w$0$lcssa = $s$0$lcssa43;
  label = 15;
 } while (0);
 if ((label | 0) == 15) if (!$$1$lcssa) {
  $$3 = 0;
  $s$2 = $w$0$lcssa;
  $35 = ($$3 | 0) != 0;
  $36 = $35 ? $s$2 : 0;
  return $36 | 0;
 } else {
  $$24$ph = $$1$lcssa;
  $s$15$ph = $w$0$lcssa;
 }
 $$24 = $$24$ph;
 $s$15 = $s$15$ph;
 while (1) {
  if ((HEAP8[$s$15 >> 0] | 0) == $15 << 24 >> 24) {
   $$3$ph = $$24;
   $s$2$ph = $s$15;
   break;
  }
  $32 = $s$15 + 1 | 0;
  $$24 = $$24 + -1 | 0;
  if (!$$24) {
   $$3$ph = 0;
   $s$2$ph = $32;
   break;
  } else $s$15 = $32;
 }
 $$3 = $$3$ph;
 $s$2 = $s$2$ph;
 $35 = ($$3 | 0) != 0;
 $36 = $35 ? $s$2 : 0;
 return $36 | 0;
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $$lcssa8 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $7 = 0, $8 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$__x >> 2] | 0;
 $7 = $3 - $4 | 0;
 $8 = ($7 | 0) / 40 | 0;
 if (($3 | 0) == ($4 | 0)) return;
 if ($8 >>> 0 > 107374182) {
  __THREW__ = 0;
  invoke_vi(179, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if ($11 & 1) label = 12; else label = 4;
 } else label = 4;
 do if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) label = 12; else {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$1 >> 2] = $13 + ($8 * 40 | 0);
   $17 = HEAP32[$__x >> 2] | 0;
   $18 = HEAP32[$2 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) return;
   $$01$i = $17;
   $20 = $13;
   while (1) {
    __THREW__ = 0;
    invoke_vii(40, $20 | 0, $$01$i | 0);
    $21 = __THREW__;
    __THREW__ = 0;
    if ($21 & 1) {
     label = 11;
     break;
    }
    $23 = $20 + 12 | 0;
    $24 = $$01$i + 12 | 0;
    HEAP32[$23 + 0 >> 2] = HEAP32[$24 + 0 >> 2];
    HEAP32[$23 + 4 >> 2] = HEAP32[$24 + 4 >> 2];
    HEAP32[$23 + 8 >> 2] = HEAP32[$24 + 8 >> 2];
    HEAP32[$23 + 12 >> 2] = HEAP32[$24 + 12 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $20 + 28 | 0, $$01$i + 28 | 0);
    $27 = __THREW__;
    __THREW__ = 0;
    if ($27 & 1) {
     $$lcssa8 = $20;
     label = 9;
     break;
    }
    $20 = (HEAP32[$0 >> 2] | 0) + 40 | 0;
    HEAP32[$0 >> 2] = $20;
    $$01$i = $$01$i + 40 | 0;
    if (($$01$i | 0) == ($18 | 0)) {
     label = 20;
     break;
    }
   }
   if ((label | 0) == 9) {
    $29 = ___cxa_find_matching_catch() | 0;
    $30 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$lcssa8);
    $eh$lpad$body$index3Z2D = $30;
    $eh$lpad$body$indexZ2D = $29;
    break;
   } else if ((label | 0) == 11) {
    $34 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index3Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $34;
    break;
   } else if ((label | 0) == 20) return;
  }
 } while (0);
 if ((label | 0) == 12) {
  $36 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index3Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $36;
 }
 $38 = HEAP32[$this >> 2] | 0;
 if (!$38) ___resumeException($eh$lpad$body$indexZ2D | 0);
 $40 = HEAP32[$0 >> 2] | 0;
 if (($40 | 0) == ($38 | 0)) $47 = $38; else {
  $43 = $40;
  do {
   $42 = $43 + -40 | 0;
   HEAP32[$0 >> 2] = $42;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
   $43 = HEAP32[$0 >> 2] | 0;
  } while (($43 | 0) != ($38 | 0));
  $47 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($47);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $13 = 0, $16 = 0, $26 = 0, $28 = 0, $3 = 0, $41 = 0, $42 = 0, $43 = 0, $51 = 0, $54 = 0, $66 = 0, $78 = 0, $79 = 0, $80 = 0, label = 0;
 L1 : while (1) {
  $0 = HEAP32[$__b >> 2] | 0;
  do if (!$0) $78 = 1; else {
   $3 = HEAP32[$0 + 12 >> 2] | 0;
   if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $78 = 1;
    break;
   } else {
    $78 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $13 = HEAP32[$__e >> 2] | 0;
  do if (!$13) label = 15; else {
   $16 = HEAP32[$13 + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
   if (($$0$i$i1$i$i | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 15;
    break;
   } else if ($78) {
    $79 = $13;
    break;
   } else {
    $$pre$i3$i$i9 = $13;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else $79 = 0;
  }
  $26 = HEAP32[$__b >> 2] | 0;
  $28 = HEAP32[$26 + 12 >> 2] | 0;
  if (($28 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0; else $$0$i$i = HEAP32[$28 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, $$0$i$i) | 0)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b >> 2] | 0;
  $42 = $41 + 12 | 0;
  $43 = HEAP32[$42 >> 2] | 0;
  if (($43 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 40 >> 2] & 127]($41) | 0; else HEAP32[$42 >> 2] = $43 + 4;
 }
 $51 = HEAP32[$__b >> 2] | 0;
 do if (!$51) $80 = 1; else {
  $54 = HEAP32[$51 + 12 >> 2] | 0;
  if (($54 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] & 127]($51) | 0; else $$0$i$i$i$i1 = HEAP32[$54 >> 2] | 0;
  if (($$0$i$i$i$i1 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i9) label = 38; else {
  $66 = HEAP32[$$pre$i3$i$i9 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$$pre$i3$i$i9 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i9 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i9) | 0; else $$0$i$i1$i$i7 = HEAP32[$66 >> 2] | 0;
  if (($$0$i$i1$i$i7 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  } else if ($80) break; else {
   label = 40;
   break;
  }
 } while (0);
 if ((label | 0) == 38) if ($80) label = 40;
 if ((label | 0) == 40) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function __ZNSt3__110__stdinbufIwE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $45 = 0, $59 = 0, $6 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$0 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa = 0, $__nread$0$lcssa17 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($8 | 0)) break;
   $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
   if (($12 | 0) == -1) {
    label = 25;
    break;
   }
   HEAP8[$__extbuf + $__i$0 >> 0] = $12;
   $__i$0 = $__i$0 + 1 | 0;
  }
  if ((label | 0) == 25) {
   $$0 = -1;
   break;
  }
  do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $20 = $this + 40 | 0;
   $21 = $this + 36 | 0;
   $22 = $__1buf + 4 | 0;
   $__nread$0 = $8;
   while (1) {
    $25 = HEAP32[$20 >> 2] | 0;
    $26 = $25;
    $28 = HEAP32[$26 >> 2] | 0;
    $31 = HEAP32[$26 + 4 >> 2] | 0;
    $32 = HEAP32[$21 >> 2] | 0;
    $33 = $__extbuf + $__nread$0 | 0;
    $37 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 15]($32, $25, $__extbuf, $33, $__enxt, $__1buf, $22, $__inxt) | 0;
    if (($37 | 0) == 3) {
     $__nread$0$lcssa17 = $__nread$0;
     label = 14;
     break;
    } else if (($37 | 0) == 2) {
     label = 24;
     break;
    } else if (($37 | 0) != 1) {
     $__nread$0$lcssa = $__nread$0;
     label = 16;
     break;
    }
    $39 = HEAP32[$20 >> 2] | 0;
    HEAP32[$39 >> 2] = $28;
    HEAP32[$39 + 4 >> 2] = $31;
    if (($__nread$0 | 0) == 8) {
     label = 24;
     break;
    }
    $45 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($45 | 0) == -1) {
     label = 24;
     break;
    }
    HEAP8[$33 >> 0] = $45;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   if ((label | 0) == 14) {
    HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
    $__nread$2 = $__nread$0$lcssa17;
    break;
   } else if ((label | 0) == 16) {
    $__nread$2 = $__nread$0$lcssa;
    break;
   } else if ((label | 0) == 24) {
    $$0 = -1;
    break L1;
   }
  } else {
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
   $__nread$2 = $8;
  } while (0);
  if ($__consume) {
   $59 = HEAP32[$__1buf >> 2] | 0;
   HEAP32[$this + 48 >> 2] = $59;
   $$0 = $59;
   break;
  }
  $__i2$0 = $__nread$2;
  while (1) {
   if (($__i2$0 | 0) <= 0) {
    label = 22;
    break;
   }
   $__i2$0 = $__i2$0 + -1 | 0;
   if ((_ungetc(HEAP8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
    label = 23;
    break;
   }
  }
  if ((label | 0) == 22) {
   $$0 = HEAP32[$__1buf >> 2] | 0;
   break;
  } else if ((label | 0) == 23) {
   $$0 = -1;
   break;
  }
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $42 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[48296] | 0)) if (___cxa_guard_acquire(48296) | 0) {
  if (!(HEAP8[54944] | 0)) if (___cxa_guard_acquire(54944) | 0) {
   $9 = 54776;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 54944);
   ___cxa_atexit(194, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(54944);
  }
  __THREW__ = 0;
  invoke_iii(38, 54776, 54952) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(38, 54788, 54984) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(38, 54800, 55016) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(38, 54812, 55048) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(38, 54824, 55088) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(38, 54836, 55128) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(38, 54848, 55160) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(38, 54860, 55200) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(38, 54872, 55216) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(38, 54884, 55232) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(38, 54896, 55248) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(38, 54908, 55264) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(38, 54920, 55280) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(38, 54932, 55296) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                HEAP32[12072] = 54776;
                ___cxa_guard_release(48296);
                break;
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
  $42 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48296);
  ___resumeException($42 | 0);
 } while (0);
 return HEAP32[12072] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $42 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[48280] | 0)) if (___cxa_guard_acquire(48280) | 0) {
  if (!(HEAP8[55480] | 0)) if (___cxa_guard_acquire(55480) | 0) {
   $9 = 55312;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 55480);
   ___cxa_atexit(193, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(55480);
  }
  __THREW__ = 0;
  invoke_iii(19, 55312, 55488) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 55324, 55496) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 55336, 55504) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 55348, 55512) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 55360, 55528) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 55372, 55544) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 55384, 55552) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 55396, 55568) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 55408, 55576) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 55420, 55584) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 55432, 55592) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 55444, 55600) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 55456, 55608) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(19, 55468, 55616) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                HEAP32[12068] = 55312;
                ___cxa_guard_release(48280);
                break;
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
  $42 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48280);
  ___resumeException($42 | 0);
 } while (0);
 return HEAP32[12068] | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph$lcssa = 0, $$0$ph7 = 0, $$0$ph7$lcssa = 0, $$0$ph7$lcssa27 = 0, $$01$lcssa3 = 0, $$01$lcssa3$lcssa = 0, $$01$ph6 = 0, $$014 = 0, $$014$lcssa = 0, $$014$us = 0, $$014$us$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0;
 if (!$__root) {
  $$0$ph$lcssa = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $8 = HEAP32[$__v + 8 >> 2] | 0;
 $10 = HEAP32[$__v + 4 >> 2] | 0;
 $$0$ph7 = $__result;
 $$01$ph6 = $__root;
 L4 : while (1) {
  if ($3) {
   $$014$us = $$01$ph6;
   while (1) {
    $11 = $$014$us + 16 | 0;
    $12 = HEAP8[$11 >> 0] | 0;
    if (!($12 & 1)) {
     $23 = ($12 & 255) >>> 1;
     $25 = $11 + 1 | 0;
    } else {
     $23 = HEAP32[$$014$us + 20 >> 2] | 0;
     $25 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $26 = _memcmp($25, $6, $5 >>> 0 < $23 >>> 0 ? $5 : $23) | 0;
    if (!$26) {
     if ($23 >>> 0 >= $5 >>> 0) {
      $$014$us$lcssa = $$014$us;
      break;
     }
    } else if (($26 | 0) >= 0) {
     $$014$us$lcssa = $$014$us;
     break;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7$lcssa27 = $$0$ph7;
     label = 23;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$us$lcssa;
  } else {
   $$014 = $$01$ph6;
   while (1) {
    $33 = $$014 + 16 | 0;
    $34 = HEAP8[$33 >> 0] | 0;
    if (!($34 & 1)) {
     $45 = ($34 & 255) >>> 1;
     $47 = $33 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $48 = _memcmp($47, $8, $10 >>> 0 < $45 >>> 0 ? $10 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $10 >>> 0) {
      $$014$lcssa = $$014;
      break;
     }
    } else if (($48 | 0) >= 0) {
     $$014$lcssa = $$014;
     break;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7$lcssa = $$0$ph7;
     label = 24;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$lcssa;
  }
  $$01$ph6 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph6) {
   $$01$lcssa3$lcssa = $$01$lcssa3;
   label = 25;
   break;
  } else $$0$ph7 = $$01$lcssa3;
 }
 if ((label | 0) == 23) {
  $$0$ph$lcssa = $$0$ph7$lcssa27;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 24) {
  $$0$ph$lcssa = $$0$ph7$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 25) {
  $$0$ph$lcssa = $$01$lcssa3$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
}

function __ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE($this, $lr, $fields) {
 $this = $this | 0;
 $lr = $lr | 0;
 $fields = $fields | 0;
 var $$lcssa = 0, $$lcssa11 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $42 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01$i$i$i = 0, label = 0, $20$looptemp = 0, $__f$01$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 33968;
 $0 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $lr);
 $1 = $this + 16 | 0;
 $2 = $lr + 12 | 0;
 HEAP32[$1 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$1 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 15;
 $4 = $this + 36 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $this + 40 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 35768;
 $7 = $this + 48 | 0;
 HEAP32[$7 >> 2] = $7;
 $8 = $this + 52 | 0;
 HEAP32[$8 >> 2] = $7;
 $9 = $this + 56 | 0;
 HEAP32[$9 >> 2] = 0;
 $11 = HEAP32[$fields + 4 >> 2] | 0;
 if (($11 | 0) == ($fields | 0)) return;
 $17 = $11;
 $20 = $7;
 $23 = 0;
 while (1) {
  __THREW__ = 0;
  $20$looptemp = $20;
  $20 = invoke_ii(67, 20) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $$lcssa = $20$looptemp;
   $$lcssa11 = $23;
   break;
  }
  $16 = $17 + 8 | 0;
  $18 = $20 + 8 | 0;
  HEAP32[$18 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
  HEAP32[$20 + 4 >> 2] = $7;
  HEAP32[$20 >> 2] = $20$looptemp;
  HEAP32[$20$looptemp + 4 >> 2] = $20;
  HEAP32[$7 >> 2] = $20;
  $23 = $23 + 1 | 0;
  HEAP32[$9 >> 2] = $23;
  $17 = HEAP32[$17 + 4 >> 2] | 0;
  if (($17 | 0) == ($fields | 0)) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) return;
 $27 = ___cxa_find_matching_catch() | 0;
 if ($$lcssa11) {
  $30 = HEAP32[$8 >> 2] | 0;
  $31 = $$lcssa + 4 | 0;
  $33 = HEAP32[$30 >> 2] | 0;
  HEAP32[$33 + 4 >> 2] = HEAP32[$31 >> 2];
  HEAP32[HEAP32[$31 >> 2] >> 2] = $33;
  HEAP32[$9 >> 2] = 0;
  if (($30 | 0) != ($7 | 0)) {
   $__f$01$i$i$i = $30;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($7 | 0));
   $$pre = HEAP32[$4 >> 2] | 0;
   HEAP32[$this >> 2] = 33968;
   if (!$$pre) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($27 | 0);
   }
   $42 = HEAP32[$5 >> 2] | 0;
   if (($42 | 0) != ($$pre | 0)) HEAP32[$5 >> 2] = $42 + (~(($42 + -4 - $$pre | 0) >>> 2) << 2);
   __ZdlPv($$pre);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($27 | 0);
  }
 }
 HEAP32[$this >> 2] = 33968;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 ___resumeException($27 | 0);
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph$lcssa = 0, $$0$ph7 = 0, $$0$ph7$lcssa = 0, $$0$ph7$lcssa27 = 0, $$01$lcssa3 = 0, $$01$lcssa3$lcssa = 0, $$01$ph6 = 0, $$014 = 0, $$014$lcssa = 0, $$014$us = 0, $$014$us$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0;
 if (!$__root) {
  $$0$ph$lcssa = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $8 = HEAP32[$__v + 8 >> 2] | 0;
 $10 = HEAP32[$__v + 4 >> 2] | 0;
 $$0$ph7 = $__result;
 $$01$ph6 = $__root;
 L4 : while (1) {
  if ($3) {
   $$014$us = $$01$ph6;
   while (1) {
    $11 = $$014$us + 16 | 0;
    $12 = HEAP8[$11 >> 0] | 0;
    if (!($12 & 1)) {
     $23 = ($12 & 255) >>> 1;
     $25 = $11 + 1 | 0;
    } else {
     $23 = HEAP32[$$014$us + 20 >> 2] | 0;
     $25 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $26 = _memcmp($25, $6, $5 >>> 0 < $23 >>> 0 ? $5 : $23) | 0;
    if (!$26) {
     if ($23 >>> 0 >= $5 >>> 0) {
      $$014$us$lcssa = $$014$us;
      break;
     }
    } else if (($26 | 0) >= 0) {
     $$014$us$lcssa = $$014$us;
     break;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7$lcssa27 = $$0$ph7;
     label = 23;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$us$lcssa;
  } else {
   $$014 = $$01$ph6;
   while (1) {
    $33 = $$014 + 16 | 0;
    $34 = HEAP8[$33 >> 0] | 0;
    if (!($34 & 1)) {
     $45 = ($34 & 255) >>> 1;
     $47 = $33 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $48 = _memcmp($47, $8, $10 >>> 0 < $45 >>> 0 ? $10 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $10 >>> 0) {
      $$014$lcssa = $$014;
      break;
     }
    } else if (($48 | 0) >= 0) {
     $$014$lcssa = $$014;
     break;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7$lcssa = $$0$ph7;
     label = 24;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$lcssa;
  }
  $$01$ph6 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph6) {
   $$01$lcssa3$lcssa = $$01$lcssa3;
   label = 25;
   break;
  } else $$0$ph7 = $$01$lcssa3;
 }
 if ((label | 0) == 23) {
  $$0$ph$lcssa = $$0$ph7$lcssa27;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 24) {
  $$0$ph$lcssa = $$0$ph7$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 25) {
  $$0$ph$lcssa = $$01$lcssa3$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_SK_SK_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph$lcssa = 0, $$0$ph7 = 0, $$0$ph7$lcssa = 0, $$0$ph7$lcssa27 = 0, $$01$lcssa3 = 0, $$01$lcssa3$lcssa = 0, $$01$ph6 = 0, $$014 = 0, $$014$lcssa = 0, $$014$us = 0, $$014$us$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0;
 if (!$__root) {
  $$0$ph$lcssa = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $8 = HEAP32[$__v + 8 >> 2] | 0;
 $10 = HEAP32[$__v + 4 >> 2] | 0;
 $$0$ph7 = $__result;
 $$01$ph6 = $__root;
 L4 : while (1) {
  if ($3) {
   $$014$us = $$01$ph6;
   while (1) {
    $11 = $$014$us + 16 | 0;
    $12 = HEAP8[$11 >> 0] | 0;
    if (!($12 & 1)) {
     $23 = ($12 & 255) >>> 1;
     $25 = $11 + 1 | 0;
    } else {
     $23 = HEAP32[$$014$us + 20 >> 2] | 0;
     $25 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $26 = _memcmp($25, $6, $5 >>> 0 < $23 >>> 0 ? $5 : $23) | 0;
    if (!$26) {
     if ($23 >>> 0 >= $5 >>> 0) {
      $$014$us$lcssa = $$014$us;
      break;
     }
    } else if (($26 | 0) >= 0) {
     $$014$us$lcssa = $$014$us;
     break;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7$lcssa27 = $$0$ph7;
     label = 23;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$us$lcssa;
  } else {
   $$014 = $$01$ph6;
   while (1) {
    $33 = $$014 + 16 | 0;
    $34 = HEAP8[$33 >> 0] | 0;
    if (!($34 & 1)) {
     $45 = ($34 & 255) >>> 1;
     $47 = $33 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $48 = _memcmp($47, $8, $10 >>> 0 < $45 >>> 0 ? $10 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $10 >>> 0) {
      $$014$lcssa = $$014;
      break;
     }
    } else if (($48 | 0) >= 0) {
     $$014$lcssa = $$014;
     break;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7$lcssa = $$0$ph7;
     label = 24;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$lcssa;
  }
  $$01$ph6 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph6) {
   $$01$lcssa3$lcssa = $$01$lcssa3;
   label = 25;
   break;
  } else $$0$ph7 = $$01$lcssa3;
 }
 if ((label | 0) == 23) {
  $$0$ph$lcssa = $$0$ph7$lcssa27;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 24) {
  $$0$ph$lcssa = $$0$ph7$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 25) {
  $$0$ph$lcssa = $$01$lcssa3$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
}

function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i = 0, $$0$i6 = 0, $$01 = 0, $$02 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $42 = 0, $45 = 0, $48 = 0, $49 = 0, $50 = 0, $6 = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__ndflt = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__ndflt = sp;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__ndflt + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 $2 = HEAP8[$__dflt >> 0] | 0;
 if (!($2 & 1)) {
  $14 = $__dflt + 1 | 0;
  $15 = ($2 & 255) >>> 1;
  $50 = $__dflt + 1 | 0;
 } else {
  $6 = HEAP32[$__dflt + 8 >> 2] | 0;
  $14 = $6;
  $15 = HEAP32[$__dflt + 4 >> 2] | 0;
  $50 = $6;
 }
 $13 = $14 + $15 | 0;
 $$0$i6 = $50;
 while (1) {
  if ($$0$i6 >>> 0 >= $13 >>> 0) {
   label = 11;
   break;
  }
  __THREW__ = 0;
  invoke_vii(44, $__ndflt | 0, HEAP8[$$0$i6 >> 0] | 0);
  $18 = __THREW__;
  __THREW__ = 0;
  if ($18 & 1) {
   label = 15;
   break;
  }
  $$0$i6 = $$0$i6 + 1 | 0;
 }
 do if ((label | 0) == 11) {
  if (!(HEAP8[$__ndflt >> 0] & 1)) $31 = $__ndflt + 1 | 0; else $31 = HEAP32[$__ndflt + 8 >> 2] | 0;
  __THREW__ = 0;
  $32 = invoke_iiiii(14, (($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, $31 | 0) | 0;
  $33 = __THREW__;
  __THREW__ = 0;
  if ($33 & 1) {
   $37 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $37;
   $lpad$phi$index2 = tempRet0;
   label = 17;
   break;
  }
  $__i$0$i$i3 = 0;
  while (1) {
   if (($__i$0$i$i3 | 0) == 3) break;
   HEAP32[$agg$result + ($__i$0$i$i3 << 2) >> 2] = 0;
   $__i$0$i$i3 = $__i$0$i$i3 + 1 | 0;
  }
  $42 = $32 + (_strlen($32 | 0) | 0) | 0;
  $$0$i = $32;
  while (1) {
   if ($$0$i >>> 0 >= $42 >>> 0) {
    label = 26;
    break;
   }
   __THREW__ = 0;
   invoke_vii(44, $agg$result | 0, HEAP8[$$0$i >> 0] | 0);
   $45 = __THREW__;
   __THREW__ = 0;
   if ($45 & 1) {
    label = 25;
    break;
   }
   $$0$i = $$0$i + 1 | 0;
  }
  if ((label | 0) == 25) {
   $48 = ___cxa_find_matching_catch() | 0;
   $49 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$01 = $48;
   $$02 = $49;
   break;
  } else if ((label | 0) == 26) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;
   return;
  }
 } else if ((label | 0) == 15) {
  $35 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $35;
  $lpad$phi$index2 = tempRet0;
  label = 17;
 } while (0);
 if ((label | 0) == 17) {
  $$01 = $lpad$phi$index;
  $$02 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i2$i$i611 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $28 = 0, $30 = 0, $48 = 0, $49 = 0, $50 = 0, $60 = 0, $70 = 0, $71 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $12 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $12 = 0;
  break;
 } else {
  $12 = HEAP32[$__b >> 2] | 0;
  break;
 } else $12 = $0; while (0);
 $13 = ($12 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($13) {
   $$pre$i2$i$i611 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($13) label = 12; else {
  $$pre$i2$i$i611 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $48 = HEAP32[$__b >> 2] | 0;
  $49 = $48 + 12 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if (($50 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 40 >> 2] & 127]($48) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $70 = 0; else {
    $60 = $$pre;
    label = 21;
   }
  } else {
   HEAP32[$49 >> 2] = $50 + 1;
   $60 = $48;
   label = 21;
  }
  do if ((label | 0) == 21) if ((HEAP32[$60 + 12 >> 2] | 0) == (HEAP32[$60 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $70 = 0;
   break;
  } else {
   $70 = HEAP32[$__b >> 2] | 0;
   break;
  } else $70 = $60; while (0);
  $71 = ($70 | 0) == 0;
  do if (!$$pre$i2$i$i611) label = 30; else {
   if ((HEAP32[$$pre$i2$i$i611 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i611 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i611 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i611) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 30;
    break;
   }
   if ($71) break L16;
  } while (0);
  if ((label | 0) == 30) if (!$71) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $27 = 0, $29 = 0, $46 = 0, $47 = 0, $48 = 0, $56 = 0, $68 = 0, $69 = 0, $83 = 0, label = 0;
 $0 = $__ct + 8 | 0;
 L1 : while (1) {
  $1 = HEAP32[$__b >> 2] | 0;
  do if (!$1) $13 = 0; else if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 127]($1) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $13 = 0;
   break;
  } else {
   $13 = HEAP32[$__b >> 2] | 0;
   break;
  } else $13 = $1; while (0);
  $14 = ($13 | 0) == 0;
  $15 = HEAP32[$__e >> 2] | 0;
  do if (!$15) label = 12; else {
   if ((HEAP32[$15 + 12 >> 2] | 0) != (HEAP32[$15 + 16 >> 2] | 0)) if ($14) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 12;
    break;
   } else if ($14) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else $83 = 0;
  }
  $27 = HEAP32[$__b >> 2] | 0;
  $29 = HEAP32[$27 + 12 >> 2] | 0;
  if (($29 | 0) == (HEAP32[$27 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 127]($27) | 0; else $$0$i$i = HEAPU8[$29 >> 0] | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  if (!(HEAP16[(HEAP32[$0 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0; else HEAP32[$47 >> 2] = $48 + 1;
 }
 $56 = HEAP32[$__b >> 2] | 0;
 do if (!$56) $68 = 0; else if ((HEAP32[$56 + 12 >> 2] | 0) == (HEAP32[$56 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 127]($56) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $68 = 0;
  break;
 } else {
  $68 = HEAP32[$__b >> 2] | 0;
  break;
 } else $68 = $56; while (0);
 $69 = ($68 | 0) == 0;
 do if (!$$pre$i2$i$i6) label = 33; else {
  if ((HEAP32[$$pre$i2$i$i6 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i6) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 33;
   break;
  }
  if (!$69) label = 34;
 } while (0);
 if ((label | 0) == 33) if ($69) label = 34;
 if ((label | 0) == 34) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$pre1 = 0, $10 = 0, $12 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $40 = 0, $50 = 0, $55 = 0, $6 = 0, $66 = 0, $72 = 0, $77 = 0, $8 = 0, $80 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 if ((label | 0) == 4) {
  $10 = HEAP32[$frm_nxt >> 2] | 0;
  L6 : while (1) {
   if ($10 >>> 0 >= $frm_end >>> 0) {
    $$0$ph = 0;
    break;
   }
   $12 = HEAP32[$10 >> 2] | 0;
   if ($12 >>> 0 > $Maxcode >>> 0 | ($12 & -2048 | 0) == 55296) {
    $$0$ph = 2;
    break;
   }
   do if ($12 >>> 0 < 128) {
    $17 = HEAP32[$to_nxt >> 2] | 0;
    if (($$pre1 - $17 | 0) < 1) {
     $$0$ph = 1;
     break L6;
    }
    HEAP32[$to_nxt >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $12;
   } else {
    if ($12 >>> 0 < 2048) {
     $24 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $24 | 0) < 2) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $24 + 1;
     HEAP8[$24 >> 0] = $12 >>> 6 | 192;
     $35 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $35 + 1;
     HEAP8[$35 >> 0] = $12 & 63 | 128;
     break;
    }
    $38 = HEAP32[$to_nxt >> 2] | 0;
    $40 = $$pre1 - $38 | 0;
    if ($12 >>> 0 < 65536) {
     if (($40 | 0) < 3) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $38 + 1;
     HEAP8[$38 >> 0] = $12 >>> 12 | 224;
     $50 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $50 + 1;
     HEAP8[$50 >> 0] = $12 >>> 6 & 63 | 128;
     $55 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $55 + 1;
     HEAP8[$55 >> 0] = $12 & 63 | 128;
     break;
    } else {
     if (($40 | 0) < 4) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $38 + 1;
     HEAP8[$38 >> 0] = $12 >>> 18 | 240;
     $66 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $66 + 1;
     HEAP8[$66 >> 0] = $12 >>> 12 & 63 | 128;
     $72 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $72 + 1;
     HEAP8[$72 >> 0] = $12 >>> 6 & 63 | 128;
     $77 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $77 + 1;
     HEAP8[$77 >> 0] = $12 & 63 | 128;
     break;
    }
   } while (0);
   $80 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
   HEAP32[$frm_nxt >> 2] = $80;
   $10 = $80;
  }
  $$0 = $$0$ph;
 }
 return $$0 | 0;
}

function __ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE($agg$result, $this, $__p, $__f, $__l, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 $__f = $__f | 0;
 $__l = $__l | 0;
 $0 = $0 | 0;
 var $$lcssa = 0, $$lcssa18 = 0, $$lcssa20 = 0, $$lcssa21 = 0, $$pn = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $39 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $__ds$0$lcssa = 0, $__ds$08 = 0, label = 0, $25$looptemp = 0;
 $1 = HEAP32[$__p >> 2] | 0;
 HEAP32[$agg$result >> 2] = $1;
 $2 = HEAP32[$__f >> 2] | 0;
 $3 = HEAP32[$__l >> 2] | 0;
 if (($2 | 0) == ($3 | 0)) return;
 $5 = __Znwj(20) | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $5 + 8 | 0;
 $7 = $2 + 8 | 0;
 HEAP32[$6 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$agg$result >> 2] = $5;
 $9 = HEAP32[$2 + 4 >> 2] | 0;
 HEAP32[$__f >> 2] = $9;
 do if (($9 | 0) == ($3 | 0)) {
  $$lcssa = $5;
  $__ds$0$lcssa = 1;
 } else {
  $$pn = $9;
  $17 = $5;
  $__ds$08 = 1;
  while (1) {
   __THREW__ = 0;
   $11 = invoke_ii(67, 20) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $$lcssa18 = $17;
    break;
   }
   $14 = $11 + 8 | 0;
   $15 = $$pn + 8 | 0;
   HEAP32[$14 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
   HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
   HEAP32[$17 + 4 >> 2] = $11;
   HEAP32[$11 >> 2] = $17;
   $$pn = HEAP32[$$pn + 4 >> 2] | 0;
   HEAP32[$__f >> 2] = $$pn;
   $20 = $__ds$08 + 1 | 0;
   if (($$pn | 0) == ($3 | 0)) {
    $$lcssa20 = $11;
    $$lcssa21 = $20;
    label = 10;
    break;
   } else {
    $17 = $11;
    $__ds$08 = $20;
   }
  }
  if ((label | 0) == 10) {
   $$lcssa = $$lcssa20;
   $__ds$0$lcssa = $$lcssa21;
   break;
  }
  $22 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($22 | 0) | 0;
  $25 = $$lcssa18;
  do {
   $25$looptemp = $25;
   $25 = HEAP32[$25 >> 2] | 0;
   __ZdlPv($25$looptemp);
  } while (($25 | 0) != 0);
  __THREW__ = 0;
  invoke_v(4);
  $31 = __THREW__;
  __THREW__ = 0;
  if (!($31 & 1)) {}
  $27 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) {
   $39 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($39);
  } else ___resumeException($27 | 0);
 } while (0);
 $33 = HEAP32[$1 >> 2] | 0;
 HEAP32[$33 + 4 >> 2] = $5;
 HEAP32[$5 >> 2] = $33;
 HEAP32[$1 >> 2] = $$lcssa;
 HEAP32[$$lcssa + 4 >> 2] = $1;
 $36 = $this + 8 | 0;
 HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + $__ds$0$lcssa;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueIRKNS_4pairIKS7_S7_EEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEEOT_($agg$result, $this, $__p, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i = sp + 4 | 0;
 $0 = sp;
 $1 = __Znwj(40) | 0;
 $2 = $1 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $__v | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $11;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 $5 = $1 + 28 | 0;
 __THREW__ = 0;
 invoke_vii(40, $5 | 0, $__v + 12 | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  $10 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$i$index2Z2D = $10;
  $eh$lpad$body$i$indexZ2D = $9;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = HEAP32[$__p >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $14 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $$byval_copy, $__parent$i, $2) | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 if (!$15) {
  $17 = HEAP32[$__parent$i >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = $17;
  HEAP32[$14 >> 2] = $1;
  $21 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$21) $25 = $1; else {
   HEAP32[$this >> 2] = $21;
   $25 = HEAP32[$14 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $25);
  $26 = $this + 8 | 0;
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
  $__r$0$i = $1;
 } else $__r$0$i = $15;
 HEAP32[$agg$result >> 2] = $__r$0$i;
 if (($__r$0$i | 0) == ($1 | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZdlPv($1);
 STACKTOP = sp;
 return;
}

function __ZN9Allocator4makeI13LiteralStringJ13LocationRangePKcEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __Znwj(60) | 0;
 $3 = _strlen($args1 | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $0 | 0, $args1 | 0, $3 | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $38;
  __ZdlPv($2);
  ___resumeException($$01 | 0);
 }
 HEAP32[$2 >> 2] = 33968;
 $6 = $2 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $6 | 0, $args | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 do if ($7 & 1) {
  $40 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $40;
 } else {
  $9 = $2 + 16 | 0;
  $10 = $args + 12 | 0;
  HEAP32[$9 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP32[$2 + 32 >> 2] = 14;
  $12 = $2 + 36 | 0;
  HEAP32[$12 >> 2] = 0;
  $13 = $2 + 40 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$2 + 44 >> 2] = 0;
  HEAP32[$2 >> 2] = 33984;
  __THREW__ = 0;
  invoke_vii(40, $2 + 48 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   HEAP32[$2 >> 2] = 33968;
   $20 = HEAP32[$12 >> 2] | 0;
   $22 = $20;
   if ($20) {
    $23 = HEAP32[$13 >> 2] | 0;
    if (($23 | 0) != ($20 | 0)) HEAP32[$13 >> 2] = $23 + (~(($23 + -4 - $22 | 0) >>> 2) << 2);
    __ZdlPv($20);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $eh$lpad$body$index2Z2D = $19;
   $eh$lpad$body$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  HEAP32[$1 >> 2] = $2;
  $29 = $this + 16 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if ($30 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $1);
   STACKTOP = sp;
   return $2 | 0;
  }
  if (!$30) $36 = 0; else {
   HEAP32[$30 >> 2] = $2;
   $36 = HEAP32[$29 >> 2] | 0;
  }
  HEAP32[$29 >> 2] = $36 + 4;
  STACKTOP = sp;
  return $2 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $$0 = $eh$lpad$body$index2Z2D;
 $$01 = $eh$lpad$body$indexZ2D;
 __ZdlPv($2);
 ___resumeException($$01 | 0);
 return 0;
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange($o, $loc) {
 $o = $o | 0;
 $loc = $loc | 0;
 var $0 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $50 = 0, $53 = 0, $7 = 0;
 $0 = HEAP8[$loc >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$loc + 4 >> 2] | 0;
 if ($7) {
  if ($2) {
   $16 = $loc + 1 | 0;
   $17 = ($0 & 255) >>> 1;
  } else {
   $16 = HEAP32[$loc + 8 >> 2] | 0;
   $17 = HEAP32[$loc + 4 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $16, $17) | 0;
 }
 $18 = $loc + 12 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (!$19) return $o | 0;
 $21 = HEAP8[$loc >> 0] | 0;
 if (!($21 & 1)) $28 = ($21 & 255) >>> 1; else $28 = HEAP32[$loc + 4 >> 2] | 0;
 if (!$28) $32 = $19; else {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 40048, 1) | 0;
  $32 = HEAP32[$18 >> 2] | 0;
 }
 $30 = $loc + 20 | 0;
 if (($32 | 0) != (HEAP32[$30 >> 2] | 0)) {
  $44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 40072, 1) | 0;
  $47 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($44, HEAP32[$18 >> 2] | 0) | 0, 40048, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($47, HEAP32[$loc + 16 >> 2] | 0) | 0;
  $50 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($44, 40080, 3) | 0;
  $53 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($50, HEAP32[$30 >> 2] | 0) | 0, 40048, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($53, HEAP32[$loc + 24 >> 2] | 0) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($50, 40088, 1) | 0;
  return $o | 0;
 }
 $34 = $loc + 16 | 0;
 $36 = $loc + 24 | 0;
 $38 = (HEAP32[$34 >> 2] | 0) == (HEAP32[$36 >> 2] | 0);
 $40 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($o, $32) | 0, 40048, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($40, HEAP32[$34 >> 2] | 0) | 0;
 if ($38) return $o | 0;
 $42 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 40064, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($42, HEAP32[$36 >> 2] | 0) | 0;
 return $o | 0;
}

function __ZN5Token8toStringENS_4KindE($v) {
 $v = $v | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($v | 0) {
 case 22:
  {
   $$0 = 35024;
   break;
  }
 case 19:
  {
   $$0 = 37288;
   break;
  }
 case 11:
  {
   $$0 = 34936;
   break;
  }
 case 8:
  {
   $$0 = 34912;
   break;
  }
 case 2:
  {
   $$0 = 34864;
   break;
  }
 case 18:
  {
   $$0 = 35e3;
   break;
  }
 case 0:
  {
   $$0 = 34848;
   break;
  }
 case 27:
  {
   $$0 = 35072;
   break;
  }
 case 7:
  {
   $$0 = 34904;
   break;
  }
 case 15:
  {
   $$0 = 34984;
   break;
  }
 case 30:
  {
   $$0 = 48208;
   break;
  }
 case 20:
  {
   $$0 = 35008;
   break;
  }
 case 14:
  {
   $$0 = 34976;
   break;
  }
 case 21:
  {
   $$0 = 35016;
   break;
  }
 case 10:
  {
   $$0 = 34928;
   break;
  }
 case 29:
  {
   $$0 = 34752;
   break;
  }
 case 12:
  {
   $$0 = 34952;
   break;
  }
 case 6:
  {
   $$0 = 34896;
   break;
  }
 case 1:
  {
   $$0 = 34856;
   break;
  }
 case 13:
  {
   $$0 = 34960;
   break;
  }
 case 28:
  {
   $$0 = 34720;
   break;
  }
 case 26:
  {
   $$0 = 35056;
   break;
  }
 case 3:
  {
   $$0 = 34872;
   break;
  }
 case 25:
  {
   $$0 = 37256;
   break;
  }
 case 5:
  {
   $$0 = 34888;
   break;
  }
 case 17:
  {
   $$0 = 48240;
   break;
  }
 case 9:
  {
   $$0 = 34920;
   break;
  }
 case 31:
  {
   $$0 = 35080;
   break;
  }
 case 24:
  {
   $$0 = 35048;
   break;
  }
 case 16:
  {
   $$0 = 34992;
   break;
  }
 case 23:
  {
   $$0 = 35040;
   break;
  }
 case 4:
  {
   $$0 = 34880;
   break;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 35096, 36) | 0, $v) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 47968) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__v + 1 | 0;
 $10 = HEAP32[$__v + 8 >> 2] | 0;
 $12 = HEAP32[$__v + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($agg$result, $this, $loc, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $v = +$v;
 var $$0 = 0, $$01 = 0, $$0311 = 0, $$0510 = 0, $$1414 = 0, $$1613 = 0, $$2 = 0, $$27 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAPF64[tempDoublePtr >> 3] = $v;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $4 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
 if ($4 >>> 0 > 2146435072 | ($4 | 0) == 2146435072 & $2 >>> 0 > 0) {
  $10 = ___cxa_allocate_exception(24) | 0;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 39824, 12);
  $11 = __THREW__;
  __THREW__ = 0;
  if ($11 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $$0311 = tempRet0;
   $$0510 = $18;
  } else {
   __THREW__ = 0;
   invoke_viiii(16, $10 | 0, $this + 72 | 0, $loc | 0, $0 | 0);
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) $$01 = 1; else {
    __THREW__ = 0;
    invoke_viii(4, $10 | 0, 36640, 183);
    $16 = __THREW__;
    __THREW__ = 0;
    if ($16 & 1) $$01 = 0; else {}
   }
   $20 = ___cxa_find_matching_catch() | 0;
   $21 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   if ($$01) {
    $$0311 = $21;
    $$0510 = $20;
   } else {
    $$2 = $21;
    $$27 = $20;
    ___resumeException($$27 | 0);
   }
  }
  ___cxa_free_exception($10 | 0);
  $$2 = $$0311;
  $$27 = $$0510;
  ___resumeException($$27 | 0);
 }
 if (!(($2 | 0) == 0 & ($4 | 0) == 2146435072)) {
  HEAP32[$agg$result >> 2] = 2;
  HEAPF64[$agg$result + 8 >> 3] = $v;
  STACKTOP = sp;
  return;
 }
 $25 = ___cxa_allocate_exception(24) | 0;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 39840, 8);
 $26 = __THREW__;
 __THREW__ = 0;
 if ($26 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  $$1414 = tempRet0;
  $$1613 = $33;
 } else {
  __THREW__ = 0;
  invoke_viiii(16, $25 | 0, $this + 72 | 0, $loc | 0, $1 | 0);
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) $$0 = 1; else {
   __THREW__ = 0;
   invoke_viii(4, $25 | 0, 36640, 183);
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) $$0 = 0; else {}
  }
  $35 = ___cxa_find_matching_catch() | 0;
  $36 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  if ($$0) {
   $$1414 = $36;
   $$1613 = $35;
  } else {
   $$2 = $36;
   $$27 = $35;
   ___resumeException($$27 | 0);
  }
 }
 ___cxa_free_exception($25 | 0);
 $$2 = $$1414;
 $$27 = $$1613;
 ___resumeException($$27 | 0);
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $17 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $34 = 0, $35 = 0, $37 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $63 = 0, $7 = 0, $71 = 0, $74 = 0, $8 = 0, $9 = 0;
 if (($__c | 0) == -1) {
  $$0 = 0;
  return $$0 | 0;
 }
 $1 = $this + 12 | 0;
 $3 = $this + 8 | 0;
 $7 = (HEAP32[$1 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0;
 $8 = $this + 24 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $this + 28 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 do if (($9 | 0) == ($11 | 0)) {
  $13 = $this + 48 | 0;
  if (!(HEAP32[$13 >> 2] & 16)) {
   $$0 = -1;
   return $$0 | 0;
  }
  $17 = $this + 20 | 0;
  $20 = HEAP32[$17 >> 2] | 0;
  $21 = $9 - $20 | 0;
  $22 = $this + 44 | 0;
  $25 = (HEAP32[$22 >> 2] | 0) - $20 | 0;
  $26 = $this + 32 | 0;
  __THREW__ = 0;
  invoke_vii(44, $26 | 0, 0);
  $27 = __THREW__;
  __THREW__ = 0;
  if (!($27 & 1)) {
   if (!(HEAP8[$26 >> 0] & 1)) $34 = 10; else $34 = (HEAP32[$26 >> 2] & -2) + -1 | 0;
   __THREW__ = 0;
   invoke_viii(5, $26 | 0, $34 | 0, 0);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $37 = HEAP8[$26 >> 0] | 0;
    if (!($37 & 1)) {
     $48 = $26 + 1 | 0;
     $49 = ($37 & 255) >>> 1;
    } else {
     $48 = HEAP32[$this + 40 >> 2] | 0;
     $49 = HEAP32[$this + 36 >> 2] | 0;
    }
    $47 = $48 + $49 | 0;
    HEAP32[$17 >> 2] = $48;
    HEAP32[$10 >> 2] = $47;
    $50 = $48 + $21 | 0;
    HEAP32[$8 >> 2] = $50;
    $51 = $48 + $25 | 0;
    HEAP32[$22 >> 2] = $51;
    $$pre$phiZ2D = $13;
    $55 = $50;
    $58 = $51;
    $74 = $47;
    break;
   }
  }
  $52 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($52 | 0) | 0;
  ___cxa_end_catch();
  $$0 = -1;
  return $$0 | 0;
 } else {
  $$pre$phiZ2D = $this + 48 | 0;
  $55 = $9;
  $58 = HEAP32[$this + 44 >> 2] | 0;
  $74 = $11;
 } while (0);
 $54 = $55 + 1 | 0;
 $59 = $54 >>> 0 < $58 >>> 0 ? $58 : $54;
 HEAP32[$this + 44 >> 2] = $59;
 if (HEAP32[$$pre$phiZ2D >> 2] & 8) {
  $63 = $this + 32 | 0;
  if (!(HEAP8[$63 >> 0] & 1)) $71 = $63 + 1 | 0; else $71 = HEAP32[$this + 40 >> 2] | 0;
  HEAP32[$3 >> 2] = $71;
  HEAP32[$1 >> 2] = $71 + $7;
  HEAP32[$this + 16 >> 2] = $59;
 }
 if (($55 | 0) == ($74 | 0)) {
  $$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, $__c & 255) | 0;
  return $$0 | 0;
 } else {
  HEAP32[$8 >> 2] = $54;
  HEAP8[$55 >> 0] = $__c;
  $$0 = $__c & 255;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__v + 1 | 0;
 $10 = HEAP32[$__v + 8 >> 2] | 0;
 $12 = HEAP32[$__v + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $$ = 0, $$$i1 = 0, $$0$ph$lcssa$i = 0, $$0$ph7$i = 0, $$0$ph7$i$lcssa16 = 0, $$01$ph6$i = 0, $$014$i = 0, $$014$i$lcssa = 0, $$014$i$lcssa$lcssa = 0, $$11$i = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $38 = 0, $39 = 0, $41 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $7 = 0, $8 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $7 = ($3 & 255) >>> 1;
  $8 = $__v + 1 | 0;
  $10 = HEAP32[$__v + 8 >> 2] | 0;
  $12 = HEAP32[$__v + 4 >> 2] | 0;
  $$$i1 = $5 ? $7 : $12;
  $$11$i = $5 ? $8 : $10;
  $$0$ph7$i = $0;
  $$01$ph6$i = $1;
  L3 : while (1) {
   $$014$i = $$01$ph6$i;
   while (1) {
    $13 = $$014$i + 16 | 0;
    $14 = HEAP8[$13 >> 0] | 0;
    if (!($14 & 1)) {
     $25 = ($14 & 255) >>> 1;
     $27 = $13 + 1 | 0;
    } else {
     $25 = HEAP32[$$014$i + 20 >> 2] | 0;
     $27 = HEAP32[$$014$i + 24 >> 2] | 0;
    }
    $28 = _memcmp($27, $$11$i, $$$i1 >>> 0 < $25 >>> 0 ? $$$i1 : $25) | 0;
    if (!$28) {
     if ($25 >>> 0 >= $$$i1 >>> 0) {
      $$014$i$lcssa = $$014$i;
      break;
     }
    } else if (($28 | 0) >= 0) {
     $$014$i$lcssa = $$014$i;
     break;
    }
    $$014$i = HEAP32[$$014$i + 4 >> 2] | 0;
    if (!$$014$i) {
     $$0$ph7$i$lcssa16 = $$0$ph7$i;
     label = 12;
     break L3;
    }
   }
   $$01$ph6$i = HEAP32[$$014$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i) {
    $$014$i$lcssa$lcssa = $$014$i$lcssa;
    label = 13;
    break;
   } else $$0$ph7$i = $$014$i$lcssa;
  }
  if ((label | 0) == 12) $$0$ph$lcssa$i = $$0$ph7$i$lcssa16; else if ((label | 0) == 13) $$0$ph$lcssa$i = $$014$i$lcssa$lcssa;
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $38 = $$0$ph$lcssa$i + 16 | 0;
   $$ = $5 ? $7 : $12;
   $39 = HEAP8[$38 >> 0] | 0;
   $41 = ($39 & 1) == 0;
   if ($41) $49 = ($39 & 255) >>> 1; else $49 = HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   if ($41) $52 = $38 + 1 | 0; else $52 = HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0;
   $53 = _memcmp($5 ? $8 : $10, $52, $49 >>> 0 < $$ >>> 0 ? $49 : $$) | 0;
   if (!$53) {
    if ($$ >>> 0 < $49 >>> 0) break;
   } else if (($53 | 0) < 0) break;
   HEAP32[$agg$result >> 2] = $$0$ph$lcssa$i;
   return;
  }
 } while (0);
 HEAP32[$agg$result >> 2] = $0;
 return;
}

function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $$03$i$i = 0, $$03$i$i4 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $21 = 0, $22 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $7 = 0, $__p$0$lcssa$i$i = 0, $__p$0$lcssa$i$i9 = 0, $__p$0$ph$i$i = 0, $__p$0$ph$i$i2 = 0, $__p$02$i$i = 0, $__p$02$i$i5 = 0;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1 & 16) {
  $4 = $this + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  $7 = HEAP32[$this + 24 >> 2] | 0;
  if ($5 >>> 0 < $7 >>> 0) {
   HEAP32[$4 >> 2] = $7;
   $12 = $7;
  } else $12 = $5;
  $10 = HEAP32[$this + 20 >> 2] | 0;
  $14 = $12 - $10 | 0;
  if ($14 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
  if ($14 >>> 0 < 11) {
   HEAP8[$agg$result >> 0] = $14 << 1;
   $__p$0$ph$i$i2 = $agg$result + 1 | 0;
  } else {
   $21 = $14 + 16 & -16;
   $22 = __Znwj($21) | 0;
   HEAP32[$agg$result + 8 >> 2] = $22;
   HEAP32[$agg$result >> 2] = $21 | 1;
   HEAP32[$agg$result + 4 >> 2] = $14;
   $__p$0$ph$i$i2 = $22;
  }
  if (($10 | 0) == ($12 | 0)) $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2; else {
   $$03$i$i4 = $10;
   $__p$02$i$i5 = $__p$0$ph$i$i2;
   while (1) {
    HEAP8[$__p$02$i$i5 >> 0] = HEAP8[$$03$i$i4 >> 0] | 0;
    $$03$i$i4 = $$03$i$i4 + 1 | 0;
    if (($$03$i$i4 | 0) == ($12 | 0)) break; else $__p$02$i$i5 = $__p$02$i$i5 + 1 | 0;
   }
   $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2 + $14 | 0;
  }
  HEAP8[$__p$0$lcssa$i$i9 >> 0] = 0;
  return;
 }
 if (!($1 & 8)) {
  HEAP32[$agg$result + 0 >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  return;
 }
 $34 = HEAP32[$this + 8 >> 2] | 0;
 $36 = HEAP32[$this + 16 >> 2] | 0;
 $39 = $36 - $34 | 0;
 if ($39 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
 if ($39 >>> 0 < 11) {
  HEAP8[$agg$result >> 0] = $39 << 1;
  $__p$0$ph$i$i = $agg$result + 1 | 0;
 } else {
  $46 = $39 + 16 & -16;
  $47 = __Znwj($46) | 0;
  HEAP32[$agg$result + 8 >> 2] = $47;
  HEAP32[$agg$result >> 2] = $46 | 1;
  HEAP32[$agg$result + 4 >> 2] = $39;
  $__p$0$ph$i$i = $47;
 }
 if (($34 | 0) == ($36 | 0)) $__p$0$lcssa$i$i = $__p$0$ph$i$i; else {
  $$03$i$i = $34;
  $__p$02$i$i = $__p$0$ph$i$i;
  while (1) {
   HEAP8[$__p$02$i$i >> 0] = HEAP8[$$03$i$i >> 0] | 0;
   $$03$i$i = $$03$i$i + 1 | 0;
   if (($$03$i$i | 0) == ($36 | 0)) break; else $__p$02$i$i = $__p$02$i$i + 1 | 0;
  }
  $__p$0$lcssa$i$i = $__p$0$ph$i$i + $39 | 0;
 }
 HEAP8[$__p$0$lcssa$i$i >> 0] = 0;
 return;
}

function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $17 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $4 = 0, $47 = 0, $50 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP32[$__atoms + 96 >> 2] | 0) == ($__ct | 0);
  if (!$4) if ((HEAP32[$__atoms + 100 >> 2] | 0) != ($__ct | 0)) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if (!($10 & 1)) $17 = ($10 & 255) >>> 1; else $17 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (($__ct | 0) == ($__thousands_sep | 0) & ($17 | 0) != 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 104 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
   if ((HEAP32[$$0$i >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 4 | 0;
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  $35 = $34 >> 2;
  if (($34 | 0) > 92) $$0 = -1; else {
   if (($__base | 0) == 16) {
    if (($34 | 0) >= 88) {
     if ($1) {
      $$0 = -1;
      break;
     }
     if (($0 - $__a | 0) >= 3) {
      $$0 = -1;
      break;
     }
     if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
      $$0 = -1;
      break;
     }
     HEAP32[$__dc >> 2] = 0;
     $47 = HEAP8[46480 + $35 >> 0] | 0;
     HEAP32[$__a_end >> 2] = $0 + 1;
     HEAP8[$0 >> 0] = $47;
     $$0 = 0;
     break;
    }
   } else if (($__base | 0) == 10 | ($__base | 0) == 8) if (($35 | 0) >= ($__base | 0)) {
    $$0 = -1;
    break;
   }
   $50 = HEAP8[46480 + $35 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $50;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $17 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $4 = 0, $46 = 0, $49 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP8[$__atoms + 24 >> 0] | 0) == $__ct << 24 >> 24;
  if (!$4) if ((HEAP8[$__atoms + 25 >> 0] | 0) != $__ct << 24 >> 24) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if (!($10 & 1)) $17 = ($10 & 255) >>> 1; else $17 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (($17 | 0) != 0 ? $__ct << 24 >> 24 == $__thousands_sep << 24 >> 24 : 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 26 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
   if ((HEAP8[$$0$i >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 1 | 0;
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  if (($34 | 0) > 23) $$0 = -1; else {
   if (($__base | 0) == 10 | ($__base | 0) == 8) {
    if (($34 | 0) >= ($__base | 0)) {
     $$0 = -1;
     break;
    }
   } else if (($__base | 0) == 16) if (($34 | 0) >= 22) {
    if ($1) {
     $$0 = -1;
     break;
    }
    if (($0 - $__a | 0) >= 3) {
     $$0 = -1;
     break;
    }
    if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
     $$0 = -1;
     break;
    }
    HEAP32[$__dc >> 2] = 0;
    $46 = HEAP8[46480 + $34 >> 0] | 0;
    HEAP32[$__a_end >> 2] = $0 + 1;
    HEAP8[$0 >> 0] = $46;
    $$0 = 0;
    break;
   }
   $49 = HEAP8[46480 + $34 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $49;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa22 = 0, $$lcssa24 = 0, $$st = 0, $0 = 0, $11 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $32 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 $$st = ($st | 0) == 0 ? 40688 : $st;
 $2 = HEAP32[$$st >> 2] | 0;
 L1 : do if (!$src) {
  if (!$2) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $11 = $0;
  } else $11 = $wc;
  if (!$n) {
   $$0 = -2;
   STACKTOP = sp;
   return $$0 | 0;
  }
  do if (!$2) {
   $8 = HEAP8[$src >> 0] | 0;
   $9 = $8 & 255;
   if ($8 << 24 >> 24 > -1) {
    HEAP32[$11 >> 2] = $9;
    $$0 = $8 << 24 >> 24 != 0 & 1;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    $14 = $9 + -194 | 0;
    if ($14 >>> 0 > 50) break L1;
    $18 = HEAP32[40472 + ($14 << 2) >> 2] | 0;
    $19 = $n + -1 | 0;
    if (!$19) {
     $c$2 = $18;
     break;
    } else {
     $$023 = $19;
     $c$04 = $18;
     $s$05 = $src + 1 | 0;
     label = 11;
     break;
    }
   }
  } else {
   $$023 = $n;
   $c$04 = $2;
   $s$05 = $src;
   label = 11;
  } while (0);
  do if ((label | 0) == 11) {
   $21 = HEAP8[$s$05 >> 0] | 0;
   $23 = ($21 & 255) >>> 3;
   if (($23 + -16 | $23 + ($c$04 >> 26)) >>> 0 > 7) break L1;
   $$1 = $$023;
   $32 = $21;
   $c$1 = $c$04;
   $s$1 = $s$05;
   while (1) {
    $s$1 = $s$1 + 1 | 0;
    $c$1 = ($32 & 255) + -128 | $c$1 << 6;
    $$1 = $$1 + -1 | 0;
    if (($c$1 | 0) >= 0) {
     $$lcssa = $c$1;
     $$lcssa24 = $$1;
     label = 14;
     break;
    }
    if (!$$1) {
     $$lcssa22 = $c$1;
     label = 17;
     break;
    }
    $32 = HEAP8[$s$1 >> 0] | 0;
    if (($32 & -64) << 24 >> 24 != -128) {
     label = 19;
     break;
    }
   }
   if ((label | 0) == 14) {
    HEAP32[$$st >> 2] = 0;
    HEAP32[$11 >> 2] = $$lcssa;
    $$0 = $n - $$lcssa24 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 17) {
    $c$2 = $$lcssa22;
    break;
   } else if ((label | 0) == 19) break L1;
  } while (0);
  HEAP32[$$st >> 2] = $c$2;
  $$0 = -2;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 HEAP32[$$st >> 2] = 0;
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_18type_strENS_5Value4TypeE($agg$result, $t) {
 $agg$result = $agg$result | 0;
 $t = $t | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 switch ($t | 0) {
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37304, 6);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37272, 6);
   STACKTOP = sp;
   return;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37312, 6);
   STACKTOP = sp;
   return;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37288, 8);
   STACKTOP = sp;
   return;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37280, 5);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37264, 7);
   STACKTOP = sp;
   return;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37256, 4);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 37320, 30) | 0, $t) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 47968) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 }
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi8Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $20 = 0, $21 = 0, $25 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $8 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($0 & 1) {
  $31 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $31;
  $$pre$phi8Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 12;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $6 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
   $8 = HEAP32[$this + ($6 + 24) >> 2] | 0;
   if (!$8) {
    $25 = $6;
    label = 9;
   } else {
    $10 = $8 + 24 | 0;
    $11 = HEAP32[$10 >> 2] | 0;
    if (($11 | 0) != (HEAP32[$8 + 28 >> 2] | 0)) {
     HEAP32[$10 >> 2] = $11 + 1;
     HEAP8[$11 >> 0] = $__c;
     break;
    }
    __THREW__ = 0;
    $20 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] | 0, $8 | 0, $__c & 255 | 0) | 0;
    $21 = __THREW__;
    __THREW__ = 0;
    if (!($21 & 1)) {
     if (($20 | 0) != -1) break;
     $25 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     label = 9;
    }
   }
   if ((label | 0) == 9) {
    __THREW__ = 0;
    invoke_vii(48, $this + $25 | 0, HEAP32[$this + ($25 + 16) >> 2] | 1 | 0);
    $29 = __THREW__;
    __THREW__ = 0;
    if (!($29 & 1)) break;
   }
   $33 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $33;
   $$pre$phi8Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 12;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 12) {
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi8Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZN9Allocator4makeI8FunctionJ13LocationRangeNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEEP3ASTEEEPT_DpT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0, $35 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 HEAP32[$1 >> 2] = 33968;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $35 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $35;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 6;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 36184;
 __THREW__ = 0;
 invoke_vii(56, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  $15 = tempRet0;
  HEAP32[$1 >> 2] = 33968;
  $16 = HEAP32[$8 >> 2] | 0;
  $18 = $16;
  if ($16) {
   $19 = HEAP32[$9 >> 2] | 0;
   if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$index2Z2D = $15;
  $eh$lpad$body$indexZ2D = $14;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$1 + 60 >> 2] = $args2;
 HEAP32[$0 >> 2] = $1;
 $26 = $this + 16 | 0;
 $27 = HEAP32[$26 >> 2] | 0;
 if ($27 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$27) $33 = 0; else {
  HEAP32[$27 >> 2] = $1;
  $33 = HEAP32[$26 >> 2] | 0;
 }
 HEAP32[$26 >> 2] = $33 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN9Allocator4makeI5ApplyJ13LocationRangeP3ASTNSt3__16vectorIS4_NS5_9allocatorIS4_EEEEEEEPT_DpT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 HEAP32[$1 >> 2] = 33968;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 $7 = $1 + 32 | 0;
 $8 = $1 + 40 | 0;
 HEAP32[$7 + 0 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$1 >> 2] = 35800;
 HEAP32[$1 + 48 >> 2] = $args1;
 __THREW__ = 0;
 invoke_vii(58, $1 + 52 | 0, $args2 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $14 = tempRet0;
  HEAP32[$1 >> 2] = 33968;
  $16 = HEAP32[$1 + 36 >> 2] | 0;
  $18 = $16;
  if ($16) {
   $19 = HEAP32[$8 >> 2] | 0;
   if (($19 | 0) != ($16 | 0)) HEAP32[$8 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$index2Z2D = $14;
  $eh$lpad$body$indexZ2D = $13;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $25 = $this + 16 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 if ($26 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$26) $32 = 0; else {
  HEAP32[$26 >> 2] = $1;
  $32 = HEAP32[$25 >> 2] | 0;
 }
 HEAP32[$25 >> 2] = $32 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $33 = 0, $44 = 0, $6 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $44 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 7]($44, $info, $current_ptr, $path_below, $use_strcmp);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $23 = $info + 52 | 0;
    HEAP8[$23 >> 0] = 0;
    $24 = $info + 53 | 0;
    HEAP8[$24 >> 0] = 0;
    $26 = HEAP32[$this + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 31]($26, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
    if (!(HEAP8[$24 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 0;
     label = 13;
    } else if (!(HEAP8[$23 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 1;
     label = 13;
    }
    do if ((label | 0) == 13) {
     HEAP32[$14 >> 2] = $current_ptr;
     $33 = $info + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
      HEAP8[$info + 54 >> 0] = 1;
      if ($is_dst_type_derived_from_static_type$0$off01) break;
     } else label = 16; else label = 16;
     if ((label | 0) == 16) if ($is_dst_type_derived_from_static_type$0$off01) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg$result = $agg$result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, $37 = 0, $5 = 0, $6 = 0, $7 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 L1 : do if (!$0) HEAP32[$agg$result >> 2] = 0; else {
  $2 = $__oe;
  $3 = $__ob;
  $5 = $2 - $3 >> 2;
  $6 = $__iob + 12 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $__ns$0 = ($7 | 0) > ($5 | 0) ? $7 - $5 | 0 : 0;
  $10 = $__op;
  $11 = $10 - $3 | 0;
  $12 = $11 >> 2;
  if (($11 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $12) | 0) != ($12 | 0)) {
   HEAP32[$__s >> 2] = 0;
   HEAP32[$agg$result >> 2] = 0;
   break;
  }
  do if (($__ns$0 | 0) > 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp, $__ns$0, $__fl);
   if (!(HEAP8[$__sp >> 0] & 1)) $29 = $__sp + 4 | 0; else $29 = HEAP32[$__sp + 8 >> 2] | 0;
   __THREW__ = 0;
   $30 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $29 | 0, $__ns$0 | 0) | 0;
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) {
    $34 = ___cxa_find_matching_catch() | 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    ___resumeException($34 | 0);
   }
   if (($30 | 0) == ($__ns$0 | 0)) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    break;
   } else {
    HEAP32[$__s >> 2] = 0;
    HEAP32[$agg$result >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    break L1;
   }
  } while (0);
  $36 = $2 - $10 | 0;
  $37 = $36 >> 2;
  if (($36 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $37) | 0) != ($37 | 0)) {
   HEAP32[$__s >> 2] = 0;
   HEAP32[$agg$result >> 2] = 0;
   break;
  }
  HEAP32[$6 >> 2] = 0;
  HEAP32[$agg$result >> 2] = $0;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN9Allocator4makeI13LiteralStringJ13LocationRangeNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 33968;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 14;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 33984;
 __THREW__ = 0;
 invoke_vii(40, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  $15 = tempRet0;
  HEAP32[$1 >> 2] = 33968;
  $16 = HEAP32[$8 >> 2] | 0;
  $18 = $16;
  if ($16) {
   $19 = HEAP32[$9 >> 2] | 0;
   if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$index2Z2D = $15;
  $eh$lpad$body$indexZ2D = $14;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $25 = $this + 16 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 if ($26 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$26) $32 = 0; else {
  HEAP32[$26 >> 2] = $1;
  $32 = HEAP32[$25 >> 2] | 0;
 }
 HEAP32[$25 >> 2] = $32 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_($r, $s) {
 $r = $r | 0;
 $s = $s | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$byval_copy = 0, $$cast$i$i$i$lcssa = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $19 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__parent$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i$i = sp + 4 | 0;
 $0 = sp;
 $1 = HEAP32[$s >> 2] | 0;
 $2 = $s + 4 | 0;
 $3 = $r + 4 | 0;
 if (($1 | 0) == ($2 | 0)) {
  STACKTOP = sp;
  return;
 }
 $5 = $r + 4 | 0;
 $6 = $r + 8 | 0;
 $26 = $1;
 $8 = $1;
 while (1) {
  $7 = $8 + 16 | 0;
  HEAP32[$0 >> 2] = $3;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $9 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($r, $$byval_copy, $__parent$i$i, $7) | 0;
  if (!(HEAP32[$9 >> 2] | 0)) {
   $12 = __Znwj(20) | 0;
   HEAP32[$12 + 16 >> 2] = HEAP32[$7 >> 2];
   $15 = HEAP32[$__parent$i$i >> 2] | 0;
   HEAP32[$12 >> 2] = 0;
   HEAP32[$12 + 4 >> 2] = 0;
   HEAP32[$12 + 8 >> 2] = $15;
   HEAP32[$9 >> 2] = $12;
   $19 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
   if (!$19) $22 = $12; else {
    HEAP32[$r >> 2] = $19;
    $22 = HEAP32[$9 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$5 >> 2] | 0, $22);
   HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
  }
  $27 = HEAP32[$26 + 4 >> 2] | 0;
  if (!$27) {
   $$0$i$i$i = $26;
   while (1) {
    $32 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$32 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$cast$i$i$i$lcssa = $32;
     break;
    } else $$0$i$i$i = $32;
   }
   $$01$i$i$i = $$cast$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i = $27;
   while (1) {
    $29 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$29) {
     $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $29;
   }
   $$01$i$i$i = $$0$i$i$i$i$lcssa;
  }
  if (($$01$i$i$i | 0) == ($2 | 0)) break; else {
   $26 = $$01$i$i$i;
   $8 = $$01$i$i$i;
  }
 }
 STACKTOP = sp;
 return;
}

function __ZN9Allocator4makeI5ArrayJ13LocationRangeNSt3__16vectorIP3ASTNS3_9allocatorIS6_EEEEEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 33968;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 1;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 36120;
 __THREW__ = 0;
 invoke_vii(58, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  $15 = tempRet0;
  HEAP32[$1 >> 2] = 33968;
  $16 = HEAP32[$8 >> 2] | 0;
  $18 = $16;
  if ($16) {
   $19 = HEAP32[$9 >> 2] | 0;
   if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$index2Z2D = $15;
  $eh$lpad$body$indexZ2D = $14;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $25 = $this + 16 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 if ($26 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$26) $32 = 0; else {
  HEAP32[$26 >> 2] = $1;
  $32 = HEAP32[$25 >> 2] | 0;
 }
 HEAP32[$25 >> 2] = $32 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg$result = $agg$result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $0 = 0, $10 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 if (!$0) {
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = $2 - $3 | 0;
 $5 = $__iob + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $__ns$0 = ($6 | 0) > ($4 | 0) ? $6 - $4 | 0 : 0;
 $9 = $__op;
 $10 = $9 - $3 | 0;
 if (($10 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $10) | 0) != ($10 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 do if (($__ns$0 | 0) > 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp, $__ns$0, $__fl);
  if (!(HEAP8[$__sp >> 0] & 1)) $27 = $__sp + 1 | 0; else $27 = HEAP32[$__sp + 8 >> 2] | 0;
  __THREW__ = 0;
  $28 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $27 | 0, $__ns$0 | 0) | 0;
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) {
   $32 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   ___resumeException($32 | 0);
  }
  if (($28 | 0) == ($__ns$0 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   break;
  }
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
  STACKTOP = sp;
  return;
 } while (0);
 $34 = $2 - $9 | 0;
 if (($34 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $34) | 0) != ($34 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 HEAP32[$5 >> 2] = 0;
 HEAP32[$agg$result >> 2] = $0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $1 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $28 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $47 = 0, $8 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 10;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $14 = ($8 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $14 >>> 0 > $__res_arg >>> 0 ? $14 : $__res_arg;
 if ($16 >>> 0 < 11) $20 = 10; else $20 = ($16 + 16 & -16) + -1 | 0;
 L14 : do if (($20 | 0) != ($22 | 0)) {
  do if (($20 | 0) == 10) {
   $__new_data$1 = $this + 1 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $28 = $20 + 1 | 0;
   if ($20 >>> 0 > $22 >>> 0) $__new_data$0 = __Znwj($28) | 0; else {
    __THREW__ = 0;
    $30 = invoke_ii(67, $28 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if ($31 & 1) {
     $33 = ___cxa_find_matching_catch(0) | 0;
     ___cxa_begin_catch($33 | 0) | 0;
     ___cxa_end_catch();
     break L14;
    } else $__new_data$0 = $30;
   }
   if (!($8 & 1)) {
    $__new_data$1 = $__new_data$0;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 1 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$1 = $__new_data$0;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $47 = ($8 & 255) >>> 1; else $47 = HEAP32[$this + 4 >> 2] | 0;
  _memcpy($__new_data$1 | 0, $__p$0 | 0, $47 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $20 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $14;
   HEAP32[$this + 8 >> 2] = $__new_data$1;
   break;
  } else {
   HEAP8[$this >> 0] = $14 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $18 = 0, $19 = 0, $20 = 0, $32 = 0, $33 = 0, $34 = 0, $44 = 0, label = 0;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this + 1 >> 0] = 0;
  HEAP8[$this >> 0] = 0;
 } else {
  HEAP8[HEAP32[$this + 8 >> 2] >> 0] = 0;
  HEAP32[$this + 4 >> 2] = 0;
 }
 $$pre$i$i$i = HEAP32[$__first >> 2] | 0;
 L5 : while (1) {
  if (!$$pre$i$i$i) $18 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0) == -1) {
   HEAP32[$__first >> 2] = 0;
   $18 = 0;
  } else $18 = $$pre$i$i$i; else $18 = $$pre$i$i$i;
  $19 = ($18 | 0) == 0;
  $20 = HEAP32[$__last >> 2] | 0;
  do if (!$20) label = 14; else {
   if ((HEAP32[$20 + 12 >> 2] | 0) != (HEAP32[$20 + 16 >> 2] | 0)) if ($19) break; else {
    label = 23;
    break L5;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0) == -1) {
    HEAP32[$__last >> 2] = 0;
    label = 14;
    break;
   } else if ($19) break; else {
    label = 23;
    break L5;
   }
  } while (0);
  if ((label | 0) == 14) {
   label = 0;
   if ($19) {
    label = 23;
    break;
   }
  }
  $32 = $18 + 12 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  $34 = $18 + 16 | 0;
  if (($33 | 0) == (HEAP32[$34 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 127]($18) | 0; else $$0$i$i = HEAPU8[$33 >> 0] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $$0$i$i & 255);
  $44 = HEAP32[$32 >> 2] | 0;
  if (($44 | 0) == (HEAP32[$34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 40 >> 2] & 127]($18) | 0; else HEAP32[$32 >> 2] = $44 + 1;
  $$pre$i$i$i = $18;
 }
 if ((label | 0) == 23) return $this | 0;
 return 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[46760] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[46761] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[46762] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[46763] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[46764] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[46765] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46664, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[46760] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[46761] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[46762] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[46763] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[46764] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[46765] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46664, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $$sink = 0, $1 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $29 = 0, $31 = 0, $32 = 0, $34 = 0, $4 = 0, $48 = 0, $8 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 1;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $14 = ($8 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $14 >>> 0 > $__res_arg >>> 0 ? $14 : $__res_arg;
 if ($16 >>> 0 < 2) $20 = 1; else $20 = ($16 + 4 & -4) + -1 | 0;
 L14 : do if (($20 | 0) != ($22 | 0)) {
  do if (($20 | 0) == 1) {
   $__new_data$1 = $this + 4 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $29 = ($20 << 2) + 4 | 0;
   if ($20 >>> 0 > $22 >>> 0) $$sink = __Znwj($29) | 0; else {
    __THREW__ = 0;
    $31 = invoke_ii(67, $29 | 0) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     $34 = ___cxa_find_matching_catch(0) | 0;
     ___cxa_begin_catch($34 | 0) | 0;
     ___cxa_end_catch();
     break L14;
    } else $$sink = $31;
   }
   if (!($8 & 1)) {
    $__new_data$1 = $$sink;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 4 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$1 = $$sink;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $48 = ($8 & 255) >>> 1; else $48 = HEAP32[$this + 4 >> 2] | 0;
  _wmemcpy($__new_data$1, $__p$0, $48 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $20 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $14;
   HEAP32[$this + 8 >> 2] = $__new_data$1;
   break;
  } else {
   HEAP8[$this >> 0] = $14 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[46760] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[46761] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[46762] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[46763] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[46764] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[46765] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46664, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[46760] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[46761] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[46762] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[46763] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[46764] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[46765] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46664, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $20 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $28 = $__r$0 + 40 | 0;
  STACKTOP = sp;
  return $28 | 0;
 }
 $3 = __Znwj(44) | 0;
 $4 = $3 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $4 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $13;
  __ZdlPv($3);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 __THREW__ = 0;
 invoke_vii(40, $3 + 28 | 0, $__k + 12 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  $12 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $eh$lpad$body$i$index2Z2D = $12;
  $eh$lpad$body$i$indexZ2D = $11;
  __ZdlPv($3);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 HEAP32[$3 + 40 >> 2] = 0;
 $16 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $16;
 HEAP32[$0 >> 2] = $3;
 $20 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$20) $24 = $3; else {
  HEAP32[$this >> 2] = $20;
  $24 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $24);
 $25 = $this + 8 | 0;
 HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
 $__r$0 = $3;
 $28 = $__r$0 + 40 | 0;
 STACKTOP = sp;
 return $28 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 180 | 0;
 $__nar = sp + 160 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[46768] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[46769] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[46770] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[46771] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[46772] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[46773] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $6 = invoke_iii(22, $0 | 0, 47960) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 31]($6, $__nar, $4, $__o) | 0;
 $13 = $__o + ($3 << 2) | 0;
 if (($5 | 0) == ($4 | 0)) $__op$0 = $13; else $__op$0 = $__o + ($5 - $__nar << 2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 72 | 0;
 $__nar = sp + 52 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[46768] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[46769] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[46770] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[46771] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[46772] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[46773] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $6 = invoke_iii(22, $0 | 0, 47968) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 31]($6, $__nar, $4, $__o) | 0;
 $13 = $__o + $3 | 0;
 if (($5 | 0) == ($4 | 0)) $__op$0 = $13; else $__op$0 = $__o + ($5 - $__nar) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
 STACKTOP = sp;
 return;
}

function ___cxx_global_array_dtor69($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54540 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54528 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54516 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54504 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54492 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54480 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54468 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54456 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54444 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54432 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54420 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54408 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54396 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54384 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54372 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54360 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54348 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54336 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54324 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54312 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54300 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54288 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54276 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(54264);
 return;
}

function ___cxx_global_array_dtor45($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53700 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53688 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53676 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53664 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53652 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53640 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53628 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53616 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53604 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53592 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53580 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53568 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53556 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53544 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53532 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53520 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53508 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53496 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53484 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53472 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53460 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53448 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53436 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53424);
 return;
}

function ___cxx_global_array_dtor42($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53388 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53376 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53364 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53352 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53340 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53328 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53316 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53304 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53292 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53280 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53268 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53256 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53244 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53232 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53220 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53208 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53196 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53184 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53172 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53160 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53148 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53136 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53124 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(53112);
 return;
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token($o, $v) {
 $o = $o | 0;
 $v = $v | 0;
 var $0 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $7 = 0, $8 = 0;
 $0 = $v + 4 | 0;
 $2 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($0, 46680) | 0) == 0;
 $3 = HEAP32[$v >> 2] | 0;
 if ($2) {
  $4 = __ZN5Token8toStringENS_4KindE($3) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $4, _strlen($4 | 0) | 0) | 0;
  return;
 }
 if (($3 | 0) == 13) {
  $7 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 37544, 1) | 0;
  $8 = HEAP8[$0 >> 0] | 0;
  if (!($8 & 1)) {
   $18 = $0 + 1 | 0;
   $19 = ($8 & 255) >>> 1;
  } else {
   $18 = HEAP32[$v + 12 >> 2] | 0;
   $19 = HEAP32[$v + 8 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($7, $18, $19) | 0, 37544, 1) | 0;
  return;
 } else {
  $21 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 40072, 1) | 0;
  $23 = __ZN5Token8toStringENS_4KindE(HEAP32[$v >> 2] | 0) | 0;
  $26 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($21, $23, _strlen($23 | 0) | 0) | 0, 34832, 3) | 0;
  $27 = HEAP8[$0 >> 0] | 0;
  if (!($27 & 1)) {
   $37 = $0 + 1 | 0;
   $38 = ($27 & 255) >>> 1;
  } else {
   $37 = HEAP32[$v + 12 >> 2] | 0;
   $38 = HEAP32[$v + 8 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($26, $37, $38) | 0, 34840, 2) | 0;
  return;
 }
}

function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53060 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53048 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53036 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53024 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53012 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(53e3 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52988 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52976 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52964 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52952 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52940 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52928 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52916 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52904 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52892 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52880 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52868 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52856 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52844 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52832 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52820 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52808 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52796 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(52784);
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $23 = 0, $25 = 0, $26 = 0, $30 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 40264;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 $5 = $this + 52 | 0;
 $6 = $this + 68 | 0;
 $7 = $this + 98 | 0;
 $8 = $this + 4 | 0;
 dest = $5 + 0 | 0;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$5 + 44 >> 1] = 0;
 HEAP8[$5 + 46 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $8);
 __THREW__ = 0;
 $9 = invoke_iii(35, $0 | 0, 48032) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $12 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($12);
 }
 __ZNSt3__16localeD2Ev($0);
 do if ($9) {
  __ZNSt3__16localeC2ERKS0_($1, $8);
  __THREW__ = 0;
  $14 = invoke_iii(22, $1 | 0, 48032) | 0;
  $15 = __THREW__;
  __THREW__ = 0;
  if (!($15 & 1)) {
   HEAP32[$6 >> 2] = $14;
   __ZNSt3__16localeD2Ev($1);
   $17 = HEAP32[$6 >> 2] | 0;
   HEAP8[$7 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17) | 0) & 1;
   break;
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $26 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  $$0 = $26;
  $$01 = $25;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($$01 | 0);
 } while (0);
 __THREW__ = 0;
 invoke_iiii(HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] | 0, $this | 0, 0, 4096) | 0;
 $30 = __THREW__;
 __THREW__ = 0;
 if (!($30 & 1)) {
  STACKTOP = sp;
  return;
 }
 $23 = ___cxa_find_matching_catch() | 0;
 $$0 = tempRet0;
 $$01 = $23;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 ___resumeException($$01 | 0);
}

function __ZNSt3__111__stdoutbufIcE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $20 = 0, $27 = 0, $31 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 do if ($0) label = 12; else {
  HEAP8[$__1buf >> 0] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf | 0, 1, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $9 = $__1buf + 1 | 0;
  $10 = $this + 36 | 0;
  $11 = $this + 40 | 0;
  $12 = $__extbuf + 8 | 0;
  $13 = $__extbuf;
  $14 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $15 = HEAP32[$10 >> 2] | 0;
   $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 15]($15, HEAP32[$11 >> 2] | 0, $pbase$0, $9, $__e, $__extbuf, $12, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    label = 13;
    break;
   }
   if (($20 | 0) == 3) {
    $pbase$0$lcssa8 = $pbase$0;
    label = 7;
    break;
   }
   $27 = ($20 | 0) == 1;
   if ($20 >>> 0 >= 2) {
    label = 13;
    break;
   }
   $31 = (HEAP32[$__extbe >> 2] | 0) - $13 | 0;
   if ((_fwrite($__extbuf | 0, 1, $31 | 0, HEAP32[$14 >> 2] | 0) | 0) != ($31 | 0)) {
    label = 13;
    break;
   }
   if ($27) $pbase$0 = $27 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break;
   }
  }
  if ((label | 0) == 7) if ((_fwrite($pbase$0$lcssa8 | 0, 1, 1, HEAP32[$14 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  } else if ((label | 0) == 11) {
   label = 12;
   break;
  } else if ((label | 0) == 13) {
   $$0 = -1;
   break;
  }
 } while (0);
 if ((label | 0) == 12) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIwE8overflowEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $26 = 0, $30 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 do if ($0) label = 12; else {
  HEAP32[$__1buf >> 2] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf | 0, 4, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $8 = $__1buf + 4 | 0;
  $9 = $this + 36 | 0;
  $10 = $this + 40 | 0;
  $11 = $__extbuf + 8 | 0;
  $12 = $__extbuf;
  $13 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $14 = HEAP32[$9 >> 2] | 0;
   $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] & 15]($14, HEAP32[$10 >> 2] | 0, $pbase$0, $8, $__e, $__extbuf, $11, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    label = 13;
    break;
   }
   if (($19 | 0) == 3) {
    $pbase$0$lcssa8 = $pbase$0;
    label = 7;
    break;
   }
   $26 = ($19 | 0) == 1;
   if ($19 >>> 0 >= 2) {
    label = 13;
    break;
   }
   $30 = (HEAP32[$__extbe >> 2] | 0) - $12 | 0;
   if ((_fwrite($__extbuf | 0, 1, $30 | 0, HEAP32[$13 >> 2] | 0) | 0) != ($30 | 0)) {
    label = 13;
    break;
   }
   if ($26) $pbase$0 = $26 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break;
   }
  }
  if ((label | 0) == 7) if ((_fwrite($pbase$0$lcssa8 | 0, 1, 1, HEAP32[$13 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  } else if ((label | 0) == 11) {
   label = 12;
   break;
  } else if ((label | 0) == 13) {
   $$0 = -1;
   break;
  }
 } while (0);
 if ((label | 0) == 12) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 204 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46672, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 196 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46672, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 75 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46672, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 74 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 46672, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $2) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $2 = $2 | 0;
 var $$off0 = 0, $10 = 0, $11 = 0, $23 = 0, $28 = 0, $32 = 0, $37 = 0, $4 = 0, $41 = 0, $45 = 0, $49 = 0, $54 = 0, $59 = 0, $6 = 0, $63 = 0, $68 = 0, $69 = 0, $74 = 0;
 $4 = HEAP32[$this + 68 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 41592, 85);
 }
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
 $11 = $this + 64 | 0;
 if (HEAP32[$11 >> 2] | 0) if (!((($0 | 0) != 0 | ($1 | 0) != 0) & ($10 | 0) < 1)) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) {
  if ($__way >>> 0 >= 3) {
   $32 = $agg$result;
   HEAP32[$32 >> 2] = 0;
   HEAP32[$32 + 4 >> 2] = 0;
   $37 = $agg$result + 8 | 0;
   HEAP32[$37 >> 2] = -1;
   HEAP32[$37 + 4 >> 2] = -1;
   return;
  }
  $41 = HEAP32[$11 >> 2] | 0;
  if (($10 | 0) > 0) {
   $45 = ___muldi3($10 | 0, (($10 | 0) < 0) << 31 >> 31 | 0, $0 | 0, $1 | 0) | 0;
   $$off0 = $45;
  } else $$off0 = 0;
  if (!(_fseeko($41 | 0, $$off0 | 0, $__way | 0) | 0)) {
   $59 = _ftello(HEAP32[$11 >> 2] | 0) | 0;
   $63 = $this + 72 | 0;
   $68 = HEAP32[$63 + 4 >> 2] | 0;
   $69 = $agg$result;
   HEAP32[$69 >> 2] = HEAP32[$63 >> 2];
   HEAP32[$69 + 4 >> 2] = $68;
   $74 = $agg$result + 8 | 0;
   HEAP32[$74 >> 2] = $59;
   HEAP32[$74 + 4 >> 2] = (($59 | 0) < 0) << 31 >> 31;
   return;
  } else {
   $49 = $agg$result;
   HEAP32[$49 >> 2] = 0;
   HEAP32[$49 + 4 >> 2] = 0;
   $54 = $agg$result + 8 | 0;
   HEAP32[$54 >> 2] = -1;
   HEAP32[$54 + 4 >> 2] = -1;
   return;
  }
 }
 $23 = $agg$result;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 $28 = $agg$result + 8 | 0;
 HEAP32[$28 >> 2] = -1;
 HEAP32[$28 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 L1 : do if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(73, $__s | 0, $this | 0);
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if ($6 & 1) {
   $31 = ___cxa_find_matching_catch(0) | 0;
   $$0 = $31;
  } else {
   do if (HEAP8[$__s >> 0] | 0) {
    $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
    __THREW__ = 0;
    $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
    $19 = __THREW__;
    __THREW__ = 0;
    if (!($19 & 1)) {
     if (($18 | 0) != -1) break;
     $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(48, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
     $29 = __THREW__;
     __THREW__ = 0;
     if (!($29 & 1)) break;
    }
    $33 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
    $$0 = $33;
    break L3;
   } while (0);
   __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
   break L1;
  } while (0);
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 L1 : do if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(46, $__s | 0, $this | 0);
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if ($6 & 1) {
   $31 = ___cxa_find_matching_catch(0) | 0;
   $$0 = $31;
  } else {
   do if (HEAP8[$__s >> 0] | 0) {
    $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
    __THREW__ = 0;
    $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
    $19 = __THREW__;
    __THREW__ = 0;
    if (!($19 & 1)) {
     if (($18 | 0) != -1) break;
     $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(48, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
     $29 = __THREW__;
     __THREW__ = 0;
     if (!($29 & 1)) break;
    }
    $33 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
    $$0 = $33;
    break L3;
   } while (0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   break L1;
  } while (0);
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag, $arg, $func) {
 $flag = $flag | 0;
 $arg = $arg | 0;
 $func = $func | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $4 = 0, $6 = 0, $8 = 0;
 _pthread_mutex_lock(55816) | 0;
 while (1) {
  if ((HEAP32[$flag >> 2] | 0) != 1) break;
  _pthread_cond_wait(55840, 55816) | 0;
 }
 do if (!(HEAP32[$flag >> 2] | 0)) {
  HEAP32[$flag >> 2] = 1;
  __THREW__ = 0;
  invoke_ii(74, 55816) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if (!($4 & 1)) {
   __THREW__ = 0;
   invoke_vi($func | 0, $arg | 0);
   $6 = __THREW__;
   __THREW__ = 0;
   if (!($6 & 1)) {
    __THREW__ = 0;
    invoke_ii(75, 55816) | 0;
    $8 = __THREW__;
    __THREW__ = 0;
    if (!($8 & 1)) {
     HEAP32[$flag >> 2] = -1;
     __THREW__ = 0;
     invoke_ii(74, 55816) | 0;
     $10 = __THREW__;
     __THREW__ = 0;
     if (!($10 & 1)) {
      __THREW__ = 0;
      invoke_ii(76, 55840) | 0;
      $12 = __THREW__;
      __THREW__ = 0;
      if (!($12 & 1)) break;
     }
    }
   }
  }
  $14 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($14 | 0) | 0;
  __THREW__ = 0;
  invoke_ii(75, 55816) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if (!($16 & 1)) {
   HEAP32[$flag >> 2] = 0;
   __THREW__ = 0;
   invoke_ii(74, 55816) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    invoke_ii(76, 55840) | 0;
    $20 = __THREW__;
    __THREW__ = 0;
    if (!($20 & 1)) {
     __THREW__ = 0;
     invoke_v(4);
     $22 = __THREW__;
     __THREW__ = 0;
     if (!($22 & 1)) {}
    }
   }
  }
  $24 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $26 = __THREW__;
  __THREW__ = 0;
  if ($26 & 1) {
   $28 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($28);
  } else ___resumeException($24 | 0);
 } else _pthread_mutex_unlock(55816) | 0; while (0);
 return;
}

function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $27 = 0, $4 = 0, $6 = 0, $dst_ptr$0 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 $0 = HEAP32[$static_ptr >> 2] | 0;
 $4 = $static_ptr + (HEAP32[$0 + -8 >> 2] | 0) | 0;
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $10 = $info + 16 | 0;
 $11 = $info + 20 | 0;
 $12 = $info + 24 | 0;
 $13 = $info + 28 | 0;
 $14 = $info + 32 | 0;
 $15 = $info + 40 | 0;
 $16 = ($6 | 0) == ($dst_type | 0);
 dest = $10 + 0 | 0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$10 + 36 >> 1] = 0;
 HEAP8[$10 + 38 >> 0] = 0;
 do if ($16) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$dst_type >> 2] | 0) + 20 >> 2] & 31]($dst_type, $info, $4, $4, 1, 0);
  $dst_ptr$0 = (HEAP32[$12 >> 2] | 0) == 1 ? $4 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 7]($6, $info, $4, 1, 0);
  $27 = HEAP32[$info + 36 >> 2] | 0;
  if (!$27) {
   $dst_ptr$0 = (HEAP32[$15 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1 ? HEAP32[$11 >> 2] | 0 : 0;
   break;
  } else if (($27 | 0) != 1) {
   $dst_ptr$0 = 0;
   break;
  }
  if ((HEAP32[$12 >> 2] | 0) != 1) if (!((HEAP32[$15 >> 2] | 0) == 0 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1)) {
   $dst_ptr$0 = 0;
   break;
  }
  $dst_ptr$0 = HEAP32[$10 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $dst_ptr$0 | 0;
}

function __ZL10uop_string7UnaryOp($agg$result, $uop) {
 $agg$result = $agg$result | 0;
 $uop = $uop | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (($uop | 0) == 2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39312, 1);
  STACKTOP = sp;
  return;
 } else if (!$uop) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39328, 1);
  STACKTOP = sp;
  return;
 } else if (($uop | 0) == 3) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40064, 1);
  STACKTOP = sp;
  return;
 } else if (($uop | 0) == 1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39320, 1);
  STACKTOP = sp;
  return;
 } else {
  $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 39336, 45) | 0, $uop) | 0;
  __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
  __THREW__ = 0;
  $7 = invoke_iii(22, $0 | 0, 47968) | 0;
  $8 = __THREW__;
  __THREW__ = 0;
  if ($8 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($16 | 0);
  }
  __THREW__ = 0;
  $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($16 | 0);
  } else {
   __ZNSt3__16localeD2Ev($0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
   _abort();
  }
 }
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $0 = 0, $1 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $36 = 0, $42 = 0, $43 = 0, $47 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0;
 $0 = $this + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $__s) | 0;
 $1 = $this + 44 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3 & 8) {
  $6 = HEAP8[$0 >> 0] | 0;
  if (!($6 & 1)) {
   $18 = $0 + (($6 & 255) >>> 1) + 1 | 0;
   HEAP32[$1 >> 2] = $18;
   $22 = $0 + 1 | 0;
   $24 = $0 + 1 | 0;
   $26 = $18;
  } else {
   $13 = (HEAP32[$this + 40 >> 2] | 0) + (HEAP32[$this + 36 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = $13;
   $15 = HEAP32[$this + 40 >> 2] | 0;
   $22 = $15;
   $24 = $15;
   $26 = $13;
  }
  HEAP32[$this + 8 >> 2] = $22;
  HEAP32[$this + 12 >> 2] = $24;
  HEAP32[$this + 16 >> 2] = $26;
 }
 if (!($3 & 16)) return;
 $29 = HEAP8[$0 >> 0] | 0;
 if (!($29 & 1)) {
  $33 = ($29 & 255) >>> 1;
  HEAP32[$1 >> 2] = $0 + $33 + 1;
  $42 = 10;
  $65 = $33;
 } else {
  $36 = HEAP32[$this + 36 >> 2] | 0;
  HEAP32[$1 >> 2] = (HEAP32[$this + 40 >> 2] | 0) + $36;
  $42 = (HEAP32[$0 >> 2] & -2) + -1 | 0;
  $65 = $36;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $42, 0);
 $43 = HEAP8[$0 >> 0] | 0;
 if (!($43 & 1)) {
  $55 = $0 + 1 | 0;
  $56 = ($43 & 255) >>> 1;
  $58 = $0 + 1 | 0;
 } else {
  $47 = HEAP32[$this + 40 >> 2] | 0;
  $55 = $47;
  $56 = HEAP32[$this + 36 >> 2] | 0;
  $58 = $47;
 }
 $57 = $this + 24 | 0;
 HEAP32[$57 >> 2] = $58;
 HEAP32[$this + 20 >> 2] = $58;
 HEAP32[$this + 28 >> 2] = $55 + $56;
 if (!(HEAP32[$2 >> 2] & 3)) return;
 HEAP32[$57 >> 2] = $58 + $65;
 return;
}

function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $__g_end, $__err) {
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__err = $__err | 0;
 var $$0$i$i = 0, $$01$i$i = 0, $$lcssa = 0, $0 = 0, $10 = 0, $12 = 0, $16 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $7 = 0, $__ig$0 = 0, $__r$0 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, label = 0;
 $0 = HEAP8[$__grouping >> 0] | 0;
 if (!($0 & 1)) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if ($7) {
  if (($__g | 0) == ($__g_end | 0)) $16 = $0; else {
   $$0$i$i = $__g_end;
   $$01$i$i = $__g;
   while (1) {
    $10 = $$0$i$i + -4 | 0;
    if ($$01$i$i >>> 0 >= $10 >>> 0) break;
    $12 = HEAP32[$$01$i$i >> 2] | 0;
    HEAP32[$$01$i$i >> 2] = HEAP32[$10 >> 2];
    HEAP32[$10 >> 2] = $12;
    $$0$i$i = $10;
    $$01$i$i = $$01$i$i + 4 | 0;
   }
   $16 = HEAP8[$__grouping >> 0] | 0;
  }
  if (!($16 & 1)) {
   $26 = $__grouping + 1 | 0;
   $27 = ($16 & 255) >>> 1;
  } else {
   $26 = HEAP32[$__grouping + 8 >> 2] | 0;
   $27 = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  $28 = $__g_end + -4 | 0;
  $29 = $26 + $27 | 0;
  $__ig$0 = $26;
  $__r$0 = $__g;
  while (1) {
   $31 = HEAP8[$__ig$0 >> 0] | 0;
   $or$cond2 = $31 << 24 >> 24 < 1 | $31 << 24 >> 24 == 127;
   if ($__r$0 >>> 0 >= $28 >>> 0) {
    $$lcssa = $31;
    $or$cond2$lcssa = $or$cond2;
    break;
   }
   if (!$or$cond2) if (($31 << 24 >> 24 | 0) != (HEAP32[$__r$0 >> 2] | 0)) {
    label = 17;
    break;
   }
   $__ig$0 = ($29 - $__ig$0 | 0) > 1 ? $__ig$0 + 1 | 0 : $__ig$0;
   $__r$0 = $__r$0 + 4 | 0;
  }
  if ((label | 0) == 17) {
   HEAP32[$__err >> 2] = 4;
   break;
  }
  if (!$or$cond2$lcssa) if (((HEAP32[$28 >> 2] | 0) + -1 | 0) >>> 0 >= $$lcssa << 24 >> 24 >>> 0) HEAP32[$__err >> 2] = 4;
 } while (0);
 return;
}

function __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $14 = 0, $2 = 0, $25 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $5 = 0, $7 = 0, $__p$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p$i$i = sp;
 $0 = $this + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_($__p$i$i, $this, $name, HEAP32[$0 >> 2] | 0, $0);
 $2 = HEAP32[$__p$i$i >> 2] | 0;
 do if (($2 | 0) != ($0 | 0)) {
  $4 = $2 + 16 | 0;
  $5 = HEAP8[$name >> 0] | 0;
  $7 = ($5 & 1) == 0;
  if ($7) $27 = ($5 & 255) >>> 1; else $27 = HEAP32[$name + 4 >> 2] | 0;
  $12 = HEAP8[$4 >> 0] | 0;
  $14 = ($12 & 1) == 0;
  if ($14) $25 = ($12 & 255) >>> 1; else $25 = HEAP32[$2 + 20 >> 2] | 0;
  if ($7) $29 = $name + 1 | 0; else $29 = HEAP32[$name + 8 >> 2] | 0;
  if ($14) $30 = $4 + 1 | 0; else $30 = HEAP32[$2 + 24 >> 2] | 0;
  $31 = _memcmp($29, $30, $25 >>> 0 < $27 >>> 0 ? $25 : $27) | 0;
  if (!$31) {
   if ($27 >>> 0 < $25 >>> 0) break;
  } else if (($31 | 0) < 0) break;
  $$0 = HEAP32[$2 + 28 >> 2] | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $37 = __Znwj(12) | 0;
 __THREW__ = 0;
 invoke_vii(40, $37 | 0, $name | 0);
 $38 = __THREW__;
 __THREW__ = 0;
 if ($38 & 1) {
  $41 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($37);
  ___resumeException($41 | 0);
 }
 HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($this, $name) | 0) >> 2] = $37;
 $$0 = $37;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 47960) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, 46480, 46512 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 48120) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP32[$__decimal_point >> 2] = $14;
     __THREW__ = 0;
     $20 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      HEAP32[$__thousands_sep >> 2] = $20;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
      $26 = __THREW__;
      __THREW__ = 0;
      if (!($26 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($29 | 0);
}

function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 47968) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, 46480, 46512 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 48112) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP8[$__decimal_point >> 0] = $14;
     __THREW__ = 0;
     $20 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      HEAP8[$__thousands_sep >> 0] = $20;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
      $26 = __THREW__;
      __THREW__ = 0;
      if (!($26 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($29 | 0);
}

function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $ec, $what_arg) {
 $agg$result = $agg$result | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $0 = 0, $1 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $__i$0$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[$ec >> 2] | 0;
 do if ($1) {
  $3 = HEAP8[$what_arg >> 0] | 0;
  if (!($3 & 1)) $10 = ($3 & 255) >>> 1; else $10 = HEAP32[$what_arg + 4 >> 2] | 0;
  if (!$10) $17 = $1; else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg, 55664) | 0;
   $17 = HEAP32[$ec >> 2] | 0;
  }
  $13 = HEAP32[$ec + 4 >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 31]($0, $13, $17);
  $18 = HEAP8[$0 >> 0] | 0;
  if (!($18 & 1)) {
   $28 = $0 + 1 | 0;
   $29 = ($18 & 255) >>> 1;
  } else {
   $28 = HEAP32[$0 + 8 >> 2] | 0;
   $29 = HEAP32[$0 + 4 >> 2] | 0;
  }
  __THREW__ = 0;
  invoke_iiii(31, $what_arg | 0, $28 | 0, $29 | 0) | 0;
  $30 = __THREW__;
  __THREW__ = 0;
  if ($30 & 1) {
   $32 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($32 | 0);
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   break;
  }
 } while (0);
 HEAP32[$agg$result + 0 >> 2] = HEAP32[$what_arg + 0 >> 2];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[$what_arg + 4 >> 2];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[$what_arg + 8 >> 2];
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$what_arg + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $5 = 0, $6 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 $0 = $this + 8 | 0;
 __THREW__ = 0;
 $2 = invoke_ii(72, HEAP32[$0 >> 2] | 0) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) label = 16; else {
  __THREW__ = 0;
  $5 = invoke_iiii(40, 0, 0, 4) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if ($6 & 1) {
   $13 = ___cxa_find_matching_catch(0) | 0;
   if (!$2) {
    $eh$lpad$body$indexZ2D = $13;
    break;
   }
   __THREW__ = 0;
   invoke_ii(72, $2 | 0) | 0;
   $16 = __THREW__;
   __THREW__ = 0;
   if (!($16 & 1)) {
    $eh$lpad$body$indexZ2D = $13;
    break;
   }
   $18 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($18);
  }
  if ($2) {
   __THREW__ = 0;
   invoke_ii(72, $2 | 0) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $11 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($11);
   }
  }
  if (!$5) {
   $21 = HEAP32[$0 >> 2] | 0;
   if (!$21) $$0 = 1; else {
    __THREW__ = 0;
    $23 = invoke_ii(72, $21 | 0) | 0;
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     label = 16;
     break;
    }
    if (!$23) $$0 = 0; else {
     __THREW__ = 0;
     invoke_ii(72, $23 | 0) | 0;
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) {
      $29 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($29);
     } else $$0 = 0;
    }
   }
  } else $$0 = -1;
  return $$0 | 0;
 } while (0);
 if ((label | 0) == 16) {
  $31 = ___cxa_find_matching_catch(0) | 0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 return 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $st, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $$01 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $16 = 0, $19 = 0, $21 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0 = 0, $nbytes$0$lcssa = 0, $nwchar_t$0 = 0, label = 0;
 $0 = $frm_end;
 $1 = $this + 8 | 0;
 $$01 = $frm;
 $nbytes$0 = 0;
 $nwchar_t$0 = 0;
 while (1) {
  if (($$01 | 0) == ($frm_end | 0) | $nwchar_t$0 >>> 0 >= $mx >>> 0) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  }
  $7 = _uselocale(HEAP32[$1 >> 2] | 0) | 0;
  __THREW__ = 0;
  $8 = invoke_iiii(41, $$01 | 0, $0 - $$01 | 0, $st | 0) | 0;
  $9 = __THREW__;
  __THREW__ = 0;
  if ($9 & 1) {
   $$lcssa = $7;
   label = 7;
   break;
  }
  if ($7) {
   __THREW__ = 0;
   invoke_ii(72, $7 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    label = 6;
    break;
   }
  }
  if (!$8) {
   $$1 = $$01 + 1 | 0;
   $$pn = 1;
  } else if (($8 | 0) == -2 | ($8 | 0) == -1) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  } else {
   $$1 = $$01 + $8 | 0;
   $$pn = $8;
  }
  $$01 = $$1;
  $nbytes$0 = $$pn + $nbytes$0 | 0;
  $nwchar_t$0 = $nwchar_t$0 + 1 | 0;
 }
 if ((label | 0) == 6) {
  $14 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($14);
 } else if ((label | 0) == 7) {
  $16 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa | 0) | 0;
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   }
  }
  ___resumeException($16 | 0);
 } else if ((label | 0) == 15) return $nbytes$0$lcssa | 0;
 return 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $10 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $40 = 0, $5 = 0, $6 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48032) | 0;
 HEAP32[$this + 68 >> 2] = $3;
 $5 = $this + 98 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0;
 HEAP8[$5 >> 0] = $10 & 1;
 if (($6 & 255 | 0) == ($10 & 1 | 0)) return;
 $15 = $this + 8 | 0;
 $16 = $this + 96 | 0;
 HEAP32[$15 + 0 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 HEAP32[$15 + 20 >> 2] = 0;
 $18 = (HEAP8[$16 >> 0] | 0) != 0;
 if ($10) {
  $19 = $this + 32 | 0;
  if ($18) {
   $20 = HEAP32[$19 >> 2] | 0;
   if ($20) __ZdaPv($20);
  }
  $22 = $this + 97 | 0;
  HEAP8[$16 >> 0] = HEAP8[$22 >> 0] | 0;
  $24 = $this + 60 | 0;
  HEAP32[$this + 52 >> 2] = HEAP32[$24 >> 2];
  $27 = $this + 56 | 0;
  HEAP32[$19 >> 2] = HEAP32[$27 >> 2];
  HEAP32[$24 >> 2] = 0;
  HEAP32[$27 >> 2] = 0;
  HEAP8[$22 >> 0] = 0;
  return;
 }
 if (!$18) {
  $29 = $this + 32 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if (($30 | 0) != ($this + 44 | 0)) {
   $34 = HEAP32[$this + 52 >> 2] | 0;
   HEAP32[$this + 60 >> 2] = $34;
   HEAP32[$this + 56 >> 2] = $30;
   HEAP8[$this + 97 >> 0] = 0;
   HEAP32[$29 >> 2] = __Znaj($34) | 0;
   HEAP8[$16 >> 0] = 1;
   return;
  }
 }
 $40 = HEAP32[$this + 52 >> 2] | 0;
 HEAP32[$this + 60 >> 2] = $40;
 HEAP32[$this + 56 >> 2] = __Znaj($40) | 0;
 HEAP8[$this + 97 >> 0] = 1;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $10 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $3 = $info + 52 | 0;
  $4 = HEAP8[$3 >> 0] | 0;
  $5 = $info + 53 | 0;
  $6 = HEAP8[$5 >> 0] | 0;
  $9 = HEAP32[$this + 12 >> 2] | 0;
  $10 = $this + ($9 << 3) + 16 | 0;
  HEAP8[$3 >> 0] = 0;
  HEAP8[$5 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this + 16 | 0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  if (($9 | 0) > 1) {
   $13 = $info + 24 | 0;
   $14 = $this + 8 | 0;
   $15 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    if (HEAP8[$15 >> 0] | 0) break;
    if (!(HEAP8[$3 >> 0] | 0)) {
     if (HEAP8[$5 >> 0] | 0) if (!(HEAP32[$14 >> 2] & 1)) break;
    } else {
     if ((HEAP32[$13 >> 2] | 0) == 1) break;
     if (!(HEAP32[$14 >> 2] & 2)) break;
    }
    HEAP8[$3 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $10 >>> 0);
  }
  HEAP8[$3 >> 0] = $4;
  HEAP8[$5 >> 0] = $6;
 }
 return;
}

function __ZNSt3__110__stdinbufIwE9pbackfailEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $11 = 0, $19 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 8 | 0;
 $__ci = sp + 4 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  do if ($3) {
   HEAP32[$__ci >> 2] = HEAP32[$8 >> 2];
   $11 = HEAP32[$this + 36 >> 2] | 0;
   $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 4 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0;
   if (($19 | 0) == 3) {
    HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
    HEAP32[$__enxt >> 2] = $__extbuf + 1;
   } else if (($19 | 0) == 1 | ($19 | 0) == 2) {
    $$01 = -1;
    break L1;
   }
   $23 = $this + 32 | 0;
   while (1) {
    $24 = HEAP32[$__enxt >> 2] | 0;
    if ($24 >>> 0 <= $__extbuf >>> 0) {
     label = 10;
     break;
    }
    $26 = $24 + -1 | 0;
    HEAP32[$__enxt >> 2] = $26;
    if ((_ungetc(HEAP8[$26 >> 0] | 0, HEAP32[$23 >> 2] | 0) | 0) == -1) {
     label = 12;
     break;
    }
   }
   if ((label | 0) == 10) break; else if ((label | 0) == 12) {
    $$01 = -1;
    break L1;
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $11 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $34 = 0, $6 = 0, $8 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36 | 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2) {
   $6 = $2 + 48 | 0;
   $8 = HEAP32[$6 >> 2] | 0;
   $11 = HEAP32[$6 + 4 >> 2] | 0;
   if (!(($8 & -256 | 0) == 1126902528 & ($11 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = HEAP32[10176];
    _abort_message(40824, $vararg_buffer7);
   }
   if (($8 | 0) == 1126902529 & ($11 | 0) == 1129074247) $21 = HEAP32[$2 + 44 >> 2] | 0; else $21 = $2 + 80 | 0;
   HEAP32[$thrown_object >> 2] = $21;
   $22 = HEAP32[$2 >> 2] | 0;
   $24 = HEAP32[$22 + 4 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[41256 >> 2] | 0) + 16 >> 2] & 63](41256, $22, $thrown_object) | 0) {
    $29 = HEAP32[$thrown_object >> 2] | 0;
    $30 = HEAP32[10176] | 0;
    $34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] & 127]($29) | 0;
    HEAP32[$vararg_buffer >> 2] = $30;
    HEAP32[$vararg_buffer + 4 >> 2] = $24;
    HEAP32[$vararg_buffer + 8 >> 2] = $34;
    _abort_message(40728, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = HEAP32[10176];
    HEAP32[$vararg_buffer3 + 4 >> 2] = $24;
    _abort_message(40776, $vararg_buffer3);
   }
  }
 }
 _abort_message(40864, $vararg_buffer10);
}

function __ZNSt3__110__stdinbufIcE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $12 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 4 | 0;
 $__ci = sp + 8 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  do if ($3) {
   HEAP8[$__ci >> 0] = HEAP32[$8 >> 2];
   $12 = HEAP32[$this + 36 >> 2] | 0;
   $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 15]($12, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 1 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0;
   if (($20 | 0) == 1 | ($20 | 0) == 2) {
    $$01 = -1;
    break L1;
   } else if (($20 | 0) == 3) {
    HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
    HEAP32[$__enxt >> 2] = $__extbuf + 1;
   }
   $24 = $this + 32 | 0;
   while (1) {
    $25 = HEAP32[$__enxt >> 2] | 0;
    if ($25 >>> 0 <= $__extbuf >>> 0) {
     label = 10;
     break;
    }
    $27 = $25 + -1 | 0;
    HEAP32[$__enxt >> 2] = $27;
    if ((_ungetc(HEAP8[$27 >> 0] | 0, HEAP32[$24 >> 2] | 0) | 0) == -1) {
     label = 12;
     break;
    }
   }
   if ((label | 0) == 10) break; else if ((label | 0) == 12) {
    $$01 = -1;
    break L1;
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $13 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $23 = 0;
  $__r$0 = $1;
  $21 = $__r$0;
  HEAP32[$agg$result >> 2] = $21;
  $22 = $agg$result + 4 | 0;
  HEAP8[$22 >> 0] = $23;
  STACKTOP = sp;
  return;
 }
 $3 = __Znwj(28) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__v | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 $9 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $9;
 HEAP32[$0 >> 2] = $3;
 $13 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$13) $17 = $3; else {
  HEAP32[$this >> 2] = $13;
  $17 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $17);
 $18 = $this + 8 | 0;
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
 $23 = 1;
 $__r$0 = $3;
 $21 = $__r$0;
 HEAP32[$agg$result >> 2] = $21;
 $22 = $agg$result + 4 | 0;
 HEAP8[$22 >> 0] = $23;
 STACKTOP = sp;
 return;
}

function _mbtowc($wc, $src, $n) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $23 = 0, $31 = 0, $35 = 0, $4 = 0, $40 = 0, $44 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 if (!$src) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 do if ($n) {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $7 = $0;
  } else $7 = $wc;
  $4 = HEAP8[$src >> 0] | 0;
  $5 = $4 & 255;
  if ($4 << 24 >> 24 > -1) {
   HEAP32[$7 >> 2] = $5;
   $$0 = $4 << 24 >> 24 != 0 & 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $10 = $5 + -194 | 0;
  if ($10 >>> 0 <= 50) {
   $12 = $src + 1 | 0;
   $14 = HEAP32[40472 + ($10 << 2) >> 2] | 0;
   if ($n >>> 0 < 4) if ($14 & -2147483648 >>> (($n * 6 | 0) + -6 | 0)) break;
   $22 = HEAPU8[$12 >> 0] | 0;
   $23 = $22 >>> 3;
   if (($23 + -16 | $23 + ($14 >> 26)) >>> 0 <= 7) {
    $31 = $22 + -128 | $14 << 6;
    if (($31 | 0) >= 0) {
     HEAP32[$7 >> 2] = $31;
     $$0 = 2;
     STACKTOP = sp;
     return $$0 | 0;
    }
    $35 = HEAPU8[$src + 2 >> 0] | 0;
    if (($35 & 192 | 0) == 128) {
     $40 = $35 + -128 | $31 << 6;
     if (($40 | 0) >= 0) {
      HEAP32[$7 >> 2] = $40;
      $$0 = 3;
      STACKTOP = sp;
      return $$0 | 0;
     }
     $44 = HEAPU8[$src + 3 >> 0] | 0;
     if (($44 & 192 | 0) == 128) {
      HEAP32[$7 >> 2] = $44 + -128 | $40 << 6;
      $$0 = 4;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this, $__wb, $__we, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__wb = $__wb | 0;
 $__we = $__we | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $25 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__nar = sp + 16 | 0;
 $__ne = sp + 12 | 0;
 $mb = sp;
 $__nb = sp + 8 | 0;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $1 = $mb;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$__nb >> 2] = $__nar;
 $9 = (HEAP32[$__we >> 2] | 0) - $__wb >> 2;
 $11 = _uselocale(HEAP32[$this >> 2] | 0) | 0;
 __THREW__ = 0;
 $12 = invoke_iiiii(13, $__wb | 0, $__nb | 0, $9 | 0, $mb | 0) | 0;
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  if ($11) {
   __THREW__ = 0;
   invoke_ii(72, $11 | 0) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) {
    $25 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($25);
   }
  }
  ___resumeException($20 | 0);
 }
 if ($11) {
  __THREW__ = 0;
  invoke_ii(72, $11 | 0) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($18);
  }
 }
 if (($12 | 0) == -1) __ZNSt3__121__throw_runtime_errorEPKc(48848); else {
  HEAP32[$__we >> 2] = $__wb + ($12 << 2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $16 = 0, $24 = 0, $27 = 0, $5 = 0, $7 = 0;
 $0 = $this + 8 | 0;
 $1 = $this + 96 | 0;
 HEAP32[$0 + 0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 if (HEAP8[$1 >> 0] | 0) {
  $5 = HEAP32[$this + 32 >> 2] | 0;
  if ($5) __ZdaPv($5);
 }
 $7 = $this + 97 | 0;
 if (HEAP8[$7 >> 0] | 0) {
  $11 = HEAP32[$this + 56 >> 2] | 0;
  if ($11) __ZdaPv($11);
 }
 $13 = $this + 52 | 0;
 HEAP32[$13 >> 2] = $__n;
 do if ($__n >>> 0 > 8) {
  $16 = HEAP8[$this + 98 >> 0] | 0;
  if (($__s | 0) != 0 & $16 << 24 >> 24 != 0) {
   HEAP32[$this + 32 >> 2] = $__s;
   HEAP8[$1 >> 0] = 0;
   $24 = $16;
   break;
  } else {
   HEAP32[$this + 32 >> 2] = __Znaj($__n) | 0;
   HEAP8[$1 >> 0] = 1;
   $24 = $16;
   break;
  }
 } else {
  HEAP32[$this + 32 >> 2] = $this + 44;
  HEAP32[$13 >> 2] = 8;
  HEAP8[$1 >> 0] = 0;
  $24 = HEAP8[$this + 98 >> 0] | 0;
 } while (0);
 if ($24 << 24 >> 24) {
  HEAP32[$this + 60 >> 2] = 0;
  HEAP32[$this + 56 >> 2] = 0;
  HEAP8[$7 >> 0] = 0;
  return $this | 0;
 }
 $27 = ($__n | 0) < 8 ? 8 : $__n;
 HEAP32[$this + 60 >> 2] = $27;
 if (($__s | 0) != 0 & $27 >>> 0 > 7) {
  HEAP32[$this + 56 >> 2] = $__s;
  HEAP8[$7 >> 0] = 0;
  return $this | 0;
 } else {
  HEAP32[$this + 56 >> 2] = __Znaj($27) | 0;
  HEAP8[$7 >> 0] = 1;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp, $__len, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$2$ph = 0, $11 = 0, $20 = 0, $6 = 0, $7 = 0, $8 = 0, $specify_precision$0$off0$ph = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6 | 0) == 260;
 if ($8) {
  $$2$ph = $$1;
  $specify_precision$0$off0$ph = 0;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$2$ph = $$1 + 2 | 0;
  $specify_precision$0$off0$ph = 1;
 }
 $$01 = $__len;
 $$2 = $$2$ph;
 while (1) {
  $11 = HEAP8[$$01 >> 0] | 0;
  if (!($11 << 24 >> 24)) {
   $$2$lcssa = $$2;
   break;
  }
  HEAP8[$$2 >> 0] = $11;
  $$01 = $$01 + 1 | 0;
  $$2 = $$2 + 1 | 0;
 }
 do if (($6 | 0) == 4) if (!($7 & 1)) {
  HEAP8[$$2$lcssa >> 0] = 102;
  break;
 } else {
  HEAP8[$$2$lcssa >> 0] = 70;
  break;
 } else if (($6 | 0) == 256) if (!($7 & 1)) {
  HEAP8[$$2$lcssa >> 0] = 101;
  break;
 } else {
  HEAP8[$$2$lcssa >> 0] = 69;
  break;
 } else {
  $20 = ($7 & 1 | 0) != 0;
  if ($8) if ($20) {
   HEAP8[$$2$lcssa >> 0] = 65;
   break;
  } else {
   HEAP8[$$2$lcssa >> 0] = 97;
   break;
  } else if ($20) {
   HEAP8[$$2$lcssa >> 0] = 71;
   break;
  } else {
   HEAP8[$$2$lcssa >> 0] = 103;
   break;
  }
 } while (0);
 return $specify_precision$0$off0$ph | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $st, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $11 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0, $n$0 = 0, $p$0 = 0, $tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmp = sp;
 HEAP32[$to_nxt >> 2] = $to;
 $2 = _uselocale(HEAP32[$this + 8 >> 2] | 0) | 0;
 __THREW__ = 0;
 $3 = invoke_iiii(39, $tmp | 0, 0, $st | 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  if ($2) {
   __THREW__ = 0;
   invoke_ii(72, $2 | 0) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($16);
   }
  }
  ___resumeException($11 | 0);
 }
 if ($2) {
  __THREW__ = 0;
  invoke_ii(72, $2 | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($9);
  }
 }
 if (($3 | 0) == 0 | ($3 | 0) == -1) $$0 = 2; else {
  $18 = $3 + -1 | 0;
  if ($18 >>> 0 > ($to_end - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) $$0 = 1; else {
   $n$0 = $18;
   $p$0 = $tmp;
   while (1) {
    if (!$n$0) break;
    $26 = HEAP8[$p$0 >> 0] | 0;
    $27 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $26;
    $n$0 = $n$0 + -1 | 0;
    $p$0 = $p$0 + 1 | 0;
   }
   $$0 = 0;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_15Stack3popEv($this) {
 $this = $this | 0;
 var $$idx$i = 0, $$idx$val$i = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $6 = 0;
 $$idx$i = $this + 16 | 0;
 $$idx$val$i = HEAP32[$$idx$i >> 2] | 0;
 if ((HEAP32[$$idx$val$i + -144 >> 2] | 0) == 5) {
  $1 = $this + 4 | 0;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + -1;
 }
 $4 = $$idx$val$i + -144 | 0;
 $6 = $$idx$val$i;
 do {
  HEAP32[$$idx$i >> 2] = $6 + -144;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
  $11 = HEAP32[$6 + -40 >> 2] | 0;
  $13 = $11;
  if ($11) {
   $14 = $6 + -36 | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
   __ZdlPv($11);
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
  $6 = HEAP32[$$idx$i >> 2] | 0;
 } while (($6 | 0) != ($4 | 0));
 return;
}

function __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $6 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) return;
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) == ($0 | 0)) $30 = $0; else {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   $13 = $11;
   if ($11) {
    $14 = $6 + -36 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($0 | 0));
  $30 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($30);
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $22 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $22 | 0;
 }
 $3 = __Znwj(40) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 $9 = $3 + 28 | 0;
 HEAP32[$9 + 0 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $10 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $10;
 HEAP32[$0 >> 2] = $3;
 $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$14) $18 = $3; else {
  HEAP32[$this >> 2] = $14;
  $18 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
 $__r$0 = $3;
 $22 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $23 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 47960) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, 46480, 46506 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 48120) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP32[$__thousands_sep >> 2] = $14;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
     $20 = __THREW__;
     __THREW__ = 0;
     if (!($20 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($23 | 0);
}

function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $23 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 47968) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, 46480, 46506 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 48112) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP8[$__thousands_sep >> 0] = $14;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
     $20 = __THREW__;
     __THREW__ = 0;
     if (!($20 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($23 | 0);
}

function __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $6 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   $13 = $11;
   if ($11) {
    $14 = $6 + -36 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($1 | 0));
 }
 $30 = HEAP32[$this >> 2] | 0;
 if (!$30) return;
 __ZdlPv($30);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $31 = 0, $9 = 0;
 if ((1073741806 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 4 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 2) $17 = 2; else $17 = $12 + 4 & -4;
 } else $17 = 1073741807;
 $18 = __Znwj($17 << 2) | 0;
 if ($__n_copy) _wmemcpy($18, $20, $__n_copy) | 0;
 if ($__n_add) _wmemcpy($18 + ($__n_copy << 2) | 0, $__p_new_stuff, $__n_add) | 0;
 $23 = $__old_sz - $__n_del | 0;
 if (($23 | 0) != ($__n_copy | 0)) _wmemcpy($18 + ($__n_add + $__n_copy << 2) | 0, $20 + ($__n_del + $__n_copy << 2) | 0, $23 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 $31 = $23 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $31;
 HEAP32[$18 + ($31 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEEC2ERKS6_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $27 = 0, $30 = 0, $7 = 0, $8 = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $7 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$__x >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) {
  __THREW__ = 0;
  invoke_vi(179, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if (!($11 & 1)) label = 4;
 } else label = 4;
 if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if (!($14 & 1)) {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$1 >> 2] = $13 + ($8 << 2);
   $17 = HEAP32[$__x >> 2] | 0;
   $18 = HEAP32[$2 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) return;
   $$01$i = $17;
   $21 = $13;
   do {
    HEAP32[$21 >> 2] = HEAP32[$$01$i >> 2];
    $21 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
    HEAP32[$0 >> 2] = $21;
    $$01$i = $$01$i + 4 | 0;
   } while (($$01$i | 0) != ($18 | 0));
   return;
  }
 }
 $25 = ___cxa_find_matching_catch() | 0;
 $27 = HEAP32[$this >> 2] | 0;
 if (!$27) ___resumeException($25 | 0);
 $30 = HEAP32[$0 >> 2] | 0;
 if (($30 | 0) != ($27 | 0)) HEAP32[$0 >> 2] = $30 + (~(($30 + -4 - $27 | 0) >>> 2) << 2);
 __ZdlPv($27);
 ___resumeException($25 | 0);
}

function _MUSL_vfprintf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$0 = 0, $11 = 0, $12 = 0, $2 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $ap2 = sp + 120 | 0;
 $nl_type = sp + 80 | 0;
 $nl_arg = sp;
 $internal_buf = sp + 136 | 0;
 dest = $nl_type + 0 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
 if ((_printf_core(0, $fmt, $ap2, $nl_arg, $nl_type) | 0) < 0) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $2 = $f + 48 | 0;
 if (!(HEAP32[$2 >> 2] | 0)) {
  $6 = $f + 44 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = $internal_buf;
  $8 = $f + 28 | 0;
  HEAP32[$8 >> 2] = $internal_buf;
  $9 = $f + 20 | 0;
  HEAP32[$9 >> 2] = $internal_buf;
  HEAP32[$2 >> 2] = 80;
  $11 = $f + 16 | 0;
  HEAP32[$11 >> 2] = $internal_buf + 80;
  $12 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
  if (!$7) $ret$1 = $12; else {
   FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
   $$ = (HEAP32[$9 >> 2] | 0) == 0 ? -1 : $12;
   HEAP32[$6 >> 2] = $7;
   HEAP32[$2 >> 2] = 0;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$8 >> 2] = 0;
   HEAP32[$9 >> 2] = 0;
   $ret$1 = $$;
  }
 } else $ret$1 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
 $$0 = $ret$1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEEC2ERKS5_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $27 = 0, $30 = 0, $7 = 0, $8 = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $7 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$__x >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) {
  __THREW__ = 0;
  invoke_vi(179, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if (!($11 & 1)) label = 4;
 } else label = 4;
 if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if (!($14 & 1)) {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$1 >> 2] = $13 + ($8 << 2);
   $17 = HEAP32[$__x >> 2] | 0;
   $18 = HEAP32[$2 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) return;
   $$01$i = $17;
   $21 = $13;
   do {
    HEAP32[$21 >> 2] = HEAP32[$$01$i >> 2];
    $21 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
    HEAP32[$0 >> 2] = $21;
    $$01$i = $$01$i + 4 | 0;
   } while (($$01$i | 0) != ($18 | 0));
   return;
  }
 }
 $25 = ___cxa_find_matching_catch() | 0;
 $27 = HEAP32[$this >> 2] | 0;
 if (!$27) ___resumeException($25 | 0);
 $30 = HEAP32[$0 >> 2] | 0;
 if (($30 | 0) != ($27 | 0)) HEAP32[$0 >> 2] = $30 + (~(($30 + -4 - $27 | 0) >>> 2) << 2);
 __ZdlPv($27);
 ___resumeException($25 | 0);
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $30 = 0, $9 = 0;
 if ((-18 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $19 = $this + 1 | 0; else $19 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 11) $16 = 11; else $16 = $12 + 16 & -16;
 } else $16 = -17;
 $17 = __Znwj($16) | 0;
 if ($__n_copy) _memcpy($17 | 0, $19 | 0, $__n_copy | 0) | 0;
 if ($__n_add) _memcpy($17 + $__n_copy | 0, $__p_new_stuff | 0, $__n_add | 0) | 0;
 $22 = $__old_sz - $__n_del | 0;
 if (($22 | 0) != ($__n_copy | 0)) _memcpy($17 + ($__n_add + $__n_copy) | 0, $19 + ($__n_del + $__n_copy) | 0, $22 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($19);
 HEAP32[$this + 8 >> 2] = $17;
 HEAP32[$this >> 2] = $16 | 1;
 $30 = $22 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $30;
 HEAP8[$17 + $30 >> 0] = 0;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $3 = 0, $5 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $22 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $22 | 0;
 }
 $3 = __Znwj(32) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 HEAP32[$3 + 28 >> 2] = 0;
 $10 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $10;
 HEAP32[$0 >> 2] = $3;
 $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$14) $18 = $3; else {
  HEAP32[$this >> 2] = $14;
  $18 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
 $__r$0 = $3;
 $22 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $33 = 0, $40 = 0, $8 = 0, $__p$0 = 0, $scevgep1 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $15 = ($1 & 255) >>> 1;
  $16 = 10;
  $40 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $15 = HEAP32[$this + 4 >> 2] | 0;
  $16 = ($8 & -2) + -1 | 0;
  $40 = $8 & 255;
 }
 $12 = $__last - $0 | 0;
 do if (($__last | 0) != ($__first | 0)) {
  if (($16 - $15 | 0) >>> 0 < $12 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $16, $15 + $12 - $16 | 0, $15, $15, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $40;
  if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
  $scevgep1 = $__last + ($15 - $0) | 0;
  $$0 = $__first;
  $__p$0 = $27 + $15 | 0;
  while (1) {
   if (($$0 | 0) == ($__last | 0)) break;
   HEAP8[$__p$0 >> 0] = HEAP8[$$0 >> 0] | 0;
   $$0 = $$0 + 1 | 0;
   $__p$0 = $__p$0 + 1 | 0;
  }
  HEAP8[$27 + $scevgep1 >> 0] = 0;
  $33 = $15 + $12 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $33 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $33;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, $__n) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$pre = 0, $0 = 0, $13 = 0, $17 = 0, $2 = 0, $22 = 0, $24 = 0, $30 = 0, $7 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) {
  $13 = 10;
  $17 = $0;
 } else {
  $9 = HEAP32[$this >> 2] | 0;
  $13 = ($9 & -2) + -1 | 0;
  $17 = $9 & 255;
 }
 if (($13 - $7 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $13, $7 + $__n - $13 | 0, $7, $__pos, 0, $__n, $__s); else if ($__n) {
  if (!($17 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
  $22 = $7 - $__pos | 0;
  $$pre = $24 + $__pos | 0;
  if (($7 | 0) == ($__pos | 0)) $$1 = $__s; else {
   if ($$pre >>> 0 <= $__s >>> 0 & ($24 + $7 | 0) >>> 0 > $__s >>> 0) $$0 = $__s + $__n | 0; else $$0 = $__s;
   _memmove($24 + ($__n + $__pos) | 0, $$pre | 0, $22 | 0) | 0;
   $$1 = $$0;
  }
  _memmove($$pre | 0, $$1 | 0, $__n | 0) | 0;
  $30 = $7 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $30 << 1; else HEAP32[$this + 4 >> 2] = $30;
  HEAP8[$24 + $30 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $28 = 0, $32 = 0, $37 = 0, $44 = 0, $8 = 0, $__p$0 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $16 = ($1 & 255) >>> 1;
  $17 = 1;
  $44 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $16 = HEAP32[$this + 4 >> 2] | 0;
  $17 = ($8 & -2) + -1 | 0;
  $44 = $8 & 255;
 }
 $13 = $__last - $0 >> 2;
 do if ($13) {
  if (($17 - $16 | 0) >>> 0 < $13 >>> 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $17, $16 + $13 - $17 | 0, $16, $16, 0, 0);
   $22 = HEAP8[$this >> 0] | 0;
  } else $22 = $44;
  if (!($22 & 1)) $28 = $this + 4 | 0; else $28 = HEAP32[$this + 8 >> 2] | 0;
  $32 = $16 + (($__last - $0 | 0) >>> 2) | 0;
  $$0 = $__first;
  $__p$0 = $28 + ($16 << 2) | 0;
  while (1) {
   if (($$0 | 0) == ($__last | 0)) break;
   HEAP32[$__p$0 >> 2] = HEAP32[$$0 >> 2];
   $$0 = $$0 + 4 | 0;
   $__p$0 = $__p$0 + 4 | 0;
  }
  HEAP32[$28 + ($32 << 2) >> 2] = 0;
  $37 = $16 + $13 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $37 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $37;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $ec, $what_arg) {
 $this = $this | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $what_arg, _strlen($what_arg | 0) | 0);
 __THREW__ = 0;
 invoke_viii(19, $0 | 0, $ec | 0, $1 | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $18;
 } else {
  __THREW__ = 0;
  invoke_vii(110, $this | 0, $0 | 0);
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $20 = ___cxa_find_matching_catch() | 0;
   $21 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $$0 = $21;
   $$01 = $20;
   break;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   HEAP32[$this >> 2] = 55680;
   $8 = $ec;
   $13 = HEAP32[$8 + 4 >> 2] | 0;
   $14 = $this + 8 | 0;
   HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$14 + 4 >> 2] = $13;
   STACKTOP = sp;
   return;
  }
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $23 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $23 = ($6 & 255) >>> 1; else $23 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($23 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $23 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $23 = ($6 & 255) >>> 1; else $23 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($23 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function ___fwritex($s, $l, $f) {
 $s = $s | 0;
 $l = $l | 0;
 $f = $f | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $19 = 0, $29 = 0, $5 = 0, $6 = 0, $7 = 0, $i$0 = 0, $i$0$lcssa8 = 0, $i$1 = 0, label = 0;
 $0 = $f + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) if (!(___towrite($f) | 0)) {
  $7 = HEAP32[$0 >> 2] | 0;
  break;
 } else {
  $$0 = 0;
  return $$0 | 0;
 } else $7 = $1; while (0);
 $5 = $f + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($7 - $6 | 0) >>> 0 < $l >>> 0) {
  $$0 = FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $l) | 0;
  return $$0 | 0;
 }
 do if ((HEAP8[$f + 75 >> 0] | 0) > -1) {
  $i$0 = $l;
  while (1) {
   if (!$i$0) {
    label = 12;
    break;
   }
   $19 = $i$0 + -1 | 0;
   if ((HEAP8[$s + $19 >> 0] | 0) == 10) {
    $i$0$lcssa8 = $i$0;
    break;
   } else $i$0 = $19;
  }
  if ((label | 0) == 12) {
   $$01 = $l;
   $$02 = $s;
   $29 = $6;
   $i$1 = 0;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $i$0$lcssa8) | 0) >>> 0 < $i$0$lcssa8 >>> 0) {
   $$0 = $i$0$lcssa8;
   return $$0 | 0;
  } else {
   $$01 = $l - $i$0$lcssa8 | 0;
   $$02 = $s + $i$0$lcssa8 | 0;
   $29 = HEAP32[$5 >> 2] | 0;
   $i$1 = $i$0$lcssa8;
   break;
  }
 } else {
  $$01 = $l;
  $$02 = $s;
  $29 = $6;
  $i$1 = 0;
 } while (0);
 _memcpy($29 | 0, $$02 | 0, $$01 | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$01;
 $$0 = $i$1 + $$01 | 0;
 return $$0 | 0;
}

function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg$result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $21 = 0, $23 = 0, $4 = 0, $7 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__nar = sp + 4 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $$0$i$i = $__nar;
 $8 = HEAP32[$__s >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($4 | 0)) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP8[$$0$i$i >> 0] | 0;
  do if (!$8) $23 = 0; else {
   $10 = $8 + 24 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (($11 | 0) == (HEAP32[$8 + 28 >> 2] | 0)) {
    $21 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] & 63]($8, $7 & 255) | 0) == -1;
    $23 = $21 ? 0 : $8;
    break;
   } else {
    HEAP32[$10 >> 2] = $11 + 1;
    HEAP8[$11 >> 0] = $7;
    $23 = $8;
    break;
   }
  } while (0);
  $$0$i$i = $$0$i$i + 1 | 0;
  $8 = $23;
 }
 HEAP32[$agg$result >> 2] = $$lcssa;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $4 = 0, $5 = 0, $__v = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v = sp;
 $4 = HEAP32[$this + 8 >> 2] | 0;
 $5 = HEAP32[$this + 4 >> 2] | 0;
 if ($4 - $5 >> 2 >>> 0 < $__n >>> 0) {
  $11 = HEAP32[$this >> 2] | 0;
  $13 = $5 - $11 >> 2;
  $14 = $13 + $__n | 0;
  if ($14 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $16 = $4 - $11 | 0;
  if ($16 >> 2 >>> 0 < 536870911) {
   $19 = $16 >> 1;
   $$0$i = $19 >>> 0 < $14 >>> 0 ? $14 : $19;
  } else $$0$i = 1073741823;
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v, $$0$i, $13, $this + 16 | 0);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($__v, $__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
 STACKTOP = sp;
 return;
}

function __Z23jsonnet_unparse_jsonnetPK3AST($agg$result, $ast) {
 $agg$result = $agg$result | 0;
 $ast = $ast | 0;
 var $0 = 0, $10 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ($ast) {
  $2 = ___dynamic_cast($ast, 33800, 33816, 0) | 0;
  if ($2) {
   __ZL7unparsePK3AST($agg$result, HEAP32[$2 + 60 >> 2] | 0);
   STACKTOP = sp;
   return;
  }
 }
 $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(43744, 33832, 68) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $4 + (HEAP32[(HEAP32[$4 >> 2] | 0) + -12 >> 2] | 0) | 0);
 __THREW__ = 0;
 $9 = invoke_iii(22, $0 | 0, 47968) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $19 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($18 | 0);
 }
 __THREW__ = 0;
 $15 = invoke_iii(HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] | 0, $9 | 0, 10) | 0;
 $16 = __THREW__;
 __THREW__ = 0;
 if ($16 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $19 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($18 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($4, $15) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($4) | 0;
  _abort();
 }
}

function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg$result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $22 = 0, $4 = 0, $7 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $__nar = sp + 8 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $$0$i$i = $__nar;
 $8 = HEAP32[$__s >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($4 | 0)) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP32[$$0$i$i >> 2] | 0;
  if (!$8) $22 = 0; else {
   $10 = $8 + 24 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (($11 | 0) == (HEAP32[$8 + 28 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] & 63]($8, $7) | 0; else {
    HEAP32[$10 >> 2] = $11 + 4;
    HEAP32[$11 >> 2] = $7;
    $$0$i$i$i$i = $7;
   }
   $22 = ($$0$i$i$i$i | 0) == -1 ? 0 : $8;
  }
  $$0$i$i = $$0$i$i + 4 | 0;
  $8 = $22;
 }
 HEAP32[$agg$result >> 2] = $$lcssa;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 if (!($9 & 1)) {
  $21 = $6 + 4 | 0;
  $22 = ($9 & 255) >>> 1;
  $23 = $6 + 4 | 0;
 } else {
  $13 = HEAP32[$6 + 8 >> 2] | 0;
  $21 = $13;
  $22 = HEAP32[$6 + 4 >> 2] | 0;
  $23 = $13;
 }
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $23, $21 + ($22 << 2) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 if (!($9 & 1)) {
  $21 = $6 + 1 | 0;
  $22 = ($9 & 255) >>> 1;
  $23 = $6 + 1 | 0;
 } else {
  $13 = HEAP32[$6 + 8 >> 2] | 0;
  $21 = $13;
  $22 = HEAP32[$6 + 4 >> 2] | 0;
  $23 = $13;
 }
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $23, $21 + $22 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 do if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  __THREW__ = 0;
  $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   if (($25 | 0) != -1) break;
   $29 = HEAP32[$0 >> 2] | 0;
   $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(48, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) break;
  }
  $39 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($39 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  }
 } while (0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 do if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  __THREW__ = 0;
  $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   if (($25 | 0) != -1) break;
   $29 = HEAP32[$0 >> 2] | 0;
   $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(48, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) break;
  }
  $39 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($39 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  }
 } while (0);
 return;
}

function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 L1 : do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  do if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0) {
    $$0 = 2147483647;
    break L1;
   }
  } else {
   if (($5 | 0) < -1 | ($5 | 0) == -1 & $4 >>> 0 < 2147483648) {
    HEAP32[$__err >> 2] = 4;
    break;
   }
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 2147483647) {
    HEAP32[$__err >> 2] = 4;
    $$0 = 2147483647;
    break L1;
   } else {
    $$0 = $4;
    break L1;
   }
  } while (0);
  $$0 = -2147483648;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}
function _vsnprintf($s, $n, $fmt, $ap) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $5 = 0, $8 = 0, $b = 0, $f = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $b = sp + 112 | 0;
 $f = sp;
 dest = $f + 0 | 0;
 src = 43456 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($n + -1 | 0) >>> 0 > 2147483646) if (!$n) {
  $$01 = $b;
  $$02 = 1;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$01 = $s;
  $$02 = $n;
 }
 $5 = -2 - $$01 | 0;
 $$$02 = $$02 >>> 0 > $5 >>> 0 ? $5 : $$02;
 HEAP32[$f + 48 >> 2] = $$$02;
 $8 = $f + 20 | 0;
 HEAP32[$8 >> 2] = $$01;
 HEAP32[$f + 44 >> 2] = $$01;
 $10 = $$01 + $$$02 | 0;
 $11 = $f + 16 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$f + 28 >> 2] = $10;
 $13 = _MUSL_vfprintf($f, $fmt, $ap) | 0;
 if (!$$$02) {
  $$0 = $13;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $15 = HEAP32[$8 >> 2] | 0;
 HEAP8[$15 + ((($15 | 0) == (HEAP32[$11 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
 $$0 = $13;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $9 = 0;
 if ((1073741807 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 4 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 2) $17 = 2; else $17 = $12 + 4 & -4;
 } else $17 = 1073741807;
 $18 = __Znwj($17 << 2) | 0;
 if ($__n_copy) _wmemcpy($18, $20, $__n_copy) | 0;
 $21 = $__old_sz - $__n_del | 0;
 if (($21 | 0) != ($__n_copy | 0)) _wmemcpy($18 + ($__n_add + $__n_copy << 2) | 0, $20 + ($__n_del + $__n_copy << 2) | 0, $21 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $9 = 0;
 if ((-17 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $19 = $this + 1 | 0; else $19 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 11) $16 = 11; else $16 = $12 + 16 & -16;
 } else $16 = -17;
 $17 = __Znwj($16) | 0;
 if ($__n_copy) _memcpy($17 | 0, $19 | 0, $__n_copy | 0) | 0;
 $20 = $__old_sz - $__n_del | 0;
 if (($20 | 0) != ($__n_copy | 0)) _memcpy($17 + ($__n_add + $__n_copy) | 0, $19 + ($__n_del + $__n_copy) | 0, $20 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($19);
 HEAP32[$this + 8 >> 2] = $17;
 HEAP32[$this >> 2] = $16 | 1;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 47960) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 47960) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 47968) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 47968) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZN6ObjectD0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $17 = 0, $20 = 0, $21 = 0, $27 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i$i = 0, $__f$01$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 35768;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i$i = $5;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 33968;
 $17 = HEAP32[$this + 36 >> 2] | 0;
 if (!$17) {
  $27 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
  __ZdlPv($this);
  return;
 }
 $20 = $this + 40 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) != ($17 | 0)) HEAP32[$20 >> 2] = $21 + (~(($21 + -4 - $17 | 0) >>> 2) << 2);
 __ZdlPv($17);
 $27 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 47960) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 47968) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $15 = 0, $17 = 0, $23 = 0, $3 = 0, $7 = 0, $9 = 0;
 HEAP32[$this >> 2] = 40264;
 $0 = $this + 64 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1) {
  __THREW__ = 0;
  invoke_ii(5, $this | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $7 = ___cxa_find_matching_catch(0) | 0;
   _fclose($1 | 0) | 0;
   ___cxa_begin_catch($7 | 0) | 0;
   __THREW__ = 0;
   invoke_v(2);
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) break;
   $17 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
   ___clang_call_terminate($17);
  } else {
   if (_fclose($1 | 0) | 0) break;
   HEAP32[$0 >> 2] = 0;
   break;
  }
 } while (0);
 if (HEAP8[$this + 96 >> 0] | 0) {
  $15 = HEAP32[$this + 32 >> 2] | 0;
  if ($15) __ZdaPv($15);
 }
 if (!(HEAP8[$this + 97 >> 0] | 0)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  return;
 }
 $23 = HEAP32[$this + 56 >> 2] | 0;
 if (!$23) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  return;
 }
 __ZdaPv($23);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $28 = 0, $33 = 0, $38 = 0, $43 = 0, $44 = 0, $9 = 0;
 $1 = $this + 64 | 0;
 if (HEAP32[$1 >> 2] | 0) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) if (!(_fseeko(HEAP32[$1 >> 2] | 0, HEAP32[$__sp + 8 >> 2] | 0, 0) | 0)) {
  $38 = $__sp;
  $43 = HEAP32[$38 + 4 >> 2] | 0;
  $44 = $this + 72 | 0;
  HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$44 + 4 >> 2] = $43;
  HEAP32[$agg$result + 0 >> 2] = HEAP32[$__sp + 0 >> 2];
  HEAP32[$agg$result + 4 >> 2] = HEAP32[$__sp + 4 >> 2];
  HEAP32[$agg$result + 8 >> 2] = HEAP32[$__sp + 8 >> 2];
  HEAP32[$agg$result + 12 >> 2] = HEAP32[$__sp + 12 >> 2];
  return;
 } else {
  $28 = $agg$result;
  HEAP32[$28 >> 2] = 0;
  HEAP32[$28 + 4 >> 2] = 0;
  $33 = $agg$result + 8 | 0;
  HEAP32[$33 >> 2] = -1;
  HEAP32[$33 + 4 >> 2] = -1;
  return;
 }
 $9 = $agg$result;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 $14 = $agg$result + 8 | 0;
 HEAP32[$14 >> 2] = -1;
 HEAP32[$14 + 4 >> 2] = -1;
 return;
}

function ___cxx_global_array_dtor108($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55468 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55456 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55444 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55432 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55420 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55408 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55396 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55384 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55372 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55360 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55348 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55336 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55324 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55312);
 return;
}

function ___cxx_global_array_dtor93($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54932 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54920 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54908 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54896 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54884 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54872 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54860 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54848 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54836 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54824 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54812 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54800 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54788 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(54776);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $13 = 0, $18 = 0, $19 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $13 = $3;
 } else $13 = $1;
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $this + 12 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($6 >>> 0 >= $8 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$5 >> 2] = $6;
  HEAP32[$7 >> 2] = $8 + -1;
  HEAP32[$this + 16 >> 2] = $13;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 48 >> 2] & 16)) {
  $18 = $__c & 255;
  $19 = $8 + -1 | 0;
  if ($18 << 24 >> 24 == (HEAP8[$19 >> 0] | 0)) {
   $$pre$phi2Z2D = $18;
   $$pre$phiZ2D = $19;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $8 + -1 | 0;
 }
 HEAP32[$5 >> 2] = $6;
 HEAP32[$7 >> 2] = $$pre$phiZ2D;
 HEAP32[$this + 16 >> 2] = $13;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 var $16 = 0, $17 = 0, $22 = 0, $25 = 0, $5 = 0, $6 = 0;
 HEAP8[$info + 53 >> 0] = 1;
 do if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
  HEAP8[$info + 52 >> 0] = 1;
  $5 = $info + 16 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (!$6) {
   HEAP32[$5 >> 2] = $dst_ptr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   if (!(($path_below | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  if (($6 | 0) != ($dst_ptr | 0)) {
   $25 = $info + 36 | 0;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $16 = $info + 24 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == 2) {
   HEAP32[$16 >> 2] = $path_below;
   $22 = $path_below;
  } else $22 = $17;
  if (($22 | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0) HEAP8[$info + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN6ObjectD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $17 = 0, $20 = 0, $21 = 0, $27 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i = 0, $__f$01$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 35768;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i = $5;
   do {
    $__f$01$i$i$looptemp = $__f$01$i$i;
    $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$looptemp);
   } while (($__f$01$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 33968;
 $17 = HEAP32[$this + 36 >> 2] | 0;
 if (!$17) {
  $27 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
  return;
 }
 $20 = $this + 40 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) != ($17 | 0)) HEAP32[$20 >> 2] = $21 + (~(($21 + -4 - $17 | 0) >>> 2) << 2);
 __ZdlPv($17);
 $27 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 1;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 4 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP32[$$pn + ($__sz$0 << 2) >> 2] = $__c;
 HEAP32[$$pn + ($__p$0$sum$pre$phiZZZ2D << 2) >> 2] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 10;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 1 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP8[$$pn + $__sz$0 >> 0] = $__c;
 HEAP8[$$pn + $__p$0$sum$pre$phiZZZ2D >> 0] = 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $6 = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else if (($this | 0) == (HEAP32[$info >> 2] | 0)) {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    HEAP32[$14 >> 2] = $current_ptr;
    $20 = $info + 40 | 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) HEAP8[$info + 54 >> 0] = 1;
    HEAP32[$info + 44 >> 2] = 4;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 189;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $25 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $25 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   } else {
    $25 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 201;
 HEAP32[$__n >> 2] = $25 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 189;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $25 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $25 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   } else {
    $25 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 201;
 HEAP32[$__n >> 2] = $25 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 189;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $12 = (HEAP32[$__n >> 2] | 0) - $6 | 0;
 $14 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$14) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $14;
  $23 = $14;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $14;
  if (!$$pr) $23 = $14; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $18 = __THREW__;
   __THREW__ = 0;
   if ($18 & 1) {
    $20 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($20);
   } else {
    $23 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 201;
 HEAP32[$__n >> 2] = $23 + $12;
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + $$;
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $$0 = 0, $$1 = 0, $2 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 if (($this | 0) == ($thrown_type | 0)) $$1 = 1; else if (!$thrown_type) $$1 = 0; else {
  $2 = ___dynamic_cast($thrown_type, 41648, 41704, 0) | 0;
  if (!$2) $$1 = 0; else {
   dest = $info + 0 | 0;
   stop = dest + 56 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$info >> 2] = $2;
   HEAP32[$info + 8 >> 2] = $this;
   HEAP32[$info + 12 >> 2] = -1;
   HEAP32[$info + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 31]($2, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
   if ((HEAP32[$info + 24 >> 2] | 0) == 1) {
    HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$1 = $$0;
  }
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $1 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $18 = 0;
  $19 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $18 = 0;
   $19 = 0;
   break;
  }
  if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $15 = ($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0;
   tempRet0 = $15 ? 2147483647 : -2147483648;
   STACKTOP = sp;
   return ($15 ? -1 : 0) | 0;
  } else {
   $18 = $5;
   $19 = $4;
  }
 } while (0);
 tempRet0 = $18;
 STACKTOP = sp;
 return $19 | 0;
}

function ___shgetc($f) {
 $f = $f | 0;
 var $$0 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $12 = 0, $19 = 0, $27 = 0, $32 = 0, $6 = 0, $9 = 0, label = 0;
 $0 = $f + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) label = 3; else if ((HEAP32[$f + 108 >> 2] | 0) < ($1 | 0)) label = 3;
 if ((label | 0) == 3) {
  $6 = ___uflow($f) | 0;
  if (($6 | 0) >= 0) {
   $9 = HEAP32[$0 >> 2] | 0;
   $$pre = HEAP32[$f + 8 >> 2] | 0;
   if (!$9) label = 8; else {
    $12 = HEAP32[$f + 4 >> 2] | 0;
    $19 = $9 - (HEAP32[$f + 108 >> 2] | 0) + -1 | 0;
    if (($$pre - $12 | 0) > ($19 | 0)) HEAP32[$f + 100 >> 2] = $12 + $19; else label = 8;
   }
   if ((label | 0) == 8) HEAP32[$f + 100 >> 2] = $$pre;
   $$pre3 = HEAP32[$f + 4 >> 2] | 0;
   if ($$pre) {
    $27 = $f + 108 | 0;
    HEAP32[$27 >> 2] = $$pre + 1 - $$pre3 + (HEAP32[$27 >> 2] | 0);
   }
   $32 = $$pre3 + -1 | 0;
   if ((HEAPU8[$32 >> 0] | 0 | 0) == ($6 | 0)) {
    $$0 = $6;
    return $$0 | 0;
   }
   HEAP8[$32 >> 0] = $6;
   $$0 = $6;
   return $$0 | 0;
  }
 }
 HEAP32[$f + 100 >> 2] = 0;
 $$0 = -1;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 65535 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6 & 65535;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $18 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[48360] | 0)) if (___cxa_guard_acquire(48360) | 0) {
  if (!(HEAP8[53072] | 0)) if (___cxa_guard_acquire(53072) | 0) {
   $9 = 52784;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 53072);
   ___cxa_atexit(198, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(53072);
  }
  __THREW__ = 0;
  invoke_iii(38, 52784, 53080) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(38, 52796, 53096) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    HEAP32[12088] = 52784;
    ___cxa_guard_release(48360);
    break;
   }
  }
  $18 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48360);
  ___resumeException($18 | 0);
 } while (0);
 return HEAP32[12088] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $18 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[48344] | 0)) if (___cxa_guard_acquire(48344) | 0) {
  if (!(HEAP8[53400] | 0)) if (___cxa_guard_acquire(53400) | 0) {
   $9 = 53112;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 53400);
   ___cxa_atexit(197, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(53400);
  }
  __THREW__ = 0;
  invoke_iii(19, 53112, 53408) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 53124, 53416) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    HEAP32[12084] = 53112;
    ___cxa_guard_release(48344);
    break;
   }
  }
  $18 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48344);
  ___resumeException($18 | 0);
 } while (0);
 return HEAP32[12084] | 0;
}

function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $2 = 0, $5 = 0, $7 = 0, $9 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 __THREW__ = 0;
 $1 = invoke_iiii(42, $__s | 0, $__format | 0, $__va | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  if ($0) {
   __THREW__ = 0;
   invoke_ii(72, $0 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $14 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($14);
   }
  }
  ___resumeException($9 | 0);
 } else {
  if ($0) {
   __THREW__ = 0;
   invoke_ii(72, $0 | 0) | 0;
   $5 = __THREW__;
   __THREW__ = 0;
   if ($5 & 1) {
    $7 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($7);
   }
  }
  STACKTOP = sp;
  return $1 | 0;
 }
 return 0;
}

function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $13 = 0;
  $14 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  if (($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $13 = -1;
   $14 = -1;
  } else {
   $13 = tempRet0;
   $14 = $6;
  }
 } while (0);
 tempRet0 = $13;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $5 = HEAP32[$this + 12 >> 2] | 0;
  $6 = $this + ($5 << 3) + 16 | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this + 16 | 0, $info, $adjustedPtr, $path_below);
  if (($5 | 0) > 1) {
   $9 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0, $info, $adjustedPtr, $path_below);
    if (HEAP8[$9 >> 0] | 0) break;
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $6 >>> 0);
  }
 }
 return;
}

function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp, $__len, $__signd, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__signd = $__signd | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$1$lcssa = 0, $$1$ph = 0, $10 = 0, $6 = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 512)) $$1$ph = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1$ph = $$0 + 1 | 0;
 }
 $$01 = $__len;
 $$1 = $$1$ph;
 while (1) {
  $6 = HEAP8[$$01 >> 0] | 0;
  if (!($6 << 24 >> 24)) {
   $$1$lcssa = $$1;
   break;
  }
  HEAP8[$$1 >> 0] = $6;
  $$01 = $$01 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 $10 = $__flags & 74;
 do if (($10 | 0) == 8) if (!($__flags & 16384)) {
  HEAP8[$$1$lcssa >> 0] = 120;
  break;
 } else {
  HEAP8[$$1$lcssa >> 0] = 88;
  break;
 } else if (($10 | 0) == 64) HEAP8[$$1$lcssa >> 0] = 111; else if ($__signd) {
  HEAP8[$$1$lcssa >> 0] = 100;
  break;
 } else {
  HEAP8[$$1$lcssa >> 0] = 117;
  break;
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $3 = 0, $__p$0 = 0, $__p$0$ph = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 $3 = $2 >> 2;
 if ($3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($3 >>> 0 < 2) {
  HEAP8[$this >> 0] = $2 >>> 1;
  $__p$0$ph = $this + 4 | 0;
 } else {
  $10 = $3 + 4 & -4;
  $12 = __Znwj($10 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $12;
  HEAP32[$this >> 2] = $10 | 1;
  HEAP32[$this + 4 >> 2] = $3;
  $__p$0$ph = $12;
 }
 $18 = ($__last - $0 | 0) >>> 2;
 $$0 = $__first;
 $__p$0 = $__p$0$ph;
 while (1) {
  if (($$0 | 0) == ($__last | 0)) break;
  HEAP32[$__p$0 >> 2] = HEAP32[$$0 >> 2];
  $$0 = $$0 + 4 | 0;
  $__p$0 = $__p$0 + 4 | 0;
 }
 HEAP32[$__p$0$ph + ($18 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $28 = 0, $4 = 0, $8 = 0;
 if ($__n) {
  $1 = HEAP8[$this >> 0] | 0;
  if (!($1 & 1)) {
   $16 = 10;
   $8 = $1;
  } else {
   $4 = HEAP32[$this >> 2] | 0;
   $16 = ($4 & -2) + -1 | 0;
   $8 = $4 & 255;
  }
  if (!($8 & 1)) $15 = ($8 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
  if (($16 - $15 | 0) >>> 0 < $__n >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $16, $__n - $16 + $15 | 0, $15, $15, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $8;
  if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
  _memset($27 + $15 | 0, $__c | 0, $__n | 0) | 0;
  $28 = $15 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $28 << 1; else HEAP32[$this + 4 >> 2] = $28;
  HEAP8[$27 + $28 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $6 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $6 = 10;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $6 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($6 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $6, $__n - $6 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 1 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _memmove($14 | 0, $__s | 0, $__n | 0) | 0;
  HEAP8[$14 + $__n >> 0] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   label = 5;
   break;
  }
  if (($10 | 0) == 2) {
   label = 5;
   break;
  } else if (($10 | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31; else if ((label | 0) == 5) $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   label = 5;
   break;
  }
  if (($10 | 0) == 2) {
   label = 5;
   break;
  } else if (($10 | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31; else if ((label | 0) == 5) $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $6 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $6 = 1;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $6 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($6 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $6, $__n - $6 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 4 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _wmemmove($14, $__s, $__n) | 0;
  HEAP32[$14 + ($__n << 2) >> 2] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $15 = 0, $2 = 0, $9 = 0, $__p$0 = 0, $__p$0$ph = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($2 >>> 0 < 11) {
  HEAP8[$this >> 0] = $2 << 1;
  $__p$0$ph = $this + 1 | 0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$this + 8 >> 2] = $10;
  HEAP32[$this >> 2] = $9 | 1;
  HEAP32[$this + 4 >> 2] = $2;
  $__p$0$ph = $10;
 }
 $15 = $__last - $0 | 0;
 $$0 = $__first;
 $__p$0 = $__p$0$ph;
 while (1) {
  if (($$0 | 0) == ($__last | 0)) break;
  HEAP8[$__p$0 >> 0] = HEAP8[$$0 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $__p$0 = $__p$0 + 1 | 0;
 }
 HEAP8[$__p$0$ph + $15 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $14 = 0, $15 = 0, $24 = 0, $25 = 0, $3 = 0, $7 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $15 = 10;
  $7 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $15 = ($3 & -2) + -1 | 0;
  $7 = $3 & 255;
 }
 if (!($7 & 1)) $14 = ($7 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 if (($15 - $14 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $15, $__n - $15 + $14 | 0, $14, $14, 0, $__n, $__s); else if ($__n) {
  if (!($7 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
  _memcpy($24 + $14 | 0, $__s | 0, $__n | 0) | 0;
  $25 = $14 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $25 << 1; else HEAP32[$this + 4 >> 2] = $25;
  HEAP8[$24 + $25 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($this, $__c, $__pos) {
 $this = $this | 0;
 $__c = $__c | 0;
 $__pos = $__pos | 0;
 var $$01$i = 0, $$lcssa = 0, $0 = 0, $10 = 0, $15 = 0, $17 = 0, $__ps$0$i = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $10 = ($0 & 255) >>> 1;
  $15 = $this + 1 | 0;
 } else {
  $10 = HEAP32[$this + 4 >> 2] | 0;
  $15 = HEAP32[$this + 8 >> 2] | 0;
 }
 do if (!$10) $$01$i = -1; else {
  $__ps$0$i = $15 + ($10 >>> 0 > $__pos >>> 0 ? $__pos + 1 | 0 : $10) | 0;
  while (1) {
   if (($__ps$0$i | 0) == ($15 | 0)) {
    label = 9;
    break;
   }
   $17 = $__ps$0$i + -1 | 0;
   if ((HEAP8[$17 >> 0] | 0) == $__c << 24 >> 24) {
    $$lcssa = $17;
    label = 8;
    break;
   } else $__ps$0$i = $17;
  }
  if ((label | 0) == 8) {
   $$01$i = $$lcssa - $15 | 0;
   break;
  } else if ((label | 0) == 9) {
   $$01$i = -1;
   break;
  }
 } while (0);
 return $$01$i | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 47024, 47056 | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 46872, 46880 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $14 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 44640;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 48040) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($14 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  HEAP32[$this + 36 >> 2] = $3;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $14 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 44896;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 48032) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($14 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  HEAP32[$this + 36 >> 2] = $3;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this, $__pos1, $__n1, $__s, $__n2) {
 $this = $this | 0;
 $__pos1 = $__pos1 | 0;
 $__n1 = $__n1 | 0;
 $__s = $__s | 0;
 $__n2 = $__n2 | 0;
 var $0 = 0, $10 = 0, $12 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $7 = 0, $__r$0 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 if (($__n2 | 0) == -1 | $7 >>> 0 < $__pos1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 $10 = $7 - $__pos1 | 0;
 $12 = $10 >>> 0 < $__n1 >>> 0 ? $10 : $__n1;
 if ($2) $17 = $this + 1 | 0; else $17 = HEAP32[$this + 8 >> 2] | 0;
 $18 = $12 >>> 0 > $__n2 >>> 0;
 $20 = _memcmp($17 + $__pos1 | 0, $__s, $18 ? $__n2 : $12) | 0;
 if (!$20) if ($12 >>> 0 < $__n2 >>> 0) $__r$0 = -1; else return $18 & 1 | 0; else $__r$0 = $20;
 return $__r$0 | 0;
}

function _scalbn($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $$0 = 0, $1 = 0.0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $5 = 0, $8 = 0.0, $9 = 0, $y$0 = 0.0;
 if (($n | 0) > 1023) {
  $1 = $x * 8988465674311579538646525.0e283;
  $2 = $n + -1023 | 0;
  if (($2 | 0) > 1023) {
   $5 = $n + -2046 | 0;
   $$0 = ($5 | 0) > 1023 ? 1023 : $5;
   $y$0 = $1 * 8988465674311579538646525.0e283;
  } else {
   $$0 = $2;
   $y$0 = $1;
  }
 } else if (($n | 0) < -1022) {
  $8 = $x * 2.2250738585072014e-308;
  $9 = $n + 1022 | 0;
  if (($9 | 0) < -1022) {
   $12 = $n + 2044 | 0;
   $$0 = ($12 | 0) < -1022 ? -1022 : $12;
   $y$0 = $8 * 2.2250738585072014e-308;
  } else {
   $$0 = $9;
   $y$0 = $8;
  }
 } else {
  $$0 = $n;
  $y$0 = $x;
 }
 $15 = _bitshift64Shl($$0 + 1023 | 0, 0, 52) | 0;
 $16 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $15;
 HEAP32[tempDoublePtr + 4 >> 2] = $16;
 return +($y$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __Z23jsonnet_static_analysisP3AST($ast) {
 $ast = $ast | 0;
 var $0 = 0, $1 = 0, $10 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $4;
 __THREW__ = 0;
 invoke_viiii(15, $0 | 0, $ast | 0, 0, $1 | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$4 >> 2] | 0);
  ___resumeException($10 | 0);
 } else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$4 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $6 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $3 = $__v + 4 | 0;
 $6 = (HEAP32[$1 >> 2] | 0) - $0 | 0;
 $10 = (HEAP32[$3 >> 2] | 0) + (0 - ($6 >> 2) << 2) | 0;
 HEAP32[$3 >> 2] = $10;
 _memcpy($10 | 0, $0 | 0, $6 | 0) | 0;
 $11 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $11;
 $13 = $__v + 8 | 0;
 $14 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$13 >> 2] = $14;
 $16 = $this + 8 | 0;
 $17 = $__v + 12 | 0;
 $18 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = $18;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $14 = 0, $15 = 0, $5 = 0, $6 = 0;
 if (!(HEAP32[$this + 64 >> 2] | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $5 = $this + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ((HEAP32[$this + 8 >> 2] | 0) >>> 0 >= $6 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$5 >> 2] = $6 + -1;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 88 >> 2] & 16)) {
  $14 = $__c & 255;
  $15 = $6 + -1 | 0;
  if ($14 << 24 >> 24 == (HEAP8[$15 >> 0] | 0)) {
   $$pre$phi2Z2D = $14;
   $$pre$phiZ2D = $15;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $6 + -1 | 0;
 }
 HEAP32[$5 >> 2] = $$pre$phiZ2D;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 return $$0 | 0;
}

function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $2 = 0, $3 = 0, label = 0;
 $$01 = $__lo2;
 $$02 = $__lo1;
 while (1) {
  if (($$01 | 0) == ($__hi2 | 0)) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  if (($$02 | 0) == ($__hi1 | 0)) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP8[$$02 >> 0] | 0;
  $3 = HEAP8[$$01 >> 0] | 0;
  if ($2 << 24 >> 24 < $3 << 24 >> 24) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  if ($3 << 24 >> 24 < $2 << 24 >> 24) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $$01 = $$01 + 1 | 0;
  $$02 = $$02 + 1 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1; else if ((label | 0) == 8) $$0 = $$0$ph;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _wcrtomb($s, $wc, $st) {
 $s = $s | 0;
 $wc = $wc | 0;
 $st = $st | 0;
 var $$0 = 0;
 if (!$s) {
  $$0 = 1;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 128) {
  HEAP8[$s >> 0] = $wc;
  $$0 = 1;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 2048) {
  HEAP8[$s >> 0] = $wc >>> 6 | 192;
  HEAP8[$s + 1 >> 0] = $wc & 63 | 128;
  $$0 = 2;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 55296 | ($wc & -8192 | 0) == 57344) {
  HEAP8[$s >> 0] = $wc >>> 12 | 224;
  HEAP8[$s + 1 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc & 63 | 128;
  $$0 = 3;
  return $$0 | 0;
 }
 if (($wc + -65536 | 0) >>> 0 < 1048576) {
  HEAP8[$s >> 0] = $wc >>> 18 | 240;
  HEAP8[$s + 1 >> 0] = $wc >>> 12 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 3 >> 0] = $wc & 63 | 128;
  $$0 = 4;
  return $$0 | 0;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, $id) {
 $this = $this | 0;
 $f = $f | 0;
 $id = $id | 0;
 var $0 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $20 = 0, $3 = 0;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = $this + 8 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 do if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $16 = $3; else {
  __THREW__ = 0;
  invoke_vii(107, $0 | 0, $id + 1 | 0);
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   $16 = HEAP32[$0 >> 2] | 0;
   break;
  }
  $12 = ___cxa_find_matching_catch() | 0;
  if ($f) __ZNSt3__114__shared_count16__release_sharedEv($f) | 0;
  ___resumeException($12 | 0);
 } while (0);
 $17 = HEAP32[$16 + ($id << 2) >> 2] | 0;
 if (!$17) $20 = $16; else {
  __ZNSt3__114__shared_count16__release_sharedEv($17) | 0;
  $20 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$20 + ($id << 2) >> 2] = $f;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $2 = 0, $3 = 0, label = 0;
 $$01 = $__lo2;
 $$02 = $__lo1;
 while (1) {
  if (($$01 | 0) == ($__hi2 | 0)) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  if (($$02 | 0) == ($__hi1 | 0)) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP32[$$02 >> 2] | 0;
  $3 = HEAP32[$$01 >> 2] | 0;
  if (($2 | 0) < ($3 | 0)) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  if (($3 | 0) < ($2 | 0)) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $$01 = $$01 + 4 | 0;
  $$02 = $$02 + 4 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1; else if ((label | 0) == 8) $$0 = $$0$ph;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZN15BuiltinFunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33912;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN8FunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 36184;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN5ArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 36120;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN5ApplyD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35800;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $11 = 0, $3 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $3 + 1;
   $storemerge = HEAP8[$3 >> 0] | 0;
  } else {
   $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
   if (($11 | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $storemerge = $11 & 255;
  }
  HEAP8[$$0 >> 0] = $storemerge;
  $$0 = $$0 + 1 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $11 = 0, $3 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $3 + 4;
   $storemerge = HEAP32[$3 >> 2] | 0;
  } else {
   $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
   if (($11 | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   } else $storemerge = $11;
  }
  HEAP32[$$0 >> 2] = $storemerge;
  $$0 = $$0 + 4 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZSt11__terminatePFvvE($func) {
 $func = $func | 0;
 var $0 = 0, $10 = 0, $12 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 __THREW__ = 0;
 invoke_v($func | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_vii(70, 41136, sp | 0);
  $2 = __THREW__;
  __THREW__ = 0;
  if (!($2 & 1)) {}
 }
 $4 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch($4 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(70, 41176, $vararg_buffer1 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if (!($6 & 1)) {}
 $8 = ___cxa_find_matching_catch(0) | 0;
 __THREW__ = 0;
 invoke_v(2);
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $12 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($12);
 } else ___clang_call_terminate($8);
}

function _frexp($x, $e) {
 $x = +$x;
 $e = $e | 0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $2 = 0, $4 = 0, $7 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $2 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $4 = $2 & 2047;
 if (($4 | 0) == 2047) {
  $$0 = $x;
  return +$$0;
 } else if (!$4) {
  if ($x != 0.0) {
   $7 = +_frexp($x * 18446744073709551616.0, $e);
   $$01 = $7;
   $storemerge = (HEAP32[$e >> 2] | 0) + -64 | 0;
  } else {
   $$01 = $x;
   $storemerge = 0;
  }
  HEAP32[$e >> 2] = $storemerge;
  $$0 = $$01;
  return +$$0;
 } else {
  HEAP32[$e >> 2] = $4 + -1022;
  HEAP32[tempDoublePtr >> 2] = $0;
  HEAP32[tempDoublePtr + 4 >> 2] = $1 & -2146435073 | 1071644672;
  $$0 = +HEAPF64[tempDoublePtr >> 3];
  return +$$0;
 }
 return +(0.0);
}

function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 44752;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 invoke_vii(4, $this | 0, $0 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $8 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($8 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 45008;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 invoke_vii(6, $this | 0, $0 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $8 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($8 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN15BuiltinFunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33912;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN8FunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 36184;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN5ArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 36120;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZN5ApplyD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35800;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 33968;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function _strtold_l($s, $p, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $loc = $loc | 0;
 var $0 = 0, $1 = 0, $12 = 0, $16 = 0, $4 = 0.0, $f$i$i = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i$i = sp;
 dest = $f$i$i + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f$i$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f$i$i + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f$i$i + 44 >> 2] = $s;
 HEAP32[$f$i$i + 76 >> 2] = -1;
 ___shlim($f$i$i, 0);
 $4 = +___floatscan($f$i$i, 2, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f$i$i + 108 >> 2] | 0) | 0;
 if (!$p) {
  STACKTOP = sp;
  return +$4;
 }
 if (!$12) $16 = $s; else $16 = $s + $12 | 0;
 HEAP32[$p >> 2] = $16;
 STACKTOP = sp;
 return +$4;
}

function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $12 = 0, $15 = 0, $20 = 0, $8 = 0, $9 = 0, $mem$0 = 0;
 if (!$oldmem) {
  $mem$0 = _malloc($bytes) | 0;
  return $mem$0 | 0;
 }
 if ($bytes >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 if ($bytes >>> 0 < 11) $8 = 16; else $8 = $bytes + 11 & -8;
 $9 = _try_realloc_chunk($oldmem + -8 | 0, $8) | 0;
 if ($9) {
  $mem$0 = $9 + 8 | 0;
  return $mem$0 | 0;
 }
 $12 = _malloc($bytes) | 0;
 if (!$12) {
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $15 = HEAP32[$oldmem + -4 >> 2] | 0;
 $20 = ($15 & -8) - (($15 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($12 | 0, $oldmem | 0, ($20 >>> 0 < $bytes >>> 0 ? $20 : $bytes) | 0) | 0;
 _free($oldmem);
 $mem$0 = $12;
 return $mem$0 | 0;
}

function __ZN5LocalD0Ev($this) {
 $this = $this | 0;
 var $14 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 34032;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 33968;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $14 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZdlPv($this);
  return;
 }
 $7 = $this + 40 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) != ($4 | 0)) HEAP32[$7 >> 2] = $8 + (~(($8 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $14 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__18ios_base5clearEj($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 var $0 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $3 = (HEAP32[$this + 24 >> 2] | 0) == 0;
 HEAP32[$this + 16 >> 2] = $3 & 1 | $state;
 if (!(($3 & 1 | $state) & HEAP32[$this + 20 >> 2])) {
  STACKTOP = sp;
  return;
 }
 $12 = ___cxa_allocate_exception(16) | 0;
 __ZNSt3__117iostream_categoryEv() | 0;
 $13 = $0;
 HEAP32[$13 >> 2] = 1;
 HEAP32[$13 + 4 >> 2] = 45464;
 __THREW__ = 0;
 invoke_viii(14, $12 | 0, 45520, $0 | 0);
 $17 = __THREW__;
 __THREW__ = 0;
 if ($17 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($12 | 0);
  ___resumeException($19 | 0);
 } else ___cxa_throw($12 | 0, 45568, 109);
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $3 = 0, $6 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   $6 = HEAP32[$$0 >> 2] | 0;
   HEAP32[$0 >> 2] = $3 + 4;
   HEAP32[$3 >> 2] = $6;
  } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$0 >> 2] | 0) | 0) == -1) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $3 = 0, $6 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   $6 = HEAP8[$$0 >> 0] | 0;
   HEAP32[$0 >> 2] = $3 + 1;
   HEAP8[$3 >> 0] = $6;
  } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$0 >> 0] | 0) | 0) == -1) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $$0 = $$0 + 1 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) HEAP32[$__err >> 2] = 4;
  $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $10$0 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 $10$0 = _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
 return $10$0 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN5LocalD2Ev($this) {
 $this = $this | 0;
 var $14 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 34032;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 33968;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $14 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  return;
 }
 $7 = $this + 40 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) != ($4 | 0)) HEAP32[$7 >> 2] = $8 + (~(($8 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $14 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, $info, $dst_ptr, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function _strtod($s, $p) {
 $s = $s | 0;
 $p = $p | 0;
 var $0 = 0, $1 = 0, $12 = 0, $16 = 0, $4 = 0.0, $f$i = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 dest = $f$i + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f$i + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f$i + 44 >> 2] = $s;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $4 = +___floatscan($f$i, 1, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) | 0;
 if (!$p) {
  STACKTOP = sp;
  return +$4;
 }
 if (!$12) $16 = $s; else $16 = $s + $12 | 0;
 HEAP32[$p >> 2] = $16;
 STACKTOP = sp;
 return +$4;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $0 = 0, $1 = 0, $6 = 0, $9 = 0;
 $0 = $info + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  HEAP32[$0 >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
 } else {
  if (($1 | 0) != ($adjustedPtr | 0)) {
   $9 = $info + 36 | 0;
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $6 = $info + 24 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 2) HEAP32[$6 >> 2] = $path_below;
 } while (0);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _memcmp($vl, $vr, $n) {
 $vl = $vl | 0;
 $vr = $vr | 0;
 $n = $n | 0;
 var $$03 = 0, $$lcssa = 0, $$lcssa13 = 0, $1 = 0, $11 = 0, $2 = 0, $l$04 = 0, $r$05 = 0, label = 0;
 if (!$n) {
  $11 = 0;
  return $11 | 0;
 }
 $$03 = $n;
 $l$04 = $vl;
 $r$05 = $vr;
 while (1) {
  $1 = HEAP8[$l$04 >> 0] | 0;
  $2 = HEAP8[$r$05 >> 0] | 0;
  if ($1 << 24 >> 24 != $2 << 24 >> 24) {
   $$lcssa = $1;
   $$lcssa13 = $2;
   label = 5;
   break;
  }
  $$03 = $$03 + -1 | 0;
  if (!$$03) {
   label = 6;
   break;
  } else {
   $l$04 = $l$04 + 1 | 0;
   $r$05 = $r$05 + 1 | 0;
  }
 }
 if ((label | 0) == 5) {
  $11 = ($$lcssa & 255) - ($$lcssa13 & 255) | 0;
  return $11 | 0;
 } else if ((label | 0) == 6) {
  $11 = 0;
  return $11 | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($this, $__str, $__pos, $__n, $__a) {
 $this = $this | 0;
 $__str = $__str | 0;
 $__pos = $__pos | 0;
 $__n = $__n | 0;
 $__a = $__a | 0;
 var $0 = 0, $13 = 0, $14 = 0, $2 = 0, $7 = 0;
 $0 = HEAP8[$__str >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$__str + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) $13 = $__str + 1 | 0; else $13 = HEAP32[$__str + 8 >> 2] | 0;
 $14 = $7 - $__pos | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $13 + $__pos | 0, $14 >>> 0 < $__n >>> 0 ? $14 : $__n);
 return;
}

function _vasprintf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $2 = 0, $5 = 0, $9 = 0, $ap2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap2 = sp;
 $0 = _malloc(240) | 0;
 do if (!$0) $$0 = -1; else {
  HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
  $2 = _vsnprintf($0, 240, $fmt, $ap2) | 0;
  if ($2 >>> 0 < 240) {
   $5 = _realloc($0, $2 + 1 | 0) | 0;
   HEAP32[$s >> 2] = ($5 | 0) != 0 ? $5 : $0;
   $$0 = $2;
   break;
  }
  _free($0);
  if (($2 | 0) < 0) $$0 = -1; else {
   $9 = $2 + 1 | 0;
   $10 = _malloc($9) | 0;
   HEAP32[$s >> 2] = $10;
   if (!$10) $$0 = -1; else $$0 = _vsnprintf($10, $9, $fmt, $ap) | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($obj) {
 $obj = $obj | 0;
 var $$lcssa = 0, $1 = 0, $10 = 0, $5 = 0, $obj$tr3 = 0, label = 0;
 if (!$obj) return 1;
 $obj$tr3 = $obj;
 do {
  $1 = ___dynamic_cast($obj$tr3, 36784, 37120, 0) | 0;
  if ($1) {
   $$lcssa = $1;
   label = 4;
   break;
  }
  $10 = ___dynamic_cast($obj$tr3, 36784, 37176, 0) | 0;
  if (!$10) break;
  $obj$tr3 = HEAP32[$10 + 8 >> 2] | 0;
 } while (($obj$tr3 | 0) != 0);
 if ((label | 0) == 4) {
  $5 = __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$$lcssa + 8 >> 2] | 0) | 0;
  return (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$$lcssa + 12 >> 2] | 0) | 0) + $5 | 0;
 }
 return 1;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 31]($4, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $0 = 0, $3 = 0, $8 = 0, $9 = 0;
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 do if (!$__cap) $8 = 0; else {
  $3 = $__a + 112 | 0;
  if ($__cap >>> 0 < 29 & (HEAP8[$3 >> 0] | 0) == 0) {
   HEAP8[$3 >> 0] = 1;
   $8 = $__a;
   break;
  } else {
   $8 = __Znwj($__cap << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$this >> 2] = $8;
 $9 = $8 + ($__start << 2) | 0;
 HEAP32[$this + 8 >> 2] = $9;
 HEAP32[$this + 4 >> 2] = $9;
 HEAP32[$0 >> 2] = $8 + ($__cap << 2);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 7]($8, $info, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb, $__ne, $__iob) {
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__iob = $__iob | 0;
 var $$0 = 0, $11 = 0, $2 = 0, $3 = 0, label = 0;
 $2 = HEAP32[$__iob + 4 >> 2] & 176;
 do if (($2 | 0) == 16) {
  $3 = HEAP8[$__nb >> 0] | 0;
  if ($3 << 24 >> 24 == 43 | $3 << 24 >> 24 == 45) {
   $$0 = $__nb + 1 | 0;
   break;
  }
  if (($__ne - $__nb | 0) > 1 & $3 << 24 >> 24 == 48) {
   $11 = HEAP8[$__nb + 1 >> 0] | 0;
   if ($11 << 24 >> 24 == 88 | $11 << 24 >> 24 == 120) $$0 = $__nb + 2 | 0; else label = 7;
  } else label = 7;
 } else if (($2 | 0) == 32) $$0 = $__ne; else label = 7; while (0);
 if ((label | 0) == 7) $$0 = $__nb;
 return $$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $3 = 0, $9 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $12 = $3;
 } else $12 = $1;
 if (!(HEAP32[$this + 48 >> 2] & 8)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $9 = $this + 16 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $14 = HEAP32[$this + 12 >> 2] | 0;
 if ($10 >>> 0 < $12 >>> 0) {
  HEAP32[$9 >> 2] = $12;
  $16 = $12;
 } else $16 = $10;
 if ($14 >>> 0 >= $16 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 $$0 = HEAPU8[$14 >> 0] | 0;
 return $$0 | 0;
}

function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nb, $__ne, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $0 = 0, $1 = 0, $fmt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $fmt = sp;
 HEAP8[$fmt >> 0] = 37;
 $0 = $fmt + 1 | 0;
 HEAP8[$0 >> 0] = $__fmt;
 $1 = $fmt + 2 | 0;
 HEAP8[$1 >> 0] = $__mod;
 HEAP8[$fmt + 3 >> 0] = 0;
 if ($__mod << 24 >> 24) {
  HEAP8[$0 >> 0] = $__mod;
  HEAP8[$1 >> 0] = $__fmt;
 }
 HEAP32[$__ne >> 2] = $__nb + (_strftime_l($__nb | 0, (HEAP32[$__ne >> 2] | 0) - $__nb | 0, $fmt | 0, $__tm | 0, HEAP32[$this >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function _strtoll($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $4 = 0, $6 = 0, $7 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 $4 = $f$i + 8 | 0;
 HEAP32[$4 >> 2] = ($s | 0) < 0 ? -1 : $s + 2147483647 | 0;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $6 = ___intscan($f$i, $base, 1, 0, -2147483648) | 0;
 $7 = tempRet0;
 if (!$p) {
  tempRet0 = $7;
  STACKTOP = sp;
  return $6 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$4 >> 2] | 0));
 tempRet0 = $7;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $4 = 0, $6 = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP8[$this + 128 >> 0] = 0;
 do if ($__n) {
  __THREW__ = 0;
  invoke_vii(108, $this | 0, $__n | 0);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
   ___resumeException($6 | 0);
  } else {
   __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
   break;
  }
 } while (0);
 return;
}

function _strtoull($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $4 = 0, $6 = 0, $7 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 $4 = $f$i + 8 | 0;
 HEAP32[$4 >> 2] = ($s | 0) < 0 ? -1 : $s + 2147483647 | 0;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $6 = ___intscan($f$i, $base, 1, -1, -1) | 0;
 $7 = tempRet0;
 if (!$p) {
  tempRet0 = $7;
  STACKTOP = sp;
  return $6 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$4 >> 2] | 0));
 tempRet0 = $7;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($this, $__s, $__sz, $__reserve) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 $__reserve = $__reserve | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__reserve >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__reserve >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__reserve + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function ___toread($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $15 = 0, $2 = 0, $21 = 0, $6 = 0, $8 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = $f + 20 | 0;
 $8 = $f + 44 | 0;
 if ((HEAP32[$6 >> 2] | 0) >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
 HEAP32[$f + 16 >> 2] = 0;
 HEAP32[$f + 28 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $15 = HEAP32[$f >> 2] | 0;
 if (!($15 & 20)) {
  $21 = HEAP32[$8 >> 2] | 0;
  HEAP32[$f + 8 >> 2] = $21;
  HEAP32[$f + 4 >> 2] = $21;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!($15 & 4)) {
  $$0 = -1;
  return $$0 | 0;
 }
 HEAP32[$f >> 2] = $15 | 32;
 $$0 = -1;
 return $$0 | 0;
}

function __ZN13LiteralStringD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 33984;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 33968;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function __ZN12RuntimeErrorD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 $1 = HEAP32[$this >> 2] | 0;
 if (!$1) return;
 $3 = $this + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $11 = $1; else {
  $7 = $4;
  do {
   $6 = $7 + -40 | 0;
   HEAP32[$3 >> 2] = $6;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $7 = HEAP32[$3 >> 2] | 0;
  } while (($7 | 0) != ($1 | 0));
  $11 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($11);
 return;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN9ImportstrD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 36056;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 33968;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function __ZN6ImportD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 36072;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 33968;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$01 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 if (!(HEAP8[$this + 44 >> 0] | 0)) {
  $$01 = $__s;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($__n | 0)) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$01 >> 2] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $$01 = $$01 + 4 | 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $$0 = $__i$0$lcssa;
 } else $$0 = _fwrite($__s | 0, 4, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$01 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 if (!(HEAP8[$this + 44 >> 0] | 0)) {
  $$01 = $__s;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($__n | 0)) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$01 >> 0] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $$01 = $$01 + 1 | 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $$0 = $__i$0$lcssa;
 } else $$0 = _fwrite($__s | 0, 1, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $info, $adjustedPtr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $0 = 0, $2 = 0, $7 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 do if ($7 >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n - $7 | 0, $__c) | 0; else if ($2) {
  HEAP8[$this + $__n + 1 >> 0] = 0;
  HEAP8[$this >> 0] = $__n << 1;
  break;
 } else {
  HEAP8[(HEAP32[$this + 8 >> 2] | 0) + $__n >> 0] = 0;
  HEAP32[$this + 4 >> 2] = $__n;
  break;
 } while (0);
 return;
}

function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this, $msg, $ec) {
 $this = $this | 0;
 $msg = $msg | 0;
 $ec = $ec | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $0 = sp;
 $1 = $ec;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $0;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[$tmpcast$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $tmpcast$byval_copy, $msg);
 HEAP32[$this >> 2] = 45488;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s, $__n, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__n = $__n | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsnprintf($__s, $__n, $__format, $__va) | 0;
 if ($0) {
  __THREW__ = 0;
  invoke_ii(72, $0 | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $5 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($5);
  }
 }
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN13LiteralStringD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 33984;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 33968;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN9ImportstrD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 36056;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 33968;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZN6ImportD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 36072;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 33968;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__sz + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 2) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__sz + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $8;
 }
 _wmemcpy($__p$0, $__s, $__sz) | 0;
 HEAP32[$__p$0 + ($__sz << 2) >> 2] = 0;
 return;
}

function _wmemmove($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $5 = 0;
 $5 = ($n | 0) == 0;
 if ($d - $s >> 2 >>> 0 < $n >>> 0) {
  if ($5) return $d | 0;
  $$in = $n;
  do {
   $$in = $$in + -1 | 0;
   HEAP32[$d + ($$in << 2) >> 2] = HEAP32[$s + ($$in << 2) >> 2];
  } while (($$in | 0) != 0);
  return $d | 0;
 } else {
  if ($5) return $d | 0;
  $$025 = $s;
  $$07 = $d;
  $$16 = $n;
  while (1) {
   $$16 = $$16 + -1 | 0;
   HEAP32[$$07 >> 2] = HEAP32[$$025 >> 2];
   if (!$$16) break; else {
    $$025 = $$025 + 4 | 0;
    $$07 = $$07 + 4 | 0;
   }
  }
  return $d | 0;
 }
 return 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this, $__sz) {
 $this = $this | 0;
 $__sz = $__sz | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $6 = $1 - $2 >> 2;
 if ($6 >>> 0 < $__sz >>> 0) __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__sz - $6 | 0); else if ($6 >>> 0 > $__sz >>> 0) {
  $10 = $2 + ($__sz << 2) | 0;
  $11 = $1;
  while (1) {
   if (($11 | 0) == ($10 | 0)) break;
   $13 = $11 + -4 | 0;
   HEAP32[$0 >> 2] = $13;
   $11 = $13;
  }
 }
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) $11 = 1; else {
  __THREW__ = 0;
  $3 = invoke_ii(72, $1 | 0) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $12 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($12);
  }
  if (!$3) $11 = 4; else {
   __THREW__ = 0;
   invoke_ii(72, $3 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($9);
   } else $11 = 4;
  }
 }
 return $11 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[48424] | 0)) if (___cxa_guard_acquire(48424) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 48432) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 48408, 48432, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 48408, ___dso_handle | 0) | 0;
    ___cxa_guard_release(48424);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48424);
  ___resumeException($9 | 0);
 } while (0);
 return 48408;
}

function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[48792] | 0)) if (___cxa_guard_acquire(48792) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 48800) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 48776, 48800, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 48776, ___dso_handle | 0) | 0;
    ___cxa_guard_release(48792);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48792);
  ___resumeException($9 | 0);
 } while (0);
 return 48776;
}

function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[48640] | 0)) if (___cxa_guard_acquire(48640) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 48648) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 48624, 48648, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 48624, ___dso_handle | 0) | 0;
    ___cxa_guard_release(48640);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48640);
  ___resumeException($9 | 0);
 } while (0);
 return 48624;
}

function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[48528] | 0)) if (___cxa_guard_acquire(48528) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 48536) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 48512, 48536, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 48512, ___dso_handle | 0) | 0;
    ___cxa_guard_release(48528);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(48528);
  ___resumeException($9 | 0);
 } while (0);
 return 48512;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 11) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__n + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $7;
 }
 _memset($__p$0 | 0, $__c | 0, $__n | 0) | 0;
 HEAP8[$__p$0 + $__n >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 2) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__n + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $8;
 }
 _wmemset($__p$0, $__c, $__n) | 0;
 HEAP32[$__p$0 + ($__n << 2) >> 2] = 0;
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 572;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 612;
 HEAP32[$this + ($2 + 8) >> 2] = 592;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 return;
}

function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsscanf($__s, $__format, $__va) | 0;
 if ($0) {
  __THREW__ = 0;
  invoke_ii(72, $0 | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $5 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($5);
  }
 }
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $3 = 0, $i$0 = 0;
 HEAP32[$this >> 2] = 47888;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 $i$0 = 0;
 while (1) {
  $3 = HEAP32[$0 >> 2] | 0;
  if ($i$0 >>> 0 >= (HEAP32[$1 >> 2] | 0) - $3 >> 2 >>> 0) break;
  $10 = HEAP32[$3 + ($i$0 << 2) >> 2] | 0;
  if ($10) __ZNSt3__114__shared_count16__release_sharedEv($10) | 0;
  $i$0 = $i$0 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 144 | 0);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $info, $adjustedPtr, $path_below);
 }
 return;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39816;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 39952;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 32 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 __THREW__ = 0;
 invoke_ii(68, 43656) | 0;
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_ii(68, 43832) | 0;
  $2 = __THREW__;
  __THREW__ = 0;
  if (!($2 & 1)) {
   __THREW__ = 0;
   invoke_ii(71, 44008) | 0;
   $4 = __THREW__;
   __THREW__ = 0;
   if (!($4 & 1)) {
    __THREW__ = 0;
    invoke_ii(71, 44184) | 0;
    $6 = __THREW__;
    __THREW__ = 0;
    if (!($6 & 1)) return;
   }
  }
 }
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39536;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 572;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 612;
 HEAP32[$this + ($2 + 8) >> 2] = 592;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 return;
}

function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48040) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) __ZNSt3__121__throw_runtime_errorEPKc(44848);
 return;
}

function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48032) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) __ZNSt3__121__throw_runtime_errorEPKc(44848);
 return;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39816;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 39952;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 32 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39536;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 while (1) {
  if (($3 | 0) == ($1 | 0)) break;
  $5 = $3 + -4 | 0;
  HEAP32[$2 >> 2] = $5;
  $3 = $5;
 }
 $6 = HEAP32[$this >> 2] | 0;
 do if ($6) {
  $9 = HEAP32[$this + 16 >> 2] | 0;
  if (($9 | 0) == ($6 | 0)) {
   HEAP8[$9 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv($6);
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this, $low, $high, $vec) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $vec = $vec | 0;
 var $$0 = 0, $$01 = 0, $10 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $vec;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$01 >> 2] | 0;
  if ($4 >>> 0 < 128) $10 = HEAPU16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($4 << 1) >> 1] | 0; else $10 = 0;
  HEAP16[$$0 >> 1] = $10;
  $$0 = $$0 + 2 | 0;
  $$01 = $$01 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $19 = 0, $21 = 0, $4 = 0, $7 = 0;
 __THREW__ = 0;
 $0 = invoke_i(1) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $21 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($21);
 }
 if ($0) {
  $4 = HEAP32[$0 >> 2] | 0;
  if ($4) {
   $7 = $4 + 48 | 0;
   if ((HEAP32[$7 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$7 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$4 + 12 >> 2] | 0);
  }
 }
 $19 = HEAP32[10174] | 0;
 HEAP32[10174] = $19 + 0;
 __ZSt11__terminatePFvvE($19);
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i$i = 0, $1 = 0;
 if ($__n >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $1 = $this + 128 | 0;
 if ($__n >>> 0 < 29 & (HEAP8[$1 >> 0] | 0) == 0) {
  HEAP8[$1 >> 0] = 1;
  $$0$i$i = $this + 16 | 0;
 } else $$0$i$i = __Znwj($__n << 2) | 0;
 HEAP32[$this + 4 >> 2] = $$0$i$i;
 HEAP32[$this >> 2] = $$0$i$i;
 HEAP32[$this + 8 >> 2] = $$0$i$i + ($__n << 2);
 return;
}

function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $$0$lcssa = 0, $1 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0 >> 2] | 0;
  if ($1 >>> 0 >= 128) {
   $$0$lcssa = $$0;
   break;
  }
  if (!((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16)) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function __Znwj($size) {
 $size = $size | 0;
 var $$lcssa = 0, $$size = 0, $1 = 0, $3 = 0, $5 = 0, label = 0;
 $$size = ($size | 0) == 0 ? 1 : $size;
 while (1) {
  $1 = _malloc($$size) | 0;
  if ($1) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = __ZSt15get_new_handlerv() | 0;
  if (!$3) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 7]();
 }
 if ((label | 0) == 5) {
  $5 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$5 >> 2] = 41072;
  ___cxa_throw($5 | 0, 41120, 77);
 } else if ((label | 0) == 6) return $$lcssa | 0;
 return 0;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $7 = 0, $9 = 0;
 HEAP32[$this >> 2] = 48056;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 __THREW__ = 0;
 $2 = invoke_i(2) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if (!($3 & 1)) {
  if (($1 | 0) != ($2 | 0)) {
   __THREW__ = 0;
   invoke_vi(188, HEAP32[$0 >> 2] | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
  }
  return;
 } while (0);
 $9 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($9);
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
 return;
}

function ___string_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $0 = 0, $1 = 0, $11 = 0, $2 = 0, $3 = 0, $k$0 = 0, $k$0$len = 0;
 $0 = $f + 84 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $len + 256 | 0;
 $3 = _memchr($1, 0, $2) | 0;
 if (!$3) $k$0 = $2; else $k$0 = $3 - $1 | 0;
 $k$0$len = $k$0 >>> 0 < $len >>> 0 ? $k$0 : $len;
 _memcpy($buf | 0, $1 | 0, $k$0$len | 0) | 0;
 HEAP32[$f + 4 >> 2] = $1 + $k$0$len;
 $11 = $1 + $k$0 | 0;
 HEAP32[$f + 8 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 return $k$0$len | 0;
}

function ___towrite($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = HEAP32[$f >> 2] | 0;
 if (!($6 & 8)) {
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $13 = HEAP32[$f + 44 >> 2] | 0;
  HEAP32[$f + 28 >> 2] = $13;
  HEAP32[$f + 20 >> 2] = $13;
  HEAP32[$f + 16 >> 2] = $13 + (HEAP32[$f + 48 >> 2] | 0);
  $$0 = 0;
  return $$0 | 0;
 } else {
  HEAP32[$f >> 2] = $6 | 32;
  $$0 = -1;
  return $$0 | 0;
 }
 return 0;
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 572;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 612;
 HEAP32[$0 + 8 >> 2] = 592;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $0 = 0, $12 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 31]($0, $this, $code);
 if ((HEAP32[$0 + 4 >> 2] | 0) == (HEAP32[$condition + 4 >> 2] | 0)) $12 = (HEAP32[$0 >> 2] | 0) == (HEAP32[$condition >> 2] | 0); else $12 = 0;
 STACKTOP = sp;
 return $12 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var $1 = 0, $11 = 0, $12 = 0;
 if (($this | 0) != ($__str | 0)) {
  $1 = HEAP8[$__str >> 0] | 0;
  if (!($1 & 1)) {
   $11 = $__str + 1 | 0;
   $12 = ($1 & 255) >>> 1;
  } else {
   $11 = HEAP32[$__str + 8 >> 2] | 0;
   $12 = HEAP32[$__str + 4 >> 2] | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $11, $12) | 0;
 }
 return $this | 0;
}

function dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 a12 = a12 | 0;
 a13 = a13 | 0;
 a14 = a14 | 0;
 a15 = a15 | 0;
 FUNCTION_TABLE_viiiiiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0, a12 | 0, a13 | 0, a14 | 0, a15 | 0);
}

function __ZNSt3__18ios_base4initEPv($this, $sb) {
 $this = $this | 0;
 $sb = $sb | 0;
 var $8 = 0, dest = 0, stop = 0;
 HEAP32[$this + 24 >> 2] = $sb;
 HEAP32[$this + 16 >> 2] = ($sb | 0) == 0 & 1;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 4098;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 6;
 $8 = $this + 28 | 0;
 dest = $this + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__16localeC2Ev($8);
 return;
}

function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[48752] | 0)) if (___cxa_guard_acquire(48752) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 48736, 48760, 11);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(48752);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 48736, ___dso_handle | 0) | 0;
   ___cxa_guard_release(48752);
   break;
  }
 } while (0);
 return 48736;
}

function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[48592] | 0)) if (___cxa_guard_acquire(48592) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 48576, 48600, 20);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(48592);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 48576, ___dso_handle | 0) | 0;
   ___cxa_guard_release(48592);
   break;
  }
 } while (0);
 return 48576;
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 572;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 612;
 HEAP32[$0 + 8 >> 2] = 592;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[48384] | 0)) if (___cxa_guard_acquire(48384) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 48368, 48392, 8);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(48384);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 48368, ___dso_handle | 0) | 0;
   ___cxa_guard_release(48384);
   break;
  }
 } while (0);
 return 48368;
}

function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[48488] | 0)) if (___cxa_guard_acquire(48488) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 48472, 48496, 8);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(48488);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 48472, ___dso_handle | 0) | 0;
   ___cxa_guard_release(48488);
   break;
  }
 } while (0);
 return 48472;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0;
 HEAP32[$this >> 2] = 572;
 $0 = $this + 64 | 0;
 HEAP32[$0 >> 2] = 612;
 HEAP32[$this + 8 >> 2] = 592;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $$0$lcssa = 0, $1 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0 >> 2] | 0;
  if ($1 >>> 0 < 128) if ((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function _vsscanf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $4 = 0, $f = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 dest = $f + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$f + 32 >> 2] = 35;
 HEAP32[$f + 44 >> 2] = $s;
 HEAP32[$f + 76 >> 2] = -1;
 HEAP32[$f + 84 >> 2] = $s;
 $4 = _MUSL_vfscanf($f, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$01 >> 2] | 0;
  HEAP8[$$0 >> 0] = $4 >>> 0 < 128 ? $4 & 255 : $dfault;
  $$0 = $$0 + 1 | 0;
  $$01 = $$01 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $3 = 0, $5 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 do if ($0) {
  $2 = $this + 4 | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if (($3 | 0) == ($0 | 0)) break;
   $5 = $3 + -4 | 0;
   HEAP32[$2 >> 2] = $5;
   $3 = $5;
  }
  if (($this + 16 | 0) == ($0 | 0)) {
   HEAP8[$this + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv($0);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0;
 HEAP32[$this >> 2] = 45512;
 __THREW__ = 0;
 invoke_vii(72, $this | 0, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if ($0 & 1) {
  $11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($11);
 } else {
  __ZNSt3__16localeD2Ev($this + 28 | 0);
  _free(HEAP32[$this + 32 >> 2] | 0);
  _free(HEAP32[$this + 36 >> 2] | 0);
  _free(HEAP32[$this + 48 >> 2] | 0);
  _free(HEAP32[$this + 60 >> 2] | 0);
  return;
 }
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0;
 HEAP32[$this >> 2] = 572;
 $0 = $this + 64 | 0;
 HEAP32[$0 >> 2] = 612;
 HEAP32[$this + 8 >> 2] = 592;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $2 = 0, $4 = 0, $8 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) $8 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($4 << 2) >> 2] | 0; else $8 = $4;
  HEAP32[$$0 >> 2] = $8;
  $$0 = $$0 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $2 = 0, $4 = 0, $8 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) $8 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($4 << 2) >> 2] | 0; else $8 = $4;
  HEAP32[$$0 >> 2] = $8;
  $$0 = $$0 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $10 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 41296;
 if (!(HEAP8[$msg >> 0] & 1)) $7 = $msg + 1 | 0; else $7 = HEAP32[$msg + 8 >> 2] | 0;
 __THREW__ = 0;
 invoke_vii(109, $this + 4 | 0, $7 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  ___resumeException($10 | 0);
 } else return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 if (!(HEAP8[$__str >> 0] & 1)) {
  HEAP32[$this + 0 >> 2] = HEAP32[$__str + 0 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$__str + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$__str + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, HEAP32[$__str + 8 >> 2] | 0, HEAP32[$__str + 4 >> 2] | 0);
 return;
}

function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $6 = 0, $8 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 __THREW__ = 0;
 $1 = invoke_i(2) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if (!($2 & 1)) {
  if (($0 | 0) != ($1 | 0)) {
   __THREW__ = 0;
   invoke_vi(188, HEAP32[$this >> 2] | 0);
   $6 = __THREW__;
   __THREW__ = 0;
   if ($6 & 1) break;
  }
  return;
 } while (0);
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function ___cxa_can_catch($catchType, $excpType, $thrown) {
 $catchType = $catchType | 0;
 $excpType = $excpType | 0;
 $thrown = $thrown | 0;
 var $4 = 0, $temp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $temp = sp;
 HEAP32[$temp >> 2] = HEAP32[$thrown >> 2];
 $4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$catchType >> 2] | 0) + 16 >> 2] & 63]($catchType, $excpType, $temp) | 0;
 if ($4) HEAP32[$thrown >> 2] = HEAP32[$temp >> 2];
 STACKTOP = sp;
 return $4 & 1 | 0;
}

function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $3 = 0, $4 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0;
 $__h$0 = 0;
 $__p$0 = $__lo;
 while (1) {
  if (($__p$0 | 0) == ($__hi | 0)) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $3 = (HEAP32[$__p$0 >> 2] | 0) + ($__h$0 << 4) | 0;
  $4 = $3 & -268435456;
  $__h$0 = ($4 >>> 24 | $4) ^ $3;
  $__p$0 = $__p$0 + 4 | 0;
 }
 return $__h$0$lcssa | 0;
}

function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $4 = 0, $5 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0;
 $__h$0 = 0;
 $__p$0 = $__lo;
 while (1) {
  if (($__p$0 | 0) == ($__hi | 0)) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $4 = (HEAP8[$__p$0 >> 0] | 0) + ($__h$0 << 4) | 0;
  $5 = $4 & -268435456;
  $__h$0 = ($5 >>> 24 | $5) ^ $4;
  $__p$0 = $__p$0 + 1 | 0;
 }
 return $__h$0$lcssa | 0;
}

function __ZNSt3__16__clocEv() {
 var $4 = 0, $5 = 0, $8 = 0;
 do if (!(HEAP8[47864] | 0)) if (___cxa_guard_acquire(47864) | 0) {
  __THREW__ = 0;
  $4 = invoke_iiii(36, 2147483647, 47872, 0) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $8 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(47864);
   ___resumeException($8 | 0);
  } else {
   HEAP32[11964] = $4;
   ___cxa_guard_release(47864);
   break;
  }
 } while (0);
 return HEAP32[11964] | 0;
}

function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[ptr + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[ptr + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[ptr + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[ptr + 7 >> 0];
}

function ___shlim($f, $lim) {
 $f = $f | 0;
 $lim = $lim | 0;
 var $$sink = 0, $12 = 0, $2 = 0, $4 = 0, $7 = 0;
 HEAP32[$f + 104 >> 2] = $lim;
 $2 = HEAP32[$f + 8 >> 2] | 0;
 $4 = HEAP32[$f + 4 >> 2] | 0;
 $7 = $2 - $4 | 0;
 HEAP32[$f + 108 >> 2] = $7;
 if (!(($lim | 0) != 0 & ($7 | 0) > ($lim | 0))) {
  $$sink = $2;
  $12 = $f + 100 | 0;
  HEAP32[$12 >> 2] = $$sink;
  return;
 }
 $$sink = $4 + $lim | 0;
 $12 = $f + 100 | 0;
 HEAP32[$12 >> 2] = $$sink;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp | 0;
 var $$field = 0, $$field2 = 0, $0 = 0, $10 = 0, $3 = 0;
 $0 = $__vp + 4 | 0;
 $$field = HEAP32[$0 >> 2] | 0;
 $$field2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = (HEAP32[$__vp >> 2] | 0) + ($$field2 >> 1) | 0;
 if (!($$field2 & 1)) $10 = $$field; else $10 = HEAP32[(HEAP32[$3 >> 2] | 0) + $$field >> 2] | 0;
 FUNCTION_TABLE_vi[$10 & 255]($3);
 return;
}

function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $1 = 0, $7 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $1 = HEAP8[$$0 >> 0] | 0;
  if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
  HEAP8[$$0 >> 0] = $7;
  $$0 = $$0 + 1 | 0;
 }
 return $high | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $1 = 0, $7 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $1 = HEAP8[$$0 >> 0] | 0;
  if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
  HEAP8[$$0 >> 0] = $7;
  $$0 = $$0 + 1 | 0;
 }
 return $high | 0;
}

function __ZN17ObjectCompositionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0, $1 = 0;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  $1 = HEAP8[$$01 >> 0] | 0;
  HEAP8[$$0 >> 0] = $1 << 24 >> 24 > -1 ? $1 : $dfault;
  $$0 = $$0 + 1 | 0;
  $$01 = $$01 + 1 | 0;
 }
 return $high | 0;
}

function __ZN14LiteralBooleanD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $4 = 0;
 $0 = $this + 8 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  if (!$1) $4 = 0; else {
   HEAP32[$1 >> 2] = 0;
   $4 = HEAP32[$0 >> 2] | 0;
  }
  $1 = $4 + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZN13LiteralNumberD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN11LiteralNullD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN11ConditionalD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this, $ev) {
 $this = $this | 0;
 $ev = $ev | 0;
 var $2 = 0, $3 = 0, $5 = 0, $i$0 = 0;
 $2 = $this + 32 | 0;
 $3 = $this + 36 | 0;
 $i$0 = HEAP32[$this + 40 >> 2] | 0;
 while (1) {
  if (!$i$0) break;
  $5 = $i$0 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$2 >> 2] | 0) + ($5 << 2) >> 2] & 31]($ev, $this, HEAP32[(HEAP32[$3 >> 2] | 0) + ($5 << 2) >> 2] | 0);
  $i$0 = $5;
 }
 return;
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(71, $0 | 0, 45104);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 41416;
  ___cxa_throw($0 | 0, 41456, 79);
 }
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(71, $0 | 0, 45104);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 41352;
  ___cxa_throw($0 | 0, 41392, 79);
 }
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(71, $0 | 0, 47848);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 41352;
  ___cxa_throw($0 | 0, 41392, 79);
 }
}

function __ZNSt3__16locale8__globalEv() {
 var $4 = 0, $7 = 0;
 do if (!(HEAP8[47944] | 0)) if (___cxa_guard_acquire(47944) | 0) {
  __THREW__ = 0;
  invoke_i(4) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(47944);
   ___resumeException($7 | 0);
  } else {
   HEAP32[11984] = 47928;
   ___cxa_guard_release(47944);
   break;
  }
 } while (0);
 return HEAP32[11984] | 0;
}

function __ZNSt3__16locale7classicEv() {
 var $4 = 0, $7 = 0;
 do if (!(HEAP8[47920] | 0)) if (___cxa_guard_acquire(47920) | 0) {
  __THREW__ = 0;
  invoke_i(3) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(47920);
   ___resumeException($7 | 0);
  } else {
   HEAP32[11978] = 47904;
   ___cxa_guard_release(47920);
   break;
  }
 } while (0);
 return HEAP32[11978] | 0;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
 return;
}

function __ZN6BinaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5UnaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5SuperD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5IndexD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5ErrorD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 40108;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 40128;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $4 = 0;
 $0 = $this + 4 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  if (!$1) $4 = 0; else {
   HEAP32[$1 >> 2] = 0;
   $4 = HEAP32[$0 >> 2] | 0;
  }
  $1 = $4 + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $0 = 0, $1 = 0, $2 = 0, $4 = 0;
 $0 = _strlen($__s | 0) | 0;
 __THREW__ = 0;
 $1 = invoke_iiiiii(14, $this | 0, 0, -1, $__s | 0, $0 | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return $1 | 0;
 return 0;
}

function __ZN4SelfD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN3VarD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN3ASTD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $__wch = $__wch | 0;
 var $4 = 0;
 $4 = $__sp + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] & 31]($agg$result, $this, HEAP32[$4 >> 2] | 0, HEAP32[$4 + 4 >> 2] | 0, 0, $__wch);
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNSt3__18numpunctIwEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0, $__i$0$i$i = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 48176;
 HEAP32[$this + 8 >> 2] = 46;
 HEAP32[$this + 12 >> 2] = 44;
 $4 = $this + 16 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$4 + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__18numpunctIcEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0, $__i$0$i$i = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 48136;
 HEAP8[$this + 8 >> 0] = 46;
 HEAP8[$this + 9 >> 0] = 44;
 $4 = $this + 12 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$4 + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZN3ASTD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 33968;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48040) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 48032) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function _copysign($x, $y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $6 = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $6 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $1 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $0;
 HEAP32[tempDoublePtr + 4 >> 2] = $6;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $2 = 0, $3 = 0, $6 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 48056;
 __THREW__ = 0;
 $2 = invoke_i(2) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___resumeException($6 | 0);
 } else {
  HEAP32[$this + 8 >> 2] = $2;
  return;
 }
}

function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this | 0;
 var $__p$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p$i = sp;
 if ((HEAP32[$this >> 2] | 0) != -1) {
  HEAP32[$__p$i >> 2] = $this;
  HEAP32[$__p$i + 4 >> 2] = 191;
  HEAP32[$__p$i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this, $__p$i, 192);
 }
 STACKTOP = sp;
 return (HEAP32[$this + 4 >> 2] | 0) + -1 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function ___uflow($f) {
 $f = $f | 0;
 var $$0 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 if (!(HEAP32[$f + 8 >> 2] | 0)) if (!(___toread($f) | 0)) label = 3; else $$0 = -1; else label = 3;
 if ((label | 0) == 3) if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 63]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 40108;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 40128;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 return;
}

function dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 return FUNCTION_TABLE_iiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0) | 0;
}

function _jsonnet_make() {
 var $0 = 0, $6 = 0;
 $0 = __Znwj(48) | 0;
 HEAPF64[$0 >> 3] = 2.0;
 HEAP32[$0 + 8 >> 2] = 500;
 HEAP32[$0 + 12 >> 2] = 1e3;
 HEAP8[$0 + 16 >> 0] = 0;
 HEAP32[$0 + 20 >> 2] = 20;
 $6 = $0 + 28 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$0 + 32 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = $6;
 HEAP32[$0 + 36 >> 2] = 10;
 HEAP32[$0 + 40 >> 2] = $0;
 HEAP8[$0 + 44 >> 0] = 0;
 return $0 | 0;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(74, $0 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else ___cxa_throw($0 | 0, 41496, 81);
}

function __ZNSt3__16localeC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(5) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  $3 = HEAP32[$0 >> 2] | 0;
  HEAP32[$this >> 2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}

function __ZN12_GLOBAL__N_19HeapArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 39968;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) {
  __ZdlPv($this);
  return;
 }
 $4 = $this + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $7 = 0, $8 = 0;
 if (!(HEAP8[$__nm >> 0] & 1)) $7 = $__nm + 1 | 0; else $7 = HEAP32[$__nm + 8 >> 2] | 0;
 $8 = _catopen($7 | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $7 = 0, $8 = 0;
 if (!(HEAP8[$__nm >> 0] & 1)) $7 = $__nm + 1 | 0; else $7 = HEAP32[$__nm + 8 >> 2] | 0;
 $8 = _catopen($7 | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  HEAP8[$$0 >> 0] = HEAP8[$$01 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $$01 = $$01 + 1 | 0;
 }
 return $high | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 4;
  $$0 = HEAP32[$6 >> 2] | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 1;
  $$0 = HEAPU8[$6 >> 0] | 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  HEAP32[$$0 >> 2] = HEAP8[$$01 >> 0];
  $$0 = $$0 + 4 | 0;
  $$01 = $$01 + 1 | 0;
 }
 return $high | 0;
}

function __ZNKSt3__119__iostream_category7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 if (($ev | 0) != 1 & ($ev | 0) < 257) __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 45424, 35);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 45192;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 + 0 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 45128;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 + 0 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function dynCall_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 FUNCTION_TABLE_viiiiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0);
}

function __ZNSt3__118__libcpp_refstringC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $0 = 0, $2 = 0, $5 = 0;
 $0 = _strlen($msg | 0) | 0;
 $2 = __Znwj($0 + 13 | 0) | 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$2 + 4 >> 2] = $0;
 HEAP32[$2 + 8 >> 2] = 0;
 $5 = $2 + 12 | 0;
 _memcpy($5 | 0, $msg | 0, $0 + 1 | 0) | 0;
 HEAP32[$this >> 2] = $5;
 return;
}

function __ZNKSt3__16locale5__imp9use_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $1 = 0;
 if (__ZNKSt3__16locale5__imp9has_facetEl($this, $id) | 0) return HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($id << 2) >> 2] | 0; else {
  $1 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw($1 | 0, 41592, 85);
 }
 return 0;
}

function __ZN12_GLOBAL__N_19HeapThunkD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39552;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function _wmemcpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$014 = 0, $$023 = 0, $$05 = 0;
 if (!$n) return $d | 0;
 $$014 = $n;
 $$023 = $s;
 $$05 = $d;
 while (1) {
  $$014 = $$014 + -1 | 0;
  HEAP32[$$05 >> 2] = HEAP32[$$023 >> 2];
  if (!$$014) break; else {
   $$023 = $$023 + 4 | 0;
   $$05 = $$05 + 4 | 0;
  }
 }
 return $d | 0;
}

function dynCall_viiiiiddiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 FUNCTION_TABLE_viiiiiddiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6, +a7, a8 | 0, a9 | 0, a10 | 0);
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function _sn_write($f, $s, $l) {
 $f = $f | 0;
 $s = $s | 0;
 $l = $l | 0;
 var $2 = 0, $3 = 0, $6 = 0, $l$ = 0;
 $2 = $f + 20 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $6 = (HEAP32[$f + 16 >> 2] | 0) - $3 | 0;
 $l$ = $6 >>> 0 > $l >>> 0 ? $l : $6;
 _memcpy($3 | 0, $s | 0, $l$ | 0) | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $l$;
 return $l | 0;
}

function __ZN12_GLOBAL__N_19HeapThunkD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39552;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_19HeapArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 39968;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) return;
 $4 = $this + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function _abort_message($format, $varargs) {
 $format = $format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $list = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $list = sp;
 HEAP32[$list >> 2] = $varargs;
 $0 = HEAP32[_stderr >> 2] | 0;
 _vfprintf($0 | 0, $format | 0, $list | 0) | 0;
 _fputc(10, $0 | 0) | 0;
 _abort();
}

function __ZNSt13runtime_errorC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$this >> 2] = 41296;
 __THREW__ = 0;
 invoke_vii(109, $this + 4 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___resumeException($3 | 0);
 } else return;
}

function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP32[$this >> 2] = 40108;
 $0 = $this + 108 | 0;
 HEAP32[$0 >> 2] = 40128;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($this);
 return;
}

function _jsonnet_realloc($vm, $str, $sz) {
 $vm = $vm | 0;
 $str = $str | 0;
 $sz = $sz | 0;
 var $$0 = 0, $1 = 0;
 $1 = ($sz | 0) == 0;
 do if (!$str) if ($1) $$0 = 0; else $$0 = _malloc($sz) | 0; else if ($1) {
  _free($str);
  $$0 = 0;
  break;
 } else {
  $$0 = _realloc($str, $sz) | 0;
  break;
 } while (0);
 return $$0 | 0;
}

function __ZNSt11logic_errorC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$this >> 2] = 41272;
 __THREW__ = 0;
 invoke_vii(109, $this + 4 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___resumeException($3 | 0);
 } else return;
}

function _jsonnet_destroy($vm) {
 $vm = $vm | 0;
 if (!$vm) return;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($vm + 24 | 0, HEAP32[$vm + 28 >> 2] | 0);
 __ZdlPv($vm);
 return;
}

function dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 FUNCTION_TABLE_viiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}

function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $1 + -1;
 if (!$1) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 255]($this);
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP32[$this >> 2] = 40108;
 $0 = $this + 108 | 0;
 HEAP32[$0 >> 2] = 40128;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function b8(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 p11 = p11 | 0;
 p12 = p12 | 0;
 p13 = p13 | 0;
 p14 = p14 | 0;
 abort(8);
}

function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $5 = 0;
 if ((HEAP32[$code + 4 >> 2] | 0) == ($this | 0)) $5 = (HEAP32[$code >> 2] | 0) == ($condition | 0); else $5 = 0;
 return $5 | 0;
}

function __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 var $0 = 0;
 $0 = _strerror($ev | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, $0, _strlen($0 | 0) | 0);
 return;
}

function _snprintf($s, $n, $fmt, $varargs) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsnprintf($s, $n, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($this, $__pos, $__s) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 FUNCTION_TABLE_viiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}

function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(7) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(8) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function __ZNKSt3__16locale5__imp9has_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $3 = 0;
 $3 = HEAP32[$this + 8 >> 2] | 0;
 if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $12 = (HEAP32[$3 + ($id << 2) >> 2] | 0) != 0; else $12 = 0;
 return $12 | 0;
}

function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(6) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function _sscanf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsscanf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _wmemset($d, $c, $n) {
 $d = $d | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$012 = 0, $$03 = 0;
 if (!$n) return $d | 0;
 $$012 = $n;
 $$03 = $d;
 while (1) {
  $$012 = $$012 + -1 | 0;
  HEAP32[$$03 >> 2] = $c;
  if (!$$012) break; else $$03 = $$03 + 4 | 0;
 }
 return $d | 0;
}

function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(40888, 5) | 0)) {
  $3 = _pthread_getspecific(HEAP32[10220] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(40896, sp);
 return 0;
}

function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}

function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0;
 $1 = (HEAP32[$this >> 2] | 0) + -4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $2 + -1;
 if (($2 + -1 | 0) < 0) __ZdlPv((HEAP32[$this >> 2] | 0) + -12 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47760) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47712) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47656) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47576) | 0);
 return;
}

function dynCall_viiiiiid(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 FUNCTION_TABLE_viiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}

function _jsonnet_evaluate_snippet($vm, $filename, $snippet, $error) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 return __ZL28jsonnet_evaluate_snippet_auxP9JsonnetVmPKcS2_Pib($vm, $filename, $snippet, $error, 0) | 0;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47280) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47248) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47016) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(46864) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(46752) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(46656) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(46592) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(46472) | 0);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $end = $end | 0;
 $mx = $mx | 0;
 var $3 = 0;
 $3 = $end - $frm | 0;
 return ($3 >>> 0 < $mx >>> 0 ? $3 : $mx) | 0;
}

function __ZNKSt3__15ctypeIwE5do_isEtw($this, $m, $c) {
 $this = $this | 0;
 $m = $m | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c >>> 0 < 128) $5 = (HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($c << 1) >> 1] & $m) << 16 >> 16 != 0; else $5 = 0;
 return $5 | 0;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($p);
 if (!(_pthread_setspecific(HEAP32[10220] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(41008, sp);
}

function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob | 0;
 var $$0 = 0, $2 = 0;
 $2 = HEAP32[$iob + 4 >> 2] & 74;
 if (!$2) $$0 = 0; else if (($2 | 0) == 8) $$0 = 16; else if (($2 | 0) == 64) $$0 = 8; else $$0 = 10;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c << 24 >> 24 > -1) $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 24 >> 24 << 2) >> 2] & 255; else $5 = $c;
 return $5 | 0;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, _wcslen($__s) | 0) | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c << 24 >> 24 > -1) $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + (($c & 255) << 2) >> 2] & 255; else $5 = $c;
 return $5 | 0;
}

function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
}

function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 48248, _wcslen(48248) | 0);
 return;
}

function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 48216, _wcslen(48216) | 0);
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZNKSt3__15ctypeIwE10do_toupperEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0;
 if ($c >>> 0 < 128) $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($c << 2) >> 2] | 0; else $3 = $c;
 return $3 | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0;
 if ($c >>> 0 < 128) $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 2) >> 2] | 0; else $3 = $c;
 return $3 | 0;
}

function dynCall_viiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 FUNCTION_TABLE_viiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}

function __ZNKSt3__114error_category23default_error_conditionEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 HEAP32[$agg$result >> 2] = $ev;
 HEAP32[$agg$result + 4 >> 2] = $this;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function ___strdup($s) {
 $s = $s | 0;
 var $$0 = 0, $1 = 0, $2 = 0;
 $1 = (_strlen($s | 0) | 0) + 1 | 0;
 $2 = _malloc($1) | 0;
 if (!$2) {
  $$0 = 0;
  return $$0 | 0;
 }
 _memcpy($2 | 0, $s | 0, $1 | 0) | 0;
 $$0 = $2;
 return $$0 | 0;
}

function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 1;
 if (!(HEAP32[$this + 20 >> 2] & 1)) return; else ___cxa_rethrow();
}

function b6(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 abort(6);
 return 0;
}

function __ZNSt3__117iostream_categoryEv() {
 if (!(HEAP8[45472] | 0)) if (___cxa_guard_acquire(45472) | 0) {
  HEAP32[11366] = 46248;
  ___cxa_atexit(113, 45464, ___dso_handle | 0) | 0;
  ___cxa_guard_release(45472);
 }
 return 45464;
}

function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 16 | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 12 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48096) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48104) | 0);
 return;
}

function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 48240, 5);
 return;
}

function __ZN11StaticErrorD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48040) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48032) | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 48208, 4);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZNKSt3__16locale9use_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return __ZNKSt3__16locale5__imp9use_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
}

function __ZNKSt3__16locale9has_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return __ZNKSt3__16locale5__imp9has_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
}

function runPostSets() {}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47536) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47472) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47408) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47344) | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(40880, 186) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(40952, sp);
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48120) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48112) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47840) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47800) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(46400) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(46360) | 0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47960) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(47968) | 0);
 return;
}

function _strcpy(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0;
 do {
  HEAP8[pdest + i >> 0] = HEAP8[psrc + i >> 0];
  i = i + 1 | 0;
 } while (HEAP8[psrc + (i - 1) >> 0] | 0);
 return pdest | 0;
}

function __ZN12_GLOBAL__N_110HeapStringD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39864;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16locale5__imp11make_globalEv() {
 var $1 = 0;
 $1 = HEAP32[(__ZNSt3__16locale7classicEv() | 0) >> 2] | 0;
 HEAP32[11982] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return 47928;
}

function _isxdigit($c) {
 $c = $c | 0;
 var $3 = 0, $4 = 0;
 if (($c + -48 | 0) >>> 0 < 10) {
  $4 = 1;
  $3 = $4 & 1;
  return $3 | 0;
 }
 $4 = (($c | 32) + -97 | 0) >>> 0 < 6;
 $3 = $4 & 1;
 return $3 | 0;
}

function b17(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 abort(17);
}

function _wcslen($s) {
 $s = $s | 0;
 var $$0 = 0, $$0$lcssa = 0;
 $$0 = $s;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) {
  $$0$lcssa = $$0;
  break;
 } else $$0 = $$0 + 4 | 0;
 return $$0$lcssa - $s >> 2 | 0;
}

function __ZNSt3__16localeC2ERKS0_($this, $l) {
 $this = $this | 0;
 $l = $l | 0;
 var $0 = 0;
 $0 = HEAP32[$l >> 2] | 0;
 HEAP32[$this >> 2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0;
 $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
 return $1$0 | 0;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 12) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function b12(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 p6 = +p6;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 abort(12);
}

function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 47984;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if ($1) if (HEAP8[$this + 12 >> 0] | 0) __ZdaPv($1);
 return;
}

function __ZN12_GLOBAL__N_110HeapStringD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 39864;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 return;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 48176;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 return;
}

function b16(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 abort(16);
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 48136;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 45192;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 45128;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function dynCall_viiid(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = +a4;
 FUNCTION_TABLE_viiid[index & 1](a1 | 0, a2 | 0, a3 | 0, +a4);
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function b26(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(26);
 return 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18ios_base6getlocEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__16localeC2ERKS0_($agg$result, $this + 28 | 0);
 return;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + -8 | 0);
 return;
}

function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this | 0;
 if ($this) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 return;
}

function ___cxa_is_pointer_type($type) {
 $type = $type | 0;
 var $3 = 0;
 if (!$type) $3 = 0; else $3 = (___dynamic_cast($type, 41648, 41816, 0) | 0) != 0;
 return $3 & 1 | 0;
}

function _strtoull_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoull($s, $p, $base) | 0;
 return $0 | 0;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[11988] | 0;
 HEAP32[11988] = $0 + 1;
 HEAP32[$this + 4 >> 2] = $0 + 1;
 return;
}

function __ZNKSt3__15ctypeIwE9do_narrowEwc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c >>> 0 < 128 ? $c & 255 : $dfault) | 0;
}

function _strtoll_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoll($s, $p, $base) | 0;
 return $0 | 0;
}

function __ZNKSt3__15ctypeIcE9do_narrowEcc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c << 24 >> 24 > -1 ? $c : $dfault) | 0;
}

function b10(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(10);
}

function dynCall_diii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return +FUNCTION_TABLE_diii[index & 3](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 45192;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 45128;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 31](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNKSt3__18messagesIwE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}

function __ZNKSt3__18messagesIcE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}

function b0(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 __ZdlPv($this);
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41296;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this + 4 | 0);
 return;
}

function __ZNSt11logic_errorD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41272;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this + 4 | 0);
 return;
}

function _catgets__wrapper(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 return _catgets(p0 | 0, p1 | 0, p2 | 0, p3 | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function b14(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(14);
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + -8 + 12 | 0);
 return;
}

function __ZSt17__throw_bad_allocv() {
 var $0 = 0;
 $0 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw($0 | 0, 41120, 77);
}

function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}

function b15(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = +p6;
 abort(15);
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}

function __ZNSt3__16localeD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$this >> 2] | 0) | 0;
 return;
}

function _wctomb($s, $wc) {
 $s = $s | 0;
 $wc = $wc | 0;
 var $$0 = 0;
 if (!$s) $$0 = 0; else $$0 = _wcrtomb($s, $wc, 0) | 0;
 return $$0 | 0;
}

function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr;
 while (HEAP8[curr >> 0] | 0) curr = curr + 1 | 0;
 return curr - ptr | 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function dynCall_iid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return FUNCTION_TABLE_iid[index & 1](a1 | 0, +a2) | 0;
}

function _mbrlen($s, $n, $st) {
 $s = $s | 0;
 $n = $n | 0;
 $st = $st | 0;
 return _mbrtowc(0, $s, $n, ($st | 0) != 0 ? $st : 40680) | 0;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 0) | 0;
}

function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 0) | 0;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 127](a1 | 0, a2 | 0);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __GLOBAL__sub_I_iostream_cpp() {
 __ZNSt3__18ios_base4InitC2Ev(0);
 ___cxa_atexit(187, 44272, ___dso_handle | 0) | 0;
 return;
}

function b11(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(11);
}

function _isspace($c) {
 $c = $c | 0;
 var $4 = 0;
 if (($c | 0) == 32) $4 = 1; else $4 = ($c + -9 | 0) >>> 0 < 5;
 return $4 & 1 | 0;
}

function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function _newlocale__wrapper(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 return _newlocale(p0 | 0, p1 | 0, p2 | 0) | 0;
}

function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 1) | 0;
}

function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 1) | 0;
}

function _mbsinit($st) {
 $st = $st | 0;
 var $4 = 0;
 if (!$st) $4 = 1; else $4 = (HEAP32[$st >> 2] | 0) == 0;
 return $4 & 1 | 0;
}

function __ZNSt3__16locale5__imp12make_classicEv() {
 __ZNSt3__16locale5__impC2Ej(52312, 1);
 HEAP32[11976] = 52312;
 return 47904;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function b9(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(9);
}

function _do_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 return ___string_read($f, $buf, $len) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_vid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 FUNCTION_TABLE_vid[index & 1](a1 | 0, +a2);
}

function b19(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(19);
 return 0;
}

function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}

function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function ___cxa_throw__wrapper(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 ___cxa_throw(p0 | 0, p1 | 0, p2 | 0);
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this | 0;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt12length_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt11logic_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 127](a1 | 0) | 0;
}

function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 12 >> 2] | 0;
}

function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}

function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}

function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 9 >> 0] | 0;
}

function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 8 >> 0] | 0;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[10308] | 0;
 HEAP32[10308] = $0 + 0;
 return $0 | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c << 24 >> 24 | 0;
}

function b1(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(1);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}

function b22(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(22);
 return 0;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _pthread_cond_broadcast__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_cond_broadcast(p0 | 0) | 0;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__15ctypeIcE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c | 0;
}

function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}

function __ZN12_GLOBAL__N_115HeapSuperObjectD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _pthread_mutex_unlock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_unlock(p0 | 0) | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt11logic_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function b27(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(27);
}

function _pthread_mutex_lock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_lock(p0 | 0) | 0;
}

function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function _isdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return ($c + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNSt9bad_allocC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41072;
 return;
}

function b23(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = +p3;
 abort(23);
}

function __ZNSt8bad_castC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41520;
 return;
}

function b20(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(20);
 return 0.0;
}

function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this | 0;
 return 45408;
}

function dynCall_i(index) {
 index = index | 0;
 return FUNCTION_TABLE_i[index & 15]() | 0;
}

function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}

function b7(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(7);
 return 0;
}

function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _isxdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return _isxdigit($c) | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt8bad_castD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _copysignl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_copysign($x, $y));
}

function _scalbnl($x, $n) {
 $x = +$x;
 $n = $n | 0;
 return +(+_scalbn($x, $n));
}

function __ZN12_GLOBAL__N_110HeapEntityD2Ev($this) {
 $this = $this | 0;
 return;
}

function b24(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(24);
}

function _uselocale__wrapper(p0) {
 p0 = p0 | 0;
 return _uselocale(p0 | 0) | 0;
}

function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 7]();
}

function _frexpl($x, $e) {
 $x = +$x;
 $e = $e | 0;
 return +(+_frexp($x, $e));
}

function _strerror__wrapper(p0) {
 p0 = p0 | 0;
 return _strerror(p0 | 0) | 0;
}

function ___ctype_toupper_loc__wrapper() {
 return ___ctype_toupper_loc() | 0;
}

function ___ctype_tolower_loc__wrapper() {
 return ___ctype_tolower_loc() | 0;
}

function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 41088;
}

function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this | 0;
 return 41536;
}

function _fmodl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_fmod($x, $y));
}

function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this | 0;
 return;
}

function b18(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(18);
 return 0;
}

function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function _freelocale__wrapper(p0) {
 p0 = p0 | 0;
 _freelocale(p0 | 0);
}

function __Znaj($size) {
 $size = $size | 0;
 return __Znwj($size) | 0;
}

function b13(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(13);
 return 0;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZdaPv($ptr) {
 $ptr = $ptr | 0;
 __ZdlPv($ptr);
 return;
}

function __ZNSt9type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9exceptionD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}

function ___ctype_b_loc__wrapper() {
 return ___ctype_b_loc() | 0;
}

function __ZNSt8bad_castD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 _free($ptr);
 return;
}

function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function b4(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(4);
}

function ___cxa_end_catch__wrapper() {
 ___cxa_end_catch();
}

function b2(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(2);
}

function ___cxa_rethrow__wrapper() {
 ___cxa_rethrow();
}

function b5(p0) {
 p0 = p0 | 0;
 abort(5);
 return 0;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b3(p0) {
 p0 = p0 | 0;
 abort(3);
}

function b21() {
 abort(21);
 return 0;
}

function _abort__wrapper() {
 _abort();
}

function b25() {
 abort(25);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0];
var FUNCTION_TABLE_viiiii = [b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj,__ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj,__ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE];
var FUNCTION_TABLE_vid = [b2,__Z22jsonnet_unparse_numberd];
var FUNCTION_TABLE_vi = [b3,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZN15BuiltinFunctionD2Ev,__ZN15BuiltinFunctionD0Ev,__ZN3ASTD2Ev,__ZN3ASTD0Ev,__ZN13LiteralStringD2Ev,__ZN13LiteralStringD0Ev
,__ZN5LocalD2Ev,__ZN5LocalD0Ev,__ZN3VarD0Ev,__ZN6BinaryD0Ev,__ZN5SuperD0Ev,__ZN5IndexD0Ev,__ZN17ObjectCompositionD0Ev,__ZN6ObjectD2Ev,__ZN6ObjectD0Ev,__ZN4SelfD0Ev,__ZN5ApplyD2Ev,__ZN5ApplyD0Ev,__ZN9ImportstrD2Ev,__ZN9ImportstrD0Ev,__ZN6ImportD2Ev,__ZN6ImportD0Ev,__ZN14LiteralBooleanD0Ev,__ZN13LiteralNumberD0Ev,__ZN5ArrayD2Ev,__ZN5ArrayD0Ev,__ZN5UnaryD0Ev,__ZN8FunctionD2Ev,__ZN8FunctionD0Ev,__ZN11ConditionalD0Ev,__ZN11LiteralNullD0Ev,__ZN5ErrorD0Ev,__ZN12_GLOBAL__N_15Stack4dumpEv,__ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev,__ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev,__ZN12_GLOBAL__N_19HeapThunkD2Ev
,__ZN12_GLOBAL__N_19HeapThunkD0Ev,__ZN12_GLOBAL__N_110HeapEntityD2Ev,__ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev,__ZN12_GLOBAL__N_115HeapSuperObjectD0Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev,__ZN12_GLOBAL__N_110HeapStringD2Ev,__ZN12_GLOBAL__N_110HeapStringD0Ev,__ZN12_GLOBAL__N_111HeapClosureD2Ev,__ZN12_GLOBAL__N_111HeapClosureD0Ev,__ZN12_GLOBAL__N_19HeapArrayD2Ev,__ZN12_GLOBAL__N_19HeapArrayD0Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev
,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__111__stdoutbufIcED0Ev,__ZNSt3__110__stdinbufIcED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev
,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,__ZN11StaticErrorD2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
,__ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,__ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev,__ZN12RuntimeErrorD2Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev,__Z23jsonnet_static_analysisP3AST,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,__ZNSt3__18ios_base4InitD2Ev,_freelocale__wrapper,__ZNSt3__112__do_nothingEPv,__ZNSt3__121__throw_runtime_errorEPKc,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor108,___cxx_global_array_dtor93,___cxx_global_array_dtor69,___cxx_global_array_dtor45,___cxx_global_array_dtor42,___cxx_global_array_dtor,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,_free,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_vii = [b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv
,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_,__ZNSt3__18ios_base4initEPv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,__ZNKSt3__18ios_base6getlocEv,__ZNSt3__18ios_base5clearEj,__Z20jsonnet_builtin_declm,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token,__ZL7unparsePK3AST,__Z22jsonnet_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEEC2ERKS6_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEEC2ERKS5_
,__ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_,__ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST,__ZN12_GLOBAL__N_18type_strENS_5Value4TypeE,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb,__ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE,__ZN12_GLOBAL__N_15Stack4markERNS_4HeapE,__ZL10bop_string8BinaryOp,__ZL10uop_string7UnaryOp,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_,__Z23jsonnet_unparse_jsonnetPK3AST,_abort_message,__ZNSt11logic_errorC2EPKc,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_,__ZNSt13runtime_errorC2EPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,__ZNSt3__118__libcpp_refstringC2EPKc,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_ii = [b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt11logic_error4whatEv,__ZNKSt13runtime_error4whatEv,__ZNKSt8bad_cast4whatEv,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNKSt3__119__iostream_category4nameEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv
,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv
,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,__Znwj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv,__ZN5Token8toStringENS_4KindE,_strerror__wrapper,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv,_uselocale__wrapper,_wcslen,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiiiiiiii = [b6,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b6];
var FUNCTION_TABLE_iiii = [b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j,__ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,__ZN9Allocator4makeI13LiteralStringJ13LocationRangeNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpT0_,__ZN12_GLOBAL__N_16Parser5parseEij
,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc,__ZN9Allocator4makeI13LiteralStringJ13LocationRangePKcEEEPT_DpT0_,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,__ZN9Allocator4makeI5ArrayJ13LocationRangeNSt3__16vectorIP3ASTNS3_9allocatorIS6_EEEEEEEPT_DpT0_,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_,__Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,_do_read,_newlocale__wrapper,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,_wcrtomb,_mbtowc,_mbrlen,_vasprintf,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b8,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b8];
var FUNCTION_TABLE_viiiiid = [b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiii = [b10,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b10];
var FUNCTION_TABLE_viiiiii = [b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE,__ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_viiiiiddiii = [b12,__Z24jsonnet_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b,__Z18jsonnet_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b,b12];
var FUNCTION_TABLE_iid = [b13,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd];
var FUNCTION_TABLE_viiiiiii = [b14,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,__ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_viiiiiid = [b15,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b15];
var FUNCTION_TABLE_viiiiiiiii = [b16,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b16];
var FUNCTION_TABLE_viiiiiiiiii = [b17,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b17,b17,b17];
var FUNCTION_TABLE_iii = [b18,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,__ZNKSt3__16locale9use_facetERNS0_2idE,__ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc,__ZN12_GLOBAL__N_16Parser13parseTerminalEj
,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl,__ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierDniDnEEEPT_DpT0_,__ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEEixERSD_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange,__ZNKSt3__16locale9has_facetERNS0_2idE,_isxdigit_l,_isdigit_l,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_iiiiii = [b19,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_,__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj,_wcsnrtombs,_mbsnrtowcs,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19];
var FUNCTION_TABLE_diii = [b20,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj];
var FUNCTION_TABLE_i = [b21,___cxa_get_globals_fast,__ZNSt3__16__clocEv,__ZNSt3__16locale5__imp12make_classicEv,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,___ctype_b_loc__wrapper,___ctype_toupper_loc__wrapper,___ctype_tolower_loc__wrapper,b21,b21,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_iiiii = [b22,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,__ZN9Allocator4makeI8FunctionJ13LocationRangeNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEEP3ASTEEEPT_DpT0_,__ZN9Allocator4makeI5ApplyJ13LocationRangeP3ASTNSt3__16vectorIS4_NS5_9allocatorIS4_EEEEEEEPT_DpT0_,__ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier,__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_,__ZL23default_import_callbackPvPKcS1_Pi,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,_mbsrtowcs,_catgets__wrapper,_mbrtowc,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22];
var FUNCTION_TABLE_viiid = [b23,__ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged];
var FUNCTION_TABLE_viii = [b24,__ZNKSt3__114error_category23default_error_conditionEi,__ZNKSt3__119__iostream_category7messageEi,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,___cxa_throw__wrapper,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,__ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj,__ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE,__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_,__ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange,__ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE,__ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_,__ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24];
var FUNCTION_TABLE_v = [b25,__ZL25default_terminate_handlerv,___cxa_end_catch__wrapper,_abort__wrapper,___cxa_rethrow__wrapper,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,__ZSt17__throw_bad_allocv,b25];
var FUNCTION_TABLE_iiiiiiiii = [b26,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b26,b26,b26,b26,b26,b26,b26];
var FUNCTION_TABLE_viiii = [b27,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,__Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location,__ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_,__ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj,__ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj,__ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE,__ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueIRKNS_4pairIKS7_S7_EEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEEOT_,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb,b27,b27,b27,b27,b27,b27,b27,b27,b27
,b27,b27,b27];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _jsonnet_make: _jsonnet_make, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _jsonnet_realloc: _jsonnet_realloc, _memcpy: _memcpy, _strlen: _strlen, _jsonnet_evaluate_snippet: _jsonnet_evaluate_snippet, _bitshift64Lshr: _bitshift64Lshr, _jsonnet_destroy: _jsonnet_destroy, _strcpy: _strcpy, _bitshift64Shl: _bitshift64Shl, __GLOBAL__sub_I_parser_cpp: __GLOBAL__sub_I_parser_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vid: dynCall_vid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiid: dynCall_viiiiid, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiddiii: dynCall_viiiiiddiii, dynCall_iid: dynCall_iid, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viiid: dynCall_viiid, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _jsonnet_make = Module["_jsonnet_make"] = asm["_jsonnet_make"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _jsonnet_realloc = Module["_jsonnet_realloc"] = asm["_jsonnet_realloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _jsonnet_evaluate_snippet = Module["_jsonnet_evaluate_snippet"] = asm["_jsonnet_evaluate_snippet"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _jsonnet_destroy = Module["_jsonnet_destroy"] = asm["_jsonnet_destroy"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__sub_I_parser_cpp = Module["__GLOBAL__sub_I_parser_cpp"] = asm["__GLOBAL__sub_I_parser_cpp"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiddiii = Module["dynCall_viiiiiddiii"] = asm["dynCall_viiiiiddiii"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  if (Module['noExitRuntime']) {
    return;
  }

  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  if (Module['onExit']) Module['onExit'](status);

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  abortDecorators.forEach(function(decorator) {
    output = decorator(output, what);
  });
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






